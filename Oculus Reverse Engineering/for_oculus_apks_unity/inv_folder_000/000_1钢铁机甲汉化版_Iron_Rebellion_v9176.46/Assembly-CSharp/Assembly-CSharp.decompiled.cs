using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Photon.Chat;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using Photon.Voice.Unity.UtilityScripts;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.UI;
using UnityEngine.InputSystem.Utilities;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.Interaction.Toolkit.UI;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class ApplicationQuit : MonoBehaviour
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0x105447C", Offset = "0x105447C", VA = "0x105447C")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x1054484", Offset = "0x1054484", VA = "0x1054484")]
	public ApplicationQuit()
	{
	}
}
[Token(Token = "0x2000003")]
public class BulletWizzer : MonoBehaviour
{
	[Token(Token = "0x2000004")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B40", Offset = "0x8D7B40")]
	private sealed class <ShotDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400000A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BulletWizzer <>4__this;

		[Token(Token = "0x400000B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 point;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600000C")]
			[Address(RVA = "0xD487B4", Offset = "0xD487B4", VA = "0xD487B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600000E")]
			[Address(RVA = "0xD487FC", Offset = "0xD487FC", VA = "0xD487FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000009")]
		[Address(RVA = "0xD48690", Offset = "0xD48690", VA = "0xD48690")]
		[DebuggerHidden]
		public <ShotDelay>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600000A")]
		[Address(RVA = "0xD486BC", Offset = "0xD486BC", VA = "0xD486BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600000B")]
		[Address(RVA = "0xD486C0", Offset = "0xD486C0", VA = "0xD486C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600000D")]
		[Address(RVA = "0xD487BC", Offset = "0xD487BC", VA = "0xD487BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioStore wizSound;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoundGenerator soundGen;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cockpit;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D8C58", Offset = "0x8D8C58")]
	public float distanceThreshold;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 wizPoint;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform tempSphere;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x105E810", Offset = "0x105E810", VA = "0x105E810")]
	private Vector3 FindNearestPointOnLine(Vector3 origin, Vector3 end, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x105E8E4", Offset = "0x105E8E4", VA = "0x105E8E4")]
	private float SoundDelay(Vector3 playerPos, Vector3 point, float bulletSpeed)
	{
		return default(float);
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x105E930", Offset = "0x105E930", VA = "0x105E930")]
	public void RecieveShotInfo(Vector3 playerPos, Vector3 hitPos, float bulletSpeed)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x105EB34", Offset = "0x105EB34", VA = "0x105EB34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDF08", Offset = "0x8DDF08")]
	private IEnumerator ShotDelay(Vector3 point, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x105EBD8", Offset = "0x105EBD8", VA = "0x105EBD8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x105EC8C", Offset = "0x105EC8C", VA = "0x105EC8C")]
	public BulletWizzer()
	{
	}
}
[Token(Token = "0x2000005")]
public class ButtonExtension : MonoBehaviour
{
	[Token(Token = "0x600000F")]
	[Address(RVA = "0x105F900", Offset = "0x105F900", VA = "0x105F900")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x105F904", Offset = "0x105F904", VA = "0x105F904")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x105F908", Offset = "0x105F908", VA = "0x105F908")]
	public ButtonExtension()
	{
	}
}
[Token(Token = "0x2000006")]
public class CockpitHitter : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cockpitMover;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D8C6C", Offset = "0x8D8C6C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D8C6C", Offset = "0x8D8C6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8C6C", Offset = "0x8D8C6C")]
	public float recoveryForce;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LoadoutData loadoutData;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WeaponClasses enemy_wpn_class;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WeaponClasses player_wpn_class;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int oscillations;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D8CD8", Offset = "0x8D8CD8")]
	public float oscillationStrength;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8CF4", Offset = "0x8D8CF4")]
	public bool debugHit;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool debugShoot;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool kill;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 debugDirection;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 originalPos;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 hitDirection;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 oscillationMovement;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool isHit;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool startJudder;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	private bool weaponFired;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
	private bool flipOscillation;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isLocked;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float hitTimer;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float judderTimer;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float fireTimer;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int remainingOscillations;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xF96034", Offset = "0xF96034", VA = "0xF96034")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xF9606C", Offset = "0xF9606C", VA = "0xF9606C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xF96258", Offset = "0xF96258", VA = "0xF96258")]
	private void RecoverPosition()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xF9665C", Offset = "0xF9665C", VA = "0xF9665C")]
	private void CalculateOscialltions()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xF96128", Offset = "0xF96128", VA = "0xF96128")]
	private void DoHit()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xF96344", Offset = "0xF96344", VA = "0xF96344")]
	private void DoJudder()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xF9642C", Offset = "0xF9642C", VA = "0xF9642C")]
	private void DoFireShake()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xF96778", Offset = "0xF96778", VA = "0xF96778")]
	private Vector3 OscillationMovement()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xF9651C", Offset = "0xF9651C", VA = "0xF9651C")]
	public void RecieveHit(Vector3 hitDirection, Vector3 hitPoint, int weaponType)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xF965F4", Offset = "0xF965F4", VA = "0xF965F4")]
	public void FireWeapon(int weaponType)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xF967EC", Offset = "0xF967EC", VA = "0xF967EC")]
	public CockpitHitter()
	{
	}
}
[Token(Token = "0x2000007")]
public class CockpitUI : MonoBehaviour
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhotonView photonView;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SphereCollider locoSphere;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8D2C", Offset = "0x8D8D2C")]
	public Image healthBar;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image shieldBar;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8D64", Offset = "0x8D8D64")]
	public Text[] ammoCountersR;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text[] ammoCountersL;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image[] ammoBarsR;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image[] ammoBarsL;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8D9C", Offset = "0x8D8D9C")]
	public Text weaponNameR;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text weaponNameL;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8DD4", Offset = "0x8D8DD4")]
	public SpriteRenderer speedometer;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text speedReadout;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float minYPos;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float maxYPos;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8E0C", Offset = "0x8D8E0C")]
	public Image upThrusterFuel;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image hoverThrusterFuel;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text heightReadout;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float initalJumpTime;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8E44", Offset = "0x8D8E44")]
	public TextMeshProUGUI playerScore;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshProUGUI enemyScore;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshProUGUI roundNum;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image PlayerScoreBar;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image EnemyScoreBar;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Image PlayerPossibleScoreBar;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image EnemyPossibleScoreBar;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Image PlayerPossibleLossBar;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Image EnemyPossibleLossBar;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8E7C", Offset = "0x8D8E7C")]
	public Animator[] CountdownAnimators;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int RoundsToWin;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int ScoreDivider;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float jumpTimer;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool runJumpTimer;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xF96850", Offset = "0xF96850", VA = "0xF96850")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xF968B4", Offset = "0xF968B4", VA = "0xF968B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xF96918", Offset = "0xF96918", VA = "0xF96918")]
	private void Update()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xF96AD0", Offset = "0xF96AD0", VA = "0xF96AD0")]
	public void UpdateScores(int pOneScore, int pTwoScore, int PossibleScore)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xF96E70", Offset = "0xF96E70", VA = "0xF96E70")]
	public void UpdateRoundNumber(int round)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xF96F04", Offset = "0xF96F04", VA = "0xF96F04")]
	public void UpdateHealthUI(float health, float maxHealth, float shield, float maxShield)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xF96FA0", Offset = "0xF96FA0", VA = "0xF96FA0")]
	public void UpdateAmmoCounter(int ammoCount, int maxAmmo, int leftOrRight)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xF9716C", Offset = "0xF9716C", VA = "0xF9716C")]
	public void UpdateSpeedReadout(float speed, float maxSpeed)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xF97274", Offset = "0xF97274", VA = "0xF97274")]
	public void UpdateHoverBar(float currentTime, float hoverTime)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xF97294", Offset = "0xF97294", VA = "0xF97294")]
	public void SetJumpState(bool state)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xF972A4", Offset = "0xF972A4", VA = "0xF972A4")]
	public void StartCountdownUI()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xF97348", Offset = "0xF97348", VA = "0xF97348")]
	public CockpitUI()
	{
	}
}
[Token(Token = "0x2000008")]
public static class ConfigurableJointExtensions
{
	[Token(Token = "0x6000029")]
	[Address(RVA = "0xF98140", Offset = "0xF98140", VA = "0xF98140")]
	public static void SetTargetRotationLocal(this ConfigurableJoint joint, Quaternion targetLocalRotation, Quaternion startLocalRotation)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xF9842C", Offset = "0xF9842C", VA = "0xF9842C")]
	public static void SetTargetRotation(this ConfigurableJoint joint, Quaternion targetWorldRotation, Quaternion startWorldRotation)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xF98240", Offset = "0xF98240", VA = "0xF98240")]
	private static void SetTargetRotationInternal(ConfigurableJoint joint, Quaternion targetRotation, Quaternion startRotation, Space space)
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D7B60", Offset = "0x8D7B60")]
public class ControllerOffset : ScriptableObject
{
	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rightPositionOffset;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rightRotationOffset;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xF99748", Offset = "0xF99748", VA = "0xF99748")]
	public ControllerOffset()
	{
	}
}
[Serializable]
[Token(Token = "0x200000A")]
public class GameData
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float defaultCameraOffset_x;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float defaultCameraOffset_y;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float defaultCameraOffset_z;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float defaultCameraRotationOffset;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool gripOrToggle;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float joystickHeight;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xFA47B8", Offset = "0xFA47B8", VA = "0xFA47B8")]
	public GameData(float DefaultCameraRotationOffset, float x, float y, float z)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xFA4804", Offset = "0xFA4804", VA = "0xFA4804")]
	public GameData(bool GripOrToggle)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xFA480C", Offset = "0xFA480C", VA = "0xFA480C")]
	public GameData(float JoystickHeight)
	{
	}
}
[Serializable]
[Token(Token = "0x200000B")]
public class HackyRecenter : MonoBehaviour
{
	[Token(Token = "0x200000C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7BC0", Offset = "0x8D7BC0")]
	private sealed class <InitialRecenter>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HackyRecenter <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600003D")]
			[Address(RVA = "0xD4AEBC", Offset = "0xD4AEBC", VA = "0xD4AEBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600003F")]
			[Address(RVA = "0xD4AF04", Offset = "0xD4AF04", VA = "0xD4AF04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600003A")]
		[Address(RVA = "0xD4AD7C", Offset = "0xD4AD7C", VA = "0xD4AD7C")]
		[DebuggerHidden]
		public <InitialRecenter>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600003B")]
		[Address(RVA = "0xD4ADA8", Offset = "0xD4ADA8", VA = "0xD4ADA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600003C")]
		[Address(RVA = "0xD4ADAC", Offset = "0xD4ADAC", VA = "0xD4ADAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600003E")]
		[Address(RVA = "0xD4AEC4", Offset = "0xD4AEC4", VA = "0xD4AEC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform vrCamera;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cameraOffset;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform trackingRig;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 DefaultCameraOffset;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float DefaultCameraRotation;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool recenter;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rotOffset;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool debugInitialRecenterCheck;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool debugRecenterCheck;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool initialRecenterDone;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float initialRecenterDelay;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int engagdedButtons;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool recenterReset;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xFA54B0", Offset = "0xFA54B0", VA = "0xFA54B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xFA5548", Offset = "0xFA5548", VA = "0xFA5548")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDFD8", Offset = "0x8DDFD8")]
	private IEnumerator InitialRecenter()
	{
		return null;
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xFA55C0", Offset = "0xFA55C0", VA = "0xFA55C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xFA5624", Offset = "0xFA5624", VA = "0xFA5624")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xFA5874", Offset = "0xFA5874", VA = "0xFA5874")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xFA5A60", Offset = "0xFA5A60", VA = "0xFA5A60")]
	private void RecenterButton(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xFA5AE4", Offset = "0xFA5AE4", VA = "0xFA5AE4")]
	public void Recenter()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xFA5CF0", Offset = "0xFA5CF0", VA = "0xFA5CF0")]
	public void SaveDefaultOffset()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xFA5DAC", Offset = "0xFA5DAC", VA = "0xFA5DAC")]
	public void LoadDefault()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xFA5E78", Offset = "0xFA5E78", VA = "0xFA5E78")]
	public HackyRecenter()
	{
	}
}
[Token(Token = "0x200000D")]
public class InputReadout : MonoBehaviour
{
	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Info;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static XRIDefaultInputActions XRInputs;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xFF8954", Offset = "0xFF8954", VA = "0xFF8954")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xFF8A28", Offset = "0xFF8A28", VA = "0xFF8A28")]
	public InputReadout()
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public class InteractionEvent : UnityEvent<PhysicsHands>
{
	[Token(Token = "0x6000043")]
	[Address(RVA = "0xFFB118", Offset = "0xFFB118", VA = "0xFFB118")]
	public InteractionEvent()
	{
	}
}
[Token(Token = "0x200000F")]
public class GrabPoint : MonoBehaviour
{
	[Token(Token = "0x2000010")]
	public enum AttachType
	{
		[Token(Token = "0x400006A")]
		Palm,
		[Token(Token = "0x400006B")]
		Index
	}

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AttachType attachType;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8EB4", Offset = "0x8D8EB4")]
	public JointValueStore handJointValues;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public JointValueStore objectJointValues;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HandPoseData poseData;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8EEC", Offset = "0x8D8EEC")]
	public Transform rightAttach;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leftAttach;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform basePoint;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8F24", Offset = "0x8D8F24")]
	public Collider triggerCollider;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Rigidbody objectRB;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isGrabable;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D8F5C", Offset = "0x8D8F5C")]
	public GrabEvents grabEvents;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xFA5028", Offset = "0xFA5028", VA = "0xFA5028")]
	private void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xFA50C0", Offset = "0xFA50C0", VA = "0xFA50C0")]
	public void OnHovered(PhysicsHands hand)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xFA513C", Offset = "0xFA513C", VA = "0xFA513C")]
	public void OnUnHovered(PhysicsHands hand)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xFA51B8", Offset = "0xFA51B8", VA = "0xFA51B8")]
	public void OnSelected(PhysicsHands hand)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xFA5234", Offset = "0xFA5234", VA = "0xFA5234")]
	public void OnJointCreated(PhysicsHands hand)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xFA52B0", Offset = "0xFA52B0", VA = "0xFA52B0")]
	public void OnReleased(PhysicsHands hand)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xFA5378", Offset = "0xFA5378", VA = "0xFA5378")]
	public GrabPoint()
	{
	}
}
[Serializable]
[Token(Token = "0x2000011")]
public class GrabEvents
{
	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InteractionEvent onHovered;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InteractionEvent onUnHovered;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractionEvent onSelected;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InteractionEvent onJointCreated;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InteractionEvent onReleased;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xFA4EAC", Offset = "0xFA4EAC", VA = "0xFA4EAC")]
	public GrabEvents()
	{
	}
}
[Token(Token = "0x2000012")]
public class HandJointManager : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationWeaknessThreshold;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxDistanceThreshold;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform controller;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve rotationFalloff;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HandJointValueStore baseModifier;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usePhysicsHelper;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody handRB;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HandJointValueStore currentValueModifier;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ConfigurableJoint joint;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider[] handColliders;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool hasReset;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool collidersDisabled;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float startCooldown;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float counter;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool cooldownOver;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xFA7734", Offset = "0xFA7734", VA = "0xFA7734")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xFA78B8", Offset = "0xFA78B8", VA = "0xFA78B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xFA7C40", Offset = "0xFA7C40", VA = "0xFA7C40")]
	public void ResetHandDrive()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xFA7804", Offset = "0xFA7804", VA = "0xFA7804")]
	public void SetNewDrive(HandJointValueStore valueModifier)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xFA7D8C", Offset = "0xFA7D8C", VA = "0xFA7D8C")]
	public void SetHandColliderState(bool enabled)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xFA7E08", Offset = "0xFA7E08", VA = "0xFA7E08")]
	public HandJointManager()
	{
	}
}
[Token(Token = "0x2000013")]
public class HandJointValueStore : ScriptableObject
{
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float positionalStrength;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float positionalMaxForce;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float positionalDamper;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotationalStrength;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotationalMaxForce;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rotationalDamper;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public JointDrive xDrive;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public JointDrive yDrive;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public JointDrive zDrive;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public JointDrive angularXDrive;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public JointDrive angularYZDrive;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xFA7C48", Offset = "0xFA7C48", VA = "0xFA7C48")]
	public void SetupJointDrives()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xFA7E18", Offset = "0xFA7E18", VA = "0xFA7E18")]
	public HandJointValueStore()
	{
	}
}
[Token(Token = "0x2000014")]
public class HandPoseController : MonoBehaviour
{
	[Token(Token = "0x2000015")]
	public enum Hand
	{
		[Token(Token = "0x4000096")]
		Right,
		[Token(Token = "0x4000097")]
		Left
	}

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hand hand;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PhysicsHands.GrabMode animationMode;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D8F70", Offset = "0x8D8F70")]
	public HandPoseData basePose;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoneTransformCollection indexFinger;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoneTransformCollection thumb;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoneTransformCollection gripFingers;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HandPoseData currentPose;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool gripOpen;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool toggleReset;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xFA7E40", Offset = "0xFA7E40", VA = "0xFA7E40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xFA80B8", Offset = "0xFA80B8", VA = "0xFA80B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xFA813C", Offset = "0xFA813C", VA = "0xFA813C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xFA81E8", Offset = "0xFA81E8", VA = "0xFA81E8")]
	private void CheckForGripOut(out float gripPress)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xFA82BC", Offset = "0xFA82BC", VA = "0xFA82BC")]
	private void CheckForIndexOutput(out float indexPress)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xFA8390", Offset = "0xFA8390", VA = "0xFA8390")]
	private void SetGripToggleState(float gripPress)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xFA7E94", Offset = "0xFA7E94", VA = "0xFA7E94")]
	public void SetCurrentPose(HandPoseData poseData)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xFA842C", Offset = "0xFA842C", VA = "0xFA842C")]
	public void GoToBasePose()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xFA8434", Offset = "0xFA8434", VA = "0xFA8434")]
	public HandPoseController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000016")]
public class BoneTransformCollection
{
	[Token(Token = "0x2000017")]
	public enum CollectionType
	{
		[Token(Token = "0x400009D")]
		Index,
		[Token(Token = "0x400009E")]
		Grip,
		[Token(Token = "0x400009F")]
		Thumb
	}

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CollectionType collectionType;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] bones;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandPoseData.BoneRotations rotations;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion[] currentRestValues;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x105E1A8", Offset = "0x105E1A8", VA = "0x105E1A8")]
	public BoneTransformCollection(Transform[] bones, CollectionType fingerType)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x105E1F0", Offset = "0x105E1F0", VA = "0x105E1F0")]
	public void SetRotationValues(HandPoseData.BoneRotations rotations)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x105E210", Offset = "0x105E210", VA = "0x105E210")]
	public void RotateBones(float lerpValue)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x105E2F8", Offset = "0x105E2F8", VA = "0x105E2F8")]
	public void SetRestPosition(float touchValue)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x105E3D8", Offset = "0x105E3D8", VA = "0x105E3D8")]
	public void SetUpCurrentValue()
	{
	}
}
[Token(Token = "0x2000018")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D7BD0", Offset = "0x8D7BD0")]
public class HandPoseData : ScriptableObject
{
	[Token(Token = "0x2000019")]
	public enum FingerState
	{
		[Token(Token = "0x40000AD")]
		Open,
		[Token(Token = "0x40000AE")]
		Closed,
		[Token(Token = "0x40000AF")]
		Touched,
		[Token(Token = "0x40000B0")]
		None
	}

	[Serializable]
	[Token(Token = "0x200001A")]
	public struct BoneRotations
	{
		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Quaternion[] openValues;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Quaternion[] touchValues;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Quaternion[] closedValues;
	}

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoneRotations RIndexRotations;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoneRotations LIndexRotations;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BoneRotations RGripRotations;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BoneRotations LGripRotations;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BoneRotations RThumbRotations;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BoneRotations LThumbRotations;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FingerState RIndexState;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public FingerState LIndexState;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FingerState RGripState;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public FingerState LGripState;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public FingerState RThumbState;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public FingerState LThumbState;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xFF5FB0", Offset = "0xFF5FB0", VA = "0xFF5FB0")]
	public HandPoseData()
	{
	}
}
[Token(Token = "0x200001B")]
public class HandPoserPair : MonoBehaviour
{
	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8F84", Offset = "0x8D8F84")]
	public GameObject rightHand;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftHand;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8FBC", Offset = "0x8D8FBC")]
	public Transform rightPalmAttachPoint;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform leftPalmAttachPoint;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rightIndexAttachPoint;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leftIndexAttachPoint;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xFF5FB8", Offset = "0xFF5FB8", VA = "0xFF5FB8")]
	public HandPoserPair()
	{
	}
}
[Token(Token = "0x200001C")]
public class InteractableManager : MonoBehaviour
{
	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<Collider, GrabPoint> interactableDicitonary;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InteractableManager instance;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xFF9444", Offset = "0xFF9444", VA = "0xFF9444")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xFF9564", Offset = "0xFF9564", VA = "0xFF9564")]
	public GrabPoint GetGrabPoint(Collider col)
	{
		return null;
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xFF95D8", Offset = "0xFF95D8", VA = "0xFF95D8")]
	public InteractableManager()
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D7C30", Offset = "0x8D7C30")]
public class JointValueStore : ScriptableObject
{
	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8FF4", Offset = "0x8D8FF4")]
	public ConfigurableJointMotion xMotion;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ConfigurableJointMotion yMotion;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConfigurableJointMotion zMotion;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ConfigurableJointMotion angularXMotion;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ConfigurableJointMotion angularYMotion;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ConfigurableJointMotion angularZMotion;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D902C", Offset = "0x8D902C")]
	public Drive xDrive;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Drive yDrive;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Drive zDrive;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9064", Offset = "0x8D9064")]
	public RotationDriveMode driveMode;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Drive angularXDrive;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Drive angularYZDrive;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Drive slerpDrive;

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xFFB378", Offset = "0xFFB378", VA = "0xFFB378")]
	public ConfigurableJoint CreateJoint(Rigidbody anchorBody, Rigidbody connectedBody, Vector3 connectedAnchor, Vector3 anchor)
	{
		return null;
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xFFB498", Offset = "0xFFB498", VA = "0xFFB498")]
	public ConfigurableJoint ChangeJointValues(ConfigurableJoint joint)
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xFFB5FC", Offset = "0xFFB5FC", VA = "0xFFB5FC")]
	private JointDrive ModifyDrive(JointDrive drive, Drive scriptableDrive)
	{
		return default(JointDrive);
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xFFB664", Offset = "0xFFB664", VA = "0xFFB664")]
	public JointValueStore()
	{
	}
}
[Serializable]
[Token(Token = "0x200001E")]
public struct Drive
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float positionalSpring;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float positonalDamper;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float maxForce;
}
[Token(Token = "0x200001F")]
public class PhysicsHands : MonoBehaviour
{
	[Token(Token = "0x2000020")]
	public enum Hand
	{
		[Token(Token = "0x40000EE")]
		Right,
		[Token(Token = "0x40000EF")]
		Left
	}

	[Token(Token = "0x2000021")]
	public enum GrabMode
	{
		[Token(Token = "0x40000F1")]
		Hold,
		[Token(Token = "0x40000F2")]
		Toggle
	}

	[Token(Token = "0x2000022")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7C90", Offset = "0x8D7C90")]
	private sealed class <SearchForInteractables>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhysicsHands <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000080")]
			[Address(RVA = "0xD55A78", Offset = "0xD55A78", VA = "0xD55A78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000082")]
			[Address(RVA = "0xD55AC0", Offset = "0xD55AC0", VA = "0xD55AC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600007D")]
		[Address(RVA = "0xD55948", Offset = "0xD55948", VA = "0xD55948")]
		[DebuggerHidden]
		public <SearchForInteractables>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0xD55974", Offset = "0xD55974", VA = "0xD55974", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0xD55978", Offset = "0xD55978", VA = "0xD55978", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000081")]
		[Address(RVA = "0xD55A80", Offset = "0xD55A80", VA = "0xD55A80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000023")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7CA0", Offset = "0x8D7CA0")]
	private sealed class <ReleaseDistanceCheck>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhysicsHands <>4__this;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 checkPoint;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <distance>5__2;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000086")]
			[Address(RVA = "0xD558F8", Offset = "0xD558F8", VA = "0xD558F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000088")]
			[Address(RVA = "0xD55940", Offset = "0xD55940", VA = "0xD55940", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000083")]
		[Address(RVA = "0xD55764", Offset = "0xD55764", VA = "0xD55764")]
		[DebuggerHidden]
		public <ReleaseDistanceCheck>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000084")]
		[Address(RVA = "0xD55790", Offset = "0xD55790", VA = "0xD55790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0xD55794", Offset = "0xD55794", VA = "0xD55794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0xD55900", Offset = "0xD55900", VA = "0xD55900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D909C", Offset = "0x8D909C")]
	public Hand hand;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform palmAttach;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform indexAttach;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform controller;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandPoseController poseController;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ConfigurableJoint rigJoint;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform xrRig;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D90D4", Offset = "0x8D90D4")]
	public Vector3 searchSphereOffset;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float sphereRadius;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D910C", Offset = "0x8D910C")]
	public JointValueStore baseJointSettings;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float rotationWeaknessThreshold;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float maxDistanceThreshold;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve rotationFalloff;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9144", Offset = "0x8D9144")]
	public float colliderRenableDistance;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D917C", Offset = "0x8D917C")]
	public GrabMode grabMode;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ControllerOffset controllerOffset;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isSearching;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool isGripped;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool toggleEnabled;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	private bool isDistanceCheck;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int numOfColliders;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GrabPoint currentGrab;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GrabPoint heldGrab;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Collider[] collectedColliders;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Collider[] handColliders;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Coroutine searchRoutine;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coroutine distanceRoutine;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ConfigurableJoint currentObjectJoint;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Rigidbody handRB;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 previousHandPos;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D91B4", Offset = "0x8D91B4")]
	public float tresholdDistanceTeleport;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool CanTeleport;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE457A0", Offset = "0xE457A0", VA = "0xE457A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xE458A4", Offset = "0xE458A4", VA = "0xE458A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xE45960", Offset = "0xE45960", VA = "0xE45960")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xE459E4", Offset = "0xE459E4", VA = "0xE459E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xE45D18", Offset = "0xE45D18", VA = "0xE45D18")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xE45C0C", Offset = "0xE45C0C", VA = "0xE45C0C")]
	private void CheckTogglePress(float gripPress)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xE45B0C", Offset = "0xE45B0C", VA = "0xE45B0C")]
	private void CheckGripPress(float gripPress)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xE45A38", Offset = "0xE45A38", VA = "0xE45A38")]
	private void ControllerInputs(out float gripPress)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xE462B0", Offset = "0xE462B0", VA = "0xE462B0")]
	private GrabPoint ClosestGrab()
	{
		return null;
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xE46040", Offset = "0xE46040", VA = "0xE46040")]
	private void GrabInteractable()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xE4615C", Offset = "0xE4615C", VA = "0xE4615C")]
	private void ReleaseInteractable()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xE46744", Offset = "0xE46744", VA = "0xE46744")]
	public void ResetHands()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xE464AC", Offset = "0xE464AC", VA = "0xE464AC")]
	private ConfigurableJoint CreateObjectJoint()
	{
		return null;
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xE458E8", Offset = "0xE458E8", VA = "0xE458E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE088", Offset = "0x8DE088")]
	private IEnumerator SearchForInteractables()
	{
		return null;
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xE466A8", Offset = "0xE466A8", VA = "0xE466A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE0E8", Offset = "0x8DE0E8")]
	private IEnumerator ReleaseDistanceCheck(Vector3 checkPoint)
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xE468AC", Offset = "0xE468AC", VA = "0xE468AC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xE4694C", Offset = "0xE4694C", VA = "0xE4694C")]
	public PhysicsHands()
	{
	}
}
[Token(Token = "0x2000024")]
public class KillFloor : MonoBehaviour
{
	[Token(Token = "0x6000089")]
	[Address(RVA = "0xFFBE18", Offset = "0xFFBE18", VA = "0xFFBE18")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xFFC030", Offset = "0xFFC030", VA = "0xFFC030")]
	public KillFloor()
	{
	}
}
[Token(Token = "0x2000025")]
public class LocalEventManager : MonoBehaviour
{
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhotonView photonView;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NetworkHealth health;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LoadoutData loadoutData;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D91EC", Offset = "0x8D91EC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D91EC", Offset = "0x8D91EC")]
	public Animator[] roundstartAnimators;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onRoundStart;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D923C", Offset = "0x8D923C")]
	public Animator[] roundEndAnimators;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent onRoundWin;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent onRoundLose;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9274", Offset = "0x8D9274")]
	public Animator[] matchAnimators;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent onMatchWin;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent onMatchLose;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D92AC", Offset = "0x8D92AC")]
	public Animator[] enemyHitAnimators;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent onEnemyHit;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D92E4", Offset = "0x8D92E4")]
	public Animator[] enemyHitHealthAnimators;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent<float> onEnemyHitHealth;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D931C", Offset = "0x8D931C")]
	public Animator[] playerHitAnimators;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityEvent onPlayerHit;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9354", Offset = "0x8D9354")]
	public Animator[] playerPickupAnimators;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityEvent onPlayerPickup;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D938C", Offset = "0x8D938C")]
	public Animator[] playerDeath;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEvent onPlayerDeath;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D93C4", Offset = "0x8D93C4")]
	public Animator[] enemyLeftAnimator;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent onEnemyLeft;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D93FC", Offset = "0x8D93FC")]
	public UnityEvent onLosingCallout;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UnityEvent onWinningCallout;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UnityEvent onAboutToWinCallout;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UnityEvent onAboutToLoseCallout;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityEvent onAboutToEndCloseCallout;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent onHalfwayCallout;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x10000A0", Offset = "0x10000A0", VA = "0x10000A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1000CF4", Offset = "0x1000CF4", VA = "0x1000CF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x100183C", Offset = "0x100183C", VA = "0x100183C")]
	public void RoundStart()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x10018FC", Offset = "0x10018FC", VA = "0x10018FC")]
	public void RoundOver(int winningPlayer)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1001A38", Offset = "0x1001A38", VA = "0x1001A38")]
	public void MatchOver(int winningPlayer)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1001B74", Offset = "0x1001B74", VA = "0x1001B74")]
	public void EnemyHit()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1001C34", Offset = "0x1001C34", VA = "0x1001C34")]
	public void PlayerHit(float health, int weaponType)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1001D58", Offset = "0x1001D58", VA = "0x1001D58")]
	public void PlayerPickup(float health)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1001E60", Offset = "0x1001E60", VA = "0x1001E60")]
	public void PlayerDied()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1001F20", Offset = "0x1001F20", VA = "0x1001F20")]
	public void EnemyHitHealth(float remainingHealth)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1002040", Offset = "0x1002040", VA = "0x1002040")]
	public void EnemyLeft()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x10020A0", Offset = "0x10020A0", VA = "0x10020A0")]
	public void LosingCallout()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x10020B4", Offset = "0x10020B4", VA = "0x10020B4")]
	public void WinningCallout()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x10020C8", Offset = "0x10020C8", VA = "0x10020C8")]
	public void AboutToWinCallout()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x10020DC", Offset = "0x10020DC", VA = "0x10020DC")]
	public void AboutToLoseCallout()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x10020F0", Offset = "0x10020F0", VA = "0x10020F0")]
	public void AboutToDraw()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1002104", Offset = "0x1002104", VA = "0x1002104")]
	public void HalfwayCallout()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1002118", Offset = "0x1002118", VA = "0x1002118")]
	public LocalEventManager()
	{
	}
}
[Token(Token = "0x2000026")]
public class MapList : MonoBehaviour
{
	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] mapNames;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI currentMap;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LobbyManager lobbyManager;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, string> mapValues;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1004868", Offset = "0x1004868", VA = "0x1004868")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1004A94", Offset = "0x1004A94", VA = "0x1004A94")]
	public void SetMap(int id)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1004B34", Offset = "0x1004B34", VA = "0x1004B34")]
	public void SimpleSetMap(int id)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1004B7C", Offset = "0x1004B7C", VA = "0x1004B7C")]
	public MapList()
	{
	}
}
[Token(Token = "0x2000027")]
public class CockpitAnimationManager : MonoBehaviour
{
	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9434", Offset = "0x8D9434")]
	public Rigidbody cockpitRB;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RightJoystick rJoystick;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LeftJoystick lJoystick;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D946C", Offset = "0x8D946C")]
	public AnimationCurve bopCurve;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve jumpCurve;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float hoverValue;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float hoverTransitionTime;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float speedMultiplyer;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator anim;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float resetTimer;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float jumpTimer;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float hoverTimer;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float cancelTimer;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool jumpReset;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float RotationCompensation;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xF94FCC", Offset = "0xF94FCC", VA = "0xF94FCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xF95028", Offset = "0xF95028", VA = "0xF95028")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xF95238", Offset = "0xF95238", VA = "0xF95238")]
	public void SetSpeed(out float runningSpeedScale)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xF954A0", Offset = "0xF954A0", VA = "0xF954A0")]
	public void SetLean(float speedScale)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xF95598", Offset = "0xF95598", VA = "0xF95598")]
	public void MechDeath()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xF955F0", Offset = "0xF955F0", VA = "0xF955F0")]
	public CockpitAnimationManager()
	{
	}
}
[Token(Token = "0x2000028")]
public class CockpitAnimationSounds : MonoBehaviour
{
	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D94A4", Offset = "0x8D94A4")]
	public SoundGenerator soundGen;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D94DC", Offset = "0x8D94DC")]
	public AudioStore stompSounds;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioStore legLiftSounds;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioStore landingSounds;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioStore engineSounds;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioStore flyingSounds;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioStore servoSounds;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9514", Offset = "0x8D9514")]
	public Vector3 feetOffset;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 jetOffset;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D954C", Offset = "0x8D954C")]
	public float fadeInTime;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float fadeOutTime;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9584", Offset = "0x8D9584")]
	public float bottomPitch;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float topPitch;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D95BC", Offset = "0x8D95BC")]
	public Rigidbody stickRb;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve servoVolume;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve servoPitch;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SoundProducer flyingProd;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SoundProducer engineProd;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SoundProducer servoProd;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Animator anim;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xF95600", Offset = "0xF95600", VA = "0xF95600")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xF9565C", Offset = "0xF9565C", VA = "0xF9565C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xF95820", Offset = "0xF95820", VA = "0xF95820")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xF958F4", Offset = "0xF958F4", VA = "0xF958F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xF95680", Offset = "0xF95680", VA = "0xF95680")]
	public void PlayEngineSound()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xF95744", Offset = "0xF95744", VA = "0xF95744")]
	public void StartServoSound()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xF95A00", Offset = "0xF95A00", VA = "0xF95A00")]
	public void AdjustEngineSound(float lerp)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xF958F8", Offset = "0xF958F8", VA = "0xF958F8")]
	public void AdjustServoSound()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xF95AB4", Offset = "0xF95AB4", VA = "0xF95AB4")]
	public void PlayLegLiftSound()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xF95BA0", Offset = "0xF95BA0", VA = "0xF95BA0")]
	public void PlayStompSound()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xF95CC4", Offset = "0xF95CC4", VA = "0xF95CC4")]
	public void StartFlyingSound()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xF95DE4", Offset = "0xF95DE4", VA = "0xF95DE4")]
	public void PlayLandingSound(float volume)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xF95EA4", Offset = "0xF95EA4", VA = "0xF95EA4")]
	public void EndFlyingSound()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xF95EC8", Offset = "0xF95EC8", VA = "0xF95EC8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xF95FE4", Offset = "0xF95FE4", VA = "0xF95FE4")]
	public CockpitAnimationSounds()
	{
	}
}
[Token(Token = "0x2000029")]
public class DownButton : MonoBehaviour
{
	[Token(Token = "0x200002A")]
	public enum MovementType
	{
		[Token(Token = "0x4000155")]
		Positional,
		[Token(Token = "0x4000156")]
		Rotational
	}

	[Token(Token = "0x200002B")]
	public enum ButtonType
	{
		[Token(Token = "0x4000158")]
		OnePress,
		[Token(Token = "0x4000159")]
		Hold,
		[Token(Token = "0x400015A")]
		Toggle
	}

	[Token(Token = "0x200002C")]
	public enum ButtonAxis
	{
		[Token(Token = "0x400015C")]
		X,
		[Token(Token = "0x400015D")]
		Y,
		[Token(Token = "0x400015E")]
		Z
	}

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MovementType movementType;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ButtonType buttonType;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ButtonAxis buttonAxis;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool belowThresholdCheck;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pressThreshold;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float zTargetPosLock;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float xAngularHighLockLimit;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float xAngularLowLockLimit;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent buttonDown;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent buttonUp;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ConfigurableJoint joint;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float zTargetPosUnlock;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isPressed;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool isToggled;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	private bool isBelowThreshold;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 checkVector;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float checkAxisValue;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SoftJointLimit unlockedHighLimit;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private SoftJointLimit unlockedLowLimit;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SoftJointLimit lockedHighLimit;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private SoftJointLimit lockedLowLimit;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xFA1D6C", Offset = "0xFA1D6C", VA = "0xFA1D6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xFA1EE0", Offset = "0xFA1EE0", VA = "0xFA1EE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xFA21C0", Offset = "0xFA21C0", VA = "0xFA21C0")]
	public DownButton()
	{
	}
}
[Token(Token = "0x200002D")]
public class FlickSwitch : MonoBehaviour
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float clickThreshold;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion onTargetRot;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool thresholdUnderCheck;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent switchOn;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent switchOff;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ConfigurableJoint joint;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isOn;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float eularX;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isUnder;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion offTargetRot;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xFA40C0", Offset = "0xFA40C0", VA = "0xFA40C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xFA411C", Offset = "0xFA411C", VA = "0xFA411C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xFA4288", Offset = "0xFA4288", VA = "0xFA4288")]
	public FlickSwitch()
	{
	}
}
[Token(Token = "0x200002E")]
public class FlickSwitchBothWays : MonoBehaviour
{
	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float clickUnderThreshold;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float clickOverTreshold;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Quaternion neturalTargetRot;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool thresholdUnderCheck;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool tresholdOverCheck;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent switchNeutral;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent switchUnder;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent switchOver;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ConfigurableJoint joint;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isOn;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float eularX;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isUnder;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool isOver;

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xFA42F0", Offset = "0xFA42F0", VA = "0xFA42F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xFA4384", Offset = "0xFA4384", VA = "0xFA4384")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xFA453C", Offset = "0xFA453C", VA = "0xFA453C")]
	public FlickSwitchBothWays()
	{
	}
}
[Token(Token = "0x200002F")]
public class ExteriorMechDamage : MonoBehaviour
{
	[Token(Token = "0x2000030")]
	public delegate void EnemyHit(float remainingHealth);

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator[] mechAnimator;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D9604", Offset = "0x8D9604")]
	public float lowDamageThreshold;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onLowDamage;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D9618", Offset = "0x8D9618")]
	public float midDamageThreshold;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onMidDamage;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D962C", Offset = "0x8D962C")]
	public float highDamageThreshold;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent onHighDamage;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D9640", Offset = "0x8D9640")]
	public UnityEvent onMechDeath;

	[Token(Token = "0x14000001")]
	public static event EnemyHit onEnemyHit
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xFA2D5C", Offset = "0xFA2D5C", VA = "0xFA2D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE1E8", Offset = "0x8DE1E8")]
		add
		{
		}
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0xFA2E18", Offset = "0xFA2E18", VA = "0xFA2E18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE1F8", Offset = "0x8DE1F8")]
		remove
		{
		}
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xFA2ED4", Offset = "0xFA2ED4", VA = "0xFA2ED4")]
	public void MechHit(float remainingHealth)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xFA3010", Offset = "0xFA3010", VA = "0xFA3010")]
	public ExteriorMechDamage()
	{
	}
}
[Token(Token = "0x2000031")]
public class HealthPickup : MonoBehaviour
{
	[Token(Token = "0x2000032")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7CB0", Offset = "0x8D7CB0")]
	private sealed class <PickupDelayCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HealthPickup <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000CE")]
			[Address(RVA = "0xD4B574", Offset = "0xD4B574", VA = "0xD4B574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D0")]
			[Address(RVA = "0xD4B5BC", Offset = "0xD4B5BC", VA = "0xD4B5BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xD4B454", Offset = "0xD4B454", VA = "0xD4B454")]
		[DebuggerHidden]
		public <PickupDelayCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xD4B480", Offset = "0xD4B480", VA = "0xD4B480", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xD4B484", Offset = "0xD4B484", VA = "0xD4B484", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xD4B57C", Offset = "0xD4B57C", VA = "0xD4B57C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool Ready;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PickupDelay;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float healthIncrease;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider collider;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject visual;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xFF79F4", Offset = "0xFF79F4", VA = "0xFF79F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xFF7A50", Offset = "0xFF7A50", VA = "0xFF7A50")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xFF7B88", Offset = "0xFF7B88", VA = "0xFF7B88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE208", Offset = "0x8DE208")]
	private IEnumerator PickupDelayCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xFF7C00", Offset = "0xFF7C00", VA = "0xFF7C00")]
	public HealthPickup()
	{
	}
}
[Token(Token = "0x2000033")]
public class ContactPointPasser : MonoBehaviour
{
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeftJoystick locomotionSystem;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CockpitAnimationSounds cockpitSounds;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float impactVelocityTresholdForLandingSound;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ImpactVolumeDivider;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xF98DC0", Offset = "0xF98DC0", VA = "0xF98DC0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xF98EA8", Offset = "0xF98EA8", VA = "0xF98EA8")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xF98F64", Offset = "0xF98F64", VA = "0xF98F64")]
	public ContactPointPasser()
	{
	}
}
[Token(Token = "0x2000034")]
public class JoystickAdjuster : MonoBehaviour
{
	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject JoystickTransform;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxY;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minY;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxZ;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minZ;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DefaultHeight;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float IncreasePeriod;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Distance;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int changeY;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int changeZ;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isAdjusted;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float nextPeriodTime;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xFFBAA4", Offset = "0xFFBAA4", VA = "0xFFBAA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xFFBB64", Offset = "0xFFBB64", VA = "0xFFBB64")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xFFBD44", Offset = "0xFFBD44", VA = "0xFFBD44")]
	public void ZAdjust(int adjustment)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xFFBD4C", Offset = "0xFFBD4C", VA = "0xFFBD4C")]
	public void YAdjuster(int adjustment)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xFFBD54", Offset = "0xFFBD54", VA = "0xFFBD54")]
	public JoystickAdjuster()
	{
	}
}
[Token(Token = "0x2000035")]
public class LeftJoystick : MonoBehaviour
{
	[Token(Token = "0x2000036")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7CC0", Offset = "0x8D7CC0")]
	private sealed class <JointReset>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeftJoystick <>4__this;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000F6")]
			[Address(RVA = "0xD4BC78", Offset = "0xD4BC78", VA = "0xD4BC78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F8")]
			[Address(RVA = "0xD4BCC0", Offset = "0xD4BCC0", VA = "0xD4BCC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xD4BB78", Offset = "0xD4BB78", VA = "0xD4BB78")]
		[DebuggerHidden]
		public <JointReset>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xD4BBA4", Offset = "0xD4BBA4", VA = "0xD4BBA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F5")]
		[Address(RVA = "0xD4BBA8", Offset = "0xD4BBA8", VA = "0xD4BBA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0xD4BC80", Offset = "0xD4BC80", VA = "0xD4BC80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9654", Offset = "0x8D9654")]
	public Rigidbody locoSphere;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cockpit;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform legs;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CockpitAnimationSounds animationSounds;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CapsuleCollider bodyBumer;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SphereCollider locoBumper;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CockpitUI ui;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MechSyncroniser mechSyncroniser;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D968C", Offset = "0x8D968C")]
	public float topSpeed;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float topSpeedLimiter;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxForce;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve speedCurve;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float p;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float d;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float gravityModifier;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D96C4", Offset = "0x8D96C4")]
	public float jumpMaxForce;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float pGain;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float dGain;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D96FC", Offset = "0x8D96FC")]
	public float height;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float jumpTime;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float hoverTime;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float bumberRadiusReduction;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9710", Offset = "0x8D9710")]
	public JointValueStore groundedValues;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public JointValueStore jumpValues;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9748", Offset = "0x8D9748")]
	public bool isHovering;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool isJumping;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	public bool isGrounded;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	public bool hasLanded;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public Vector3 controllerReadout;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool stickGripped;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 jumpPos;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 previousAngVel;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 lastTargetPos;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 lastPos;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 lastVelocity;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Rigidbody cockpitRB;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Rigidbody legRB;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ConfigurableJoint legJoint;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float initalBumperRadius;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float speedTime;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float sphereRadius;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float hoverTimer;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float jumpY;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float nonGroundTimer;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Vector3 jumpForce;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool canJump;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	private bool sphereLocked;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x146")]
	private bool moveable;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x147")]
	private bool jumpStarted;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public List<ContactPoint> allContactPoints;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xFFC870", Offset = "0xFFC870", VA = "0xFFC870")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xFFCA00", Offset = "0xFFCA00", VA = "0xFFCA00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xFFCCB0", Offset = "0xFFCCB0", VA = "0xFFCCB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xFFCF00", Offset = "0xFFCF00", VA = "0xFFCF00")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xFFD21C", Offset = "0xFFD21C", VA = "0xFFD21C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xFFD9B0", Offset = "0xFFD9B0", VA = "0xFFD9B0")]
	private bool IsGrounded()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xFFD1A0", Offset = "0xFFD1A0", VA = "0xFFD1A0")]
	private void HoverTimer()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xFFDD28", Offset = "0xFFDD28", VA = "0xFFDD28")]
	private void SetMoveability(bool canMove)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xFFD068", Offset = "0xFFD068", VA = "0xFFD068")]
	private void ControlStartSpeed()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xFFD0C0", Offset = "0xFFD0C0", VA = "0xFFD0C0")]
	private void LocoSphereLocker()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xFFDD34", Offset = "0xFFDD34", VA = "0xFFDD34")]
	private void JumpInput(InputAction.CallbackContext contex)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xFFE014", Offset = "0xFFE014", VA = "0xFFE014")]
	private void JumpComplete()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xFFDBF0", Offset = "0xFFDBF0", VA = "0xFFDBF0")]
	private void ExitJump()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xFFE030", Offset = "0xFFE030", VA = "0xFFE030")]
	private void ExitJump(InputAction.CallbackContext contex)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xFFCFE0", Offset = "0xFFCFE0", VA = "0xFFCFE0")]
	private Vector3 GetControllerReadout()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xFFD7F8", Offset = "0xFFD7F8", VA = "0xFFD7F8")]
	private void LateralMovement()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xFFD538", Offset = "0xFFD538", VA = "0xFFD538")]
	private void JumpPD()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xFFDC9C", Offset = "0xFFDC9C", VA = "0xFFDC9C")]
	private void AdjustEngineSound()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xFFD724", Offset = "0xFFD724", VA = "0xFFD724")]
	private void JumpPosControl()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xFFDB88", Offset = "0xFFDB88", VA = "0xFFDB88")]
	private float TotalMass()
	{
		return default(float);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xFFE0EC", Offset = "0xFFE0EC", VA = "0xFFE0EC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xFFE128", Offset = "0xFFE128", VA = "0xFFE128")]
	public void SetStickStatus(bool isGrabbed)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xFFC988", Offset = "0xFFC988", VA = "0xFFC988")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE2B8", Offset = "0x8DE2B8")]
	private IEnumerator JointReset()
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xFFE134", Offset = "0xFFE134", VA = "0xFFE134")]
	public LeftJoystick()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xFFE260", Offset = "0xFFE260", VA = "0xFFE260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE318", Offset = "0x8DE318")]
	private float <JumpInput>b__61_0()
	{
		return default(float);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xFFE268", Offset = "0xFFE268", VA = "0xFFE268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE328", Offset = "0x8DE328")]
	private void <JumpInput>b__61_1(float x)
	{
	}
}
[Token(Token = "0x2000037")]
public class RightJoystick : MonoBehaviour
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D97A0", Offset = "0x8D97A0")]
	public Transform arm;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform piston;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform CoM;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConfigurableJoint cockpitJoint;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody cockpitRB;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody locoSphere;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WeaponHandler weaponHandler;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D97D8", Offset = "0x8D97D8")]
	public JointValueStore heldJointValues;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public JointValueStore releasedJointValues;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9810", Offset = "0x8D9810")]
	public float verticalMax;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float verticalMin;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float horizontalMax;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float horizontalMin;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9848", Offset = "0x8D9848")]
	public float topRotateSpeed;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float positionalDamper;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float positionalMaxforce;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float Linearity;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float RotationMultiplierCompensation;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9880", Offset = "0x8D9880")]
	public float verticalDeadZone;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float horizontalDeadZone;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D98B8", Offset = "0x8D98B8")]
	public float horizontal;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float vertical;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 cockpitAngularVelocity;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float rStickAngularMag;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float horizontalAdjusted;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 comOffset;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody stickRb;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ConfigurableJoint armPivotJoint;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ConfigurableJoint basePivotJoint;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CapsuleCollider legCollider;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 originaCoM;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D98F0", Offset = "0x8D98F0")]
	public bool enableStickGrippedInEditor;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	public bool stickGripped;

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xE50DBC", Offset = "0xE50DBC", VA = "0xE50DBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xE50F34", Offset = "0xE50F34", VA = "0xE50F34")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xE51074", Offset = "0xE51074", VA = "0xE51074")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xE510E8", Offset = "0xE510E8", VA = "0xE510E8")]
	private void RotateMech()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xE50EF0", Offset = "0xE50EF0", VA = "0xE50EF0")]
	private void SetJointValuesToReleased()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xE51228", Offset = "0xE51228", VA = "0xE51228")]
	private void SetJointValuesToHeld()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xE5126C", Offset = "0xE5126C", VA = "0xE5126C")]
	public void JoystickGrabbed(PhysicsHands hand)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xE512A8", Offset = "0xE512A8", VA = "0xE512A8")]
	public void JoystickReleased(PhysicsHands hand)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xE512E0", Offset = "0xE512E0", VA = "0xE512E0")]
	public RightJoystick()
	{
	}
}
[Token(Token = "0x2000038")]
public class MechBall : MonoBehaviour
{
	[Token(Token = "0x2000039")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7CD0", Offset = "0x8D7CD0")]
	private sealed class <resetGoalReady>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechBall <>4__this;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000111")]
			[Address(RVA = "0xD4F268", Offset = "0xD4F268", VA = "0xD4F268", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000113")]
			[Address(RVA = "0xD4F2B0", Offset = "0xD4F2B0", VA = "0xD4F2B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0xD4F170", Offset = "0xD4F170", VA = "0xD4F170")]
		[DebuggerHidden]
		public <resetGoalReady>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0xD4F19C", Offset = "0xD4F19C", VA = "0xD4F19C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0xD4F1A0", Offset = "0xD4F1A0", VA = "0xD4F1A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0xD4F270", Offset = "0xD4F270", VA = "0xD4F270", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200003A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7CE0", Offset = "0x8D7CE0")]
	private sealed class <ResetScores>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechBall <>4__this;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000117")]
			[Address(RVA = "0xD4F120", Offset = "0xD4F120", VA = "0xD4F120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000119")]
			[Address(RVA = "0xD4F168", Offset = "0xD4F168", VA = "0xD4F168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0xD4EEF4", Offset = "0xD4EEF4", VA = "0xD4EEF4")]
		[DebuggerHidden]
		public <ResetScores>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0xD4EF20", Offset = "0xD4EF20", VA = "0xD4EF20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0xD4EF24", Offset = "0xD4EF24", VA = "0xD4EF24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0xD4F128", Offset = "0xD4F128", VA = "0xD4F128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9928", Offset = "0x8D9928")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9928", Offset = "0x8D9928")]
	public GameObject ball;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ballOrigin;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MechBall manager;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text PlayerOneScoreText;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text PlayerTwoScoreText;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody BallRigidBody;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider BallBounds;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9988", Offset = "0x8D9988")]
	public bool GateFor1Or2;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool GateOrManager;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int PlayerOneScore;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int PlayerTwoScore;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool DebugFun;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float scoringDelay;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float winDelay;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D99C0", Offset = "0x8D99C0")]
	public bool ballFreezeAfterGoal;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool GoalReady;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent Scored;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent Victory;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float RespawnUpVelocity;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PhotonView PV;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PhotonView BallPV;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool BallInGates1;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool BallInGates2;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1008E98", Offset = "0x1008E98", VA = "0x1008E98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1008F70", Offset = "0x1008F70", VA = "0x1008F70")]
	public void PlayerOneScoreIncreased()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1009128", Offset = "0x1009128", VA = "0x1009128")]
	public void PlayerTwoScoreIncreased()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x10092E0", Offset = "0x10092E0", VA = "0x10092E0")]
	public void UpdateUI()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x10093F4", Offset = "0x10093F4", VA = "0x10093F4")]
	public void ResetBall()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x100948C", Offset = "0x100948C", VA = "0x100948C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1009524", Offset = "0x1009524", VA = "0x1009524")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x10095B4", Offset = "0x10095B4", VA = "0x10095B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE388", Offset = "0x8DE388")]
	private IEnumerator resetGoalReady()
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x100962C", Offset = "0x100962C", VA = "0x100962C")]
	[PunRPC]
	private void rpc_UpdateBallScores(int playerOneScore, int playerTwoScore)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x10097E8", Offset = "0x10097E8", VA = "0x10097E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE3F8", Offset = "0x8DE3F8")]
	private IEnumerator ResetScores()
	{
		return null;
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1009860", Offset = "0x1009860", VA = "0x1009860")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1009BC4", Offset = "0x1009BC4", VA = "0x1009BC4")]
	public MechBall()
	{
	}
}
[Token(Token = "0x200003B")]
public class MechBallDeathZone : MonoBehaviour
{
	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NetworkHealth networkHealth;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LeftJoystick leftJoystick;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MatchManager matchManager;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SocialRoomMatchManager socialRoomMatchManager;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D99F8", Offset = "0x8D99F8")]
	public bool overrideMechHealth;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int mechHealth;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool overrideMechMaxHealth;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int mechMaxHealth;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool overrideTopSpeed;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int topSpeed;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool overrideJumpTime;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int JumpTime;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool overrideJumpHeight;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int JumpHeight;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int DeathZoneMechHealth;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1009BE8", Offset = "0x1009BE8", VA = "0x1009BE8")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1009D40", Offset = "0x1009D40", VA = "0x1009D40")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1009EA8", Offset = "0x1009EA8", VA = "0x1009EA8")]
	public MechBallDeathZone()
	{
	}
}
[Token(Token = "0x200003C")]
public class MechBallHit : MonoBehaviour, IInRoomCallbacks, IPunOwnershipCallbacks
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MechBall mechBallManager;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody ballRigidBody;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float explosionRadius;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float hitForce;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TransferOwnershipCollision transferOwnership;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 BallVelocity;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 BallAngularVelocity;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9A30", Offset = "0x8D9A30")]
	public float forceTreshold;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent hit;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem ImpactParticleSystem;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource audioSource;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool DebugFun;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform ExplosionLocationDebug;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PhotonView PV;

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1009EB8", Offset = "0x1009EB8", VA = "0x1009EB8")]
	private void Update()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1009EBC", Offset = "0x1009EBC", VA = "0x1009EBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1009F6C", Offset = "0x1009F6C", VA = "0x1009F6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1009FD0", Offset = "0x1009FD0", VA = "0x1009FD0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x100A394", Offset = "0x100A394", VA = "0x100A394")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x100A20C", Offset = "0x100A20C", VA = "0x100A20C")]
	public void Hit(Vector3 hitpoint)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x100A548", Offset = "0x100A548", VA = "0x100A548")]
	[PunRPC]
	private void rpc_BallWasHit(Vector3 hitLocation)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x100A6B8", Offset = "0x100A6B8", VA = "0x100A6B8")]
	[PunRPC]
	private void rpc_BallCheckKinematic()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x100A750", Offset = "0x100A750", VA = "0x100A750", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x100A7D0", Offset = "0x100A7D0", VA = "0x100A7D0", Slot = "4")]
	public void OnPlayerEnteredRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x100A7D4", Offset = "0x100A7D4", VA = "0x100A7D4", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x100A7D8", Offset = "0x100A7D8", VA = "0x100A7D8", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player target, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x100A7DC", Offset = "0x100A7DC", VA = "0x100A7DC", Slot = "8")]
	public void OnMasterClientSwitched(Player otherPlayer)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x100A7E0", Offset = "0x100A7E0", VA = "0x100A7E0", Slot = "9")]
	public void OnOwnershipRequest(PhotonView targetView, Player requestingPlayer)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x100A7E4", Offset = "0x100A7E4", VA = "0x100A7E4", Slot = "10")]
	public void OnOwnershipTransfered(PhotonView targetView, Player previousOwner)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x100A7E8", Offset = "0x100A7E8", VA = "0x100A7E8")]
	public MechBallHit()
	{
	}
}
[Token(Token = "0x200003D")]
public class MechLegs : MonoBehaviour
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float height;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float cockpitHeight;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform locoSphere;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cockpit;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider legCollider;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ConfigurableJoint legJoint;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SphereCollider sphereCol;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ConfigurableJoint sphereJoint;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x100A80C", Offset = "0x100A80C", VA = "0x100A80C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x100A908", Offset = "0x100A908", VA = "0x100A908")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x100A9A4", Offset = "0x100A9A4", VA = "0x100A9A4")]
	private void AdjustLegCollider()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x100A92C", Offset = "0x100A92C", VA = "0x100A92C")]
	private void SetLegAnchor()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x100AA38", Offset = "0x100AA38", VA = "0x100AA38")]
	public MechLegs()
	{
	}
}
[Token(Token = "0x200003E")]
public class MechAnimationManager : MonoBehaviour, IOnEventCallback
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9A68", Offset = "0x8D9A68")]
	public MechJointCollection mechJoints;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator anim;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform hipParent;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody hipRB;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform networkTracker;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SoundGenerator soundGen;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9AA0", Offset = "0x8D9AA0")]
	public ParticleSystem jetSystem;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9AD8", Offset = "0x8D9AD8")]
	public AudioStore stompSounds;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioStore legLiftSounds;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioStore landingSounds;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float mechFXMinDistance;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 feetOffset;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 jetOffset;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9B10", Offset = "0x8D9B10")]
	public JointValueStore aliveHeadValues;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public JointValueStore deadHeadValues;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9B48", Offset = "0x8D9B48")]
	public AnimationCurve gainCurve;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve slowCurve;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float legDampening;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float JumpRaycastOffset;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float JumpRaycastCheck;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	public Vector3 inputVelocity;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Rigidbody[] lowerRbs;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Quaternion initalLegRot;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Quaternion initalHeadRot;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Quaternion previousHipRot;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 previousMechPos;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 mechVelocity;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 averageVelocity;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool isGrounded;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	private bool isAlive;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int count;

	[Token(Token = "0x400024F")]
	private const int movingAverageLength = 5;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float turnSdVel;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float previousSpeedLerp;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float currentTargetY;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float previousTargetY;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float ySpeed;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x1007CEC", Offset = "0x1007CEC", VA = "0x1007CEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1007EFC", Offset = "0x1007EFC", VA = "0x1007EFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1008010", Offset = "0x1008010", VA = "0x1008010")]
	private void Update()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x100849C", Offset = "0x100849C", VA = "0x100849C")]
	private void GetMechVelocityAverage()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1008520", Offset = "0x1008520", VA = "0x1008520")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1008584", Offset = "0x1008584", VA = "0x1008584")]
	private Vector3 GetCurrentMechVel()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x100817C", Offset = "0x100817C", VA = "0x100817C")]
	private void RotateLegs()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1008618", Offset = "0x1008618", VA = "0x1008618")]
	private void RotateMechHead()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1008724", Offset = "0x1008724", VA = "0x1008724")]
	private void SetMovementAnimation()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1008340", Offset = "0x1008340", VA = "0x1008340")]
	private void SetTurnAnimation()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1007DAC", Offset = "0x1007DAC", VA = "0x1007DAC")]
	private void GetLowerRigidBodies()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1007F94", Offset = "0x1007F94", VA = "0x1007F94")]
	private void SetLowerKinematicState(bool state)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x10087F4", Offset = "0x10087F4", VA = "0x10087F4")]
	private Vector3 LocalAngularVelocity(Quaternion currentRot, Quaternion difference)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x10088D0", Offset = "0x10088D0", VA = "0x10088D0")]
	public void KillMech()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x100893C", Offset = "0x100893C", VA = "0x100893C")]
	public void PlayLegLiftSound()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1008A34", Offset = "0x1008A34", VA = "0x1008A34")]
	public void PlayFootStompSound()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1008B2C", Offset = "0x1008B2C", VA = "0x1008B2C")]
	public void PlayJetSound()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1008B30", Offset = "0x1008B30", VA = "0x1008B30")]
	public void PlayLandingSound(float volume)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1008BF0", Offset = "0x1008BF0", VA = "0x1008BF0")]
	public void SetJumpJetStatus(bool inUse)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1008C18", Offset = "0x1008C18", VA = "0x1008C18")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1008DBC", Offset = "0x1008DBC", VA = "0x1008DBC", Slot = "4")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1008DC0", Offset = "0x1008DC0", VA = "0x1008DC0")]
	public MechAnimationManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200003F")]
public class MechJointCollection
{
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ConfigurableJoint headJoint;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConfigurableJoint[] upperLegJoints;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConfigurableJoint[] lowerLegJoints;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ConfigurableJoint[] ankleJoints;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConfigurableJoint[] feetJoints;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public ConfigurableJoint[] allLegJoints;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1007D1C", Offset = "0x1007D1C", VA = "0x1007D1C")]
	public void CollectAllLegJoints()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x100A804", Offset = "0x100A804", VA = "0x100A804")]
	public MechJointCollection()
	{
	}
}
[Token(Token = "0x2000040")]
public class OpenURLLink : MonoBehaviour
{
	[Token(Token = "0x600014A")]
	[Address(RVA = "0x18E3610", Offset = "0x18E3610", VA = "0x18E3610")]
	public void OpenURL(string URL)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x18E361C", Offset = "0x18E361C", VA = "0x18E361C")]
	public OpenURLLink()
	{
	}
}
[Token(Token = "0x2000041")]
public class PerLevelMechSettings : MonoBehaviour
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NetworkHealth networkHealth;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LeftJoystick leftJoystick;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MatchManager matchManager;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SocialRoomMatchManager socialRoomMatchManager;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9BA0", Offset = "0x8D9BA0")]
	public bool overrideMechHealth;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int mechHealth;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool overrideMechMaxHealth;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int mechMaxHealth;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool overrideTopSpeed;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int topSpeed;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool overrideJumpTime;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int JumpTime;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool overrideJumpHeight;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int JumpHeight;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int DeathZoneMechHealth;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xE44DF4", Offset = "0xE44DF4", VA = "0xE44DF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xE44F38", Offset = "0xE44F38", VA = "0xE44F38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xE4507C", Offset = "0xE4507C", VA = "0xE4507C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xE45118", Offset = "0xE45118", VA = "0xE45118")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xE451C4", Offset = "0xE451C4", VA = "0xE451C4")]
	private void SetValues()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xE45318", Offset = "0xE45318", VA = "0xE45318")]
	public PerLevelMechSettings()
	{
	}
}
[Token(Token = "0x2000042")]
public class PointCapture : MonoBehaviour
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MatchManager matchManager;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ScoreIncrease;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float IncreasePeriod;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float EnemyIncreasePeriod;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float EnemyNotifierPeriod;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PlayerNotifierPeriod;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float LocalScoreIncrease;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool RespawnAfterPointTreshold;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float PointTreshold;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool PlayerIsInZone;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool EnemyIsInZone;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool EnemyIncrease;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float EnemyNextActionTime;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float EnemyNextNotifier;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float PlayerNextNotifier;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float nextActionTime;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool PlayerIncrease;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool BothMechsInResetsTimer;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool PauseTimerIfBothMechsIn;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
	public bool ResetTimersOnLeave;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool RandomizeSpawn;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform[] Positions;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform[] PickablePositions;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int currentPosition;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PhotonView PV;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool IsRoundBased;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CapsuleCollider capsuleCollider;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent onPlayerScored;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityEvent onPlayerIsScoring;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityEvent onEnemyScored;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityEvent onEnemyIsScoring;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool DebugMode;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool debugTest;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xE47DC4", Offset = "0xE47DC4", VA = "0xE47DC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xE48068", Offset = "0xE48068", VA = "0xE48068")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xE48134", Offset = "0xE48134", VA = "0xE48134")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xE48A3C", Offset = "0xE48A3C", VA = "0xE48A3C")]
	[PunRPC]
	private void rpc_EnemyIsScoring()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xE48A50", Offset = "0xE48A50", VA = "0xE48A50")]
	[PunRPC]
	private void rpc_EnemyScored()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xE48A64", Offset = "0xE48A64", VA = "0xE48A64")]
	[PunRPC]
	private void rpc_PlayerIsScoring()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xE48A78", Offset = "0xE48A78", VA = "0xE48A78")]
	[PunRPC]
	private void rpc_PlayerScored()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xE48A14", Offset = "0xE48A14", VA = "0xE48A14")]
	public void PlayerScored()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xE48A28", Offset = "0xE48A28", VA = "0xE48A28")]
	public void EnemyScored()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xE48A8C", Offset = "0xE48A8C", VA = "0xE48A8C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xE488B4", Offset = "0xE488B4", VA = "0xE488B4")]
	private void StateCheck()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xE48BB4", Offset = "0xE48BB4", VA = "0xE48BB4")]
	private void ResetAllTimers()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xE48BC0", Offset = "0xE48BC0", VA = "0xE48BC0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xE48CE8", Offset = "0xE48CE8", VA = "0xE48CE8")]
	public void CheckRespawn()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xE47F5C", Offset = "0xE47F5C", VA = "0xE47F5C")]
	public void Respawn()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xE48CF8", Offset = "0xE48CF8", VA = "0xE48CF8")]
	private void MechDeathRecieved()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xE48CFC", Offset = "0xE48CFC", VA = "0xE48CFC")]
	public PointCapture()
	{
	}
}
[Token(Token = "0x2000043")]
public class PushToTalkAndMute : MonoBehaviour
{
	[Token(Token = "0x2000044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7CF0", Offset = "0x8D7CF0")]
	private sealed class <waitAndExecute>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PushToTalkAndMute <>4__this;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600016D")]
			[Address(RVA = "0xD566B8", Offset = "0xD566B8", VA = "0xD566B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016F")]
			[Address(RVA = "0xD56700", Offset = "0xD56700", VA = "0xD56700", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0xD565B8", Offset = "0xD565B8", VA = "0xD565B8")]
		[DebuggerHidden]
		public <waitAndExecute>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0xD565E4", Offset = "0xD565E4", VA = "0xD565E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0xD565E8", Offset = "0xD565E8", VA = "0xD565E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0xD566C0", Offset = "0xD566C0", VA = "0xD566C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool muting;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool pushToTalk;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9BD8", Offset = "0x8D9BD8")]
	public Recorder recorder;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer ToggleToTalkButton;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer MuteButton;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float BrightnessOff;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float BrightnessOn;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float delay;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xE4CC94", Offset = "0xE4CC94", VA = "0xE4CC94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xE4CDB0", Offset = "0xE4CDB0", VA = "0xE4CDB0")]
	public void PushToTalk()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xE4CDC0", Offset = "0xE4CDC0", VA = "0xE4CDC0")]
	public void ExecutePushToTalk()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xE4CD38", Offset = "0xE4CD38", VA = "0xE4CD38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE558", Offset = "0x8DE558")]
	private IEnumerator waitAndExecute()
	{
		return null;
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xE4CF28", Offset = "0xE4CF28", VA = "0xE4CF28")]
	public void ToggleMuteOtherPlayers()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xE4CF38", Offset = "0xE4CF38", VA = "0xE4CF38")]
	public void ExecuteMute()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xE4D100", Offset = "0xE4D100", VA = "0xE4D100")]
	public PushToTalkAndMute()
	{
	}
}
[Serializable]
[Token(Token = "0x2000045")]
public class RankingData
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int PlayerRank;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int MatchesWon;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MatchesLost;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int EnemyRank;

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xE4D110", Offset = "0xE4D110", VA = "0xE4D110")]
	public RankingData(int playerRank, int matchesWon, int matchesLost)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xE4D150", Offset = "0xE4D150", VA = "0xE4D150")]
	public void EnemyRankingData(int enemyRank)
	{
	}
}
[Token(Token = "0x2000046")]
public class RankingSystem : MonoBehaviour, IOnEventCallback
{
	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9C10", Offset = "0x8D9C10")]
	public float MatchLossImportance;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RankingSpeed;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxRank;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9C48", Offset = "0x8D9C48")]
	public int PlayerRank;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int MatchesWon;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int MatchesLost;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool update;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool clear;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9C80", Offset = "0x8D9C80")]
	public Text ProtoLobbyRankText;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text PlayerRankUI;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text EnemyRankUI;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int EnemyRank;

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xE4D154", Offset = "0xE4D154", VA = "0xE4D154")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xE4D1B8", Offset = "0xE4D1B8", VA = "0xE4D1B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xE4D21C", Offset = "0xE4D21C", VA = "0xE4D21C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xE4D708", Offset = "0xE4D708", VA = "0xE4D708")]
	private void Start()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xE4DA58", Offset = "0xE4DA58", VA = "0xE4DA58")]
	public void MatchWon()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xE4DA90", Offset = "0xE4DA90", VA = "0xE4DA90")]
	public void MatchLost()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xE4D3EC", Offset = "0xE4D3EC", VA = "0xE4D3EC")]
	public void RankingRecount()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xE4D448", Offset = "0xE4D448", VA = "0xE4D448")]
	public void SaveFile()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xE4D568", Offset = "0xE4D568", VA = "0xE4D568")]
	public void LoadFile()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xE4D274", Offset = "0xE4D274", VA = "0xE4D274")]
	public void SendRank()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xE4DAC8", Offset = "0xE4DAC8", VA = "0xE4DAC8", Slot = "4")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xE4DB10", Offset = "0xE4DB10", VA = "0xE4DB10")]
	private void ReceivedEnemyRank(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xE4DCB8", Offset = "0xE4DCB8", VA = "0xE4DCB8")]
	private void StartRoundRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xE4DCCC", Offset = "0xE4DCCC", VA = "0xE4DCCC")]
	public RankingSystem()
	{
	}
}
[Token(Token = "0x2000047")]
public class ReticleHit : MonoBehaviour
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Animator> ReticleAnimators;

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xE50C7C", Offset = "0xE50C7C", VA = "0xE50C7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xE50C80", Offset = "0xE50C80", VA = "0xE50C80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xE50C84", Offset = "0xE50C84", VA = "0xE50C84")]
	private void reticleHit()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xE50DB4", Offset = "0xE50DB4", VA = "0xE50DB4")]
	public ReticleHit()
	{
	}
}
[Token(Token = "0x2000048")]
public class TransferOwnershipCollision : MonoBehaviourPun
{
	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TransferOwnershipCollision transferOwnership;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody ballRigidBody;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PhotonView PV;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x107740C", Offset = "0x107740C", VA = "0x107740C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x107747C", Offset = "0x107747C", VA = "0x107747C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1077548", Offset = "0x1077548", VA = "0x1077548")]
	public void TakeOverOwnership()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x10776B8", Offset = "0x10776B8", VA = "0x10776B8")]
	public TransferOwnershipCollision()
	{
	}
}
[Token(Token = "0x2000049")]
public class MechRetical : MonoBehaviour
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RightJoystick joyStickScript;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 centrePoint;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 recticalBounds;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Animator> ReticleAnimators;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float stickXScale;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float stickYScale;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float stickXInput;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float stickYInput;

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x100AC1C", Offset = "0x100AC1C", VA = "0x100AC1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x100ACD4", Offset = "0x100ACD4", VA = "0x100ACD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x100AD50", Offset = "0x100AD50", VA = "0x100AD50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x100ADCC", Offset = "0x100ADCC", VA = "0x100ADCC")]
	private void reticleHit()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x100AEFC", Offset = "0x100AEFC", VA = "0x100AEFC")]
	public MechRetical()
	{
	}
}
[Token(Token = "0x200004A")]
public class WallImpactNoises : MonoBehaviour
{
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioStore wallImpacts;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioStore grindSFX;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioStore grindEndSFX;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoundGenerator soundGen;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isGrinding;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SoundProducer grindProducer;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 lastPos;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1080B04", Offset = "0x1080B04", VA = "0x1080B04")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1080CE0", Offset = "0x1080CE0", VA = "0x1080CE0")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x1080E2C", Offset = "0x1080E2C", VA = "0x1080E2C")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1080F7C", Offset = "0x1080F7C", VA = "0x1080F7C")]
	public WallImpactNoises()
	{
	}
}
[Token(Token = "0x200004B")]
public class ExternalWeaponsAnimations : MonoBehaviour
{
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Animator> WeaponAnimators;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ParticleSystem> ParticleSystems;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xFA3030", Offset = "0xFA3030", VA = "0xFA3030")]
	public void Animation_Fire()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xFA3160", Offset = "0xFA3160", VA = "0xFA3160")]
	public void Animation_Reload()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xFA3290", Offset = "0xFA3290", VA = "0xFA3290")]
	public void PlayParticleSystem()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xFA33A8", Offset = "0xFA33A8", VA = "0xFA33A8")]
	public ExternalWeaponsAnimations()
	{
	}
}
[Token(Token = "0x200004C")]
public class InternalWeaponsPlayParticleSim : MonoBehaviour
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ParticleSystem> ParticleSystems;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xFFB164", Offset = "0xFFB164", VA = "0xFFB164")]
	public void PlayParticleSystem()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xFFB27C", Offset = "0xFFB27C", VA = "0xFFB27C")]
	public InternalWeaponsPlayParticleSim()
	{
	}
}
[Token(Token = "0x200004D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D7D00", Offset = "0x8D7D00")]
public class LoadoutData : ScriptableObject
{
	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9CB8", Offset = "0x8D9CB8")]
	public GameObject[] weapon;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9CF0", Offset = "0x8D9CF0")]
	public GameObject[] weaponExternal;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9D28", Offset = "0x8D9D28")]
	public AudioStore[] externalFireSFX;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9D60", Offset = "0x8D9D60")]
	public string[] weapon_names;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9D98", Offset = "0x8D9D98")]
	public WeaponClasses[] weaponClass;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9DD0", Offset = "0x8D9DD0")]
	public GameObject[] mechClass;

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xFFE5CC", Offset = "0xFFE5CC", VA = "0xFFE5CC")]
	public LoadoutData()
	{
	}
}
[Token(Token = "0x200004E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D7D6C", Offset = "0x8D7D6C")]
public class WeaponClasses : ScriptableObject
{
	[Token(Token = "0x200004F")]
	public enum weaponClass
	{
		[Token(Token = "0x40002C9")]
		Ballistic_Strong,
		[Token(Token = "0x40002CA")]
		Ballistic_Weak,
		[Token(Token = "0x40002CB")]
		Laser_Pulse,
		[Token(Token = "0x40002CC")]
		Laser_Beam,
		[Token(Token = "0x40002CD")]
		Rocket,
		[Token(Token = "0x40002CE")]
		Healing
	}

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9E08", Offset = "0x8D9E08")]
	public weaponClass surfaceType;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9E40", Offset = "0x8D9E40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D9E40", Offset = "0x8D9E40")]
	public AudioStore PlayerHitSFX;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string PlayerHitAnimatorTrigger;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9E90", Offset = "0x8D9E90")]
	public AnimationCurve FireRecoilCurve;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve PlayerHitRecoilCurve;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve PlayerHitJudderCurve;

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1083CF8", Offset = "0x1083CF8", VA = "0x1083CF8")]
	public WeaponClasses()
	{
	}
}
[Token(Token = "0x2000050")]
public class MechWeapons : MonoBehaviour
{
	[Token(Token = "0x2000051")]
	public delegate void EnemyHit();

	[Token(Token = "0x2000052")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7DD8", Offset = "0x8D7DD8")]
	private sealed class <ReloadWeapons>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechWeapons <>4__this;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <counter>5__2;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion <startRot>5__3;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion <finalRot>5__4;

		[Token(Token = "0x17000013")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B4")]
			[Address(RVA = "0xD4FBD0", Offset = "0xD4FBD0", VA = "0xD4FBD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B6")]
			[Address(RVA = "0xD4FC18", Offset = "0xD4FC18", VA = "0xD4FC18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xD4F734", Offset = "0xD4F734", VA = "0xD4F734")]
		[DebuggerHidden]
		public <ReloadWeapons>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xD4F760", Offset = "0xD4F760", VA = "0xD4F760", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xD4F764", Offset = "0xD4F764", VA = "0xD4F764", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xD4FBD8", Offset = "0xD4FBD8", VA = "0xD4FBD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000053")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7DE8", Offset = "0x8D7DE8")]
	private sealed class <ProduceTravelRaycast>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float totalDistance;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MechWeapons <>4__this;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 barrelPos;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 direction;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <totalRays>5__2;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <sectionTime>5__3;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__4;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001BA")]
			[Address(RVA = "0xD4F6E4", Offset = "0xD4F6E4", VA = "0xD4F6E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001BC")]
			[Address(RVA = "0xD4F72C", Offset = "0xD4F72C", VA = "0xD4F72C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xD4F4DC", Offset = "0xD4F4DC", VA = "0xD4F4DC")]
		[DebuggerHidden]
		public <ProduceTravelRaycast>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xD4F508", Offset = "0xD4F508", VA = "0xD4F508", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xD4F50C", Offset = "0xD4F50C", VA = "0xD4F50C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xD4F6EC", Offset = "0xD4F6EC", VA = "0xD4F6EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000054")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7DF8", Offset = "0x8D7DF8")]
	private sealed class <GenerateRecoil>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechWeapons <>4__this;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <counter>5__2;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001C0")]
			[Address(RVA = "0xD4F48C", Offset = "0xD4F48C", VA = "0xD4F48C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C2")]
			[Address(RVA = "0xD4F4D4", Offset = "0xD4F4D4", VA = "0xD4F4D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xD4F2B8", Offset = "0xD4F2B8", VA = "0xD4F2B8")]
		[DebuggerHidden]
		public <GenerateRecoil>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xD4F2E4", Offset = "0xD4F2E4", VA = "0xD4F2E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0xD4F2E8", Offset = "0xD4F2E8", VA = "0xD4F2E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xD4F494", Offset = "0xD4F494", VA = "0xD4F494", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NetworkWeapons netWeapons;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9ED8", Offset = "0x8D9ED8")]
	public Transform reticle;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rightWeapon;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform leftWeapon;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SoundGenerator soundGen;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator[] gunAnims;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CockpitUI ui;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CockpitHitter cockpitHitter;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9F10", Offset = "0x8D9F10")]
	public float bulletVelocity;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float rayLength;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float instantRange;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float bulletForce;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9F48", Offset = "0x8D9F48")]
	public float damageHead;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float damageLegs;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9F80", Offset = "0x8D9F80")]
	public float fireRate;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve recoilCurve;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9FB8", Offset = "0x8D9FB8")]
	public int magCapacity;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float reloadDownTime;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float reloadHoldTime;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float reloadUpTime;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float reloadAngle;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9FF0", Offset = "0x8D9FF0")]
	public AudioStore fireSFX;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioStore reloadSFX;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioStore emptySFX;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float dampening;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float zOffset;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 barrelOffset;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform barrelOffset2;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 centreRayOffset;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private LayerMask mechMasks;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int currentAmmo;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float chamberTime;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool roundChambered;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool isFiring;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	private bool isReloading;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	private bool reloadReset;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool emptyPlayed;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	private bool canFire;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Quaternion rightFinalRot;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Quaternion leftFinalRot;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Coroutine recoilRoutine;

	[Token(Token = "0x14000002")]
	public static event EnemyHit OnEnemyHit
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x10FDC94", Offset = "0x10FDC94", VA = "0x10FDC94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE608", Offset = "0x8DE608")]
		add
		{
		}
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x10FDD50", Offset = "0x10FDD50", VA = "0x10FDD50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE618", Offset = "0x8DE618")]
		remove
		{
		}
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x10FDE0C", Offset = "0x10FDE0C", VA = "0x10FDE0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x10FDE18", Offset = "0x10FDE18", VA = "0x10FDE18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x10FDFC0", Offset = "0x10FDFC0", VA = "0x10FDFC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x10FE054", Offset = "0x10FE054", VA = "0x10FE054")]
	private void ReloadInput()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x10FE140", Offset = "0x10FE140", VA = "0x10FE140")]
	private void AimGunsAtReticle()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x10FE74C", Offset = "0x10FE74C", VA = "0x10FE74C")]
	private Vector3 CentreRaycastCheck(out Vector3 checkPoint, out bool ishitting)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x10FE934", Offset = "0x10FE934", VA = "0x10FE934")]
	private void InitiateWeaponFiring(InputAction.CallbackContext contex)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x10FE940", Offset = "0x10FE940", VA = "0x10FE940")]
	private void StopWeaponFiring(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x10FE94C", Offset = "0x10FE94C", VA = "0x10FE94C")]
	private void PerformBulletHit(RaycastHit hit, Collider col)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x10FF12C", Offset = "0x10FF12C", VA = "0x10FF12C")]
	private void ProduceInstantRay(Vector3 barrelPos, Vector3 direction)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x10FF20C", Offset = "0x10FF20C", VA = "0x10FF20C")]
	private void FireGun(Transform gun, bool instantCast, float totalDistance, Vector3 hitPoint)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x10FE6D4", Offset = "0x10FE6D4", VA = "0x10FE6D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE628", Offset = "0x8DE628")]
	private IEnumerator ReloadWeapons()
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x10FE430", Offset = "0x10FE430", VA = "0x10FE430")]
	private void TryToShootWeapons()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x10FF4C0", Offset = "0x10FF4C0", VA = "0x10FF4C0")]
	public void SetFireStatus(bool fire)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x10FF384", Offset = "0x10FF384", VA = "0x10FF384")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE688", Offset = "0x8DE688")]
	private IEnumerator ProduceTravelRaycast(Vector3 barrelPos, Vector3 direction, float totalDistance)
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x10FF448", Offset = "0x10FF448", VA = "0x10FF448")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE6E8", Offset = "0x8DE6E8")]
	private IEnumerator GenerateRecoil()
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x10FF4CC", Offset = "0x10FF4CC", VA = "0x10FF4CC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x10FF854", Offset = "0x10FF854", VA = "0x10FF854")]
	public MechWeapons()
	{
	}
}
[Token(Token = "0x2000055")]
public class WeaponHandler : MonoBehaviour
{
	[Token(Token = "0x2000056")]
	public delegate void EnemyHit();

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA028", Offset = "0x8DA028")]
	public Transform reticle;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LoadoutData loadoutData;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CockpitUI ui;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Animator> reticleAnims;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rightWeaponAttachPoint;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leftWeaponAttachPoint;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject rightWeapon;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject leftWeapon;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform tr;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform tl;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool CanFire_l;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool CanFire_r;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA060", Offset = "0x8DA060")]
	public bool StickGripped;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA098", Offset = "0x8DA098")]
	public float dampening;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float zOffset;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 barrelOffset;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int loadout_r;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int loadout_l;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform barrelOffset2;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 centreRayOffset;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private LayerMask mechMasks;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isReloading;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Quaternion rightFinalRot;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Quaternion leftFinalRot;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x14000003")]
	public static event EnemyHit OnEnemyHit
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x1083D54", Offset = "0x1083D54", VA = "0x1083D54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE838", Offset = "0x8DE838")]
		add
		{
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x1083E10", Offset = "0x1083E10", VA = "0x1083E10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE848", Offset = "0x8DE848")]
		remove
		{
		}
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x1083ECC", Offset = "0x1083ECC", VA = "0x1083ECC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x10844DC", Offset = "0x10844DC", VA = "0x10844DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1084500", Offset = "0x1084500", VA = "0x1084500")]
	private void AimGunsAtReticle()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x10848A8", Offset = "0x10848A8", VA = "0x10848A8")]
	public Vector3 CentreRaycastCheck(out Vector3 checkPoint, out bool ishitting)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x10847D8", Offset = "0x10847D8", VA = "0x10847D8")]
	private void WeaponSwitchingInput()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1084A90", Offset = "0x1084A90", VA = "0x1084A90")]
	private void UpdateWeaponCanFire()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1084C8C", Offset = "0x1084C8C", VA = "0x1084C8C")]
	public void UpdateStickGripped(bool stickGripped)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1084D58", Offset = "0x1084D58", VA = "0x1084D58")]
	public void InvokeEnemyHit()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x1084DB8", Offset = "0x1084DB8", VA = "0x1084DB8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1085300", Offset = "0x1085300", VA = "0x1085300")]
	public WeaponHandler()
	{
	}
}
[Token(Token = "0x2000057")]
public class WeaponType : MonoBehaviour
{
	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA0E0", Offset = "0x8DA0E0")]
	public int weaponType;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int leftOrRight;

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xD40A10", Offset = "0xD40A10", VA = "0xD40A10")]
	public WeaponType()
	{
	}
}
[Token(Token = "0x2000058")]
public class Weapons_Default_Ballistic : MonoBehaviour
{
	[Token(Token = "0x2000059")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7E08", Offset = "0x8D7E08")]
	private sealed class <ReloadWeapons>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapons_Default_Ballistic <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E9")]
			[Address(RVA = "0x1BE45E8", Offset = "0x1BE45E8", VA = "0x1BE45E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EB")]
			[Address(RVA = "0x1BE4630", Offset = "0x1BE4630", VA = "0x1BE4630", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x1BE40A0", Offset = "0x1BE40A0", VA = "0x1BE40A0")]
		[DebuggerHidden]
		public <ReloadWeapons>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x1BE40CC", Offset = "0x1BE40CC", VA = "0x1BE40CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x1BE40D0", Offset = "0x1BE40D0", VA = "0x1BE40D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x1BE45F0", Offset = "0x1BE45F0", VA = "0x1BE45F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200005A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7E18", Offset = "0x8D7E18")]
	private sealed class <ProduceTravelRaycast>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float totalDistance;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Weapons_Default_Ballistic <>4__this;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 barrelPos;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 direction;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <totalRays>5__2;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <sectionTime>5__3;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__4;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001EF")]
			[Address(RVA = "0x1BE4050", Offset = "0x1BE4050", VA = "0x1BE4050", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F1")]
			[Address(RVA = "0x1BE4098", Offset = "0x1BE4098", VA = "0x1BE4098", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x1BE3E48", Offset = "0x1BE3E48", VA = "0x1BE3E48")]
		[DebuggerHidden]
		public <ProduceTravelRaycast>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x1BE3E74", Offset = "0x1BE3E74", VA = "0x1BE3E74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x1BE3E78", Offset = "0x1BE3E78", VA = "0x1BE3E78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x1BE4058", Offset = "0x1BE4058", VA = "0x1BE4058", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NetworkWeapons netWeapons;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA118", Offset = "0x8DA118")]
	private WeaponHandler weaponHandler;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject reticle;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform Weapon;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SoundGenerator soundGen;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Animator> gunAnims;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Animator> reticleAnims;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WeaponType weaponType;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CockpitUI ui;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CockpitHitter cockpitHitter;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DA150", Offset = "0x8DA150")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA150", Offset = "0x8DA150")]
	public float bulletVelocity;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float rayLength;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float instantRange;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float bulletForce;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA1A0", Offset = "0x8DA1A0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DA1A0", Offset = "0x8DA1A0")]
	public float damageHead;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float damageLegs;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DA1F0", Offset = "0x8DA1F0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA1F0", Offset = "0x8DA1F0")]
	public float fireRate;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve recoilCurve;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA240", Offset = "0x8DA240")]
	public bool dynamicTriggerPull;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DA278", Offset = "0x8DA278")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA278", Offset = "0x8DA278")]
	public int magCapacity;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float reloadHoldTime;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DA2C8", Offset = "0x8DA2C8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA2C8", Offset = "0x8DA2C8")]
	public AudioStore fireSFX;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioStore reloadSFX;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioStore emptySFX;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform barrelPosition;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool StickGripped;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DA318", Offset = "0x8DA318")]
	public int weaponTypeInt;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int leftOrRight;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DA32C", Offset = "0x8DA32C")]
	private LayerMask mechMasks;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int currentAmmo;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float chamberTime;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool roundChambered;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	public bool isFiring;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	public bool isReloading;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
	public bool reloadReset;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool emptyPlayed;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	public bool canFire;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Coroutine recoilRoutine;

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xD40A18", Offset = "0xD40A18", VA = "0xD40A18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xD40C88", Offset = "0xD40C88", VA = "0xD40C88")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xD40EB8", Offset = "0xD40EB8", VA = "0xD40EB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xD410C0", Offset = "0xD410C0", VA = "0xD410C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xD41828", Offset = "0xD41828", VA = "0xD41828")]
	private void TriggerInput()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xD411B8", Offset = "0xD411B8", VA = "0xD411B8")]
	private void ReloadInput()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xD41BB8", Offset = "0xD41BB8", VA = "0xD41BB8")]
	private void InitiateWeaponFiring(InputAction.CallbackContext contex)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xD41BC4", Offset = "0xD41BC4", VA = "0xD41BC4")]
	private void StopWeaponFiring(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xD41BD0", Offset = "0xD41BD0", VA = "0xD41BD0")]
	private void PerformBulletHit(RaycastHit hit, Collider col)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xD4201C", Offset = "0xD4201C", VA = "0xD4201C")]
	private void ProduceInstantRay(Vector3 barrelPos, Vector3 direction)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xD41B40", Offset = "0xD41B40", VA = "0xD41B40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE858", Offset = "0x8DE858")]
	private IEnumerator ReloadWeapons()
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xD41364", Offset = "0xD41364", VA = "0xD41364")]
	private void TryToShootWeapons()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xD420FC", Offset = "0xD420FC", VA = "0xD420FC")]
	private void FireGun(Transform gun, bool instantCast, float totalDistance, Vector3 hitPoint)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xD4239C", Offset = "0xD4239C", VA = "0xD4239C")]
	private void NetworkReloadGun()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xD423C0", Offset = "0xD423C0", VA = "0xD423C0")]
	public void SetFireStatus(bool fire)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xD423CC", Offset = "0xD423CC", VA = "0xD423CC")]
	public void SetStickGripped(bool stickGripped)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xD422D8", Offset = "0xD422D8", VA = "0xD422D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE8B8", Offset = "0x8DE8B8")]
	private IEnumerator ProduceTravelRaycast(Vector3 barrelPos, Vector3 direction, float totalDistance)
	{
		return null;
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xD423D8", Offset = "0xD423D8", VA = "0xD423D8")]
	public Weapons_Default_Ballistic()
	{
	}
}
[Token(Token = "0x200005B")]
public class WorldManager : MonoBehaviour
{
	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA340", Offset = "0x8DA340")]
	public GameObject[] WorldStages;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] StageTreshold;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool RoundsVsScore;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool MaintainStages;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool EnableNextStage;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool HideOrShow;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA378", Offset = "0x8DA378")]
	public int debugRounds;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int i;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int debugPlayerOneScore;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int debugPlayerTwoScore;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool IncreaseRound;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool IncreaseScore;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MatchManager matchManager;

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xD42B80", Offset = "0xD42B80", VA = "0xD42B80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xD42C1C", Offset = "0xD42C1C", VA = "0xD42C1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xD42CA4", Offset = "0xD42CA4", VA = "0xD42CA4")]
	public void RoundStart()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xD42EB4", Offset = "0xD42EB4", VA = "0xD42EB4")]
	public void DebugRoundStart()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xD42FF4", Offset = "0xD42FF4", VA = "0xD42FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xD43058", Offset = "0xD43058", VA = "0xD43058")]
	public WorldManager()
	{
	}
}
[Token(Token = "0x200005C")]
public class ByteBook
{
	[Token(Token = "0x4000369")]
	public const byte playerLoadedIn = 2;

	[Token(Token = "0x400036A")]
	public const byte roundStart = 3;

	[Token(Token = "0x400036B")]
	public const byte gameOver = 4;

	[Token(Token = "0x400036C")]
	public const byte scoreUpdate = 5;

	[Token(Token = "0x400036D")]
	public const byte spawnNewPlayer = 6;

	[Token(Token = "0x400036E")]
	public const byte playerDeath = 7;

	[Token(Token = "0x400036F")]
	public const byte shieldChange = 8;

	[Token(Token = "0x4000370")]
	public const byte playerHit = 9;

	[Token(Token = "0x4000371")]
	public const byte weaponFired = 10;

	[Token(Token = "0x4000372")]
	public const byte bulletHit = 11;

	[Token(Token = "0x4000373")]
	public const byte roundEnd = 12;

	[Token(Token = "0x4000374")]
	public const byte setJumpJet = 13;

	[Token(Token = "0x4000375")]
	public const byte spectatorSpawn = 14;

	[Token(Token = "0x4000376")]
	public const byte updateExtMech = 15;

	[Token(Token = "0x4000377")]
	public const byte enemyRank = 16;

	[Token(Token = "0x4000378")]
	public const byte randomSeed = 17;

	[Token(Token = "0x4000379")]
	public const byte matchStart = 18;

	[Token(Token = "0x400037A")]
	public const byte weaponReload = 19;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x105FC34", Offset = "0x105FC34", VA = "0x105FC34")]
	public ByteBook()
	{
	}
}
[Token(Token = "0x200005D")]
public class LoadoutSelector : MonoBehaviour
{
	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xFFE5D4", Offset = "0xFFE5D4", VA = "0xFFE5D4")]
	public void Start()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xFFE5F0", Offset = "0xFFE5F0", VA = "0xFFE5F0")]
	public void SelectWeapon_R(int weaponInLoadout)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xFFE710", Offset = "0xFFE710", VA = "0xFFE710")]
	public void SelectWeapon_L(int weaponInLoadout)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xFFE830", Offset = "0xFFE830", VA = "0xFFE830")]
	public LoadoutSelector()
	{
	}
}
[Token(Token = "0x200005E")]
public class LobbyButton : MonoBehaviour
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float pressThreshold;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LobbyManager manager;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool pressed;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xFFE838", Offset = "0xFFE838", VA = "0xFFE838")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xFFE964", Offset = "0xFFE964", VA = "0xFFE964")]
	private void FindGame(InputAction.CallbackContext contex)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xFFEA5C", Offset = "0xFFEA5C", VA = "0xFFEA5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xFFEAF4", Offset = "0xFFEAF4", VA = "0xFFEAF4")]
	public LobbyButton()
	{
	}
}
[Token(Token = "0x200005F")]
public class LobbyManager : MonoBehaviourPunCallbacks, ILobbyCallbacks
{
	[Token(Token = "0x2000060")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7E28", Offset = "0x8D7E28")]
	private sealed class <LoadRoutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyManager <>4__this;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string map;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000219")]
			[Address(RVA = "0xD4BEA0", Offset = "0xD4BEA0", VA = "0xD4BEA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021B")]
			[Address(RVA = "0xD4BEE8", Offset = "0xD4BEE8", VA = "0xD4BEE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0xD4BCC8", Offset = "0xD4BCC8", VA = "0xD4BCC8")]
		[DebuggerHidden]
		public <LoadRoutine>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0xD4BCF4", Offset = "0xD4BCF4", VA = "0xD4BCF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0xD4BCF8", Offset = "0xD4BCF8", VA = "0xD4BCF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0xD4BEA8", Offset = "0xD4BEA8", VA = "0xD4BEA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI passwordReadout;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onConnectedToMaster;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject playerRig;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spawnpoint;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA3B0", Offset = "0x8DA3B0")]
	public float startCountdown;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent countdownStarted;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string mapString;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string onlineMap;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MapList mapList;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA3E8", Offset = "0x8DA3E8")]
	public string SocialRoomName;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int SocialRoomPlayerLimit;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA420", Offset = "0x8DA420")]
	public bool specatorMode;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int roomCode;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<RoomInfo> currentRooms;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool privateMatch;

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xFFEAFC", Offset = "0xFFEAFC", VA = "0xFFEAFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xFFEC04", Offset = "0xFFEC04", VA = "0xFFEC04")]
	private void SpawnPlayerRig()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xFFEDD8", Offset = "0xFFEDD8", VA = "0xFFEDD8", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xFFEF94", Offset = "0xFFEF94", VA = "0xFFEF94", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xFFF05C", Offset = "0xFFF05C", VA = "0xFFF05C")]
	public void ConnectToPhotonServer(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xFFF118", Offset = "0xFFF118", VA = "0xFFF118", Slot = "30")]
	public override void OnConnected()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xFFF18C", Offset = "0xFFF18C", VA = "0xFFF18C", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xFFE9A0", Offset = "0xFFE9A0", VA = "0xFFE9A0")]
	public void FindGameButtonClicked()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xFFF2F8", Offset = "0xFFF2F8", VA = "0xFFF2F8", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xFFF7C4", Offset = "0xFFF7C4", VA = "0xFFF7C4", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xFFF880", Offset = "0xFFF880", VA = "0xFFF880", Slot = "44")]
	public override void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xFFF884", Offset = "0xFFF884", VA = "0xFFF884")]
	private void CreateAndJoinRoom()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xFFFB4C", Offset = "0xFFFB4C", VA = "0xFFFB4C")]
	public void CreateAndJoinPrivateRoom()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xFFFDAC", Offset = "0xFFFDAC", VA = "0xFFFDAC")]
	public void JoinPrivateRoom(string roomName)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xFFFE28", Offset = "0xFFFE28", VA = "0xFFFE28")]
	public void CancelRoom()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xFFFE88", Offset = "0xFFFE88", VA = "0xFFFE88", Slot = "35")]
	public override void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xFFFF50", Offset = "0xFFFF50", VA = "0xFFFF50", Slot = "40")]
	public override void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xFFFF58", Offset = "0xFFFF58", VA = "0xFFFF58")]
	public void SetMap(string map)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xFFF630", Offset = "0xFFF630", VA = "0xFFF630")]
	private void LoadIntoNewRoom()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xFFFF60", Offset = "0xFFFF60", VA = "0xFFFF60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE9B8", Offset = "0x8DE9B8")]
	private IEnumerator LoadRoutine(string map)
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xFFFFF4", Offset = "0xFFFFF4", VA = "0xFFFFF4")]
	public LobbyManager()
	{
	}
}
[Token(Token = "0x2000061")]
public class MatchManager : MonoBehaviour, IOnEventCallback, IInRoomCallbacks
{
	[Token(Token = "0x2000062")]
	public delegate void ControlChange(bool canUse);

	[Token(Token = "0x2000063")]
	public delegate void RoundOver(int winnerNum);

	[Token(Token = "0x2000064")]
	public delegate void MatchStart();

	[Token(Token = "0x2000065")]
	public delegate void MatchOver(int winnerNum);

	[Token(Token = "0x2000066")]
	public delegate void EnemyLeft();

	[Token(Token = "0x2000067")]
	public delegate void RoundStart();

	[Token(Token = "0x2000068")]
	public delegate void MechDestory();

	[Token(Token = "0x2000069")]
	public delegate void PlayerSpawned();

	[Token(Token = "0x200006A")]
	public delegate void LosingCallout();

	[Token(Token = "0x200006B")]
	public delegate void WinningCallout();

	[Token(Token = "0x200006C")]
	public delegate void AboutToWinCallout();

	[Token(Token = "0x200006D")]
	public delegate void AboutToLoseCallout();

	[Token(Token = "0x200006E")]
	public delegate void AboutToEndClose();

	[Token(Token = "0x200006F")]
	public delegate void HalfwayCallout();

	[Token(Token = "0x2000070")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7E38", Offset = "0x8D7E38")]
	private sealed class <SpawnPlayerDelay>d__114 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MatchManager <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600029C")]
			[Address(RVA = "0xD4CC70", Offset = "0xD4CC70", VA = "0xD4CC70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600029E")]
			[Address(RVA = "0xD4CCB8", Offset = "0xD4CCB8", VA = "0xD4CCB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0xD4CB30", Offset = "0xD4CB30", VA = "0xD4CB30")]
		[DebuggerHidden]
		public <SpawnPlayerDelay>d__114(int <>1__state)
		{
		}

		[Token(Token = "0x600029A")]
		[Address(RVA = "0xD4CB5C", Offset = "0xD4CB5C", VA = "0xD4CB5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0xD4CB60", Offset = "0xD4CB60", VA = "0xD4CB60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0xD4CC78", Offset = "0xD4CC78", VA = "0xD4CC78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000071")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7E48", Offset = "0x8D7E48")]
	private sealed class <PlayerLeftDelay>d__140 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MatchManager <>4__this;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int winningPlayer;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002A2")]
			[Address(RVA = "0xD4CAE0", Offset = "0xD4CAE0", VA = "0xD4CAE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A4")]
			[Address(RVA = "0xD4CB28", Offset = "0xD4CB28", VA = "0xD4CB28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0xD4C9F0", Offset = "0xD4C9F0", VA = "0xD4C9F0")]
		[DebuggerHidden]
		public <PlayerLeftDelay>d__140(int <>1__state)
		{
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xD4CA1C", Offset = "0xD4CA1C", VA = "0xD4CA1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xD4CA20", Offset = "0xD4CA20", VA = "0xD4CA20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xD4CAE8", Offset = "0xD4CAE8", VA = "0xD4CAE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onMatchStart;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA4D8", Offset = "0x8DA4D8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA4D8", Offset = "0x8DA4D8")]
	public Transform spawnPointA;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spawnPointB;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform trainingSpawn;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject playerPrefab;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject camaeraPrefab;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TargetSpawner trainingTargets;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject WaitingForPlayerObject;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA538", Offset = "0x8DA538")]
	public int rounds;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int roundsToWin;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float roundStartCooldown;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float roundEndCooldown;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA570", Offset = "0x8DA570")]
	public int MinScoreIncrement;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float ScoreLossDivider;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int RoundMultiplier;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int LossSubtraction;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool RoundBased;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int PossibleScore;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool flipSpawnPoint;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float delayAfterEnemyLeaves;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA5A8", Offset = "0x8DA5A8")]
	public int ScoreToWinningCallout;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int ScoreToLosingCallout;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int ScoreToWinCallout;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int ScoreToLossCallout;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int ScoreBothPlayersCloseEnd;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int ScoreHalfwayPoint;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool isHalfwayPointTriggered;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int LastCallout;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject localMech;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private CockpitUI localUI;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int RandomSeed;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int playersLoadedIn;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int round;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int playerOneScore;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int playerTwoScore;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool startCountdownStarted;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	private bool endCountdownStarted;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
	private bool roundOver;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCF")]
	private bool matchOver;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isTraining;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float timer;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA640", Offset = "0x8DA640")]
	public bool PlayerOneDead;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	public bool PlayerTwoDead;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int PlayerNumber;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool DebugCheck;

	[Token(Token = "0x14000004")]
	public static event ControlChange OnControlChange
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0xFFCBF4", Offset = "0xFFCBF4", VA = "0xFFCBF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEA68", Offset = "0x8DEA68")]
		add
		{
		}
		[Token(Token = "0x600021D")]
		[Address(RVA = "0xFFCE44", Offset = "0xFFCE44", VA = "0xFFCE44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEA78", Offset = "0x8DEA78")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event RoundOver OnRoundOver
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x1000634", Offset = "0x1000634", VA = "0x1000634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEA88", Offset = "0x8DEA88")]
		add
		{
		}
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x100123C", Offset = "0x100123C", VA = "0x100123C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEA98", Offset = "0x8DEA98")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event MatchStart OnMatchStart
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0x1004BE4", Offset = "0x1004BE4", VA = "0x1004BE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEAA8", Offset = "0x8DEAA8")]
		add
		{
		}
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x1004CA4", Offset = "0x1004CA4", VA = "0x1004CA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEAB8", Offset = "0x8DEAB8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event MatchOver OnMatchOver
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x10006F4", Offset = "0x10006F4", VA = "0x10006F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEAC8", Offset = "0x8DEAC8")]
		add
		{
		}
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x10012FC", Offset = "0x10012FC", VA = "0x10012FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEAD8", Offset = "0x8DEAD8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event EnemyLeft OnEnemyLeft
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0x10007B4", Offset = "0x10007B4", VA = "0x10007B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEAE8", Offset = "0x8DEAE8")]
		add
		{
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x1004D64", Offset = "0x1004D64", VA = "0x1004D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEAF8", Offset = "0x8DEAF8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event RoundStart OnRoundStart
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x1000574", Offset = "0x1000574", VA = "0x1000574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEB08", Offset = "0x8DEB08")]
		add
		{
		}
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x100117C", Offset = "0x100117C", VA = "0x100117C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEB18", Offset = "0x8DEB18")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event MechDestory onMechDestory
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x1004E24", Offset = "0x1004E24", VA = "0x1004E24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEB28", Offset = "0x8DEB28")]
		add
		{
		}
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x1004EE4", Offset = "0x1004EE4", VA = "0x1004EE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEB38", Offset = "0x8DEB38")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event PlayerSpawned onPlayerSpawned
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x1004FA4", Offset = "0x1004FA4", VA = "0x1004FA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEB48", Offset = "0x8DEB48")]
		add
		{
		}
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x1005064", Offset = "0x1005064", VA = "0x1005064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEB58", Offset = "0x8DEB58")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event LosingCallout OnLosingCallout
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x1000934", Offset = "0x1000934", VA = "0x1000934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEB68", Offset = "0x8DEB68")]
		add
		{
		}
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x100147C", Offset = "0x100147C", VA = "0x100147C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEB78", Offset = "0x8DEB78")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event WinningCallout OnWinningCallout
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x1000874", Offset = "0x1000874", VA = "0x1000874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEB88", Offset = "0x8DEB88")]
		add
		{
		}
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x10013BC", Offset = "0x10013BC", VA = "0x10013BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEB98", Offset = "0x8DEB98")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event AboutToWinCallout OnAboutToWinCallout
	{
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x10009F4", Offset = "0x10009F4", VA = "0x10009F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEBA8", Offset = "0x8DEBA8")]
		add
		{
		}
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x100153C", Offset = "0x100153C", VA = "0x100153C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEBB8", Offset = "0x8DEBB8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event AboutToLoseCallout OnAboutToLoseCallout
	{
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x1000AB4", Offset = "0x1000AB4", VA = "0x1000AB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEBC8", Offset = "0x8DEBC8")]
		add
		{
		}
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x10015FC", Offset = "0x10015FC", VA = "0x10015FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEBD8", Offset = "0x8DEBD8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event AboutToEndClose OnAboutToEndClose
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x1000B74", Offset = "0x1000B74", VA = "0x1000B74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEBE8", Offset = "0x8DEBE8")]
		add
		{
		}
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x10016BC", Offset = "0x10016BC", VA = "0x10016BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEBF8", Offset = "0x8DEBF8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event HalfwayCallout OnHalfwayCallout
	{
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x1000C34", Offset = "0x1000C34", VA = "0x1000C34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEC08", Offset = "0x8DEC08")]
		add
		{
		}
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x100177C", Offset = "0x100177C", VA = "0x100177C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEC18", Offset = "0x8DEC18")]
		remove
		{
		}
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1005124", Offset = "0x1005124", VA = "0x1005124")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x100526C", Offset = "0x100526C", VA = "0x100526C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1005360", Offset = "0x1005360", VA = "0x1005360")]
	private void Update()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1005868", Offset = "0x1005868", VA = "0x1005868")]
	private void SpawnPlayer()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1005DA8", Offset = "0x1005DA8", VA = "0x1005DA8")]
	private void SpawnSpectorCam()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1005E94", Offset = "0x1005E94", VA = "0x1005E94")]
	public void IncrementScore(int ScoreIncrease)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1005F64", Offset = "0x1005F64", VA = "0x1005F64")]
	public void IncrementEnemyScore(int ScoreIncrease)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1006034", Offset = "0x1006034", VA = "0x1006034")]
	public void GameModeCallouts()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1005624", Offset = "0x1005624", VA = "0x1005624")]
	private void StartRound()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x10062CC", Offset = "0x10062CC", VA = "0x10062CC")]
	private void EndRound(int playerKilled)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1006424", Offset = "0x1006424", VA = "0x1006424")]
	private bool EndGameCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x10065F8", Offset = "0x10065F8", VA = "0x10065F8")]
	private void EndGame(int winningPlayer)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1006774", Offset = "0x1006774", VA = "0x1006774")]
	public void EndGameLocalPlayerWin()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x10067E0", Offset = "0x10067E0", VA = "0x10067E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEC28", Offset = "0x8DEC28")]
	private IEnumerator SpawnPlayerDelay()
	{
		return null;
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1006858", Offset = "0x1006858", VA = "0x1006858", Slot = "4")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1007678", Offset = "0x1007678", VA = "0x1007678")]
	private void StartMatchSend()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1005528", Offset = "0x1005528", VA = "0x1005528")]
	public void SpawnPlayerSend()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x100542C", Offset = "0x100542C", VA = "0x100542C")]
	private void StartRoundSend()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1007774", Offset = "0x1007774", VA = "0x1007774")]
	private void PlayerLoadedInSend(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1005654", Offset = "0x1005654", VA = "0x1005654")]
	public void UpdateScoresSend()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1006480", Offset = "0x1006480", VA = "0x1006480")]
	private void RoundEndSend(int winner)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x10065FC", Offset = "0x10065FC", VA = "0x10065FC")]
	private void MatchEndSend(int winner)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x1007870", Offset = "0x1007870", VA = "0x1007870")]
	private void SpawnCameraSend()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1007968", Offset = "0x1007968", VA = "0x1007968")]
	private void SendRandomSeed()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1007454", Offset = "0x1007454", VA = "0x1007454")]
	private void SpawnCameraRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1006DF8", Offset = "0x1006DF8", VA = "0x1006DF8")]
	private void PlayerLoadedInRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x10074F8", Offset = "0x10074F8", VA = "0x10074F8")]
	private void RandomSeedReceived(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x100690C", Offset = "0x100690C", VA = "0x100690C")]
	private void StartRoundRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x10075E8", Offset = "0x10075E8", VA = "0x10075E8")]
	private void StartMatchReceived(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x10069E4", Offset = "0x10069E4", VA = "0x10069E4")]
	private void SpawnNewPlayerRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x1006C7C", Offset = "0x1006C7C", VA = "0x1006C7C")]
	private void MechDeathRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1006FF8", Offset = "0x1006FF8", VA = "0x1006FF8")]
	private void UpdateScoresRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x10071F0", Offset = "0x10071F0", VA = "0x10071F0")]
	private void RoundEndRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1007318", Offset = "0x1007318", VA = "0x1007318")]
	private void MatchEndRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1007AE0", Offset = "0x1007AE0", VA = "0x1007AE0", Slot = "5")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1007B50", Offset = "0x1007B50", VA = "0x1007B50", Slot = "6")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1007C84", Offset = "0x1007C84", VA = "0x1007C84", Slot = "7")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1007C88", Offset = "0x1007C88", VA = "0x1007C88", Slot = "8")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1007C8C", Offset = "0x1007C8C", VA = "0x1007C8C", Slot = "9")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1007BEC", Offset = "0x1007BEC", VA = "0x1007BEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEC88", Offset = "0x8DEC88")]
	private IEnumerator PlayerLeftDelay(float delay, int winningPlayer)
	{
		return null;
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1007C90", Offset = "0x1007C90", VA = "0x1007C90")]
	public MatchManager()
	{
	}
}
[Token(Token = "0x2000072")]
public class MechPartManager : MonoBehaviour
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MechPartManager managerInstance;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<PoolTagger, NetworkHealth> partDictionary;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x100AA40", Offset = "0x100AA40", VA = "0x100AA40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x100ABA4", Offset = "0x100ABA4", VA = "0x100ABA4")]
	public void AddTagger(PoolTagger tag, NetworkHealth netHealth)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xFFBFBC", Offset = "0xFFBFBC", VA = "0xFFBFBC")]
	public NetworkHealth GetHealthManager(PoolTagger tag)
	{
		return null;
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x100AC10", Offset = "0x100AC10", VA = "0x100AC10")]
	public MechPartManager()
	{
	}
}
[Token(Token = "0x2000073")]
public class MechSyncroniser : MonoBehaviourPun, IPunObservable, IOnEventCallback
{
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA678", Offset = "0x8DA678")]
	public Transform cockpit;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform locoSphere;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightGun;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform leftGun;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA6B0", Offset = "0x8DA6B0")]
	public Transform networkTracker;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform rightGunPitch;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform rightGunYaw;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform leftGunPitch;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform leftGunYaw;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MechAnimationManager animationManager;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float distance;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 direction;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 netPosition;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 storedPosition;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion netRotation;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float netAngle;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Quaternion netLeftGunRot;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion storedLeftGunRot;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float netLeftGunAngle;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion netRightGunRot;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion storedRightGunRot;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float netRightGunAngle;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float velocityDistance;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 velocityDirection;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 netVelocity;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 storedVelocity;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Rigidbody cockpitRb;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private SphereCollider locoCol;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool firstTake;

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x10FCC54", Offset = "0x10FCC54", VA = "0x10FCC54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x10FCD2C", Offset = "0x10FCD2C", VA = "0x10FCD2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x10FCD90", Offset = "0x10FCD90", VA = "0x10FCD90")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x10FCF70", Offset = "0x10FCF70", VA = "0x10FCF70")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x10FD0E4", Offset = "0x10FD0E4", VA = "0x10FD0E4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x10FCEE4", Offset = "0x10FCEE4", VA = "0x10FCEE4")]
	private void RotateGun(Quaternion targetRot, Transform pitch, Transform yaw)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x10FD82C", Offset = "0x10FD82C", VA = "0x10FD82C")]
	public void SetJumpJetStatusSend(bool inUse)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x10FDA1C", Offset = "0x10FDA1C", VA = "0x10FDA1C")]
	private void SetJumpJetStatusRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x10FDBA0", Offset = "0x10FDBA0", VA = "0x10FDBA0", Slot = "5")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x10FDBB8", Offset = "0x10FDBB8", VA = "0x10FDBB8")]
	public MechSyncroniser()
	{
	}
}
[Token(Token = "0x2000074")]
public class NetworkAvatar : MonoBehaviourPun
{
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject localPlayer;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject networkMech;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform stableParent;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 rigOffset;

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x1106BE0", Offset = "0x1106BE0", VA = "0x1106BE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1106E00", Offset = "0x1106E00", VA = "0x1106E00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1106C74", Offset = "0x1106C74", VA = "0x1106C74")]
	private void RigSetup()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1106E04", Offset = "0x1106E04", VA = "0x1106E04")]
	public NetworkAvatar()
	{
	}
}
[Token(Token = "0x2000075")]
public class NetworkHealth : MonoBehaviourPun, IOnEventCallback
{
	[Token(Token = "0x2000076")]
	public delegate void DamageTaken(float remainingHealth, int weaponType);

	[Token(Token = "0x2000077")]
	public delegate void HealthIncreased(float health);

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA708", Offset = "0x8DA708")]
	public Transform headRoot;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform legRoot;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CockpitUI ui;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SoundGenerator soundGen;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem externalDeathFX;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator animator;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Collider bodyBumper;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CockpitHitter cockpitHitter;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ExteriorMechDamage extMechDamage;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LoadoutData loadoutData;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PhotonView PV;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA740", Offset = "0x8DA740")]
	public AudioStore FallbackPlayerHitSFX;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 PlayerHitLocation;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioStore playerDeathSFX;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioStore mechDeathSFX;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float mechDeathMinDistance;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float playerHitVolume;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float playerHitMinDistance;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA778", Offset = "0x8DA778")]
	public float maxHealth;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public PhysicMaterial deathBumperFriction;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA7B0", Offset = "0x8DA7B0")]
	public float maxShield;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float shieldReduction;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float shieldRegenRate;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float shieldRegenCooldown;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA7E8", Offset = "0x8DA7E8")]
	public GameObject lightDamage;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject midDamage;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject heavyDamage;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject death;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DA820", Offset = "0x8DA820")]
	public float lightThreshold;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float midThreshold;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float heavyThreshold;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioSource SelfDestructAudioSource;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA834", Offset = "0x8DA834")]
	public AudioStore midAlarmSFX;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioStore heavyAlarmSFX;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Vector3 alarmPoint;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DA86C", Offset = "0x8DA86C")]
	public UnityEvent deathEvent;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA880", Offset = "0x8DA880")]
	public float shield;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float health;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool applyTenDamage;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	public bool restoreTenHealth;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float shieldTimer;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool regenStarted;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	public bool alive;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<Collider> headColliders;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<Collider> legColliders;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private PoolTagger[] mechTags;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private SoundProducer midAlarmProducer;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private SoundProducer heavyAlarmProducer;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3 lastHitPos;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private Vector3 lastHitForce;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Collider lastHitCollider;

	[Token(Token = "0x14000012")]
	public static event DamageTaken OnDamageTaken
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x1106E38", Offset = "0x1106E38", VA = "0x1106E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DED88", Offset = "0x8DED88")]
		add
		{
		}
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x1106EF4", Offset = "0x1106EF4", VA = "0x1106EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DED98", Offset = "0x8DED98")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event HealthIncreased OnHealthIncreased
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x1106FB0", Offset = "0x1106FB0", VA = "0x1106FB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEDA8", Offset = "0x8DEDA8")]
		add
		{
		}
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x1107070", Offset = "0x1107070", VA = "0x1107070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEDB8", Offset = "0x8DEDB8")]
		remove
		{
		}
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1107130", Offset = "0x1107130", VA = "0x1107130")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1107670", Offset = "0x1107670", VA = "0x1107670")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1107704", Offset = "0x1107704", VA = "0x1107704")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1107810", Offset = "0x1107810", VA = "0x1107810")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1107168", Offset = "0x1107168", VA = "0x1107168")]
	private void SetupColliderList()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1107264", Offset = "0x1107264", VA = "0x1107264")]
	private void AddPoolTaggerComponents()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1107B88", Offset = "0x1107B88", VA = "0x1107B88")]
	public void TrySelfDestruct(AudioClip FailedSelfDestructSound)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1107894", Offset = "0x1107894", VA = "0x1107894")]
	public void TakeDamage(float damage, int weaponType)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1107AE0", Offset = "0x1107AE0", VA = "0x1107AE0")]
	public void IncreaseHealth(float healthIncrease)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x11081A0", Offset = "0x11081A0", VA = "0x11081A0")]
	private void KillMech()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1107864", Offset = "0x1107864", VA = "0x1107864")]
	private void UpdateCockpitUI()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x11082F0", Offset = "0x11082F0", VA = "0x11082F0")]
	private void SetPoolTaggerShieldStatus(bool hasShield)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x110765C", Offset = "0x110765C", VA = "0x110765C")]
	private void SetBaseStats()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x1107E5C", Offset = "0x1107E5C", VA = "0x1107E5C")]
	private void ApplyDamageFX()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x1108358", Offset = "0x1108358", VA = "0x1108358", Slot = "4")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x10FED84", Offset = "0x10FED84", VA = "0x10FED84")]
	public void DamageTakenSend(Collider col, Vector3 hitPos, Vector3 hitForce, Vector3 hitDirection, float damageHead, float damageLegs, int weaponType)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x11083B0", Offset = "0x11083B0", VA = "0x11083B0")]
	public void DamageTakenReceievd(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x1107CCC", Offset = "0x1107CCC", VA = "0x1107CCC")]
	public void MechDeathSend()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1108664", Offset = "0x1108664", VA = "0x1108664")]
	private void MechDeathRecieve(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x1108968", Offset = "0x1108968", VA = "0x1108968")]
	public void UpdateExternalMechSend()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x11087C8", Offset = "0x11087C8", VA = "0x11087C8")]
	private void UpdateExternalMechRecieve(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1108B58", Offset = "0x1108B58", VA = "0x1108B58")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1108BBC", Offset = "0x1108BBC", VA = "0x1108BBC")]
	public NetworkHealth()
	{
	}
}
[Token(Token = "0x2000078")]
public class NetworkWeapons : MonoBehaviourPun, IOnEventCallback
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LoadoutData loadoutData;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BulletWizzer wizzer;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoundGenerator soundGen;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioStore fireSFX;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 barrelOffset;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float gunFireMinDistance;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA8B8", Offset = "0x8DA8B8")]
	public WeaponHandler weaponHandler;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform reticle;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MechSyncroniser mechSyncroniser;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform shoulderAdapter_r;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform shoulderAdapter_l;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int loadout_r;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int loadout_l;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform rightWeapon;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform leftWeapon;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PhotonView PV;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1108C50", Offset = "0x1108C50", VA = "0x1108C50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1109078", Offset = "0x1109078", VA = "0x1109078")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x11090DC", Offset = "0x11090DC", VA = "0x11090DC")]
	private void FireGun(Transform gun, float totalDistance, Vector3 hitPoint, float bulletSpeed, int weaponType, int leftOrRight)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x11092E8", Offset = "0x11092E8", VA = "0x11092E8")]
	private void NetworkReloadGun(int leftOrRight)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x11093B0", Offset = "0x11093B0", VA = "0x11093B0")]
	public void BulletHitSend(Vector3 hitPoint, Vector3 hitNormal, int type, int weaponType, int actorHit)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x1109710", Offset = "0x1109710", VA = "0x1109710")]
	public void WeaponFiredSend(float totalDistance, Vector3 hitPoint, float bulletSpeed, Vector3 pos, int weaponType, int leftOrRight)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1109AD4", Offset = "0x1109AD4", VA = "0x1109AD4")]
	private void BulletHitRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1109E68", Offset = "0x1109E68", VA = "0x1109E68")]
	private void WeaponFiredRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x110A1E8", Offset = "0x110A1E8", VA = "0x110A1E8")]
	public void ReloadSend(int leftOrRight)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x110A3C4", Offset = "0x110A3C4", VA = "0x110A3C4")]
	private void ReloadReceived(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x110A530", Offset = "0x110A530", VA = "0x110A530", Slot = "4")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x110A588", Offset = "0x110A588", VA = "0x110A588")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x110A58C", Offset = "0x110A58C", VA = "0x110A58C")]
	public NetworkWeapons()
	{
	}
}
[Token(Token = "0x2000079")]
public class OfflineMode : MonoBehaviour
{
	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x18E3528", Offset = "0x18E3528", VA = "0x18E3528")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x18E3588", Offset = "0x18E3588", VA = "0x18E3588")]
	public OfflineMode()
	{
	}
}
[Token(Token = "0x200007A")]
public class PlayerCount : MonoBehaviour
{
	[Token(Token = "0x200007B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7E58", Offset = "0x8D7E58")]
	private sealed class <waitAndExecute>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerCount <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002F0")]
			[Address(RVA = "0xD55C58", Offset = "0xD55C58", VA = "0xD55C58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002F2")]
			[Address(RVA = "0xD55CA0", Offset = "0xD55CA0", VA = "0xD55CA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xD55AC8", Offset = "0xD55AC8", VA = "0xD55AC8")]
		[DebuggerHidden]
		public <waitAndExecute>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xD55AF4", Offset = "0xD55AF4", VA = "0xD55AF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xD55AF8", Offset = "0xD55AF8", VA = "0xD55AF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xD55C60", Offset = "0xD55C60", VA = "0xD55C60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA8F0", Offset = "0x8DA8F0")]
	public TextMesh CountText;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float playerCountUpdateDelay;

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xE47098", Offset = "0xE47098", VA = "0xE47098")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xE471B4", Offset = "0xE471B4", VA = "0xE471B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEDC8", Offset = "0x8DEDC8")]
	private IEnumerator waitAndExecute()
	{
		return null;
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xE4722C", Offset = "0xE4722C", VA = "0xE4722C")]
	public PlayerCount()
	{
	}
}
[Token(Token = "0x200007C")]
public class RoomList : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<string, int> roomInfoCache;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> TextList;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject textPrefab;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 positionOffset;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text totalRooms;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text totalDebugRooms;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string totalRoomsText;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string totalDebugRoomsText;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int LengthOfDictionary;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA928", Offset = "0x8DA928")]
	public Transform rootTransform;

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xE51348", Offset = "0xE51348", VA = "0xE51348")]
	public void UpdateRoomDrawing()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xE518D0", Offset = "0xE518D0", VA = "0xE518D0")]
	public void SetText(TMP_Text tmp, string text, int i)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xE519A8", Offset = "0xE519A8", VA = "0xE519A8", Slot = "40")]
	public override void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xE51AC8", Offset = "0xE51AC8", VA = "0xE51AC8")]
	private void RoomReceived(RoomInfo room)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xE51C68", Offset = "0xE51C68", VA = "0xE51C68")]
	public RoomList()
	{
	}
}
[Token(Token = "0x200007D")]
public class SocialRoomMatchManager : MonoBehaviourPun, IOnEventCallback, IInRoomCallbacks
{
	[Token(Token = "0x200007E")]
	public delegate void ControlChange(bool canUse);

	[Token(Token = "0x200007F")]
	public delegate void RoundOver(int winnerNum);

	[Token(Token = "0x2000080")]
	public delegate void MatchStart();

	[Token(Token = "0x2000081")]
	public delegate void MatchOver(int winnerNum);

	[Token(Token = "0x2000082")]
	public delegate void RoundStart();

	[Token(Token = "0x2000083")]
	public delegate void MechDestory();

	[Token(Token = "0x2000084")]
	public delegate void PlayerSpawned();

	[Token(Token = "0x2000085")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7E68", Offset = "0x8D7E68")]
	private sealed class <SpawnPlayerDelay>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SocialRoomMatchManager <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000334")]
			[Address(RVA = "0xD576AC", Offset = "0xD576AC", VA = "0xD576AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000336")]
			[Address(RVA = "0xD576F4", Offset = "0xD576F4", VA = "0xD576F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0xD575BC", Offset = "0xD575BC", VA = "0xD575BC")]
		[DebuggerHidden]
		public <SpawnPlayerDelay>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0xD575E8", Offset = "0xD575E8", VA = "0xD575E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0xD575EC", Offset = "0xD575EC", VA = "0xD575EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0xD576B4", Offset = "0xD576B4", VA = "0xD576B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onMatchStart;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA9D0", Offset = "0x8DA9D0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA9D0", Offset = "0x8DA9D0")]
	public Transform[] spawnPoints;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform trainingSpawn;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject playerPrefab;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject camaeraPrefab;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TargetSpawner trainingTargets;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject WaitingForPlayerObject;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAA30", Offset = "0x8DAA30")]
	public int rounds;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int roundsToWin;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float roundStartCooldown;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float roundEndCooldown;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAA68", Offset = "0x8DAA68")]
	public int MinScoreIncrement;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float ScoreLossDivider;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int RoundMultiplier;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int LossSubtraction;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool RoundBased;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int PossibleScore;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool flipSpawnPoint;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject localMech;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CockpitUI localUI;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int RandomSeed;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float PlayerSpawnDelay;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int playersLoadedIn;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int round;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int playerOneScore;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int playerTwoScore;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool endCountdownStarted;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float timer;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAAA0", Offset = "0x8DAAA0")]
	public bool PlayerOneDead;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool PlayerTwoDead;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int PlayerNumber;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool DebugCheck;

	[Token(Token = "0x14000014")]
	public static event ControlChange OnControlChange
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x132F80C", Offset = "0x132F80C", VA = "0x132F80C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEE78", Offset = "0x8DEE78")]
		add
		{
		}
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x132F8C8", Offset = "0x132F8C8", VA = "0x132F8C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEE88", Offset = "0x8DEE88")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event RoundOver OnRoundOver
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x132F984", Offset = "0x132F984", VA = "0x132F984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEE98", Offset = "0x8DEE98")]
		add
		{
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x132FA44", Offset = "0x132FA44", VA = "0x132FA44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEEA8", Offset = "0x8DEEA8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event MatchStart OnMatchStart
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x132FB04", Offset = "0x132FB04", VA = "0x132FB04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEEB8", Offset = "0x8DEEB8")]
		add
		{
		}
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x132FBC4", Offset = "0x132FBC4", VA = "0x132FBC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEEC8", Offset = "0x8DEEC8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event MatchOver OnMatchOver
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x132FC84", Offset = "0x132FC84", VA = "0x132FC84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEED8", Offset = "0x8DEED8")]
		add
		{
		}
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x132FD44", Offset = "0x132FD44", VA = "0x132FD44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEEE8", Offset = "0x8DEEE8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event RoundStart OnRoundStart
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x132FE04", Offset = "0x132FE04", VA = "0x132FE04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEEF8", Offset = "0x8DEEF8")]
		add
		{
		}
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x132FEC4", Offset = "0x132FEC4", VA = "0x132FEC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF08", Offset = "0x8DEF08")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public static event MechDestory onMechDestory
	{
		[Token(Token = "0x6000302")]
		[Address(RVA = "0x132FF84", Offset = "0x132FF84", VA = "0x132FF84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF18", Offset = "0x8DEF18")]
		add
		{
		}
		[Token(Token = "0x6000303")]
		[Address(RVA = "0x1330044", Offset = "0x1330044", VA = "0x1330044")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF28", Offset = "0x8DEF28")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event PlayerSpawned onPlayerSpawned
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0x1330104", Offset = "0x1330104", VA = "0x1330104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF38", Offset = "0x8DEF38")]
		add
		{
		}
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x13301C4", Offset = "0x13301C4", VA = "0x13301C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF48", Offset = "0x8DEF48")]
		remove
		{
		}
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1330284", Offset = "0x1330284", VA = "0x1330284")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x13303CC", Offset = "0x13303CC", VA = "0x13303CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1330430", Offset = "0x1330430", VA = "0x1330430")]
	private void Update()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1330498", Offset = "0x1330498", VA = "0x1330498")]
	private void SpawnPlayer()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1330354", Offset = "0x1330354", VA = "0x1330354")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEF58", Offset = "0x8DEF58")]
	private IEnumerator SpawnPlayerDelay()
	{
		return null;
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1330954", Offset = "0x1330954", VA = "0x1330954", Slot = "4")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x133085C", Offset = "0x133085C", VA = "0x133085C")]
	private void PlayerLoadedInSend()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x13309B0", Offset = "0x13309B0", VA = "0x13309B0")]
	private void PlayerLoadedInRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x13309D0", Offset = "0x13309D0", VA = "0x13309D0")]
	private void MechDeathRecieved(EventData photonEvent, byte eventCode)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1330B20", Offset = "0x1330B20", VA = "0x1330B20", Slot = "5")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1330B24", Offset = "0x1330B24", VA = "0x1330B24", Slot = "6")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1330B28", Offset = "0x1330B28", VA = "0x1330B28", Slot = "7")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1330B2C", Offset = "0x1330B2C", VA = "0x1330B2C", Slot = "8")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1330B30", Offset = "0x1330B30", VA = "0x1330B30", Slot = "9")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1330B34", Offset = "0x1330B34", VA = "0x1330B34")]
	public SocialRoomMatchManager()
	{
	}
}
[Token(Token = "0x2000086")]
public class NumberPad : MonoBehaviour
{
	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TouchButton[] buttons;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LobbyManager lobbyManager;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI readout;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, int> buttonDict;

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x110A5C8", Offset = "0x110A5C8", VA = "0x110A5C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x110A738", Offset = "0x110A738", VA = "0x110A738")]
	public void PressNumberButton(int id)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x110A824", Offset = "0x110A824", VA = "0x110A824")]
	public void PressDelete()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x110A8E4", Offset = "0x110A8E4", VA = "0x110A8E4")]
	public void JoinRoom()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x110A930", Offset = "0x110A930", VA = "0x110A930")]
	public NumberPad()
	{
	}
}
[Token(Token = "0x2000087")]
public class PauseMenu : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x2000088")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7E78", Offset = "0x8D7E78")]
	private sealed class <LeaveRoomDelay>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PauseMenu <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600034D")]
			[Address(RVA = "0xD55714", Offset = "0xD55714", VA = "0xD55714", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600034F")]
			[Address(RVA = "0xD5575C", Offset = "0xD5575C", VA = "0xD5575C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0xD55480", Offset = "0xD55480", VA = "0xD55480")]
		[DebuggerHidden]
		public <LeaveRoomDelay>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0xD554AC", Offset = "0xD554AC", VA = "0xD554AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0xD554B0", Offset = "0xD554B0", VA = "0xD554B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0xD5571C", Offset = "0xD5571C", VA = "0xD5571C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject openButton;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject mainScreen;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float leaveDelay;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float leaveDelayEndGame;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DAAD8", Offset = "0x8DAAD8")]
	private float minZ;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float maxZ;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isLeaving;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isOpen;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool endGame;

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xE44520", Offset = "0xE44520", VA = "0xE44520")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xE44540", Offset = "0xE44540", VA = "0xE44540", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xE445C8", Offset = "0xE445C8", VA = "0xE445C8", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xE44650", Offset = "0xE44650", VA = "0xE44650")]
	private void Update()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xE44708", Offset = "0xE44708", VA = "0xE44708")]
	private void HideMenu()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xE446B0", Offset = "0xE446B0", VA = "0xE446B0")]
	private void ShowMenu()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xE4475C", Offset = "0xE4475C", VA = "0xE4475C")]
	public void SetScreenVisibility()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xE4479C", Offset = "0xE4479C", VA = "0xE4479C")]
	public void LeaveMatchEnd(int winningPlayer)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xE448AC", Offset = "0xE448AC", VA = "0xE448AC")]
	public void LeaveMatch(int winningPlayer)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xE4493C", Offset = "0xE4493C", VA = "0xE4493C", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xE44944", Offset = "0xE44944", VA = "0xE44944", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xE449C8", Offset = "0xE449C8", VA = "0xE449C8")]
	public void SetGrabTypeOnHands(bool isToggle)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xE44834", Offset = "0xE44834", VA = "0xE44834")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF008", Offset = "0x8DF008")]
	private IEnumerator LeaveRoomDelay()
	{
		return null;
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xE44CCC", Offset = "0xE44CCC", VA = "0xE44CCC")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x2000089")]
public class PlayerRig : MonoBehaviour
{
	[Token(Token = "0x200008A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7E88", Offset = "0x8D7E88")]
	private sealed class <MoveFaderUp>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerRig <>4__this;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <counter>5__2;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000361")]
			[Address(RVA = "0xD55FAC", Offset = "0xD55FAC", VA = "0xD55FAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000363")]
			[Address(RVA = "0xD55FF4", Offset = "0xD55FF4", VA = "0xD55FF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0xD55E54", Offset = "0xD55E54", VA = "0xD55E54")]
		[DebuggerHidden]
		public <MoveFaderUp>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0xD55E80", Offset = "0xD55E80", VA = "0xD55E80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0xD55E84", Offset = "0xD55E84", VA = "0xD55E84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0xD55FB4", Offset = "0xD55FB4", VA = "0xD55FB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7E98", Offset = "0x8D7E98")]
	private sealed class <MoveFaderDown>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerRig <>4__this;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <counter>5__2;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000367")]
			[Address(RVA = "0xD55E04", Offset = "0xD55E04", VA = "0xD55E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000369")]
			[Address(RVA = "0xD55E4C", Offset = "0xD55E4C", VA = "0xD55E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0xD55CA8", Offset = "0xD55CA8", VA = "0xD55CA8")]
		[DebuggerHidden]
		public <MoveFaderDown>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0xD55CD4", Offset = "0xD55CD4", VA = "0xD55CD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0xD55CD8", Offset = "0xD55CD8", VA = "0xD55CD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0xD55E0C", Offset = "0xD55E0C", VA = "0xD55E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAAEC", Offset = "0x8DAAEC")]
	public static PlayerRig rigInstance;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhysicsHands[] hands;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandPoseController[] poseControllers;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsToggle;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool DebugCheck;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool BypassEntitlement;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAB24", Offset = "0x8DAB24")]
	public Transform fader;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 upPos;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 downPos;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float fadeTime;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAB5C", Offset = "0x8DAB5C")]
	public ControllerOffset indexOffset;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ControllerOffset viveOffset;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ControllerOffset oculusOffset;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerOffset noOffset;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ControllerOffset selectedOffset;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<UnityEngine.XR.InputDevice> devices;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine fadeRoutine;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public bool isFaded;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xE4723C", Offset = "0xE4723C", VA = "0xE4723C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xE475A4", Offset = "0xE475A4", VA = "0xE475A4")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xE476A4", Offset = "0xE476A4", VA = "0xE476A4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xE47704", Offset = "0xE47704", VA = "0xE47704")]
	private void Update()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xE477A0", Offset = "0xE477A0", VA = "0xE477A0")]
	private void SetupOffsets()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xE47AEC", Offset = "0xE47AEC", VA = "0xE47AEC")]
	public void ResetGrips()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xE47B54", Offset = "0xE47B54", VA = "0xE47B54")]
	public void EjectRig()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xE47B7C", Offset = "0xE47B7C", VA = "0xE47B7C")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xE47C4C", Offset = "0xE47C4C", VA = "0xE47C4C")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xE44A3C", Offset = "0xE44A3C", VA = "0xE44A3C")]
	public void SetGripType(bool isToggle)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xE47CA4", Offset = "0xE47CA4", VA = "0xE47CA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF0B8", Offset = "0x8DF0B8")]
	private IEnumerator MoveFaderUp()
	{
		return null;
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xE47BD4", Offset = "0xE47BD4", VA = "0xE47BD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF118", Offset = "0x8DF118")]
	private IEnumerator MoveFaderDown()
	{
		return null;
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xE47D1C", Offset = "0xE47D1C", VA = "0xE47D1C")]
	public PlayerRig()
	{
	}
}
[Token(Token = "0x200008C")]
public class BaseObjectPool : MonoBehaviour
{
	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BasePoolObject prefab;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int poolSize;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal Queue<BasePoolObject> avaiableObjects;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x105C010", Offset = "0x105C010", VA = "0x105C010", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x105C014", Offset = "0x105C014", VA = "0x105C014")]
	private void GrowPool()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x105C108", Offset = "0x105C108", VA = "0x105C108")]
	private void AddToPool(BasePoolObject poolObject)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x105C18C", Offset = "0x105C18C", VA = "0x105C18C")]
	public BaseObjectPool()
	{
	}
}
[Token(Token = "0x200008D")]
public class BasePoolObject : MonoBehaviour
{
	[Token(Token = "0x600036E")]
	[Address(RVA = "0x105C218", Offset = "0x105C218", VA = "0x105C218")]
	private void Start()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x105C21C", Offset = "0x105C21C", VA = "0x105C21C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x105C220", Offset = "0x105C220", VA = "0x105C220")]
	public BasePoolObject()
	{
	}
}
[Token(Token = "0x200008E")]
public class BulletSFXManager : MonoBehaviour
{
	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BulletSFXManager managerInstance;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SoundGenerator soundGen;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioStore groundSFX;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DABA4", Offset = "0x8DABA4")]
	public List<AudioStore> mechHitSFX;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AudioStore> groundHitSFX;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DABDC", Offset = "0x8DABDC")]
	public float fxMechImpactMinDistance;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fxGroundImpactMinDistance;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float fxMinDistance;

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x105E520", Offset = "0x105E520", VA = "0x105E520")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x105E640", Offset = "0x105E640", VA = "0x105E640")]
	public void ProduceBulletHitSFX(Vector3 hitPoint, PoolTagger.SurfaceType type, int weaponType)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x105E6C0", Offset = "0x105E6C0", VA = "0x105E6C0")]
	private AudioClip GetHitSFX(PoolTagger.SurfaceType type, out AudioStore store, int weaponType)
	{
		return null;
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x105E7F0", Offset = "0x105E7F0", VA = "0x105E7F0")]
	public BulletSFXManager()
	{
	}
}
[Token(Token = "0x200008F")]
public class HitFXObjectPool : BaseObjectPool
{
	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HitFXObjectPool poolInstance;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xFF81BC", Offset = "0xFF81BC", VA = "0xFF81BC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xFF82E0", Offset = "0xFF82E0", VA = "0xFF82E0")]
	public void GetHitFX(Vector3 hitPos, Vector3 hitNormal, PoolTagger.SurfaceType type, int weaponType)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xFF8670", Offset = "0xFF8670", VA = "0xFF8670")]
	public HitFXObjectPool()
	{
	}
}
[Token(Token = "0x2000090")]
public class HitFXPoolObject : BasePoolObject
{
	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HitFXCollection fxCollection;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DABF0", Offset = "0x8DABF0")]
	public List<ParticleSystem> mechHitFX;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ParticleSystem> groundHitFX;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xFF867C", Offset = "0xFF867C", VA = "0xFF867C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xFF8430", Offset = "0xFF8430", VA = "0xFF8430")]
	public void ProduceHitFX(Vector3 hitPos, Vector3 hitNormal, PoolTagger.SurfaceType type, int weaponType)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xFF8680", Offset = "0xFF8680", VA = "0xFF8680")]
	public HitFXPoolObject()
	{
	}
}
[Serializable]
[Token(Token = "0x2000091")]
public class HitFXCollection
{
	[Token(Token = "0x600037D")]
	[Address(RVA = "0xFF81B4", Offset = "0xFF81B4", VA = "0xFF81B4")]
	public HitFXCollection()
	{
	}
}
[Token(Token = "0x2000092")]
public class MuzzleFXPoolObject : BasePoolObject
{
	[Token(Token = "0x2000093")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7EA8", Offset = "0x8D7EA8")]
	private sealed class <UnParentFlash>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MuzzleFXPoolObject <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000387")]
			[Address(RVA = "0xD502B8", Offset = "0xD502B8", VA = "0xD502B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000389")]
			[Address(RVA = "0xD50300", Offset = "0xD50300", VA = "0xD50300", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0xD501B4", Offset = "0xD501B4", VA = "0xD501B4")]
		[DebuggerHidden]
		public <UnParentFlash>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0xD501E0", Offset = "0xD501E0", VA = "0xD501E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0xD501E4", Offset = "0xD501E4", VA = "0xD501E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0xD502C0", Offset = "0xD502C0", VA = "0xD502C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAC28", Offset = "0x8DAC28")]
	public List<ParticleSystem> muzzleFX;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float parentTime;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform originalParent;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x110588C", Offset = "0x110588C", VA = "0x110588C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1105934", Offset = "0x1105934", VA = "0x1105934")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x11059B0", Offset = "0x11059B0", VA = "0x11059B0")]
	public void ProduceMuzzleFX(Transform parent, Vector3 origin, Quaternion rotation, int weaponType)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1105B9C", Offset = "0x1105B9C", VA = "0x1105B9C")]
	public void ForceUnparent()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1105B24", Offset = "0x1105B24", VA = "0x1105B24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF218", Offset = "0x8DF218")]
	private IEnumerator UnParentFlash()
	{
		return null;
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1105BDC", Offset = "0x1105BDC", VA = "0x1105BDC")]
	public MuzzleFXPoolObject()
	{
	}
}
[Token(Token = "0x2000094")]
public class MuzzleFlashPool : BaseObjectPool
{
	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MuzzleFlashPool poolInstance;

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1105BF0", Offset = "0x1105BF0", VA = "0x1105BF0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1105D14", Offset = "0x1105D14", VA = "0x1105D14")]
	public void GetMuzzleFlash(Transform parent, Vector3 origin, Quaternion rotation, int weaponType)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1105E74", Offset = "0x1105E74", VA = "0x1105E74")]
	public MuzzleFlashPool()
	{
	}
}
[Token(Token = "0x2000095")]
public class PoolTagManager : MonoBehaviour
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PoolTagManager managerInstance;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, PoolTagger> poolTagCollection;

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xE48EB8", Offset = "0xE48EB8", VA = "0xE48EB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xE4901C", Offset = "0xE4901C", VA = "0xE4901C")]
	public void AddObjectToManager(int id, PoolTagger tagger)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xE49088", Offset = "0xE49088", VA = "0xE49088")]
	public PoolTagger GetTagger(int id)
	{
		return null;
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xE490FC", Offset = "0xE490FC", VA = "0xE490FC")]
	public PoolTagManager()
	{
	}
}
[Token(Token = "0x2000096")]
public class PoolTagger : MonoBehaviour
{
	[Token(Token = "0x2000097")]
	public enum SurfaceType
	{
		[Token(Token = "0x40004BB")]
		Shields,
		[Token(Token = "0x40004BC")]
		Mech,
		[Token(Token = "0x40004BD")]
		Ground,
		[Token(Token = "0x40004BE")]
		Wall,
		[Token(Token = "0x40004BF")]
		Target,
		[Token(Token = "0x40004C0")]
		MechBall
	}

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SurfaceType surfaceType;

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xE49108", Offset = "0xE49108", VA = "0xE49108")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xE4919C", Offset = "0xE4919C", VA = "0xE4919C")]
	public PoolTagger()
	{
	}
}
[Token(Token = "0x2000098")]
public class SoundGenerator : MonoBehaviour
{
	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float baseVolume;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float basePitch;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pitchModifier;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float baseMinDistance;

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1332D2C", Offset = "0x1332D2C", VA = "0x1332D2C")]
	public SoundProducer PlaySpecificClipAtPosition(AudioClip clip, AudioStore store, Vector3 position, bool autoStop)
	{
		return null;
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1332EAC", Offset = "0x1332EAC", VA = "0x1332EAC")]
	public SoundProducer PlaySpecificClipAtPosition(AudioClip clip, AudioStore store, Vector3 position, float volume, float minDistance, bool autoStop)
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1332F44", Offset = "0x1332F44", VA = "0x1332F44")]
	public SoundProducer PlaySpecificClipParent(AudioClip clip, AudioStore store, Transform parent, Vector3 position, float parentTime, bool autoStop)
	{
		return null;
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1332FE0", Offset = "0x1332FE0", VA = "0x1332FE0")]
	public SoundProducer PlaySpecificClipParent(AudioClip clip, AudioStore store, Transform parent, Vector3 position, float parentTime, float volume, float minDistance, bool autoStop)
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1332DB8", Offset = "0x1332DB8", VA = "0x1332DB8")]
	private SoundProducer GetSoundProduced(AudioClip clip, AudioStore store, Transform parent, Vector3 position, float parentTime, float volume, float pitch, float minDistance, bool autoStop)
	{
		return null;
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1333268", Offset = "0x1333268", VA = "0x1333268")]
	public SoundGenerator()
	{
	}
}
[Token(Token = "0x2000099")]
public class SoundPool : BaseObjectPool
{
	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoundPool poolInstance;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int PoolCount;

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x13333FC", Offset = "0x13333FC", VA = "0x13333FC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1333080", Offset = "0x1333080", VA = "0x1333080")]
	public SoundProducer GetSoundProducer(Transform parent, Vector3 position, float parentTime, AudioClip clip, AudioStore store, float volume, float pitch, float minDistance, bool autoStop)
	{
		return null;
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1333724", Offset = "0x1333724", VA = "0x1333724")]
	public SoundPool()
	{
	}
}
[Token(Token = "0x200009A")]
public class SoundProducer : BasePoolObject
{
	[Token(Token = "0x200009B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7EB8", Offset = "0x8D7EB8")]
	private sealed class <CheckForSoundCompletetion>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float parentTime;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SoundProducer <>4__this;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003AD")]
			[Address(RVA = "0xD58FFC", Offset = "0xD58FFC", VA = "0xD58FFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003AF")]
			[Address(RVA = "0xD59044", Offset = "0xD59044", VA = "0xD59044", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xD58EDC", Offset = "0xD58EDC", VA = "0xD58EDC")]
		[DebuggerHidden]
		public <CheckForSoundCompletetion>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xD58F08", Offset = "0xD58F08", VA = "0xD58F08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xD58F0C", Offset = "0xD58F0C", VA = "0xD58F0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xD59004", Offset = "0xD59004", VA = "0xD59004", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200009C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7EC8", Offset = "0x8D7EC8")]
	private sealed class <FadeAudio>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SoundProducer <>4__this;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float endValue;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <counter>5__2;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003B3")]
			[Address(RVA = "0xD59178", Offset = "0xD59178", VA = "0xD59178", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003B5")]
			[Address(RVA = "0xD591C0", Offset = "0xD591C0", VA = "0xD591C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0xD5904C", Offset = "0xD5904C", VA = "0xD5904C")]
		[DebuggerHidden]
		public <FadeAudio>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xD59078", Offset = "0xD59078", VA = "0xD59078", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xD5907C", Offset = "0xD5907C", VA = "0xD5907C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xD59180", Offset = "0xD59180", VA = "0xD59180", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200009D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7ED8", Offset = "0x8D7ED8")]
	private sealed class <TrackSound>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float trackTime;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform tracker;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SoundProducer <>4__this;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <counter>5__2;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <offset>5__3;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003B9")]
			[Address(RVA = "0xD593B4", Offset = "0xD593B4", VA = "0xD593B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003BB")]
			[Address(RVA = "0xD593FC", Offset = "0xD593FC", VA = "0xD593FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xD591C8", Offset = "0xD591C8", VA = "0xD591C8")]
		[DebuggerHidden]
		public <TrackSound>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xD591F4", Offset = "0xD591F4", VA = "0xD591F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xD591F8", Offset = "0xD591F8", VA = "0xD591F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xD593BC", Offset = "0xD593BC", VA = "0xD593BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform originalParent;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine fadeRoutine;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine trackRoutine;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1333930", Offset = "0x1333930", VA = "0x1333930")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x13339EC", Offset = "0x13339EC", VA = "0x13339EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1333520", Offset = "0x1333520", VA = "0x1333520")]
	public void PlaySound(Transform parent, Vector3 position, float parentTime, AudioClip clip, AudioStore store, float volume, float pitch, float minDistance, bool autoStop)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1333B94", Offset = "0x1333B94", VA = "0x1333B94")]
	public void FadeInAudio(float volume, float fadeTime)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1333C94", Offset = "0x1333C94", VA = "0x1333C94")]
	public void FadeOutAudio(float fadeTime)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1333D00", Offset = "0x1333D00", VA = "0x1333D00")]
	public void StopSound()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x1333DA0", Offset = "0x1333DA0", VA = "0x1333DA0")]
	public void AdjustSettings(float volume, float pictch)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1333B0C", Offset = "0x1333B0C", VA = "0x1333B0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF2C8", Offset = "0x8DF2C8")]
	private IEnumerator CheckForSoundCompletetion(float parentTime)
	{
		return null;
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1333C04", Offset = "0x1333C04", VA = "0x1333C04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF328", Offset = "0x8DF328")]
	private IEnumerator FadeAudio(float endValue, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1333A68", Offset = "0x1333A68", VA = "0x1333A68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF388", Offset = "0x8DF388")]
	private IEnumerator TrackSound(Transform tracker, float trackTime)
	{
		return null;
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1333DEC", Offset = "0x1333DEC", VA = "0x1333DEC")]
	public SoundProducer()
	{
	}
}
[Token(Token = "0x200009E")]
public class TracerFXPoolObject : BasePoolObject
{
	[Token(Token = "0x200009F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7EE8", Offset = "0x8D7EE8")]
	private sealed class <ProduceLine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TracerFXPoolObject <>4__this;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float bulletSpeed;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 end;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 origin;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int totalSections;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int weaponType;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <sectionSpeed>5__2;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 <lineDir>5__3;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 <previousEnd>5__4;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int <i>5__5;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C3")]
			[Address(RVA = "0x1BDEF08", Offset = "0x1BDEF08", VA = "0x1BDEF08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C5")]
			[Address(RVA = "0x1BDEF50", Offset = "0x1BDEF50", VA = "0x1BDEF50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x1BDEB7C", Offset = "0x1BDEB7C", VA = "0x1BDEB7C")]
		[DebuggerHidden]
		public <ProduceLine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x1BDEBA8", Offset = "0x1BDEBA8", VA = "0x1BDEBA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x1BDEBAC", Offset = "0x1BDEBAC", VA = "0x1BDEBAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x1BDEF10", Offset = "0x1BDEF10", VA = "0x1BDEF10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7EF8", Offset = "0x8D7EF8")]
	private sealed class <ShirnkLine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TracerFXPoolObject <>4__this;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 startPoint;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 endPoint;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <counter>5__2;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C9")]
			[Address(RVA = "0x1BDF0A4", Offset = "0x1BDF0A4", VA = "0x1BDF0A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003CB")]
			[Address(RVA = "0x1BDF0EC", Offset = "0x1BDF0EC", VA = "0x1BDF0EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x1BDEF58", Offset = "0x1BDEF58", VA = "0x1BDEF58")]
		[DebuggerHidden]
		public <ShirnkLine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x1BDEF84", Offset = "0x1BDEF84", VA = "0x1BDEF84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x1BDEF88", Offset = "0x1BDEF88", VA = "0x1BDEF88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x1BDF0AC", Offset = "0x1BDF0AC", VA = "0x1BDF0AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] lerpParticles;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject head;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float tracerLength;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float shrinkTime;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float iterationMultiplyer;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float bulletSpeedModifier;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine lineDrawRoutine;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine shrinkRoutine;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine[] smokeRoutine;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem currentTrailSystem;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer currentLineRend;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<LineRenderer> loadoutLineRendsFX;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<ParticleSystem> loadoutTrailFX;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1073B44", Offset = "0x1073B44", VA = "0x1073B44")]
	public void InitiateTracer(Vector3 origin, Vector3 end, float distance, float bulletSpeed, int weaponType)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1073EA8", Offset = "0x1073EA8", VA = "0x1073EA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF4D8", Offset = "0x8DF4D8")]
	private IEnumerator ProduceLine(int totalSections, float bulletSpeed, Vector3 origin, Vector3 end, int weaponType)
	{
		return null;
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1073F80", Offset = "0x1073F80", VA = "0x1073F80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF538", Offset = "0x8DF538")]
	private IEnumerator ShirnkLine(Vector3 startPoint, Vector3 endPoint, int weaponType)
	{
		return null;
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x1074034", Offset = "0x1074034", VA = "0x1074034")]
	public TracerFXPoolObject()
	{
	}
}
[Token(Token = "0x20000A1")]
public class TracerPool : BaseObjectPool
{
	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TracerPool poolInstance;

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1074054", Offset = "0x1074054", VA = "0x1074054", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1074178", Offset = "0x1074178", VA = "0x1074178")]
	public void GetTracer(Vector3 origin, Vector3 end, float distance, float bulletSpeed, int weaponType)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x10742D8", Offset = "0x10742D8", VA = "0x10742D8")]
	public TracerPool()
	{
	}
}
[Token(Token = "0x20000A2")]
public class RecenterRoom : MonoBehaviour
{
	[Token(Token = "0x20000A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7F08", Offset = "0x8D7F08")]
	private sealed class <LoadIntoLobby>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RecenterRoom <>4__this;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0xD56894", Offset = "0xD56894", VA = "0xD56894", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0xD568DC", Offset = "0xD568DC", VA = "0xD568DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xD56708", Offset = "0xD56708", VA = "0xD56708")]
		[DebuggerHidden]
		public <LoadIntoLobby>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xD56734", Offset = "0xD56734", VA = "0xD56734", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xD56738", Offset = "0xD56738", VA = "0xD56738", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xD5689C", Offset = "0xD5689C", VA = "0xD5689C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro oculusText;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro steamText;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isLoading;

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xE4F774", Offset = "0xE4F774", VA = "0xE4F774")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xE4F80C", Offset = "0xE4F80C", VA = "0xE4F80C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xE4F878", Offset = "0xE4F878", VA = "0xE4F878")]
	public void LoadIntoLobbyScene()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xE4F8B0", Offset = "0xE4F8B0", VA = "0xE4F8B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF638", Offset = "0x8DF638")]
	private IEnumerator LoadIntoLobby()
	{
		return null;
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xE4F928", Offset = "0xE4F928", VA = "0xE4F928")]
	public RecenterRoom()
	{
	}
}
[Token(Token = "0x20000A4")]
public class SmoothCamera : MonoBehaviour
{
	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cameraTarget;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cameraSelf;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool enableSmooth;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DAC60", Offset = "0x8DAC60")]
	public float lerpPositionRate;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DAC78", Offset = "0x8DAC78")]
	public float lerpRotationRate;

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x132CE20", Offset = "0x132CE20", VA = "0x132CE20")]
	public void Start()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x132CFDC", Offset = "0x132CFDC", VA = "0x132CFDC")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x132D27C", Offset = "0x132D27C", VA = "0x132D27C")]
	public SmoothCamera()
	{
	}
}
[Token(Token = "0x20000A5")]
public class Snow : MonoBehaviour
{
	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] MapsWithSnow;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isEnabled;

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x132D298", Offset = "0x132D298", VA = "0x132D298")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x132D378", Offset = "0x132D378", VA = "0x132D378")]
	public Snow()
	{
	}
}
[Token(Token = "0x20000A6")]
public class SoundPoolAccessor : MonoBehaviour
{
	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioStore[] audioStores;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DAC90", Offset = "0x8DAC90")]
	public float volume;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pitch;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minDistance;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 soundPoint;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1333730", Offset = "0x1333730", VA = "0x1333730")]
	public void PlayAudioStore(int storeIndex)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1333884", Offset = "0x1333884", VA = "0x1333884")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x13338EC", Offset = "0x13338EC", VA = "0x13338EC")]
	public SoundPoolAccessor()
	{
	}
}
[Token(Token = "0x20000A7")]
public class SpectatorCam : MonoBehaviourPun
{
	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera mCamera;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioListener listner;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pitch;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform yaw;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DACA4", Offset = "0x8DACA4")]
	public float moveSpeed;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float verticalSpeed;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DACDC", Offset = "0x8DACDC")]
	public float yawSpeed;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float pitchSpeed;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAD14", Offset = "0x8DAD14")]
	public float fovChangeRate;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float minFov;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxFov;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool owner;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1334198", Offset = "0x1334198", VA = "0x1334198")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1334208", Offset = "0x1334208", VA = "0x1334208")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x13342A0", Offset = "0x13342A0", VA = "0x13342A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1334618", Offset = "0x1334618", VA = "0x1334618")]
	public SpectatorCam()
	{
	}
}
[Token(Token = "0x20000A8")]
public class TargetScript : MonoBehaviour
{
	[Token(Token = "0x20000A9")]
	public delegate void TargetHit(Vector3 targetPos);

	[Token(Token = "0x1400001B")]
	public static event TargetHit OnTargetHit
	{
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x133A380", Offset = "0x133A380", VA = "0x133A380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF6E8", Offset = "0x8DF6E8")]
		add
		{
		}
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x133A43C", Offset = "0x133A43C", VA = "0x133A43C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF6F8", Offset = "0x8DF6F8")]
		remove
		{
		}
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x133A4F8", Offset = "0x133A4F8", VA = "0x133A4F8")]
	public void PlayerHitTarget()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x133A57C", Offset = "0x133A57C", VA = "0x133A57C")]
	public TargetScript()
	{
	}
}
[Token(Token = "0x20000AA")]
public class TargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoxCollider[] boundBoxs;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TargetScript target;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAD5C", Offset = "0x8DAD5C")]
	public float baseTargetTime;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeDifficultyModifer;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lowestTime;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float targetCooldown;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAD94", Offset = "0x8DAD94")]
	public float initalCountdown;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onCountdownStart;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent onCountdownEnd;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DADCC", Offset = "0x8DADCC")]
	public ParticleSystem hitFX;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem spawnFX;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent onHit;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent onMiss;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent onSpawn;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MeshRenderer meshRend;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rigidbody targetRb;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ParticleSystem targetParticleSystem;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int targetsSpawned;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int targetsHit;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int targetsMissed;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float currentTargetTime;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float targetTimer;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool countdownStarted;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool started;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	private bool spawned;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAE04", Offset = "0x8DAE04")]
	public bool debugStart;

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x133A584", Offset = "0x133A584", VA = "0x133A584")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x133A620", Offset = "0x133A620", VA = "0x133A620")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x133A684", Offset = "0x133A684", VA = "0x133A684")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x133A960", Offset = "0x133A960", VA = "0x133A960")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x133A9D8", Offset = "0x133A9D8", VA = "0x133A9D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x133A710", Offset = "0x133A710", VA = "0x133A710")]
	private void StartTraining()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x133A754", Offset = "0x133A754", VA = "0x133A754")]
	private void SpawnNewTarget()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x133AA80", Offset = "0x133AA80", VA = "0x133AA80")]
	private void TargetHit(Vector3 pos)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x133A908", Offset = "0x133A908", VA = "0x133A908")]
	private void TargetMissed()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x133AA64", Offset = "0x133AA64", VA = "0x133AA64")]
	private void SetTargetVisibilty(bool isVisible)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x133AB48", Offset = "0x133AB48", VA = "0x133AB48")]
	public void StartTrainingCooldown()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x133AB98", Offset = "0x133AB98", VA = "0x133AB98")]
	public TargetSpawner()
	{
	}
}
[Token(Token = "0x20000AB")]
public class TouchButton : MonoBehaviour
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image image;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color pressedColor;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent onPressed;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool canTouch;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isPressed;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Color normalColor;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TouchScreenManager screenManager;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MapList mapList;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NumberPad numberPad;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1072D28", Offset = "0x1072D28", VA = "0x1072D28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1072D70", Offset = "0x1072D70", VA = "0x1072D70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1072D7C", Offset = "0x1072D7C", VA = "0x1072D7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1072E00", Offset = "0x1072E00", VA = "0x1072E00")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1072F64", Offset = "0x1072F64", VA = "0x1072F64")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x10730D8", Offset = "0x10730D8", VA = "0x10730D8")]
	public void AddManager(TouchScreenManager manager)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x10730E0", Offset = "0x10730E0", VA = "0x10730E0")]
	public void AddMapList(MapList mapList)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x10730E8", Offset = "0x10730E8", VA = "0x10730E8")]
	public void AddNumPad(NumberPad numPad)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x10730F0", Offset = "0x10730F0", VA = "0x10730F0")]
	public void SetTouchStatus(bool isTouchable)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x10730FC", Offset = "0x10730FC", VA = "0x10730FC")]
	public TouchButton()
	{
	}
}
[Token(Token = "0x20000AC")]
public class TouchScreenManager : MonoBehaviour
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TouchButton[] buttons;

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1073A68", Offset = "0x1073A68", VA = "0x1073A68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1072E8C", Offset = "0x1072E8C", VA = "0x1072E8C")]
	public void DisableButtons(TouchButton touchedButton)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1072D9C", Offset = "0x1072D9C", VA = "0x1072D9C")]
	public void EnableButtons()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1073B3C", Offset = "0x1073B3C", VA = "0x1073B3C")]
	public TouchScreenManager()
	{
	}
}
[Token(Token = "0x20000AD")]
public class InstantiateObjects : MonoBehaviourPun
{
	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Spawn;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SpawnPosition;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string PrefabName;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool Delete;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject PrefabDelete;

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xFF8B0C", Offset = "0xFF8B0C", VA = "0xFF8B0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xFF8C54", Offset = "0xFF8C54", VA = "0xFF8C54")]
	public InstantiateObjects()
	{
	}
}
[Token(Token = "0x20000AE")]
public class KickPlayer : MonoBehaviour
{
	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAE3C", Offset = "0x8DAE3C")]
	public int playerToKick;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool playerKicker;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xFFBD68", Offset = "0xFFBD68", VA = "0xFFBD68")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xFFBD80", Offset = "0xFFBD80", VA = "0xFFBD80")]
	public void KickThePlayer()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xFFBE10", Offset = "0xFFBE10", VA = "0xFFBE10")]
	public KickPlayer()
	{
	}
}
[Token(Token = "0x20000AF")]
public class Objects_Switch_Disable_Performance_Toggle : MonoBehaviour
{
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAE74", Offset = "0x8DAE74")]
	public GameObject Obj_zero;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Obj_first;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Obj_second;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Obj_third;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Obj_fourth;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool Exclude;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool On;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool Off;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int ObjectOption;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int MaxVariations;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x18E0BE8", Offset = "0x18E0BE8", VA = "0x18E0BE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x18E0D14", Offset = "0x18E0D14", VA = "0x18E0D14")]
	private void SwitchObjects(InputAction.CallbackContext contex)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x18E127C", Offset = "0x18E127C", VA = "0x18E127C")]
	public Objects_Switch_Disable_Performance_Toggle()
	{
	}
}
[Token(Token = "0x20000B0")]
public class Objects_Switch_Disable_Performance_Toggle_V2 : MonoBehaviour
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAEAC", Offset = "0x8DAEAC")]
	public GameObject[] checkObjects;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int iCurrent;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x18E128C", Offset = "0x18E128C", VA = "0x18E128C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x18E12FC", Offset = "0x18E12FC", VA = "0x18E12FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x18E157C", Offset = "0x18E157C", VA = "0x18E157C")]
	private void ActivateNextObjectIncluding(InputAction.CallbackContext contex)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x18E161C", Offset = "0x18E161C", VA = "0x18E161C")]
	private void ActivatePreviousObjectIncluding(InputAction.CallbackContext contex)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x18E16C0", Offset = "0x18E16C0", VA = "0x18E16C0")]
	private void ActivateNextObjectExcluding(InputAction.CallbackContext contex)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x18E1760", Offset = "0x18E1760", VA = "0x18E1760")]
	private void ActivatePreviousObjectExcluding(InputAction.CallbackContext contex)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x18E1804", Offset = "0x18E1804", VA = "0x18E1804")]
	public Objects_Switch_Disable_Performance_Toggle_V2()
	{
	}
}
[Token(Token = "0x20000B1")]
public class Per_Platform_Helper : MonoBehaviour
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAEE4", Offset = "0x8DAEE4")]
	public MeshRenderer[] androidOnlyMeshRenderers;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer[] pcOnlyMeshRenderers;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PostProcessVolume postProcessVolume;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] GameObjectsToDisableInBuild;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] GameObjectsToDisableInAndroid;

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xE45328", Offset = "0xE45328", VA = "0xE45328")]
	private void Start()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xE454E4", Offset = "0xE454E4", VA = "0xE454E4")]
	public Per_Platform_Helper()
	{
	}
}
[Token(Token = "0x20000B2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D7F18", Offset = "0x8D7F18")]
public class AudioStore : ScriptableObject
{
	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] allClips;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerGroup mixerGroup;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x105A784", Offset = "0x105A784", VA = "0x105A784")]
	public AudioClip GetRandomClip()
	{
		return null;
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x105A7D8", Offset = "0x105A7D8", VA = "0x105A7D8")]
	public AudioStore()
	{
	}
}
[Token(Token = "0x20000B3")]
public class ControlPanelControls : MonoBehaviour
{
	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAF1C", Offset = "0x8DAF1C")]
	public Light Light;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ObjectToDisable;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer Screen;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool Light_Toggle;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool ObjectDisabling_Toggle;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int Screen_frame;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAF54", Offset = "0x8DAF54")]
	public Animator[] CockpitAnims;

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xF98F78", Offset = "0xF98F78", VA = "0xF98F78")]
	public void Start()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xF98FD4", Offset = "0xF98FD4", VA = "0xF98FD4")]
	public void LightToggle()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xF99014", Offset = "0xF99014", VA = "0xF99014")]
	public void ObjectToggle()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xF99054", Offset = "0xF99054", VA = "0xF99054")]
	public void Screen_NextScreen()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xF990CC", Offset = "0xF990CC", VA = "0xF990CC")]
	public void Screen_PreviousScreen()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xF99144", Offset = "0xF99144", VA = "0xF99144")]
	public void Screen_SetFrame(int frame)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xF991B8", Offset = "0xF991B8", VA = "0xF991B8")]
	public void MechBootUpStage1()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xF99260", Offset = "0xF99260", VA = "0xF99260")]
	public void MechBootUpStage2()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xF99308", Offset = "0xF99308", VA = "0xF99308")]
	public void MechBootUpStage3()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xF993B0", Offset = "0xF993B0", VA = "0xF993B0")]
	public void MechBootUpStage4()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xF99458", Offset = "0xF99458", VA = "0xF99458")]
	public void MechBootUpStage5()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xF99500", Offset = "0xF99500", VA = "0xF99500")]
	public ControlPanelControls()
	{
	}
}
[Token(Token = "0x20000B4")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D7F78", Offset = "0x8D7F78")]
public class FastList<T>
{
	[Token(Token = "0x20000B5")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20000B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7FB0", Offset = "0x8D7FB0")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x1700003D")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000449")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600044B")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000446")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000447")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000448")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600044A")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x1700003B")]
	public int Count
	{
		[Token(Token = "0x600042A")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600042B")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public T Item
	{
		[Token(Token = "0x600042C")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600042D")]
		set
		{
		}
	}

	[Token(Token = "0x6000428")]
	public FastList()
	{
	}

	[Token(Token = "0x6000429")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x600042E")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x600042F")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000430")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000431")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000432")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000433")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000434")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000435")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000436")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000437")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000438")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000439")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600043A")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600043B")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600043C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF708", Offset = "0x8DF708")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600043D")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x600043E")]
	private void Allocate()
	{
	}

	[Token(Token = "0x600043F")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000440")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000441")]
	public void Release()
	{
	}
}
[Token(Token = "0x20000B7")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xFF8ABC", Offset = "0xFF8ABC", VA = "0xFF8ABC")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x20000B8")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xFF8A88", Offset = "0xFF8A88", VA = "0xFF8A88")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x20000B9")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xE40F7C", Offset = "0xE40F7C", VA = "0xE40F7C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xE410E0", Offset = "0xE410E0", VA = "0xE410E0")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xE4147C", Offset = "0xE4147C", VA = "0xE4147C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xE41620", Offset = "0xE41620", VA = "0xE41620", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xE41650", Offset = "0xE41650", VA = "0xE41650")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x20000BA")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xE49260", Offset = "0xE49260", VA = "0xE49260")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xE492E8", Offset = "0xE492E8", VA = "0xE492E8")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xE4945C", Offset = "0xE4945C", VA = "0xE4945C")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x20000BB")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x1700003F")]
	public bool IsVisible
	{
		[Token(Token = "0x6000456")]
		[Address(RVA = "0xFA4B84", Offset = "0xFA4B84", VA = "0xFA4B84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000457")]
		[Address(RVA = "0xFA4B8C", Offset = "0xFA4B8C", VA = "0xFA4B8C")]
		set
		{
		}
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xFA4CC8", Offset = "0xFA4CC8", VA = "0xFA4CC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xFA4E90", Offset = "0xFA4E90", VA = "0xFA4E90")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xFA4E98", Offset = "0xFA4E98", VA = "0xFA4E98")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x20000BC")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x20000BD")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000461")]
		[Address(RVA = "0xD568E4", Offset = "0xD568E4", VA = "0xD568E4")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000BE")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DAF9C", Offset = "0x8DAF9C")]
		public float FakeLatencyMax;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DAFB4", Offset = "0x8DAFB4")]
		public float FakeLatencyMin;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DAFCC", Offset = "0x8DAFCC")]
		public float LatencyWeight;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DAFE4", Offset = "0x8DAFE4")]
		public int MaxSamples;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000462")]
		[Address(RVA = "0xD568EC", Offset = "0xD568EC", VA = "0xD568EC")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0xD56A24", Offset = "0xD56A24", VA = "0xD56A24")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xE4F930", Offset = "0xE4F930", VA = "0xE4F930")]
	private void Start()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xE4FA88", Offset = "0xE4FA88", VA = "0xE4FA88")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xE4FE30", Offset = "0xE4FE30", VA = "0xE4FE30")]
	private void Update()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xE4FD7C", Offset = "0xE4FD7C", VA = "0xE4FD7C")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xE50118", Offset = "0xE50118", VA = "0xE50118")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xE503CC", Offset = "0xE503CC", VA = "0xE503CC")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x20000BF")]
public class P2PManager
{
	[Token(Token = "0x20000C0")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000583")]
		Update = 1
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xE425E0", Offset = "0xE425E0", VA = "0xE425E0")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xE426C0", Offset = "0xE426C0", VA = "0xE426C0")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xE427A4", Offset = "0xE427A4", VA = "0xE427A4")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xE42824", Offset = "0xE42824", VA = "0xE42824")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xE42994", Offset = "0xE42994", VA = "0xE42994")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xE42BD4", Offset = "0xE42BD4", VA = "0xE42BD4")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xE42FC4", Offset = "0xE42FC4", VA = "0xE42FC4")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xE43280", Offset = "0xE43280", VA = "0xE43280")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xE42DA0", Offset = "0xE42DA0", VA = "0xE42DA0")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xE431B4", Offset = "0xE431B4", VA = "0xE431B4")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xE42E84", Offset = "0xE42E84", VA = "0xE42E84")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xE434C0", Offset = "0xE434C0", VA = "0xE434C0")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xE42DE8", Offset = "0xE42DE8", VA = "0xE42DE8")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xE431F8", Offset = "0xE431F8", VA = "0xE431F8")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xE42F28", Offset = "0xE42F28", VA = "0xE42F28")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xE43548", Offset = "0xE43548", VA = "0xE43548")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x20000C1")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xE46D18", Offset = "0xE46D18", VA = "0xE46D18", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xE46D5C", Offset = "0xE46D5C", VA = "0xE46D5C", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xE46D94", Offset = "0xE46D94", VA = "0xE46D94", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xE46DBC", Offset = "0xE46DBC", VA = "0xE46DBC")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xE46F58", Offset = "0xE46F58", VA = "0xE46F58")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xE46FD8", Offset = "0xE46FD8", VA = "0xE46FD8")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xE4702C", Offset = "0xE4702C", VA = "0xE4702C")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x20000C2")]
public class RemotePlayer
{
	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xE50488", Offset = "0xE50488", VA = "0xE50488")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x20000C3")]
public class RoomManager
{
	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x1329990", Offset = "0x1329990", VA = "0x1329990")]
	public RoomManager()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x1329A94", Offset = "0x1329A94", VA = "0x1329A94")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x1329D84", Offset = "0x1329D84", VA = "0x1329D84")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x1329EBC", Offset = "0x1329EBC", VA = "0x1329EBC")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x1329F90", Offset = "0x1329F90", VA = "0x1329F90")]
	private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x132A540", Offset = "0x132A540", VA = "0x132A540")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x1329DB4", Offset = "0x1329DB4", VA = "0x1329DB4")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x132A5C4", Offset = "0x132A5C4", VA = "0x132A5C4")]
	private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x132AD10", Offset = "0x132AD10", VA = "0x132AD10")]
	private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x132B05C", Offset = "0x132B05C", VA = "0x132B05C")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x132A8F4", Offset = "0x132A8F4", VA = "0x132A8F4")]
	private void ProcessRoomData(Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x20000C4")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x20000C5")]
	public enum State
	{
		[Token(Token = "0x40005BB")]
		INITIALIZING,
		[Token(Token = "0x40005BC")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40005BD")]
		CREATING_A_ROOM,
		[Token(Token = "0x40005BE")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40005BF")]
		JOINING_A_ROOM,
		[Token(Token = "0x40005C0")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40005C1")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40005C2")]
		SHUTDOWN
	}

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000040")]
	public static State CurrentState
	{
		[Token(Token = "0x6000493")]
		[Address(RVA = "0x132EE50", Offset = "0x132EE50", VA = "0x132EE50")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000041")]
	public static ulong MyID
	{
		[Token(Token = "0x6000494")]
		[Address(RVA = "0x132A0BC", Offset = "0x132A0BC", VA = "0x132A0BC")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000042")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000495")]
		[Address(RVA = "0x132EEC0", Offset = "0x132EEC0", VA = "0x132EEC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x132D404", Offset = "0x132D404", VA = "0x132D404", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x132D7A8", Offset = "0x132D7A8", VA = "0x132D7A8", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x132DC54", Offset = "0x132DC54", VA = "0x132DC54")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x132DDFC", Offset = "0x132DDFC", VA = "0x132DDFC", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x132DE00", Offset = "0x132DE00", VA = "0x132DE00")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x132DF20", Offset = "0x132DF20", VA = "0x132DF20")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x132E680", Offset = "0x132E680", VA = "0x132E680")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x132EA50", Offset = "0x132EA50", VA = "0x132EA50")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x132EC60", Offset = "0x132EC60", VA = "0x132EC60")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x132EDE4", Offset = "0x132EDE4", VA = "0x132EDE4")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x132DBA0", Offset = "0x132DBA0", VA = "0x132DBA0")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x1329C0C", Offset = "0x1329C0C", VA = "0x1329C0C")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x132A19C", Offset = "0x132A19C", VA = "0x132A19C")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x132EFE8", Offset = "0x132EFE8", VA = "0x132EFE8")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x132A45C", Offset = "0x132A45C", VA = "0x132A45C")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x132B0D0", Offset = "0x132B0D0", VA = "0x132B0D0")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x132B4CC", Offset = "0x132B4CC", VA = "0x132B4CC")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x132B5B0", Offset = "0x132B5B0", VA = "0x132B5B0")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x1329CC4", Offset = "0x1329CC4", VA = "0x1329CC4")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x132B22C", Offset = "0x132B22C", VA = "0x132B22C")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x132B2C0", Offset = "0x132B2C0", VA = "0x132B2C0")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x132F164", Offset = "0x132F164", VA = "0x132F164")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x132F378", Offset = "0x132F378", VA = "0x132F378")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x132D380", Offset = "0x132D380", VA = "0x132D380")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8DF7B8", Offset = "0x8DF7B8")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x132F4BC", Offset = "0x132F4BC", VA = "0x132F4BC")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x132F598", Offset = "0x132F598", VA = "0x132F598")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x20000C6")]
public class VoipManager
{
	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x107C9D0", Offset = "0x107C9D0", VA = "0x107C9D0")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x107CAB0", Offset = "0x107CAB0", VA = "0x107CAB0")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x107CB94", Offset = "0x107CB94", VA = "0x107CB94")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x107CC14", Offset = "0x107CC14", VA = "0x107CC14")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x107CD84", Offset = "0x107CD84", VA = "0x107CD84")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x20000C7")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xFA4840", Offset = "0xFA4840", VA = "0xFA4840")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xFA48C8", Offset = "0xFA48C8", VA = "0xFA48C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xFA4A3C", Offset = "0xFA4A3C", VA = "0xFA4A3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xFA4AA0", Offset = "0xFA4AA0", VA = "0xFA4AA0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xFA4904", Offset = "0xFA4904", VA = "0xFA4904")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xFA4B64", Offset = "0xFA4B64", VA = "0xFA4B64")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xFA4B7C", Offset = "0xFA4B7C", VA = "0xFA4B7C")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C8")]
public class AvatarLayer
{
	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x105AF10", Offset = "0x105AF10", VA = "0x105AF10")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C9")]
public class PacketRecordSettings
{
	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xE435D0", Offset = "0xE435D0", VA = "0xE435D0")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x20000CA")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x20000CB")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xD53F68", Offset = "0xD53F68", VA = "0xD53F68")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20000CC")]
	public enum HandType
	{
		[Token(Token = "0x4000624")]
		Right,
		[Token(Token = "0x4000625")]
		Left,
		[Token(Token = "0x4000626")]
		Max
	}

	[Token(Token = "0x20000CD")]
	public enum HandJoint
	{
		[Token(Token = "0x4000628")]
		HandBase,
		[Token(Token = "0x4000629")]
		IndexBase,
		[Token(Token = "0x400062A")]
		IndexTip,
		[Token(Token = "0x400062B")]
		ThumbBase,
		[Token(Token = "0x400062C")]
		ThumbTip,
		[Token(Token = "0x400062D")]
		Max
	}

	[Token(Token = "0x20000CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7FC0", Offset = "0x8D7FC0")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0xD53F18", Offset = "0xD53F18", VA = "0xD53F18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004ED")]
			[Address(RVA = "0xD53F60", Offset = "0xD53F60", VA = "0xD53F60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xD53D3C", Offset = "0xD53D3C", VA = "0xD53D3C")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xD53D68", Offset = "0xD53D68", VA = "0xD53D68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xD53D6C", Offset = "0xD53D6C", VA = "0xD53D6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xD53F20", Offset = "0xD53F20", VA = "0xD53F20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAFFC", Offset = "0x8DAFFC")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB034", Offset = "0x8DB034")]
	public bool EnableBody;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB06C", Offset = "0x8DB06C")]
	public bool RecordPackets;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB0A4", Offset = "0x8DB0A4")]
	public bool StartWithControllers;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB0DC", Offset = "0x8DB0DC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB0DC", Offset = "0x8DB0DC")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB14C", Offset = "0x8DB14C")]
	private bool CombineMeshes;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB184", Offset = "0x8DB184")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB1BC", Offset = "0x8DB1BC")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB1F4", Offset = "0x8DB1F4")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB22C", Offset = "0x8DB22C")]
	public bool EnableLaughter;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000604")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000606")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000607")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000608")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000609")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x400060A")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x18E37E0", Offset = "0x18E37E0", VA = "0x18E37E0")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x18E3C80", Offset = "0x18E3C80", VA = "0x18E3C80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x18E3D14", Offset = "0x18E3D14", VA = "0x18E3D14")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x18E3D7C", Offset = "0x18E3D7C", VA = "0x18E3D7C")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x18E3EAC", Offset = "0x18E3EAC", VA = "0x18E3EAC")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x18E3F8C", Offset = "0x18E3F8C", VA = "0x18E3F8C")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x18E4068", Offset = "0x18E4068", VA = "0x18E4068")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x18E424C", Offset = "0x18E424C", VA = "0x18E424C")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x18E4328", Offset = "0x18E4328", VA = "0x18E4328")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x18E43A0", Offset = "0x18E43A0", VA = "0x18E43A0")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x18E4488", Offset = "0x18E4488", VA = "0x18E4488")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x18E4514", Offset = "0x18E4514", VA = "0x18E4514")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x18E459C", Offset = "0x18E459C", VA = "0x18E459C")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x18E45B4", Offset = "0x18E45B4", VA = "0x18E45B4")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60004C1")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x18E4A64", Offset = "0x18E4A64", VA = "0x18E4A64")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x18E4DE4", Offset = "0x18E4DE4", VA = "0x18E4DE4")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x18E4FD0", Offset = "0x18E4FD0", VA = "0x18E4FD0")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x18E521C", Offset = "0x18E521C", VA = "0x18E521C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x18E5310", Offset = "0x18E5310", VA = "0x18E5310")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x18E597C", Offset = "0x18E597C", VA = "0x18E597C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x18E5CB4", Offset = "0x18E5CB4", VA = "0x18E5CB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x18E66EC", Offset = "0x18E66EC", VA = "0x18E66EC")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x18E6740", Offset = "0x18E6740", VA = "0x18E6740")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x18E55CC", Offset = "0x18E55CC", VA = "0x18E55CC")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x18E5670", Offset = "0x18E5670", VA = "0x18E5670")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x18E6770", Offset = "0x18E6770", VA = "0x18E6770")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x18E608C", Offset = "0x18E608C", VA = "0x18E608C")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x18E69E0", Offset = "0x18E69E0", VA = "0x18E69E0")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x18E67D4", Offset = "0x18E67D4", VA = "0x18E67D4")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x18E716C", Offset = "0x18E716C", VA = "0x18E716C")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x18E75E8", Offset = "0x18E75E8", VA = "0x18E75E8")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x18E79DC", Offset = "0x18E79DC", VA = "0x18E79DC")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x18E7B30", Offset = "0x18E7B30", VA = "0x18E7B30")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x18E7D14", Offset = "0x18E7D14", VA = "0x18E7D14")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x18E626C", Offset = "0x18E626C", VA = "0x18E626C")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x18E7DE8", Offset = "0x18E7DE8", VA = "0x18E7DE8")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x18E609C", Offset = "0x18E609C", VA = "0x18E609C")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x18E7ED8", Offset = "0x18E7ED8", VA = "0x18E7ED8")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x18E858C", Offset = "0x18E858C", VA = "0x18E858C")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x18E8A70", Offset = "0x18E8A70", VA = "0x18E8A70")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x18E8A98", Offset = "0x18E8A98", VA = "0x18E8A98")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x18E8AC0", Offset = "0x18E8AC0", VA = "0x18E8AC0")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x18E6578", Offset = "0x18E6578", VA = "0x18E6578")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x18E7FA8", Offset = "0x18E7FA8", VA = "0x18E7FA8")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x18E8EF0", Offset = "0x18E8EF0", VA = "0x18E8EF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF818", Offset = "0x8DF818")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x18E8F68", Offset = "0x18E8F68", VA = "0x18E8F68")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x18E8DB0", Offset = "0x18E8DB0", VA = "0x18E8DB0")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x18E902C", Offset = "0x18E902C", VA = "0x18E902C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x18E9114", Offset = "0x18E9114", VA = "0x18E9114")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x18E8AFC", Offset = "0x18E8AFC", VA = "0x18E8AFC")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x18E91FC", Offset = "0x18E91FC", VA = "0x18E91FC")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x20000CF")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x18E93F8", Offset = "0x18E93F8", VA = "0x18E93F8")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x20000D0")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x18E94C8", Offset = "0x18E94C8", VA = "0x18E94C8")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x18EA780", Offset = "0x18EA780", VA = "0x18EA780")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x18EA354", Offset = "0x18EA354", VA = "0x18EA354")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x18EA0D8", Offset = "0x18EA0D8", VA = "0x18EA0D8")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x18EA1C0", Offset = "0x18EA1C0", VA = "0x18EA1C0")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x18EAA10", Offset = "0x18EAA10", VA = "0x18EAA10")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x20000D1")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000636")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x18EAFD8", Offset = "0x18EAFD8", VA = "0x18EAFD8")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x20000D2")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x18EB254", Offset = "0x18EB254", VA = "0x18EB254")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x18EB6B4", Offset = "0x18EB6B4", VA = "0x18EB6B4")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x20000D3")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x18E786C", Offset = "0x18E786C", VA = "0x18E786C")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x18EB7E4", Offset = "0x18EB7E4", VA = "0x18EB7E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x18EB914", Offset = "0x18EB914", VA = "0x18EB914")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x20000D4")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x18EB974", Offset = "0x18EB974", VA = "0x18EB974")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x18EB384", Offset = "0x18EB384", VA = "0x18EB384")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x18EB97C", Offset = "0x18EB97C", VA = "0x18EB97C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x18EB9DC", Offset = "0x18EB9DC", VA = "0x18EB9DC")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x18EC190", Offset = "0x18EC190", VA = "0x18EC190")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x18EB714", Offset = "0x18EB714", VA = "0x18EB714")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x20000D5")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20000D6")]
	public enum PacketMode
	{
		[Token(Token = "0x400064A")]
		SDK,
		[Token(Token = "0x400064B")]
		Unity
	}

	[Token(Token = "0x20000D7")]
	public struct ControllerPose
	{
		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xD53FE8", Offset = "0xD53FE8", VA = "0xD53FE8")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20000D8")]
	public struct PoseFrame
	{
		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000509")]
		[Address(RVA = "0xD540C4", Offset = "0xD540C4", VA = "0xD540C4")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x18EDAC8", Offset = "0x18EDAC8", VA = "0x18EDAC8")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000503")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x18EDAD8", Offset = "0x18EDAD8", VA = "0x18EDAD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x18E5714", Offset = "0x18E5714", VA = "0x18E5714")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x18EDB60", Offset = "0x18EDB60", VA = "0x18EDB60")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x18EDB68", Offset = "0x18EDB68", VA = "0x18EDB68")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x20000D9")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x18EDB78", Offset = "0x18EDB78", VA = "0x18EDB78")]
	private void Update()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x18EDCE8", Offset = "0x18EDCE8", VA = "0x18EDCE8")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x20000DA")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x18EDD50", Offset = "0x18EDD50", VA = "0x18EDD50")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x18EDEB4", Offset = "0x18EDEB4", VA = "0x18EDEB4")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x18EE250", Offset = "0x18EE250", VA = "0x18EE250")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x18EE474", Offset = "0x18EE474", VA = "0x18EE474", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x18EE4A0", Offset = "0x18EE4A0", VA = "0x18EE4A0")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x20000DB")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20000DC")]
	public enum TextureType
	{
		[Token(Token = "0x4000681")]
		DiffuseTextures,
		[Token(Token = "0x4000682")]
		NormalMaps,
		[Token(Token = "0x4000683")]
		RoughnessMaps,
		[Token(Token = "0x4000684")]
		Count
	}

	[Token(Token = "0x20000DD")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20000DE")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20000DF")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20000E0")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xD54B08", Offset = "0xD54B08", VA = "0xD54B08")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20000E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7FD0", Offset = "0x8D7FD0")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000524")]
			[Address(RVA = "0xD54AB8", Offset = "0xD54AB8", VA = "0xD54AB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000526")]
			[Address(RVA = "0xD54B00", Offset = "0xD54B00", VA = "0xD54B00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xD543C8", Offset = "0xD543C8", VA = "0xD543C8")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xD543F4", Offset = "0xD543F4", VA = "0xD543F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xD543F8", Offset = "0xD543F8", VA = "0xD543F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0xD54AC0", Offset = "0xD54AC0", VA = "0xD54AC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x400067C")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x400067D")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x400067E")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x400067F")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x18EE4EC", Offset = "0x18EE4EC", VA = "0x18EE4EC")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x18EE6CC", Offset = "0x18EE6CC", VA = "0x18EE6CC")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x18EE70C", Offset = "0x18EE70C", VA = "0x18EE70C")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x18EEEA0", Offset = "0x18EEEA0", VA = "0x18EEEA0")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x18EEF0C", Offset = "0x18EEF0C", VA = "0x18EEF0C")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x18EE7A8", Offset = "0x18EE7A8", VA = "0x18EE7A8")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x18EEF60", Offset = "0x18EEF60", VA = "0x18EEF60")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x18EEBFC", Offset = "0x18EEBFC", VA = "0x18EEBFC")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x18EF050", Offset = "0x18EF050", VA = "0x18EF050")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x18EF2F4", Offset = "0x18EF2F4", VA = "0x18EF2F4")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x18EF41C", Offset = "0x18EF41C", VA = "0x18EF41C")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x18EF454", Offset = "0x18EF454", VA = "0x18EF454")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x18EEE0C", Offset = "0x18EEE0C", VA = "0x18EEE0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF8C8", Offset = "0x8DF8C8")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x18F03BC", Offset = "0x18F03BC", VA = "0x18F03BC")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x20000E2")]
public class OvrAvatarPacket
{
	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000047")]
	public float Duration
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0x18E6E64", Offset = "0x18E6E64", VA = "0x18E6E64")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000048")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000528")]
		[Address(RVA = "0x18E6FB0", Offset = "0x18E6FB0", VA = "0x18E6FB0")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x18E7040", Offset = "0x18E7040", VA = "0x18E7040")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x18E6C98", Offset = "0x18E6C98", VA = "0x18E6C98")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x18F09F8", Offset = "0x18F09F8", VA = "0x18F09F8")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x18E6ED8", Offset = "0x18E6ED8", VA = "0x18E6ED8")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x18F0B64", Offset = "0x18F0B64", VA = "0x18F0B64")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x18F0D94", Offset = "0x18F0D94", VA = "0x18F0D94")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x18F1070", Offset = "0x18F1070", VA = "0x18F1070")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x20000E3")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000530")]
	[Address(RVA = "0x105D844", Offset = "0x105D844", VA = "0x105D844")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x105D958", Offset = "0x105D958", VA = "0x105D958")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x105DB04", Offset = "0x105DB04", VA = "0x105DB04")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x105D9C8", Offset = "0x105D9C8", VA = "0x105D9C8")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x105DA5C", Offset = "0x105DA5C", VA = "0x105DA5C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x20000E4")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000535")]
	[Address(RVA = "0x105D444", Offset = "0x105D444", VA = "0x105D444")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x105D7E8", Offset = "0x105D7E8", VA = "0x105D7E8")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x105D5E4", Offset = "0x105D5E4", VA = "0x105D5E4")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x105D65C", Offset = "0x105D65C", VA = "0x105D65C")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x105D6F8", Offset = "0x105D6F8", VA = "0x105D6F8")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20000E5")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40006A6")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40006A7")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x18F1298", Offset = "0x18F1298", VA = "0x18F1298")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x18F1320", Offset = "0x18F1320", VA = "0x18F1320", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x18F133C", Offset = "0x18F133C", VA = "0x18F133C")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x18F14E0", Offset = "0x18F14E0", VA = "0x18F14E0")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x18F16CC", Offset = "0x18F16CC", VA = "0x18F16CC")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20000E6")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x18F1770", Offset = "0x18F1770", VA = "0x18F1770")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x18F1854", Offset = "0x18F1854", VA = "0x18F1854")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x18F1A50", Offset = "0x18F1A50", VA = "0x18F1A50")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x18F1E08", Offset = "0x18F1E08", VA = "0x18F1E08")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x18F1F14", Offset = "0x18F1F14", VA = "0x18F1F14")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20000E7")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x40006B0")]
	Body = 1,
	[Token(Token = "0x40006B1")]
	Hands = 2,
	[Token(Token = "0x40006B2")]
	Base = 4,
	[Token(Token = "0x40006B3")]
	BodyTilt = 0x10,
	[Token(Token = "0x40006B4")]
	Expressive = 0x20,
	[Token(Token = "0x40006B5")]
	All = -1
}
[Token(Token = "0x20000E8")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40006B7")]
	AvatarSpecification,
	[Token(Token = "0x40006B8")]
	AssetLoaded,
	[Token(Token = "0x40006B9")]
	Count
}
[Token(Token = "0x20000E9")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20000EA")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20000EB")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40006BF")]
	Mesh,
	[Token(Token = "0x40006C0")]
	Texture,
	[Token(Token = "0x40006C1")]
	Pose,
	[Token(Token = "0x40006C2")]
	Material,
	[Token(Token = "0x40006C3")]
	CombinedMesh,
	[Token(Token = "0x40006C4")]
	PBSMaterial,
	[Token(Token = "0x40006C5")]
	FailedLoad,
	[Token(Token = "0x40006C6")]
	Count
}
[Token(Token = "0x20000EC")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20000ED")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20000EE")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20000EF")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000F0")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000F1")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40006FB")]
	RGB24,
	[Token(Token = "0x40006FC")]
	DXT1,
	[Token(Token = "0x40006FD")]
	DXT5,
	[Token(Token = "0x40006FE")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40006FF")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000700")]
	Count
}
[Token(Token = "0x20000F2")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20000F3")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000708")]
	SkinnedMeshRender,
	[Token(Token = "0x4000709")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x400070A")]
	ProjectorRender,
	[Token(Token = "0x400070B")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x400070C")]
	Count
}
[Token(Token = "0x20000F4")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x400070E")]
	Unknown,
	[Token(Token = "0x400070F")]
	Default,
	[Token(Token = "0x4000710")]
	Verbose,
	[Token(Token = "0x4000711")]
	Debug,
	[Token(Token = "0x4000712")]
	Info,
	[Token(Token = "0x4000713")]
	Warn,
	[Token(Token = "0x4000714")]
	Error,
	[Token(Token = "0x4000715")]
	Fatal,
	[Token(Token = "0x4000716")]
	Silent
}
[Token(Token = "0x20000F5")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20000F6")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x400071B")]
	One = 1,
	[Token(Token = "0x400071C")]
	Two = 2,
	[Token(Token = "0x400071D")]
	Three = 4,
	[Token(Token = "0x400071E")]
	Joystick = 8
}
[Token(Token = "0x20000F7")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000720")]
	One = 1,
	[Token(Token = "0x4000721")]
	Two = 2,
	[Token(Token = "0x4000722")]
	Joystick = 4,
	[Token(Token = "0x4000723")]
	ThumbRest = 8,
	[Token(Token = "0x4000724")]
	Index = 0x10,
	[Token(Token = "0x4000725")]
	Pointing = 0x40,
	[Token(Token = "0x4000726")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000F8")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000F9")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000FA")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000FB")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000FC")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000FD")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000FE")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000FF")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000100")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000746")]
	Add,
	[Token(Token = "0x4000747")]
	Multiply,
	[Token(Token = "0x4000748")]
	Count
}
[Token(Token = "0x2000101")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x400074A")]
	Color,
	[Token(Token = "0x400074B")]
	Texture,
	[Token(Token = "0x400074C")]
	TextureSingleChannel,
	[Token(Token = "0x400074D")]
	Parallax,
	[Token(Token = "0x400074E")]
	Count
}
[Token(Token = "0x2000102")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000750")]
	None,
	[Token(Token = "0x4000751")]
	Positional,
	[Token(Token = "0x4000752")]
	ViewReflection,
	[Token(Token = "0x4000753")]
	Fresnel,
	[Token(Token = "0x4000754")]
	Pulse,
	[Token(Token = "0x4000755")]
	Count
}
[Token(Token = "0x2000103")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000757")]
	Touch,
	[Token(Token = "0x4000758")]
	Malibu,
	[Token(Token = "0x4000759")]
	Go,
	[Token(Token = "0x400075A")]
	Quest,
	[Token(Token = "0x400075B")]
	Count
}
[Token(Token = "0x2000104")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x400075D")]
	Lowest = 1,
	[Token(Token = "0x400075E")]
	Medium = 3,
	[Token(Token = "0x400075F")]
	Highest = 5
}
[Token(Token = "0x2000105")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000761")]
	Unknown = -1,
	[Token(Token = "0x4000762")]
	One,
	[Token(Token = "0x4000763")]
	Two
}
[Token(Token = "0x2000106")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xD45EF4", Offset = "0xD45EF4", VA = "0xD45EF4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x8555EC", Offset = "0x8555EC", VA = "0x8555EC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x8555F4", Offset = "0x8555F4", VA = "0x8555F4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000107")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xD46224", Offset = "0xD46224", VA = "0xD46224")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x85582C", Offset = "0x85582C", VA = "0x85582C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x855834", Offset = "0x855834", VA = "0x855834", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000108")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xD45484", Offset = "0xD45484", VA = "0xD45484")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x855354", Offset = "0x855354", VA = "0x855354", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x85535C", Offset = "0x85535C", VA = "0x85535C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000109")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xD46758", Offset = "0xD46758", VA = "0xD46758")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x85610C", Offset = "0x85610C", VA = "0x85610C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x856114", Offset = "0x856114", VA = "0x856114", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200010A")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x18E9400", Offset = "0x18E9400", VA = "0x18E9400")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200010B")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200010C")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000798")]
	FirstPerson = 1,
	[Token(Token = "0x4000799")]
	ThirdPerson = 2,
	[Token(Token = "0x400079A")]
	SelfOccluding = 4
}
[Token(Token = "0x200010D")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200010E")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200010F")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000110")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000111")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x40007B0")]
	Default,
	[Token(Token = "0x40007B1")]
	GripSphere,
	[Token(Token = "0x40007B2")]
	GripCube,
	[Token(Token = "0x40007B3")]
	Count
}
[Token(Token = "0x2000112")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x40007B5")]
	Body,
	[Token(Token = "0x40007B6")]
	Clothing,
	[Token(Token = "0x40007B7")]
	Eyewear,
	[Token(Token = "0x40007B8")]
	Hair,
	[Token(Token = "0x40007B9")]
	Beard,
	[Token(Token = "0x40007BA")]
	Count
}
[Token(Token = "0x2000113")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000114")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000115")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000116")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000117")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40007C4")]
	AvatarHead,
	[Token(Token = "0x40007C5")]
	AvatarHand,
	[Token(Token = "0x40007C6")]
	Object,
	[Token(Token = "0x40007C7")]
	ObjectStatic,
	[Token(Token = "0x40007C8")]
	Count
}
[Token(Token = "0x2000118")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000119")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200011A")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x200011B")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200011C")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40007D4")]
	Point,
	[Token(Token = "0x40007D5")]
	Direction,
	[Token(Token = "0x40007D6")]
	Spot,
	[Token(Token = "0x40007D7")]
	Count
}
[Token(Token = "0x200011D")]
public struct ovrAvatarLight
{
	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x200011E")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200011F")]
public struct ovrAvatarLights
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000120")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000121")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40007ED")]
	None = 0u,
	[Token(Token = "0x40007EE")]
	GazeTarget = 1u,
	[Token(Token = "0x40007EF")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000122")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000123")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000124")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000125")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000126")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000127")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000128")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x857088", Offset = "0x857088", VA = "0x857088")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000804")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000049")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000565")]
		[Address(RVA = "0xE3D328", Offset = "0xE3D328", VA = "0xE3D328")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xE3D520", Offset = "0xE3D520", VA = "0xE3D520")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xE3D870", Offset = "0xE3D870", VA = "0xE3D870")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xE3D8E0", Offset = "0xE3D8E0", VA = "0xE3D8E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xE3E2C0", Offset = "0xE3E2C0", VA = "0xE3E2C0")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xE3E314", Offset = "0xE3E314", VA = "0xE3E314")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xE3E368", Offset = "0xE3E368", VA = "0xE3E368")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xE3E3CC", Offset = "0xE3E3CC", VA = "0xE3E3CC")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xE3E430", Offset = "0xE3E430", VA = "0xE3E430")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xE3E0C0", Offset = "0xE3E0C0", VA = "0xE3E0C0")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xE3E50C", Offset = "0xE3E50C", VA = "0xE3E50C")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xE3E660", Offset = "0xE3E660", VA = "0xE3E660")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xE3E754", Offset = "0xE3E754", VA = "0xE3E754")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xE3E7D0", Offset = "0xE3E7D0", VA = "0xE3E7D0")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xE3D824", Offset = "0xE3D824", VA = "0xE3D824")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xE3E8B0", Offset = "0xE3E8B0", VA = "0xE3E8B0")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xE3E930", Offset = "0xE3E930", VA = "0xE3E930")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000129")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700004A")]
	public static string AppID
	{
		[Token(Token = "0x6000577")]
		[Address(RVA = "0xE3E870", Offset = "0xE3E870", VA = "0xE3E870")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000578")]
		[Address(RVA = "0xE3EAA0", Offset = "0xE3EAA0", VA = "0xE3EAA0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000579")]
		[Address(RVA = "0xE3E890", Offset = "0xE3E890", VA = "0xE3E890")]
		get
		{
			return null;
		}
		[Token(Token = "0x600057A")]
		[Address(RVA = "0xE3EAD0", Offset = "0xE3EAD0", VA = "0xE3EAD0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600057B")]
		[Address(RVA = "0xE3E948", Offset = "0xE3E948", VA = "0xE3E948")]
		get
		{
			return null;
		}
		[Token(Token = "0x600057C")]
		[Address(RVA = "0xE3EB00", Offset = "0xE3EB00", VA = "0xE3EB00")]
		set
		{
		}
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xE3EB54", Offset = "0xE3EB54", VA = "0xE3EB54")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200012A")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xE406E4", Offset = "0xE406E4", VA = "0xE406E4")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xE409E4", Offset = "0xE409E4", VA = "0xE409E4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xE40874", Offset = "0xE40874", VA = "0xE40874")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xE40C28", Offset = "0xE40C28", VA = "0xE40C28")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200012B")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xE40C30", Offset = "0xE40C30", VA = "0xE40C30")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xE40D98", Offset = "0xE40D98", VA = "0xE40D98")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xE40F74", Offset = "0xE40F74", VA = "0xE40F74")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200012C")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x400081B")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x400081C")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x400081D")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xE3EBC0", Offset = "0xE3EBC0", VA = "0xE3EBC0")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xE3FC14", Offset = "0xE3FC14", VA = "0xE3FC14")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xE3FE54", Offset = "0xE3FE54", VA = "0xE3FE54")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xE3F314", Offset = "0xE3F314", VA = "0xE3F314")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xE3F038", Offset = "0xE3F038", VA = "0xE3F038")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xE3F19C", Offset = "0xE3F19C", VA = "0xE3F19C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xE406DC", Offset = "0xE406DC", VA = "0xE406DC")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200012D")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200012E")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200012F")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x857144", Offset = "0x857144", VA = "0x857144")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000130")]
	public struct TextureSet
	{
		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x857218", Offset = "0x857218", VA = "0x857218")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8050", Offset = "0x8D8050")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059B")]
			[Address(RVA = "0xD55168", Offset = "0xD55168", VA = "0xD55168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059D")]
			[Address(RVA = "0xD551B0", Offset = "0xD551B0", VA = "0xD551B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xD54B8C", Offset = "0xD54B8C", VA = "0xD54B8C")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0xD54BB8", Offset = "0xD54BB8", VA = "0xD54BB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xD54BBC", Offset = "0xD54BBC", VA = "0xD54BBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xD55170", Offset = "0xD55170", VA = "0xD55170", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000821")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000822")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000825")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000826")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000827")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000828")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000829")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x400082A")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400082B")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xE41694", Offset = "0xE41694", VA = "0xE41694")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xE41B74", Offset = "0xE41B74", VA = "0xE41B74")]
	public void Update()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xE41D44", Offset = "0xE41D44", VA = "0xE41D44")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xE41D90", Offset = "0xE41D90", VA = "0xE41D90")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xE41CB8", Offset = "0xE41CB8", VA = "0xE41CB8")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xE41F30", Offset = "0xE41F30", VA = "0xE41F30")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xE42138", Offset = "0xE42138", VA = "0xE42138")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xE421DC", Offset = "0xE421DC", VA = "0xE421DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFA18", Offset = "0x8DFA18")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xE3E4C0", Offset = "0xE3E4C0", VA = "0xE3E4C0")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xE42288", Offset = "0xE42288", VA = "0xE42288")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000132")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xE42400", Offset = "0xE42400", VA = "0xE42400")]
	private void Update()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xE42574", Offset = "0xE42574", VA = "0xE42574")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000133")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000134")]
	public delegate void OnClick();

	[Token(Token = "0x2000135")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000136")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000137")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8060", Offset = "0x8D8060")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xD496D0", Offset = "0xD496D0", VA = "0xD496D0")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xD496D8", Offset = "0xD496D8", VA = "0xD496D8")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000139")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8070", Offset = "0x8D8070")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xD498FC", Offset = "0xD498FC", VA = "0xD498FC")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xD49904", Offset = "0xD49904", VA = "0xD49904")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200013A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8080", Offset = "0x8D8080")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xD49B50", Offset = "0xD49B50", VA = "0xD49B50")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xD49B58", Offset = "0xD49B58", VA = "0xD49B58")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8090", Offset = "0x8D8090")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xD49EEC", Offset = "0xD49EEC", VA = "0xD49EEC")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xD49EF4", Offset = "0xD49EF4", VA = "0xD49EF4")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D80A0", Offset = "0x8D80A0")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xD49F14", Offset = "0xD49F14", VA = "0xD49F14")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xD49F1C", Offset = "0xD49F1C", VA = "0xD49F1C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400083D")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400083E")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400083F")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x400084D")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x400084E")]
	private const float marginH = 16f;

	[Token(Token = "0x400084F")]
	private const float marginV = 16f;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xF9A9EC", Offset = "0xF9A9EC", VA = "0xF9A9EC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xF9AF1C", Offset = "0xF9AF1C", VA = "0xF9AF1C")]
	public void Show()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xF9B4F4", Offset = "0xF9B4F4", VA = "0xF9B4F4")]
	public void Hide()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xF9B2D4", Offset = "0xF9B2D4", VA = "0xF9B2D4")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xF9B6B0", Offset = "0xF9B6B0", VA = "0xF9B6B0")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xF9B9D0", Offset = "0xF9B9D0", VA = "0xF9B9D0")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xF9BC6C", Offset = "0xF9BC6C", VA = "0xF9BC6C")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xF9BD70", Offset = "0xF9BD70", VA = "0xF9BD70")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xF9BF54", Offset = "0xF9BF54", VA = "0xF9BF54")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xF9BFF8", Offset = "0xF9BFF8", VA = "0xF9BFF8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xF9C1E8", Offset = "0xF9C1E8", VA = "0xF9C1E8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xF9C3F0", Offset = "0xF9C3F0", VA = "0xF9C3F0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xF9C6F4", Offset = "0xF9C6F4", VA = "0xF9C6F4")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xF9C7F0", Offset = "0xF9C7F0", VA = "0xF9C7F0")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xF9C89C", Offset = "0xF9C89C", VA = "0xF9C89C")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200013D")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xFF622C", Offset = "0xFF622C", VA = "0xFF622C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xFF62DC", Offset = "0xFF62DC", VA = "0xFF62DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xFF639C", Offset = "0xFF639C", VA = "0xFF639C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xFF63D8", Offset = "0xFF63D8", VA = "0xFF63D8")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200013E")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200013F")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x400086C")]
		On,
		[Token(Token = "0x400086D")]
		Off,
		[Token(Token = "0x400086E")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700004F")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xFFC07C", Offset = "0xFFC07C", VA = "0xFFC07C")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xFFC038", Offset = "0xFFC038", VA = "0xFFC038")]
		set
		{
		}
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xFFC084", Offset = "0xFFC084", VA = "0xFFC084")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xFFC0E0", Offset = "0xFFC0E0", VA = "0xFFC0E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xFFC224", Offset = "0xFFC224", VA = "0xFFC224", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xFFC240", Offset = "0xFFC240", VA = "0xFFC240", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xFFC294", Offset = "0xFFC294", VA = "0xFFC294")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xFFC450", Offset = "0xFFC450", VA = "0xFFC450")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xFFC564", Offset = "0xFFC564", VA = "0xFFC564")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xFFC5F4", Offset = "0xFFC5F4", VA = "0xFFC5F4")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xFFC6C0", Offset = "0xFFC6C0", VA = "0xFFC6C0")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xFFC774", Offset = "0xFFC774", VA = "0xFFC774")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xFFC860", Offset = "0xFFC860", VA = "0xFFC860")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000140")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400086F")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000870")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000871")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB334", Offset = "0x8DB334")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB36C", Offset = "0x8DB36C")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB3A4", Offset = "0x8DB3A4")]
	public float HeightOffset;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB3DC", Offset = "0x8DB3DC")]
	public float MinimumHeight;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB414", Offset = "0x8DB414")]
	public float MaximumHeight;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x1069868", Offset = "0x1069868", VA = "0x1069868")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x1069870", Offset = "0x1069870", VA = "0x1069870")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x10698FC", Offset = "0x10698FC", VA = "0x10698FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1069990", Offset = "0x1069990", VA = "0x1069990")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1069A24", Offset = "0x1069A24", VA = "0x1069A24")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1069D50", Offset = "0x1069D50", VA = "0x1069D50")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x1069F80", Offset = "0x1069F80", VA = "0x1069F80")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000141")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1002120", Offset = "0x1002120", VA = "0x1002120")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x10021EC", Offset = "0x10021EC", VA = "0x10021EC")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000142")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000143")]
	public enum States
	{
		[Token(Token = "0x400089F")]
		Ready,
		[Token(Token = "0x40008A0")]
		Aim,
		[Token(Token = "0x40008A1")]
		CancelAim,
		[Token(Token = "0x40008A2")]
		PreTeleport,
		[Token(Token = "0x40008A3")]
		CancelTeleport,
		[Token(Token = "0x40008A4")]
		Teleporting,
		[Token(Token = "0x40008A5")]
		PostTeleport
	}

	[Token(Token = "0x2000144")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40008A7")]
		None,
		[Token(Token = "0x40008A8")]
		Aim,
		[Token(Token = "0x40008A9")]
		PreTeleport,
		[Token(Token = "0x40008AA")]
		Teleport
	}

	[Token(Token = "0x2000145")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40008AC")]
		Point,
		[Token(Token = "0x40008AD")]
		Sphere,
		[Token(Token = "0x40008AE")]
		Capsule
	}

	[Token(Token = "0x2000146")]
	public class AimData
	{
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DB82C", Offset = "0x8DB82C")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000053")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000618")]
			[Address(RVA = "0xD4C980", Offset = "0xD4C980", VA = "0xD4C980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF40", Offset = "0x8DFF40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000619")]
			[Address(RVA = "0xD4C988", Offset = "0xD4C988", VA = "0xD4C988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF50", Offset = "0x8DFF50")]
			private set
			{
			}
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xD4C8FC", Offset = "0xD4C8FC", VA = "0xD4C8FC")]
		public AimData()
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xD4C990", Offset = "0xD4C990", VA = "0xD4C990")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000147")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D80B0", Offset = "0x8D80B0")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600061E")]
			[Address(RVA = "0xD4C748", Offset = "0xD4C748", VA = "0xD4C748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000620")]
			[Address(RVA = "0xD4C790", Offset = "0xD4C790", VA = "0xD4C790", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0xD4C60C", Offset = "0xD4C60C", VA = "0xD4C60C")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xD4C638", Offset = "0xD4C638", VA = "0xD4C638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0xD4C63C", Offset = "0xD4C63C", VA = "0xD4C63C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xD4C750", Offset = "0xD4C750", VA = "0xD4C750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D80C0", Offset = "0x8D80C0")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000624")]
			[Address(RVA = "0xD4C078", Offset = "0xD4C078", VA = "0xD4C078", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000626")]
			[Address(RVA = "0xD4C0C0", Offset = "0xD4C0C0", VA = "0xD4C0C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xD4BEF0", Offset = "0xD4BEF0", VA = "0xD4BEF0")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xD4BF1C", Offset = "0xD4BF1C", VA = "0xD4BF1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xD4BF20", Offset = "0xD4BF20", VA = "0xD4BF20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xD4C080", Offset = "0xD4C080", VA = "0xD4C080", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000149")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D80D0", Offset = "0x8D80D0")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600062A")]
			[Address(RVA = "0xD4C1A4", Offset = "0xD4C1A4", VA = "0xD4C1A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600062C")]
			[Address(RVA = "0xD4C1EC", Offset = "0xD4C1EC", VA = "0xD4C1EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xD4C0C8", Offset = "0xD4C0C8", VA = "0xD4C0C8")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xD4C0F4", Offset = "0xD4C0F4", VA = "0xD4C0F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xD4C0F8", Offset = "0xD4C0F8", VA = "0xD4C0F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xD4C1AC", Offset = "0xD4C1AC", VA = "0xD4C1AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D80E0", Offset = "0x8D80E0")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000630")]
			[Address(RVA = "0xD4C5BC", Offset = "0xD4C5BC", VA = "0xD4C5BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000632")]
			[Address(RVA = "0xD4C604", Offset = "0xD4C604", VA = "0xD4C604", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xD4C4A0", Offset = "0xD4C4A0", VA = "0xD4C4A0")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xD4C4CC", Offset = "0xD4C4CC", VA = "0xD4C4CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xD4C4D0", Offset = "0xD4C4D0", VA = "0xD4C4D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xD4C5C4", Offset = "0xD4C5C4", VA = "0xD4C5C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D80F0", Offset = "0x8D80F0")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000636")]
			[Address(RVA = "0xD4C2D0", Offset = "0xD4C2D0", VA = "0xD4C2D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000638")]
			[Address(RVA = "0xD4C318", Offset = "0xD4C318", VA = "0xD4C318", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xD4C1F4", Offset = "0xD4C1F4", VA = "0xD4C1F4")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0xD4C220", Offset = "0xD4C220", VA = "0xD4C220", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0xD4C224", Offset = "0xD4C224", VA = "0xD4C224", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xD4C2D8", Offset = "0xD4C2D8", VA = "0xD4C2D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8100", Offset = "0x8D8100")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600063C")]
			[Address(RVA = "0xD4C8AC", Offset = "0xD4C8AC", VA = "0xD4C8AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600063E")]
			[Address(RVA = "0xD4C8F4", Offset = "0xD4C8F4", VA = "0xD4C8F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xD4C798", Offset = "0xD4C798", VA = "0xD4C798")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xD4C7C4", Offset = "0xD4C7C4", VA = "0xD4C7C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xD4C7C8", Offset = "0xD4C7C8", VA = "0xD4C7C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xD4C8B4", Offset = "0xD4C8B4", VA = "0xD4C8B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8110", Offset = "0x8D8110")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000642")]
			[Address(RVA = "0xD4C450", Offset = "0xD4C450", VA = "0xD4C450", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000644")]
			[Address(RVA = "0xD4C498", Offset = "0xD4C498", VA = "0xD4C498", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0xD4C320", Offset = "0xD4C320", VA = "0xD4C320")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xD4C34C", Offset = "0xD4C34C", VA = "0xD4C34C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xD4C350", Offset = "0xD4C350", VA = "0xD4C350", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xD4C458", Offset = "0xD4C458", VA = "0xD4C458", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB44C", Offset = "0x8DB44C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB484", Offset = "0x8DB484")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB4BC", Offset = "0x8DB4BC")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB4F4", Offset = "0x8DB4F4")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB52C", Offset = "0x8DB52C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB564", Offset = "0x8DB564")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB59C", Offset = "0x8DB59C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB5D4", Offset = "0x8DB5D4")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DB60C", Offset = "0x8DB60C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB61C", Offset = "0x8DB61C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB654", Offset = "0x8DB654")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DB69C", Offset = "0x8DB69C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB6AC", Offset = "0x8DB6AC")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB6E4", Offset = "0x8DB6E4")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB71C", Offset = "0x8DB71C")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB754", Offset = "0x8DB754")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000050")]
	public States CurrentState
	{
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x1002CC8", Offset = "0x1002CC8", VA = "0x1002CC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFAC8", Offset = "0x8DFAC8")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x1002CD0", Offset = "0x1002CD0", VA = "0x1002CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFAD8", Offset = "0x8DFAD8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x1002EF4", Offset = "0x1002EF4", VA = "0x1002EF4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000052")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x1002F1C", Offset = "0x1002F1C", VA = "0x1002F1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB08", Offset = "0x8DFB08")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x1002F24", Offset = "0x1002F24", VA = "0x1002F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB18", Offset = "0x8DFB18")]
		private set
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x1002CD8", Offset = "0x1002CD8", VA = "0x1002CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFAE8", Offset = "0x8DFAE8")]
		add
		{
		}
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x1002D78", Offset = "0x1002D78", VA = "0x1002D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFAF8", Offset = "0x8DFAF8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x1003564", Offset = "0x1003564", VA = "0x1003564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB60", Offset = "0x8DFB60")]
		add
		{
		}
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x1003604", Offset = "0x1003604", VA = "0x1003604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB70", Offset = "0x8DFB70")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x10036A4", Offset = "0x10036A4", VA = "0x10036A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFBE0", Offset = "0x8DFBE0")]
		add
		{
		}
		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x1003744", Offset = "0x1003744", VA = "0x1003744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFBF0", Offset = "0x8DFBF0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x10037E4", Offset = "0x10037E4", VA = "0x10037E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC00", Offset = "0x8DFC00")]
		add
		{
		}
		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x1003884", Offset = "0x1003884", VA = "0x1003884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC10", Offset = "0x8DFC10")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x1003994", Offset = "0x1003994", VA = "0x1003994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC20", Offset = "0x8DFC20")]
		add
		{
		}
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x1003A34", Offset = "0x1003A34", VA = "0x1003A34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC30", Offset = "0x8DFC30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000601")]
		[Address(RVA = "0x1003B4C", Offset = "0x1003B4C", VA = "0x1003B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFCA0", Offset = "0x8DFCA0")]
		add
		{
		}
		[Token(Token = "0x6000602")]
		[Address(RVA = "0x1003BEC", Offset = "0x1003BEC", VA = "0x1003BEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFCB0", Offset = "0x8DFCB0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000604")]
		[Address(RVA = "0x1003D04", Offset = "0x1003D04", VA = "0x1003D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD20", Offset = "0x8DFD20")]
		add
		{
		}
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x1003DA4", Offset = "0x1003DA4", VA = "0x1003DA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD30", Offset = "0x8DFD30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000607")]
		[Address(RVA = "0x1003EBC", Offset = "0x1003EBC", VA = "0x1003EBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFDA0", Offset = "0x8DFDA0")]
		add
		{
		}
		[Token(Token = "0x6000608")]
		[Address(RVA = "0x1003F5C", Offset = "0x1003F5C", VA = "0x1003F5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFDB0", Offset = "0x8DFDB0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600060A")]
		[Address(RVA = "0x1004074", Offset = "0x1004074", VA = "0x1004074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE20", Offset = "0x8DFE20")]
		add
		{
		}
		[Token(Token = "0x600060B")]
		[Address(RVA = "0x1004114", Offset = "0x1004114", VA = "0x1004114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE30", Offset = "0x8DFE30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600060D")]
		[Address(RVA = "0x100422C", Offset = "0x100422C", VA = "0x100422C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFEA0", Offset = "0x8DFEA0")]
		add
		{
		}
		[Token(Token = "0x600060E")]
		[Address(RVA = "0x10042CC", Offset = "0x10042CC", VA = "0x10042CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFEB0", Offset = "0x8DFEB0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000610")]
		[Address(RVA = "0x10043E4", Offset = "0x10043E4", VA = "0x10043E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF20", Offset = "0x8DFF20")]
		add
		{
		}
		[Token(Token = "0x6000611")]
		[Address(RVA = "0x1004484", Offset = "0x1004484", VA = "0x1004484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF30", Offset = "0x8DFF30")]
		remove
		{
		}
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1002974", Offset = "0x1002974", VA = "0x1002974")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x1002998", Offset = "0x1002998", VA = "0x1002998")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x1002E18", Offset = "0x1002E18", VA = "0x1002E18")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1002F2C", Offset = "0x1002F2C", VA = "0x1002F2C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1003178", Offset = "0x1003178", VA = "0x1003178")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8DFB28", Offset = "0x8DFB28")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x100322C", Offset = "0x100322C", VA = "0x100322C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x100332C", Offset = "0x100332C", VA = "0x100332C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1003348", Offset = "0x1003348", VA = "0x1003348")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x100340C", Offset = "0x100340C", VA = "0x100340C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x1003450", Offset = "0x1003450", VA = "0x1003450")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x10034B4", Offset = "0x10034B4", VA = "0x10034B4", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x100355C", Offset = "0x100355C", VA = "0x100355C", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x10034E4", Offset = "0x10034E4", VA = "0x10034E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFB80", Offset = "0x8DFB80")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x1003924", Offset = "0x1003924", VA = "0x1003924")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x1003AD4", Offset = "0x1003AD4", VA = "0x1003AD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFC40", Offset = "0x8DFC40")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x1003C8C", Offset = "0x1003C8C", VA = "0x1003C8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFCC0", Offset = "0x8DFCC0")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x1003E44", Offset = "0x1003E44", VA = "0x1003E44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFD40", Offset = "0x8DFD40")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x1003FFC", Offset = "0x1003FFC", VA = "0x1003FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFDC0", Offset = "0x8DFDC0")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x10041B4", Offset = "0x10041B4", VA = "0x10041B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFE40", Offset = "0x8DFE40")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x100436C", Offset = "0x100436C", VA = "0x100436C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFEC0", Offset = "0x8DFEC0")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1004524", Offset = "0x1004524", VA = "0x1004524")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1004664", Offset = "0x1004664", VA = "0x1004664")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1004698", Offset = "0x1004698", VA = "0x1004698")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x1004760", Offset = "0x1004760", VA = "0x1004760")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1004858", Offset = "0x1004858", VA = "0x1004858")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200014E")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x14000027")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000645")]
		[Address(RVA = "0x132BFC8", Offset = "0x132BFC8", VA = "0x132BFC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0190", Offset = "0x8E0190")]
		add
		{
		}
		[Token(Token = "0x6000646")]
		[Address(RVA = "0x132C068", Offset = "0x132C068", VA = "0x132C068")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E01A0", Offset = "0x8E01A0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000647")]
		[Address(RVA = "0x132C108", Offset = "0x132C108", VA = "0x132C108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E01B0", Offset = "0x8E01B0")]
		add
		{
		}
		[Token(Token = "0x6000648")]
		[Address(RVA = "0x132C1A8", Offset = "0x132C1A8", VA = "0x132C1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E01C0", Offset = "0x8E01C0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x132C248", Offset = "0x132C248", VA = "0x132C248")]
	private void Awake()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x132C334", Offset = "0x132C334", VA = "0x132C334")]
	private void Start()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x132C338", Offset = "0x132C338", VA = "0x132C338")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x132C3AC", Offset = "0x132C3AC", VA = "0x132C3AC")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x132C4D0", Offset = "0x132C4D0", VA = "0x132C4D0")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x132C6B8", Offset = "0x132C6B8", VA = "0x132C6B8")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x132C8C0", Offset = "0x132C8C0", VA = "0x132C8C0")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200014F")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000650")]
	[Address(RVA = "0x133AD40", Offset = "0x133AD40", VA = "0x133AD40", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x133AD78", Offset = "0x133AD78", VA = "0x133AD78", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000652")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x133AE14", Offset = "0x133AE14", VA = "0x133AE14")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000150")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB85C", Offset = "0x8DB85C")]
	public float Range;

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x133AE1C", Offset = "0x133AE1C", VA = "0x133AE1C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x133AF18", Offset = "0x133AF18", VA = "0x133AF18")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000151")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB894", Offset = "0x8DB894")]
	public float Range;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB8CC", Offset = "0x8DB8CC")]
	public float MinimumElevation;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB904", Offset = "0x8DB904")]
	public float Gravity;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB93C", Offset = "0x8DB93C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DB93C", Offset = "0x8DB93C")]
	public float AimVelocity;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DB998", Offset = "0x8DB998")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB998", Offset = "0x8DB998")]
	public float AimStep;

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x133AF28", Offset = "0x133AF28", VA = "0x133AF28", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x133B0B8", Offset = "0x133B0B8", VA = "0x133B0B8")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000152")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB9F0", Offset = "0x8DB9F0")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x133B0CC", Offset = "0x133B0CC", VA = "0x133B0CC")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x133B208", Offset = "0x133B208", VA = "0x133B208")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x133B238", Offset = "0x133B238", VA = "0x133B238")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x133B268", Offset = "0x133B268", VA = "0x133B268")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x133B318", Offset = "0x133B318", VA = "0x133B318", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x133B378", Offset = "0x133B378", VA = "0x133B378", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x133B3DC", Offset = "0x133B3DC", VA = "0x133B3DC")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000153")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DBA28", Offset = "0x8DBA28")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBA38", Offset = "0x8DBA38")]
	public Transform PositionIndicator;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBA70", Offset = "0x8DBA70")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBAA8", Offset = "0x8DBAA8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000062")]
	public bool IsValidDestination
	{
		[Token(Token = "0x600065F")]
		[Address(RVA = "0x133B500", Offset = "0x133B500", VA = "0x133B500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E01D0", Offset = "0x8E01D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000660")]
		[Address(RVA = "0x133B508", Offset = "0x133B508", VA = "0x133B508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E01E0", Offset = "0x8E01E0")]
		private set
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000665")]
		[Address(RVA = "0x133B6C4", Offset = "0x133B6C4", VA = "0x133B6C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E01F0", Offset = "0x8E01F0")]
		add
		{
		}
		[Token(Token = "0x6000666")]
		[Address(RVA = "0x133B764", Offset = "0x133B764", VA = "0x133B764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0200", Offset = "0x8E0200")]
		remove
		{
		}
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x133B514", Offset = "0x133B514", VA = "0x133B514")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x133B5AC", Offset = "0x133B5AC", VA = "0x133B5AC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x133B680", Offset = "0x133B680", VA = "0x133B680")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x133B6C0", Offset = "0x133B6C0", VA = "0x133B6C0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x133B804", Offset = "0x133B804", VA = "0x133B804")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x133B868", Offset = "0x133B868", VA = "0x133B868")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x133B888", Offset = "0x133B888", VA = "0x133B888", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000154")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8120", Offset = "0x8D8120")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000063")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000676")]
			[Address(RVA = "0x1BDD5DC", Offset = "0x1BDD5DC", VA = "0x1BDD5DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000678")]
			[Address(RVA = "0x1BDD624", Offset = "0x1BDD624", VA = "0x1BDD624", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x1BDD514", Offset = "0x1BDD514", VA = "0x1BDD514")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x1BDD540", Offset = "0x1BDD540", VA = "0x1BDD540", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x1BDD544", Offset = "0x1BDD544", VA = "0x1BDD544", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x1BDD5E4", Offset = "0x1BDD5E4", VA = "0x1BDD5E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8130", Offset = "0x8D8130")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000065")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600067C")]
			[Address(RVA = "0x1BDD4C4", Offset = "0x1BDD4C4", VA = "0x1BDD4C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600067E")]
			[Address(RVA = "0x1BDD50C", Offset = "0x1BDD50C", VA = "0x1BDD50C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x1BDD3F8", Offset = "0x1BDD3F8", VA = "0x1BDD3F8")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x1BDD424", Offset = "0x1BDD424", VA = "0x1BDD424", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x1BDD428", Offset = "0x1BDD428", VA = "0x1BDD428", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x1BDD4CC", Offset = "0x1BDD4CC", VA = "0x1BDD4CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x133BA94", Offset = "0x133BA94", VA = "0x133BA94")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x133BB68", Offset = "0x133BB68", VA = "0x133BB68", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x133BBCC", Offset = "0x133BBCC", VA = "0x133BBCC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x133BC90", Offset = "0x133BC90", VA = "0x133BC90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0210", Offset = "0x8E0210")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x133BD08", Offset = "0x133BD08", VA = "0x133BD08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0270", Offset = "0x8E0270")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600066F")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000670")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x133BD80", Offset = "0x133BD80", VA = "0x133BD80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E02D0", Offset = "0x8E02D0")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x133BDAC", Offset = "0x133BDAC", VA = "0x133BDAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E02E0", Offset = "0x8E02E0")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000157")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DBAF0", Offset = "0x8DBAF0")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBB00", Offset = "0x8DBB00")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBB38", Offset = "0x8DBB38")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBB70", Offset = "0x8DBB70")]
	public bool FastTeleport;

	[Token(Token = "0x17000067")]
	public Transform Pointer
	{
		[Token(Token = "0x600067F")]
		[Address(RVA = "0x133BDD8", Offset = "0x133BDD8", VA = "0x133BDD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0390", Offset = "0x8E0390")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x133BDE0", Offset = "0x133BDE0", VA = "0x133BDE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E03A0", Offset = "0x8E03A0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x133BDE8", Offset = "0x133BDE8", VA = "0x133BDE8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x133BF40", Offset = "0x133BF40", VA = "0x133BF40", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x133BFF8", Offset = "0x133BFF8", VA = "0x133BFF8")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000158")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000159")]
	public enum InputModes
	{
		[Token(Token = "0x40008FF")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000900")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000901")]
		ThumbstickTeleport,
		[Token(Token = "0x4000902")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200015A")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000904")]
		A,
		[Token(Token = "0x4000905")]
		B,
		[Token(Token = "0x4000906")]
		LeftTrigger,
		[Token(Token = "0x4000907")]
		LeftThumbstick,
		[Token(Token = "0x4000908")]
		RightTrigger,
		[Token(Token = "0x4000909")]
		RightThumbstick,
		[Token(Token = "0x400090A")]
		X,
		[Token(Token = "0x400090B")]
		Y
	}

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBBA8", Offset = "0x8DBBA8")]
	public InputModes InputMode;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBBE0", Offset = "0x8DBBE0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBC18", Offset = "0x8DBC18")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBC50", Offset = "0x8DBC50")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x133BFFC", Offset = "0x133BFFC", VA = "0x133BFFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x133C000", Offset = "0x133C000", VA = "0x133C000", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x133C3E8", Offset = "0x133C3E8", VA = "0x133C3E8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x133C4A8", Offset = "0x133C4A8", VA = "0x133C4A8")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200015B")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200015C")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000910")]
		HeadRelative,
		[Token(Token = "0x4000911")]
		ForwardFacing
	}

	[Token(Token = "0x200015D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8140", Offset = "0x8D8140")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000694")]
			[Address(RVA = "0x1BDD70C", Offset = "0x1BDD70C", VA = "0x1BDD70C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000696")]
			[Address(RVA = "0x1BDD754", Offset = "0x1BDD754", VA = "0x1BDD754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x1BDD62C", Offset = "0x1BDD62C", VA = "0x1BDD62C")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x1BDD658", Offset = "0x1BDD658", VA = "0x1BDD658", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x1BDD65C", Offset = "0x1BDD65C", VA = "0x1BDD65C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x1BDD714", Offset = "0x1BDD714", VA = "0x1BDD714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x133C58C", Offset = "0x133C58C", VA = "0x133C58C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x133C680", Offset = "0x133C680", VA = "0x133C680")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x133C688", Offset = "0x133C688", VA = "0x133C688", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x133C6D4", Offset = "0x133C6D4", VA = "0x133C6D4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x133C720", Offset = "0x133C720", VA = "0x133C720")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E03B0", Offset = "0x8E03B0")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600068D")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600068E")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x133C798", Offset = "0x133C798", VA = "0x133C798")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x133C854", Offset = "0x133C854", VA = "0x133C854")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0410", Offset = "0x8E0410")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200015E")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000697")]
	[Address(RVA = "0x133C880", Offset = "0x133C880", VA = "0x133C880", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x133C884", Offset = "0x133C884", VA = "0x133C884", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x133C900", Offset = "0x133C900", VA = "0x133C900")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200015F")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBC88", Offset = "0x8DBC88")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBCC0", Offset = "0x8DBCC0")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBCF8", Offset = "0x8DBCF8")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBD30", Offset = "0x8DBD30")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x133C904", Offset = "0x133C904", VA = "0x133C904", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x133C930", Offset = "0x133C930", VA = "0x133C930", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x133CCE0", Offset = "0x133CCE0", VA = "0x133CCE0")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000160")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBD68", Offset = "0x8DBD68")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBDA0", Offset = "0x8DBDA0")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBDD8", Offset = "0x8DBDD8")]
	public float RotateStickThreshold;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x133CCE4", Offset = "0x133CCE4", VA = "0x133CCE4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x133CD28", Offset = "0x133CD28", VA = "0x133CD28", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x133D0D0", Offset = "0x133D0D0", VA = "0x133D0D0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000161")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x107023C", Offset = "0x107023C", VA = "0x107023C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x1070240", Offset = "0x1070240", VA = "0x1070240")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x1070248", Offset = "0x1070248", VA = "0x1070248")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x1070304", Offset = "0x1070304", VA = "0x1070304")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x107032C", Offset = "0x107032C", VA = "0x107032C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000162")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DBE10", Offset = "0x8DBE10")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700006A")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x1070344", Offset = "0x1070344", VA = "0x1070344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0470", Offset = "0x8E0470")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x107034C", Offset = "0x107034C", VA = "0x107034C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0480", Offset = "0x8E0480")]
		private set
		{
		}
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x1070354", Offset = "0x1070354", VA = "0x1070354", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x10703C0", Offset = "0x10703C0", VA = "0x10703C0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x10703F4", Offset = "0x10703F4", VA = "0x10703F4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E0490", Offset = "0x8E0490")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x10704D0", Offset = "0x10704D0", VA = "0x10704D0", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x10704DC", Offset = "0x10704DC", VA = "0x10704DC", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x10704E4", Offset = "0x10704E4", VA = "0x10704E4")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000163")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000164")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8150", Offset = "0x8D8150")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700006B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006B8")]
			[Address(RVA = "0x1BDDA2C", Offset = "0x1BDDA2C", VA = "0x1BDDA2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006BA")]
			[Address(RVA = "0x1BDDA74", Offset = "0x1BDDA74", VA = "0x1BDDA74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x1BDD75C", Offset = "0x1BDD75C", VA = "0x1BDD75C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x1BDD788", Offset = "0x1BDD788", VA = "0x1BDD788", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x1BDD78C", Offset = "0x1BDD78C", VA = "0x1BDD78C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x1BDDA34", Offset = "0x1BDDA34", VA = "0x1BDDA34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBE20", Offset = "0x8DBE20")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400092B")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x10704EC", Offset = "0x10704EC", VA = "0x10704EC")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x10705FC", Offset = "0x10705FC", VA = "0x10705FC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x1070628", Offset = "0x1070628", VA = "0x1070628", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1070650", Offset = "0x1070650", VA = "0x1070650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E04C8", Offset = "0x8E04C8")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x10706C8", Offset = "0x10706C8", VA = "0x10706C8", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60006B2")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x10706E4", Offset = "0x10706E4", VA = "0x10706E4", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x1070804", Offset = "0x1070804", VA = "0x1070804")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0528", Offset = "0x8E0528")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000165")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x1070830", Offset = "0x1070830", VA = "0x1070830")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x1070894", Offset = "0x1070894", VA = "0x1070894", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x107098C", Offset = "0x107098C", VA = "0x107098C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x1070A84", Offset = "0x1070A84", VA = "0x1070A84")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E0588", Offset = "0x8E0588")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x1070A88", Offset = "0x1070A88", VA = "0x1070A88")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000166")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBE58", Offset = "0x8DBE58")]
	public float LOSOffset;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBE90", Offset = "0x8DBE90")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1070A94", Offset = "0x1070A94", VA = "0x1070A94", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1070CA0", Offset = "0x1070CA0", VA = "0x1070CA0")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000167")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x1070CAC", Offset = "0x1070CAC", VA = "0x1070CAC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x1070DA4", Offset = "0x1070DA4", VA = "0x1070DA4")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000168")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1070DA8", Offset = "0x1070DA8", VA = "0x1070DA8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x1070E3C", Offset = "0x1070E3C", VA = "0x1070E3C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60006C6")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x1070ECC", Offset = "0x1070ECC", VA = "0x1070ECC")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000169")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8160", Offset = "0x8D8160")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700006D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006CE")]
			[Address(RVA = "0x1BDDBB4", Offset = "0x1BDDBB4", VA = "0x1BDDBB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006D0")]
			[Address(RVA = "0x1BDDBFC", Offset = "0x1BDDBFC", VA = "0x1BDDBFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x1BDDA7C", Offset = "0x1BDDA7C", VA = "0x1BDDA7C")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x1BDDAA8", Offset = "0x1BDDAA8", VA = "0x1BDDAA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x1BDDAAC", Offset = "0x1BDDAAC", VA = "0x1BDDAAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x1BDDBBC", Offset = "0x1BDDBBC", VA = "0x1BDDBBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBEC8", Offset = "0x8DBEC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBEC8", Offset = "0x8DBEC8")]
	public float TransitionDuration;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBF20", Offset = "0x8DBF20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBF20", Offset = "0x8DBF20")]
	public float TeleportDelay;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBF74", Offset = "0x8DBF74")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x1070ED4", Offset = "0x1070ED4", VA = "0x1070ED4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x1070F00", Offset = "0x1070F00", VA = "0x1070F00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E05C0", Offset = "0x8E05C0")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x1070F78", Offset = "0x1070F78", VA = "0x1070F78")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200016B")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x1071124", Offset = "0x1071124", VA = "0x1071124", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x1071140", Offset = "0x1071140", VA = "0x1071140")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200016C")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200016D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8170", Offset = "0x8D8170")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006D9")]
			[Address(RVA = "0x1BDDD70", Offset = "0x1BDDD70", VA = "0x1BDDD70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0x1BDDDB8", Offset = "0x1BDDDB8", VA = "0x1BDDDB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x1BDDC04", Offset = "0x1BDDC04", VA = "0x1BDDC04")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x1BDDC30", Offset = "0x1BDDC30", VA = "0x1BDDC30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x1BDDC34", Offset = "0x1BDDC34", VA = "0x1BDDC34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x1BDDD78", Offset = "0x1BDDD78", VA = "0x1BDDD78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBFAC", Offset = "0x8DBFAC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBFAC", Offset = "0x8DBFAC")]
	public float TransitionDuration;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x1071148", Offset = "0x1071148", VA = "0x1071148", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x1071174", Offset = "0x1071174", VA = "0x1071174")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0670", Offset = "0x8E0670")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x10711EC", Offset = "0x10711EC", VA = "0x10711EC")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200016E")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x200016F")]
	public enum PlabackState
	{
		[Token(Token = "0x400095B")]
		Idle = 1,
		[Token(Token = "0x400095C")]
		Preparing,
		[Token(Token = "0x400095D")]
		Buffering,
		[Token(Token = "0x400095E")]
		Ready,
		[Token(Token = "0x400095F")]
		Ended
	}

	[Token(Token = "0x2000170")]
	public enum StereoMode
	{
		[Token(Token = "0x4000961")]
		Unknown = -1,
		[Token(Token = "0x4000962")]
		Mono,
		[Token(Token = "0x4000963")]
		TopBottom,
		[Token(Token = "0x4000964")]
		LeftRight,
		[Token(Token = "0x4000965")]
		Mesh
	}

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000071")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x11060A0", Offset = "0x11060A0", VA = "0x11060A0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000072")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x11063E4", Offset = "0x11063E4", VA = "0x11063E4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000073")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x1102DB4", Offset = "0x1102DB4", VA = "0x1102DB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000074")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x1104560", Offset = "0x1104560", VA = "0x1104560")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000075")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x11066B4", Offset = "0x11066B4", VA = "0x11066B4")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000076")]
	public static long Duration
	{
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x1104784", Offset = "0x1104784", VA = "0x1104784")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000077")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x11033DC", Offset = "0x11033DC", VA = "0x11033DC")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000078")]
	public static int VideoWidth
	{
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x11031B4", Offset = "0x11031B4", VA = "0x11031B4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000079")]
	public static int VideoHeight
	{
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x11032C8", Offset = "0x11032C8", VA = "0x11032C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700007A")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x1104670", Offset = "0x1104670", VA = "0x1104670")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x1103C94", Offset = "0x1103C94", VA = "0x1103C94")]
		set
		{
		}
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x11067C8", Offset = "0x11067C8", VA = "0x11067C8")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x1104B54", Offset = "0x1104B54", VA = "0x1104B54")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x11038E0", Offset = "0x11038E0", VA = "0x11038E0")]
	public static void Play()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x1103A80", Offset = "0x1103A80", VA = "0x1103A80")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x110494C", Offset = "0x110494C", VA = "0x110494C")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x11069F4", Offset = "0x11069F4", VA = "0x11069F4")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x1104370", Offset = "0x1104370", VA = "0x1104370")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000171")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400002A")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x105F7A4", Offset = "0x105F7A4", VA = "0x105F7A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0720", Offset = "0x8E0720")]
		add
		{
		}
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x105F844", Offset = "0x105F844", VA = "0x105F844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0730", Offset = "0x8E0730")]
		remove
		{
		}
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x105F8E4", Offset = "0x105F8E4", VA = "0x105F8E4", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x105F8F8", Offset = "0x105F8F8", VA = "0x105F8F8")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000172")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000173")]
	public enum ButtonType
	{
		[Token(Token = "0x4000969")]
		Play,
		[Token(Token = "0x400096A")]
		Pause,
		[Token(Token = "0x400096B")]
		FastForward,
		[Token(Token = "0x400096C")]
		Rewind,
		[Token(Token = "0x400096D")]
		SkipForward,
		[Token(Token = "0x400096E")]
		SkipBack,
		[Token(Token = "0x400096F")]
		Stop
	}

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700007B")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x10FF8F0", Offset = "0x10FF8F0", VA = "0x10FF8F0")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x10FF8F8", Offset = "0x10FF8F8", VA = "0x10FF8F8")]
		set
		{
		}
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x10FF91C", Offset = "0x10FF91C", VA = "0x10FF91C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1100DB4", Offset = "0x1100DB4", VA = "0x1100DB4")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000174")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000175")]
	public enum VideoShape
	{
		[Token(Token = "0x4000984")]
		_360,
		[Token(Token = "0x4000985")]
		_180,
		[Token(Token = "0x4000986")]
		Quad
	}

	[Token(Token = "0x2000176")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000988")]
		Mono,
		[Token(Token = "0x4000989")]
		TopBottom,
		[Token(Token = "0x400098A")]
		LeftRight,
		[Token(Token = "0x400098B")]
		BottomTop
	}

	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8180", Offset = "0x8D8180")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600070D")]
			[Address(RVA = "0xD50164", Offset = "0xD50164", VA = "0xD50164", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600070F")]
			[Address(RVA = "0xD501AC", Offset = "0xD501AC", VA = "0xD501AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xD4FF70", Offset = "0xD4FF70", VA = "0xD4FF70")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xD4FF9C", Offset = "0xD4FF9C", VA = "0xD4FF9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xD4FFA0", Offset = "0xD4FFA0", VA = "0xD4FFA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xD5016C", Offset = "0xD5016C", VA = "0xD5016C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8190", Offset = "0x8D8190")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xD4FE78", Offset = "0xD4FE78", VA = "0xD4FE78")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xD4FE80", Offset = "0xD4FE80", VA = "0xD4FE80")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC034", Offset = "0x8DC034")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC044", Offset = "0x8DC044")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC054", Offset = "0x8DC054")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700007C")]
	public bool IsPlaying
	{
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x1102AD8", Offset = "0x1102AD8", VA = "0x1102AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0740", Offset = "0x8E0740")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x1102AE0", Offset = "0x1102AE0", VA = "0x1102AE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0750", Offset = "0x8E0750")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public long Duration
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x1102AEC", Offset = "0x1102AEC", VA = "0x1102AEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0760", Offset = "0x8E0760")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x1102AF4", Offset = "0x1102AF4", VA = "0x1102AF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0770", Offset = "0x8E0770")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x1102AFC", Offset = "0x1102AFC", VA = "0x1102AFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0780", Offset = "0x8E0780")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x1102B04", Offset = "0x1102B04", VA = "0x1102B04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0790", Offset = "0x8E0790")]
		private set
		{
		}
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x1102B0C", Offset = "0x1102B0C", VA = "0x1102B0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x1102E24", Offset = "0x1102E24", VA = "0x1102E24")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x1102E88", Offset = "0x1102E88", VA = "0x1102E88")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x11034F0", Offset = "0x11034F0", VA = "0x11034F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E07A0", Offset = "0x8E07A0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1103568", Offset = "0x1103568", VA = "0x1103568")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1103850", Offset = "0x1103850", VA = "0x1103850")]
	public void Play()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x11039F4", Offset = "0x11039F4", VA = "0x11039F4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x1103B94", Offset = "0x1103B94", VA = "0x1103B94")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x1103E08", Offset = "0x1103E08", VA = "0x1103E08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1104898", Offset = "0x1104898", VA = "0x1104898")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x1104AC8", Offset = "0x1104AC8", VA = "0x1104AC8")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x1104C68", Offset = "0x1104C68", VA = "0x1104C68")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1104D54", Offset = "0x1104D54", VA = "0x1104D54")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000179")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200017A")]
	private enum PlaybackState
	{
		[Token(Token = "0x40009A8")]
		Playing,
		[Token(Token = "0x40009A9")]
		Paused,
		[Token(Token = "0x40009AA")]
		Rewinding,
		[Token(Token = "0x40009AB")]
		FastForwarding
	}

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x1104D64", Offset = "0x1104D64", VA = "0x1104D64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x11050B8", Offset = "0x11050B8", VA = "0x11050B8")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x1105294", Offset = "0x1105294", VA = "0x1105294")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x11053C8", Offset = "0x11053C8", VA = "0x11053C8")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x11054D0", Offset = "0x11054D0", VA = "0x11054D0")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x110539C", Offset = "0x110539C", VA = "0x110539C")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1105518", Offset = "0x1105518", VA = "0x1105518")]
	private void Update()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x1104FA4", Offset = "0x1104FA4", VA = "0x1104FA4")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x110587C", Offset = "0x110587C", VA = "0x110587C")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200017B")]
public static class VectorUtil
{
	[Token(Token = "0x600071B")]
	[Address(RVA = "0x1078E78", Offset = "0x1078E78", VA = "0x1078E78")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200017C")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x40009AC")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40009AD")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x1053890", Offset = "0x1053890", VA = "0x1053890")]
	private void Start()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x1053C8C", Offset = "0x1053C8C", VA = "0x1053C8C")]
	private void Update()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x1053F18", Offset = "0x1053F18", VA = "0x1053F18")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x1054080", Offset = "0x1054080", VA = "0x1054080")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x10541EC", Offset = "0x10541EC", VA = "0x10541EC")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x105437C", Offset = "0x105437C", VA = "0x105437C")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x200017D")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40009B6")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xF9A4A4", Offset = "0xF9A4A4", VA = "0xF9A4A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xF9A4F8", Offset = "0xF9A4F8", VA = "0xF9A4F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xF9A4FC", Offset = "0xF9A4FC", VA = "0xF9A4FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xF9A500", Offset = "0xF9A500", VA = "0xF9A500")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xF9A774", Offset = "0xF9A774", VA = "0xF9A774")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xF9A9A4", Offset = "0xF9A9A4", VA = "0xF9A9A4")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x200017E")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xF9C920", Offset = "0xF9C920", VA = "0xF9C920")]
	private void Start()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xF9CE34", Offset = "0xF9CE34", VA = "0xF9CE34")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xF9CEF4", Offset = "0xF9CEF4", VA = "0xF9CEF4")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xF9D174", Offset = "0xF9D174", VA = "0xF9D174")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xF9D254", Offset = "0xF9D254", VA = "0xF9D254")]
	private void Update()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xF9D338", Offset = "0xF9D338", VA = "0xF9D338")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xF9D3AC", Offset = "0xF9D3AC", VA = "0xF9D3AC")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xF9D3B4", Offset = "0xF9D3B4", VA = "0xF9D3B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0860", Offset = "0x8E0860")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xF9D418", Offset = "0xF9D418", VA = "0xF9D418")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0870", Offset = "0x8E0870")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xF9D47C", Offset = "0xF9D47C", VA = "0xF9D47C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0880", Offset = "0x8E0880")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xF9D4E0", Offset = "0xF9D4E0", VA = "0xF9D4E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0890", Offset = "0x8E0890")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200017F")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D81B0", Offset = "0x8D81B0")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600073A")]
			[Address(RVA = "0xD4B120", Offset = "0xD4B120", VA = "0xD4B120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600073C")]
			[Address(RVA = "0xD4B168", Offset = "0xD4B168", VA = "0xD4B168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xD4AFA4", Offset = "0xD4AFA4", VA = "0xD4AFA4")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xD4AFD0", Offset = "0xD4AFD0", VA = "0xD4AFD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xD4AFD4", Offset = "0xD4AFD4", VA = "0xD4AFD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xD4B128", Offset = "0xD4B128", VA = "0xD4B128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xFF63E0", Offset = "0xFF63E0", VA = "0xFF63E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xFF64FC", Offset = "0xFF64FC", VA = "0xFF64FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xFF6484", Offset = "0xFF6484", VA = "0xFF6484")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E08A0", Offset = "0x8E08A0")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xFF66A8", Offset = "0xFF66A8", VA = "0xFF66A8")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000181")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC084", Offset = "0x8DC084")]
	public int SubdivisionsU;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC0A0", Offset = "0x8DC0A0")]
	public int SubdivisionsV;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x106A44C", Offset = "0x106A44C", VA = "0x106A44C")]
	private void Update()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x106AE94", Offset = "0x106AE94", VA = "0x106AE94")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000182")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000083")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x10021F4", Offset = "0x10021F4", VA = "0x10021F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x1002248", Offset = "0x1002248", VA = "0x1002248")]
	public void Start()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x1002650", Offset = "0x1002650", VA = "0x1002650")]
	public void Update()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x100273C", Offset = "0x100273C", VA = "0x100273C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E0950", Offset = "0x8E0950")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000743")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000744")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000745")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000746")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000747")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000748")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000749")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600074A")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x10027A0", Offset = "0x10027A0", VA = "0x10027A0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x10027DC", Offset = "0x10027DC", VA = "0x10027DC")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x100284C", Offset = "0x100284C", VA = "0x100284C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x10029BC", Offset = "0x10029BC", VA = "0x10029BC")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x1002A98", Offset = "0x1002A98", VA = "0x1002A98")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x1002548", Offset = "0x1002548", VA = "0x1002548")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x1002B60", Offset = "0x1002B60", VA = "0x1002B60")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x1002BC8", Offset = "0x1002BC8", VA = "0x1002BC8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x1002CC0", Offset = "0x1002CC0", VA = "0x1002CC0")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000183")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D81D0", Offset = "0x8D81D0")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000184")]
	public enum DrawMode
	{
		[Token(Token = "0x40009E1")]
		Opaque,
		[Token(Token = "0x40009E2")]
		OpaqueWithClip,
		[Token(Token = "0x40009E3")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40009E4")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000084")]
	public bool overlayEnabled
	{
		[Token(Token = "0x600075A")]
		[Address(RVA = "0x18DF314", Offset = "0x18DF314", VA = "0x18DF314")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600075B")]
		[Address(RVA = "0x18DF3A4", Offset = "0x18DF3A4", VA = "0x18DF3A4")]
		set
		{
		}
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x18DDD90", Offset = "0x18DDD90", VA = "0x18DDD90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x18DE980", Offset = "0x18DE980", VA = "0x18DE980")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x18DEA00", Offset = "0x18DEA00", VA = "0x18DEA00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x18DEAF0", Offset = "0x18DEAF0", VA = "0x18DEAF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x18DEBE0", Offset = "0x18DEBE0", VA = "0x18DEBE0", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x18DEDEC", Offset = "0x18DEDEC", VA = "0x18DEDEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x18DF470", Offset = "0x18DF470", VA = "0x18DF470")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000185")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000186")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8230", Offset = "0x8D8230")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xD5954C", Offset = "0xD5954C", VA = "0xD5954C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xD59554", Offset = "0xD59554", VA = "0xD59554")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1334860", Offset = "0x1334860", VA = "0x1334860")]
	private void Start()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x1334A74", Offset = "0x1334A74", VA = "0x1334A74")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x1334B84", Offset = "0x1334B84", VA = "0x1334B84")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000187")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8240", Offset = "0x8D8240")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000188")]
	public enum RotationAxes
	{
		[Token(Token = "0x40009F3")]
		MouseXAndY,
		[Token(Token = "0x40009F4")]
		MouseX,
		[Token(Token = "0x40009F5")]
		MouseY
	}

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x110248C", Offset = "0x110248C", VA = "0x110248C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x1102664", Offset = "0x1102664", VA = "0x1102664")]
	private void Start()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x110272C", Offset = "0x110272C", VA = "0x110272C")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000189")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200018A")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x40009FB")]
		Uninitialized = -1,
		[Token(Token = "0x40009FC")]
		NotEnabled,
		[Token(Token = "0x40009FD")]
		Success,
		[Token(Token = "0x40009FE")]
		StreamError,
		[Token(Token = "0x40009FF")]
		ProcessError,
		[Token(Token = "0x4000A00")]
		MaxStatValue
	}

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x110A938", Offset = "0x110A938", VA = "0x110A938")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x110ABCC", Offset = "0x110ABCC", VA = "0x110ABCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x110AE08", Offset = "0x110AE08", VA = "0x110AE08")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x200018B")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200018C")]
	private enum Parameters
	{
		[Token(Token = "0x4000A0C")]
		P_GAIN,
		[Token(Token = "0x4000A0D")]
		P_USEINVSQR,
		[Token(Token = "0x4000A0E")]
		P_NEAR,
		[Token(Token = "0x4000A0F")]
		P_FAR,
		[Token(Token = "0x4000A10")]
		P_RADIUS,
		[Token(Token = "0x4000A11")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000A12")]
		P_AMBISTAT,
		[Token(Token = "0x4000A13")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000A14")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000A15")]
		P_SENDLEVEL,
		[Token(Token = "0x4000A16")]
		P_NUM
	}

	[Token(Token = "0x4000A01")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000085")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600076C")]
		[Address(RVA = "0x110B04C", Offset = "0x110B04C", VA = "0x110B04C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600076D")]
		[Address(RVA = "0x110B054", Offset = "0x110B054", VA = "0x110B054")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public float Gain
	{
		[Token(Token = "0x600076E")]
		[Address(RVA = "0x110B060", Offset = "0x110B060", VA = "0x110B060")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600076F")]
		[Address(RVA = "0x110B068", Offset = "0x110B068", VA = "0x110B068")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000770")]
		[Address(RVA = "0x110B098", Offset = "0x110B098", VA = "0x110B098")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000771")]
		[Address(RVA = "0x110B0A0", Offset = "0x110B0A0", VA = "0x110B0A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public float Near
	{
		[Token(Token = "0x6000772")]
		[Address(RVA = "0x110B0AC", Offset = "0x110B0AC", VA = "0x110B0AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000773")]
		[Address(RVA = "0x110B0B4", Offset = "0x110B0B4", VA = "0x110B0B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public float Far
	{
		[Token(Token = "0x6000774")]
		[Address(RVA = "0x110B0E8", Offset = "0x110B0E8", VA = "0x110B0E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000775")]
		[Address(RVA = "0x110B0F0", Offset = "0x110B0F0", VA = "0x110B0F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000776")]
		[Address(RVA = "0x110B124", Offset = "0x110B124", VA = "0x110B124")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000777")]
		[Address(RVA = "0x110B12C", Offset = "0x110B12C", VA = "0x110B12C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public float ReverbSend
	{
		[Token(Token = "0x6000778")]
		[Address(RVA = "0x110B160", Offset = "0x110B160", VA = "0x110B160")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000779")]
		[Address(RVA = "0x110B168", Offset = "0x110B168", VA = "0x110B168")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public bool EnableRfl
	{
		[Token(Token = "0x600077A")]
		[Address(RVA = "0x110B19C", Offset = "0x110B19C", VA = "0x110B19C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600077B")]
		[Address(RVA = "0x110B1A4", Offset = "0x110B1A4", VA = "0x110B1A4")]
		set
		{
		}
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x110AE78", Offset = "0x110AE78", VA = "0x110AE78")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8E0988", Offset = "0x8E0988")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600076B")]
	[Address(RVA = "0x110AF6C", Offset = "0x110AF6C", VA = "0x110AF6C")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x110B1B0", Offset = "0x110B1B0", VA = "0x110B1B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x110B320", Offset = "0x110B320", VA = "0x110B320")]
	private void Start()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x110B324", Offset = "0x110B324", VA = "0x110B324")]
	private void Update()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x110B218", Offset = "0x110B218", VA = "0x110B218")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x110B3E8", Offset = "0x110B3E8", VA = "0x110B3E8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x110B7E0", Offset = "0x110B7E0", VA = "0x110B7E0")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000782")]
	[Address(RVA = "0x110AEEC", Offset = "0x110AEEC", VA = "0x110AEEC")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x110B8CC", Offset = "0x110B8CC", VA = "0x110B8CC")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x200018D")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000A18")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000A1A")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x110B8EC", Offset = "0x110B8EC", VA = "0x110B8EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x110B8F8", Offset = "0x110B8F8", VA = "0x110B8F8")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000787")]
	[Address(RVA = "0x110B9B0", Offset = "0x110B9B0", VA = "0x110B9B0")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000788")]
	[Address(RVA = "0x110B930", Offset = "0x110B930", VA = "0x110B930")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x110BA30", Offset = "0x110BA30", VA = "0x110BA30")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x200018E")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200018F")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000190")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000A21")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700008D")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x600078A")]
		[Address(RVA = "0x110BD48", Offset = "0x110BD48", VA = "0x110BD48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008E")]
	public string filePath
	{
		[Token(Token = "0x600078B")]
		[Address(RVA = "0x110BDDC", Offset = "0x110BDDC", VA = "0x110BDDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x110BE5C", Offset = "0x110BE5C", VA = "0x110BE5C")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x110BFC4", Offset = "0x110BFC4", VA = "0x110BFC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x110BFC8", Offset = "0x110BFC8", VA = "0x110BFC8")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x110C5A0", Offset = "0x110C5A0", VA = "0x110C5A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x110C94C", Offset = "0x110C94C", VA = "0x110C94C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x110CAC8", Offset = "0x110CAC8", VA = "0x110CAC8")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x110D2BC", Offset = "0x110D2BC", VA = "0x110D2BC")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x110D2F8", Offset = "0x110D2F8", VA = "0x110D2F8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x110EB2C", Offset = "0x110EB2C", VA = "0x110EB2C")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x110E870", Offset = "0x110E870", VA = "0x110E870")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x110C3B8", Offset = "0x110C3B8", VA = "0x110C3B8")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x110C1C0", Offset = "0x110C1C0", VA = "0x110C1C0")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x110F1B4", Offset = "0x110F1B4", VA = "0x110F1B4")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x110F64C", Offset = "0x110F64C", VA = "0x110F64C")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000191")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000192")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000A2A")]
		Int8,
		[Token(Token = "0x4000A2B")]
		UInt8,
		[Token(Token = "0x4000A2C")]
		Int16,
		[Token(Token = "0x4000A2D")]
		UInt16,
		[Token(Token = "0x4000A2E")]
		Int32,
		[Token(Token = "0x4000A2F")]
		UInt32,
		[Token(Token = "0x4000A30")]
		Int64,
		[Token(Token = "0x4000A31")]
		UInt64,
		[Token(Token = "0x4000A32")]
		Float16,
		[Token(Token = "0x4000A33")]
		Float32,
		[Token(Token = "0x4000A34")]
		Float64
	}

	[Token(Token = "0x2000193")]
	public class ClientType
	{
		[Token(Token = "0x4000A35")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000A36")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000A37")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000A38")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000A39")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000A3A")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000A3B")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000A3C")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000A3D")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000A3E")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000A3F")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000A40")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000A41")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000A42")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000A43")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x4000A44")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2021_1 = 15u;

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xD508F8", Offset = "0xD508F8", VA = "0xD508F8")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000194")]
	public interface PropagationInterface
	{
		[Token(Token = "0x600079F")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60007A0")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60007A1")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60007A2")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60007A3")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60007A4")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60007A5")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60007A6")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60007A7")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60007A8")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60007A9")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60007AA")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x60007AB")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60007AC")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60007AD")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000195")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000A45")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000090")]
		private IntPtr context
		{
			[Token(Token = "0x60007AE")]
			[Address(RVA = "0xD5163C", Offset = "0xD5163C", VA = "0xD5163C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xD5169C", Offset = "0xD5169C", VA = "0xD5169C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xD5172C", Offset = "0xD5172C", VA = "0xD5172C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xD517BC", Offset = "0xD517BC", VA = "0xD517BC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xD517E0", Offset = "0xD517E0", VA = "0xD517E0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xD51870", Offset = "0xD51870", VA = "0xD51870", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xD51894", Offset = "0xD51894", VA = "0xD51894")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xD51920", Offset = "0xD51920", VA = "0xD51920", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xD51944", Offset = "0xD51944", VA = "0xD51944")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xD519C4", Offset = "0xD519C4", VA = "0xD519C4", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xD519CC", Offset = "0xD519CC", VA = "0xD519CC")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xD51AEC", Offset = "0xD51AEC", VA = "0xD51AEC", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xD51BE0", Offset = "0xD51BE0", VA = "0xD51BE0")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xD51C78", Offset = "0xD51C78", VA = "0xD51C78", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xD51C84", Offset = "0xD51C84", VA = "0xD51C84")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xD51DB4", Offset = "0xD51DB4", VA = "0xD51DB4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xD51DC0", Offset = "0xD51DC0", VA = "0xD51DC0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xD51E6C", Offset = "0xD51E6C", VA = "0xD51E6C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xD51E78", Offset = "0xD51E78", VA = "0xD51E78")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xD51F24", Offset = "0xD51F24", VA = "0xD51F24", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xD51F30", Offset = "0xD51F30", VA = "0xD51F30")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xD51FDC", Offset = "0xD51FDC", VA = "0xD51FDC", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xD51FE8", Offset = "0xD51FE8", VA = "0xD51FE8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xD52074", Offset = "0xD52074", VA = "0xD52074", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xD52098", Offset = "0xD52098", VA = "0xD52098")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xD52118", Offset = "0xD52118", VA = "0xD52118", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xD52120", Offset = "0xD52120", VA = "0xD52120")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xD521C8", Offset = "0xD521C8", VA = "0xD521C8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xD521D4", Offset = "0xD521D4", VA = "0xD521D4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xD5227C", Offset = "0xD5227C", VA = "0xD5227C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xD5228C", Offset = "0xD5228C", VA = "0xD5228C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xD5231C", Offset = "0xD5231C", VA = "0xD5231C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xD52328", Offset = "0xD52328", VA = "0xD52328")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000196")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000A47")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000091")]
		private IntPtr context
		{
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0xD52370", Offset = "0xD52370", VA = "0xD52370")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xD523D0", Offset = "0xD523D0", VA = "0xD523D0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xD52460", Offset = "0xD52460", VA = "0xD52460")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xD524F0", Offset = "0xD524F0", VA = "0xD524F0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xD52514", Offset = "0xD52514", VA = "0xD52514")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xD525A4", Offset = "0xD525A4", VA = "0xD525A4", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xD525C8", Offset = "0xD525C8", VA = "0xD525C8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xD52658", Offset = "0xD52658", VA = "0xD52658", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xD5267C", Offset = "0xD5267C", VA = "0xD5267C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xD526FC", Offset = "0xD526FC", VA = "0xD526FC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xD52704", Offset = "0xD52704", VA = "0xD52704")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xD52824", Offset = "0xD52824", VA = "0xD52824", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xD52918", Offset = "0xD52918", VA = "0xD52918")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xD529B0", Offset = "0xD529B0", VA = "0xD529B0", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xD529BC", Offset = "0xD529BC", VA = "0xD529BC")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xD52AEC", Offset = "0xD52AEC", VA = "0xD52AEC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xD52AF8", Offset = "0xD52AF8", VA = "0xD52AF8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xD52BA4", Offset = "0xD52BA4", VA = "0xD52BA4", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xD52BB0", Offset = "0xD52BB0", VA = "0xD52BB0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xD52C5C", Offset = "0xD52C5C", VA = "0xD52C5C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xD52C68", Offset = "0xD52C68", VA = "0xD52C68")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xD52D14", Offset = "0xD52D14", VA = "0xD52D14", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xD52D20", Offset = "0xD52D20", VA = "0xD52D20")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xD52DB0", Offset = "0xD52DB0", VA = "0xD52DB0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xD52DD4", Offset = "0xD52DD4", VA = "0xD52DD4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xD52E54", Offset = "0xD52E54", VA = "0xD52E54", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xD52E5C", Offset = "0xD52E5C", VA = "0xD52E5C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xD52F04", Offset = "0xD52F04", VA = "0xD52F04", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xD52F10", Offset = "0xD52F10", VA = "0xD52F10")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xD52FB8", Offset = "0xD52FB8", VA = "0xD52FB8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xD52FC8", Offset = "0xD52FC8", VA = "0xD52FC8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xD53058", Offset = "0xD53058", VA = "0xD53058", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xD53064", Offset = "0xD53064", VA = "0xD53064")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000197")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000A49")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000092")]
		private IntPtr context
		{
			[Token(Token = "0x60007F0")]
			[Address(RVA = "0xD50900", Offset = "0xD50900", VA = "0xD50900")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xD50960", Offset = "0xD50960", VA = "0xD50960")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xD509F0", Offset = "0xD509F0", VA = "0xD509F0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xD50A80", Offset = "0xD50A80", VA = "0xD50A80", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xD50AA4", Offset = "0xD50AA4", VA = "0xD50AA4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xD50B34", Offset = "0xD50B34", VA = "0xD50B34", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xD50B58", Offset = "0xD50B58", VA = "0xD50B58")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xD50BE8", Offset = "0xD50BE8", VA = "0xD50BE8", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xD50C0C", Offset = "0xD50C0C", VA = "0xD50C0C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xD50C8C", Offset = "0xD50C8C", VA = "0xD50C8C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xD50C94", Offset = "0xD50C94", VA = "0xD50C94")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xD50DB4", Offset = "0xD50DB4", VA = "0xD50DB4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xD50EA8", Offset = "0xD50EA8", VA = "0xD50EA8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xD50F40", Offset = "0xD50F40", VA = "0xD50F40", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xD50F4C", Offset = "0xD50F4C", VA = "0xD50F4C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xD5107C", Offset = "0xD5107C", VA = "0xD5107C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000800")]
		[Address(RVA = "0xD51088", Offset = "0xD51088", VA = "0xD51088")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xD51134", Offset = "0xD51134", VA = "0xD51134", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000802")]
		[Address(RVA = "0xD51140", Offset = "0xD51140", VA = "0xD51140")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xD511EC", Offset = "0xD511EC", VA = "0xD511EC", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000804")]
		[Address(RVA = "0xD511F8", Offset = "0xD511F8", VA = "0xD511F8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xD512A4", Offset = "0xD512A4", VA = "0xD512A4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000806")]
		[Address(RVA = "0xD512B0", Offset = "0xD512B0", VA = "0xD512B0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xD51340", Offset = "0xD51340", VA = "0xD51340", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000808")]
		[Address(RVA = "0xD51364", Offset = "0xD51364", VA = "0xD51364")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xD513E4", Offset = "0xD513E4", VA = "0xD513E4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600080A")]
		[Address(RVA = "0xD513EC", Offset = "0xD513EC", VA = "0xD513EC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xD51494", Offset = "0xD51494", VA = "0xD51494", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600080C")]
		[Address(RVA = "0xD514A0", Offset = "0xD514A0", VA = "0xD514A0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xD51548", Offset = "0xD51548", VA = "0xD51548", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600080E")]
		[Address(RVA = "0xD51558", Offset = "0xD51558", VA = "0xD51558")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xD515E8", Offset = "0xD515E8", VA = "0xD515E8", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xD515F4", Offset = "0xD515F4", VA = "0xD515F4")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700008F")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x600079B")]
		[Address(RVA = "0x110BA40", Offset = "0x110BA40", VA = "0x110BA40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x110BAB8", Offset = "0x110BAB8", VA = "0x110BAB8")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x110BD40", Offset = "0x110BD40", VA = "0x110BD40")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000198")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000199")]
	public enum Preset
	{
		[Token(Token = "0x4000A51")]
		Custom,
		[Token(Token = "0x4000A52")]
		AcousticTile,
		[Token(Token = "0x4000A53")]
		Brick,
		[Token(Token = "0x4000A54")]
		BrickPainted,
		[Token(Token = "0x4000A55")]
		Carpet,
		[Token(Token = "0x4000A56")]
		CarpetHeavy,
		[Token(Token = "0x4000A57")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000A58")]
		CeramicTile,
		[Token(Token = "0x4000A59")]
		Concrete,
		[Token(Token = "0x4000A5A")]
		ConcreteRough,
		[Token(Token = "0x4000A5B")]
		ConcreteBlock,
		[Token(Token = "0x4000A5C")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000A5D")]
		Curtain,
		[Token(Token = "0x4000A5E")]
		Foliage,
		[Token(Token = "0x4000A5F")]
		Glass,
		[Token(Token = "0x4000A60")]
		GlassHeavy,
		[Token(Token = "0x4000A61")]
		Grass,
		[Token(Token = "0x4000A62")]
		Gravel,
		[Token(Token = "0x4000A63")]
		GypsumBoard,
		[Token(Token = "0x4000A64")]
		PlasterOnBrick,
		[Token(Token = "0x4000A65")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000A66")]
		Soil,
		[Token(Token = "0x4000A67")]
		SoundProof,
		[Token(Token = "0x4000A68")]
		Snow,
		[Token(Token = "0x4000A69")]
		Steel,
		[Token(Token = "0x4000A6A")]
		Water,
		[Token(Token = "0x4000A6B")]
		WoodThin,
		[Token(Token = "0x4000A6C")]
		WoodThick,
		[Token(Token = "0x4000A6D")]
		WoodFloor,
		[Token(Token = "0x4000A6E")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200019A")]
	public sealed class Point
	{
		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xD530AC", Offset = "0xD530AC", VA = "0xD530AC")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xD530E4", Offset = "0xD530E4", VA = "0xD530E4")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xD53150", Offset = "0xD53150", VA = "0xD53150")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D8278", Offset = "0x8D8278")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200019C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D82B0", Offset = "0x8D82B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x600083D")]
			[Address(RVA = "0x1BED740", Offset = "0x1BED740", VA = "0x1BED740")]
			public <>c()
			{
			}

			[Token(Token = "0x600083E")]
			[Address(RVA = "0x1BED748", Offset = "0x1BED748", VA = "0x1BED748")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x600083F")]
			[Address(RVA = "0x1BED760", Offset = "0x1BED760", VA = "0x1BED760")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000094")]
		public float Item
		{
			[Token(Token = "0x600083A")]
			[Address(RVA = "0xD53168", Offset = "0xD53168", VA = "0xD53168")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xD535CC", Offset = "0xD535CC", VA = "0xD535CC")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC1AC", Offset = "0x8DC1AC")]
	public Spectrum absorption;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC1E4", Offset = "0x8DC1E4")]
	public Spectrum transmission;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC21C", Offset = "0x8DC21C")]
	public Spectrum scattering;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000093")]
	public Preset preset
	{
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x110F740", Offset = "0x110F740", VA = "0x110F740")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000812")]
		[Address(RVA = "0x110F748", Offset = "0x110F748", VA = "0x110F748")]
		set
		{
		}
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x110F770", Offset = "0x110F770", VA = "0x110F770")]
	private void Start()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x110F028", Offset = "0x110F028", VA = "0x110F028")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x110FD58", Offset = "0x110FD58", VA = "0x110FD58")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x110FD5C", Offset = "0x110FD5C", VA = "0x110FD5C")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x110F774", Offset = "0x110F774", VA = "0x110F774")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x110E998", Offset = "0x110E998", VA = "0x110E998")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x110FE48", Offset = "0x110FE48", VA = "0x110FE48")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1110328", Offset = "0x1110328", VA = "0x1110328")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x111080C", Offset = "0x111080C", VA = "0x111080C")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x1110CEC", Offset = "0x1110CEC", VA = "0x1110CEC")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x11111E0", Offset = "0x11111E0", VA = "0x11111E0")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x11116C0", Offset = "0x11116C0", VA = "0x11116C0")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x1111BA0", Offset = "0x1111BA0", VA = "0x1111BA0")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x1112088", Offset = "0x1112088", VA = "0x1112088")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x1112570", Offset = "0x1112570", VA = "0x1112570")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x1112A5C", Offset = "0x1112A5C", VA = "0x1112A5C")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1112F44", Offset = "0x1112F44", VA = "0x1112F44")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1113434", Offset = "0x1113434", VA = "0x1113434")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x1113914", Offset = "0x1113914", VA = "0x1113914")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x1113E08", Offset = "0x1113E08", VA = "0x1113E08")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x11142D8", Offset = "0x11142D8", VA = "0x11142D8")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x11147B4", Offset = "0x11147B4", VA = "0x11147B4")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x1114B7C", Offset = "0x1114B7C", VA = "0x1114B7C")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x1114F3C", Offset = "0x1114F3C", VA = "0x1114F3C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x111542C", Offset = "0x111542C", VA = "0x111542C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x1115918", Offset = "0x1115918", VA = "0x1115918")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1115DFC", Offset = "0x1115DFC", VA = "0x1115DFC")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x11161C8", Offset = "0x11161C8", VA = "0x11161C8")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x111636C", Offset = "0x111636C", VA = "0x111636C")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1116728", Offset = "0x1116728", VA = "0x1116728")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x1116BF8", Offset = "0x1116BF8", VA = "0x1116BF8")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x11170DC", Offset = "0x11170DC", VA = "0x11170DC")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x11175B4", Offset = "0x11175B4", VA = "0x11175B4")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x1117A94", Offset = "0x1117A94", VA = "0x1117A94")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x1117F7C", Offset = "0x1117F7C", VA = "0x1117F7C")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x1118460", Offset = "0x1118460", VA = "0x1118460")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x200019D")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x18DD2EC", Offset = "0x18DD2EC", VA = "0x18DD2EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x18DD3BC", Offset = "0x18DD3BC", VA = "0x18DD3BC")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x200019E")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000095")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000842")]
		[Address(RVA = "0x18DDA14", Offset = "0x18DDA14", VA = "0x18DDA14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x18DDB6C", Offset = "0x18DDB6C", VA = "0x18DDB6C")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x200019F")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000A79")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000844")]
	[Address(RVA = "0x18DDB7C", Offset = "0x18DDB7C", VA = "0x18DDB7C")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x18DDC14", Offset = "0x18DDC14", VA = "0x18DDC14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x18DDD34", Offset = "0x18DDD34", VA = "0x18DDD34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x18DDD38", Offset = "0x18DDD38", VA = "0x18DDD38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x18DDD3C", Offset = "0x18DDD3C", VA = "0x18DDD3C")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20001A0")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20001A1")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000A88")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000A8E")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x18E197C", Offset = "0x18E197C", VA = "0x18E197C")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x18E180C", Offset = "0x18E180C", VA = "0x18E180C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8E099C", Offset = "0x8E099C")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x18E1984", Offset = "0x18E1984", VA = "0x18E1984")]
	private void Start()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x18E1AC8", Offset = "0x18E1AC8", VA = "0x18E1AC8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x18E1BC4", Offset = "0x18E1BC4", VA = "0x18E1BC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x18E24E0", Offset = "0x18E24E0", VA = "0x18E24E0")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600084F")]
	[Address(RVA = "0x18E1A34", Offset = "0x18E1A34", VA = "0x18E1A34")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000850")]
	[Address(RVA = "0x18E1B34", Offset = "0x18E1B34", VA = "0x18E1B34")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000851")]
	[Address(RVA = "0x18E2248", Offset = "0x18E2248", VA = "0x18E2248")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000852")]
	[Address(RVA = "0x18E22C8", Offset = "0x18E22C8", VA = "0x18E22C8")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000853")]
	[Address(RVA = "0x18E2350", Offset = "0x18E2350", VA = "0x18E2350")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000854")]
	[Address(RVA = "0x18E23D8", Offset = "0x18E23D8", VA = "0x18E23D8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000855")]
	[Address(RVA = "0x18E2458", Offset = "0x18E2458", VA = "0x18E2458")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000856")]
	[Address(RVA = "0x18E31E0", Offset = "0x18E31E0", VA = "0x18E31E0")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000857")]
	[Address(RVA = "0x18E3288", Offset = "0x18E3288", VA = "0x18E3288")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x18E3330", Offset = "0x18E3330", VA = "0x18E3330")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20001A2")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20001A3")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x18DD3CC", Offset = "0x18DD3CC", VA = "0x18DD3CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x18DD3D0", Offset = "0x18DD3D0", VA = "0x18DD3D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x18DD3D4", Offset = "0x18DD3D4", VA = "0x18DD3D4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x18DD54C", Offset = "0x18DD54C", VA = "0x18DD54C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x18DD420", Offset = "0x18DD420", VA = "0x18DD420")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x18DD4B8", Offset = "0x18DD4B8", VA = "0x18DD4B8")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x18DD598", Offset = "0x18DD598", VA = "0x18DD598")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x18DD638", Offset = "0x18DD638", VA = "0x18DD638")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x18DD7D4", Offset = "0x18DD7D4", VA = "0x18DD7D4")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x18DD970", Offset = "0x18DD970", VA = "0x18DD970")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20001A4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D82C0", Offset = "0x8D82C0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D82C0", Offset = "0x8D82C0")]
public class ChangeColor : MonoBehaviour
{
	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView photonView;

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x10687D8", Offset = "0x10687D8", VA = "0x10687D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x1068958", Offset = "0x1068958", VA = "0x1068958")]
	[PunRPC]
	private void ChangeColour(Vector3 randomColor)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x1068A2C", Offset = "0x1068A2C", VA = "0x1068A2C")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x20001A5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8354", Offset = "0x8D8354")]
public class ChangeName : MonoBehaviour
{
	[Token(Token = "0x600086C")]
	[Address(RVA = "0x1068A34", Offset = "0x1068A34", VA = "0x1068A34")]
	private void Start()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x1068AFC", Offset = "0x1068AFC", VA = "0x1068AFC")]
	public ChangeName()
	{
	}
}
[Token(Token = "0x20001A6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D83B4", Offset = "0x8D83B4")]
public class PointersController : MonoBehaviour
{
	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject pointerDown;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject pointerUp;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xE48D2C", Offset = "0xE48D2C", VA = "0xE48D2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xE48E54", Offset = "0xE48E54", VA = "0xE48E54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xE48DA0", Offset = "0xE48DA0", VA = "0xE48DA0")]
	private void SetActiveSafe(GameObject go, bool active)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xE48EB0", Offset = "0xE48EB0", VA = "0xE48EB0")]
	public PointersController()
	{
	}
}
[Token(Token = "0x20001A7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8414", Offset = "0x8D8414")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8414", Offset = "0x8D8414")]
public class ProximityVoiceTrigger : VoiceComponent
{
	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> groupsToAdd;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> groupsToRemove;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private byte[] subscribedGroups;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView photonView;

	[Token(Token = "0x17000096")]
	public byte TargetInterestGroup
	{
		[Token(Token = "0x6000872")]
		[Address(RVA = "0xE4BA60", Offset = "0xE4BA60", VA = "0xE4BA60")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xE4BAF0", Offset = "0xE4BAF0", VA = "0xE4BAF0", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xE4BD50", Offset = "0xE4BD50", VA = "0xE4BD50")]
	private void ToggleTransmission()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xE4C06C", Offset = "0xE4C06C", VA = "0xE4C06C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xE4C2A0", Offset = "0xE4C2A0", VA = "0xE4C2A0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xE4C514", Offset = "0xE4C514", VA = "0xE4C514")]
	private void Update()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xE4BBB8", Offset = "0xE4BBB8", VA = "0xE4BBB8")]
	private bool IsLocalCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xE4CBE4", Offset = "0xE4CBE4", VA = "0xE4CBE4")]
	public ProximityVoiceTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A8")]
public class MouseLookHelper
{
	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x110274C", Offset = "0x110274C", VA = "0x110274C")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x11027A0", Offset = "0x11027A0", VA = "0x11027A0")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x1102A44", Offset = "0x1102A44", VA = "0x1102A44")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x1102AAC", Offset = "0x1102AAC", VA = "0x1102AAC")]
	public MouseLookHelper()
	{
	}
}
[Token(Token = "0x20001A9")]
public class SoundsForJoinAndLeave : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip JoinClip;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip LeaveClip;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource source;

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x1333F60", Offset = "0x1333F60", VA = "0x1333F60", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x1334078", Offset = "0x1334078", VA = "0x1334078", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x1334190", Offset = "0x1334190", VA = "0x1334190")]
	public SoundsForJoinAndLeave()
	{
	}
}
[Token(Token = "0x20001AA")]
public class ProtoButtonPress : MonoBehaviour
{
	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material testMatOne;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material testMatTwo;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer[] buildingMeshRends;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float minHeight;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float maxHeight;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material currentMat;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xE49464", Offset = "0xE49464", VA = "0xE49464")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xE4975C", Offset = "0xE4975C", VA = "0xE4975C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xE49778", Offset = "0xE49778", VA = "0xE49778")]
	private void MaterialButtonPress(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xE496D4", Offset = "0xE496D4", VA = "0xE496D4")]
	private void ChangeMaterialsOnBuildings(Material mat)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xE49808", Offset = "0xE49808", VA = "0xE49808")]
	private void HeightButtonPressed(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xE498F4", Offset = "0xE498F4", VA = "0xE498F4")]
	public ProtoButtonPress()
	{
	}
}
[Token(Token = "0x20001AB")]
public class ProtoCasting : MonoBehaviour, IUIInteractor, ILineRenderable
{
	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button button;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rayPoint;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rayLength;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool press;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InputSystemUIInputModule inputModule;

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xE49908", Offset = "0xE49908", VA = "0xE49908")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xE4999C", Offset = "0xE4999C", VA = "0xE4999C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xE49A68", Offset = "0xE49A68", VA = "0xE49A68")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xE49A6C", Offset = "0xE49A6C", VA = "0xE49A6C", Slot = "4")]
	public void UpdateUIModel(ref TrackedDeviceModel model)
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xE49AAC", Offset = "0xE49AAC", VA = "0xE49AAC", Slot = "5")]
	public bool TryGetUIModel(out TrackedDeviceModel model)
	{
		return default(bool);
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xE49AEC", Offset = "0xE49AEC", VA = "0xE49AEC", Slot = "6")]
	public bool GetLinePoints(ref Vector3[] linePoints, out int numPoints)
	{
		return default(bool);
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xE49B2C", Offset = "0xE49B2C", VA = "0xE49B2C", Slot = "7")]
	public bool TryGetHitInfo(out Vector3 position, out Vector3 normal, out int positionInLine, out bool isValidTarget)
	{
		return default(bool);
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xE49B6C", Offset = "0xE49B6C", VA = "0xE49B6C")]
	public ProtoCasting()
	{
	}
}
[Token(Token = "0x20001AC")]
public class ProtoCockpit : MonoBehaviour
{
	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float recoverForce;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve hitCurve;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve rotationCurve;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 hitDirection;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 hitPoint;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DC2A4", Offset = "0x8DC2A4")]
	public bool takeHit;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float hitTimer;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float rotationTimer;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool posCached;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool doRotation;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 originalPos;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 basePos;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion originalRot;

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xE49B74", Offset = "0xE49B74", VA = "0xE49B74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xE49BD0", Offset = "0xE49BD0", VA = "0xE49BD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xE49D28", Offset = "0xE49D28", VA = "0xE49D28")]
	private void TakeHit()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xE49E58", Offset = "0xE49E58", VA = "0xE49E58")]
	private void DoRotation()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xE49F44", Offset = "0xE49F44", VA = "0xE49F44")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xE49FFC", Offset = "0xE49FFC", VA = "0xE49FFC")]
	public ProtoCockpit()
	{
	}
}
[Token(Token = "0x20001AD")]
public class ProtoDirectonRotation : MonoBehaviour
{
	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform hip;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 controllerAxis;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xE4A070", Offset = "0xE4A070", VA = "0xE4A070")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xE4A0F4", Offset = "0xE4A0F4", VA = "0xE4A0F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xE4A1CC", Offset = "0xE4A1CC", VA = "0xE4A1CC")]
	public ProtoDirectonRotation()
	{
	}
}
[Token(Token = "0x20001AE")]
public class ProtoDotCheck : MonoBehaviour
{
	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cubeOne;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cubeTwo;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lineLength;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC2B8", Offset = "0x8DC2B8")]
	public float dot;

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xE4A200", Offset = "0xE4A200", VA = "0xE4A200")]
	private void Start()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xE4A204", Offset = "0xE4A204", VA = "0xE4A204")]
	private void Update()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xE4A278", Offset = "0xE4A278", VA = "0xE4A278")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xE4A3AC", Offset = "0xE4A3AC", VA = "0xE4A3AC")]
	public ProtoDotCheck()
	{
	}
}
[Token(Token = "0x20001AF")]
public class ProtoFiringRange : MonoBehaviour
{
	[Token(Token = "0x20001B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D84A8", Offset = "0x8D84A8")]
	private sealed class <ShootMechs>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProtoFiringRange <>4__this;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008A2")]
			[Address(RVA = "0xD561B8", Offset = "0xD561B8", VA = "0xD561B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008A4")]
			[Address(RVA = "0xD56200", Offset = "0xD56200", VA = "0xD56200", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xD55FFC", Offset = "0xD55FFC", VA = "0xD55FFC")]
		[DebuggerHidden]
		public <ShootMechs>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xD56028", Offset = "0xD56028", VA = "0xD56028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xD5602C", Offset = "0xD5602C", VA = "0xD5602C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xD561C0", Offset = "0xD561C0", VA = "0xD561C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProtoGunCube[] gunCubes;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startForce;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float finalBlow;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float shootCooldown;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool startFiringRange;

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xE4A3BC", Offset = "0xE4A3BC", VA = "0xE4A3BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xE4A3F8", Offset = "0xE4A3F8", VA = "0xE4A3F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0A0C", Offset = "0x8E0A0C")]
	private IEnumerator ShootMechs()
	{
		return null;
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xE4A470", Offset = "0xE4A470", VA = "0xE4A470")]
	public ProtoFiringRange()
	{
	}
}
[Token(Token = "0x20001B1")]
public class ProtoGunConvert : MonoBehaviour
{
	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rightGun;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightYaw;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rightPitch;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform target;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 pitchOffset;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 yawOffset;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion rightInitalRot;

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xE4A48C", Offset = "0xE4A48C", VA = "0xE4A48C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xE4A4C4", Offset = "0xE4A4C4", VA = "0xE4A4C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xE4A6C4", Offset = "0xE4A6C4", VA = "0xE4A6C4")]
	public ProtoGunConvert()
	{
	}
}
[Token(Token = "0x20001B2")]
public class ProtoGunCube : MonoBehaviour
{
	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float shotForce;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool killShot;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform frontPart;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool showRay;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CockpitHitter pitHitter;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BulletWizzer wizzer;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DC2F0", Offset = "0x8DC2F0")]
	public bool fireWeapon;

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xE4A718", Offset = "0xE4A718", VA = "0xE4A718")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xE4A990", Offset = "0xE4A990", VA = "0xE4A990")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xE4AA70", Offset = "0xE4AA70", VA = "0xE4AA70")]
	public ProtoGunCube()
	{
	}
}
[Token(Token = "0x20001B3")]
public class ProtoJump : MonoBehaviour
{
	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve jumpCurve;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool pdJump;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC304", Offset = "0x8DC304")]
	public float maxForce;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float pGain;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float dGain;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float height;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float jumpTime;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float jumpTimer;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool jumping;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 jumpPos;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 lastError;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 lastTargetPos;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 lastPos;

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xE4AA78", Offset = "0xE4AA78", VA = "0xE4AA78")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xE4AC60", Offset = "0xE4AC60", VA = "0xE4AC60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xE4AD8C", Offset = "0xE4AD8C", VA = "0xE4AD8C")]
	private void JumpInput(InputAction.CallbackContext contex)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xE4AF4C", Offset = "0xE4AF4C", VA = "0xE4AF4C")]
	private void JumpFinished()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xE4AB20", Offset = "0xE4AB20", VA = "0xE4AB20")]
	private void PDJump()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xE4AF50", Offset = "0xE4AF50", VA = "0xE4AF50")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xE4AF8C", Offset = "0xE4AF8C", VA = "0xE4AF8C")]
	public ProtoJump()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xE4AFFC", Offset = "0xE4AFFC", VA = "0xE4AFFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0ABC", Offset = "0x8E0ABC")]
	private Vector3 <JumpInput>b__17_0()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xE4B008", Offset = "0xE4B008", VA = "0xE4B008")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0ACC", Offset = "0x8E0ACC")]
	private void <JumpInput>b__17_1(Vector3 x)
	{
	}
}
[Token(Token = "0x20001B4")]
public class ProtoMove : MonoBehaviour
{
	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem gunFX;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float moveSpeed;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rotateSpeed;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DC33C", Offset = "0x8DC33C")]
	public float raiseSpeed;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fallSpeed;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxHeight;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minHeight;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private XRIDefaultInputActions inputActions;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isFlying;

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xE4B014", Offset = "0xE4B014", VA = "0xE4B014")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xE4B140", Offset = "0xE4B140", VA = "0xE4B140")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xE4B280", Offset = "0xE4B280", VA = "0xE4B280")]
	private void GetControllerInputs(out Vector3 movement, out float rotationAxis)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xE4B34C", Offset = "0xE4B34C", VA = "0xE4B34C")]
	private void MoveMech(Vector3 stickMovement)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xE4B3F4", Offset = "0xE4B3F4", VA = "0xE4B3F4")]
	private void RotateMech(float rotationAxis)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xE4B4A0", Offset = "0xE4B4A0", VA = "0xE4B4A0")]
	private void StartFlyUp(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xE4B4AC", Offset = "0xE4B4AC", VA = "0xE4B4AC")]
	private void StopFlyUp(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xE4B4B4", Offset = "0xE4B4B4", VA = "0xE4B4B4")]
	private void ShootGun(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xE4B4D0", Offset = "0xE4B4D0", VA = "0xE4B4D0")]
	public ProtoMove()
	{
	}
}
[Token(Token = "0x20001B5")]
public class ProtoRaycaster : MonoBehaviour
{
	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D84B8", Offset = "0x8D84B8")]
	private sealed class <ShootRaycast>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProtoRaycaster <>4__this;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <direction>5__2;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private RaycastHit <hit>5__3;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <totalRays>5__4;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <sectionTime>5__5;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int <i>5__6;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0xD56568", Offset = "0xD56568", VA = "0xD56568", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0xD565B0", Offset = "0xD565B0", VA = "0xD565B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xD56208", Offset = "0xD56208", VA = "0xD56208")]
		[DebuggerHidden]
		public <ShootRaycast>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xD56234", Offset = "0xD56234", VA = "0xD56234", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xD56238", Offset = "0xD56238", VA = "0xD56238", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xD56570", Offset = "0xD56570", VA = "0xD56570", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform front;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform wall;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject hitCube;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DC350", Offset = "0x8DC350")]
	public bool fireWeapon;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool instantMode;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool resetCube;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rayLength;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float bulletSpeed;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DC364", Offset = "0x8DC364")]
	public float wallDistance;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float timer;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool useTimer;

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xE4B51C", Offset = "0xE4B51C", VA = "0xE4B51C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xE4B644", Offset = "0xE4B644", VA = "0xE4B644")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0ADC", Offset = "0x8E0ADC")]
	private IEnumerator ShootRaycast()
	{
		return null;
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xE4B6BC", Offset = "0xE4B6BC", VA = "0xE4B6BC")]
	public ProtoRaycaster()
	{
	}
}
[Token(Token = "0x20001B7")]
public class ProtoSmoothDamp : MonoBehaviour
{
	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetCube;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float velocity;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceDamp;

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xE4B6D0", Offset = "0xE4B6D0", VA = "0xE4B6D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xE4B770", Offset = "0xE4B770", VA = "0xE4B770")]
	public ProtoSmoothDamp()
	{
	}
}
[Token(Token = "0x20001B8")]
public class ProtoSpring : MonoBehaviour
{
	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC378", Offset = "0x8DC378")]
	public bool grabbed;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float forceApplied;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float springValue;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float velocity;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC3B0", Offset = "0x8DC3B0")]
	public float forcePerDistance;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float damper;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float restValue;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minRange;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxRange;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xE4B778", Offset = "0xE4B778", VA = "0xE4B778")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xE4B848", Offset = "0xE4B848", VA = "0xE4B848")]
	public ProtoSpring()
	{
	}
}
[Token(Token = "0x20001B9")]
public class ProtoTouch : MonoBehaviour
{
	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image image;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color normalColour;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color pressedColour;

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xE4B878", Offset = "0xE4B878", VA = "0xE4B878")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xE4B954", Offset = "0xE4B954", VA = "0xE4B954")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xE4B9C0", Offset = "0xE4B9C0", VA = "0xE4B9C0")]
	public ProtoTouch()
	{
	}
}
[Token(Token = "0x20001BA")]
public class ProtoVelocityCheck : MonoBehaviour
{
	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 velocity;

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xE4BA04", Offset = "0xE4BA04", VA = "0xE4BA04")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xE4BA2C", Offset = "0xE4BA2C", VA = "0xE4BA2C")]
	public ProtoVelocityCheck()
	{
	}
}
[Token(Token = "0x20001BB")]
public class SoundTester : MonoBehaviour
{
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D84C8", Offset = "0x8D84C8")]
	private sealed class <PlayDelay>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundTester <>4__this;

		[Token(Token = "0x1700009B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D5")]
			[Address(RVA = "0xD594FC", Offset = "0xD594FC", VA = "0xD594FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008D7")]
			[Address(RVA = "0xD59544", Offset = "0xD59544", VA = "0xD59544", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xD59404", Offset = "0xD59404", VA = "0xD59404")]
		[DebuggerHidden]
		public <PlayDelay>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xD59430", Offset = "0xD59430", VA = "0xD59430", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xD59434", Offset = "0xD59434", VA = "0xD59434", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xD59504", Offset = "0xD59504", VA = "0xD59504", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Debug;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoundGenerator soundGen;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform soundPosition;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform soundParentPosition;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioStore SFX;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Delay;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool On;

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x1333DF4", Offset = "0x1333DF4", VA = "0x1333DF4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x1333ED0", Offset = "0x1333ED0", VA = "0x1333ED0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0B8C", Offset = "0x8E0B8C")]
	private IEnumerator PlayDelay()
	{
		return null;
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x1333F48", Offset = "0x1333F48", VA = "0x1333F48")]
	public SoundTester()
	{
	}
}
[Token(Token = "0x20001BD")]
public class TestObs : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float testValue;

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x1071240", Offset = "0x1071240", VA = "0x1071240", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x1071244", Offset = "0x1071244", VA = "0x1071244")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x1071248", Offset = "0x1071248", VA = "0x1071248")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x1071280", Offset = "0x1071280", VA = "0x1071280")]
	public TestObs()
	{
	}
}
[Token(Token = "0x20001BE")]
public class TestXRFinder : MonoBehaviour
{
	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<UnityEngine.XR.InputDevice> devices;

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x107133C", Offset = "0x107133C", VA = "0x107133C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x10714AC", Offset = "0x10714AC", VA = "0x10714AC")]
	public TestXRFinder()
	{
	}
}
[Token(Token = "0x20001BF")]
public class LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float initialValue;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 initialPosition;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initialScale;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float initialTime;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Light lightRef;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float amount;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float speed;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool adjustLocation;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float locationAdjustAmount;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool adjustScale;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float scaleAdjustAmount;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform scaleObject;

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xFFE270", Offset = "0xFFE270", VA = "0xFFE270")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xFFE3DC", Offset = "0xFFE3DC", VA = "0xFFE3DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xFFE5AC", Offset = "0xFFE5AC", VA = "0xFFE5AC")]
	public LightFlicker()
	{
	}
}
[Token(Token = "0x20001C0")]
public class TileAnimation : MonoBehaviour
{
	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int xFrames;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int yFrames;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool billboard;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera mainCamera;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int frame;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer rendererReference;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int randomStart;

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x1072984", Offset = "0x1072984", VA = "0x1072984")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x1072AD4", Offset = "0x1072AD4", VA = "0x1072AD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x1072D10", Offset = "0x1072D10", VA = "0x1072D10")]
	public TileAnimation()
	{
	}
}
[Token(Token = "0x20001C1")]
public static class AppSettingsExtensions
{
	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x105438C", Offset = "0x105438C", VA = "0x105438C")]
	public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
	{
		return null;
	}
}
[Token(Token = "0x20001C2")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x10694C8", Offset = "0x10694C8", VA = "0x10694C8")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x1069550", Offset = "0x1069550", VA = "0x1069550", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1069860", Offset = "0x1069860", VA = "0x1069860")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x20001C3")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x106BCE0", Offset = "0x106BCE0", VA = "0x106BCE0")]
	public void Update()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x106BE44", Offset = "0x106BE44", VA = "0x106BE44")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x20001C4")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC3E8", Offset = "0x8DC3E8")]
	private string <UserName>k__BackingField;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal ChatAppSettings chatAppSettings;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x1700009D")]
	public string UserName
	{
		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x106C448", Offset = "0x106C448", VA = "0x106C448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0C4C", Offset = "0x8E0C4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x106C450", Offset = "0x106C450", VA = "0x106C450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0C5C", Offset = "0x8E0C5C")]
		set
		{
		}
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x106C458", Offset = "0x106C458", VA = "0x106C458")]
	public void Start()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x106C738", Offset = "0x106C738", VA = "0x106C738")]
	public void Connect()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x106C8E0", Offset = "0x106C8E0", VA = "0x106C8E0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x106C8F8", Offset = "0x106C8F8", VA = "0x106C8F8")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x106C910", Offset = "0x106C910", VA = "0x106C910")]
	public void Update()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x106CA00", Offset = "0x106CA00", VA = "0x106CA00")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x106D494", Offset = "0x106D494", VA = "0x106D494")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x106CA98", Offset = "0x106CA98", VA = "0x106CA98")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x106D550", Offset = "0x106D550", VA = "0x106D550")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x106D608", Offset = "0x106D608", VA = "0x106D608", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x106D6EC", Offset = "0x106D6EC", VA = "0x106D6EC", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x106DA50", Offset = "0x106DA50", VA = "0x106DA50", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x106DA70", Offset = "0x106DA70", VA = "0x106DA70", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x106DB18", Offset = "0x106DB18", VA = "0x106DB18", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x106DE98", Offset = "0x106DE98", VA = "0x106DE98")]
	public void OnSubscribed(string channel, string[] users, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x106DCC8", Offset = "0x106DCC8", VA = "0x106DCC8")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x106D8FC", Offset = "0x106D8FC", VA = "0x106D8FC")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x106E078", Offset = "0x106E078", VA = "0x106E078", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x106E4F8", Offset = "0x106E4F8", VA = "0x106E4F8", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x106E548", Offset = "0x106E548", VA = "0x106E548", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x106E668", Offset = "0x106E668", VA = "0x106E668", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x106E838", Offset = "0x106E838", VA = "0x106E838", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x106E968", Offset = "0x106E968", VA = "0x106E968", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x106EA98", Offset = "0x106EA98", VA = "0x106EA98")]
	public void OnChannelPropertiesChanged(string channel, string userId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x106EC3C", Offset = "0x106EC3C", VA = "0x106EC3C")]
	public void OnUserPropertiesChanged(string channel, string targetUserId, string senderUserId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x106EE20", Offset = "0x106EE20", VA = "0x106EE20")]
	public void OnErrorInfo(string channel, string error, object data)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x106EF88", Offset = "0x106EF88", VA = "0x106EF88")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x10695D4", Offset = "0x10695D4", VA = "0x10695D4")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x106F080", Offset = "0x106F080", VA = "0x106F080")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x106F0C8", Offset = "0x106F0C8", VA = "0x106F0C8")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x20001C5")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x1700009E")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0xFA4594", Offset = "0xFA4594", VA = "0xFA4594")]
		get
		{
			return null;
		}
		[Token(Token = "0x600090B")]
		[Address(RVA = "0xFA4570", Offset = "0xFA4570", VA = "0xFA4570")]
		set
		{
		}
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xFA45B8", Offset = "0xFA45B8", VA = "0xFA45B8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xFA4620", Offset = "0xFA4620", VA = "0xFA4620")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xFA47B0", Offset = "0xFA47B0", VA = "0xFA47B0")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x20001C6")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x6000910")]
	[Address(RVA = "0xFF8688", Offset = "0xFF8688", VA = "0xFF8688", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xFF86AC", Offset = "0xFF86AC", VA = "0xFF86AC")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x20001C7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D84F8", Offset = "0x8D84F8")]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x4000B5B")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x1105E80", Offset = "0x1105E80", VA = "0x1105E80")]
	public void Start()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x1105F58", Offset = "0x1105F58", VA = "0x1105F58")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x1105FA4", Offset = "0x1105FA4", VA = "0x1105FA4")]
	public void StartChat()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x1106098", Offset = "0x1106098", VA = "0x1106098")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x20001C8")]
public static class BuildConstants
{
	[Token(Token = "0x20001C9")]
	public enum ReleaseType
	{
		[Token(Token = "0x4000B65")]
		None
	}

	[Token(Token = "0x20001CA")]
	public enum Platform
	{
		[Token(Token = "0x4000B67")]
		None
	}

	[Token(Token = "0x20001CB")]
	public enum Architecture
	{
		[Token(Token = "0x4000B69")]
		None
	}

	[Token(Token = "0x20001CC")]
	public enum Distribution
	{
		[Token(Token = "0x4000B6B")]
		None
	}

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly DateTime buildDate;

	[Token(Token = "0x4000B5F")]
	public const string version = "";

	[Token(Token = "0x4000B60")]
	public const ReleaseType releaseType = ReleaseType.None;

	[Token(Token = "0x4000B61")]
	public const Platform platform = Platform.None;

	[Token(Token = "0x4000B62")]
	public const Architecture architecture = Architecture.None;

	[Token(Token = "0x4000B63")]
	public const Distribution distribution = Distribution.None;
}
[Token(Token = "0x20001CD")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x106BE4C", Offset = "0x106BE4C", VA = "0x106BE4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x106BF10", Offset = "0x106BF10", VA = "0x106BF10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x106BFD4", Offset = "0x106BFD4", VA = "0x106BFD4")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x106C440", Offset = "0x106C440", VA = "0x106C440")]
	public ChatController()
	{
	}
}
[Token(Token = "0x20001CE")]
public class DropdownSample : MonoBehaviour
{
	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Dropdown dropdownWithoutPlaceholder;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Dropdown dropdownWithPlaceholder;

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xFA21FC", Offset = "0xFA21FC", VA = "0xFA21FC")]
	public void OnButtonClick()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xFA2308", Offset = "0xFA2308", VA = "0xFA2308")]
	public DropdownSample()
	{
	}
}
[Token(Token = "0x20001CF")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8558", Offset = "0x8D8558")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0xD4A5CC", Offset = "0xD4A5CC", VA = "0xD4A5CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000925")]
			[Address(RVA = "0xD4A614", Offset = "0xD4A614", VA = "0xD4A614", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xD4A3E4", Offset = "0xD4A3E4", VA = "0xD4A3E4")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xD4A410", Offset = "0xD4A410", VA = "0xD4A410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xD4A414", Offset = "0xD4A414", VA = "0xD4A414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0xD4A5D4", Offset = "0xD4A5D4", VA = "0xD4A5D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xFA2310", Offset = "0xFA2310", VA = "0xFA2310")]
	private void Awake()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xFA2398", Offset = "0xFA2398", VA = "0xFA2398")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0C6C", Offset = "0x8E0C6C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xFA2410", Offset = "0xFA2410", VA = "0xFA2410")]
	public EnvMapAnimator()
	{
	}
}
[Token(Token = "0x20001D1")]
public class XRIDefaultInputActions : IInputActionCollection2, IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable
{
	[Token(Token = "0x20001D2")]
	public struct XRIHMDActions
	{
		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private XRIDefaultInputActions m_Wrapper;

		[Token(Token = "0x170000AD")]
		public InputAction Position
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0x8955C4", Offset = "0x8955C4", VA = "0x8955C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		public InputAction Rotation
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0x8955E0", Offset = "0x8955E0", VA = "0x8955E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		public bool enabled
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0x895628", Offset = "0x895628", VA = "0x895628")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x8955BC", Offset = "0x8955BC", VA = "0x8955BC")]
		public XRIHMDActions(XRIDefaultInputActions wrapper)
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x8955FC", Offset = "0x8955FC", VA = "0x8955FC")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x895618", Offset = "0x895618", VA = "0x895618")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x895620", Offset = "0x895620", VA = "0x895620")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x1BE5AFC", Offset = "0x1BE5AFC", VA = "0x1BE5AFC")]
		public static implicit operator InputActionMap(XRIHMDActions set)
		{
			return null;
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x895630", Offset = "0x895630", VA = "0x895630")]
		public void SetCallbacks(IXRIHMDActions instance)
		{
		}
	}

	[Token(Token = "0x20001D3")]
	public struct XRILeftHandActions
	{
		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private XRIDefaultInputActions m_Wrapper;

		[Token(Token = "0x170000B0")]
		public InputAction Position
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0x89567C", Offset = "0x89567C", VA = "0x89567C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		public InputAction Rotation
		{
			[Token(Token = "0x6000948")]
			[Address(RVA = "0x895698", Offset = "0x895698", VA = "0x895698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		public InputAction Select
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0x8956B4", Offset = "0x8956B4", VA = "0x8956B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		public InputAction Activate
		{
			[Token(Token = "0x600094A")]
			[Address(RVA = "0x8956D0", Offset = "0x8956D0", VA = "0x8956D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		public InputAction UIPress
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0x8956EC", Offset = "0x8956EC", VA = "0x8956EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		public InputAction HapticDevice
		{
			[Token(Token = "0x600094C")]
			[Address(RVA = "0x895708", Offset = "0x895708", VA = "0x895708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public InputAction PrimaryButton
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0x895724", Offset = "0x895724", VA = "0x895724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		public InputAction Turn
		{
			[Token(Token = "0x600094E")]
			[Address(RVA = "0x895740", Offset = "0x895740", VA = "0x895740")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		public InputAction Move
		{
			[Token(Token = "0x600094F")]
			[Address(RVA = "0x89575C", Offset = "0x89575C", VA = "0x89575C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		public InputAction RotateAnchor
		{
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x895778", Offset = "0x895778", VA = "0x895778")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		public InputAction TranslateAnchor
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x895794", Offset = "0x895794", VA = "0x895794")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		public InputAction SecondaryButton
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x8957B0", Offset = "0x8957B0", VA = "0x8957B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		public InputAction CameraUp
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x8957CC", Offset = "0x8957CC", VA = "0x8957CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		public InputAction LobbyLoad
		{
			[Token(Token = "0x6000954")]
			[Address(RVA = "0x8957E8", Offset = "0x8957E8", VA = "0x8957E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		public InputAction TrackingState
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x895804", Offset = "0x895804", VA = "0x895804")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public bool enabled
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x89584C", Offset = "0x89584C", VA = "0x89584C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x895674", Offset = "0x895674", VA = "0x895674")]
		public XRILeftHandActions(XRIDefaultInputActions wrapper)
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x895820", Offset = "0x895820", VA = "0x895820")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x89583C", Offset = "0x89583C", VA = "0x89583C")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x895844", Offset = "0x895844", VA = "0x895844")]
		public void Disable()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x1BE6554", Offset = "0x1BE6554", VA = "0x1BE6554")]
		public static implicit operator InputActionMap(XRILeftHandActions set)
		{
			return null;
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x895854", Offset = "0x895854", VA = "0x895854")]
		public void SetCallbacks(IXRILeftHandActions instance)
		{
		}
	}

	[Token(Token = "0x20001D4")]
	public struct XRIRightHandActions
	{
		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private XRIDefaultInputActions m_Wrapper;

		[Token(Token = "0x170000C0")]
		public InputAction Position
		{
			[Token(Token = "0x600095D")]
			[Address(RVA = "0x8958A0", Offset = "0x8958A0", VA = "0x8958A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		public InputAction Rotation
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x8958BC", Offset = "0x8958BC", VA = "0x8958BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		public InputAction Select
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x8958D8", Offset = "0x8958D8", VA = "0x8958D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		public InputAction Activate
		{
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x8958F4", Offset = "0x8958F4", VA = "0x8958F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public InputAction UIPress
		{
			[Token(Token = "0x6000961")]
			[Address(RVA = "0x895910", Offset = "0x895910", VA = "0x895910")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public InputAction HapticDevice
		{
			[Token(Token = "0x6000962")]
			[Address(RVA = "0x89592C", Offset = "0x89592C", VA = "0x89592C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		public InputAction PrimaryButton
		{
			[Token(Token = "0x6000963")]
			[Address(RVA = "0x895948", Offset = "0x895948", VA = "0x895948")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		public InputAction Move
		{
			[Token(Token = "0x6000964")]
			[Address(RVA = "0x895964", Offset = "0x895964", VA = "0x895964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		public InputAction RotateAnchor
		{
			[Token(Token = "0x6000965")]
			[Address(RVA = "0x895980", Offset = "0x895980", VA = "0x895980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		public InputAction TranslateAnchor
		{
			[Token(Token = "0x6000966")]
			[Address(RVA = "0x89599C", Offset = "0x89599C", VA = "0x89599C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		public InputAction SecondaryButton
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x8959B8", Offset = "0x8959B8", VA = "0x8959B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		public InputAction Reload
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x8959D4", Offset = "0x8959D4", VA = "0x8959D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		public InputAction ReloadTesting
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x8959F0", Offset = "0x8959F0", VA = "0x8959F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		public InputAction DynamicTriggerValue
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x895A0C", Offset = "0x895A0C", VA = "0x895A0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		public InputAction TrackingState
		{
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x895A28", Offset = "0x895A28", VA = "0x895A28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		public bool enabled
		{
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x895A70", Offset = "0x895A70", VA = "0x895A70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x895898", Offset = "0x895898", VA = "0x895898")]
		public XRIRightHandActions(XRIDefaultInputActions wrapper)
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x895A44", Offset = "0x895A44", VA = "0x895A44")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x895A60", Offset = "0x895A60", VA = "0x895A60")]
		public void Enable()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x895A68", Offset = "0x895A68", VA = "0x895A68")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x1BE9F38", Offset = "0x1BE9F38", VA = "0x1BE9F38")]
		public static implicit operator InputActionMap(XRIRightHandActions set)
		{
			return null;
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x895A78", Offset = "0x895A78", VA = "0x895A78")]
		public void SetCallbacks(IXRIRightHandActions instance)
		{
		}
	}

	[Token(Token = "0x20001D5")]
	public struct SpectatorControlsActions
	{
		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private XRIDefaultInputActions m_Wrapper;

		[Token(Token = "0x170000D0")]
		public InputAction Movement
		{
			[Token(Token = "0x6000973")]
			[Address(RVA = "0x8954D4", Offset = "0x8954D4", VA = "0x8954D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		public InputAction Rotation
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0x8954F0", Offset = "0x8954F0", VA = "0x8954F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		public InputAction Vertical
		{
			[Token(Token = "0x6000975")]
			[Address(RVA = "0x89550C", Offset = "0x89550C", VA = "0x89550C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		public InputAction FOV
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0x895528", Offset = "0x895528", VA = "0x895528")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		public bool enabled
		{
			[Token(Token = "0x600097A")]
			[Address(RVA = "0x895570", Offset = "0x895570", VA = "0x895570")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x8954CC", Offset = "0x8954CC", VA = "0x8954CC")]
		public SpectatorControlsActions(XRIDefaultInputActions wrapper)
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x895544", Offset = "0x895544", VA = "0x895544")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x895560", Offset = "0x895560", VA = "0x895560")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x895568", Offset = "0x895568", VA = "0x895568")]
		public void Disable()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x1BE4ABC", Offset = "0x1BE4ABC", VA = "0x1BE4ABC")]
		public static implicit operator InputActionMap(SpectatorControlsActions set)
		{
			return null;
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x895578", Offset = "0x895578", VA = "0x895578")]
		public void SetCallbacks(ISpectatorControlsActions instance)
		{
		}
	}

	[Token(Token = "0x20001D6")]
	public interface IXRIHMDActions
	{
		[Token(Token = "0x600097D")]
		void OnPosition(InputAction.CallbackContext context);

		[Token(Token = "0x600097E")]
		void OnRotation(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20001D7")]
	public interface IXRILeftHandActions
	{
		[Token(Token = "0x600097F")]
		void OnPosition(InputAction.CallbackContext context);

		[Token(Token = "0x6000980")]
		void OnRotation(InputAction.CallbackContext context);

		[Token(Token = "0x6000981")]
		void OnSelect(InputAction.CallbackContext context);

		[Token(Token = "0x6000982")]
		void OnActivate(InputAction.CallbackContext context);

		[Token(Token = "0x6000983")]
		void OnUIPress(InputAction.CallbackContext context);

		[Token(Token = "0x6000984")]
		void OnHapticDevice(InputAction.CallbackContext context);

		[Token(Token = "0x6000985")]
		void OnPrimaryButton(InputAction.CallbackContext context);

		[Token(Token = "0x6000986")]
		void OnTurn(InputAction.CallbackContext context);

		[Token(Token = "0x6000987")]
		void OnMove(InputAction.CallbackContext context);

		[Token(Token = "0x6000988")]
		void OnRotateAnchor(InputAction.CallbackContext context);

		[Token(Token = "0x6000989")]
		void OnTranslateAnchor(InputAction.CallbackContext context);

		[Token(Token = "0x600098A")]
		void OnSecondaryButton(InputAction.CallbackContext context);

		[Token(Token = "0x600098B")]
		void OnCameraUp(InputAction.CallbackContext context);

		[Token(Token = "0x600098C")]
		void OnLobbyLoad(InputAction.CallbackContext context);

		[Token(Token = "0x600098D")]
		void OnTrackingState(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20001D8")]
	public interface IXRIRightHandActions
	{
		[Token(Token = "0x600098E")]
		void OnPosition(InputAction.CallbackContext context);

		[Token(Token = "0x600098F")]
		void OnRotation(InputAction.CallbackContext context);

		[Token(Token = "0x6000990")]
		void OnSelect(InputAction.CallbackContext context);

		[Token(Token = "0x6000991")]
		void OnActivate(InputAction.CallbackContext context);

		[Token(Token = "0x6000992")]
		void OnUIPress(InputAction.CallbackContext context);

		[Token(Token = "0x6000993")]
		void OnHapticDevice(InputAction.CallbackContext context);

		[Token(Token = "0x6000994")]
		void OnPrimaryButton(InputAction.CallbackContext context);

		[Token(Token = "0x6000995")]
		void OnMove(InputAction.CallbackContext context);

		[Token(Token = "0x6000996")]
		void OnRotateAnchor(InputAction.CallbackContext context);

		[Token(Token = "0x6000997")]
		void OnTranslateAnchor(InputAction.CallbackContext context);

		[Token(Token = "0x6000998")]
		void OnSecondaryButton(InputAction.CallbackContext context);

		[Token(Token = "0x6000999")]
		void OnReload(InputAction.CallbackContext context);

		[Token(Token = "0x600099A")]
		void OnReloadTesting(InputAction.CallbackContext context);

		[Token(Token = "0x600099B")]
		void OnDynamicTriggerValue(InputAction.CallbackContext context);

		[Token(Token = "0x600099C")]
		void OnTrackingState(InputAction.CallbackContext context);
	}

	[Token(Token = "0x20001D9")]
	public interface ISpectatorControlsActions
	{
		[Token(Token = "0x600099D")]
		void OnMovement(InputAction.CallbackContext context);

		[Token(Token = "0x600099E")]
		void OnRotation(InputAction.CallbackContext context);

		[Token(Token = "0x600099F")]
		void OnVertical(InputAction.CallbackContext context);

		[Token(Token = "0x60009A0")]
		void OnFOV(InputAction.CallbackContext context);
	}

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC428", Offset = "0x8DC428")]
	private readonly InputActionAsset <asset>k__BackingField;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly InputActionMap m_XRIHMD;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IXRIHMDActions m_XRIHMDActionsCallbackInterface;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly InputAction m_XRIHMD_Position;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly InputAction m_XRIHMD_Rotation;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly InputActionMap m_XRILeftHand;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IXRILeftHandActions m_XRILeftHandActionsCallbackInterface;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly InputAction m_XRILeftHand_Position;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly InputAction m_XRILeftHand_Rotation;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly InputAction m_XRILeftHand_Select;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly InputAction m_XRILeftHand_Activate;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly InputAction m_XRILeftHand_UIPress;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly InputAction m_XRILeftHand_HapticDevice;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly InputAction m_XRILeftHand_PrimaryButton;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly InputAction m_XRILeftHand_Turn;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly InputAction m_XRILeftHand_Move;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly InputAction m_XRILeftHand_RotateAnchor;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly InputAction m_XRILeftHand_TranslateAnchor;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly InputAction m_XRILeftHand_SecondaryButton;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private readonly InputAction m_XRILeftHand_CameraUp;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private readonly InputAction m_XRILeftHand_LobbyLoad;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly InputAction m_XRILeftHand_TrackingState;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private readonly InputActionMap m_XRIRightHand;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private IXRIRightHandActions m_XRIRightHandActionsCallbackInterface;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private readonly InputAction m_XRIRightHand_Position;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly InputAction m_XRIRightHand_Rotation;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private readonly InputAction m_XRIRightHand_Select;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly InputAction m_XRIRightHand_Activate;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private readonly InputAction m_XRIRightHand_UIPress;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private readonly InputAction m_XRIRightHand_HapticDevice;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private readonly InputAction m_XRIRightHand_PrimaryButton;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private readonly InputAction m_XRIRightHand_Move;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private readonly InputAction m_XRIRightHand_RotateAnchor;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private readonly InputAction m_XRIRightHand_TranslateAnchor;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private readonly InputAction m_XRIRightHand_SecondaryButton;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private readonly InputAction m_XRIRightHand_Reload;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private readonly InputAction m_XRIRightHand_ReloadTesting;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private readonly InputAction m_XRIRightHand_DynamicTriggerValue;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private readonly InputAction m_XRIRightHand_TrackingState;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private readonly InputActionMap m_SpectatorControls;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private ISpectatorControlsActions m_SpectatorControlsActionsCallbackInterface;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private readonly InputAction m_SpectatorControls_Movement;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private readonly InputAction m_SpectatorControls_Rotation;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private readonly InputAction m_SpectatorControls_Vertical;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private readonly InputAction m_SpectatorControls_FOV;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int m_GenericXRControllerSchemeIndex;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int m_ContinuousMoveSchemeIndex;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int m_NoncontinuousMoveSchemeIndex;

	[Token(Token = "0x170000A1")]
	public InputActionAsset asset
	{
		[Token(Token = "0x6000926")]
		[Address(RVA = "0xD4306C", Offset = "0xD4306C", VA = "0xD4306C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0D1C", Offset = "0x8E0D1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A2")]
	public InputBinding? bindingMask
	{
		[Token(Token = "0x6000929")]
		[Address(RVA = "0xD43A3C", Offset = "0xD43A3C", VA = "0xD43A3C", Slot = "7")]
		get
		{
			return null;
		}
		[Token(Token = "0x600092A")]
		[Address(RVA = "0xD43A68", Offset = "0xD43A68", VA = "0xD43A68", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public ReadOnlyArray<UnityEngine.InputSystem.InputDevice>? devices
	{
		[Token(Token = "0x600092B")]
		[Address(RVA = "0xD43AC0", Offset = "0xD43AC0", VA = "0xD43AC0", Slot = "9")]
		get
		{
			return null;
		}
		[Token(Token = "0x600092C")]
		[Address(RVA = "0xD43B0C", Offset = "0xD43B0C", VA = "0xD43B0C", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public ReadOnlyArray<InputControlScheme> controlSchemes
	{
		[Token(Token = "0x600092D")]
		[Address(RVA = "0xD43B5C", Offset = "0xD43B5C", VA = "0xD43B5C", Slot = "11")]
		get
		{
			return default(ReadOnlyArray<InputControlScheme>);
		}
	}

	[Token(Token = "0x170000A5")]
	public IEnumerable<InputBinding> bindings
	{
		[Token(Token = "0x6000933")]
		[Address(RVA = "0xD43BE8", Offset = "0xD43BE8", VA = "0xD43BE8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A6")]
	public XRIHMDActions XRIHMD
	{
		[Token(Token = "0x6000936")]
		[Address(RVA = "0xD43C84", Offset = "0xD43C84", VA = "0xD43C84")]
		get
		{
			return default(XRIHMDActions);
		}
	}

	[Token(Token = "0x170000A7")]
	public XRILeftHandActions XRILeftHand
	{
		[Token(Token = "0x6000937")]
		[Address(RVA = "0xD43CB0", Offset = "0xD43CB0", VA = "0xD43CB0")]
		get
		{
			return default(XRILeftHandActions);
		}
	}

	[Token(Token = "0x170000A8")]
	public XRIRightHandActions XRIRightHand
	{
		[Token(Token = "0x6000938")]
		[Address(RVA = "0xD41094", Offset = "0xD41094", VA = "0xD41094")]
		get
		{
			return default(XRIRightHandActions);
		}
	}

	[Token(Token = "0x170000A9")]
	public SpectatorControlsActions SpectatorControls
	{
		[Token(Token = "0x6000939")]
		[Address(RVA = "0xD43CDC", Offset = "0xD43CDC", VA = "0xD43CDC")]
		get
		{
			return default(SpectatorControlsActions);
		}
	}

	[Token(Token = "0x170000AA")]
	public InputControlScheme GenericXRControllerScheme
	{
		[Token(Token = "0x600093A")]
		[Address(RVA = "0xD43D08", Offset = "0xD43D08", VA = "0xD43D08")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x170000AB")]
	public InputControlScheme ContinuousMoveScheme
	{
		[Token(Token = "0x600093B")]
		[Address(RVA = "0xD43DD8", Offset = "0xD43DD8", VA = "0xD43DD8")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x170000AC")]
	public InputControlScheme NoncontinuousMoveScheme
	{
		[Token(Token = "0x600093C")]
		[Address(RVA = "0xD43EA8", Offset = "0xD43EA8", VA = "0xD43EA8")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xD43074", Offset = "0xD43074", VA = "0xD43074")]
	public XRIDefaultInputActions()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xD439D4", Offset = "0xD439D4", VA = "0xD439D4", Slot = "17")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xD43B78", Offset = "0xD43B78", VA = "0xD43B78", Slot = "12")]
	public bool Contains(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xD43B94", Offset = "0xD43B94", VA = "0xD43B94", Slot = "15")]
	public IEnumerator<InputAction> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xD43BB0", Offset = "0xD43BB0", VA = "0xD43BB0", Slot = "16")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xD41078", Offset = "0xD41078", VA = "0xD41078", Slot = "13")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xD43BCC", Offset = "0xD43BCC", VA = "0xD43BCC", Slot = "14")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xD43C04", Offset = "0xD43C04", VA = "0xD43C04", Slot = "5")]
	public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
	{
		return null;
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xD43C24", Offset = "0xD43C24", VA = "0xD43C24", Slot = "6")]
	public int FindBinding(InputBinding bindingMask, out InputAction action)
	{
		return default(int);
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x20001DA")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x1334B8C", Offset = "0x1334B8C", VA = "0x1334B8C", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x1334C10", Offset = "0x1334C10", VA = "0x1334C10")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DB")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x13354B8", Offset = "0x13354B8", VA = "0x13354B8", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x1335938", Offset = "0x1335938", VA = "0x1335938")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x20001DD")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0xD59578", Offset = "0xD59578", VA = "0xD59578")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001DE")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x60009BA")]
			[Address(RVA = "0xD5965C", Offset = "0xD5965C", VA = "0xD5965C")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001DF")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x60009BB")]
			[Address(RVA = "0xD596A8", Offset = "0xD596A8", VA = "0xD596A8")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E0")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x60009BC")]
			[Address(RVA = "0xD595C4", Offset = "0xD595C4", VA = "0xD595C4")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E1")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0xD59610", Offset = "0xD59610", VA = "0xD59610")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x170000D5")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x1336C60", Offset = "0x1336C60", VA = "0x1336C60")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x1336C68", Offset = "0x1336C68", VA = "0x1336C68")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x1336C70", Offset = "0x1336C70", VA = "0x1336C70")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0x1336C78", Offset = "0x1336C78", VA = "0x1336C78")]
			set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0x1336C80", Offset = "0x1336C80", VA = "0x1336C80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0x1336C88", Offset = "0x1336C88", VA = "0x1336C88")]
			set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x1336C90", Offset = "0x1336C90", VA = "0x1336C90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x1336C98", Offset = "0x1336C98", VA = "0x1336C98")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x1336CA0", Offset = "0x1336CA0", VA = "0x1336CA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0x1336CA8", Offset = "0x1336CA8", VA = "0x1336CA8")]
			set
			{
			}
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1336CB0", Offset = "0x1336CB0", VA = "0x1336CB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x1336E88", Offset = "0x1336E88", VA = "0x1336E88")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x13375C8", Offset = "0x13375C8", VA = "0x13375C8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x13375CC", Offset = "0x13375CC", VA = "0x13375CC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x1337334", Offset = "0x1337334", VA = "0x1337334")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x13373AC", Offset = "0x13373AC", VA = "0x13373AC")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x1337424", Offset = "0x1337424", VA = "0x1337424")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x13374B0", Offset = "0x13374B0", VA = "0x13374B0")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x133753C", Offset = "0x133753C", VA = "0x133753C")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x13375D0", Offset = "0x13375D0", VA = "0x13375D0")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x20001E2")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x20001E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8568", Offset = "0x8D8568")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x4000BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170000DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009C3")]
				[Address(RVA = "0xD47D3C", Offset = "0xD47D3C", VA = "0xD47D3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009C5")]
				[Address(RVA = "0xD47D84", Offset = "0xD47D84", VA = "0xD47D84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009C0")]
			[Address(RVA = "0xD47724", Offset = "0xD47724", VA = "0xD47724")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60009C1")]
			[Address(RVA = "0xD47750", Offset = "0xD47750", VA = "0xD47750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009C2")]
			[Address(RVA = "0xD47754", Offset = "0xD47754", VA = "0xD47754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009C4")]
			[Address(RVA = "0xD47D44", Offset = "0xD47D44", VA = "0xD47D44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4000BBF")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x4000BC0")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x105C228", Offset = "0x105C228", VA = "0x105C228")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0D2C", Offset = "0x8E0D2C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x105C2A0", Offset = "0x105C2A0", VA = "0x105C2A0")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x20001E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8578", Offset = "0x8D8578")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x4000BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170000DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009CB")]
				[Address(RVA = "0xD48288", Offset = "0xD48288", VA = "0xD48288", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009CD")]
				[Address(RVA = "0xD482D0", Offset = "0xD482D0", VA = "0xD482D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009C8")]
			[Address(RVA = "0xD47D8C", Offset = "0xD47D8C", VA = "0xD47D8C")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60009C9")]
			[Address(RVA = "0xD47DB8", Offset = "0xD47DB8", VA = "0xD47DB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009CA")]
			[Address(RVA = "0xD47DBC", Offset = "0xD47DBC", VA = "0xD47DBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009CC")]
			[Address(RVA = "0xD48290", Offset = "0xD48290", VA = "0xD48290", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x4000BCD")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x4000BCE")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x105C2A8", Offset = "0x105C2A8", VA = "0x105C2A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0DDC", Offset = "0x8E0DDC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x105C320", Offset = "0x105C320", VA = "0x105C320")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x105C328", Offset = "0x105C328", VA = "0x105C328")]
		private void Start()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x105C944", Offset = "0x105C944", VA = "0x105C944")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x20001E8")]
		public enum BenchmarkType
		{
			[Token(Token = "0x4000BDC")]
			TMP_SDF_MOBILE,
			[Token(Token = "0x4000BDD")]
			TMP_SDF__MOBILE_SSD,
			[Token(Token = "0x4000BDE")]
			TMP_SDF,
			[Token(Token = "0x4000BDF")]
			TMP_BITMAP_MOBILE,
			[Token(Token = "0x4000BE0")]
			TEXTMESH_BITMAP
		}

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int NumberOfSamples;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BenchmarkType Benchmark;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font SourceFontFile;

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x105C954", Offset = "0x105C954", VA = "0x105C954")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x105C958", Offset = "0x105C958", VA = "0x105C958")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x105CE14", Offset = "0x105CE14", VA = "0x105CE14")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x105CE24", Offset = "0x105CE24", VA = "0x105CE24")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x105D148", Offset = "0x105D148", VA = "0x105D148")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x20001EB")]
		public enum CameraModes
		{
			[Token(Token = "0x4000C00")]
			Follow,
			[Token(Token = "0x4000C01")]
			Isometric,
			[Token(Token = "0x4000C02")]
			Free
		}

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x4000BFD")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x4000BFE")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x1067AF4", Offset = "0x1067AF4", VA = "0x1067AF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x1067B84", Offset = "0x1067B84", VA = "0x1067B84")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x1067C84", Offset = "0x1067C84", VA = "0x1067C84")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x1067F9C", Offset = "0x1067F9C", VA = "0x1067F9C")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x1068774", Offset = "0x1068774", VA = "0x1068774")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x20001ED")]
		public enum MotionType
		{
			[Token(Token = "0x4000C0E")]
			Rotation,
			[Token(Token = "0x4000C0F")]
			BackAndForth,
			[Token(Token = "0x4000C10")]
			Translation
		}

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x18E0968", Offset = "0x18E0968", VA = "0x18E0968")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x18E0A98", Offset = "0x18E0A98", VA = "0x18E0A98")]
		private void Update()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x18E0BD4", Offset = "0x18E0BD4", VA = "0x18E0BD4")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x20001EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8588", Offset = "0x8D8588")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x170000DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009E4")]
				[Address(RVA = "0xD56C5C", Offset = "0xD56C5C", VA = "0xD56C5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009E6")]
				[Address(RVA = "0xD56CA4", Offset = "0xD56CA4", VA = "0xD56CA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009E1")]
			[Address(RVA = "0xD56AC0", Offset = "0xD56AC0", VA = "0xD56AC0")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60009E2")]
			[Address(RVA = "0xD56AEC", Offset = "0xD56AEC", VA = "0xD56AEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009E3")]
			[Address(RVA = "0xD56AF0", Offset = "0xD56AF0", VA = "0xD56AF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009E5")]
			[Address(RVA = "0xD56C64", Offset = "0xD56C64", VA = "0xD56C64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x132BD88", Offset = "0x132BD88", VA = "0x132BD88")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x132BE08", Offset = "0x132BE08", VA = "0x132BE08")]
		private void Start()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x132BE34", Offset = "0x132BE34", VA = "0x132BE34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0E8C", Offset = "0x8E0E8C")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x132BEAC", Offset = "0x132BEAC", VA = "0x132BEAC")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000C19")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x132C8E0", Offset = "0x132C8E0", VA = "0x132C8E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x132C9A8", Offset = "0x132C9A8", VA = "0x132C9A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x132CA40", Offset = "0x132CA40", VA = "0x132CA40")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x20001F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8598", Offset = "0x8D8598")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x4000C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4000C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x170000E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009F2")]
				[Address(RVA = "0xD5756C", Offset = "0xD5756C", VA = "0xD5756C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009F4")]
				[Address(RVA = "0xD575B4", Offset = "0xD575B4", VA = "0xD575B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009EF")]
			[Address(RVA = "0xD56CAC", Offset = "0xD56CAC", VA = "0xD56CAC")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60009F0")]
			[Address(RVA = "0xD56CD8", Offset = "0xD56CD8", VA = "0xD56CD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009F1")]
			[Address(RVA = "0xD56CDC", Offset = "0xD56CDC", VA = "0xD56CDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009F3")]
			[Address(RVA = "0xD57574", Offset = "0xD57574", VA = "0xD57574", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x132CA48", Offset = "0x132CA48", VA = "0x132CA48")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x132CAB4", Offset = "0x132CAB4", VA = "0x132CAB4")]
		private void Start()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x132CB58", Offset = "0x132CB58", VA = "0x132CB58")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x132CAE0", Offset = "0x132CAE0", VA = "0x132CAE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0F3C", Offset = "0x8E0F3C")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x132CBDC", Offset = "0x132CBDC", VA = "0x132CBDC")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x20001F4")]
		public enum objectType
		{
			[Token(Token = "0x4000C2B")]
			TextMeshPro,
			[Token(Token = "0x4000C2C")]
			TextMeshProUGUI
		}

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x4000C28")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x1334C18", Offset = "0x1334C18", VA = "0x1334C18")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x1334E34", Offset = "0x1334E34", VA = "0x1334E34")]
		private void Update()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x1334ECC", Offset = "0x1334ECC", VA = "0x1334ECC")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x20001F6")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000C38")]
			TopLeft,
			[Token(Token = "0x4000C39")]
			BottomLeft,
			[Token(Token = "0x4000C3A")]
			TopRight,
			[Token(Token = "0x4000C3B")]
			BottomRight
		}

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4000C32")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x1334ED4", Offset = "0x1334ED4", VA = "0x1334ED4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x1335304", Offset = "0x1335304", VA = "0x1335304")]
		private void Start()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x1335330", Offset = "0x1335330", VA = "0x1335330")]
		private void Update()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x13350FC", Offset = "0x13350FC", VA = "0x13350FC")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x13354A0", Offset = "0x13354A0", VA = "0x13354A0")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x1335940", Offset = "0x1335940", VA = "0x1335940")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x1335C54", Offset = "0x1335C54", VA = "0x1335C54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x1335F30", Offset = "0x1335F30", VA = "0x1335F30")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x1336170", Offset = "0x1336170", VA = "0x1336170")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x13363B0", Offset = "0x13363B0", VA = "0x13363B0")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x1336674", Offset = "0x1336674", VA = "0x1336674")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x1336938", Offset = "0x1336938", VA = "0x1336938")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1336C58", Offset = "0x1336C58", VA = "0x1336C58")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x1337728", Offset = "0x1337728", VA = "0x1337728")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x1337730", Offset = "0x1337730", VA = "0x1337730")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x13377D4", Offset = "0x13377D4", VA = "0x13377D4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x1337EF4", Offset = "0x1337EF4", VA = "0x1337EF4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x1337F78", Offset = "0x1337F78", VA = "0x1337F78", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1337FF8", Offset = "0x1337FF8", VA = "0x1337FF8")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x4000C47")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x4000C48")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x1338010", Offset = "0x1338010", VA = "0x1338010")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x13381EC", Offset = "0x13381EC", VA = "0x13381EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x13382DC", Offset = "0x13382DC", VA = "0x13382DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x13383CC", Offset = "0x13383CC", VA = "0x13383CC")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x1338484", Offset = "0x1338484", VA = "0x1338484")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x133997C", Offset = "0x133997C", VA = "0x133997C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x1339988", Offset = "0x1339988", VA = "0x1339988", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x1339990", Offset = "0x1339990", VA = "0x1339990", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x1339994", Offset = "0x1339994", VA = "0x1339994", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x13390EC", Offset = "0x13390EC", VA = "0x13390EC")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1339998", Offset = "0x1339998", VA = "0x1339998")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x20001FC")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000C5C")]
			TopLeft,
			[Token(Token = "0x4000C5D")]
			BottomLeft,
			[Token(Token = "0x4000C5E")]
			TopRight,
			[Token(Token = "0x4000C5F")]
			BottomRight
		}

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4000C57")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x13399B0", Offset = "0x13399B0", VA = "0x13399B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x1339E14", Offset = "0x1339E14", VA = "0x1339E14")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x1339E40", Offset = "0x1339E40", VA = "0x1339E40")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x1339BD0", Offset = "0x1339BD0", VA = "0x1339BD0")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1339FB0", Offset = "0x1339FB0", VA = "0x1339FB0")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x20001FE")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000C67")]
			TopLeft,
			[Token(Token = "0x4000C68")]
			BottomLeft,
			[Token(Token = "0x4000C69")]
			TopRight,
			[Token(Token = "0x4000C6A")]
			BottomRight
		}

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000C61")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x1339FC8", Offset = "0x1339FC8", VA = "0x1339FC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x133A248", Offset = "0x133A248", VA = "0x133A248")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x133A370", Offset = "0x133A370", VA = "0x133A370")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x2000200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D85A8", Offset = "0x8D85A8")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x4000C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x4000C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x170000E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A24")]
				[Address(RVA = "0xD59CA4", Offset = "0xD59CA4", VA = "0xD59CA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A26")]
				[Address(RVA = "0xD59CEC", Offset = "0xD59CEC", VA = "0xD59CEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A21")]
			[Address(RVA = "0xD59A1C", Offset = "0xD59A1C", VA = "0xD59A1C")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000A22")]
			[Address(RVA = "0xD59A48", Offset = "0xD59A48", VA = "0xD59A48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A23")]
			[Address(RVA = "0xD59A4C", Offset = "0xD59A4C", VA = "0xD59A4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A25")]
			[Address(RVA = "0xD59CAC", Offset = "0xD59CAC", VA = "0xD59CAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x133ABA0", Offset = "0x133ABA0", VA = "0x133ABA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x133AC48", Offset = "0x133AC48", VA = "0x133AC48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0FEC", Offset = "0x8E0FEC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x133ACC0", Offset = "0x133ACC0", VA = "0x133ACC0")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x2000202")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D85B8", Offset = "0x8D85B8")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4000C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x4000C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4000C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4000C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x170000E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A32")]
				[Address(RVA = "0x1BDDF70", Offset = "0x1BDDF70", VA = "0x1BDDF70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A34")]
				[Address(RVA = "0x1BDDFB8", Offset = "0x1BDDFB8", VA = "0x1BDDFB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x1BDDDC0", Offset = "0x1BDDDC0", VA = "0x1BDDDC0")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x1BDDDEC", Offset = "0x1BDDDEC", VA = "0x1BDDDEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x1BDDDF0", Offset = "0x1BDDDF0", VA = "0x1BDDDF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x1BDDF78", Offset = "0x1BDDF78", VA = "0x1BDDF78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000203")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D85C8", Offset = "0x8D85C8")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4000C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x4000C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4000C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x4000C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x170000E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A38")]
				[Address(RVA = "0x1BDE1E4", Offset = "0x1BDE1E4", VA = "0x1BDE1E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A3A")]
				[Address(RVA = "0x1BDE22C", Offset = "0x1BDE22C", VA = "0x1BDE22C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x1BDDFC0", Offset = "0x1BDDFC0", VA = "0x1BDDFC0")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000A36")]
			[Address(RVA = "0x1BDDFEC", Offset = "0x1BDDFEC", VA = "0x1BDDFEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A37")]
			[Address(RVA = "0x1BDDFF0", Offset = "0x1BDDFF0", VA = "0x1BDDFF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x1BDE1EC", Offset = "0x1BDE1EC", VA = "0x1BDE1EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x10717A8", Offset = "0x10717A8", VA = "0x10717A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1071814", Offset = "0x1071814", VA = "0x1071814")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x10718D8", Offset = "0x10718D8", VA = "0x10718D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x10719C8", Offset = "0x10719C8", VA = "0x10719C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x1071AB8", Offset = "0x1071AB8", VA = "0x1071AB8")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x1071844", Offset = "0x1071844", VA = "0x1071844")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E109C", Offset = "0x8E109C")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x1071AC4", Offset = "0x1071AC4", VA = "0x1071AC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E10FC", Offset = "0x8E10FC")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x1071B3C", Offset = "0x1071B3C", VA = "0x1071B3C")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x2000205")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D85D8", Offset = "0x8D85D8")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4000C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4000C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4000C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4000C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4000C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4000C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x170000E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A43")]
				[Address(RVA = "0x1BDEB2C", Offset = "0x1BDEB2C", VA = "0x1BDEB2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A45")]
				[Address(RVA = "0x1BDEB74", Offset = "0x1BDEB74", VA = "0x1BDEB74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x1BDE6CC", Offset = "0x1BDE6CC", VA = "0x1BDE6CC")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000A41")]
			[Address(RVA = "0x1BDE6F8", Offset = "0x1BDE6F8", VA = "0x1BDE6F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A42")]
			[Address(RVA = "0x1BDE6FC", Offset = "0x1BDE6FC", VA = "0x1BDE6FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A44")]
			[Address(RVA = "0x1BDEB34", Offset = "0x1BDEB34", VA = "0x1BDEB34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000206")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D85E8", Offset = "0x8D85E8")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4000C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4000C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4000C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4000C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4000C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4000C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4000CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x170000EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A49")]
				[Address(RVA = "0x1BDE67C", Offset = "0x1BDE67C", VA = "0x1BDE67C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A4B")]
				[Address(RVA = "0x1BDE6C4", Offset = "0x1BDE6C4", VA = "0x1BDE6C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A46")]
			[Address(RVA = "0x1BDE234", Offset = "0x1BDE234", VA = "0x1BDE234")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000A47")]
			[Address(RVA = "0x1BDE260", Offset = "0x1BDE260", VA = "0x1BDE260", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x1BDE264", Offset = "0x1BDE264", VA = "0x1BDE264", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0x1BDE684", Offset = "0x1BDE684", VA = "0x1BDE684", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x1071B44", Offset = "0x1071B44", VA = "0x1071B44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x1071C2C", Offset = "0x1071C2C", VA = "0x1071C2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x1072048", Offset = "0x1072048", VA = "0x1072048")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E11FC", Offset = "0x8E11FC")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x10720C0", Offset = "0x10720C0", VA = "0x10720C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E125C", Offset = "0x8E125C")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x1072138", Offset = "0x1072138", VA = "0x1072138")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x107217C", Offset = "0x107217C", VA = "0x107217C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x1072180", Offset = "0x1072180", VA = "0x1072180")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x10724C4", Offset = "0x10724C4", VA = "0x10724C4")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x2000209")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D85F8", Offset = "0x8D85F8")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x4000CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4000CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x170000EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A56")]
				[Address(RVA = "0x1BDFBA4", Offset = "0x1BDFBA4", VA = "0x1BDFBA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A58")]
				[Address(RVA = "0x1BDFBEC", Offset = "0x1BDFBEC", VA = "0x1BDFBEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A53")]
			[Address(RVA = "0x1BDF894", Offset = "0x1BDF894", VA = "0x1BDF894")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000A54")]
			[Address(RVA = "0x1BDF8C0", Offset = "0x1BDF8C0", VA = "0x1BDF8C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A55")]
			[Address(RVA = "0x1BDF8C4", Offset = "0x1BDF8C4", VA = "0x1BDF8C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A57")]
			[Address(RVA = "0x1BDFBAC", Offset = "0x1BDFBAC", VA = "0x1BDFBAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x1078F0C", Offset = "0x1078F0C", VA = "0x1078F0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x1078F68", Offset = "0x1078F68", VA = "0x1078F68")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x1078F94", Offset = "0x1078F94", VA = "0x1078F94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E135C", Offset = "0x8E135C")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x107900C", Offset = "0x107900C", VA = "0x107900C")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x200020B")]
		private struct VertexAnim
		{
			[Token(Token = "0x4000CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x4000CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x4000CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x200020C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8608", Offset = "0x8D8608")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x4000CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x170000EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A63")]
				[Address(RVA = "0x1BE049C", Offset = "0x1BE049C", VA = "0x1BE049C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A65")]
				[Address(RVA = "0x1BE04E4", Offset = "0x1BE04E4", VA = "0x1BE04E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A60")]
			[Address(RVA = "0x1BDFBF4", Offset = "0x1BDFBF4", VA = "0x1BDFBF4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000A61")]
			[Address(RVA = "0x1BDFC20", Offset = "0x1BDFC20", VA = "0x1BDFC20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A62")]
			[Address(RVA = "0x1BDFC24", Offset = "0x1BDFC24", VA = "0x1BDFC24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A64")]
			[Address(RVA = "0x1BE04A4", Offset = "0x1BE04A4", VA = "0x1BE04A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x1079014", Offset = "0x1079014", VA = "0x1079014")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x1079070", Offset = "0x1079070", VA = "0x1079070")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x1079160", Offset = "0x1079160", VA = "0x1079160")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x1079250", Offset = "0x1079250", VA = "0x1079250")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x10792F4", Offset = "0x10792F4", VA = "0x10792F4")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x107927C", Offset = "0x107927C", VA = "0x107927C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E140C", Offset = "0x8E140C")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x107937C", Offset = "0x107937C", VA = "0x107937C")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x200020E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8618", Offset = "0x8D8618")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x4000CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4000CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170000F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A70")]
				[Address(RVA = "0x1BE0F44", Offset = "0x1BE0F44", VA = "0x1BE0F44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A72")]
				[Address(RVA = "0x1BE0F8C", Offset = "0x1BE0F8C", VA = "0x1BE0F8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0x1BE04EC", Offset = "0x1BE04EC", VA = "0x1BE04EC")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000A6E")]
			[Address(RVA = "0x1BE0518", Offset = "0x1BE0518", VA = "0x1BE0518", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0x1BE051C", Offset = "0x1BE051C", VA = "0x1BE051C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A71")]
			[Address(RVA = "0x1BE0F4C", Offset = "0x1BE0F4C", VA = "0x1BE0F4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x1079394", Offset = "0x1079394", VA = "0x1079394")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x10793F0", Offset = "0x10793F0", VA = "0x10793F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x10794E0", Offset = "0x10794E0", VA = "0x10794E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x10795D0", Offset = "0x10795D0", VA = "0x10795D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x1079674", Offset = "0x1079674", VA = "0x1079674")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x10795FC", Offset = "0x10795FC", VA = "0x10795FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E14BC", Offset = "0x8E14BC")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x10796EC", Offset = "0x10796EC", VA = "0x10796EC")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x2000210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8628", Offset = "0x8D8628")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x4000CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4000CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170000F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A7D")]
				[Address(RVA = "0x1BE1E78", Offset = "0x1BE1E78", VA = "0x1BE1E78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A7F")]
				[Address(RVA = "0x1BE1EC0", Offset = "0x1BE1EC0", VA = "0x1BE1EC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0x1BE0F94", Offset = "0x1BE0F94", VA = "0x1BE0F94")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0x1BE0FC0", Offset = "0x1BE0FC0", VA = "0x1BE0FC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x1BE0FC4", Offset = "0x1BE0FC4", VA = "0x1BE0FC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x1BE1E80", Offset = "0x1BE1E80", VA = "0x1BE1E80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x10796FC", Offset = "0x10796FC", VA = "0x10796FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x1079758", Offset = "0x1079758", VA = "0x1079758")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x1079848", Offset = "0x1079848", VA = "0x1079848")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x1079938", Offset = "0x1079938", VA = "0x1079938")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x10799DC", Offset = "0x10799DC", VA = "0x10799DC")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x1079964", Offset = "0x1079964", VA = "0x1079964")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E156C", Offset = "0x8E156C")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x1079A54", Offset = "0x1079A54", VA = "0x1079A54")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x2000212")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8638", Offset = "0x8D8638")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x4000CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x6000A87")]
			[Address(RVA = "0x1BE1EC8", Offset = "0x1BE1EC8", VA = "0x1BE1EC8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000A88")]
			[Address(RVA = "0x1BE1ED0", Offset = "0x1BE1ED0", VA = "0x1BE1ED0")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000213")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8648", Offset = "0x8D8648")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x4000CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4000CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4000CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x4000CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x170000F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A8C")]
				[Address(RVA = "0x1BE2B84", Offset = "0x1BE2B84", VA = "0x1BE2B84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A8E")]
				[Address(RVA = "0x1BE2BCC", Offset = "0x1BE2BCC", VA = "0x1BE2BCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A89")]
			[Address(RVA = "0x1BE1F90", Offset = "0x1BE1F90", VA = "0x1BE1F90")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0x1BE1FBC", Offset = "0x1BE1FBC", VA = "0x1BE1FBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0x1BE1FC0", Offset = "0x1BE1FC0", VA = "0x1BE1FC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0x1BE2B8C", Offset = "0x1BE2B8C", VA = "0x1BE2B8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x1079A6C", Offset = "0x1079A6C", VA = "0x1079A6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x1079AC8", Offset = "0x1079AC8", VA = "0x1079AC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x1079BB8", Offset = "0x1079BB8", VA = "0x1079BB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x1079CA8", Offset = "0x1079CA8", VA = "0x1079CA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x1079D4C", Offset = "0x1079D4C", VA = "0x1079D4C")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x1079CD4", Offset = "0x1079CD4", VA = "0x1079CD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E161C", Offset = "0x8E161C")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x1079DD4", Offset = "0x1079DD4", VA = "0x1079DD4")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000215")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8658", Offset = "0x8D8658")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x4000CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4000CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x170000F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A97")]
				[Address(RVA = "0x1BE3BA0", Offset = "0x1BE3BA0", VA = "0x1BE3BA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A99")]
				[Address(RVA = "0x1BE3BE8", Offset = "0x1BE3BE8", VA = "0x1BE3BE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x1BE338C", Offset = "0x1BE338C", VA = "0x1BE338C")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x1BE33B8", Offset = "0x1BE33B8", VA = "0x1BE33B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x1BE33BC", Offset = "0x1BE33BC", VA = "0x1BE33BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x1BE3BA8", Offset = "0x1BE3BA8", VA = "0x1BE3BA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x1083918", Offset = "0x1083918", VA = "0x1083918")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x1083984", Offset = "0x1083984", VA = "0x1083984")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x1083A28", Offset = "0x1083A28", VA = "0x1083A28")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x10839B0", Offset = "0x10839B0", VA = "0x10839B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E16CC", Offset = "0x8E16CC")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x1083AAC", Offset = "0x1083AAC", VA = "0x1083AAC")]
		public WarpTextExample()
		{
		}
	}
}
namespace Technie.VirtualConsole
{
	[Token(Token = "0x2000216")]
	public class AutoBreakPanel : DebugPanel
	{
		[Token(Token = "0x2000217")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8668", Offset = "0x8D8668")]
		private sealed class <BreakTimerRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoBreakPanel <>4__this;

			[Token(Token = "0x4000CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsed>5__2;

			[Token(Token = "0x170000F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AA7")]
				[Address(RVA = "0xD4724C", Offset = "0xD4724C", VA = "0xD4724C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AA9")]
				[Address(RVA = "0xD47294", Offset = "0xD47294", VA = "0xD47294", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0xD4706C", Offset = "0xD4706C", VA = "0xD4706C")]
			[DebuggerHidden]
			public <BreakTimerRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0xD47098", Offset = "0xD47098", VA = "0xD47098", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0xD4709C", Offset = "0xD4709C", VA = "0xD4709C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0xD47254", Offset = "0xD47254", VA = "0xD47254", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float breakTimerDelaySecs;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text timerDelayDisplay;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text countdownDisplay;

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x105A7E0", Offset = "0x105A7E0", VA = "0x105A7E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x105A884", Offset = "0x105A884", VA = "0x105A884", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x105A888", Offset = "0x105A888", VA = "0x105A888", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x105A88C", Offset = "0x105A88C", VA = "0x105A88C", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x105A890", Offset = "0x105A890", VA = "0x105A890")]
		public void OnAutoBreak()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x105A8EC", Offset = "0x105A8EC", VA = "0x105A8EC")]
		public void OnIncBreakTimer()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x105A94C", Offset = "0x105A94C", VA = "0x105A94C")]
		public void OnDecBreakTimer()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x105A9B4", Offset = "0x105A9B4", VA = "0x105A9B4")]
		public void OnStartBreakTimer()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x105A9EC", Offset = "0x105A9EC", VA = "0x105A9EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E177C", Offset = "0x8E177C")]
		private IEnumerator BreakTimerRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x105AA64", Offset = "0x105AA64", VA = "0x105AA64")]
		public AutoBreakPanel()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class AutoScreenshot : DebugPanel
	{
		[Token(Token = "0x2000219")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8678", Offset = "0x8D8678")]
		private sealed class <TimerRoutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoScreenshot <>4__this;

			[Token(Token = "0x4000CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsed>5__2;

			[Token(Token = "0x4000CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <path>5__3;

			[Token(Token = "0x170000FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ABD")]
				[Address(RVA = "0xD476D4", Offset = "0xD476D4", VA = "0xD476D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ABF")]
				[Address(RVA = "0xD4771C", Offset = "0xD4771C", VA = "0xD4771C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0xD4729C", Offset = "0xD4729C", VA = "0xD4729C")]
			[DebuggerHidden]
			public <TimerRoutine>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0xD472C8", Offset = "0xD472C8", VA = "0xD472C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0xD472CC", Offset = "0xD472CC", VA = "0xD472CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0xD476DC", Offset = "0xD476DC", VA = "0xD476DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string screenshotOutputFolder;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float screenshotTimerDelaySecs;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int supersamplingAmount;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool hidePanelsOnScreenshot;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text timerDelayDisplay;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text countdownDisplay;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text lastScreenshotPathDisplay;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text captureModeDisplay;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Toggle hidePanelsToggle;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject[] captureModeUiElements;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HandAbstraction handAbstraction;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PanelManager panelManager;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenCapture.StereoScreenCaptureMode captureMode;

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x105AA74", Offset = "0x105AA74", VA = "0x105AA74")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x105AC20", Offset = "0x105AC20", VA = "0x105AC20", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x105AC24", Offset = "0x105AC24", VA = "0x105AC24", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x105AC28", Offset = "0x105AC28", VA = "0x105AC28", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x105AC2C", Offset = "0x105AC2C", VA = "0x105AC2C")]
		public void OnAutoBreak()
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x105AC88", Offset = "0x105AC88", VA = "0x105AC88")]
		public void OnIncTimer()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x105ACE8", Offset = "0x105ACE8", VA = "0x105ACE8")]
		public void OnDecTimer()
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x105AD50", Offset = "0x105AD50", VA = "0x105AD50")]
		public void OnIncSupersampling()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x105AD6C", Offset = "0x105AD6C", VA = "0x105AD6C")]
		public void OnDecSupersampling()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x105AD84", Offset = "0x105AD84", VA = "0x105AD84")]
		public void OnHidePanelsToggled()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x105ADA4", Offset = "0x105ADA4", VA = "0x105ADA4")]
		public void OnNextCaptureMode()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x105ADC8", Offset = "0x105ADC8", VA = "0x105ADC8")]
		public void OnPrevCaptureMode()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x105AB50", Offset = "0x105AB50", VA = "0x105AB50")]
		private void UpdateCaptureModeDisplay()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x105ADEC", Offset = "0x105ADEC", VA = "0x105ADEC")]
		public void OnStartTimer()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x105AE24", Offset = "0x105AE24", VA = "0x105AE24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E182C", Offset = "0x8E182C")]
		private IEnumerator TimerRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x105AE9C", Offset = "0x105AE9C", VA = "0x105AE9C")]
		public AutoScreenshot()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class DebugPanel : MonoBehaviour
	{
		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string panelName;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isAttached;

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xF9A9AC", Offset = "0xF9A9AC", VA = "0xF9A9AC")]
		public bool IsAttached()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xF9A9B4", Offset = "0xF9A9B4", VA = "0xF9A9B4")]
		public void NotifyOnAttach()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xF9A9C8", Offset = "0xF9A9C8", VA = "0xF9A9C8")]
		public void NotifyOnDetach()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xF9A9D8", Offset = "0xF9A9D8", VA = "0xF9A9D8", Slot = "4")]
		public virtual void OnAttach()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xF9A9DC", Offset = "0xF9A9DC", VA = "0xF9A9DC", Slot = "5")]
		public virtual void OnDetach()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xF9A9E0", Offset = "0xF9A9E0", VA = "0xF9A9E0", Slot = "6")]
		public virtual void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xF9A9E4", Offset = "0xF9A9E4", VA = "0xF9A9E4")]
		public DebugPanel()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class ErrorExample : HandTrigger
	{
		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int numErrorsTriggered;

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xFA2418", Offset = "0xFA2418", VA = "0xFA2418", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xFA2B74", Offset = "0xFA2B74", VA = "0xFA2B74")]
		public ErrorExample()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class ExceptionExample : HandTrigger
	{
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xFA2C98", Offset = "0xFA2C98", VA = "0xFA2C98", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xFA2D54", Offset = "0xFA2D54", VA = "0xFA2D54")]
		public ExceptionExample()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class HandTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoxCollider area;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private XrNodeRig xrRig;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool wasInBox;

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xFF5FC0", Offset = "0xFF5FC0", VA = "0xFF5FC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xFF6044", Offset = "0xFF6044", VA = "0xFF6044")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xFF6138", Offset = "0xFF6138", VA = "0xFF6138")]
		private bool IsInBox(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xFF6220", Offset = "0xFF6220", VA = "0xFF6220", Slot = "4")]
		public virtual void OnHandEntered()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xFF6224", Offset = "0xFF6224", VA = "0xFF6224")]
		public HandTrigger()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class InfoExample : HandTrigger
	{
		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int nextBallNumber;

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xFF86B4", Offset = "0xFF86B4", VA = "0xFF86B4", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xFF88B8", Offset = "0xFF88B8", VA = "0xFF88B8")]
		public InfoExample()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class WarningExample : HandTrigger
	{
		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int numWarningsTriggered;

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x10837FC", Offset = "0x10837FC", VA = "0x10837FC", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x1083910", Offset = "0x1083910", VA = "0x1083910")]
		public WarningExample()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public enum HandType
	{
		[Token(Token = "0x4000D09")]
		Invalid,
		[Token(Token = "0x4000D0A")]
		Left,
		[Token(Token = "0x4000D0B")]
		Right
	}
	[Token(Token = "0x2000221")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandType type;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform trackedTransform;

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xFA6C88", Offset = "0xFA6C88", VA = "0xFA6C88")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xFA6C8C", Offset = "0xFA6C8C", VA = "0xFA6C8C")]
		private void TrackTargetHand()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xFA6DDC", Offset = "0xFA6DDC", VA = "0xFA6DDC")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class HandAbstraction : MonoBehaviour
	{
		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VirtualConsole virtualConsole;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material ballMaterial;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material laserMaterial;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite cursorSprite;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material cursorMaterial;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public XrNodeRig xrRig;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PanelManager panelManager;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WandInputModule wandInputModule;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Hand leftHand;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Hand rightHand;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UiStylus leftStylus;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UiStylus rightStylus;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool wasLeftDown;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool wasRightDown;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float findHandsTimer;

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xFA6DE4", Offset = "0xFA6DE4", VA = "0xFA6DE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xFA6DE8", Offset = "0xFA6DE8", VA = "0xFA6DE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xFA6DEC", Offset = "0xFA6DEC", VA = "0xFA6DEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xFA6DF0", Offset = "0xFA6DF0", VA = "0xFA6DF0")]
		private void FindHands()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xFA73F4", Offset = "0xFA73F4", VA = "0xFA73F4")]
		private UiLaser CreateLaser()
		{
			return null;
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xFA71C0", Offset = "0xFA71C0", VA = "0xFA71C0")]
		private UiStylus CreateStylus(HandType type, Transform handTransform, WandInputModule inputModule)
		{
			return null;
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xFA72D0", Offset = "0xFA72D0", VA = "0xFA72D0")]
		private void SetStylusPosition(UiStylus stylus, HandType hand, StylusPosition stylusPosition, Vector3 customStylusPosition)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xFA74E0", Offset = "0xFA74E0", VA = "0xFA74E0")]
		public GameObject GetLeftHand()
		{
			return null;
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xFA74E8", Offset = "0xFA74E8", VA = "0xFA74E8")]
		public GameObject GetRightHand()
		{
			return null;
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xFA74F0", Offset = "0xFA74F0", VA = "0xFA74F0")]
		public bool HasTarget(HandType targetHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xFA75E4", Offset = "0xFA75E4", VA = "0xFA75E4")]
		public void TriggerInput(HandType targetHand)
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xFA75E8", Offset = "0xFA75E8", VA = "0xFA75E8")]
		public void SetStylusVisible(bool visible)
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xFA772C", Offset = "0xFA772C", VA = "0xFA772C")]
		public HandAbstraction()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class IsolatedEventSystem : EventSystem
	{
		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xFFB284", Offset = "0xFFB284", VA = "0xFFB284", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xFFB28C", Offset = "0xFFB28C", VA = "0xFFB28C", Slot = "18")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xFFB314", Offset = "0xFFB314", VA = "0xFFB314")]
		public IsolatedEventSystem()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class PanelManager : MonoBehaviour
	{
		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XrNodeRig xrRig;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrDebugDisplay templateDisplay;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DebugPanel[] panels;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<VrDebugDisplay> displays;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isInitialised;

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xE43998", Offset = "0xE43998", VA = "0xE43998")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xE43A38", Offset = "0xE43A38", VA = "0xE43A38")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xE43A3C", Offset = "0xE43A3C", VA = "0xE43A3C")]
		public void OnHandsDetected(Camera eventCamera)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xE43D48", Offset = "0xE43D48", VA = "0xE43D48")]
		private void CreateDisplay(HandType handType, Transform targetHand, Camera eventCamera)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xE43F28", Offset = "0xE43F28", VA = "0xE43F28")]
		private VrDebugDisplay FindDisplay(HandType type)
		{
			return null;
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xE4405C", Offset = "0xE4405C", VA = "0xE4405C")]
		private DebugPanel FindPanel(string panelName)
		{
			return null;
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xE440E8", Offset = "0xE440E8", VA = "0xE440E8")]
		private void AttachPanel(VrDebugDisplay display, DebugPanel panel)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xE441B4", Offset = "0xE441B4", VA = "0xE441B4")]
		public void ChangePanel(int direction, VrDebugDisplay display, DebugPanel currentPanel)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xE44370", Offset = "0xE44370", VA = "0xE44370")]
		public void SetDisplaysVisible(bool visible)
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xE4449C", Offset = "0xE4449C", VA = "0xE4449C")]
		public PanelManager()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xE4F76C", Offset = "0xE4F76C", VA = "0xE4F76C")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class UiIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x1077C54", Offset = "0x1077C54", VA = "0x1077C54", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x1077C5C", Offset = "0x1077C5C", VA = "0x1077C5C")]
		public UiIgnoreRaycast()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class UiLaser : MonoBehaviour
	{
		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ReadOnly]
		public GameObject targetHand;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WandInputModule inputModule;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject cylinder;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VrDebugDisplay[] displays;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float lastDistance;

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x1077C64", Offset = "0x1077C64", VA = "0x1077C64")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x1077D4C", Offset = "0x1077D4C", VA = "0x1077D4C")]
		public void CreateBeam(Material material)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x1077E8C", Offset = "0x1077E8C", VA = "0x1077E8C")]
		public void OnHandDetected(int index, GameObject handObj, WandInputModule wandInputModule)
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x1077EC4", Offset = "0x1077EC4", VA = "0x1077EC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x1078380", Offset = "0x1078380", VA = "0x1078380")]
		private float CalcOpacity()
		{
			return default(float);
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x1078408", Offset = "0x1078408", VA = "0x1078408")]
		private float CalcOpacity(VrDebugDisplay display)
		{
			return default(float);
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x1078304", Offset = "0x1078304", VA = "0x1078304")]
		public bool IsPointingAtPanel()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x10784AC", Offset = "0x10784AC", VA = "0x10784AC")]
		private bool IsPointingAtPanel(VrDebugDisplay display)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x10785A8", Offset = "0x10785A8", VA = "0x10785A8")]
		public UiLaser()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class UiStylus : MonoBehaviour
	{
		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material laserMaterial;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material ballMaterial;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandType handType;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WandInputModule inputModule;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VrDebugDisplay[] displays;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject sphereObj;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject laserObj;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isButtonDown;

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x10785BC", Offset = "0x10785BC", VA = "0x10785BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x10788D0", Offset = "0x10788D0", VA = "0x10788D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x1078DD8", Offset = "0x1078DD8", VA = "0x1078DD8")]
		private void SetVisualEnabled(bool visible)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x1078B74", Offset = "0x1078B74", VA = "0x1078B74")]
		private VrDebugDisplay FindClosestDisplay()
		{
			return null;
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x1078DF8", Offset = "0x1078DF8", VA = "0x1078DF8")]
		public bool IsPointingAtPanel()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1078E70", Offset = "0x1078E70", VA = "0x1078E70")]
		public UiStylus()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public enum StylusPosition
	{
		[Token(Token = "0x4000D30")]
		Bottom,
		[Token(Token = "0x4000D31")]
		Left,
		[Token(Token = "0x4000D32")]
		Right,
		[Token(Token = "0x4000D33")]
		Top,
		[Token(Token = "0x4000D34")]
		Custom
	}
	[Token(Token = "0x200022A")]
	public enum CameraDetectionMode
	{
		[Token(Token = "0x4000D36")]
		Automatic,
		[Token(Token = "0x4000D37")]
		UseExplicitCameraReference,
		[Token(Token = "0x4000D38")]
		UseExplicitCameraName
	}
	[Token(Token = "0x200022B")]
	public class VirtualConsole : MonoBehaviour
	{
		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onlyInDebugBuilds;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC498", Offset = "0x8DC498")]
		public StylusPosition leftStylusPosition;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StylusPosition rightStylusPosition;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC4D0", Offset = "0x8DC4D0")]
		public Vector3 customLeftStylusPosition;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 customRightStylusPosition;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC508", Offset = "0x8DC508")]
		public CameraDetectionMode cameraDetectionMode;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera explicitVrCameraReference;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string explicitVrCameraName;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualConsole instance;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HandAbstraction handAbstraction;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private XrNodeRig xrNodeRig;

		[Token(Token = "0x170000FC")]
		public static VirtualConsole Instance
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x1079DEC", Offset = "0x1079DEC", VA = "0x1079DEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x1079E38", Offset = "0x1079E38", VA = "0x1079E38")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x1079F74", Offset = "0x1079F74", VA = "0x1079F74")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x107A044", Offset = "0x107A044", VA = "0x107A044")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x107A0E0", Offset = "0x107A0E0", VA = "0x107A0E0")]
		public GameObject GetHand(HandType hand)
		{
			return null;
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x107A1A0", Offset = "0x107A1A0", VA = "0x107A1A0")]
		public bool HasTarget(HandType targetHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x107A248", Offset = "0x107A248", VA = "0x107A248")]
		public void TriggerInput(HandType targetHand)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x107A2EC", Offset = "0x107A2EC", VA = "0x107A2EC")]
		public VirtualConsole()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class VrConsole : DebugPanel
	{
		[Token(Token = "0x200022D")]
		private struct LogMessage
		{
			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string text;

			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string stackTrace;

			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LogType type;

			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int sequenceNumber;

			[Token(Token = "0x6000B22")]
			[Address(RVA = "0x895438", Offset = "0x895438", VA = "0x895438")]
			public LogMessage(string t, string trace, LogType type, int seqNum)
			{
			}
		}

		[Token(Token = "0x200022E")]
		private struct LogLine
		{
			[Token(Token = "0x4000D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string text;

			[Token(Token = "0x4000D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color colour;

			[Token(Token = "0x6000B23")]
			[Address(RVA = "0x895304", Offset = "0x895304", VA = "0x895304")]
			public LogLine(string s, Color c)
			{
			}

			[Token(Token = "0x6000B24")]
			[Address(RVA = "0x895354", Offset = "0x895354", VA = "0x895354")]
			public string AsRichText()
			{
				return null;
			}

			[Token(Token = "0x6000B25")]
			[Address(RVA = "0x1BE3000", Offset = "0x1BE3000", VA = "0x1BE3000")]
			private static string ToHex(float val)
			{
				return null;
			}
		}

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<LogType, Color> logTypeColors;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text consoleArea;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button infoToggleButton;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button warningToggleButton;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button errorToggleButton;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text infoButtonText;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text warningButtonText;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text errorButtonText;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private object mutex;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<LogMessage> infoMessages;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<LogMessage> warningMessages;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<LogMessage> errorMessages;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int numInfos;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int numWarnings;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int numErrors;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int nextSequenceNumber;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool hasMessagesChanged;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool showInfo;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		private bool showWarnings;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		private bool showErrors;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int maxLines;

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x107CFC4", Offset = "0x107CFC4", VA = "0x107CFC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x107D040", Offset = "0x107D040", VA = "0x107D040")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x107D0BC", Offset = "0x107D0BC", VA = "0x107D0BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x107E038", Offset = "0x107E038", VA = "0x107E038")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x107E048", Offset = "0x107E048", VA = "0x107E048", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x107E04C", Offset = "0x107E04C", VA = "0x107E04C", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x107E050", Offset = "0x107E050", VA = "0x107E050", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x107E054", Offset = "0x107E054", VA = "0x107E054")]
		private void HandleLog(string text, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x107D0E0", Offset = "0x107D0E0", VA = "0x107D0E0")]
		private void UpdateLogVisual()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x107E6B8", Offset = "0x107E6B8", VA = "0x107E6B8")]
		private bool TryGenerateConsoleText(List<LogLine> lines, Text targetTextArea, int numLines, out string newText)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x107E228", Offset = "0x107E228", VA = "0x107E228")]
		private List<LogMessage> FindList(LogType type)
		{
			return null;
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x107E26C", Offset = "0x107E26C", VA = "0x107E26C")]
		private void IncLogCount(LogType type)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x107E8C4", Offset = "0x107E8C4", VA = "0x107E8C4")]
		private int SequenceComparator(LogMessage lhs, LogMessage rhs)
		{
			return default(int);
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x107E2BC", Offset = "0x107E2BC", VA = "0x107E2BC")]
		private bool ParseTrace(string traceLine, out string namespaceName, out string className, out string methodName, out string fileName, out int lineNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x107E8E4", Offset = "0x107E8E4", VA = "0x107E8E4")]
		public void ClearLog()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x107EA34", Offset = "0x107EA34", VA = "0x107EA34")]
		public void ToggleInfo()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x107EA4C", Offset = "0x107EA4C", VA = "0x107EA4C")]
		public void ToggleWarnings()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x107EA64", Offset = "0x107EA64", VA = "0x107EA64")]
		public void ToggleErrors()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x107DE74", Offset = "0x107DE74", VA = "0x107DE74")]
		private void UpdateButtonColours()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x107EA7C", Offset = "0x107EA7C", VA = "0x107EA7C")]
		private static void SetColour(Button button, Color col)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x107EAEC", Offset = "0x107EAEC", VA = "0x107EAEC")]
		private static void SetText(Text text, int count)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x107EB44", Offset = "0x107EB44", VA = "0x107EB44")]
		public VrConsole()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class VrDebugDisplay : MonoBehaviour
	{
		[Token(Token = "0x2000230")]
		public enum State
		{
			[Token(Token = "0x4000D6F")]
			Collapsed,
			[Token(Token = "0x4000D70")]
			NormalSize,
			[Token(Token = "0x4000D71")]
			LargeSize
		}

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Canvas mainCanvas;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas collapsedCanvas;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandType handType;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform center;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform panelAttach;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float panelScale;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text titleText;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text maximiseText;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PanelManager panelManager;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[ReadOnly]
		public GameObject targetHand;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[ReadOnly]
		public Camera eventCamera;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State state;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private State prevState;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DebugPanel attachedPanel;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool disableCanvasWhenNotInView;

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x107ED88", Offset = "0x107ED88", VA = "0x107ED88")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x107EEDC", Offset = "0x107EEDC", VA = "0x107EEDC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x107EEE0", Offset = "0x107EEE0", VA = "0x107EEE0")]
		private void TrackTargetHand()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x107F178", Offset = "0x107F178", VA = "0x107F178")]
		public void AllowDisableCanvasWhenNotInView(bool allow)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x107F184", Offset = "0x107F184", VA = "0x107F184")]
		public void OnToggleSize()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x107F380", Offset = "0x107F380", VA = "0x107F380")]
		public void OnCollapse()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x107F3E4", Offset = "0x107F3E4", VA = "0x107F3E4")]
		public void OnRestore()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x107F45C", Offset = "0x107F45C", VA = "0x107F45C")]
		public void OnNextPanel()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x107F484", Offset = "0x107F484", VA = "0x107F484")]
		public void OnPrevPanel()
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x1078D0C", Offset = "0x1078D0C", VA = "0x1078D0C")]
		public float DistanceTo(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x1078CB4", Offset = "0x1078CB4", VA = "0x1078CB4")]
		public Vector3 FindClosestPoint(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x107F4AC", Offset = "0x107F4AC", VA = "0x107F4AC")]
		private Vector3 ClosestPoint(Vector3 worldPosition, Canvas canvas, Vector2 canvasSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x107F570", Offset = "0x107F570", VA = "0x107F570")]
		public void Attach(DebugPanel newPanel)
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x107F80C", Offset = "0x107F80C", VA = "0x107F80C")]
		public void SetDisplayVisible(bool visible)
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x107F854", Offset = "0x107F854", VA = "0x107F854")]
		public VrDebugDisplay()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class VrDebugStats : DebugPanel
	{
		[Token(Token = "0x2000232")]
		private class StatPage
		{
			[Token(Token = "0x4000D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<string, string> stats;

			[Token(Token = "0x6000B47")]
			[Address(RVA = "0x1BE30D8", Offset = "0x1BE30D8", VA = "0x1BE30D8")]
			public StatPage(string cat)
			{
			}

			[Token(Token = "0x6000B48")]
			[Address(RVA = "0x1BE315C", Offset = "0x1BE315C", VA = "0x1BE315C")]
			public void SetStat(string name, string value)
			{
			}

			[Token(Token = "0x6000B49")]
			[Address(RVA = "0x1BE31C8", Offset = "0x1BE31C8", VA = "0x1BE31C8")]
			public void GetStats(List<string> keys, List<string> values)
			{
			}
		}

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text pageTitle;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text fullPanelText;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text leftCollumnText;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text rightCollumnText;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool allowLogging;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, StatPage> pages;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<string> categories;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool hasStatsChanged;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string currentCategory;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool useTwoCollumns;

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x107F86C", Offset = "0x107F86C", VA = "0x107F86C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x107F920", Offset = "0x107F920", VA = "0x107F920")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x107FF7C", Offset = "0x107FF7C", VA = "0x107FF7C", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x107FFE4", Offset = "0x107FFE4", VA = "0x107FFE4", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x107FFE8", Offset = "0x107FFE8", VA = "0x107FFE8", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x107F9B8", Offset = "0x107F9B8", VA = "0x107F9B8")]
		private void UpdateStats()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x10802C4", Offset = "0x10802C4", VA = "0x10802C4")]
		private bool TryGenerateConsoleText(List<string> lines, Text targetTextArea, int numLines, out string newText)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x1080454", Offset = "0x1080454", VA = "0x1080454")]
		public void ClearStats()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x1080540", Offset = "0x1080540", VA = "0x1080540")]
		public void PrevCategory()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x1080768", Offset = "0x1080768", VA = "0x1080768")]
		public void NextCateogry()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x1080548", Offset = "0x1080548", VA = "0x1080548")]
		private void ChangeCategory(int direction)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x1080770", Offset = "0x1080770", VA = "0x1080770")]
		public static void AllowLogging(bool allow)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x10807DC", Offset = "0x10807DC", VA = "0x10807DC")]
		public static void SetStat(string category, string name, bool value)
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1080930", Offset = "0x1080930", VA = "0x1080930")]
		public static void SetStat(string category, string name, int value)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x1080870", Offset = "0x1080870", VA = "0x1080870")]
		public static void SetStat(string category, string name, string value)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x10800E0", Offset = "0x10800E0", VA = "0x10800E0")]
		private static StatPage FindPage(string categoryName)
		{
			return null;
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x10809C0", Offset = "0x10809C0", VA = "0x10809C0")]
		public VrDebugStats()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class WandInputModule : BaseInputModule
	{
		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WandInputModule Instance;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC560", Offset = "0x8DC560")]
		public Sprite CursorSprite;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material CursorMaterial;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float NormalCursorScale;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC598", Offset = "0x8DC598")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC598", Offset = "0x8DC598")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DC598", Offset = "0x8DC598")]
		public bool guiHit;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC60C", Offset = "0x8DC60C")]
		public bool ButtonUsed;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC644", Offset = "0x8DC644")]
		public RectTransform[] Cursors;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC67C", Offset = "0x8DC67C")]
		public Camera ControllerCamera;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color[] cursorColours;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool ignoreOverlayCanvases;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform[] raycastOrigin;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool[] raycastActive;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject[] CurrentPoint;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject[] CurrentPressed;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject[] CurrentDragging;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] CurrentRaycastPosition;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Ray[] LastRays;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private PointerEventData[] PointEvents;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool[] latchedDownEdges;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool[] latchedUpEdges;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool Initialized;

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x1080FB0", Offset = "0x1080FB0", VA = "0x1080FB0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x1080FB8", Offset = "0x1080FB8", VA = "0x1080FB8", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x1080FC0", Offset = "0x1080FC0", VA = "0x1080FC0")]
		public void OnHandsDetected(HandAbstraction hands)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x1081920", Offset = "0x1081920", VA = "0x1081920")]
		public void SetRaycastOrigins(Transform leftOrigin, Transform rightOrigin)
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x1078C60", Offset = "0x1078C60", VA = "0x1078C60")]
		public void SetRaycastActive(HandType hand, bool isActive)
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x1080FC4", Offset = "0x1080FC4", VA = "0x1080FC4")]
		private void Initialise()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1081A4C", Offset = "0x1081A4C", VA = "0x1081A4C")]
		public Camera GetControllerCamera()
		{
			return null;
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1081A54", Offset = "0x1081A54", VA = "0x1081A54")]
		private bool GetLookPointerEventData(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1081FB8", Offset = "0x1081FB8", VA = "0x1081FB8")]
		private static Canvas FindParentCanvas(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x10820EC", Offset = "0x10820EC", VA = "0x10820EC")]
		private void UpdateCursor(int index, PointerEventData pointData)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x1082450", Offset = "0x1082450", VA = "0x1082450")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x10824E8", Offset = "0x10824E8", VA = "0x10824E8")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x10825E0", Offset = "0x10825E0", VA = "0x10825E0")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x1082744", Offset = "0x1082744", VA = "0x1082744")]
		private void UpdateCameraPosition(int index)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x10827F4", Offset = "0x10827F4", VA = "0x10827F4", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x108359C", Offset = "0x108359C", VA = "0x108359C")]
		private bool ButtonDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x10835EC", Offset = "0x10835EC", VA = "0x10835EC")]
		private bool ButtonUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x1078D98", Offset = "0x1078D98", VA = "0x1078D98")]
		public void LatchButtonDown(int index)
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x1078D58", Offset = "0x1078D58", VA = "0x1078D58")]
		public void LatchButtonUp(int index)
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x107820C", Offset = "0x107820C", VA = "0x107820C")]
		public bool HasCurrentPointTarget(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x10782BC", Offset = "0x10782BC", VA = "0x10782BC")]
		public Vector3 GetCurrentPointPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x108363C", Offset = "0x108363C", VA = "0x108363C")]
		public bool HasLeftPointTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x10836C8", Offset = "0x10836C8", VA = "0x10836C8")]
		public bool HasRightPointTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x1083758", Offset = "0x1083758", VA = "0x1083758")]
		public void SetCursorsVisible(bool visible)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x10837E0", Offset = "0x10837E0", VA = "0x10837E0")]
		public WandInputModule()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class XrNodeRig : MonoBehaviour
	{
		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform headTransform;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftHandTransform;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHandTransform;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CameraDetectionMode cameraDetectionMode;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera explicitVrCameraReference;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string explicitVrCameraName;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera vrCamera;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool hasShowExplicitCameraWarning;

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xD43F78", Offset = "0xD43F78", VA = "0xD43F78")]
		public void SetCameraDetection(CameraDetectionMode mode, Camera explicitRef, string explicitName)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xD43FB4", Offset = "0xD43FB4", VA = "0xD43FB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xD44810", Offset = "0xD44810", VA = "0xD44810")]
		private void Sync(XRNodeState node, Transform destTransform)
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xD44434", Offset = "0xD44434", VA = "0xD44434")]
		private bool IsVrCameraValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xD444E0", Offset = "0xD444E0", VA = "0xD444E0")]
		private void FindVrCamera()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xD448D8", Offset = "0xD448D8", VA = "0xD448D8")]
		public XrNodeRig()
		{
		}
	}
}
namespace ironrain
{
	[Token(Token = "0x2000235")]
	[ExecuteInEditMode]
	public class AssignMaterialQueue : MonoBehaviour
	{
		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer Renderer;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Queue;

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x105448C", Offset = "0x105448C", VA = "0x105448C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x1054550", Offset = "0x1054550", VA = "0x1054550")]
		private void ChangeQueue()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x105463C", Offset = "0x105463C", VA = "0x105463C")]
		public AssignMaterialQueue()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x2000236")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xF9852C", Offset = "0xF9852C", VA = "0xF9852C")]
		public void Start()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xF986E8", Offset = "0xF986E8", VA = "0xF986E8")]
		public void Update()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xF98838", Offset = "0xF98838", VA = "0xF98838", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xF9883C", Offset = "0xF9883C", VA = "0xF9883C", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xF988CC", Offset = "0xF988CC", VA = "0xF988CC", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xF989CC", Offset = "0xF989CC", VA = "0xF989CC", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xF989D0", Offset = "0xF989D0", VA = "0xF989D0", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xF989D4", Offset = "0xF989D4", VA = "0xF989D4", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xF98ACC", Offset = "0xF98ACC", VA = "0xF98ACC", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xF98AD0", Offset = "0xF98AD0", VA = "0xF98AD0", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xF98AD4", Offset = "0xF98AD4", VA = "0xF98AD4", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xF98AD8", Offset = "0xF98AD8", VA = "0xF98AD8", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xF98ADC", Offset = "0xF98ADC", VA = "0xF98ADC", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xF98AE0", Offset = "0xF98AE0", VA = "0xF98AE0", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xF98AE4", Offset = "0xF98AE4", VA = "0xF98AE4", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xF98AE8", Offset = "0xF98AE8", VA = "0xF98AE8", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xF98B5C", Offset = "0xF98B5C", VA = "0xF98B5C", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xF98B60", Offset = "0xF98B60", VA = "0xF98B60", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xF98C1C", Offset = "0xF98C1C", VA = "0xF98C1C", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xF98C20", Offset = "0xF98C20", VA = "0xF98C20")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xF98D50", Offset = "0xF98D50", VA = "0xF98D50")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x2000237")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xFA2B7C", Offset = "0xFA2B7C", VA = "0xFA2B7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xFA2C90", Offset = "0xFA2C90", VA = "0xFA2C90")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x18E3590", Offset = "0x18E3590", VA = "0x18E3590")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x18E3608", Offset = "0x18E3608", VA = "0x18E3608")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8698", Offset = "0x8D8698")]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x1071530", Offset = "0x1071530", VA = "0x1071530")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x107158C", Offset = "0x107158C", VA = "0x107158C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x10715BC", Offset = "0x10715BC", VA = "0x10715BC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x10715EC", Offset = "0x10715EC", VA = "0x10715EC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x10716A8", Offset = "0x10716A8", VA = "0x10716A8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x1071764", Offset = "0x1071764", VA = "0x1071764")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D86F8", Offset = "0x8D86F8")]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x10724D4", Offset = "0x10724D4", VA = "0x10724D4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x1072640", Offset = "0x1072640", VA = "0x1072640")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x10725DC", Offset = "0x10725DC", VA = "0x10725DC")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x1072704", Offset = "0x1072704", VA = "0x1072704", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x107277C", Offset = "0x107277C", VA = "0x107277C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x10727F0", Offset = "0x10727F0", VA = "0x10727F0")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace Photon.Voice.Unity.Demos
{
	[Token(Token = "0x200023B")]
	public class BackgroundMusicController : MonoBehaviour
	{
		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text volumeText;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider volumeSlider;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float initialVolume;

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x105B678", Offset = "0x105B678", VA = "0x105B678")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x105B76C", Offset = "0x105B76C", VA = "0x105B76C")]
		private void OnVolumeChanged(float newValue)
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x105B82C", Offset = "0x105B82C", VA = "0x105B82C")]
		public BackgroundMusicController()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class SidebarToggle : MonoBehaviour
	{
		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button sidebarButton;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform panelsHolder;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float sidebarWidth;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool sidebarOpen;

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x132BEB4", Offset = "0x132BEB4", VA = "0x132BEB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x132BF98", Offset = "0x132BF98", VA = "0x132BF98")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E18DC", Offset = "0x8E18DC")]
		private void ToggleSidebar()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x132BF74", Offset = "0x132BF74", VA = "0x132BF74")]
		private void ToggleSidebar(bool open)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x132BFB0", Offset = "0x132BFB0", VA = "0x132BFB0")]
		public SidebarToggle()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public static class UiExtensions
	{
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x10776C0", Offset = "0x10776C0", VA = "0x10776C0")]
		public static void SetPosX(this RectTransform rectTransform, float x)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x1077718", Offset = "0x1077718", VA = "0x1077718")]
		public static void SetHeight(this RectTransform rectTransform, float h)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x1077734", Offset = "0x1077734", VA = "0x1077734")]
		public static void SetValue(this Toggle toggle, bool isOn)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x1077750", Offset = "0x1077750", VA = "0x1077750")]
		public static void SetValue(this Slider slider, float v)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x1077770", Offset = "0x1077770", VA = "0x1077770")]
		public static void SetValue(this InputField inputField, string v)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x1077788", Offset = "0x1077788", VA = "0x1077788")]
		public static void DestroyChildren(this Transform transform)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x10778AC", Offset = "0x10778AC", VA = "0x10778AC")]
		public static void Hide(this CanvasGroup canvasGroup, bool blockRaycasts = false, bool interactable = false)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x1077908", Offset = "0x1077908", VA = "0x1077908")]
		public static void Show(this CanvasGroup canvasGroup, bool blockRaycasts = true, bool interactable = true)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x1077964", Offset = "0x1077964", VA = "0x1077964")]
		public static bool IsHidden(this CanvasGroup canvasGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x107798C", Offset = "0x107798C", VA = "0x107798C")]
		public static bool IsShown(this CanvasGroup canvasGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x10779B4", Offset = "0x10779B4", VA = "0x10779B4")]
		public static void SetSingleOnClickCallback(this Button button, UnityAction action)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x10779FC", Offset = "0x10779FC", VA = "0x10779FC")]
		public static void SetSingleOnValueChangedCallback(this Toggle toggle, UnityAction<bool> action)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x1077A74", Offset = "0x1077A74", VA = "0x1077A74")]
		public static void SetSingleOnValueChangedCallback(this InputField inputField, UnityAction<string> action)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x1077AEC", Offset = "0x1077AEC", VA = "0x1077AEC")]
		public static void SetSingleOnEndEditCallback(this InputField inputField, UnityAction<string> action)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x1077B64", Offset = "0x1077B64", VA = "0x1077B64")]
		public static void SetSingleOnValueChangedCallback(this Dropdown inputField, UnityAction<int> action)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x1077BDC", Offset = "0x1077BDC", VA = "0x1077BDC")]
		public static void SetSingleOnValueChangedCallback(this Slider slider, UnityAction<float> action)
		{
		}
	}
}
namespace Photon.Voice.Unity.Demos.DemoVoiceUI
{
	[Token(Token = "0x200023E")]
	public class CodecSettingsUI : MonoBehaviour
	{
		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Dropdown frameDurationDropdown;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown samplingRateDropdown;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputField bitrateInputField;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<string> frameDurationOptions;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<string> samplingRateOptions;

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xF97364", Offset = "0xF97364", VA = "0xF97364")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xF976B0", Offset = "0xF976B0", VA = "0xF976B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xF976DC", Offset = "0xF976DC", VA = "0xF976DC")]
		private void OnBitrateChanged(string newBitrateString)
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xF97748", Offset = "0xF97748", VA = "0xF97748")]
		private void OnFrameDurationChanged(int index)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xF977B8", Offset = "0xF977B8", VA = "0xF977B8")]
		private void OnSamplingRateChanged(int index)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xF97560", Offset = "0xF97560", VA = "0xF97560")]
		private void InitFrameDuration()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xF975F0", Offset = "0xF975F0", VA = "0xF975F0")]
		private void InitSamplingRate()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xF9765C", Offset = "0xF9765C", VA = "0xF9765C")]
		private void InitBitrate()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xF97828", Offset = "0xF97828", VA = "0xF97828")]
		public CodecSettingsUI()
		{
		}
	}
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8768", Offset = "0x8D8768")]
	public class DemoVoiceUI : MonoBehaviour, IInRoomCallbacks, IMatchmakingCallbacks
	{
		[Serializable]
		[Token(Token = "0x2000240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D87F0", Offset = "0x8D87F0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IAudioDesc> <>9__68_0;

			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0xD4A35C", Offset = "0xD4A35C", VA = "0xD4A35C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0xD4A364", Offset = "0xD4A364", VA = "0xD4A364")]
			internal IAudioDesc <ToggleAudioToneFactory>b__68_0()
			{
				return null;
			}
		}

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text connectionStatusText;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text serverStatusText;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text roomStatusText;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text inputWarningText;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text rttText;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text rttVariationText;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text packetLossWarningText;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InputField localNicknameText;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle debugEchoToggle;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle reliableTransmissionToggle;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle encryptionToggle;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject webRtcDspGameObject;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle aecToggle;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle aecHighPassToggle;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InputField reverseStreamDelayInputField;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle noiseSuppressionToggle;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle agcToggle;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Slider agcCompressionGainSlider;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Toggle vadToggle;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Toggle muteToggle;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Toggle streamAudioClipToggle;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Toggle audioToneToggle;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Toggle dspToggle;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Toggle highPassToggle;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Toggle photonVadToggle;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject microphoneSetupGameObject;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private bool defaultTransmitEnabled;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private int screenWidth;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int screenHeight;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private bool fullScreen;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private InputField roomNameInputField;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private InputField globalMinDelaySoftInputField;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private InputField globalMaxDelaySoftInputField;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private InputField globalMaxDelayHardInputField;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private int rttYellowThreshold;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private int rttRedThreshold;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private int rttVariationYellowThreshold;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private int rttVariationRedThreshold;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GameObject compressionGainGameObject;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Text compressionGainText;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GameObject aecOptionsGameObject;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Transform RemoteVoicesPanel;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VoiceConnection voiceConnection;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private WebRtcAudioDsp voiceAudioPreprocessor;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private ConnectAndJoin connectAndJoin;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private readonly Color warningColor;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private readonly Color okColor;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private readonly Color redColor;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private readonly Color defaultColor;

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xF9D544", Offset = "0xF9D544", VA = "0xF9D544")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xF9E274", Offset = "0xF9E274", VA = "0xF9E274", Slot = "16")]
		protected virtual void SetDefaults()
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xF9E2A0", Offset = "0xF9E2A0", VA = "0xF9E2A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xF9E35C", Offset = "0xF9E35C", VA = "0xF9E35C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xF9E1D4", Offset = "0xF9E1D4", VA = "0xF9E1D4")]
		private void GetSavedNickname()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xF9E418", Offset = "0xF9E418", VA = "0xF9E418", Slot = "17")]
		protected virtual void OnSpeakerCreated(Speaker speaker)
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xF9E55C", Offset = "0xF9E55C", VA = "0xF9E55C")]
		private void OnRemoteVoiceRemove(Speaker speaker)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xF9E614", Offset = "0xF9E614", VA = "0xF9E614")]
		private void ToggleMute(bool isOn)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xF9E684", Offset = "0xF9E684", VA = "0xF9E684", Slot = "18")]
		protected virtual void ToggleIsRecording(bool isRecording)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xF9E6C0", Offset = "0xF9E6C0", VA = "0xF9E6C0")]
		private void ToggleDebugEcho(bool isOn)
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xF9E6FC", Offset = "0xF9E6FC", VA = "0xF9E6FC")]
		private void ToggleReliable(bool isOn)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xF9E738", Offset = "0xF9E738", VA = "0xF9E738")]
		private void ToggleEncryption(bool isOn)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xF9E774", Offset = "0xF9E774", VA = "0xF9E774")]
		private void ToggleAEC(bool isOn)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xF9E7BC", Offset = "0xF9E7BC", VA = "0xF9E7BC")]
		private void ToggleNoiseSuppression(bool isOn)
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xF9E7DC", Offset = "0xF9E7DC", VA = "0xF9E7DC")]
		private void ToggleAGC(bool isOn)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xF9E824", Offset = "0xF9E824", VA = "0xF9E824")]
		private void ToggleVAD(bool isOn)
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xF9E844", Offset = "0xF9E844", VA = "0xF9E844")]
		private void ToggleHighPass(bool isOn)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xF9E864", Offset = "0xF9E864", VA = "0xF9E864")]
		private void ToggleDsp(bool isOn)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xF9E8C8", Offset = "0xF9E8C8", VA = "0xF9E8C8")]
		private void ToggleAudioClipStreaming(bool isOn)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xF9E9C8", Offset = "0xF9E9C8", VA = "0xF9E9C8")]
		private void ToggleAudioToneFactory(bool isOn)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xF9EC00", Offset = "0xF9EC00", VA = "0xF9EC00")]
		private void TogglePhotonVAD(bool isOn)
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xF9EC3C", Offset = "0xF9EC3C", VA = "0xF9EC3C")]
		private void ToggleAecHighPass(bool isOn)
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xF9EC5C", Offset = "0xF9EC5C", VA = "0xF9EC5C")]
		private void OnAgcCompressionGainChanged(float agcCompressionGain)
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xF9ED1C", Offset = "0xF9ED1C", VA = "0xF9ED1C")]
		private void OnGlobalPlaybackDelayMinSoftChanged(string newMinDelaySoftString)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xF9EDF8", Offset = "0xF9EDF8", VA = "0xF9EDF8")]
		private void OnGlobalPlaybackDelayMaxSoftChanged(string newMaxDelaySoftString)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xF9EED0", Offset = "0xF9EED0", VA = "0xF9EED0")]
		private void OnGlobalPlaybackDelayMaxHardChanged(string newMaxDelayHardString)
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xF9EFA8", Offset = "0xF9EFA8", VA = "0xF9EFA8")]
		private void OnReverseStreamDelayChanged(string newReverseStreamString)
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xF9F03C", Offset = "0xF9F03C", VA = "0xF9F03C")]
		private void UpdateSyncedNickname(string nickname)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xF9F0F4", Offset = "0xF9F0F4", VA = "0xF9F0F4")]
		private void JoinOrCreateRoom(string roomName)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xF9F240", Offset = "0xF9F240", VA = "0xF9F240", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xF9F7FC", Offset = "0xF9F7FC", VA = "0xF9F7FC")]
		private void SetTextColor(int textValue, Text text, int yellowThreshold, int redThreshold)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xF9F7C4", Offset = "0xF9F7C4", VA = "0xF9F7C4")]
		private void ResetTextColor(Text text)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xF9D6F4", Offset = "0xF9D6F4", VA = "0xF9D6F4")]
		private void InitUiCallbacks()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xF9DD6C", Offset = "0xF9DD6C", VA = "0xF9DD6C")]
		private void InitUiValues()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xF9F87C", Offset = "0xF9F87C", VA = "0xF9F87C")]
		private void SetRoomDebugText()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xF9FB60", Offset = "0xF9FB60", VA = "0xF9FB60", Slot = "20")]
		protected virtual void OnActorPropertiesChanged(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xF9FBD8", Offset = "0xF9FBD8", VA = "0xF9FBD8", Slot = "4")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xF9FBDC", Offset = "0xF9FBDC", VA = "0xF9FBDC", Slot = "5")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xF9FBE0", Offset = "0xF9FBE0", VA = "0xF9FBE0", Slot = "6")]
		private void Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xF9FBE4", Offset = "0xF9FBE4", VA = "0xF9FBE4", Slot = "7")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xF9FBF4", Offset = "0xF9FBF4", VA = "0xF9FBF4", Slot = "8")]
		private void Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xF9FBF8", Offset = "0xF9FBF8", VA = "0xF9FBF8", Slot = "9")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xF9FBFC", Offset = "0xF9FBFC", VA = "0xF9FBFC", Slot = "10")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xF9FC00", Offset = "0xF9FC00", VA = "0xF9FC00", Slot = "11")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xF9FC04", Offset = "0xF9FC04", VA = "0xF9FC04", Slot = "12")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xF9FC08", Offset = "0xF9FC08", VA = "0xF9FC08", Slot = "13")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xF9FC0C", Offset = "0xF9FC0C", VA = "0xF9FC0C", Slot = "14")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xF9FC10", Offset = "0xF9FC10", VA = "0xF9FC10", Slot = "15")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xF9FC88", Offset = "0xF9FC88", VA = "0xF9FC88")]
		public DemoVoiceUI()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public struct MicRef
	{
		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Recorder.MicType MicType;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PhotonId;

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x86D0DC", Offset = "0x86D0DC", VA = "0x86D0DC")]
		public MicRef(string name, int id)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x86D114", Offset = "0x86D114", VA = "0x86D114")]
		public MicRef(string name)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x86D148", Offset = "0x86D148", VA = "0x86D148", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000242")]
	public class MicrophoneDropdownFiller : MonoBehaviour
	{
		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<MicRef> micOptions;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown micDropdown;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DC9E4", Offset = "0x8DC9E4")]
		[SerializeField]
		private GameObject refreshButton;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DCA30", Offset = "0x8DCA30")]
		private GameObject toggleButton;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Toggle photonToggle;

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x1100ECC", Offset = "0x1100ECC", VA = "0x1100ECC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x1100F64", Offset = "0x1100F64", VA = "0x1100F64")]
		private void SetupMicDropdown()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x110121C", Offset = "0x110121C", VA = "0x110121C")]
		private void MicDropdownValueChanged(MicRef mic)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x11012B4", Offset = "0x11012B4", VA = "0x11012B4")]
		private void SetCurrentValue()
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x11016B4", Offset = "0x11016B4", VA = "0x11016B4")]
		public void PhotonMicToggled(bool on)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x1100F40", Offset = "0x1100F40", VA = "0x1100F40")]
		public void RefreshMicrophones()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x1101764", Offset = "0x1101764", VA = "0x1101764")]
		private void PhotonVoiceCreated()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x1101788", Offset = "0x1101788", VA = "0x1101788")]
		public MicrophoneDropdownFiller()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x1101790", Offset = "0x1101790", VA = "0x1101790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A14", Offset = "0x8E1A14")]
		private void <SetupMicDropdown>b__7_0(int <p0>)
		{
		}
	}
	[Token(Token = "0x2000243")]
	public static class PhotonDemoExtensions
	{
		[Token(Token = "0x4000DF5")]
		internal const string IS_MUTED_PROPERTY_KEY = "mute";

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xE454EC", Offset = "0xE454EC", VA = "0xE454EC")]
		public static bool Mute(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xE455DC", Offset = "0xE455DC", VA = "0xE455DC")]
		public static bool Unmute(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xE456C8", Offset = "0xE456C8", VA = "0xE456C8")]
		public static bool IsMuted(this Player player)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8810", Offset = "0x8D8810")]
	public class RemoteSpeakerUI : MonoBehaviour, IInRoomCallbacks
	{
		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text nameText;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Image remoteIsMuting;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image remoteIsTalking;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputField minDelaySoftInputField;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InputField maxDelaySoftInputField;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputField maxDelayHardInputField;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Speaker speaker;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VoiceConnection voiceConnection;

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xE50490", Offset = "0xE50490", VA = "0xE50490", Slot = "9")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xE507E4", Offset = "0xE507E4", VA = "0xE507E4")]
		private void OnMinDelaySoftChanged(string newMinDelaySoftString)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xE508C0", Offset = "0xE508C0", VA = "0xE508C0")]
		private void OnMaxDelaySoftChanged(string newMaxDelaySoftString)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xE50998", Offset = "0xE50998", VA = "0xE50998")]
		private void OnMaxDelayHardChanged(string newMaxDelayHardString)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xE50A70", Offset = "0xE50A70", VA = "0xE50A70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xE50B54", Offset = "0xE50B54", VA = "0xE50B54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xE506B4", Offset = "0xE506B4", VA = "0xE506B4")]
		private void SetNickname()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xE507A4", Offset = "0xE507A4", VA = "0xE507A4")]
		private void SetMutedState()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xE50B90", Offset = "0xE50B90", VA = "0xE50B90", Slot = "10")]
		protected virtual void SetMutedState(bool isMuted)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xE50BB0", Offset = "0xE50BB0", VA = "0xE50BB0", Slot = "11")]
		protected virtual void OnActorPropertiesChanged(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xE50C0C", Offset = "0xE50C0C", VA = "0xE50C0C", Slot = "12")]
		public virtual void Init(VoiceConnection vC)
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xE50C58", Offset = "0xE50C58", VA = "0xE50C58", Slot = "4")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xE50C5C", Offset = "0xE50C5C", VA = "0xE50C5C", Slot = "5")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xE50C60", Offset = "0xE50C60", VA = "0xE50C60", Slot = "6")]
		private void Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xE50C64", Offset = "0xE50C64", VA = "0xE50C64", Slot = "7")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xE50C70", Offset = "0xE50C70", VA = "0xE50C70", Slot = "8")]
		private void Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xE50C74", Offset = "0xE50C74", VA = "0xE50C74")]
		public RemoteSpeakerUI()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x2000245")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x105B208", Offset = "0x105B208", VA = "0x105B208")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x105B328", Offset = "0x105B328", VA = "0x105B328")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x105B4D8", Offset = "0x105B4D8", VA = "0x105B4D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x105B4F4", Offset = "0x105B4F4", VA = "0x105B4F4", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x105B5B4", Offset = "0x105B5B4", VA = "0x105B5B4", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x105B608", Offset = "0x105B608", VA = "0x105B608")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x105F910", Offset = "0x105F910", VA = "0x105F910")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x105F914", Offset = "0x105F914", VA = "0x105F914")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x105F97C", Offset = "0x105F97C", VA = "0x105F97C")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x105F9E4", Offset = "0x105F9E4", VA = "0x105F9E4")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x105FA4C", Offset = "0x105FA4C", VA = "0x105FA4C")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x105FAB4", Offset = "0x105FAB4", VA = "0x105FAB4")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x105FB1C", Offset = "0x105FB1C", VA = "0x105FB1C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x105FB20", Offset = "0x105FB20", VA = "0x105FB20")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x2000248")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4000E0A")]
			Hardware,
			[Token(Token = "0x4000E0B")]
			Touch
		}

		[Token(Token = "0x2000249")]
		public class VirtualAxis
		{
			[Token(Token = "0x4000E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCAEC", Offset = "0x8DCAEC")]
			private string <name>k__BackingField;

			[Token(Token = "0x4000E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x4000E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCAFC", Offset = "0x8DCAFC")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x170000FE")]
			public string name
			{
				[Token(Token = "0x6000C2D")]
				[Address(RVA = "0xD493A8", Offset = "0xD493A8", VA = "0xD493A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A54", Offset = "0x8E1A54")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000C2E")]
				[Address(RVA = "0xD493B0", Offset = "0xD493B0", VA = "0xD493B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A64", Offset = "0x8E1A64")]
				private set
				{
				}
			}

			[Token(Token = "0x170000FF")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6000C2F")]
				[Address(RVA = "0xD493B8", Offset = "0xD493B8", VA = "0xD493B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A74", Offset = "0x8E1A74")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000C30")]
				[Address(RVA = "0xD493C0", Offset = "0xD493C0", VA = "0xD493C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A84", Offset = "0x8E1A84")]
				private set
				{
				}
			}

			[Token(Token = "0x17000100")]
			public float GetValue
			{
				[Token(Token = "0x6000C35")]
				[Address(RVA = "0xD494C8", Offset = "0xD494C8", VA = "0xD494C8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000101")]
			public float GetValueRaw
			{
				[Token(Token = "0x6000C36")]
				[Address(RVA = "0xD494D0", Offset = "0xD494D0", VA = "0xD494D0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000C31")]
			[Address(RVA = "0xD493CC", Offset = "0xD493CC", VA = "0xD493CC")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6000C32")]
			[Address(RVA = "0xD4940C", Offset = "0xD4940C", VA = "0xD4940C")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6000C33")]
			[Address(RVA = "0xD49458", Offset = "0xD49458", VA = "0xD49458")]
			public void Remove()
			{
			}

			[Token(Token = "0x6000C34")]
			[Address(RVA = "0xD494C0", Offset = "0xD494C0", VA = "0xD494C0")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x200024A")]
		public class VirtualButton
		{
			[Token(Token = "0x4000E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCB0C", Offset = "0x8DCB0C")]
			private string <name>k__BackingField;

			[Token(Token = "0x4000E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCB1C", Offset = "0x8DCB1C")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x4000E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x4000E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x4000E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x17000102")]
			public string name
			{
				[Token(Token = "0x6000C37")]
				[Address(RVA = "0xD494D8", Offset = "0xD494D8", VA = "0xD494D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A94", Offset = "0x8E1A94")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000C38")]
				[Address(RVA = "0xD494E0", Offset = "0xD494E0", VA = "0xD494E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1AA4", Offset = "0x8E1AA4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000103")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6000C39")]
				[Address(RVA = "0xD494E8", Offset = "0xD494E8", VA = "0xD494E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1AB4", Offset = "0x8E1AB4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000C3A")]
				[Address(RVA = "0xD494F0", Offset = "0xD494F0", VA = "0xD494F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1AC4", Offset = "0x8E1AC4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000104")]
			public bool GetButton
			{
				[Token(Token = "0x6000C40")]
				[Address(RVA = "0xD49668", Offset = "0xD49668", VA = "0xD49668")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000105")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6000C41")]
				[Address(RVA = "0xD49670", Offset = "0xD49670", VA = "0xD49670")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000106")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6000C42")]
				[Address(RVA = "0xD496A0", Offset = "0xD496A0", VA = "0xD496A0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0xD494FC", Offset = "0xD494FC", VA = "0xD494FC")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0xD49544", Offset = "0xD49544", VA = "0xD49544")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0xD49598", Offset = "0xD49598", VA = "0xD49598")]
			public void Pressed()
			{
			}

			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0xD495D4", Offset = "0xD495D4", VA = "0xD495D4")]
			public void Released()
			{
			}

			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0xD49600", Offset = "0xD49600", VA = "0xD49600")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x170000FD")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0xF9A2AC", Offset = "0xF9A2AC", VA = "0xF9A2AC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xF997D8", Offset = "0xF997D8", VA = "0xF997D8")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xF998A0", Offset = "0xF998A0", VA = "0xF998A0")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xF99954", Offset = "0xF99954", VA = "0xF99954")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xF999CC", Offset = "0xF999CC", VA = "0xF999CC")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xF99A44", Offset = "0xF99A44", VA = "0xF99A44")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xF99ABC", Offset = "0xF99ABC", VA = "0xF99ABC")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xF99B34", Offset = "0xF99B34", VA = "0xF99B34")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xF99BF8", Offset = "0xF99BF8", VA = "0xF99BF8")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xF99C70", Offset = "0xF99C70", VA = "0xF99C70")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xF99CE8", Offset = "0xF99CE8", VA = "0xF99CE8")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xF99DD8", Offset = "0xF99DD8", VA = "0xF99DD8")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xF99D4C", Offset = "0xF99D4C", VA = "0xF99D4C")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xF99E3C", Offset = "0xF99E3C", VA = "0xF99E3C")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xF99EB8", Offset = "0xF99EB8", VA = "0xF99EB8")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xF99F34", Offset = "0xF99F34", VA = "0xF99F34")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xF99FB0", Offset = "0xF99FB0", VA = "0xF99FB0")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xF9A02C", Offset = "0xF9A02C", VA = "0xF9A02C")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xF9A0A8", Offset = "0xF9A0A8", VA = "0xF9A0A8")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xF9A124", Offset = "0xF9A124", VA = "0xF9A124")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xF9A1A0", Offset = "0xF9A1A0", VA = "0xF9A1A0")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xF9A21C", Offset = "0xF9A21C", VA = "0xF9A21C")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xF9A324", Offset = "0xF9A324", VA = "0xF9A324")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xF9A3A4", Offset = "0xF9A3A4", VA = "0xF9A3A4")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xF9A424", Offset = "0xF9A424", VA = "0xF9A424")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xFF88C8", Offset = "0xFF88C8", VA = "0xFF88C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xFF88CC", Offset = "0xFF88CC", VA = "0xFF88CC")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xFF894C", Offset = "0xFF894C", VA = "0xFF894C")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x200024D")]
		public enum AxisOption
		{
			[Token(Token = "0x4000E1F")]
			Both,
			[Token(Token = "0x4000E20")]
			OnlyHorizontal,
			[Token(Token = "0x4000E21")]
			OnlyVertical
		}

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xFFB684", Offset = "0xFFB684", VA = "0xFFB684")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xFFB7E4", Offset = "0xFFB7E4", VA = "0xFFB7E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xFFB820", Offset = "0xFFB820", VA = "0xFFB820")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xFFB688", Offset = "0xFFB688", VA = "0xFFB688")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xFFB884", Offset = "0xFFB884", VA = "0xFFB884", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xFFB978", Offset = "0xFFB978", VA = "0xFFB978", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xFFB9C0", Offset = "0xFFB9C0", VA = "0xFFB9C0", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xFFB9C4", Offset = "0xFFB9C4", VA = "0xFFB9C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xFFBA1C", Offset = "0xFFBA1C", VA = "0xFFBA1C")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x200024E")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x110189C", Offset = "0x110189C", VA = "0x110189C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x11018AC", Offset = "0x11018AC", VA = "0x11018AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x11018A4", Offset = "0x11018A4", VA = "0x11018A4")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x11019C0", Offset = "0x11019C0", VA = "0x11019C0")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1101CD4", Offset = "0x1101CD4", VA = "0x1101CD4")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8880", Offset = "0x8D8880")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x2000250")]
		public enum AxisOption
		{
			[Token(Token = "0x4000E35")]
			Both,
			[Token(Token = "0x4000E36")]
			OnlyHorizontal,
			[Token(Token = "0x4000E37")]
			OnlyVertical
		}

		[Token(Token = "0x2000251")]
		public enum ControlStyle
		{
			[Token(Token = "0x4000E39")]
			Absolute,
			[Token(Token = "0x4000E3A")]
			Relative,
			[Token(Token = "0x4000E3B")]
			Swipe
		}

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x10734D0", Offset = "0x10734D0", VA = "0x10734D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x1073630", Offset = "0x1073630", VA = "0x1073630")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x10734D4", Offset = "0x10734D4", VA = "0x10734D4")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x10736B8", Offset = "0x10736B8", VA = "0x10736B8")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x1073724", Offset = "0x1073724", VA = "0x1073724", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x107375C", Offset = "0x107375C", VA = "0x107375C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x10738A4", Offset = "0x10738A4", VA = "0x10738A4", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x10738D8", Offset = "0x10738D8", VA = "0x10738D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x10739D8", Offset = "0x10739D8", VA = "0x10739D8")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCB2C", Offset = "0x8DCB2C")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x17000107")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x107A2FC", Offset = "0x107A2FC", VA = "0x107A2FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1AD4", Offset = "0x8E1AD4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0x107A308", Offset = "0x107A308", VA = "0x107A308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1AE4", Offset = "0x8E1AE4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x107A314", Offset = "0x107A314", VA = "0x107A314")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x107A378", Offset = "0x107A378", VA = "0x107A378")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x107A3DC", Offset = "0x107A3DC", VA = "0x107A3DC")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x107A53C", Offset = "0x107A53C", VA = "0x107A53C")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x107A69C", Offset = "0x107A69C", VA = "0x107A69C")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x107A73C", Offset = "0x107A73C", VA = "0x107A73C")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x107A7DC", Offset = "0x107A7DC", VA = "0x107A7DC")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x107A878", Offset = "0x107A878", VA = "0x107A878")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x107A880", Offset = "0x107A880", VA = "0x107A880")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x107A888", Offset = "0x107A888", VA = "0x107A888")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x6000C69")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x6000C6A")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x6000C6B")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x6000C6C")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x6000C6D")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x6000C6E")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x6000C6F")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6000C70")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6000C71")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6000C72")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6000C73")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x107A890", Offset = "0x107A890", VA = "0x107A890")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x2000253")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1101CDC", Offset = "0x1101CDC", VA = "0x1101CDC")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1101D6C", Offset = "0x1101D6C", VA = "0x1101D6C")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x1101DFC", Offset = "0x1101DFC", VA = "0x1101DFC", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1101EA0", Offset = "0x1101EA0", VA = "0x1101EA0", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1101F44", Offset = "0x1101F44", VA = "0x1101F44", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x1101FE8", Offset = "0x1101FE8", VA = "0x1101FE8", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1102090", Offset = "0x1102090", VA = "0x1102090", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1102138", Offset = "0x1102138", VA = "0x1102138", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x11021DC", Offset = "0x11021DC", VA = "0x11021DC", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x110228C", Offset = "0x110228C", VA = "0x110228C", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1102330", Offset = "0x1102330", VA = "0x1102330", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x11023D4", Offset = "0x11023D4", VA = "0x11023D4", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x1102478", Offset = "0x1102478", VA = "0x1102478", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1102484", Offset = "0x1102484", VA = "0x1102484")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1334620", Offset = "0x1334620", VA = "0x1334620", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1334634", Offset = "0x1334634", VA = "0x1334634", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1334640", Offset = "0x1334640", VA = "0x1334640", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x133464C", Offset = "0x133464C", VA = "0x133464C", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1334658", Offset = "0x1334658", VA = "0x1334658", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x13346AC", Offset = "0x13346AC", VA = "0x13346AC", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1334700", Offset = "0x1334700", VA = "0x1334700", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1334754", Offset = "0x1334754", VA = "0x1334754", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x13347A8", Offset = "0x13347A8", VA = "0x13347A8", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x13347FC", Offset = "0x13347FC", VA = "0x13347FC", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1334850", Offset = "0x1334850", VA = "0x1334850", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x1334858", Offset = "0x1334858", VA = "0x1334858")]
		public StandaloneInput()
		{
		}
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D88E0", Offset = "0x8D88E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D88E0", Offset = "0x8D88E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D88E0", Offset = "0x8D88E0")]
	public abstract class BaseController : MonoBehaviour
	{
		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera ControllerCamera;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Rigidbody rigidBody;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator animator;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform camTrans;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float h;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float v;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float cameraDistance;

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x105B83C", Offset = "0x105B83C", VA = "0x105B83C", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x105B968", Offset = "0x105B968", VA = "0x105B968", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x105BA94", Offset = "0x105BA94", VA = "0x105BA94", Slot = "6")]
		protected virtual void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x105BB48", Offset = "0x105BB48", VA = "0x105BB48", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x105BBE0", Offset = "0x105BBE0", VA = "0x105BBE0", Slot = "8")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x105BC6C", Offset = "0x105BC6C", VA = "0x105BC6C", Slot = "9")]
		protected virtual void SetCamera()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x105BD1C", Offset = "0x105BD1C", VA = "0x105BD1C", Slot = "10")]
		protected virtual void UpdateAnimator(float h, float v)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x105BD98", Offset = "0x105BD98", VA = "0x105BD98", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x105BEC8", Offset = "0x105BEC8", VA = "0x105BEC8", Slot = "12")]
		protected virtual void ShowCamera(Camera camera)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x105BF64", Offset = "0x105BF64", VA = "0x105BF64", Slot = "13")]
		protected virtual void HideCamera(Camera camera)
		{
		}

		[Token(Token = "0x6000C99")]
		protected abstract void Move(float h, float v);

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x105C000", Offset = "0x105C000", VA = "0x105C000")]
		protected BaseController()
		{
		}
	}
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D89A8", Offset = "0x8D89A8")]
	[DisallowMultipleComponent]
	public class BetterToggle : MonoBehaviour
	{
		[Token(Token = "0x2000257")]
		public delegate void OnToggle(Toggle toggle);

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x1400002B")]
		public static event OnToggle ToggleValueChanged
		{
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x105D164", Offset = "0x105D164", VA = "0x105D164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1AF4", Offset = "0x8E1AF4")]
			add
			{
			}
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x105D220", Offset = "0x105D220", VA = "0x105D220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B04", Offset = "0x8E1B04")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x105D2DC", Offset = "0x105D2DC", VA = "0x105D2DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x105D3D0", Offset = "0x105D3D0", VA = "0x105D3D0")]
		public void OnToggleValueChanged()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x105D438", Offset = "0x105D438", VA = "0x105D438")]
		public BetterToggle()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x105D440", Offset = "0x105D440", VA = "0x105D440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B14", Offset = "0x8E1B14")]
		private void <Start>b__5_0(bool <p0>)
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class ChangePOV : MonoBehaviour, IMatchmakingCallbacks
	{
		[Token(Token = "0x2000259")]
		public delegate void OnCameraChanged(Camera newCamera);

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ThirdPersonController thirdPersonController;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OrthographicController orthographicController;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialCameraPosition;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initialCameraRotation;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera defaultCamera;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject ButtonsHolder;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button FirstPersonCamActivator;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button ThirdPersonCamActivator;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button OrthographicCamActivator;

		[Token(Token = "0x1400002C")]
		public static event OnCameraChanged CameraChanged
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x105B8AC", Offset = "0x105B8AC", VA = "0x105B8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B24", Offset = "0x8E1B24")]
			add
			{
			}
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x105B9D8", Offset = "0x105B9D8", VA = "0x105B9D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B34", Offset = "0x8E1B34")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x1068B04", Offset = "0x1068B04", VA = "0x1068B04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x1068C70", Offset = "0x1068C70", VA = "0x1068C70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x1068DDC", Offset = "0x1068DDC", VA = "0x1068DDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x1069024", Offset = "0x1069024", VA = "0x1069024")]
		private void OnCharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x1069138", Offset = "0x1069138", VA = "0x1069138")]
		private void FirstPersonMode()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x10692D8", Offset = "0x10692D8", VA = "0x10692D8")]
		private void ThirdPersonMode()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x10692E0", Offset = "0x10692E0", VA = "0x10692E0")]
		private void OrthographicMode()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1069140", Offset = "0x1069140", VA = "0x1069140")]
		private void ToggleMode(BaseController controller)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x10692E8", Offset = "0x10692E8", VA = "0x10692E8")]
		private void BroadcastChange(Camera camera)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1069390", Offset = "0x1069390", VA = "0x1069390", Slot = "4")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x1069394", Offset = "0x1069394", VA = "0x1069394", Slot = "5")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1069398", Offset = "0x1069398", VA = "0x1069398", Slot = "6")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x106939C", Offset = "0x106939C", VA = "0x106939C", Slot = "7")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x10693A0", Offset = "0x10693A0", VA = "0x10693A0", Slot = "8")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x10693A4", Offset = "0x10693A4", VA = "0x10693A4", Slot = "9")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x10693A8", Offset = "0x10693A8", VA = "0x10693A8", Slot = "10")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x10694C0", Offset = "0x10694C0", VA = "0x10694C0")]
		public ChangePOV()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class CharacterInstantiation : MonoBehaviourPunCallbacks, IOnEventCallback
	{
		[Token(Token = "0x200025B")]
		public enum SpawnSequence
		{
			[Token(Token = "0x4000E64")]
			Connection,
			[Token(Token = "0x4000E65")]
			Random,
			[Token(Token = "0x4000E66")]
			RoundRobin
		}

		[Token(Token = "0x200025C")]
		public delegate void OnCharacterInstantiated(GameObject character);

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SpawnPosition;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PositionOffset;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] PrefabsToInstantiate;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Transform> SpawnPoints;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool AutoSpawn;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool UseRandomOffset;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SpawnSequence Sequence;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private byte manualInstantiationEventCode;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected int lastUsedSpawnPointIndex;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool manualInstantiation;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool differentPrefabs;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string localPrefabSuffix;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string remotePrefabSuffix;

		[Token(Token = "0x1400002D")]
		public static event OnCharacterInstantiated CharacterInstantiated
		{
			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0x1068BB4", Offset = "0x1068BB4", VA = "0x1068BB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B44", Offset = "0x8E1B44")]
			add
			{
			}
			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x1068D20", Offset = "0x1068D20", VA = "0x1068D20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B54", Offset = "0x8E1B54")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x106AE9C", Offset = "0x106AE9C", VA = "0x106AE9C", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x106B0D0", Offset = "0x106B0D0", VA = "0x106B0D0")]
		private void ManualInstantiation(int index, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x106B65C", Offset = "0x106B65C", VA = "0x106B65C", Slot = "54")]
		public void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x106B9BC", Offset = "0x106B9BC", VA = "0x106B9BC", Slot = "55")]
		protected virtual void GetSpawnPoint(out Vector3 spawnPos, out Quaternion spawnRot)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x106BB44", Offset = "0x106BB44", VA = "0x106BB44", Slot = "56")]
		protected virtual Transform GetSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x106BCB8", Offset = "0x106BCB8", VA = "0x106BCB8")]
		public CharacterInstantiation()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class FirstPersonController : BaseController
	{
		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MouseLookHelper mouseLook;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float oldYRotation;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion velRotation;

		[Token(Token = "0x17000108")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0xFA3E3C", Offset = "0xFA3E3C", VA = "0xFA3E3C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xFA3E58", Offset = "0xFA3E58", VA = "0xFA3E58", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xFA3EA4", Offset = "0xFA3EA4", VA = "0xFA3EA4", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xFA3F38", Offset = "0xFA3F38", VA = "0xFA3F38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xFA3F3C", Offset = "0xFA3F3C", VA = "0xFA3F3C")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xFA4050", Offset = "0xFA4050", VA = "0xFA4050")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8A18", Offset = "0x8D8A18")]
	public class Highlighter : MonoBehaviour
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas canvas;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhotonVoiceView photonVoiceView;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image recorderSprite;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image speakerSprite;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool showSpeakerLag;

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xFF7C18", Offset = "0xFF7C18", VA = "0xFF7C18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xFF7CE4", Offset = "0xFF7CE4", VA = "0xFF7CE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xFF7DB0", Offset = "0xFF7DB0", VA = "0xFF7DB0")]
		private void VoiceDemoUI_DebugToggled(bool debugMode)
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xFF7DBC", Offset = "0xFF7DBC", VA = "0xFF7DBC")]
		private void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xFF7DD8", Offset = "0xFF7DD8", VA = "0xFF7DD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xFF7F1C", Offset = "0xFF7F1C", VA = "0xFF7F1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xFF8080", Offset = "0xFF8080", VA = "0xFF8080")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xFF81AC", Offset = "0xFF81AC", VA = "0xFF81AC")]
		public Highlighter()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class OrthographicController : ThirdPersonController
	{
		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float smoothing;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 offset;

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x18E3624", Offset = "0x18E3624", VA = "0x18E3624", Slot = "8")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x18E365C", Offset = "0x18E365C", VA = "0x18E365C", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x18E36DC", Offset = "0x18E36DC", VA = "0x18E36DC", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x18E3704", Offset = "0x18E3704", VA = "0x18E3704")]
		private void CameraFollow()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x18E37D0", Offset = "0x18E37D0", VA = "0x18E37D0")]
		public OrthographicController()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class ThirdPersonController : BaseController
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float movingTurnSpeed;

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x1072854", Offset = "0x1072854", VA = "0x1072854", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x1072974", Offset = "0x1072974", VA = "0x1072974")]
		public ThirdPersonController()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class VoiceDemoUI : MonoBehaviour
	{
		[Token(Token = "0x2000262")]
		public delegate void OnDebugToggle(bool debugMode);

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text punState;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text voiceState;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonVoiceNetwork punVoiceNetwork;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Canvas canvas;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button punSwitch;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text punSwitchText;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button voiceSwitch;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text voiceSwitchText;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text calibrateText;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text voiceDebugText;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Recorder recorder;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject inGameSettings;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject globalSettings;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text devicesInfoText;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject debugGO;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool debugMode;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float volumeBeforeMute;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DebugLevel previousDebugLevel;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int calibrationMilliSeconds;

		[Token(Token = "0x17000109")]
		public bool DebugMode
		{
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x107A9AC", Offset = "0x107A9AC", VA = "0x107A9AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x107A9B4", Offset = "0x107A9B4", VA = "0x107A9B4")]
			set
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public static event OnDebugToggle DebugToggled
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x107AADC", Offset = "0x107AADC", VA = "0x107AADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B64", Offset = "0x8E1B64")]
			add
			{
			}
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x107AB98", Offset = "0x107AB98", VA = "0x107AB98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B74", Offset = "0x8E1B74")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x107AC54", Offset = "0x107AC54", VA = "0x107AC54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x107ACC4", Offset = "0x107ACC4", VA = "0x107ACC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x107AEF4", Offset = "0x107AEF4", VA = "0x107AEF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x107B124", Offset = "0x107B124", VA = "0x107B124")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x107B1F0", Offset = "0x107B1F0", VA = "0x107B1F0")]
		private void InitToggles(Toggle[] toggles)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x107B598", Offset = "0x107B598", VA = "0x107B598")]
		private void BetterToggle_ToggleValueChanged(Toggle toggle)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x107B91C", Offset = "0x107B91C", VA = "0x107B91C")]
		private void OnCameraChanged(Camera newCamera)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x107B938", Offset = "0x107B938", VA = "0x107B938")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x107BF74", Offset = "0x107BF74", VA = "0x107BF74")]
		private void PunSwitchOnClick()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x107C078", Offset = "0x107C078", VA = "0x107C078")]
		private void VoiceSwitchOnClick()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x107C10C", Offset = "0x107C10C", VA = "0x107C10C")]
		private void CalibrateButtonOnClick()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x107C1B4", Offset = "0x107C1B4", VA = "0x107C1B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x107C3E0", Offset = "0x107C3E0", VA = "0x107C3E0")]
		private void PunClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x107C9B8", Offset = "0x107C9B8", VA = "0x107C9B8")]
		private void VoiceClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x107C570", Offset = "0x107C570", VA = "0x107C570")]
		private void UpdateUiBasedOnVoiceState(ClientState voiceClientState)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x107C9C0", Offset = "0x107C9C0", VA = "0x107C9C0")]
		public VoiceDemoUI()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000263")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700010A")]
		public bool Highlight
		{
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0xF97B58", Offset = "0xF97B58", VA = "0xF97B58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0xF97B60", Offset = "0xF97B60", VA = "0xF97B60")]
			set
			{
			}
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xF97B6C", Offset = "0xF97B6C", VA = "0xF97B6C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xF97D34", Offset = "0xF97D34", VA = "0xF97D34", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xF97D5C", Offset = "0xF97D5C", VA = "0xF97D5C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xF97D84", Offset = "0xF97D84", VA = "0xF97D84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xF97C34", Offset = "0xF97C34", VA = "0xF97C34")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xF98058", Offset = "0xF98058", VA = "0xF98058")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700010B")]
		public bool InRange
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0xF9FD8C", Offset = "0xF9FD8C", VA = "0xF9FD8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0xF9FD94", Offset = "0xF9FD94", VA = "0xF9FD94")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public bool Targeted
		{
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0xF9FF0C", Offset = "0xF9FF0C", VA = "0xF9FF0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0xF9FF14", Offset = "0xF9FF14", VA = "0xF9FF14")]
			set
			{
			}
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xF9FF20", Offset = "0xF9FF20", VA = "0xF9FF20", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xF9FDA0", Offset = "0xF9FDA0", VA = "0xF9FDA0")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xFA0128", Offset = "0xFA0128", VA = "0xFA0128")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8A78", Offset = "0x8D8A78")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700010D")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0xFA0130", Offset = "0xFA0130", VA = "0xFA0130")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0xFA0138", Offset = "0xFA0138", VA = "0xFA0138")]
			set
			{
			}
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xFA0154", Offset = "0xFA0154", VA = "0xFA0154", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xFA0394", Offset = "0xFA0394", VA = "0xFA0394", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xFA0CAC", Offset = "0xFA0CAC", VA = "0xFA0CAC", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xFA1140", Offset = "0xFA1140", VA = "0xFA1140", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xFA1400", Offset = "0xFA1400", VA = "0xFA1400")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xFA0608", Offset = "0xFA0608", VA = "0xFA0608")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xFA14F0", Offset = "0xFA14F0", VA = "0xFA14F0")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xFA194C", Offset = "0xFA194C", VA = "0xFA194C", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xFA1964", Offset = "0xFA1964", VA = "0xFA1964", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xFA196C", Offset = "0xFA196C", VA = "0xFA196C")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xFA4EB4", Offset = "0xFA4EB4", VA = "0xFA4EB4")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xFA4F6C", Offset = "0xFA4F6C", VA = "0xFA4F6C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xFA5020", Offset = "0xFA5020", VA = "0xFA5020")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000268")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000EAA")]
			Disabled,
			[Token(Token = "0x4000EAB")]
			Enabled,
			[Token(Token = "0x4000EAC")]
			Targeted
		}

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xFA53F4", Offset = "0xFA53F4", VA = "0xFA53F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xFA008C", Offset = "0xFA008C", VA = "0xFA008C")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xFA5460", Offset = "0xFA5460", VA = "0xFA5460")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xFA54A8", Offset = "0xFA54A8", VA = "0xFA54A8")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xE44CE8", Offset = "0xE44CE8", VA = "0xE44CE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xE44DD4", Offset = "0xE44DD4", VA = "0xE44DD4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xE44DE0", Offset = "0xE44DE0", VA = "0xE44DE0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xE44DEC", Offset = "0xE44DEC", VA = "0xE44DEC")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x105DB58", Offset = "0x105DB58", VA = "0x105DB58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x105DBAC", Offset = "0x105DBAC", VA = "0x105DBAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x105DED0", Offset = "0x105DED0", VA = "0x105DED0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x105DFD4", Offset = "0x105DFD4", VA = "0x105DFD4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x105DBB0", Offset = "0x105DBB0", VA = "0x105DBB0")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x105E0D8", Offset = "0x105E0D8", VA = "0x105E0D8")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200026C")]
		public enum ContactTest
		{
			[Token(Token = "0x4000EBE")]
			PerpenTest,
			[Token(Token = "0x4000EBF")]
			BackwardsPress
		}

		[Token(Token = "0x4000EB0")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000EB1")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700010E")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x105ECC0", Offset = "0x105ECC0", VA = "0x105ECC0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010F")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x105ECC8", Offset = "0x105ECC8", VA = "0x105ECC8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x105ECD4", Offset = "0x105ECD4", VA = "0x105ECD4", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x105EDE8", Offset = "0x105EDE8", VA = "0x105EDE8")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x105EF54", Offset = "0x105EF54", VA = "0x105EF54", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x105F4F8", Offset = "0x105F4F8", VA = "0x105F4F8")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x105F410", Offset = "0x105F410", VA = "0x105F410")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x105F5A4", Offset = "0x105F5A4", VA = "0x105F5A4")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x105F628", Offset = "0x105F628", VA = "0x105F628")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x105F6B4", Offset = "0x105F6B4", VA = "0x105F6B4")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCE4C", Offset = "0x8DCE4C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCE5C", Offset = "0x8DCE5C")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000110")]
		public Collider Collider
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x105FB28", Offset = "0x105FB28", VA = "0x105FB28", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B84", Offset = "0x8E1B84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x105FB30", Offset = "0x105FB30", VA = "0x105FB30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B94", Offset = "0x8E1B94")]
			private set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x105FB38", Offset = "0x105FB38", VA = "0x105FB38", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BA4", Offset = "0x8E1BA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x105FB40", Offset = "0x105FB40", VA = "0x105FB40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BB4", Offset = "0x8E1BB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x105FB48", Offset = "0x105FB48", VA = "0x105FB48", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x105FB98", Offset = "0x105FB98", VA = "0x105FB98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x105FC2C", Offset = "0x105FC2C", VA = "0x105FC2C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000113")]
		Collider Collider
		{
			[Token(Token = "0x6000D33")]
			get;
		}

		[Token(Token = "0x17000114")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000D34")]
			get;
		}

		[Token(Token = "0x17000115")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000D35")]
			get;
		}
	}
	[Token(Token = "0x200026F")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xF97AA0", Offset = "0xF97AA0", VA = "0xF97AA0")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000270")]
	public enum InteractionType
	{
		[Token(Token = "0x4000EC8")]
		Enter,
		[Token(Token = "0x4000EC9")]
		Stay,
		[Token(Token = "0x4000ECA")]
		Exit
	}
	[Token(Token = "0x2000271")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000272")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000EDC")]
			Mesh,
			[Token(Token = "0x4000EDD")]
			Skeleton,
			[Token(Token = "0x4000EDE")]
			Both
		}

		[Token(Token = "0x2000273")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8AD8", Offset = "0x8D8AD8")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000121")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D58")]
				[Address(RVA = "0xD4B404", Offset = "0xD4B404", VA = "0xD4B404", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000122")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D5A")]
				[Address(RVA = "0xD4B44C", Offset = "0xD4B44C", VA = "0xD4B44C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D55")]
			[Address(RVA = "0xD4B170", Offset = "0xD4B170", VA = "0xD4B170")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000D56")]
			[Address(RVA = "0xD4B19C", Offset = "0xD4B19C", VA = "0xD4B19C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D57")]
			[Address(RVA = "0xD4B1A0", Offset = "0xD4B1A0", VA = "0xD4B1A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D59")]
			[Address(RVA = "0xD4B40C", Offset = "0xD4B40C", VA = "0xD4B40C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ECB")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCE8C", Offset = "0x8DCE8C")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000116")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0xFF66B0", Offset = "0xFF66B0", VA = "0xFF66B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0xFF66E8", Offset = "0xFF66E8", VA = "0xFF66E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0xFF6758", Offset = "0xFF6758", VA = "0xFF6758")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0xFF6790", Offset = "0xFF6790", VA = "0xFF6790")]
			private set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0xFF6800", Offset = "0xFF6800", VA = "0xFF6800")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0xFF6838", Offset = "0xFF6838", VA = "0xFF6838")]
			private set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0xFF68A8", Offset = "0xFF68A8", VA = "0xFF68A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0xFF68E0", Offset = "0xFF68E0", VA = "0xFF68E0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0xFF6950", Offset = "0xFF6950", VA = "0xFF6950")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0xFF6988", Offset = "0xFF6988", VA = "0xFF6988")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000D41")]
			[Address(RVA = "0xFF69F8", Offset = "0xFF69F8", VA = "0xFF69F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0xFF6A2C", Offset = "0xFF6A2C", VA = "0xFF6A2C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0xFF6A98", Offset = "0xFF6A98", VA = "0xFF6A98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0xFF6ACC", Offset = "0xFF6ACC", VA = "0xFF6ACC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0xFF6B38", Offset = "0xFF6B38", VA = "0xFF6B38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0xFF6B6C", Offset = "0xFF6B6C", VA = "0xFF6B6C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0xFF6BD8", Offset = "0xFF6BD8", VA = "0xFF6BD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xFF6C0C", Offset = "0xFF6C0C", VA = "0xFF6C0C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0xFF6C78", Offset = "0xFF6C78", VA = "0xFF6C78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xFF6CAC", Offset = "0xFF6CAC", VA = "0xFF6CAC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0xFF6D18", Offset = "0xFF6D18", VA = "0xFF6D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BC4", Offset = "0x8E1BC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0xFF6D64", Offset = "0xFF6D64", VA = "0xFF6D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BD4", Offset = "0x8E1BD4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xFF6DB8", Offset = "0xFF6DB8", VA = "0xFF6DB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xFF718C", Offset = "0xFF718C", VA = "0xFF718C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xFF7114", Offset = "0xFF7114", VA = "0xFF7114")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1BE4", Offset = "0x8E1BE4")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xFF7214", Offset = "0xFF7214", VA = "0xFF7214")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xFF72F8", Offset = "0xFF72F8", VA = "0xFF72F8")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xFF74D8", Offset = "0xFF74D8", VA = "0xFF74D8")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xFF7714", Offset = "0xFF7714", VA = "0xFF7714")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xFF78A0", Offset = "0xFF78A0", VA = "0xFF78A0")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000275")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0xD4B5C4", Offset = "0xD4B5C4", VA = "0xD4B5C4")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000123")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xFF8C5C", Offset = "0xFF8C5C", VA = "0xFF8C5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0xFF8C64", Offset = "0xFF8C64", VA = "0xFF8C64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xFF8C6C", Offset = "0xFF8C6C", VA = "0xFF8C6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0xFF8C74", Offset = "0xFF8C74", VA = "0xFF8C74", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xFF8C7C", Offset = "0xFF8C7C", VA = "0xFF8C7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C94", Offset = "0x8E1C94")]
			add
			{
			}
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0xFF8D1C", Offset = "0xFF8D1C", VA = "0xFF8D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1CA4", Offset = "0x8E1CA4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000D62")]
			[Address(RVA = "0xFF8E2C", Offset = "0xFF8E2C", VA = "0xFF8E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1CB4", Offset = "0x8E1CB4")]
			add
			{
			}
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xFF8ECC", Offset = "0xFF8ECC", VA = "0xFF8ECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1CC4", Offset = "0x8E1CC4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000D65")]
			[Address(RVA = "0xFF8FDC", Offset = "0xFF8FDC", VA = "0xFF8FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1CD4", Offset = "0x8E1CD4")]
			add
			{
			}
			[Token(Token = "0x6000D66")]
			[Address(RVA = "0xFF907C", Offset = "0xFF907C", VA = "0xFF907C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1CE4", Offset = "0x8E1CE4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xFF8DBC", Offset = "0xFF8DBC", VA = "0xFF8DBC", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xFF8F6C", Offset = "0xFF8F6C", VA = "0xFF8F6C", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xFF911C", Offset = "0xFF911C", VA = "0xFF911C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000D68")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xFF918C", Offset = "0xFF918C", VA = "0xFF918C", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xFF92B8", Offset = "0xFF92B8", VA = "0xFF92B8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xFF93E4", Offset = "0xFF93E4", VA = "0xFF93E4")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000EEA")]
		None,
		[Token(Token = "0x4000EEB")]
		Proximity,
		[Token(Token = "0x4000EEC")]
		Contact,
		[Token(Token = "0x4000EED")]
		Action
	}
	[Token(Token = "0x2000277")]
	public enum InteractableState
	{
		[Token(Token = "0x4000EEF")]
		Default,
		[Token(Token = "0x4000EF0")]
		ProximityState,
		[Token(Token = "0x4000EF1")]
		ContactState,
		[Token(Token = "0x4000EF2")]
		ActionState
	}
	[Token(Token = "0x2000278")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xFF9758", Offset = "0xFF9758", VA = "0xFF9758")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000127")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0xFF9660", Offset = "0xFF9660", VA = "0xFF9660")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xFF91EC", Offset = "0xFF91EC", VA = "0xFF91EC")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xFF9318", Offset = "0xFF9318", VA = "0xFF9318")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xFF96C4", Offset = "0xFF96C4", VA = "0xFF96C4")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200027B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8AE8", Offset = "0x8D8AE8")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000128")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D7B")]
				[Address(RVA = "0xD4BB28", Offset = "0xD4BB28", VA = "0xD4BB28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000129")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D7D")]
				[Address(RVA = "0xD4BB70", Offset = "0xD4BB70", VA = "0xD4BB70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D77")]
			[Address(RVA = "0xD4B610", Offset = "0xD4B610", VA = "0xD4B610")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000D78")]
			[Address(RVA = "0xD4B63C", Offset = "0xD4B63C", VA = "0xD4B63C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D79")]
			[Address(RVA = "0xD4B6AC", Offset = "0xD4B6AC", VA = "0xD4B6AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0xD4B658", Offset = "0xD4B658", VA = "0xD4B658")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0xD4BB30", Offset = "0xD4BB30", VA = "0xD4BB30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xFFA454", Offset = "0xFFA454", VA = "0xFFA454")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xFFA4D0", Offset = "0xFFA4D0", VA = "0xFFA4D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1CF4", Offset = "0x8E1CF4")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xFFA570", Offset = "0xFFA570", VA = "0xFFA570")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xFFA658", Offset = "0xFFA658", VA = "0xFFA658")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700012A")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0xFFA660", Offset = "0xFFA660", VA = "0xFFA660")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xFFA7E0", Offset = "0xFFA7E0", VA = "0xFFA7E0")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xFFA888", Offset = "0xFFA888", VA = "0xFFA888")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xFFA930", Offset = "0xFFA930", VA = "0xFFA930")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xFFABDC", Offset = "0xFFABDC", VA = "0xFFABDC")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xFFAC24", Offset = "0xFFAC24", VA = "0xFFAC24")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xFFAED4", Offset = "0xFFAED4", VA = "0xFFAED4")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xFFB020", Offset = "0xFFB020", VA = "0xFFB020")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200027E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8AF8", Offset = "0x8D8AF8")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700012F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D97")]
				[Address(RVA = "0xD4AD2C", Offset = "0xD4AD2C", VA = "0xD4AD2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000130")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D99")]
				[Address(RVA = "0xD4AD74", Offset = "0xD4AD74", VA = "0xD4AD74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D94")]
			[Address(RVA = "0xD4A8F8", Offset = "0xD4A8F8", VA = "0xD4A8F8")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000D95")]
			[Address(RVA = "0xD4A924", Offset = "0xD4A924", VA = "0xD4A924", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D96")]
			[Address(RVA = "0xD4A928", Offset = "0xD4A928", VA = "0xD4A928", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D98")]
			[Address(RVA = "0xD4AD34", Offset = "0xD4AD34", VA = "0xD4AD34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F0B")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700012B")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000D86")]
			[Address(RVA = "0xFA33B0", Offset = "0xFA33B0", VA = "0xFA33B0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700012C")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0xFA33B8", Offset = "0xFA33B8", VA = "0xFA33B8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700012D")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0xFA33C0", Offset = "0xFA33C0", VA = "0xFA33C0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012E")]
		public override bool EnableState
		{
			[Token(Token = "0x6000D89")]
			[Address(RVA = "0xFA33C8", Offset = "0xFA33C8", VA = "0xFA33C8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0xFA33F4", Offset = "0xFA33F4", VA = "0xFA33F4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xFA3430", Offset = "0xFA3430", VA = "0xFA3430", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xFA34E8", Offset = "0xFA34E8", VA = "0xFA34E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1DA4", Offset = "0x8E1DA4")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xFA3560", Offset = "0xFA3560", VA = "0xFA3560")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xFA3800", Offset = "0xFA3800", VA = "0xFA3800")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xFA398C", Offset = "0xFA398C", VA = "0xFA398C")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xFA3A84", Offset = "0xFA3A84", VA = "0xFA3A84", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xFA3D58", Offset = "0xFA3D58", VA = "0xFA3D58", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xFA3D5C", Offset = "0xFA3D5C", VA = "0xFA3D5C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xFA3D60", Offset = "0xFA3D60", VA = "0xFA3D60")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCF1C", Offset = "0x8DCF1C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCF2C", Offset = "0x8DCF2C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCF3C", Offset = "0x8DCF3C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000131")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xFA3D78", Offset = "0xFA3D78", VA = "0xFA3D78", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E54", Offset = "0x8E1E54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0xFA3D80", Offset = "0xFA3D80", VA = "0xFA3D80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E64", Offset = "0x8E1E64")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public bool EnableState
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0xFA3D88", Offset = "0xFA3D88", VA = "0xFA3D88", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0xFA3DA4", Offset = "0xFA3DA4", VA = "0xFA3DA4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xFA3DC4", Offset = "0xFA3DC4", VA = "0xFA3DC4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E74", Offset = "0x8E1E74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0xFA3DCC", Offset = "0xFA3DCC", VA = "0xFA3DCC", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E84", Offset = "0x8E1E84")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public float SphereRadius
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xFA3DD8", Offset = "0xFA3DD8", VA = "0xFA3DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E94", Offset = "0x8E1E94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0xFA3DE0", Offset = "0xFA3DE0", VA = "0xFA3DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1EA4", Offset = "0x8E1EA4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xFA3DE8", Offset = "0xFA3DE8", VA = "0xFA3DE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xFA3E30", Offset = "0xFA3E30", VA = "0xFA3E30", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xFA3E34", Offset = "0xFA3E34", VA = "0xFA3E34")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000280")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000F1E")]
		None = 0,
		[Token(Token = "0x4000F1F")]
		Ray = 1,
		[Token(Token = "0x4000F20")]
		Poke = 4,
		[Token(Token = "0x4000F21")]
		All = -1
	}
	[Token(Token = "0x2000281")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000F23")]
		Inactive,
		[Token(Token = "0x4000F24")]
		PrimaryInputDown,
		[Token(Token = "0x4000F25")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000F26")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000282")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xFF93EC", Offset = "0xFF93EC", VA = "0xFF93EC")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000283")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCF4C", Offset = "0x8DCF4C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCF5C", Offset = "0x8DCF5C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCF6C", Offset = "0x8DCF6C")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000135")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0xFF981C", Offset = "0xFF981C", VA = "0xFF981C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0xFF9824", Offset = "0xFF9824", VA = "0xFF9824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1EB4", Offset = "0x8E1EB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0xFF982C", Offset = "0xFF982C", VA = "0xFF982C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1EC4", Offset = "0x8E1EC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000DA9")]
			get;
		}

		[Token(Token = "0x17000138")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000DAA")]
			get;
		}

		[Token(Token = "0x17000139")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000DAB")]
			get;
		}

		[Token(Token = "0x1700013A")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0xFF9838", Offset = "0xFF9838", VA = "0xFF9838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1ED4", Offset = "0x8E1ED4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0xFF9844", Offset = "0xFF9844", VA = "0xFF9844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1EE4", Offset = "0x8E1EE4")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0xFF9850", Offset = "0xFF9850", VA = "0xFF9850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1EF4", Offset = "0x8E1EF4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0xFF985C", Offset = "0xFF985C", VA = "0xFF985C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1F04", Offset = "0x8E1F04")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000DB4")]
			get;
			[Token(Token = "0x6000DB5")]
			set;
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xFF9868", Offset = "0xFF9868", VA = "0xFF9868")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000DB1")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000DB2")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000DB3")]
		public abstract void DeFocus();

		[Token(Token = "0x6000DB6")]
		public abstract void Initialize();

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xFF9870", Offset = "0xFF9870", VA = "0xFF9870")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xFF98BC", Offset = "0xFF98BC", VA = "0xFF98BC")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xFF9910", Offset = "0xFF9910", VA = "0xFF9910", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xFF9BC0", Offset = "0xFF9BC0", VA = "0xFF9BC0", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xFFA2C4", Offset = "0xFFA2C4", VA = "0xFFA2C4")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700013D")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000DBC")]
			get;
		}

		[Token(Token = "0x1700013E")]
		bool EnableState
		{
			[Token(Token = "0x6000DBE")]
			get;
			[Token(Token = "0x6000DBF")]
			set;
		}

		[Token(Token = "0x1700013F")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000DC0")]
			get;
			[Token(Token = "0x6000DC1")]
			set;
		}

		[Token(Token = "0x6000DBD")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000285")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000286")]
		private enum PinchState
		{
			[Token(Token = "0x4000F37")]
			None,
			[Token(Token = "0x4000F38")]
			PinchDown,
			[Token(Token = "0x4000F39")]
			PinchStay,
			[Token(Token = "0x4000F3A")]
			PinchUp
		}

		[Token(Token = "0x4000F33")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000140")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0xE469B8", Offset = "0xE469B8", VA = "0xE469B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000141")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0xE46A40", Offset = "0xE46A40", VA = "0xE46A40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xE46AC8", Offset = "0xE46AC8", VA = "0xE46AC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xE46B50", Offset = "0xE46B50", VA = "0xE46B50")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xE46B84", Offset = "0xE46B84", VA = "0xE46B84")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000F3B")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000F3C")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000F3D")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000F3E")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000F3F")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DCF8C", Offset = "0x8DCF8C")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000143")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0xE4DCE8", Offset = "0xE4DCE8", VA = "0xE4DCE8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000144")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0xE4DCF0", Offset = "0xE4DCF0", VA = "0xE4DCF0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000145")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0xE4DD58", Offset = "0xE4DD58", VA = "0xE4DD58", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000146")]
		public override bool EnableState
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xE4DD60", Offset = "0xE4DD60", VA = "0xE4DD60", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0xE4DDA4", Offset = "0xE4DDA4", VA = "0xE4DDA4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xE4DE18", Offset = "0xE4DE18", VA = "0xE4DE18", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xE4DE80", Offset = "0xE4DE80", VA = "0xE4DE80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xE4DF24", Offset = "0xE4DF24", VA = "0xE4DF24")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xE4E1DC", Offset = "0xE4E1DC", VA = "0xE4E1DC")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xE4E264", Offset = "0xE4E264", VA = "0xE4E264", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xE4E634", Offset = "0xE4E634", VA = "0xE4E634")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xE4E744", Offset = "0xE4E744", VA = "0xE4E744")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xE4E868", Offset = "0xE4E868", VA = "0xE4E868")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xE4EB6C", Offset = "0xE4EB6C", VA = "0xE4EB6C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xE4EF00", Offset = "0xE4EF00", VA = "0xE4EF00", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xE4EFE8", Offset = "0xE4EFE8", VA = "0xE4EFE8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xE4F024", Offset = "0xE4F024", VA = "0xE4F024")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000F4B")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000F4C")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD000", Offset = "0x8DD000")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000147")]
		public bool EnableState
		{
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0xE4DD88", Offset = "0xE4DD88", VA = "0xE4DD88", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0xE4DDC0", Offset = "0xE4DDC0", VA = "0xE4DDC0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0xE4F130", Offset = "0xE4F130", VA = "0xE4F130", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0xE4E1A0", Offset = "0xE4E1A0", VA = "0xE4E1A0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0xE4F390", Offset = "0xE4F390", VA = "0xE4F390", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1F14", Offset = "0x8E1F14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0xE4F398", Offset = "0xE4F398", VA = "0xE4F398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1F24", Offset = "0x8E1F24")]
			set
			{
			}
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xE4F138", Offset = "0xE4F138", VA = "0xE4F138")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xE4EF3C", Offset = "0xE4EF3C", VA = "0xE4EF3C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xE4F3A0", Offset = "0xE4F3A0", VA = "0xE4F3A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xE4F614", Offset = "0xE4F614", VA = "0xE4F614")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xE4F704", Offset = "0xE4F704", VA = "0xE4F704")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700014A")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0xFA198C", Offset = "0xFA198C", VA = "0xFA198C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0xFA1994", Offset = "0xFA1994", VA = "0xFA1994")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0xFA1A1C", Offset = "0xFA1A1C", VA = "0xFA1A1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0xFA1A24", Offset = "0xFA1A24", VA = "0xFA1A24")]
			set
			{
			}
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xFA1A90", Offset = "0xFA1A90", VA = "0xFA1A90")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xFA1D44", Offset = "0xFA1D44", VA = "0xFA1D44")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xFA1D54", Offset = "0xFA1D54", VA = "0xFA1D54")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xFA1D64", Offset = "0xFA1D64", VA = "0xFA1D64")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xF99508", Offset = "0xF99508", VA = "0xF99508")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xF9950C", Offset = "0xF9950C", VA = "0xF9950C")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xF99544", Offset = "0xF99544", VA = "0xF99544")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xF9957C", Offset = "0xF9957C", VA = "0xF9957C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xF995B4", Offset = "0xF995B4", VA = "0xF995B4")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xF995EC", Offset = "0xF995EC", VA = "0xF995EC")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xF99624", Offset = "0xF99624", VA = "0xF99624")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xF9965C", Offset = "0xF9965C", VA = "0xF9965C")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xF996D0", Offset = "0xF996D0", VA = "0xF996D0")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xF99740", Offset = "0xF99740", VA = "0xF99740")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xF9978C", Offset = "0xF9978C", VA = "0xF9978C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xF99790", Offset = "0xF99790", VA = "0xF99790")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xF99704", Offset = "0xF99704", VA = "0xF99704")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xF997D0", Offset = "0xF997D0", VA = "0xF997D0")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200028D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8B18", Offset = "0x8D8B18")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700014C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E01")]
				[Address(RVA = "0xD55430", Offset = "0xD55430", VA = "0xD55430", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E03")]
				[Address(RVA = "0xD55478", Offset = "0xD55478", VA = "0xD55478", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0xD55244", Offset = "0xD55244", VA = "0xD55244")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0xD55270", Offset = "0xD55270", VA = "0xD55270", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E00")]
			[Address(RVA = "0xD55274", Offset = "0xD55274", VA = "0xD55274", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E02")]
			[Address(RVA = "0xD55438", Offset = "0xD55438", VA = "0xD55438", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F5C")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000F5D")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xE435E4", Offset = "0xE435E4", VA = "0xE435E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xE43690", Offset = "0xE43690", VA = "0xE43690")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xE438E0", Offset = "0xE438E0", VA = "0xE438E0")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xE43868", Offset = "0xE43868", VA = "0xE43868")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1F34", Offset = "0x8E1F34")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xE4392C", Offset = "0xE4392C", VA = "0xE4392C")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200028F")]
		public enum SelectionState
		{
			[Token(Token = "0x4000F73")]
			Off,
			[Token(Token = "0x4000F74")]
			Selected,
			[Token(Token = "0x4000F75")]
			Highlighted
		}

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700014E")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x132B898", Offset = "0x132B898", VA = "0x132B898")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x132B8A0", Offset = "0x132B8A0", VA = "0x132B8A0")]
			set
			{
			}
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x132BA24", Offset = "0x132BA24", VA = "0x132BA24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x132BC28", Offset = "0x132BC28", VA = "0x132BC28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x132B928", Offset = "0x132B928", VA = "0x132B928")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x132BD14", Offset = "0x132BD14", VA = "0x132BD14")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000291")]
		public enum SegmentType
		{
			[Token(Token = "0x4000F84")]
			Straight,
			[Token(Token = "0x4000F85")]
			LeftTurn,
			[Token(Token = "0x4000F86")]
			RightTurn,
			[Token(Token = "0x4000F87")]
			Switch
		}

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000F7C")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000F7D")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD0E0", Offset = "0x8DD0E0")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700014F")]
		public float StartDistance
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0x10742E4", Offset = "0x10742E4", VA = "0x10742E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1FE4", Offset = "0x8E1FE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x10742EC", Offset = "0x10742EC", VA = "0x10742EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1FF4", Offset = "0x8E1FF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public float GridSize
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x10742F4", Offset = "0x10742F4", VA = "0x10742F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0x10742FC", Offset = "0x10742FC", VA = "0x10742FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public int SubDivCount
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x1074304", Offset = "0x1074304", VA = "0x1074304")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0x107430C", Offset = "0x107430C", VA = "0x107430C")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public SegmentType Type
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0x1074314", Offset = "0x1074314", VA = "0x1074314")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000153")]
		public Pose EndPose
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0x107431C", Offset = "0x107431C", VA = "0x107431C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		public float Radius
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x1074678", Offset = "0x1074678", VA = "0x1074678")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000155")]
		public float SegmentLength
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x1074384", Offset = "0x1074384", VA = "0x1074384")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x1074688", Offset = "0x1074688", VA = "0x1074688")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x10746A0", Offset = "0x10746A0", VA = "0x10746A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x10743C4", Offset = "0x10743C4", VA = "0x10743C4")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x10746A4", Offset = "0x10746A4", VA = "0x10746A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x10746A8", Offset = "0x10746A8", VA = "0x10746A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x1074710", Offset = "0x1074710", VA = "0x1074710")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x1074FD8", Offset = "0x1074FD8", VA = "0x1074FD8")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x1075284", Offset = "0x1075284", VA = "0x1075284")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000293")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8B28", Offset = "0x8D8B28")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000156")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E2B")]
				[Address(RVA = "0x1BDF298", Offset = "0x1BDF298", VA = "0x1BDF298", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000157")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E2D")]
				[Address(RVA = "0x1BDF2E0", Offset = "0x1BDF2E0", VA = "0x1BDF2E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x1BDF0F4", Offset = "0x1BDF0F4", VA = "0x1BDF0F4")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x1BDF120", Offset = "0x1BDF120", VA = "0x1BDF120", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x1BDF124", Offset = "0x1BDF124", VA = "0x1BDF124", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x1BDF2A0", Offset = "0x1BDF2A0", VA = "0x1BDF2A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F88")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000F89")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x1075354", Offset = "0x1075354", VA = "0x1075354")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x1075410", Offset = "0x1075410", VA = "0x1075410")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x10754C0", Offset = "0x10754C0", VA = "0x10754C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x1075638", Offset = "0x1075638", VA = "0x1075638")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x1075800", Offset = "0x1075800", VA = "0x1075800")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x10758E8", Offset = "0x10758E8", VA = "0x10758E8")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x1075AFC", Offset = "0x1075AFC", VA = "0x1075AFC")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x10759FC", Offset = "0x10759FC", VA = "0x10759FC")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x1075A10", Offset = "0x1075A10", VA = "0x1075A10")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x1075B54", Offset = "0x1075B54", VA = "0x1075B54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2004", Offset = "0x8E2004")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x1075BCC", Offset = "0x1075BCC", VA = "0x1075BCC")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000158")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x1075C7C", Offset = "0x1075C7C", VA = "0x1075C7C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x1075C8C", Offset = "0x1075C8C", VA = "0x1075C8C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x1075C94", Offset = "0x1075C94", VA = "0x1075C94", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x1075FD8", Offset = "0x1075FD8", VA = "0x1075FD8")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000FA1")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000FA2")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD1E0", Offset = "0x8DD1E0")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000159")]
		public float Distance
		{
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x10760E8", Offset = "0x10760E8", VA = "0x10760E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E20B4", Offset = "0x8E20B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x10760F0", Offset = "0x10760F0", VA = "0x10760F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E20C4", Offset = "0x8E20C4")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public float Scale
		{
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x10760F8", Offset = "0x10760F8", VA = "0x10760F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x1076100", Offset = "0x1076100", VA = "0x1076100")]
			set
			{
			}
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x1075C90", Offset = "0x1075C90", VA = "0x1075C90", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x1076108", Offset = "0x1076108", VA = "0x1076108")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x1075CDC", Offset = "0x1075CDC", VA = "0x1075CDC")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x1075F00", Offset = "0x1075F00", VA = "0x1075F00")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000E3A")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x1076044", Offset = "0x1076044", VA = "0x1076044")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000297")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8B38", Offset = "0x8D8B38")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700015B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E49")]
				[Address(RVA = "0x1BDF580", Offset = "0x1BDF580", VA = "0x1BDF580", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E4B")]
				[Address(RVA = "0x1BDF5C8", Offset = "0x1BDF5C8", VA = "0x1BDF5C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x1BDF2E8", Offset = "0x1BDF2E8", VA = "0x1BDF2E8")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x1BDF314", Offset = "0x1BDF314", VA = "0x1BDF314", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E48")]
			[Address(RVA = "0x1BDF318", Offset = "0x1BDF318", VA = "0x1BDF318", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x1BDF588", Offset = "0x1BDF588", VA = "0x1BDF588", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x10762A8", Offset = "0x10762A8", VA = "0x10762A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x1076308", Offset = "0x1076308", VA = "0x1076308")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x1076410", Offset = "0x1076410", VA = "0x1076410")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x1076568", Offset = "0x1076568", VA = "0x1076568")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x1076470", Offset = "0x1076470", VA = "0x1076470")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x1076644", Offset = "0x1076644", VA = "0x1076644")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E20D4", Offset = "0x8E20D4")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x10766CC", Offset = "0x10766CC", VA = "0x10766CC")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x1076778", Offset = "0x1076778", VA = "0x1076778")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x10767D8", Offset = "0x10767D8", VA = "0x10767D8")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000299")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000FDF")]
			Start,
			[Token(Token = "0x4000FE0")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000FE1")]
			Stop
		}

		[Token(Token = "0x200029A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8B48", Offset = "0x8D8B48")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700015D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E5E")]
				[Address(RVA = "0x1BDF844", Offset = "0x1BDF844", VA = "0x1BDF844", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E60")]
				[Address(RVA = "0x1BDF88C", Offset = "0x1BDF88C", VA = "0x1BDF88C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x1BDF5D0", Offset = "0x1BDF5D0", VA = "0x1BDF5D0")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x1BDF5FC", Offset = "0x1BDF5FC", VA = "0x1BDF5FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x1BDF600", Offset = "0x1BDF600", VA = "0x1BDF600", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x1BDF84C", Offset = "0x1BDF84C", VA = "0x1BDF84C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FC1")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000FC2")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000FC3")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000FC4")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DD240", Offset = "0x8DD240")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x1076834", Offset = "0x1076834", VA = "0x1076834")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x10769A0", Offset = "0x10769A0", VA = "0x10769A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x10769AC", Offset = "0x10769AC", VA = "0x10769AC", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x1076AFC", Offset = "0x1076AFC", VA = "0x1076AFC")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x1076914", Offset = "0x1076914", VA = "0x1076914")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2184", Offset = "0x8E2184")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x1076B5C", Offset = "0x1076B5C", VA = "0x1076B5C")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x1076A98", Offset = "0x1076A98", VA = "0x1076A98")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x1076D60", Offset = "0x1076D60", VA = "0x1076D60")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x1076E84", Offset = "0x1076E84", VA = "0x1076E84")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x1076DCC", Offset = "0x1076DCC", VA = "0x1076DCC")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x1076EF0", Offset = "0x1076EF0", VA = "0x1076EF0")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x1076F10", Offset = "0x1076F10", VA = "0x1076F10")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x1076F9C", Offset = "0x1076F9C", VA = "0x1076F9C")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x1077054", Offset = "0x1077054", VA = "0x1077054")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x1077064", Offset = "0x1077064", VA = "0x1077064")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700015F")]
		public float TrackLength
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x10770CC", Offset = "0x10770CC", VA = "0x10770CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x10770D4", Offset = "0x10770D4", VA = "0x10770D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x10770DC", Offset = "0x10770DC", VA = "0x10770DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x1076188", Offset = "0x1076188", VA = "0x1076188")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x10770E0", Offset = "0x10770E0", VA = "0x10770E0")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x10772F4", Offset = "0x10772F4", VA = "0x10772F4")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x10773F0", Offset = "0x10773F0", VA = "0x10773F0")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class Pose
	{
		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xE491AC", Offset = "0xE491AC", VA = "0xE491AC")]
		public Pose()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xE491F0", Offset = "0xE491F0", VA = "0xE491F0")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200029E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8B58", Offset = "0x8D8B58")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000161")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E76")]
				[Address(RVA = "0x1BE4808", Offset = "0x1BE4808", VA = "0x1BE4808", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000162")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E78")]
				[Address(RVA = "0x1BE4850", Offset = "0x1BE4850", VA = "0x1BE4850", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x1BE4638", Offset = "0x1BE4638", VA = "0x1BE4638")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x1BE4664", Offset = "0x1BE4664", VA = "0x1BE4664", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x1BE4668", Offset = "0x1BE4668", VA = "0x1BE4668", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x1BE4810", Offset = "0x1BE4810", VA = "0x1BE4810", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200029F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8B68", Offset = "0x8D8B68")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000163")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E7C")]
				[Address(RVA = "0x1BE4960", Offset = "0x1BE4960", VA = "0x1BE4960", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000164")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E7E")]
				[Address(RVA = "0x1BE49A8", Offset = "0x1BE49A8", VA = "0x1BE49A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E79")]
			[Address(RVA = "0x1BE4858", Offset = "0x1BE4858", VA = "0x1BE4858")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x1BE4884", Offset = "0x1BE4884", VA = "0x1BE4884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x1BE4888", Offset = "0x1BE4888", VA = "0x1BE4888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x1BE4968", Offset = "0x1BE4968", VA = "0x1BE4968", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FF4")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD428", Offset = "0x8DD428")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000160")]
		public bool IsMoving
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0xD42428", Offset = "0xD42428", VA = "0xD42428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2234", Offset = "0x8E2234")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0xD42430", Offset = "0xD42430", VA = "0xD42430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2244", Offset = "0x8E2244")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xD4243C", Offset = "0xD4243C", VA = "0xD4243C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xD42478", Offset = "0xD42478", VA = "0xD42478")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xD4255C", Offset = "0xD4255C", VA = "0xD4255C")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xD425D0", Offset = "0xD425D0", VA = "0xD425D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2254", Offset = "0x8E2254")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xD42658", Offset = "0xD42658", VA = "0xD42658")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E22B4", Offset = "0x8E22B4")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xD42710", Offset = "0xD42710", VA = "0xD42710")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xD4277C", Offset = "0xD4277C", VA = "0xD4277C")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xD42784", Offset = "0xD42784", VA = "0xD42784")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xD427F8", Offset = "0xD427F8", VA = "0xD427F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xD428DC", Offset = "0xD428DC", VA = "0xD428DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xD42A14", Offset = "0xD42A14", VA = "0xD42A14")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xD42A94", Offset = "0xD42A94", VA = "0xD42A94")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xD42B70", Offset = "0xD42B70", VA = "0xD42B70")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001011")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001012")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001013")]
		EUDT_None,
		[Token(Token = "0x4001014")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20002A2")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20002A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8B78", Offset = "0x8D8B78")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000165")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E98")]
				[Address(RVA = "0xD53888", Offset = "0xD53888", VA = "0xD53888", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000166")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E9A")]
				[Address(RVA = "0xD538D0", Offset = "0xD538D0", VA = "0xD538D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E95")]
			[Address(RVA = "0xD53658", Offset = "0xD53658", VA = "0xD53658")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000E96")]
			[Address(RVA = "0xD53684", Offset = "0xD53684", VA = "0xD53684", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E97")]
			[Address(RVA = "0xD53688", Offset = "0xD53688", VA = "0xD53688", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E99")]
			[Address(RVA = "0xD53890", Offset = "0xD53890", VA = "0xD53890", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001016")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001017")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001018")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD468", Offset = "0x8DD468")]
		public GameObject mainCamera;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD4A0", Offset = "0x8DD4A0")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x18DF538", Offset = "0x18DF538", VA = "0x18DF538")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x18DFD5C", Offset = "0x18DFD5C", VA = "0x18DFD5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x18DFEA4", Offset = "0x18DFEA4", VA = "0x18DFEA4")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x18DFFE0", Offset = "0x18DFFE0", VA = "0x18DFFE0")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x18E011C", Offset = "0x18E011C", VA = "0x18E011C")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x18DFE78", Offset = "0x18DFE78", VA = "0x18DFE78")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x18E01FC", Offset = "0x18E01FC", VA = "0x18E01FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E23B4", Offset = "0x8E23B4")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x18E0274", Offset = "0x18E0274", VA = "0x18E0274")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x18DF990", Offset = "0x18DF990", VA = "0x18DF990")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x18E03C8", Offset = "0x18E03C8", VA = "0x18E03C8")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x18E02A8", Offset = "0x18E02A8", VA = "0x18E02A8")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x18E06E0", Offset = "0x18E06E0", VA = "0x18E06E0")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x18E07D0", Offset = "0x18E07D0", VA = "0x18E07D0")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x18E0860", Offset = "0x18E0860", VA = "0x18E0860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2414", Offset = "0x8E2414")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x18E08B8", Offset = "0x18E08B8", VA = "0x18E08B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2424", Offset = "0x8E2424")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x18E0910", Offset = "0x18E0910", VA = "0x18E0910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2434", Offset = "0x8E2434")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8B88", Offset = "0x8D8B88")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8BE8", Offset = "0x8D8BE8")]
		private sealed class <>c
		{
			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0xD4AF70", Offset = "0xD4AF70", VA = "0xD4AF70")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0xD4AF78", Offset = "0xD4AF78", VA = "0xD4AF78")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001030")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001031")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001032")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001033")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001034")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001035")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001036")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001037")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001038")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001039")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400103A")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xFA5E94", Offset = "0xFA5E94", VA = "0xFA5E94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xFA5EF0", Offset = "0xFA5EF0", VA = "0xFA5EF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xFA6384", Offset = "0xFA6384", VA = "0xFA6384")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xFA6470", Offset = "0xFA6470", VA = "0xFA6470")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xFA65D4", Offset = "0xFA65D4", VA = "0xFA65D4")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xFA68DC", Offset = "0xFA68DC", VA = "0xFA68DC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xFA69D4", Offset = "0xFA69D4", VA = "0xFA69D4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xFA6B34", Offset = "0xFA6B34", VA = "0xFA6B34")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xFA666C", Offset = "0xFA666C", VA = "0xFA666C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xFA66C0", Offset = "0xFA66C0", VA = "0xFA66C0")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xFA6228", Offset = "0xFA6228", VA = "0xFA6228")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xFA6C70", Offset = "0xFA6C70", VA = "0xFA6C70")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public enum HandPoseId
	{
		[Token(Token = "0x400104F")]
		Default,
		[Token(Token = "0x4001050")]
		Generic,
		[Token(Token = "0x4001051")]
		PingPongBall,
		[Token(Token = "0x4001052")]
		Controller
	}
	[Token(Token = "0x20002A7")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000167")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0xFA7E20", Offset = "0xFA7E20", VA = "0xFA7E20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000168")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0xFA7E28", Offset = "0xFA7E28", VA = "0xFA7E28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000169")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0xFA7E30", Offset = "0xFA7E30", VA = "0xFA7E30")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xFA7E38", Offset = "0xFA7E38", VA = "0xFA7E38")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x1073140", Offset = "0x1073140", VA = "0x1073140")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x1073428", Offset = "0x1073428", VA = "0x1073428")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x1073484", Offset = "0x1073484", VA = "0x1073484")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x10734C8", Offset = "0x10734C8", VA = "0x10734C8")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20002A9")]
	public enum FaceType : uint
	{
		[Token(Token = "0x400105A")]
		TRIANGLES,
		[Token(Token = "0x400105B")]
		QUADS
	}
	[Token(Token = "0x20002AA")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x400105D")]
		ABSORPTION,
		[Token(Token = "0x400105E")]
		TRANSMISSION,
		[Token(Token = "0x400105F")]
		SCATTERING
	}
	[Token(Token = "0x20002AB")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20002AC")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001064")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001065")]
		public const string Tab = "    ";

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x105AF18", Offset = "0x105AF18", VA = "0x105AF18")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E2494", Offset = "0x8E2494")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E2494", Offset = "0x8E2494")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x105AFA8", Offset = "0x105AFA8", VA = "0x105AFA8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E24F4", Offset = "0x8E24F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E24F4", Offset = "0x8E24F4")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x105B048", Offset = "0x105B048", VA = "0x105B048")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E2554", Offset = "0x8E2554")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E2554", Offset = "0x8E2554")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x105B0D8", Offset = "0x105B0D8", VA = "0x105B0D8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E25B4", Offset = "0x8E25B4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E25B4", Offset = "0x8E25B4")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x105B168", Offset = "0x105B168", VA = "0x105B168")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E2614", Offset = "0x8E2614")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E2614", Offset = "0x8E2614")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class CAPI
	{
		[Token(Token = "0x20002AE")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20002AF")]
		public enum Result
		{
			[Token(Token = "0x4001071")]
			Success = 0,
			[Token(Token = "0x4001072")]
			Failure = -1000,
			[Token(Token = "0x4001073")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001074")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001075")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001076")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001077")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001078")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001079")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20002B0")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x400107A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0xD48AD8", Offset = "0xD48AD8", VA = "0xD48AD8")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001066")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x400106E")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x105FCA0", Offset = "0x105FCA0", VA = "0x105FCA0")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x105FD30", Offset = "0x105FD30", VA = "0x105FD30")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x105FF54", Offset = "0x105FF54", VA = "0x105FF54")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x1060040", Offset = "0x1060040", VA = "0x1060040")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x10600B0", Offset = "0x10600B0", VA = "0x10600B0")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x1060124", Offset = "0x1060124", VA = "0x1060124")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x10601A4", Offset = "0x10601A4", VA = "0x10601A4")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x10602E8", Offset = "0x10602E8", VA = "0x10602E8")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x1060368", Offset = "0x1060368", VA = "0x1060368")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x10604AC", Offset = "0x10604AC", VA = "0x10604AC")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x106052C", Offset = "0x106052C", VA = "0x106052C")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x10605AC", Offset = "0x10605AC", VA = "0x10605AC")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x106062C", Offset = "0x106062C", VA = "0x106062C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x10606AC", Offset = "0x10606AC", VA = "0x10606AC")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x106073C", Offset = "0x106073C", VA = "0x106073C")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x10607CC", Offset = "0x10607CC", VA = "0x10607CC")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x106085C", Offset = "0x106085C", VA = "0x106085C")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x10608DC", Offset = "0x10608DC", VA = "0x10608DC")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x106095C", Offset = "0x106095C", VA = "0x106095C")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x10609EC", Offset = "0x10609EC", VA = "0x10609EC")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x1060A7C", Offset = "0x1060A7C", VA = "0x1060A7C")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x1060B0C", Offset = "0x1060B0C", VA = "0x1060B0C")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x1060B8C", Offset = "0x1060B8C", VA = "0x1060B8C")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x1060C2C", Offset = "0x1060C2C", VA = "0x1060C2C")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x1060CA8", Offset = "0x1060CA8", VA = "0x1060CA8")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x1060D48", Offset = "0x1060D48", VA = "0x1060D48")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x1060E08", Offset = "0x1060E08", VA = "0x1060E08")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x1060ED8", Offset = "0x1060ED8", VA = "0x1060ED8")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x1060F68", Offset = "0x1060F68", VA = "0x1060F68")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x1060FF8", Offset = "0x1060FF8", VA = "0x1060FF8")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x1061088", Offset = "0x1061088", VA = "0x1061088")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x1061118", Offset = "0x1061118", VA = "0x1061118")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x10611A8", Offset = "0x10611A8", VA = "0x10611A8")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x1061228", Offset = "0x1061228", VA = "0x1061228")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x1061344", Offset = "0x1061344", VA = "0x1061344")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x10612B4", Offset = "0x10612B4", VA = "0x10612B4")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x1061564", Offset = "0x1061564", VA = "0x1061564")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x10616D4", Offset = "0x10616D4", VA = "0x10616D4")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EDD")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x1061754", Offset = "0x1061754", VA = "0x1061754")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x10619FC", Offset = "0x10619FC", VA = "0x10619FC")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x1061A7C", Offset = "0x1061A7C", VA = "0x1061A7C")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1061BEC", Offset = "0x1061BEC", VA = "0x1061BEC")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x1061C6C", Offset = "0x1061C6C", VA = "0x1061C6C")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x1061DDC", Offset = "0x1061DDC", VA = "0x1061DDC")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x1061E5C", Offset = "0x1061E5C", VA = "0x1061E5C")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x1061FCC", Offset = "0x1061FCC", VA = "0x1061FCC")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x106204C", Offset = "0x106204C", VA = "0x106204C")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x10621BC", Offset = "0x10621BC", VA = "0x10621BC")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x106223C", Offset = "0x106223C", VA = "0x106223C")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x10622BC", Offset = "0x10622BC", VA = "0x10622BC")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x1062354", Offset = "0x1062354", VA = "0x1062354")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x10623D4", Offset = "0x10623D4", VA = "0x10623D4")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x10625AC", Offset = "0x10625AC", VA = "0x10625AC")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x1062704", Offset = "0x1062704", VA = "0x1062704")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x106252C", Offset = "0x106252C", VA = "0x106252C")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x1062784", Offset = "0x1062784", VA = "0x1062784")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x1062804", Offset = "0x1062804", VA = "0x1062804")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x1062894", Offset = "0x1062894", VA = "0x1062894")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x1062914", Offset = "0x1062914", VA = "0x1062914")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x10629A4", Offset = "0x10629A4", VA = "0x10629A4")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x1062A24", Offset = "0x1062A24", VA = "0x1062A24")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x1062AA4", Offset = "0x1062AA4", VA = "0x1062AA4")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x1062D30", Offset = "0x1062D30", VA = "0x1062D30")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x1062DC0", Offset = "0x1062DC0", VA = "0x1062DC0")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x1062FF0", Offset = "0x1062FF0", VA = "0x1062FF0")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x1063088", Offset = "0x1063088", VA = "0x1063088")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x10631D8", Offset = "0x10631D8", VA = "0x10631D8")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x1063258", Offset = "0x1063258", VA = "0x1063258")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x10632D8", Offset = "0x10632D8", VA = "0x10632D8")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x106342C", Offset = "0x106342C", VA = "0x106342C")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x10634AC", Offset = "0x10634AC", VA = "0x10634AC")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x1063600", Offset = "0x1063600", VA = "0x1063600")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x1063680", Offset = "0x1063680", VA = "0x1063680")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1063710", Offset = "0x1063710", VA = "0x1063710")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x10637A0", Offset = "0x10637A0", VA = "0x10637A0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x1063830", Offset = "0x1063830", VA = "0x1063830")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x10638B0", Offset = "0x10638B0", VA = "0x10638B0")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x1063938", Offset = "0x1063938", VA = "0x1063938")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x10639C0", Offset = "0x10639C0", VA = "0x10639C0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x1063A40", Offset = "0x1063A40", VA = "0x1063A40")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x1063AC0", Offset = "0x1063AC0", VA = "0x1063AC0")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x1063B74", Offset = "0x1063B74", VA = "0x1063B74")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x1063C04", Offset = "0x1063C04", VA = "0x1063C04")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x1063C94", Offset = "0x1063C94", VA = "0x1063C94")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x1063D14", Offset = "0x1063D14", VA = "0x1063D14")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x1063D94", Offset = "0x1063D94", VA = "0x1063D94")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x1063E14", Offset = "0x1063E14", VA = "0x1063E14")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x1063EAC", Offset = "0x1063EAC", VA = "0x1063EAC")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x1063F3C", Offset = "0x1063F3C", VA = "0x1063F3C")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x1063FCC", Offset = "0x1063FCC", VA = "0x1063FCC")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x106405C", Offset = "0x106405C", VA = "0x106405C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x10640F4", Offset = "0x10640F4", VA = "0x10640F4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x106418C", Offset = "0x106418C", VA = "0x106418C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x106420C", Offset = "0x106420C", VA = "0x106420C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x106428C", Offset = "0x106428C", VA = "0x106428C")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x10643E0", Offset = "0x10643E0", VA = "0x10643E0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x1064460", Offset = "0x1064460", VA = "0x1064460")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x10645B4", Offset = "0x10645B4", VA = "0x10645B4")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x1064634", Offset = "0x1064634", VA = "0x1064634")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x1064770", Offset = "0x1064770", VA = "0x1064770")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x10647F0", Offset = "0x10647F0", VA = "0x10647F0")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x10649C4", Offset = "0x10649C4", VA = "0x10649C4")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x1064CA4", Offset = "0x1064CA4", VA = "0x1064CA4")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x1064944", Offset = "0x1064944", VA = "0x1064944")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x1064D34", Offset = "0x1064D34", VA = "0x1064D34")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x1064DB4", Offset = "0x1064DB4", VA = "0x1064DB4")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x1064E44", Offset = "0x1064E44", VA = "0x1064E44")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x1064ED4", Offset = "0x1064ED4", VA = "0x1064ED4")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x1064F64", Offset = "0x1064F64", VA = "0x1064F64")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x1065004", Offset = "0x1065004", VA = "0x1065004")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x10650A4", Offset = "0x10650A4", VA = "0x10650A4")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x1065144", Offset = "0x1065144", VA = "0x1065144")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x10651C4", Offset = "0x10651C4", VA = "0x10651C4")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x1065244", Offset = "0x1065244", VA = "0x1065244")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x10652C4", Offset = "0x10652C4", VA = "0x10652C4")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x1065344", Offset = "0x1065344", VA = "0x1065344")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x10653C4", Offset = "0x10653C4", VA = "0x10653C4")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x10654EC", Offset = "0x10654EC", VA = "0x10654EC")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x1065584", Offset = "0x1065584", VA = "0x1065584")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x1065604", Offset = "0x1065604", VA = "0x1065604")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x1065664", Offset = "0x1065664", VA = "0x1065664")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x10657AC", Offset = "0x10657AC", VA = "0x10657AC")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x106583C", Offset = "0x106583C", VA = "0x106583C")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x1065994", Offset = "0x1065994", VA = "0x1065994")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x1065A24", Offset = "0x1065A24", VA = "0x1065A24")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x1065AC4", Offset = "0x1065AC4", VA = "0x1065AC4")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x1065E94", Offset = "0x1065E94", VA = "0x1065E94")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x1065F14", Offset = "0x1065F14", VA = "0x1065F14")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x1065FAC", Offset = "0x1065FAC", VA = "0x1065FAC")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x106680C", Offset = "0x106680C", VA = "0x106680C")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x106688C", Offset = "0x106688C", VA = "0x106688C")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x105FC3C", Offset = "0x105FC3C", VA = "0x105FC3C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8E2674", Offset = "0x8E2674")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x1066924", Offset = "0x1066924", VA = "0x1066924")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x10669A8", Offset = "0x10669A8", VA = "0x10669A8")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x1066A28", Offset = "0x1066A28", VA = "0x1066A28")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x1066AA8", Offset = "0x1066AA8", VA = "0x1066AA8")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x1066B28", Offset = "0x1066B28", VA = "0x1066B28")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x10674EC", Offset = "0x10674EC", VA = "0x10674EC")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x106756C", Offset = "0x106756C", VA = "0x106756C")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x10679A8", Offset = "0x10679A8", VA = "0x10679A8")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x1067910", Offset = "0x1067910", VA = "0x1067910")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x1067A1C", Offset = "0x1067A1C", VA = "0x1067A1C")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20002B1")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x8DD558", Offset = "0x8DD558")]
		public SoundFXRef testSound1;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x1071288", Offset = "0x1071288", VA = "0x1071288")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x107128C", Offset = "0x107128C", VA = "0x107128C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x1071334", Offset = "0x1071334", VA = "0x1071334")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD5A4", Offset = "0x8DD5A4")]
		public bool autoRetrigger;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8DD5DC", Offset = "0x8DD5DC")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD600", Offset = "0x8DD600")]
		public Transform[] playPositions;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x10531F4", Offset = "0x10531F4", VA = "0x10531F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x10533C4", Offset = "0x10533C4", VA = "0x10533C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x10535A0", Offset = "0x10535A0", VA = "0x10535A0")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x1053424", Offset = "0x1053424", VA = "0x1053424")]
		public void Play()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1053660", Offset = "0x1053660", VA = "0x1053660")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x10537D0", Offset = "0x10537D0", VA = "0x10537D0")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001088")]
		Default,
		[Token(Token = "0x4001089")]
		Preload,
		[Token(Token = "0x400108A")]
		ManualPreload
	}
	[Token(Token = "0x20002B4")]
	public enum Fade
	{
		[Token(Token = "0x400108C")]
		In,
		[Token(Token = "0x400108D")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20002B5")]
	public class SoundGroup
	{
		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DD638", Offset = "0x8DD638")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x133327C", Offset = "0x133327C", VA = "0x133327C")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x1333338", Offset = "0x1333338", VA = "0x1333338")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1331010", Offset = "0x1331010", VA = "0x1331010")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x1331378", Offset = "0x1331378", VA = "0x1331378")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x13322B4", Offset = "0x13322B4", VA = "0x13322B4")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002B6")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20002B7")]
		public enum Fade
		{
			[Token(Token = "0x40010B5")]
			In,
			[Token(Token = "0x40010B6")]
			Out
		}

		[Token(Token = "0x20002B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8BF8", Offset = "0x8D8BF8")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x40010B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6000F90")]
			[Address(RVA = "0xD46FC8", Offset = "0xD46FC8", VA = "0xD46FC8")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xD46FD0", Offset = "0xD46FD0", VA = "0xD46FD0")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8C08", Offset = "0x8D8C08")]
		private sealed class <>c
		{
			[Token(Token = "0x40010B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xD46F34", Offset = "0xD46F34", VA = "0xD46F34")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xD46F3C", Offset = "0xD46F3C", VA = "0xD46F3C")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD664", Offset = "0x8DD664")]
		public bool makePersistent;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD69C", Offset = "0x8DD69C")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD6D4", Offset = "0x8DD6D4")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD70C", Offset = "0x8DD70C")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD744", Offset = "0x8DD744")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD77C", Offset = "0x8DD77C")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD7B4", Offset = "0x8DD7B4")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD7EC", Offset = "0x8DD7EC")]
		public bool verboseLogging;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD824", Offset = "0x8DD824")]
		public int maxSoundEmitters;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD85C", Offset = "0x8DD85C")]
		public float volumeSoundFX;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD894", Offset = "0x8DD894")]
		public float soundFxFadeSecs;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x1700016A")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x1054644", Offset = "0x1054644", VA = "0x1054644")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016B")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x105472C", Offset = "0x105472C", VA = "0x105472C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x1054790", Offset = "0x1054790", VA = "0x1054790")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016D")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x1054800", Offset = "0x1054800", VA = "0x1054800")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016E")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x1054870", Offset = "0x1054870", VA = "0x1054870")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x10548E0", Offset = "0x10548E0", VA = "0x10548E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x1054950", Offset = "0x1054950", VA = "0x1054950")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x1056900", Offset = "0x1056900", VA = "0x1056900")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x10549C0", Offset = "0x10549C0", VA = "0x10549C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x1054C08", Offset = "0x1054C08", VA = "0x1054C08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x10549C4", Offset = "0x10549C4", VA = "0x10549C4")]
		private void Init()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x1055908", Offset = "0x1055908", VA = "0x1055908")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x1054D68", Offset = "0x1054D68", VA = "0x1054D68")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x1056008", Offset = "0x1056008", VA = "0x1056008")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x105619C", Offset = "0x105619C", VA = "0x105619C")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x1056370", Offset = "0x1056370", VA = "0x1056370")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x1056478", Offset = "0x1056478", VA = "0x1056478")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x1056504", Offset = "0x1056504", VA = "0x1056504")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x1056964", Offset = "0x1056964", VA = "0x1056964")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x10569D8", Offset = "0x10569D8", VA = "0x10569D8")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x1055284", Offset = "0x1055284", VA = "0x1055284")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x105590C", Offset = "0x105590C", VA = "0x105590C")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x1056B20", Offset = "0x1056B20", VA = "0x1056B20")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x1056C50", Offset = "0x1056C50", VA = "0x1056C50")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x1056D84", Offset = "0x1056D84", VA = "0x1056D84")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x1056A4C", Offset = "0x1056A4C", VA = "0x1056A4C")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x1056ECC", Offset = "0x1056ECC", VA = "0x1056ECC")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x1056F84", Offset = "0x1056F84", VA = "0x1056F84")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x10570A0", Offset = "0x10570A0", VA = "0x10570A0")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x10535B0", Offset = "0x10535B0", VA = "0x10535B0")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x1053720", Offset = "0x1053720", VA = "0x1053720")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x1057158", Offset = "0x1057158", VA = "0x1057158")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x1057220", Offset = "0x1057220", VA = "0x1057220")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x10572B4", Offset = "0x10572B4", VA = "0x10572B4")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x1057378", Offset = "0x1057378", VA = "0x1057378")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x1057418", Offset = "0x1057418", VA = "0x1057418")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x10574D0", Offset = "0x10574D0", VA = "0x10574D0")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x1058008", Offset = "0x1058008", VA = "0x1058008")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x1058708", Offset = "0x1058708", VA = "0x1058708")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x10588CC", Offset = "0x10588CC", VA = "0x10588CC")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x1059498", Offset = "0x1059498", VA = "0x1059498")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x10576BC", Offset = "0x10576BC", VA = "0x10576BC")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x10595B4", Offset = "0x10595B4", VA = "0x10595B4")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x1059698", Offset = "0x1059698", VA = "0x1059698")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1059784", Offset = "0x1059784", VA = "0x1059784")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x10599AC", Offset = "0x10599AC", VA = "0x10599AC")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x1059B00", Offset = "0x1059B00", VA = "0x1059B00")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x1059C24", Offset = "0x1059C24", VA = "0x1059C24")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x1059D50", Offset = "0x1059D50", VA = "0x1059D50")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x1059E30", Offset = "0x1059E30", VA = "0x1059E30")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x1059F80", Offset = "0x1059F80", VA = "0x1059F80")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x105A39C", Offset = "0x105A39C", VA = "0x105A39C")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public enum EmitterChannel
	{
		[Token(Token = "0x40010BB")]
		None = -1,
		[Token(Token = "0x40010BC")]
		Reserved,
		[Token(Token = "0x40010BD")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20002BB")]
	public class MixerSnapshot
	{
		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x110188C", Offset = "0x110188C", VA = "0x110188C")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x1101830", Offset = "0x1101830", VA = "0x1101830")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20002BE")]
		public enum FadeState
		{
			[Token(Token = "0x40010D4")]
			Null,
			[Token(Token = "0x40010D5")]
			FadingIn,
			[Token(Token = "0x40010D6")]
			FadingOut,
			[Token(Token = "0x40010D7")]
			Ducking
		}

		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8C18", Offset = "0x8D8C18")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40010DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x40010DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x40010DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x1700017B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FC3")]
				[Address(RVA = "0xD589FC", Offset = "0xD589FC", VA = "0xD589FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FC5")]
				[Address(RVA = "0xD58A44", Offset = "0xD58A44", VA = "0xD58A44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0xD588DC", Offset = "0xD588DC", VA = "0xD588DC")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0xD58908", Offset = "0xD58908", VA = "0xD58908", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0xD5890C", Offset = "0xD5890C", VA = "0xD5890C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0xD58A04", Offset = "0xD58A04", VA = "0xD58A04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8C28", Offset = "0x8D8C28")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40010E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x40010E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x40010E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x40010E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x40010E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40010E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x1700017D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FC9")]
				[Address(RVA = "0xD58E8C", Offset = "0xD58E8C", VA = "0xD58E8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FCB")]
				[Address(RVA = "0xD58ED4", Offset = "0xD58ED4", VA = "0xD58ED4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0xD58D20", Offset = "0xD58D20", VA = "0xD58D20")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0xD58D4C", Offset = "0xD58D4C", VA = "0xD58D4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0xD58D50", Offset = "0xD58D50", VA = "0xD58D50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0xD58E94", Offset = "0xD58E94", VA = "0xD58E94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8C38", Offset = "0x8D8C38")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x40010EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x40010EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x40010EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40010ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x40010EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x40010EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x40010F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x40010F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x40010F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x1700017F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FCF")]
				[Address(RVA = "0xD58CD0", Offset = "0xD58CD0", VA = "0xD58CD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000180")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FD1")]
				[Address(RVA = "0xD58D18", Offset = "0xD58D18", VA = "0xD58D18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0xD58A4C", Offset = "0xD58A4C", VA = "0xD58A4C")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0xD58A78", Offset = "0xD58A78", VA = "0xD58A78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0xD58A7C", Offset = "0xD58A7C", VA = "0xD58A7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0xD58CD8", Offset = "0xD58CD8", VA = "0xD58CD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000172")]
		public float volume
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x1330B78", Offset = "0x1330B78", VA = "0x1330B78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x1330B94", Offset = "0x1330B94", VA = "0x1330B94")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public float pitch
		{
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x1330BB0", Offset = "0x1330BB0", VA = "0x1330BB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x1330BCC", Offset = "0x1330BCC", VA = "0x1330BCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public AudioClip clip
		{
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x1330BE8", Offset = "0x1330BE8", VA = "0x1330BE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x1330C04", Offset = "0x1330C04", VA = "0x1330C04")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public float time
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x1330C20", Offset = "0x1330C20", VA = "0x1330C20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x1330C3C", Offset = "0x1330C3C", VA = "0x1330C3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public float length
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x1330C58", Offset = "0x1330C58", VA = "0x1330C58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000177")]
		public bool loop
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x1330D0C", Offset = "0x1330D0C", VA = "0x1330D0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x1330D28", Offset = "0x1330D28", VA = "0x1330D28")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public bool mute
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x1330D48", Offset = "0x1330D48", VA = "0x1330D48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x1330D64", Offset = "0x1330D64", VA = "0x1330D64")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x1330D84", Offset = "0x1330D84", VA = "0x1330D84")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x1330DA0", Offset = "0x1330DA0", VA = "0x1330DA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public bool isPlaying
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x1330DBC", Offset = "0x1330DBC", VA = "0x1330DBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x1330DD8", Offset = "0x1330DD8", VA = "0x1330DD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x1330FC8", Offset = "0x1330FC8", VA = "0x1330FC8")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x133104C", Offset = "0x133104C", VA = "0x133104C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x1331054", Offset = "0x1331054", VA = "0x1331054")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x1331088", Offset = "0x1331088", VA = "0x1331088")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x1331090", Offset = "0x1331090", VA = "0x1331090")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x1331098", Offset = "0x1331098", VA = "0x1331098")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x133113C", Offset = "0x133113C", VA = "0x133113C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x13311A8", Offset = "0x13311A8", VA = "0x13311A8")]
		public void Play()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1331208", Offset = "0x1331208", VA = "0x1331208")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1331240", Offset = "0x1331240", VA = "0x1331240")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x13313B4", Offset = "0x13313B4", VA = "0x13313B4")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x133140C", Offset = "0x133140C", VA = "0x133140C")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x133152C", Offset = "0x133152C", VA = "0x133152C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x13315F8", Offset = "0x13315F8", VA = "0x13315F8")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1331640", Offset = "0x1331640", VA = "0x1331640")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x133166C", Offset = "0x133166C", VA = "0x133166C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E26D4", Offset = "0x8E26D4")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1331714", Offset = "0x1331714", VA = "0x1331714")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x1331808", Offset = "0x1331808", VA = "0x1331808")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x1331934", Offset = "0x1331934", VA = "0x1331934")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x13319AC", Offset = "0x13319AC", VA = "0x13319AC")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1331A44", Offset = "0x1331A44", VA = "0x1331A44")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x133177C", Offset = "0x133177C", VA = "0x133177C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2734", Offset = "0x8E2734")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x1331884", Offset = "0x1331884", VA = "0x1331884")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2794", Offset = "0x8E2794")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1331AE0", Offset = "0x1331AE0", VA = "0x1331AE0")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40010F4")]
		Random,
		[Token(Token = "0x40010F5")]
		Sequential
	}
	[Token(Token = "0x20002C3")]
	public enum FreqHint
	{
		[Token(Token = "0x40010F7")]
		None,
		[Token(Token = "0x40010F8")]
		Wide,
		[Token(Token = "0x40010F9")]
		Narrow
	}
	[Token(Token = "0x20002C4")]
	public enum SoundPriority
	{
		[Token(Token = "0x40010FB")]
		VeryLow = -2,
		[Token(Token = "0x40010FC")]
		Low,
		[Token(Token = "0x40010FD")]
		Default,
		[Token(Token = "0x40010FE")]
		High,
		[Token(Token = "0x40010FF")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20002C5")]
	public class OSPProps
	{
		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD97C", Offset = "0x8DD97C")]
		public bool enableSpatialization;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD9B4", Offset = "0x8DD9B4")]
		public bool useFastOverride;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD9EC", Offset = "0x8DD9EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DD9EC", Offset = "0x8DD9EC")]
		public float gain;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDA40", Offset = "0x8DDA40")]
		public bool enableInvSquare;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDA78", Offset = "0x8DDA78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DDA78", Offset = "0x8DDA78")]
		public float volumetric;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDAD0", Offset = "0x8DDAD0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8DDAD0", Offset = "0x8DDAD0")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x18DDD44", Offset = "0x18DDD44", VA = "0x18DDD44")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C6")]
	public class SoundFX
	{
		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDB30", Offset = "0x8DDB30")]
		public string name;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDB68", Offset = "0x8DDB68")]
		public SoundFXNext playback;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DDBA0", Offset = "0x8DDBA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDBA0", Offset = "0x8DDBA0")]
		public float volume;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDBF4", Offset = "0x8DDBF4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8DDBF4", Offset = "0x8DDBF4")]
		public Vector2 pitchVariance;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDC50", Offset = "0x8DDC50")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8DDC50", Offset = "0x8DDC50")]
		public Vector2 falloffDistance;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDCB0", Offset = "0x8DDCB0")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDCE8", Offset = "0x8DDCE8")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDD20", Offset = "0x8DDD20")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DDD58", Offset = "0x8DDD58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDD58", Offset = "0x8DDD58")]
		public float spread;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDDB0", Offset = "0x8DDDB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DDDB0", Offset = "0x8DDDB0")]
		public float pctChanceToPlay;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDE04", Offset = "0x8DDE04")]
		public SoundPriority priority;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8DDE3C", Offset = "0x8DDE3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDE3C", Offset = "0x8DDE3C")]
		public Vector2 delay;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDE98", Offset = "0x8DDE98")]
		public bool looping;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDED0", Offset = "0x8DDED0")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000181")]
		public int Length
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x1332030", Offset = "0x1332030", VA = "0x1332030")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000182")]
		public bool IsValid
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x133204C", Offset = "0x133204C", VA = "0x133204C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000183")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x13320EC", Offset = "0x13320EC", VA = "0x13320EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x13320F4", Offset = "0x13320F4", VA = "0x13320F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x13320FC", Offset = "0x13320FC", VA = "0x13320FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000185")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x1332108", Offset = "0x1332108", VA = "0x1332108")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x1331AF8", Offset = "0x1331AF8", VA = "0x1331AF8")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x1332120", Offset = "0x1332120", VA = "0x1332120")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x13321F0", Offset = "0x13321F0", VA = "0x13321F0")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x133228C", Offset = "0x133228C", VA = "0x133228C")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x13322D4", Offset = "0x13322D4", VA = "0x13322D4")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x13323CC", Offset = "0x13323CC", VA = "0x13323CC")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x13323D8", Offset = "0x13323D8", VA = "0x13323D8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x13324B4", Offset = "0x13324B4", VA = "0x13324B4")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x13325C8", Offset = "0x13325C8", VA = "0x13325C8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x1332654", Offset = "0x1332654", VA = "0x1332654")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x13326E8", Offset = "0x13326E8", VA = "0x13326E8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x1332774", Offset = "0x1332774", VA = "0x1332774")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x1332800", Offset = "0x1332800", VA = "0x1332800")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C7")]
	public class SoundFXRef
	{
		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000186")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x1332878", Offset = "0x1332878", VA = "0x1332878")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		public string name
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x133299C", Offset = "0x133299C", VA = "0x133299C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0x13329A4", Offset = "0x13329A4", VA = "0x13329A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public int Length
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0x13329CC", Offset = "0x13329CC", VA = "0x13329CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000189")]
		public bool IsValid
		{
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0x1332A10", Offset = "0x1332A10", VA = "0x1332A10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x13328A8", Offset = "0x13328A8", VA = "0x13328A8")]
		private void Init()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1332A48", Offset = "0x1332A48", VA = "0x1332A48")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x1332A80", Offset = "0x1332A80", VA = "0x1332A80")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x1332AC0", Offset = "0x1332AC0", VA = "0x1332AC0")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x1332B08", Offset = "0x1332B08", VA = "0x1332B08")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x1332B88", Offset = "0x1332B88", VA = "0x1332B88")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x1332BC8", Offset = "0x1332BC8", VA = "0x1332BC8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x1332C18", Offset = "0x1332C18", VA = "0x1332C18")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x1332C50", Offset = "0x1332C50", VA = "0x1332C50")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x1332C90", Offset = "0x1332C90", VA = "0x1332C90")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x1332CC8", Offset = "0x1332CC8", VA = "0x1332CC8")]
		public SoundFXRef()
		{
		}
	}
}
