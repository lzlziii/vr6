using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using Cinemachine;
using Il2CppDummyDll;
using Microsoft.CodeAnalysis;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using SVGImporter;
using Shakespeare;
using TMPro;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.Rendering;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.Rendering.Universal.Internal;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceProviders;
using UnityEngine.SceneManagement;
using UnityEngine.SocialPlatforms;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000002")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC3E4", Offset = "0x7CC3E4")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0xA68918", Offset = "0xA68918", VA = "0xA68918")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000003")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC41C", Offset = "0x7CC41C")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class IsReadOnlyAttribute : Attribute
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0xA13D60", Offset = "0xA13D60", VA = "0xA13D60")]
		public IsReadOnlyAttribute()
		{
		}
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7CC454", Offset = "0x7CC454")]
public class FastList<T>
{
	[Token(Token = "0x20002B0")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD808", Offset = "0x7CD808")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x1700012A")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001602")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001604")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015FF")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001600")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001601")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001603")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x6000005")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000006")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x6000007")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000008")]
		set
		{
		}
	}

	[Token(Token = "0x6000003")]
	public FastList()
	{
	}

	[Token(Token = "0x6000004")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000009")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x600000A")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x600000B")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600000C")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600000D")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600000E")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600000F")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000010")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000011")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000012")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000013")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000014")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000015")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000016")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000017")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D61E8", Offset = "0x7D61E8")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000019")]
	private void Allocate()
	{
	}

	[Token(Token = "0x600001A")]
	private void Trim()
	{
	}

	[Token(Token = "0x600001B")]
	public void Clear()
	{
	}

	[Token(Token = "0x600001C")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000005")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x9EDB84", Offset = "0x9EDB84", VA = "0x9EDB84")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000006")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x9EDB50", Offset = "0x9EDB50", VA = "0x9EDB50")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000007")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CC48C", Offset = "0x7CC48C")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20002B2")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001127")]
		MouseXAndY,
		[Token(Token = "0x4001128")]
		MouseX,
		[Token(Token = "0x4001129")]
		MouseY
	}

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xA71BA4", Offset = "0xA71BA4", VA = "0xA71BA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xA71E04", Offset = "0xA71E04", VA = "0xA71E04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xA71EC4", Offset = "0xA71EC4", VA = "0xA71EC4")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000008")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20002B3")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x400112B")]
		Uninitialized = -1,
		[Token(Token = "0x400112C")]
		NotEnabled,
		[Token(Token = "0x400112D")]
		Success,
		[Token(Token = "0x400112E")]
		StreamError,
		[Token(Token = "0x400112F")]
		ProcessError,
		[Token(Token = "0x4001130")]
		MaxStatValue
	}

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000003")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000022")]
		[Address(RVA = "0x1158944", Offset = "0x1158944", VA = "0x1158944")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000023")]
		[Address(RVA = "0x115894C", Offset = "0x115894C", VA = "0x115894C")]
		set
		{
		}
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1158958", Offset = "0x1158958", VA = "0x1158958")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1158B9C", Offset = "0x1158B9C", VA = "0x1158B9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1158DEC", Offset = "0x1158DEC", VA = "0x1158DEC")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000009")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20002B4")]
	private enum Parameters
	{
		[Token(Token = "0x4001132")]
		P_GAIN,
		[Token(Token = "0x4001133")]
		P_USEINVSQR,
		[Token(Token = "0x4001134")]
		P_NEAR,
		[Token(Token = "0x4001135")]
		P_FAR,
		[Token(Token = "0x4001136")]
		P_RADIUS,
		[Token(Token = "0x4001137")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001138")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4001139")]
		P_AMBISTAT,
		[Token(Token = "0x400113A")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x400113B")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x400113C")]
		P_SENDLEVEL,
		[Token(Token = "0x400113D")]
		P_NUM
	}

	[Token(Token = "0x4000014")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource source;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000004")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600002A")]
		[Address(RVA = "0x1159170", Offset = "0x1159170", VA = "0x1159170")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600002B")]
		[Address(RVA = "0x1159178", Offset = "0x1159178", VA = "0x1159178")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public float Gain
	{
		[Token(Token = "0x600002C")]
		[Address(RVA = "0x1159184", Offset = "0x1159184", VA = "0x1159184")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600002D")]
		[Address(RVA = "0x115918C", Offset = "0x115918C", VA = "0x115918C")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600002E")]
		[Address(RVA = "0x1159210", Offset = "0x1159210", VA = "0x1159210")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600002F")]
		[Address(RVA = "0x1159218", Offset = "0x1159218", VA = "0x1159218")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public float Near
	{
		[Token(Token = "0x6000030")]
		[Address(RVA = "0x1159224", Offset = "0x1159224", VA = "0x1159224")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000031")]
		[Address(RVA = "0x115922C", Offset = "0x115922C", VA = "0x115922C")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public float Far
	{
		[Token(Token = "0x6000032")]
		[Address(RVA = "0x11592B4", Offset = "0x11592B4", VA = "0x11592B4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000033")]
		[Address(RVA = "0x11592BC", Offset = "0x11592BC", VA = "0x11592BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0x1159344", Offset = "0x1159344", VA = "0x1159344")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000035")]
		[Address(RVA = "0x115934C", Offset = "0x115934C", VA = "0x115934C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public float ReverbSend
	{
		[Token(Token = "0x6000036")]
		[Address(RVA = "0x11593D4", Offset = "0x11593D4", VA = "0x11593D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000037")]
		[Address(RVA = "0x11593DC", Offset = "0x11593DC", VA = "0x11593DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0x1159464", Offset = "0x1159464", VA = "0x1159464")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000039")]
		[Address(RVA = "0x115946C", Offset = "0x115946C", VA = "0x115946C")]
		set
		{
		}
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1158E70", Offset = "0x1158E70", VA = "0x1158E70")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x7D624C", Offset = "0x7D624C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000029")]
	[Address(RVA = "0x1159090", Offset = "0x1159090", VA = "0x1159090")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1159478", Offset = "0x1159478", VA = "0x1159478")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x11595F0", Offset = "0x11595F0", VA = "0x11595F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x11594E8", Offset = "0x11594E8", VA = "0x11594E8")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1159744", Offset = "0x1159744", VA = "0x1159744")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1159BAC", Offset = "0x1159BAC", VA = "0x1159BAC")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1159010", Offset = "0x1159010", VA = "0x1159010")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x1159C90", Offset = "0x1159C90", VA = "0x1159C90")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x200000A")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000020")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000022")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x1159CB0", Offset = "0x1159CB0", VA = "0x1159CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1159CBC", Offset = "0x1159CBC", VA = "0x1159CBC")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1159D74", Offset = "0x1159D74", VA = "0x1159D74")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1159CF4", Offset = "0x1159CF4", VA = "0x1159CF4")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1159DF4", Offset = "0x1159DF4", VA = "0x1159DF4")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x200000B")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20002B5")]
	private struct MeshMaterial
	{
		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20002B6")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000029")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700000C")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0x115C894", Offset = "0x115C894", VA = "0x115C894")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000D")]
	public string filePath
	{
		[Token(Token = "0x6000048")]
		[Address(RVA = "0x115C920", Offset = "0x115C920", VA = "0x115C920")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x115C998", Offset = "0x115C998", VA = "0x115C998")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x115CAE0", Offset = "0x115CAE0", VA = "0x115CAE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x115CAE4", Offset = "0x115CAE4", VA = "0x115CAE4")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x115D044", Offset = "0x115D044", VA = "0x115D044")]
	private void Update()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x115D3DC", Offset = "0x115D3DC", VA = "0x115D3DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x115D538", Offset = "0x115D538", VA = "0x115D538")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x115DC7C", Offset = "0x115DC7C", VA = "0x115DC7C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x115DCB8", Offset = "0x115DCB8", VA = "0x115DCB8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x115F4A4", Offset = "0x115F4A4", VA = "0x115F4A4")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x115F37C", Offset = "0x115F37C", VA = "0x115F37C")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x115CE7C", Offset = "0x115CE7C", VA = "0x115CE7C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x115CCB0", Offset = "0x115CCB0", VA = "0x115CCB0")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x115FAB8", Offset = "0x115FAB8", VA = "0x115FAB8")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x115FEF4", Offset = "0x115FEF4", VA = "0x115FEF4")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x200000C")]
internal class ONSPPropagation
{
	[Token(Token = "0x20002B7")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4001144")]
		Int8,
		[Token(Token = "0x4001145")]
		UInt8,
		[Token(Token = "0x4001146")]
		Int16,
		[Token(Token = "0x4001147")]
		UInt16,
		[Token(Token = "0x4001148")]
		Int32,
		[Token(Token = "0x4001149")]
		UInt32,
		[Token(Token = "0x400114A")]
		Int64,
		[Token(Token = "0x400114B")]
		UInt64,
		[Token(Token = "0x400114C")]
		Float16,
		[Token(Token = "0x400114D")]
		Float32,
		[Token(Token = "0x400114E")]
		Float64
	}

	[Token(Token = "0x20002B8")]
	public class ClientType
	{
		[Token(Token = "0x400114F")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001150")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4001151")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4001152")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4001153")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4001154")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4001155")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4001156")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4001157")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001158")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001159")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x400115A")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x400115B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x400115C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x400115D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x115A2B4", Offset = "0x115A2B4", VA = "0x115A2B4")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20002B9")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001606")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6001607")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6001608")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6001609")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600160A")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x600160B")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600160C")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600160D")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600160E")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600160F")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001610")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001611")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6001612")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001613")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001614")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20002BA")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x400115E")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700012C")]
		private IntPtr context
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0x115AF2C", Offset = "0x115AF2C", VA = "0x115AF2C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001616")]
		[Address(RVA = "0x115AF90", Offset = "0x115AF90", VA = "0x115AF90")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001617")]
		[Address(RVA = "0x115B020", Offset = "0x115B020", VA = "0x115B020")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x115B0B0", Offset = "0x115B0B0", VA = "0x115B0B0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001619")]
		[Address(RVA = "0x115B0D4", Offset = "0x115B0D4", VA = "0x115B0D4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x115B164", Offset = "0x115B164", VA = "0x115B164", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600161B")]
		[Address(RVA = "0x115B188", Offset = "0x115B188", VA = "0x115B188")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x115B214", Offset = "0x115B214", VA = "0x115B214", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600161D")]
		[Address(RVA = "0x115B238", Offset = "0x115B238", VA = "0x115B238")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x115B2B8", Offset = "0x115B2B8", VA = "0x115B2B8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600161F")]
		[Address(RVA = "0x115B2C0", Offset = "0x115B2C0", VA = "0x115B2C0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x115B3E0", Offset = "0x115B3E0", VA = "0x115B3E0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001621")]
		[Address(RVA = "0x115B4D8", Offset = "0x115B4D8", VA = "0x115B4D8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x115B570", Offset = "0x115B570", VA = "0x115B570", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001623")]
		[Address(RVA = "0x115B57C", Offset = "0x115B57C", VA = "0x115B57C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x115B6B0", Offset = "0x115B6B0", VA = "0x115B6B0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001625")]
		[Address(RVA = "0x115B6BC", Offset = "0x115B6BC", VA = "0x115B6BC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x115B768", Offset = "0x115B768", VA = "0x115B768", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001627")]
		[Address(RVA = "0x115B774", Offset = "0x115B774", VA = "0x115B774")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x115B820", Offset = "0x115B820", VA = "0x115B820", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001629")]
		[Address(RVA = "0x115B82C", Offset = "0x115B82C", VA = "0x115B82C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x115B8D8", Offset = "0x115B8D8", VA = "0x115B8D8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600162B")]
		[Address(RVA = "0x115B8E4", Offset = "0x115B8E4", VA = "0x115B8E4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x115B970", Offset = "0x115B970", VA = "0x115B970", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600162D")]
		[Address(RVA = "0x115B994", Offset = "0x115B994", VA = "0x115B994")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x115BA14", Offset = "0x115BA14", VA = "0x115BA14", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600162F")]
		[Address(RVA = "0x115BA1C", Offset = "0x115BA1C", VA = "0x115BA1C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x115BAC4", Offset = "0x115BAC4", VA = "0x115BAC4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001631")]
		[Address(RVA = "0x115BAD0", Offset = "0x115BAD0", VA = "0x115BAD0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x115BB78", Offset = "0x115BB78", VA = "0x115BB78", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001633")]
		[Address(RVA = "0x115BB88", Offset = "0x115BB88", VA = "0x115BB88")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x115BC18", Offset = "0x115BC18", VA = "0x115BC18", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x115A260", Offset = "0x115A260", VA = "0x115A260")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20002BB")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001160")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700012D")]
		private IntPtr context
		{
			[Token(Token = "0x6001636")]
			[Address(RVA = "0x115BC24", Offset = "0x115BC24", VA = "0x115BC24")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001637")]
		[Address(RVA = "0x115A0A8", Offset = "0x115A0A8", VA = "0x115A0A8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001638")]
		[Address(RVA = "0x115BC88", Offset = "0x115BC88", VA = "0x115BC88")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x115BD18", Offset = "0x115BD18", VA = "0x115BD18", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600163A")]
		[Address(RVA = "0x115BD3C", Offset = "0x115BD3C", VA = "0x115BD3C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x115BDCC", Offset = "0x115BDCC", VA = "0x115BDCC", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600163C")]
		[Address(RVA = "0x115BDF0", Offset = "0x115BDF0", VA = "0x115BDF0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x115BE80", Offset = "0x115BE80", VA = "0x115BE80", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600163E")]
		[Address(RVA = "0x115BEA4", Offset = "0x115BEA4", VA = "0x115BEA4")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x115BF24", Offset = "0x115BF24", VA = "0x115BF24", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001640")]
		[Address(RVA = "0x115BF2C", Offset = "0x115BF2C", VA = "0x115BF2C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x115C04C", Offset = "0x115C04C", VA = "0x115C04C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001642")]
		[Address(RVA = "0x115C144", Offset = "0x115C144", VA = "0x115C144")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x115C1DC", Offset = "0x115C1DC", VA = "0x115C1DC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001644")]
		[Address(RVA = "0x115C1E8", Offset = "0x115C1E8", VA = "0x115C1E8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x115C31C", Offset = "0x115C31C", VA = "0x115C31C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001646")]
		[Address(RVA = "0x115C328", Offset = "0x115C328", VA = "0x115C328")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x115C3D4", Offset = "0x115C3D4", VA = "0x115C3D4", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001648")]
		[Address(RVA = "0x115C3E0", Offset = "0x115C3E0", VA = "0x115C3E0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x115C48C", Offset = "0x115C48C", VA = "0x115C48C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600164A")]
		[Address(RVA = "0x115C498", Offset = "0x115C498", VA = "0x115C498")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x115C544", Offset = "0x115C544", VA = "0x115C544", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600164C")]
		[Address(RVA = "0x115C550", Offset = "0x115C550", VA = "0x115C550")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x115C5E0", Offset = "0x115C5E0", VA = "0x115C5E0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600164E")]
		[Address(RVA = "0x115C604", Offset = "0x115C604", VA = "0x115C604")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x115C684", Offset = "0x115C684", VA = "0x115C684", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001650")]
		[Address(RVA = "0x115C68C", Offset = "0x115C68C", VA = "0x115C68C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x115C734", Offset = "0x115C734", VA = "0x115C734", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001652")]
		[Address(RVA = "0x115C740", Offset = "0x115C740", VA = "0x115C740")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x115C7E8", Offset = "0x115C7E8", VA = "0x115C7E8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001654")]
		[Address(RVA = "0x115C7F8", Offset = "0x115C7F8", VA = "0x115C7F8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x115C888", Offset = "0x115C888", VA = "0x115C888", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x115A138", Offset = "0x115A138", VA = "0x115A138")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20002BC")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001162")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700012E")]
		private IntPtr context
		{
			[Token(Token = "0x6001657")]
			[Address(RVA = "0x115A2BC", Offset = "0x115A2BC", VA = "0x115A2BC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001658")]
		[Address(RVA = "0x115A184", Offset = "0x115A184", VA = "0x115A184")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001659")]
		[Address(RVA = "0x115A320", Offset = "0x115A320", VA = "0x115A320")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x115A3B0", Offset = "0x115A3B0", VA = "0x115A3B0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600165B")]
		[Address(RVA = "0x115A3D4", Offset = "0x115A3D4", VA = "0x115A3D4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x115A464", Offset = "0x115A464", VA = "0x115A464", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600165D")]
		[Address(RVA = "0x115A488", Offset = "0x115A488", VA = "0x115A488")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x115A518", Offset = "0x115A518", VA = "0x115A518", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600165F")]
		[Address(RVA = "0x115A53C", Offset = "0x115A53C", VA = "0x115A53C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x115A5BC", Offset = "0x115A5BC", VA = "0x115A5BC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001661")]
		[Address(RVA = "0x115A5C4", Offset = "0x115A5C4", VA = "0x115A5C4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x115A6E4", Offset = "0x115A6E4", VA = "0x115A6E4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001663")]
		[Address(RVA = "0x115A7DC", Offset = "0x115A7DC", VA = "0x115A7DC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x115A874", Offset = "0x115A874", VA = "0x115A874", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001665")]
		[Address(RVA = "0x115A880", Offset = "0x115A880", VA = "0x115A880")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x115A9B4", Offset = "0x115A9B4", VA = "0x115A9B4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001667")]
		[Address(RVA = "0x115A9C0", Offset = "0x115A9C0", VA = "0x115A9C0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x115AA6C", Offset = "0x115AA6C", VA = "0x115AA6C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001669")]
		[Address(RVA = "0x115AA78", Offset = "0x115AA78", VA = "0x115AA78")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x115AB24", Offset = "0x115AB24", VA = "0x115AB24", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600166B")]
		[Address(RVA = "0x115AB30", Offset = "0x115AB30", VA = "0x115AB30")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x115ABDC", Offset = "0x115ABDC", VA = "0x115ABDC", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600166D")]
		[Address(RVA = "0x115ABE8", Offset = "0x115ABE8", VA = "0x115ABE8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x115AC78", Offset = "0x115AC78", VA = "0x115AC78", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600166F")]
		[Address(RVA = "0x115AC9C", Offset = "0x115AC9C", VA = "0x115AC9C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x115AD1C", Offset = "0x115AD1C", VA = "0x115AD1C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001671")]
		[Address(RVA = "0x115AD24", Offset = "0x115AD24", VA = "0x115AD24")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x115ADCC", Offset = "0x115ADCC", VA = "0x115ADCC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001673")]
		[Address(RVA = "0x115ADD8", Offset = "0x115ADD8", VA = "0x115ADD8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x115AE80", Offset = "0x115AE80", VA = "0x115AE80", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001675")]
		[Address(RVA = "0x115AE90", Offset = "0x115AE90", VA = "0x115AE90")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x115AF20", Offset = "0x115AF20", VA = "0x115AF20", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x115A214", Offset = "0x115A214", VA = "0x115A214")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700000E")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000058")]
		[Address(RVA = "0x1159E04", Offset = "0x1159E04", VA = "0x1159E04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1159E80", Offset = "0x1159E80", VA = "0x1159E80")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x115A2AC", Offset = "0x115A2AC", VA = "0x115A2AC")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x200000D")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20002BD")]
	public enum Preset
	{
		[Token(Token = "0x4001165")]
		Custom,
		[Token(Token = "0x4001166")]
		AcousticTile,
		[Token(Token = "0x4001167")]
		Brick,
		[Token(Token = "0x4001168")]
		BrickPainted,
		[Token(Token = "0x4001169")]
		Carpet,
		[Token(Token = "0x400116A")]
		CarpetHeavy,
		[Token(Token = "0x400116B")]
		CarpetHeavyPadded,
		[Token(Token = "0x400116C")]
		CeramicTile,
		[Token(Token = "0x400116D")]
		Concrete,
		[Token(Token = "0x400116E")]
		ConcreteRough,
		[Token(Token = "0x400116F")]
		ConcreteBlock,
		[Token(Token = "0x4001170")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001171")]
		Curtain,
		[Token(Token = "0x4001172")]
		Foliage,
		[Token(Token = "0x4001173")]
		Glass,
		[Token(Token = "0x4001174")]
		GlassHeavy,
		[Token(Token = "0x4001175")]
		Grass,
		[Token(Token = "0x4001176")]
		Gravel,
		[Token(Token = "0x4001177")]
		GypsumBoard,
		[Token(Token = "0x4001178")]
		PlasterOnBrick,
		[Token(Token = "0x4001179")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x400117A")]
		Soil,
		[Token(Token = "0x400117B")]
		SoundProof,
		[Token(Token = "0x400117C")]
		Snow,
		[Token(Token = "0x400117D")]
		Steel,
		[Token(Token = "0x400117E")]
		Water,
		[Token(Token = "0x400117F")]
		WoodThin,
		[Token(Token = "0x4001180")]
		WoodThick,
		[Token(Token = "0x4001181")]
		WoodFloor,
		[Token(Token = "0x4001182")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20002BE")]
	public sealed class Point
	{
		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x1168174", Offset = "0x1168174", VA = "0x1168174")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x11682EC", Offset = "0x11682EC", VA = "0x11682EC")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x116835C", Offset = "0x116835C", VA = "0x116835C")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20002BF")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7CD818", Offset = "0x7CD818")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20003B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE5C0", Offset = "0x7CE5C0")]
		private sealed class <>c
		{
			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60019B4")]
			[Address(RVA = "0x11687C8", Offset = "0x11687C8", VA = "0x11687C8")]
			public <>c()
			{
			}

			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x11687D0", Offset = "0x11687D0", VA = "0x11687D0")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x11687E8", Offset = "0x11687E8", VA = "0x11687E8")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x1700012F")]
		public float Item
		{
			[Token(Token = "0x600167B")]
			[Address(RVA = "0x1168394", Offset = "0x1168394", VA = "0x1168394")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x1168268", Offset = "0x1168268", VA = "0x1168268")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE680", Offset = "0x7CE680")]
	public Spectrum absorption;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE6B8", Offset = "0x7CE6B8")]
	public Spectrum transmission;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CE6F0", Offset = "0x7CE6F0")]
	public Spectrum scattering;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700000F")]
	public Preset preset
	{
		[Token(Token = "0x600005B")]
		[Address(RVA = "0x115FFD8", Offset = "0x115FFD8", VA = "0x115FFD8")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600005C")]
		[Address(RVA = "0x115FFE0", Offset = "0x115FFE0", VA = "0x115FFE0")]
		set
		{
		}
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x1160008", Offset = "0x1160008", VA = "0x1160008")]
	private void Start()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x115F94C", Offset = "0x115F94C", VA = "0x115F94C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x11605B8", Offset = "0x11605B8", VA = "0x11605B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x11605BC", Offset = "0x11605BC", VA = "0x11605BC")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x116000C", Offset = "0x116000C", VA = "0x116000C")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x115F1E8", Offset = "0x115F1E8", VA = "0x115F1E8")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x11606A0", Offset = "0x11606A0", VA = "0x11606A0")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x1160B20", Offset = "0x1160B20", VA = "0x1160B20")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x1160FA0", Offset = "0x1160FA0", VA = "0x1160FA0")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1161420", Offset = "0x1161420", VA = "0x1161420")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x11618A0", Offset = "0x11618A0", VA = "0x11618A0")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1161D20", Offset = "0x1161D20", VA = "0x1161D20")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x11621A0", Offset = "0x11621A0", VA = "0x11621A0")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1162620", Offset = "0x1162620", VA = "0x1162620")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1162AA0", Offset = "0x1162AA0", VA = "0x1162AA0")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x1162F20", Offset = "0x1162F20", VA = "0x1162F20")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x11633A0", Offset = "0x11633A0", VA = "0x11633A0")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1163820", Offset = "0x1163820", VA = "0x1163820")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1163CA0", Offset = "0x1163CA0", VA = "0x1163CA0")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1164120", Offset = "0x1164120", VA = "0x1164120")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1164598", Offset = "0x1164598", VA = "0x1164598")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1164A18", Offset = "0x1164A18", VA = "0x1164A18")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1164D74", Offset = "0x1164D74", VA = "0x1164D74")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x11650D0", Offset = "0x11650D0", VA = "0x11650D0")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1165550", Offset = "0x1165550", VA = "0x1165550")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x11659D0", Offset = "0x11659D0", VA = "0x11659D0")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1165E50", Offset = "0x1165E50", VA = "0x1165E50")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x11661AC", Offset = "0x11661AC", VA = "0x11661AC")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1166328", Offset = "0x1166328", VA = "0x1166328")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1166684", Offset = "0x1166684", VA = "0x1166684")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1166AFC", Offset = "0x1166AFC", VA = "0x1166AFC")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1166F7C", Offset = "0x1166F7C", VA = "0x1166F7C")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x11673F4", Offset = "0x11673F4", VA = "0x11673F4")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1167874", Offset = "0x1167874", VA = "0x1167874")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1167CF4", Offset = "0x1167CF4", VA = "0x1167CF4")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x11681AC", Offset = "0x11681AC", VA = "0x11681AC")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x200000E")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1168800", Offset = "0x1168800", VA = "0x1168800")]
	private void Update()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x11688D0", Offset = "0x11688D0", VA = "0x11688D0")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x200000F")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000010")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000083")]
		[Address(RVA = "0x1158EE4", Offset = "0x1158EE4", VA = "0x1158EE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1168EA4", Offset = "0x1168EA4", VA = "0x1168EA4")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000010")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000034")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1168EB4", Offset = "0x1168EB4", VA = "0x1168EB4")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1168F4C", Offset = "0x1168F4C", VA = "0x1168F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1169058", Offset = "0x1169058", VA = "0x1169058")]
	private void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x116905C", Offset = "0x116905C", VA = "0x116905C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1169060", Offset = "0x1169060", VA = "0x1169060")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000011")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20002C0")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000043")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000049")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xAF8B74", Offset = "0xAF8B74", VA = "0xAF8B74")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xAF89A4", Offset = "0xAF89A4", VA = "0xAF89A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D6260", Offset = "0x7D6260")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xAF8BAC", Offset = "0xAF8BAC", VA = "0xAF8BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xAF8CF0", Offset = "0xAF8CF0", VA = "0xAF8CF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xAF8DE4", Offset = "0xAF8DE4", VA = "0xAF8DE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xAF97A8", Offset = "0xAF97A8", VA = "0xAF97A8")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000090")]
	[Address(RVA = "0xAF8C5C", Offset = "0xAF8C5C", VA = "0xAF8C5C")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000091")]
	[Address(RVA = "0xAF8D54", Offset = "0xAF8D54", VA = "0xAF8D54")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000092")]
	[Address(RVA = "0xAF9510", Offset = "0xAF9510", VA = "0xAF9510")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000093")]
	[Address(RVA = "0xAF9590", Offset = "0xAF9590", VA = "0xAF9590")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000094")]
	[Address(RVA = "0xAF9618", Offset = "0xAF9618", VA = "0xAF9618")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000095")]
	[Address(RVA = "0xAF96A0", Offset = "0xAF96A0", VA = "0xAF96A0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000096")]
	[Address(RVA = "0xAF9720", Offset = "0xAF9720", VA = "0xAF9720")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000097")]
	[Address(RVA = "0xAFA61C", Offset = "0xAFA61C", VA = "0xAFA61C")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000098")]
	[Address(RVA = "0xAFA6C4", Offset = "0xAFA6C4", VA = "0xAFA6C4")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xAFA76C", Offset = "0xAFA76C", VA = "0xAFA76C")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000012")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000013")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x11688E0", Offset = "0x11688E0", VA = "0x11688E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x11688E4", Offset = "0x11688E4", VA = "0x11688E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x11688E8", Offset = "0x11688E8", VA = "0x11688E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1168A50", Offset = "0x1168A50", VA = "0x1168A50")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1168934", Offset = "0x1168934", VA = "0x1168934")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x11689C4", Offset = "0x11689C4", VA = "0x11689C4")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1168A9C", Offset = "0x1168A9C", VA = "0x1168A9C")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1168B34", Offset = "0x1168B34", VA = "0x1168B34")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1168CA4", Offset = "0x1168CA4", VA = "0x1168CA4")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1168E14", Offset = "0x1168E14", VA = "0x1168E14")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000014")]
public sealed class AchievementDefinition
{
	[Serializable]
	[Token(Token = "0x20002C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD850", Offset = "0x7CD850")]
	private sealed class <>c
	{
		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<string> <>9__10_0;

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xB6FE7C", Offset = "0xB6FE7C", VA = "0xB6FE7C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xB6FE84", Offset = "0xB6FE84", VA = "0xB6FE84")]
		internal bool <.ctor>b__10_0(string arg)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string achievementID;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string flavorLocKey;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string behaviourKey;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int goalCount;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string oculusID;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string steamID;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool enabledForOculus;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool enabledForSteam;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float progress;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<string> args;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xB6EC8C", Offset = "0xB6EC8C", VA = "0xB6EC8C")]
	public AchievementDefinition(Command theCommand)
	{
	}
}
[Token(Token = "0x2000015")]
public sealed class AchievementController : SingletonMono<AchievementController>, IPauseable
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AchievementHandler> handlerPrefabs;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<AchievementHandler> activeHandlers;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameStateList stateList;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<AchievementDefinition> achievementsInOrder;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, AchievementDefinition> achievementMap;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AchievementReporter reporter;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xB6EBE4", Offset = "0xB6EBE4", VA = "0xB6EBE4")]
	private void defineAchievement(Command theCommand)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xB6EF44", Offset = "0xB6EF44", VA = "0xB6EF44")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xB6F104", Offset = "0xB6F104", VA = "0xB6F104")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xB6F2F8", Offset = "0xB6F2F8", VA = "0xB6F2F8")]
	private bool areAchievementsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xB6F5A0", Offset = "0xB6F5A0", VA = "0xB6F5A0", Slot = "7")]
	public void prepareForPause()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB6F5EC", Offset = "0xB6F5EC", VA = "0xB6F5EC", Slot = "8")]
	public void appDidReturnFromPause()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB6F000", Offset = "0xB6F000", VA = "0xB6F000")]
	private void loadState()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xB6F5F0", Offset = "0xB6F5F0", VA = "0xB6F5F0")]
	public void clearState()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xB6F5A4", Offset = "0xB6F5A4", VA = "0xB6F5A4")]
	private void saveState()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xB6F79C", Offset = "0xB6F79C", VA = "0xB6F79C")]
	private AchievementHandler handlerPrefabWithBehaviour(string behaviourKey)
	{
		return null;
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xB6F88C", Offset = "0xB6F88C", VA = "0xB6F88C")]
	public void reportActiveHandlersProgress()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xB6F364", Offset = "0xB6F364", VA = "0xB6F364")]
	private void startAchievements(AchievementReporter reporter)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xB6FAF8", Offset = "0xB6FAF8", VA = "0xB6FAF8")]
	public AchievementController()
	{
	}
}
[Token(Token = "0x2000016")]
public sealed class AchievementControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AchievementController itemToBoot;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xB6FC3C", Offset = "0xB6FC3C", VA = "0xB6FC3C", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xB6FD6C", Offset = "0xB6FD6C", VA = "0xB6FD6C", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xB6FE0C", Offset = "0xB6FE0C", VA = "0xB6FE0C")]
	public AchievementControllerBooter()
	{
	}
}
[Token(Token = "0x2000017")]
public abstract class AchievementHandler : MonoBehaviour
{
	[Token(Token = "0x4000061")]
	private const float TinyFloat = 1E-05f;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AchievementDefinition info;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameStateList stateList;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected GameStateFlags stateFlags;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected int basicCounter;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lastReportedProgress;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isCheckingForProgress;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isCompleted;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xB6FA7C", Offset = "0xB6FA7C", VA = "0xB6FA7C")]
	public void loadWithDefinition(AchievementDefinition definition)
	{
	}

	[Token(Token = "0x60000B8")]
	public abstract string behaviourKey();

	[Token(Token = "0x60000B9")]
	protected abstract void startCheckingForProgress();

	[Token(Token = "0x60000BA")]
	protected abstract void stopCheckingForProgress();

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xB6FFE8", Offset = "0xB6FFE8", VA = "0xB6FFE8", Slot = "7")]
	public virtual void validateHandler()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xB6F730", Offset = "0xB6F730", VA = "0xB6F730")]
	public string achievementID()
	{
		return null;
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xB6FE90", Offset = "0xB6FE90", VA = "0xB6FE90")]
	private void load()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xB6F758", Offset = "0xB6F758", VA = "0xB6F758")]
	public void wipeAchievement()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xB6FFEC", Offset = "0xB6FFEC", VA = "0xB6FFEC")]
	private void save()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xB7015C", Offset = "0xB7015C", VA = "0xB7015C")]
	public void incrementCounter(int increment = 1)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xB701E0", Offset = "0xB701E0", VA = "0xB701E0")]
	public void decrementCounter(int decrement = 1)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xB701F0", Offset = "0xB701F0", VA = "0xB701F0", Slot = "8")]
	public virtual int count()
	{
		return default(int);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xB701F8", Offset = "0xB701F8", VA = "0xB701F8")]
	protected void setSpecificCount(int newCount)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xB701A8", Offset = "0xB701A8", VA = "0xB701A8")]
	public void checkProgress()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xB70244", Offset = "0xB70244", VA = "0xB70244", Slot = "9")]
	protected virtual void calculateProgress()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xB6F924", Offset = "0xB6F924", VA = "0xB6F924")]
	public void reportProgressToPlatform(AchievementReporter reporter)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xB7031C", Offset = "0xB7031C", VA = "0xB7031C")]
	private bool shouldReportProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xB7036C", Offset = "0xB7036C", VA = "0xB7036C")]
	public bool shouldShowProgressPopup()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xB7041C", Offset = "0xB7041C", VA = "0xB7041C")]
	public void handleProgressSuccess()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xB70448", Offset = "0xB70448", VA = "0xB70448")]
	public float progress()
	{
		return default(float);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xB70464", Offset = "0xB70464", VA = "0xB70464")]
	public bool isComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xB6FAA4", Offset = "0xB6FAA4", VA = "0xB6FAA4")]
	public void startAchievement()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xB7046C", Offset = "0xB7046C", VA = "0xB7046C", Slot = "10")]
	public virtual int goalCount()
	{
		return default(int);
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xB702E4", Offset = "0xB702E4", VA = "0xB702E4")]
	public void achievementDidComplete()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xB70484", Offset = "0xB70484", VA = "0xB70484")]
	protected AchievementHandler()
	{
	}
}
[Token(Token = "0x2000018")]
public class AchievementHandlerKills : AchievementHandler
{
	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xB7048C", Offset = "0xB7048C", VA = "0xB7048C", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xB704D4", Offset = "0xB704D4", VA = "0xB704D4", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xB70614", Offset = "0xB70614", VA = "0xB70614", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xB706E4", Offset = "0xB706E4", VA = "0xB706E4")]
	private void checkKillsStat()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xB70764", Offset = "0xB70764", VA = "0xB70764")]
	public AchievementHandlerKills()
	{
	}
}
[Token(Token = "0x2000019")]
public class AchievementHandlerMissilesFired : AchievementHandler
{
	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xB7076C", Offset = "0xB7076C", VA = "0xB7076C", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xB707B4", Offset = "0xB707B4", VA = "0xB707B4", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xB708F4", Offset = "0xB708F4", VA = "0xB708F4", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xB709C4", Offset = "0xB709C4", VA = "0xB709C4")]
	private void checkMissilesFiredStat()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xB70A44", Offset = "0xB70A44", VA = "0xB70A44")]
	public AchievementHandlerMissilesFired()
	{
	}
}
[Token(Token = "0x200001A")]
public class AchievementHandlerNoShotsBeforeDeath : AchievementHandler
{
	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xB70A4C", Offset = "0xB70A4C", VA = "0xB70A4C", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xB70A94", Offset = "0xB70A94", VA = "0xB70A94", Slot = "10")]
	public override int goalCount()
	{
		return default(int);
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xB70A9C", Offset = "0xB70A9C", VA = "0xB70A9C", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xB70B74", Offset = "0xB70B74", VA = "0xB70B74", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xB70C0C", Offset = "0xB70C0C", VA = "0xB70C0C")]
	private void checkIfNoShotsFired()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xB70CD4", Offset = "0xB70CD4", VA = "0xB70CD4")]
	public AchievementHandlerNoShotsBeforeDeath()
	{
	}
}
[Token(Token = "0x200001B")]
public class AchievementHandlerOverdriveCompletion : AchievementHandler
{
	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xB70CDC", Offset = "0xB70CDC", VA = "0xB70CDC", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xB70D24", Offset = "0xB70D24", VA = "0xB70D24", Slot = "10")]
	public override int goalCount()
	{
		return default(int);
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xB70D2C", Offset = "0xB70D2C", VA = "0xB70D2C", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xB70E6C", Offset = "0xB70E6C", VA = "0xB70E6C", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xB70F3C", Offset = "0xB70F3C", VA = "0xB70F3C")]
	private void checkForOverdriveCompletion()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xB70F84", Offset = "0xB70F84", VA = "0xB70F84")]
	private bool hasBeatenAWorldInOverdrive()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xB71064", Offset = "0xB71064", VA = "0xB71064")]
	public AchievementHandlerOverdriveCompletion()
	{
	}
}
[Token(Token = "0x200001C")]
public class AchievementHandlerPowerupKeyEvent : AchievementHandler
{
	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xB7106C", Offset = "0xB7106C", VA = "0xB7106C", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xB710B4", Offset = "0xB710B4", VA = "0xB710B4", Slot = "7")]
	public override void validateHandler()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xB71334", Offset = "0xB71334", VA = "0xB71334", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xB71474", Offset = "0xB71474", VA = "0xB71474", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xB71544", Offset = "0xB71544", VA = "0xB71544")]
	private void checkKeyEventCount()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xB7126C", Offset = "0xB7126C", VA = "0xB7126C")]
	private PowerupConfig getPowerupConfig()
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xB7157C", Offset = "0xB7157C", VA = "0xB7157C")]
	public AchievementHandlerPowerupKeyEvent()
	{
	}
}
[Token(Token = "0x200001D")]
public class AchievementHandlerTimeAlive : AchievementHandler
{
	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xB71584", Offset = "0xB71584", VA = "0xB71584", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xB715CC", Offset = "0xB715CC", VA = "0xB715CC", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xB716A4", Offset = "0xB716A4", VA = "0xB716A4", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xB7173C", Offset = "0xB7173C", VA = "0xB7173C")]
	private void checkTimeAlive()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xB717F8", Offset = "0xB717F8", VA = "0xB717F8")]
	public AchievementHandlerTimeAlive()
	{
	}
}
[Token(Token = "0x200001E")]
public class AchievementHandlerUnlockAllWorldPilots : AchievementHandler
{
	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xB71800", Offset = "0xB71800", VA = "0xB71800", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xB71848", Offset = "0xB71848", VA = "0xB71848", Slot = "10")]
	public override int goalCount()
	{
		return default(int);
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xB718A8", Offset = "0xB718A8", VA = "0xB718A8", Slot = "7")]
	public override void validateHandler()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB719E4", Offset = "0xB719E4", VA = "0xB719E4", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xB71B24", Offset = "0xB71B24", VA = "0xB71B24", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xB71BF4", Offset = "0xB71BF4", VA = "0xB71BF4")]
	private void checkAllPilotsUnlockedInWorld()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB71D44", Offset = "0xB71D44", VA = "0xB71D44")]
	public AchievementHandlerUnlockAllWorldPilots()
	{
	}
}
[Token(Token = "0x200001F")]
public class AchievementHandlerWorldCompletion : AchievementHandler
{
	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB71D4C", Offset = "0xB71D4C", VA = "0xB71D4C", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB71D94", Offset = "0xB71D94", VA = "0xB71D94", Slot = "7")]
	public override void validateHandler()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB71F54", Offset = "0xB71F54", VA = "0xB71F54", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xB72094", Offset = "0xB72094", VA = "0xB72094", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xB72164", Offset = "0xB72164", VA = "0xB72164")]
	private void checkWorldsForCompletion()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xB72280", Offset = "0xB72280", VA = "0xB72280", Slot = "10")]
	public override int goalCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xB722E0", Offset = "0xB722E0", VA = "0xB722E0")]
	public AchievementHandlerWorldCompletion()
	{
	}
}
[Token(Token = "0x2000020")]
public sealed class AchievementNativeUIButton : MonoBehaviour
{
	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button TheButton;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SVGImage ButtonIcon;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGAsset IosIcon;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SVGAsset AndroidIcon;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xB722E8", Offset = "0xB722E8", VA = "0xB722E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB723E8", Offset = "0xB723E8", VA = "0xB723E8")]
	public void OnButtonClick()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xB72484", Offset = "0xB72484", VA = "0xB72484")]
	public AchievementNativeUIButton()
	{
	}
}
[Token(Token = "0x2000021")]
public abstract class AchievementReporter
{
	[Token(Token = "0x6000104")]
	public abstract bool isAuthenticated();

	[Token(Token = "0x6000105")]
	public abstract void authenticate(Action authenticateSucess);

	[Token(Token = "0x6000106")]
	public abstract void reportProgress(AchievementHandler handler, Action onSuccess);

	[Token(Token = "0x6000107")]
	public abstract bool isAchievementSupported(AchievementDefinition definition);

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xB7248C", Offset = "0xB7248C", VA = "0xB7248C")]
	protected AchievementReporter()
	{
	}
}
[Token(Token = "0x2000022")]
public class OculusAchievementReporter : AchievementReporter
{
	[Token(Token = "0x20002C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD860", Offset = "0x7CD860")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OculusAchievementReporter <>4__this;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onSuccess;

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xAF8828", Offset = "0xAF8828", VA = "0xAF8828")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xAF8988", Offset = "0xAF8988", VA = "0xAF8988")]
		internal void <reportProgress>b__0(Message msg)
		{
		}
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xAF84CC", Offset = "0xAF84CC", VA = "0xAF84CC", Slot = "5")]
	public override void authenticate(Action authenticateSucess)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xAF85C0", Offset = "0xAF85C0", VA = "0xAF85C0", Slot = "4")]
	public override bool isAuthenticated()
	{
		return default(bool);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xAF86A0", Offset = "0xAF86A0", VA = "0xAF86A0", Slot = "6")]
	public override void reportProgress(AchievementHandler handler, Action onSuccess)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xAF8830", Offset = "0xAF8830", VA = "0xAF8830")]
	private void achievementUnlockCallback(Message msg, Action onSuccess)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xAF8964", Offset = "0xAF8964", VA = "0xAF8964", Slot = "7")]
	public override bool isAchievementSupported(AchievementDefinition definition)
	{
		return default(bool);
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xAF8980", Offset = "0xAF8980", VA = "0xAF8980")]
	public OculusAchievementReporter()
	{
	}
}
[Token(Token = "0x2000023")]
public class SteamAchievementReporter : AchievementReporter
{
	[Token(Token = "0x600010F")]
	[Address(RVA = "0xA11F60", Offset = "0xA11F60", VA = "0xA11F60", Slot = "5")]
	public override void authenticate(Action authenticateSucess)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xA11F64", Offset = "0xA11F64", VA = "0xA11F64", Slot = "4")]
	public override bool isAuthenticated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xA11F6C", Offset = "0xA11F6C", VA = "0xA11F6C", Slot = "6")]
	public override void reportProgress(AchievementHandler handler, Action success)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xA11F70", Offset = "0xA11F70", VA = "0xA11F70", Slot = "7")]
	public override bool isAchievementSupported(AchievementDefinition definition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xA11F8C", Offset = "0xA11F8C", VA = "0xA11F8C")]
	public SteamAchievementReporter()
	{
	}
}
[Token(Token = "0x2000024")]
public class StubAchievementReporter : AchievementReporter
{
	[Token(Token = "0x6000114")]
	[Address(RVA = "0xA12E94", Offset = "0xA12E94", VA = "0xA12E94", Slot = "4")]
	public override bool isAuthenticated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xA12E9C", Offset = "0xA12E9C", VA = "0xA12E9C", Slot = "5")]
	public override void authenticate(Action authenticateSucess)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xA12EA0", Offset = "0xA12EA0", VA = "0xA12EA0", Slot = "6")]
	public override void reportProgress(AchievementHandler handler, Action onSuccess)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xA12EA4", Offset = "0xA12EA4", VA = "0xA12EA4", Slot = "7")]
	public override bool isAchievementSupported(AchievementDefinition definition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xA12EAC", Offset = "0xA12EAC", VA = "0xA12EAC")]
	public StubAchievementReporter()
	{
	}
}
[Token(Token = "0x2000025")]
public class DebugAchievementDisplay : MonoBehaviour
{
	[Token(Token = "0x20002C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD870", Offset = "0x7CD870")]
	private sealed class <updateLoop>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugAchievementDisplay <>4__this;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001689")]
			[Address(RVA = "0xA01E04", Offset = "0xA01E04", VA = "0xA01E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600168B")]
			[Address(RVA = "0xA01E6C", Offset = "0xA01E6C", VA = "0xA01E6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xA0196C", Offset = "0xA0196C", VA = "0xA0196C")]
		[DebuggerHidden]
		public <updateLoop>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xA01D2C", Offset = "0xA01D2C", VA = "0xA01D2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xA01D30", Offset = "0xA01D30", VA = "0xA01D30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xA01E0C", Offset = "0xA01E0C", VA = "0xA01E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text displayLabel;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string cloudSaveOutput;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xA01634", Offset = "0xA01634", VA = "0xA01634")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xA01880", Offset = "0xA01880", VA = "0xA01880")]
	private void cloudStorageCallback(Message<string> result)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xA01964", Offset = "0xA01964", VA = "0xA01964")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xA01798", Offset = "0xA01798", VA = "0xA01798")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D62C4", Offset = "0x7D62C4")]
	private IEnumerator updateLoop()
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xA01998", Offset = "0xA01998", VA = "0xA01998")]
	private void updateDisplay()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xA01CC4", Offset = "0xA01CC4", VA = "0xA01CC4")]
	public DebugAchievementDisplay()
	{
	}
}
[Token(Token = "0x2000026")]
public class AnalyticsController : BootableMonoBehaviour
{
	[Token(Token = "0x20002C4")]
	public sealed class Event
	{
		[Token(Token = "0x600168C")]
		[Address(RVA = "0xB74124", Offset = "0xB74124", VA = "0xB74124")]
		public Event()
		{
		}
	}

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Dictionary<string, object> analyticsDictCache;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AnalyticsProvider> providers;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool bootstrapCompleted;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static bool sendAnalytics;

	[Token(Token = "0x17000011")]
	private static string errorsToLogNextBoot
	{
		[Token(Token = "0x600011F")]
		[Address(RVA = "0xB72C40", Offset = "0xB72C40", VA = "0xB72C40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000120")]
		[Address(RVA = "0xB72C98", Offset = "0xB72C98", VA = "0xB72C98")]
		set
		{
		}
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xB72CEC", Offset = "0xB72CEC", VA = "0xB72CEC")]
	public static void addErrorToLogNextBoot(string eventName, string error)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xB72FA0", Offset = "0xB72FA0", VA = "0xB72FA0")]
	private void tryLogErrors()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xB73788", Offset = "0xB73788", VA = "0xB73788")]
	public bool isDataDodgy()
	{
		return default(bool);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xB73790", Offset = "0xB73790", VA = "0xB73790")]
	public int groupIntToIncrement(float seconds)
	{
		return default(int);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xB73810", Offset = "0xB73810", VA = "0xB73810")]
	public int roundTime(int time, int maxTime)
	{
		return default(int);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xB738AC", Offset = "0xB738AC", VA = "0xB738AC")]
	public float roundTime(float time, float maxTime)
	{
		return default(float);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xB73418", Offset = "0xB73418", VA = "0xB73418")]
	public void initialiseAnalyticsDict()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xB739B4", Offset = "0xB739B4", VA = "0xB739B4", Slot = "4")]
	public override void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xB73380", Offset = "0xB73380", VA = "0xB73380")]
	protected bool ready()
	{
		return default(bool);
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xB73CC0", Offset = "0xB73CC0", VA = "0xB73CC0")]
	public void setUserID(string newUserID)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xB73470", Offset = "0xB73470", VA = "0xB73470")]
	protected bool logEvent(string eventName, Dictionary<string, object> eventData, bool logErrorEvents = true)
	{
		return default(bool);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xB73DF0", Offset = "0xB73DF0", VA = "0xB73DF0")]
	protected void flushEvents()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xB74068", Offset = "0xB74068", VA = "0xB74068")]
	public AnalyticsController()
	{
	}
}
[Token(Token = "0x2000027")]
public class AnalyticsProvider
{
	[Token(Token = "0x600012F")]
	[Address(RVA = "0xB7412C", Offset = "0xB7412C", VA = "0xB7412C", Slot = "4")]
	public virtual void bootstrap()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xB74130", Offset = "0xB74130", VA = "0xB74130", Slot = "5")]
	public virtual void setUserID(string userID)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xB74134", Offset = "0xB74134", VA = "0xB74134", Slot = "6")]
	public virtual void setUserProperty(string propertyName, string propertyValue)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xB74138", Offset = "0xB74138", VA = "0xB74138", Slot = "7")]
	public virtual void logEvent(string eventType, Dictionary<string, object> eventData)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xB7413C", Offset = "0xB7413C", VA = "0xB7413C", Slot = "8")]
	public virtual void flushEvents()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xB74140", Offset = "0xB74140", VA = "0xB74140")]
	public AnalyticsProvider()
	{
	}
}
[Token(Token = "0x2000028")]
public sealed class AnimationEventScreenShake : MonoBehaviour
{
	[Token(Token = "0x6000135")]
	[Address(RVA = "0xB74148", Offset = "0xB74148", VA = "0xB74148")]
	public void triggerWeakShakeFromAnimation(float duration)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xB74234", Offset = "0xB74234", VA = "0xB74234")]
	public void triggerMediumShakeFromAnimation(float duration)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xB7426C", Offset = "0xB7426C", VA = "0xB7426C")]
	public void triggerHeavyShakeFromAnimation(float duration)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xB74180", Offset = "0xB74180", VA = "0xB74180")]
	private void doShake(ShakeParams shakeParams)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xB742A4", Offset = "0xB742A4", VA = "0xB742A4")]
	public AnimationEventScreenShake()
	{
	}
}
[Token(Token = "0x2000029")]
public sealed class AnimationPlaySound : MonoBehaviour
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string soundKey;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xB742AC", Offset = "0xB742AC", VA = "0xB742AC")]
	public void PlaySound()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xB74338", Offset = "0xB74338", VA = "0xB74338")]
	public void PlaySoundWithKey(string theKey)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xB743C0", Offset = "0xB743C0", VA = "0xB743C0")]
	public AnimationPlaySound()
	{
	}
}
[Token(Token = "0x200002A")]
public sealed class AnimationSetUISVG : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SVGImage SVGImage;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xB74420", Offset = "0xB74420", VA = "0xB74420")]
	public void setSVG(SVGAsset vectorGraphic)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xB74520", Offset = "0xB74520", VA = "0xB74520")]
	public AnimationSetUISVG()
	{
	}
}
[Token(Token = "0x200002B")]
public sealed class AttentionAnimation : MonoBehaviour
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve yOffset;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 position;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float theTime;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool animationShouldPlay;

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xB75024", Offset = "0xB75024", VA = "0xB75024")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xB75098", Offset = "0xB75098", VA = "0xB75098")]
	public void Update()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xB7511C", Offset = "0xB7511C", VA = "0xB7511C")]
	public AttentionAnimation()
	{
	}
}
[Token(Token = "0x200002C")]
public sealed class BBFloaty : MonoBehaviour
{
	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 speed;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 magnitude;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationSpeed;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotationMagnitude;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool enableBaseRoation;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float baseRotation;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool disableRotation;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 rot;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 pos;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float phase;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool randomTweakage;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool enableSecondaryMovement;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform m_transform;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SinCosLUT sinCosLUT;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 position;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xB84EA8", Offset = "0xB84EA8", VA = "0xB84EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xB850A4", Offset = "0xB850A4", VA = "0xB850A4")]
	public void activateSecondaryMovement(bool isActive)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xB85164", Offset = "0xB85164", VA = "0xB85164")]
	private void Update()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xB852BC", Offset = "0xB852BC", VA = "0xB852BC")]
	public BBFloaty()
	{
	}
}
[Token(Token = "0x200002D")]
public sealed class BBFloatyNoRotation : MonoBehaviour
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 speed;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 magnitude;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 pos;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float phase;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool randomTweakage;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool enableSecondaryMovement;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform m_transform;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SinCosLUT sinCosLUT;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 position;

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xB85394", Offset = "0xB85394", VA = "0xB85394")]
	private void Start()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xB854CC", Offset = "0xB854CC", VA = "0xB854CC")]
	public void activateSecondaryMovement(bool isActive)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xB85570", Offset = "0xB85570", VA = "0xB85570")]
	private void Update()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xB85660", Offset = "0xB85660", VA = "0xB85660")]
	public BBFloatyNoRotation()
	{
	}
}
[Token(Token = "0x200002E")]
public sealed class BBSpinner : MonoBehaviour
{
	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomAxis;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool randomSpeed;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool randomStart;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool spaceSelf;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion startingRotations;

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xB85738", Offset = "0xB85738", VA = "0xB85738")]
	private void Start()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xB85834", Offset = "0xB85834", VA = "0xB85834")]
	public void reset()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xB8586C", Offset = "0xB8586C", VA = "0xB8586C")]
	private void Update()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xB85964", Offset = "0xB85964", VA = "0xB85964")]
	public BBSpinner()
	{
	}
}
[Token(Token = "0x200002F")]
public sealed class BBWingFlappy : MonoBehaviour
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve zRotation;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float time;

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xB859EC", Offset = "0xB859EC", VA = "0xB859EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xB85A84", Offset = "0xB85A84", VA = "0xB85A84")]
	public BBWingFlappy()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public struct ShakeParams
{
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float strength;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float duration;

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x86BA30", Offset = "0x86BA30", VA = "0x86BA30")]
	public ShakeParams(float strength, float duration)
	{
	}
}
[Token(Token = "0x2000031")]
public sealed class CameraShake : MonoBehaviour
{
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD880", Offset = "0x7CD880")]
	private sealed class <ShakeRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraShake <>4__this;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsed>5__2;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <magnitude>5__3;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0x9F6478", Offset = "0x9F6478", VA = "0x9F6478", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001692")]
			[Address(RVA = "0x9F64E0", Offset = "0x9F64E0", VA = "0x9F64E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x9F6248", Offset = "0x9F6248", VA = "0x9F6248")]
		[DebuggerHidden]
		public <ShakeRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x9F6284", Offset = "0x9F6284", VA = "0x9F6284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x9F6288", Offset = "0x9F6288", VA = "0x9F6288", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x9F6480", Offset = "0x9F6480", VA = "0x9F6480", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 shakePosition;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 basePosition;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float shakeWeighting;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool doShake;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x9F5F64", Offset = "0x9F5F64", VA = "0x9F5F64")]
	public static bool isShakeOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x9F5F6C", Offset = "0x9F5F6C", VA = "0x9F5F6C")]
	public static void toggleShake()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x9F5FBC", Offset = "0x9F5FBC", VA = "0x9F5FBC")]
	public void updateBasePosition()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x9F5FF8", Offset = "0x9F5FF8", VA = "0x9F5FF8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x9F6114", Offset = "0x9F6114", VA = "0x9F6114")]
	private void CancelShaking()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x9F61B8", Offset = "0x9F61B8", VA = "0x9F61B8")]
	public void shake(ShakeParams shakeParams)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x9F61BC", Offset = "0x9F61BC", VA = "0x9F61BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D6328", Offset = "0x7D6328")]
	private IEnumerator ShakeRoutine(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x9F6274", Offset = "0x9F6274", VA = "0x9F6274")]
	public CameraShake()
	{
	}
}
[Token(Token = "0x2000032")]
public class FinalBossDirectorEvents : MonoBehaviour
{
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD890", Offset = "0x7CD890")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 startPosition;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 targetPos;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FinalBossDirectorEvents <>4__this;

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x9DC68C", Offset = "0x9DC68C", VA = "0x9DC68C")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x9DC6E4", Offset = "0x9DC6E4", VA = "0x9DC6E4")]
		internal void <finalBossLerpToSpawnPosition>b__0(float alpha)
		{
		}
	}

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector director;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE758", Offset = "0x7CE758")]
	public Transform soundEventLocation;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE790", Offset = "0x7CE790")]
	public Transform moveTarget;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float moveTime;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE7C8", Offset = "0x7CE7C8")]
	public GameObject target;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE800", Offset = "0x7CE800")]
	public List<GameObject> itemsToDisableForTournament;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x9DC1C4", Offset = "0x9DC1C4", VA = "0x9DC1C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x9DC32C", Offset = "0x9DC32C", VA = "0x9DC32C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x9DC3C4", Offset = "0x9DC3C4", VA = "0x9DC3C4")]
	public void startGameplayProcess()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x9DC43C", Offset = "0x9DC43C", VA = "0x9DC43C")]
	public void playSoundEventWithKey(string soundEventKey)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x9DC4B8", Offset = "0x9DC4B8", VA = "0x9DC4B8")]
	public void finalBossLerpToSpawnPosition()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x9DC694", Offset = "0x9DC694", VA = "0x9DC694")]
	private void disableMe()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x9DC6D4", Offset = "0x9DC6D4", VA = "0x9DC6D4")]
	public FinalBossDirectorEvents()
	{
	}
}
[Token(Token = "0x2000033")]
public class FinalBossIntoStart : MonoBehaviour
{
	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector director;

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x9DC7B4", Offset = "0x9DC7B4", VA = "0x9DC7B4")]
	public void startButtonWasPressed()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x9DC884", Offset = "0x9DC884", VA = "0x9DC884")]
	public FinalBossIntoStart()
	{
	}
}
[Token(Token = "0x2000034")]
public class HellBandmateSceneryToggle : MonoBehaviour
{
	[Token(Token = "0x40000A8")]
	private const string SpawnInEffectKey = "Particles/Shooty2_explosion_heavy";

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string assignedBandmateKey;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer visuals;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x9EC0AC", Offset = "0x9EC0AC", VA = "0x9EC0AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x9EC278", Offset = "0x9EC278", VA = "0x9EC278")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x9EC380", Offset = "0x9EC380", VA = "0x9EC380")]
	private void reenableEverything()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x9EC4C8", Offset = "0x9EC4C8", VA = "0x9EC4C8")]
	private void checkForLoop(object note)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x9EC634", Offset = "0x9EC634", VA = "0x9EC634")]
	public HellBandmateSceneryToggle()
	{
	}
}
[Token(Token = "0x2000035")]
public class HellDancingCrowdController : MonoBehaviour
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HellDancingCrowdMember[] children;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float loopDuration;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float jumpHeight;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve jumpCurve;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x9EC63C", Offset = "0x9EC63C", VA = "0x9EC63C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x9EC800", Offset = "0x9EC800", VA = "0x9EC800")]
	public HellDancingCrowdController()
	{
	}
}
[Token(Token = "0x2000036")]
public class HellDancingCrowdMember : MonoBehaviour
{
	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD8A0", Offset = "0x7CD8A0")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float jHeight;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HellDancingCrowdMember <>4__this;

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x9ECA18", Offset = "0x9ECA18", VA = "0x9ECA18")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x9ECA2C", Offset = "0x9ECA2C", VA = "0x9ECA2C")]
		internal void <playAnimation>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x9ECAE8", Offset = "0x9ECAE8", VA = "0x9ECAE8")]
		internal void <playAnimation>b__1()
		{
		}
	}

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool bootstrapped;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationCurve animCurve;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float duration;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float jumpHeight;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x9EC814", Offset = "0x9EC814", VA = "0x9EC814")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x9EC70C", Offset = "0x9EC70C", VA = "0x9EC70C")]
	public void staggerAnimation(AnimationCurve jumpCurve, float loopDuration, float height)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x9EC81C", Offset = "0x9EC81C", VA = "0x9EC81C")]
	private float randomTweakToValue(float value)
	{
		return default(float);
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x9EC840", Offset = "0x9EC840", VA = "0x9EC840")]
	private void prepAnimation()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x9EC8B4", Offset = "0x9EC8B4", VA = "0x9EC8B4")]
	private void playAnimation(float animationDuration, float jHeight)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x9ECA20", Offset = "0x9ECA20", VA = "0x9ECA20")]
	public HellDancingCrowdMember()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x9ECA28", Offset = "0x9ECA28", VA = "0x9ECA28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D638C", Offset = "0x7D638C")]
	private void <staggerAnimation>b__6_0()
	{
	}
}
[Token(Token = "0x2000037")]
public class HellEasterEgg : MonoBehaviour
{
	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject devilObject;

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x9ECB00", Offset = "0x9ECB00", VA = "0x9ECB00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x9ECC24", Offset = "0x9ECC24", VA = "0x9ECC24")]
	public HellEasterEgg()
	{
	}
}
[Token(Token = "0x2000038")]
public sealed class ModelSwapAnimation : MonoBehaviour
{
	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD8B0", Offset = "0x7CD8B0")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ModelSwapAnimation <>4__this;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeForFlash;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xA701B8", Offset = "0xA701B8", VA = "0xA701B8")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xA709B8", Offset = "0xA709B8", VA = "0xA709B8")]
		internal void <flashMaterials>b__0()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xA70A7C", Offset = "0xA70A7C", VA = "0xA70A7C")]
		internal void <flashMaterials>b__1()
		{
		}
	}

	[Token(Token = "0x20002C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD8C0", Offset = "0x7CD8C0")]
	private sealed class <flipBook>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModelSwapAnimation <>4__this;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <delay>5__2;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0xA70B84", Offset = "0xA70B84", VA = "0xA70B84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0xA70BEC", Offset = "0xA70BEC", VA = "0xA70BEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xA706B8", Offset = "0xA706B8", VA = "0xA706B8")]
		[DebuggerHidden]
		public <flipBook>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xA70A98", Offset = "0xA70A98", VA = "0xA70A98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xA70A9C", Offset = "0xA70A9C", VA = "0xA70A9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xA70B8C", Offset = "0xA70B8C", VA = "0xA70B8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE838", Offset = "0x7CE838")]
	public List<GameObject> modelsToSwap;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<MeshRenderer> renderersToSwap;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE870", Offset = "0x7CE870")]
	public float fps;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool loops;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool playOnAwake;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool playOnEnable;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string frameChangeSoundEvent;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE8A8", Offset = "0x7CE8A8")]
	public List<MeshRenderer> renderersToFlash;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool preventFlashOnSwapRenderers;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int frameIndex;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject currentFrame;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isFlashing;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool modelsArePrepped;

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xA6FD70", Offset = "0xA6FD70", VA = "0xA6FD70")]
	public void startFromInactive()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xA6FEC0", Offset = "0xA6FEC0", VA = "0xA6FEC0")]
	public void setAlphaOnAllFrames(float alpha)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xA6FF80", Offset = "0xA6FF80", VA = "0xA6FF80")]
	public void loadRenderers()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xA70098", Offset = "0xA70098", VA = "0xA70098")]
	public void flashMaterials(float flashValue, float timeForFlash)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xA701C0", Offset = "0xA701C0", VA = "0xA701C0")]
	private void changeMaterialFlashOnAllFrames(float flashValue)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xA702C4", Offset = "0xA702C4", VA = "0xA702C4")]
	private void updateMaterial(MeshRenderer renderer, float flashValue)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xA6FDBC", Offset = "0xA6FDBC", VA = "0xA6FDBC")]
	public void prepModels(bool force = false)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xA70350", Offset = "0xA70350", VA = "0xA70350")]
	public void resetActiveModels()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xA703F8", Offset = "0xA703F8", VA = "0xA703F8")]
	public void swapInNewFrames(GameObject[] modelsToSwapIn)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xA704EC", Offset = "0xA704EC", VA = "0xA704EC")]
	public void stepFrame()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xA6FE84", Offset = "0xA6FE84", VA = "0xA6FE84")]
	public void startAnimation()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xA7061C", Offset = "0xA7061C", VA = "0xA7061C")]
	public void Awake()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xA70654", Offset = "0xA70654", VA = "0xA70654")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xA7068C", Offset = "0xA7068C", VA = "0xA7068C")]
	public void stopAnimation()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xA705A0", Offset = "0xA705A0", VA = "0xA705A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D639C", Offset = "0x7D639C")]
	private IEnumerator flipBook()
	{
		return null;
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xA706E4", Offset = "0xA706E4", VA = "0xA706E4")]
	public void setFrame(int index)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xA7083C", Offset = "0xA7083C", VA = "0xA7083C")]
	public void moveToFrame(int index)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xA704F0", Offset = "0xA704F0", VA = "0xA704F0")]
	public void moveToNextFrame()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xA708E8", Offset = "0xA708E8", VA = "0xA708E8")]
	public ModelSwapAnimation()
	{
	}
}
[Token(Token = "0x2000039")]
public sealed class ParabolicMover : MonoBehaviour
{
	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD8D0", Offset = "0x7CD8D0")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float roof;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float xDistance;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color theColor;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParabolicMover <>4__this;

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xB050C8", Offset = "0xB050C8", VA = "0xB050C8")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xB050D0", Offset = "0xB050D0", VA = "0xB050D0")]
		internal void <startMovement>b__1(float lerpValue)
		{
		}
	}

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve yMovement;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve alphaMovement;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xExtent;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMin;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMax;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeMin;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeMax;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float delayMax;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SVGImage image;

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xB04D2C", Offset = "0xB04D2C", VA = "0xB04D2C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xB04DE0", Offset = "0xB04DE0", VA = "0xB04DE0")]
	private void reset()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xB04EC8", Offset = "0xB04EC8", VA = "0xB04EC8")]
	public void startMovement()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xB04F60", Offset = "0xB04F60", VA = "0xB04F60")]
	public ParabolicMover()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xB04F80", Offset = "0xB04F80", VA = "0xB04F80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6400", Offset = "0x7D6400")]
	private void <startMovement>b__11_0()
	{
	}
}
[Token(Token = "0x200003A")]
public sealed class Pulsate : MonoBehaviour
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve scaleMagnitude;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lerpValue;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool pulsateOnStart;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isLooping;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool relativeScale;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool doPlayAnimation;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool firstTime;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 theScale;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform myTransform;

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xAC157C", Offset = "0xAC157C", VA = "0xAC157C")]
	private void Start()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xAC15CC", Offset = "0xAC15CC", VA = "0xAC15CC")]
	public void stopAnimation()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xAC15C0", Offset = "0xAC15C0", VA = "0xAC15C0")]
	public void startAnimation()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xAC165C", Offset = "0xAC165C", VA = "0xAC165C")]
	public void restartAnimation()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xAC166C", Offset = "0xAC166C", VA = "0xAC166C")]
	public void resetBaseScale()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xAC16A8", Offset = "0xAC16A8", VA = "0xAC16A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xAC18E8", Offset = "0xAC18E8", VA = "0xAC18E8")]
	public Pulsate()
	{
	}
}
[Token(Token = "0x200003B")]
public sealed class SVGPartsCollection
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color partsColor;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SVGImage> parts;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xACB608", Offset = "0xACB608", VA = "0xACB608")]
	public void AddPart(SVGImage svgImage)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xACB6A0", Offset = "0xACB6A0", VA = "0xACB6A0")]
	public void SetColor(Color c)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xACB6AC", Offset = "0xACB6AC", VA = "0xACB6AC")]
	public void ApplyColor()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xACB754", Offset = "0xACB754", VA = "0xACB754")]
	public SVGPartsCollection()
	{
	}
}
[Token(Token = "0x200003C")]
public sealed class SVGColorSetter : MonoBehaviour
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color mainColor;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useMainColor;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform foreGround;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color foreGroundColor;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform midGround;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color midGroundColor;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform backGround;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color backGroundColor;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xACB268", Offset = "0xACB268", VA = "0xACB268")]
	public void CopyMainColorToAllColors()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xACB28C", Offset = "0xACB28C", VA = "0xACB28C")]
	private void SetAllColors()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xACB514", Offset = "0xACB514", VA = "0xACB514")]
	public void PushDownColors()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xACB308", Offset = "0xACB308", VA = "0xACB308")]
	private void SetColors(Transform t, Color c)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xACB59C", Offset = "0xACB59C", VA = "0xACB59C")]
	public SVGColorSetter()
	{
	}
}
[Token(Token = "0x200003D")]
public sealed class Simple2DAnimator : MonoBehaviour
{
	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD8E0", Offset = "0x7CD8E0")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Simple2DAnimator <>4__this;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool playForward;

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xB64C44", Offset = "0xB64C44", VA = "0xB64C44")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xB64DA0", Offset = "0xB64DA0", VA = "0xB64DA0")]
		internal void <restartAfterDelay>b__0()
		{
		}
	}

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransform;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve xOffset;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve yOffset;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve zRotation;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve scaleAll;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve xScale;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve yScale;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float theTime;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float forwardSpeed;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float reverseSpeed;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool loops;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool playOnEnable;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool deactivateWhenOff;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float duration;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool animationShouldPlay;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool forward;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int xOffsetKeysLength;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int yOffsetKeysLength;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int zRotationKeysLength;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int scaleAllKeysLength;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int xScaleKeysLength;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int yScaleKeysLength;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xB64704", Offset = "0xB64704", VA = "0xB64704")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xB6479C", Offset = "0xB6479C", VA = "0xB6479C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xB647D8", Offset = "0xB647D8", VA = "0xB647D8")]
	public void moveToFront()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xB64AA4", Offset = "0xB64AA4", VA = "0xB64AA4")]
	public void moveToEnd()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xB64880", Offset = "0xB64880", VA = "0xB64880")]
	public void moveToTime(float time)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xB64AAC", Offset = "0xB64AAC", VA = "0xB64AAC")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xB64B74", Offset = "0xB64B74", VA = "0xB64B74")]
	public void restartAfterDelay(float delay, bool playForward = true)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xB64828", Offset = "0xB64828", VA = "0xB64828")]
	public void restartAnimation(bool playForward = true)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xB64C4C", Offset = "0xB64C4C", VA = "0xB64C4C")]
	public void stop()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xB64C98", Offset = "0xB64C98", VA = "0xB64C98")]
	public void Update()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xB64D68", Offset = "0xB64D68", VA = "0xB64D68")]
	public Simple2DAnimator()
	{
	}
}
[Token(Token = "0x200003E")]
public class SimpleAnimation : MonoBehaviour
{
	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool getMyTransform;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected float duration;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SimpleAnimator myController;

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xB64DC0", Offset = "0xB64DC0", VA = "0xB64DC0", Slot = "4")]
	public virtual SimpleAnimator controllingAnimator()
	{
		return null;
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xB64E6C", Offset = "0xB64E6C", VA = "0xB64E6C", Slot = "5")]
	public virtual void setDuration(float time)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xB64E74", Offset = "0xB64E74", VA = "0xB64E74", Slot = "6")]
	public virtual void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xB64E78", Offset = "0xB64E78", VA = "0xB64E78", Slot = "7")]
	public virtual void moveToFront()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xB64E88", Offset = "0xB64E88", VA = "0xB64E88", Slot = "8")]
	public virtual void moveToEnd()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xB64E98", Offset = "0xB64E98", VA = "0xB64E98", Slot = "9")]
	public virtual void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xB64E9C", Offset = "0xB64E9C", VA = "0xB64E9C")]
	public SimpleAnimation()
	{
	}
}
[Token(Token = "0x200003F")]
public sealed class SimpleAnimationAction : SimpleAnimation
{
	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forwardTrigger;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool triggerForward;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action forwardAction;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float reverseTrigger;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool triggerReverse;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action reverseAction;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool firstPass;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool direction;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastTime;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xB64EA4", Offset = "0xB64EA4", VA = "0xB64EA4", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xB64EC0", Offset = "0xB64EC0", VA = "0xB64EC0", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xB64F70", Offset = "0xB64F70", VA = "0xB64F70")]
	public SimpleAnimationAction()
	{
	}
}
[Token(Token = "0x2000040")]
public sealed class SimpleAnimationActivateMultiple : SimpleAnimation
{
	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve activationCurve;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] targetObjects;

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xB64F8C", Offset = "0xB64F8C", VA = "0xB64F8C", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xB64FDC", Offset = "0xB64FDC", VA = "0xB64FDC")]
	private void activate(bool activate)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xB65080", Offset = "0xB65080", VA = "0xB65080")]
	public SimpleAnimationActivateMultiple()
	{
	}
}
[Token(Token = "0x2000041")]
public sealed class SimpleAnimationActivator : SimpleAnimation
{
	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve activationCurve;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject targetObject;

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xB65088", Offset = "0xB65088", VA = "0xB65088", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xB65118", Offset = "0xB65118", VA = "0xB65118")]
	public SimpleAnimationActivator()
	{
	}
}
[Token(Token = "0x2000042")]
public sealed class SimpleAnimationActivatorSwap : SimpleAnimation
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve activationCurve;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject targetObject01;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetObject02;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xB65120", Offset = "0xB65120", VA = "0xB65120", Slot = "7")]
	public override void moveToFront()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xB65130", Offset = "0xB65130", VA = "0xB65130", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xB651AC", Offset = "0xB651AC", VA = "0xB651AC")]
	public SimpleAnimationActivatorSwap()
	{
	}
}
[Token(Token = "0x2000043")]
public sealed class SimpleAnimationAdjustPosition : SimpleAnimation
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve xOffset;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve yOffset;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float initialXPos;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float initialYPos;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int xOffsetKeysLength;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int yOffsetKeysLength;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xB651B4", Offset = "0xB651B4", VA = "0xB651B4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xB65298", Offset = "0xB65298", VA = "0xB65298")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xB6533C", Offset = "0xB6533C", VA = "0xB6533C")]
	public SimpleAnimationAdjustPosition()
	{
	}
}
[Token(Token = "0x2000044")]
public sealed class SimpleAnimationBoing : SimpleAnimation
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve scaleAllForward;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve scaleAllReverse;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool deactivateAuto;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float scaleThreshold;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool direction;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int scaleAllForwardKeysLength;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int scaleAllReverseKeysLength;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool firstPass;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xB6534C", Offset = "0xB6534C", VA = "0xB6534C")]
	public void dumpCurves()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xB65408", Offset = "0xB65408", VA = "0xB65408", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xB65458", Offset = "0xB65458", VA = "0xB65458", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xB65684", Offset = "0xB65684", VA = "0xB65684")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xB656DC", Offset = "0xB656DC", VA = "0xB656DC")]
	public SimpleAnimationBoing()
	{
	}
}
[Token(Token = "0x2000045")]
public sealed class SimpleAnimationCanvasGroupAlpha : SimpleAnimation
{
	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int alphaKeysLength;

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xB65704", Offset = "0xB65704", VA = "0xB65704", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xB65784", Offset = "0xB65784", VA = "0xB65784")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xB657C0", Offset = "0xB657C0", VA = "0xB657C0")]
	public SimpleAnimationCanvasGroupAlpha()
	{
	}
}
[Token(Token = "0x2000046")]
public sealed class SimpleAnimationColorLerp : SimpleAnimation
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGImage targetImage;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve lerpCurve;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color color01;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color color02;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int lerpCurveKeysLength;

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xB657D0", Offset = "0xB657D0", VA = "0xB657D0", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xB65924", Offset = "0xB65924", VA = "0xB65924")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xB65960", Offset = "0xB65960", VA = "0xB65960")]
	public SimpleAnimationColorLerp()
	{
	}
}
[Token(Token = "0x2000047")]
public sealed class SimpleAnimationFollowPosition : SimpleAnimation
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform followTransform;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform targetTransform;

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xB65970", Offset = "0xB65970", VA = "0xB65970", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xB659B0", Offset = "0xB659B0", VA = "0xB659B0")]
	public SimpleAnimationFollowPosition()
	{
	}
}
[Token(Token = "0x2000048")]
public sealed class SimpleAnimationGateRigidBodyVelocity : SimpleAnimation
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody2D targetRigidbody;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve lerpCurve;

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xB659B8", Offset = "0xB659B8", VA = "0xB659B8", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xB65B28", Offset = "0xB65B28", VA = "0xB65B28")]
	public SimpleAnimationGateRigidBodyVelocity()
	{
	}
}
[Token(Token = "0x2000049")]
public sealed class SimpleAnimationMaterialColourLerp : SimpleAnimation
{
	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color startColour;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color endColour;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer theRenderer;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string matColourVariable;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve lerpCurve;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int matVariableID;

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xB65B30", Offset = "0xB65B30", VA = "0xB65B30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xB65BAC", Offset = "0xB65BAC", VA = "0xB65BAC", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xB65C80", Offset = "0xB65C80", VA = "0xB65C80")]
	public SimpleAnimationMaterialColourLerp()
	{
	}
}
[Token(Token = "0x200004A")]
public sealed class SimpleAnimationMaterialFloatLerp : SimpleAnimation
{
	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer theRenderer;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string matVariable;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve lerpCurve;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int matVariableID;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xB65C88", Offset = "0xB65C88", VA = "0xB65C88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xB65D18", Offset = "0xB65D18", VA = "0xB65D18", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xB65DFC", Offset = "0xB65DFC", VA = "0xB65DFC")]
	public SimpleAnimationMaterialFloatLerp()
	{
	}
}
[Token(Token = "0x200004B")]
public sealed class SimpleAnimationMoveToPosition : SimpleAnimation
{
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform startPoint;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform endPoint;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve movementCurve;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool playsForward;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool playsReverse;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool playsLinearInReverse;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool currentDirectionForward;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimationCurve animationCurveToUse;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve linearMovementCurve;

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xB65E04", Offset = "0xB65E04", VA = "0xB65E04", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xB65E10", Offset = "0xB65E10", VA = "0xB65E10", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xB65FB4", Offset = "0xB65FB4", VA = "0xB65FB4")]
	public SimpleAnimationMoveToPosition()
	{
	}
}
[Token(Token = "0x200004C")]
public sealed class SimpleAnimationMoveToPositionWithCurveType : SimpleAnimation
{
	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform startPoint;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform endPoint;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform reverseStartPoint;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurveType forwardMovementCurve;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AnimationCurveType reverseMovementCurve;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeOffset;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool playsForward;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool playsReverse;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	private bool currentDirectionForward;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve animationCurveToUse;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform startPointToUse;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool offsetCached;

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xB66008", Offset = "0xB66008", VA = "0xB66008", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xB66200", Offset = "0xB66200", VA = "0xB66200", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xB6654C", Offset = "0xB6654C", VA = "0xB6654C")]
	private void offsetKeyTime()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xB66654", Offset = "0xB66654", VA = "0xB66654")]
	public SimpleAnimationMoveToPositionWithCurveType()
	{
	}
}
[Token(Token = "0x200004D")]
public sealed class SimpleAnimationMoveToPositionXY : SimpleAnimation
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform startPoint;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform endPoint;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve xMovementCurve;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve yMovementCurve;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xB66678", Offset = "0xB66678", VA = "0xB66678", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xB667F8", Offset = "0xB667F8", VA = "0xB667F8")]
	public SimpleAnimationMoveToPositionXY()
	{
	}
}
[Token(Token = "0x200004E")]
public class SimpleAnimationMoveToWorldPosition : SimpleAnimation
{
	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 startPoint;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 endPoint;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve movementCurve;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool playsForward;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool playsReverse;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool playsLinearInReverse;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	protected bool currentDirectionForward;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected AnimationCurve animationCurveToUse;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected AnimationCurve linearMovementCurve;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xB66800", Offset = "0xB66800", VA = "0xB66800", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xB6680C", Offset = "0xB6680C", VA = "0xB6680C", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xB66978", Offset = "0xB66978", VA = "0xB66978")]
	public SimpleAnimationMoveToWorldPosition()
	{
	}
}
[Token(Token = "0x200004F")]
public sealed class SimpleAnimationMoveToWorldPositionXY : SimpleAnimationMoveToWorldPosition
{
	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve additionalAxisCurve;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AnimationCurve additionalAxisCurveToUse;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xB669CC", Offset = "0xB669CC", VA = "0xB669CC", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xB66B9C", Offset = "0xB66B9C", VA = "0xB66B9C")]
	public SimpleAnimationMoveToWorldPositionXY()
	{
	}
}
[Token(Token = "0x2000050")]
public sealed class SimpleAnimationOnOff : SimpleAnimation
{
	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool state;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject targetObject;

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xB66BA0", Offset = "0xB66BA0", VA = "0xB66BA0", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xB66BC4", Offset = "0xB66BC4", VA = "0xB66BC4")]
	public SimpleAnimationOnOff()
	{
	}
}
[Token(Token = "0x2000051")]
public sealed class SimpleAnimationParticles : SimpleAnimation
{
	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem theParticleSystem;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float forwardTrigger;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float reverseTrigger;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool applicationIsQuitting;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool firstPass;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool direction;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastTime;

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xB66BCC", Offset = "0xB66BCC", VA = "0xB66BCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xB66C40", Offset = "0xB66C40", VA = "0xB66C40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xB66CA4", Offset = "0xB66CA4", VA = "0xB66CA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xB66D18", Offset = "0xB66D18", VA = "0xB66D18")]
	private void ApplicationQuitting()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xB66D24", Offset = "0xB66D24", VA = "0xB66D24", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xB66D40", Offset = "0xB66D40", VA = "0xB66D40", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xB66E50", Offset = "0xB66E50", VA = "0xB66E50")]
	public SimpleAnimationParticles()
	{
	}
}
[Token(Token = "0x2000052")]
public sealed class SimpleAnimationPauseAnotherAnimator : SimpleAnimation
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleAnimator targetAnimator;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve pauseCurve;

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xB66E68", Offset = "0xB66E68", VA = "0xB66E68", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xB66F88", Offset = "0xB66F88", VA = "0xB66F88")]
	public SimpleAnimationPauseAnotherAnimator()
	{
	}
}
[Token(Token = "0x2000053")]
public sealed class SimpleAnimationPoolableParticles : SimpleAnimation
{
	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform source;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float forwardTrigger;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string forwardTriggerParticleKey;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float reverseTrigger;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string reverseTriggerParticleKey;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool applicationIsQuitting;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string particleID;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool firstPass;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool direction;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastTime;

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xB66F90", Offset = "0xB66F90", VA = "0xB66F90")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xB67004", Offset = "0xB67004", VA = "0xB67004")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xB67164", Offset = "0xB67164", VA = "0xB67164")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xB671D8", Offset = "0xB671D8", VA = "0xB671D8")]
	private void ApplicationQuitting()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xB671E4", Offset = "0xB671E4", VA = "0xB671E4", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xB67200", Offset = "0xB67200", VA = "0xB67200", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xB672C0", Offset = "0xB672C0", VA = "0xB672C0")]
	private void playParticle(string particleKey)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xB670C4", Offset = "0xB670C4", VA = "0xB670C4")]
	private void disableParticle()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xB673BC", Offset = "0xB673BC", VA = "0xB673BC")]
	public SimpleAnimationPoolableParticles()
	{
	}
}
[Token(Token = "0x2000054")]
public sealed class SimpleAnimationPosition : SimpleAnimation
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve xOffset;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve yOffset;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int xOffsetKeysLength;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int yOffsetKeysLength;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 pos;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xB673D8", Offset = "0xB673D8", VA = "0xB673D8", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xB674A0", Offset = "0xB674A0", VA = "0xB674A0")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xB674F8", Offset = "0xB674F8", VA = "0xB674F8")]
	public SimpleAnimationPosition()
	{
	}
}
[Token(Token = "0x2000055")]
public sealed class SimpleAnimationPositionRelative : SimpleAnimation
{
	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve xOffset;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve yOffset;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool updateBasePositionEveryEnable;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int xOffsetKeysLength;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int yOffsetKeysLength;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 initialPos;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isInitialPositionSet;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 pos;

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xB67508", Offset = "0xB67508", VA = "0xB67508")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xB67580", Offset = "0xB67580", VA = "0xB67580", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xB67584", Offset = "0xB67584", VA = "0xB67584", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xB67644", Offset = "0xB67644", VA = "0xB67644")]
	private void CacheKeysLength()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xB6750C", Offset = "0xB6750C", VA = "0xB6750C")]
	private void SetInitialPos()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xB676C0", Offset = "0xB676C0", VA = "0xB676C0")]
	public SimpleAnimationPositionRelative()
	{
	}
}
[Token(Token = "0x2000056")]
public sealed class SimpleAnimationRandomizerMaterialLerp : SimpleAnimation
{
	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material randomizerMaterial;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Gradient gradient;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color col;

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xB676D8", Offset = "0xB676D8", VA = "0xB676D8", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xB67790", Offset = "0xB67790", VA = "0xB67790")]
	public SimpleAnimationRandomizerMaterialLerp()
	{
	}
}
[Token(Token = "0x2000057")]
public sealed class SimpleAnimationRawImageAdditiveMaterialAlpha : SimpleAnimation
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage targetImage;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color colour;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int alphaKeysLength;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xB67798", Offset = "0xB67798", VA = "0xB67798", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xB67890", Offset = "0xB67890", VA = "0xB67890")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xB678CC", Offset = "0xB678CC", VA = "0xB678CC")]
	public SimpleAnimationRawImageAdditiveMaterialAlpha()
	{
	}
}
[Token(Token = "0x2000058")]
public sealed class SimpleAnimationRawImageAlpha : SimpleAnimation
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage targetImage;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int alphaKeysLength;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xB678DC", Offset = "0xB678DC", VA = "0xB678DC", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xB6798C", Offset = "0xB6798C", VA = "0xB6798C")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xB679C8", Offset = "0xB679C8", VA = "0xB679C8")]
	public SimpleAnimationRawImageAlpha()
	{
	}
}
[Token(Token = "0x2000059")]
public sealed class SimpleAnimationRotation : SimpleAnimation
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve zRotation;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int zRotationKeysLength;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 oilers;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xB679D8", Offset = "0xB679D8", VA = "0xB679D8", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xB67A7C", Offset = "0xB67A7C", VA = "0xB67A7C")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xB67ADC", Offset = "0xB67ADC", VA = "0xB67ADC")]
	public SimpleAnimationRotation()
	{
	}
}
[Token(Token = "0x200005A")]
public sealed class SimpleAnimationRotationRelative : SimpleAnimation
{
	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve zRotation;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 initialRotation;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xB67AEC", Offset = "0xB67AEC", VA = "0xB67AEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xB67B24", Offset = "0xB67B24", VA = "0xB67B24", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xB67BA0", Offset = "0xB67BA0", VA = "0xB67BA0")]
	public SimpleAnimationRotationRelative()
	{
	}
}
[Token(Token = "0x200005B")]
public sealed class SimpleAnimationSVGAlpha : SimpleAnimation
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGImage targetImage;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int alphaKeysLength;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xB67BA8", Offset = "0xB67BA8", VA = "0xB67BA8", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xB67C58", Offset = "0xB67C58", VA = "0xB67C58")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xB67C94", Offset = "0xB67C94", VA = "0xB67C94")]
	public SimpleAnimationSVGAlpha()
	{
	}
}
[Token(Token = "0x200005C")]
public sealed class SimpleAnimationSVGAlphaNumeric : SimpleAnimation
{
	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGImage targetImage;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SVGRenderer targetRenderer;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float startAlpha;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float endAlpha;

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xB67CA4", Offset = "0xB67CA4", VA = "0xB67CA4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xB67E5C", Offset = "0xB67E5C", VA = "0xB67E5C")]
	public SimpleAnimationSVGAlphaNumeric()
	{
	}
}
[Token(Token = "0x200005D")]
public sealed class SimpleAnimationSVGImageMaterialFloatLerp : SimpleAnimation
{
	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGImage theSVGImage;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string matVariable;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve lerpCurve;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int matVariableID;

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xB67E64", Offset = "0xB67E64", VA = "0xB67E64")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xB67E90", Offset = "0xB67E90", VA = "0xB67E90", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xB67F04", Offset = "0xB67F04", VA = "0xB67F04")]
	public SimpleAnimationSVGImageMaterialFloatLerp()
	{
	}
}
[Token(Token = "0x200005E")]
public sealed class SimpleAnimationSVGMaterialDissolve : SimpleAnimation
{
	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGRenderer svgRenderer;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve materialDissolveCurve;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string cutOffKey;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int materialkDissolveCurveKeysLength;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SVGRendererMaterial;

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xB67F0C", Offset = "0xB67F0C", VA = "0xB67F0C", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xB67F94", Offset = "0xB67F94", VA = "0xB67F94")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xB6805C", Offset = "0xB6805C", VA = "0xB6805C")]
	public SimpleAnimationSVGMaterialDissolve()
	{
	}
}
[Token(Token = "0x200005F")]
public sealed class SimpleAnimationSVGRendererAlpha : SimpleAnimation
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGRenderer targetImage;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int alphaKeysLength;

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xB680C4", Offset = "0xB680C4", VA = "0xB680C4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xB68158", Offset = "0xB68158", VA = "0xB68158")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xB68194", Offset = "0xB68194", VA = "0xB68194")]
	public SimpleAnimationSVGRendererAlpha()
	{
	}
}
[Token(Token = "0x2000060")]
public sealed class SimpleAnimationSVGRendererMaterialAlpha : SimpleAnimation
{
	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGRenderer svgRenderer;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string alphaKey;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int alphaKeysLength;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SVGRendererMaterial;

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xB681A4", Offset = "0xB681A4", VA = "0xB681A4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xB6822C", Offset = "0xB6822C", VA = "0xB6822C")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xB682F4", Offset = "0xB682F4", VA = "0xB682F4")]
	public SimpleAnimationSVGRendererMaterialAlpha()
	{
	}
}
[Token(Token = "0x2000061")]
public sealed class SimpleAnimationSVGSwap : SimpleAnimation
{
	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve activationCurve;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SVGRenderer targetSVGRenderer;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer targetMeshRenderer;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SVGAsset defaultSVGImage;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SVGAsset swapSVGImage;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool doSwapSortingOrder;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int defaultSortingOrder;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int swapSortingOrder;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool hasSwapped;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material svgMaterial;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xB6835C", Offset = "0xB6835C", VA = "0xB6835C", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xB68478", Offset = "0xB68478", VA = "0xB68478", Slot = "7")]
	public override void moveToFront()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xB68404", Offset = "0xB68404", VA = "0xB68404")]
	private void swapSVG(SVGAsset svg)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xB684A8", Offset = "0xB684A8", VA = "0xB684A8")]
	public SimpleAnimationSVGSwap()
	{
	}
}
[Token(Token = "0x2000062")]
public sealed class SimpleAnimationSVGUISwap : SimpleAnimation
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve activationCurve;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SVGImage targetSVGImage;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SVGAsset defaultSVGImage;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SVGAsset swapSVGImage;

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xB684B0", Offset = "0xB684B0", VA = "0xB684B0", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xB685AC", Offset = "0xB685AC", VA = "0xB685AC", Slot = "7")]
	public override void moveToFront()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xB684FC", Offset = "0xB684FC", VA = "0xB684FC")]
	private void swapSVG(SVGAsset svg)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xB685F0", Offset = "0xB685F0", VA = "0xB685F0")]
	public SimpleAnimationSVGUISwap()
	{
	}
}
[Token(Token = "0x2000063")]
public sealed class SimpleAnimationScale : SimpleAnimation
{
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve scaleAll;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int scaleAllKeysLength;

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xB685F8", Offset = "0xB685F8", VA = "0xB685F8", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xB68710", Offset = "0xB68710", VA = "0xB68710")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xB68770", Offset = "0xB68770", VA = "0xB68770")]
	public void testButton()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xB687E0", Offset = "0xB687E0", VA = "0xB687E0")]
	public SimpleAnimationScale()
	{
	}
}
[Token(Token = "0x2000064")]
public sealed class SimpleAnimationScaleCurveType : SimpleAnimation
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurveType forwardScaleCurve;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public AnimationCurveType reverseScaleCurve;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool swapCurvesOnReverse;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float timeOffset;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleOffset;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AnimationCurve animationCurveToUse;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int curveKeysLength;

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xB687F0", Offset = "0xB687F0", VA = "0xB687F0", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xB68994", Offset = "0xB68994", VA = "0xB68994", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xB68920", Offset = "0xB68920", VA = "0xB68920")]
	private void CacheKeysLength()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xB68AFC", Offset = "0xB68AFC", VA = "0xB68AFC")]
	private void offsetKeyTime()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xB68BF8", Offset = "0xB68BF8", VA = "0xB68BF8")]
	public SimpleAnimationScaleCurveType()
	{
	}
}
[Token(Token = "0x2000065")]
public sealed class SimpleAnimationScaleRelative : SimpleAnimation
{
	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve scaleAll;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int scaleAllKeysLength;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 initialScale;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xB68C1C", Offset = "0xB68C1C", VA = "0xB68C1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xB68C98", Offset = "0xB68C98", VA = "0xB68C98", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xB68E50", Offset = "0xB68E50", VA = "0xB68E50")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xB68C60", Offset = "0xB68C60", VA = "0xB68C60")]
	private void SetInitialScale()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xB68E90", Offset = "0xB68E90", VA = "0xB68E90")]
	public SimpleAnimationScaleRelative()
	{
	}
}
[Token(Token = "0x2000066")]
public sealed class SimpleAnimationScaleXY : SimpleAnimation
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve xScale;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve yScale;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int xScaleKeysLength;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int yScaleKeysLength;

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xB68EA0", Offset = "0xB68EA0", VA = "0xB68EA0", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xB68F60", Offset = "0xB68F60", VA = "0xB68F60")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xB68FB8", Offset = "0xB68FB8", VA = "0xB68FB8")]
	public SimpleAnimationScaleXY()
	{
	}
}
[Token(Token = "0x2000067")]
public sealed class SimpleAnimationScaleXYRelative : SimpleAnimation
{
	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve xScale;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve yScale;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int xScaleKeysLength;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int yScaleKeysLength;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 initialScale;

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xB68FC8", Offset = "0xB68FC8", VA = "0xB68FC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xB69030", Offset = "0xB69030", VA = "0xB69030", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xB69114", Offset = "0xB69114", VA = "0xB69114")]
	private void SetUpOnce()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xB691B4", Offset = "0xB691B4", VA = "0xB691B4")]
	public void SetInitialScale(Vector3 scale)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xB691C0", Offset = "0xB691C0", VA = "0xB691C0")]
	public SimpleAnimationScaleXYRelative()
	{
	}
}
[Token(Token = "0x2000068")]
public sealed class SimpleAnimationScreenShake : SimpleAnimation
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forwardTrigger;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool triggerForward;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 shakeParamValues;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ShakeParams shakeParams;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float reverseTrigger;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool triggerReverse;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool firstPass;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool direction;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastTime;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xB691D0", Offset = "0xB691D0", VA = "0xB691D0", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xB691EC", Offset = "0xB691EC", VA = "0xB691EC", Slot = "7")]
	public override void moveToFront()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xB691F0", Offset = "0xB691F0", VA = "0xB691F0", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xB693B4", Offset = "0xB693B4", VA = "0xB693B4")]
	public SimpleAnimationScreenShake()
	{
	}
}
[Token(Token = "0x2000069")]
public sealed class SimpleAnimationScrollToCenter : SimpleAnimation
{
	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform scrollContainer;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform objectToPutInCenter;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform centerPoint;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve movementCurve;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool currentDirectionForward;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 scrollDestination;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 scrollStart;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool vertical;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool horizontal;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xB69418", Offset = "0xB69418", VA = "0xB69418", Slot = "5")]
	public override void setDuration(float time)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xB69420", Offset = "0xB69420", VA = "0xB69420")]
	private void setPositions()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xB69588", Offset = "0xB69588", VA = "0xB69588", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xB69594", Offset = "0xB69594", VA = "0xB69594", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xB696AC", Offset = "0xB696AC", VA = "0xB696AC")]
	public SimpleAnimationScrollToCenter()
	{
	}
}
[Token(Token = "0x200006A")]
public sealed class SimpleAnimationSepcialSandWaterfall : SimpleAnimation
{
	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGRenderer sandBlockRenderer;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer sandWaterfallRenderer;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve blockDissolveCurve;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve sandWaterfallBaseCutOff;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve sandWaterfallTopCutOff;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve sandWaterfallAlpha;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int blockDissolveCurveKeysLength;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int sandWaterfallBaseCutOffKeysLength;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int sandWaterfallTopCutOffKeysLength;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int sandWaterfallAlphaKeysLength;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material sandBlockRendererMaterial;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material sandWaterfallRendererMaterial;

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xB696C0", Offset = "0xB696C0", VA = "0xB696C0", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xB698DC", Offset = "0xB698DC", VA = "0xB698DC")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xB69A50", Offset = "0xB69A50", VA = "0xB69A50")]
	public SimpleAnimationSepcialSandWaterfall()
	{
	}
}
[Token(Token = "0x200006B")]
public sealed class SimpleAnimationSound : SimpleAnimation
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool triggerForward;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x7CE8E0", Offset = "0x7CE8E0")]
	public float forwardTrigger;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool triggerReverse;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x7CE91C", Offset = "0x7CE91C")]
	public float reverseTrigger;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string soundKey;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool loopingSound;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool hasPlayed;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool animationPlayingForward;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lastTime;

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xB69A60", Offset = "0xB69A60", VA = "0xB69A60", Slot = "7")]
	public override void moveToFront()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xB69A7C", Offset = "0xB69A7C", VA = "0xB69A7C", Slot = "8")]
	public override void moveToEnd()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xB69A98", Offset = "0xB69A98", VA = "0xB69A98", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xB69AA4", Offset = "0xB69AA4", VA = "0xB69AA4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xB69BC4", Offset = "0xB69BC4", VA = "0xB69BC4")]
	public SimpleAnimationSound()
	{
	}
}
[Token(Token = "0x200006C")]
public sealed class SimpleAnimationSoundOnCurve : SimpleAnimation
{
	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string soundKey;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve soundTiming;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float threshold;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hitTheThreshold;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool quiet;

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xB69BE4", Offset = "0xB69BE4", VA = "0xB69BE4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xB69CD0", Offset = "0xB69CD0", VA = "0xB69CD0")]
	public void setIsQuiet(bool isQuiet)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xB69CDC", Offset = "0xB69CDC", VA = "0xB69CDC")]
	public SimpleAnimationSoundOnCurve()
	{
	}
}
[Token(Token = "0x200006D")]
public sealed class SimpleAnimationTextAlpha : SimpleAnimation
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text targetImage;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int alphaKeysLength;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xB69CEC", Offset = "0xB69CEC", VA = "0xB69CEC", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xB69D9C", Offset = "0xB69D9C", VA = "0xB69D9C")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xB69DD8", Offset = "0xB69DD8", VA = "0xB69DD8")]
	public SimpleAnimationTextAlpha()
	{
	}
}
[Token(Token = "0x200006E")]
public sealed class SimpleAnimationTimeScale : SimpleAnimation
{
	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve lerpCurve;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xB69DE8", Offset = "0xB69DE8", VA = "0xB69DE8", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xB69E10", Offset = "0xB69E10", VA = "0xB69E10")]
	public SimpleAnimationTimeScale()
	{
	}
}
[Token(Token = "0x200006F")]
public sealed class SimpleAnimationTrailRenderer : SimpleAnimation
{
	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TrailRenderer trail;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alphaCurve;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve widthCurve;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string alphaVariable;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int matVariableID;

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xB69E18", Offset = "0xB69E18", VA = "0xB69E18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xB69E44", Offset = "0xB69E44", VA = "0xB69E44", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xB69F50", Offset = "0xB69F50", VA = "0xB69F50")]
	public SimpleAnimationTrailRenderer()
	{
	}
}
[Token(Token = "0x2000070")]
public sealed class SimpleAnimationTrigger : SimpleAnimation
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forwardTrigger;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool triggerForward;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent forwardTriggerEvent;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float reverseTrigger;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool triggerReverse;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent reverseTriggerEvent;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool firstPass;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool direction;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastTime;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xB69FB0", Offset = "0xB69FB0", VA = "0xB69FB0", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xB69FCC", Offset = "0xB69FCC", VA = "0xB69FCC", Slot = "7")]
	public override void moveToFront()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xB69FD0", Offset = "0xB69FD0", VA = "0xB69FD0", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xB6A080", Offset = "0xB6A080", VA = "0xB6A080")]
	public SimpleAnimationTrigger()
	{
	}
}
[Token(Token = "0x2000071")]
public sealed class SimpleAnimationUIParticles : SimpleAnimation
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage renderImage;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float forwardTrigger;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string forwardTriggerParticleKey;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float reverseTrigger;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string reverseTriggerParticleKey;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float forwardDisableTrigger;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float reverseDisableTrigger;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool loopingParticle;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool applicationIsQuitting;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string particleID;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool firstPass;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool direction;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float lastTime;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xB6A09C", Offset = "0xB6A09C", VA = "0xB6A09C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xB6A110", Offset = "0xB6A110", VA = "0xB6A110")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xB6A2A8", Offset = "0xB6A2A8", VA = "0xB6A2A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xB6A31C", Offset = "0xB6A31C", VA = "0xB6A31C")]
	private void ApplicationQuitting()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xB6A328", Offset = "0xB6A328", VA = "0xB6A328", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xB6A344", Offset = "0xB6A344", VA = "0xB6A344", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xB6A4C0", Offset = "0xB6A4C0", VA = "0xB6A4C0")]
	private void playParticle(string particleKey)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xB6A1D0", Offset = "0xB6A1D0", VA = "0xB6A1D0")]
	private void disableParticle()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xB6A5C0", Offset = "0xB6A5C0", VA = "0xB6A5C0")]
	public SimpleAnimationUIParticles()
	{
	}
}
[Token(Token = "0x2000072")]
public sealed class SimpleAnimator : MonoBehaviour
{
	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD8F0", Offset = "0x7CD8F0")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SimpleAnimator <>4__this;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool playForward;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action completion;

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xB6AEC0", Offset = "0xB6AEC0", VA = "0xB6AEC0")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xB6B328", Offset = "0xB6B328", VA = "0xB6B328")]
		internal void <restartAfterDelay>b__0()
		{
		}
	}

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float theTime;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float forwardSpeed;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float reverseSpeed;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool loops;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float duration;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool animationShouldPlay;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool forward;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve timeCurve;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<SimpleAnimation> animations;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool CollectAllChildrenAnimations;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> childAnimations;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool doneCollected;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int lastCount;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action animationComplete;

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xB6A5DC", Offset = "0xB6A5DC", VA = "0xB6A5DC")]
	public void moveToFront()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xB6AAD8", Offset = "0xB6AAD8", VA = "0xB6AAD8")]
	public bool isAtFront()
	{
		return default(bool);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xB6AB50", Offset = "0xB6AB50", VA = "0xB6AB50")]
	public bool animationIsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xB6AB58", Offset = "0xB6AB58", VA = "0xB6AB58")]
	public void moveToEnd()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xB6A700", Offset = "0xB6A700", VA = "0xB6A700")]
	public void collectAnimations()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xB6AC60", Offset = "0xB6AC60", VA = "0xB6AC60")]
	private void notPlayingCollectAnimations()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xB6ACE4", Offset = "0xB6ACE4", VA = "0xB6ACE4")]
	public void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xB6ADDC", Offset = "0xB6ADDC", VA = "0xB6ADDC")]
	public void restartAfterDelay(float delay, bool playForward = true, [Optional] Action completion)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xB6AEC8", Offset = "0xB6AEC8", VA = "0xB6AEC8")]
	public void go(bool forward)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xB6AF68", Offset = "0xB6AF68", VA = "0xB6AF68")]
	public void pause(bool pause)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xB6AF78", Offset = "0xB6AF78", VA = "0xB6AF78")]
	public void playForward()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xB6AF08", Offset = "0xB6AF08", VA = "0xB6AF08")]
	public void goForward([Optional] Action completion)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xB6AF38", Offset = "0xB6AF38", VA = "0xB6AF38")]
	public void goReverse([Optional] Action completion)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xB66EDC", Offset = "0xB66EDC", VA = "0xB66EDC")]
	public void restartAnimation(bool playForward = true, [Optional] Action completion)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xB6B050", Offset = "0xB6B050", VA = "0xB6B050")]
	public void triggerRestart(bool playForward = true)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xB6AFA4", Offset = "0xB6AFA4", VA = "0xB6AFA4")]
	public void setDirection(bool playForward)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xB6B0FC", Offset = "0xB6B0FC", VA = "0xB6B0FC")]
	public void stop()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xB66F80", Offset = "0xB66F80", VA = "0xB66F80")]
	public void stopAndMoveToFront()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xB6B104", Offset = "0xB6B104", VA = "0xB6B104")]
	public void Update()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xB6B1F4", Offset = "0xB6B1F4", VA = "0xB6B1F4")]
	private void notifyComplete()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xB6B234", Offset = "0xB6B234", VA = "0xB6B234")]
	public SimpleAnimator()
	{
	}
}
[Token(Token = "0x2000073")]
public sealed class SimpleAnimatorPlayOnAwake : MonoBehaviour
{
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD900", Offset = "0x7CD900")]
	private sealed class <waitForDelay>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleAnimatorPlayOnAwake <>4__this;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016AA")]
			[Address(RVA = "0xB6B5A8", Offset = "0xB6B5A8", VA = "0xB6B5A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0xB6B610", Offset = "0xB6B610", VA = "0xB6B610", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xB6B4B0", Offset = "0xB6B4B0", VA = "0xB6B4B0")]
		[DebuggerHidden]
		public <waitForDelay>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xB6B4E4", Offset = "0xB6B4E4", VA = "0xB6B4E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xB6B4E8", Offset = "0xB6B4E8", VA = "0xB6B4E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xB6B5B0", Offset = "0xB6B5B0", VA = "0xB6B5B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayTime;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delayTimeTweakageRange;

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xB6B34C", Offset = "0xB6B34C", VA = "0xB6B34C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xB6B434", Offset = "0xB6B434", VA = "0xB6B434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D6410", Offset = "0x7D6410")]
	private IEnumerator waitForDelay()
	{
		return null;
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xB6B3C4", Offset = "0xB6B3C4", VA = "0xB6B3C4")]
	private void runAnim()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xB6B4DC", Offset = "0xB6B4DC", VA = "0xB6B4DC")]
	public SimpleAnimatorPlayOnAwake()
	{
	}
}
[Token(Token = "0x2000074")]
public sealed class SimpleAnimatorPlayOnEnable : MonoBehaviour
{
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD910", Offset = "0x7CD910")]
	private sealed class <waitForDelay>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleAnimatorPlayOnEnable <>4__this;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xB6B8DC", Offset = "0xB6B8DC", VA = "0xB6B8DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xB6B944", Offset = "0xB6B944", VA = "0xB6B944", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xB6B7E4", Offset = "0xB6B7E4", VA = "0xB6B7E4")]
		[DebuggerHidden]
		public <waitForDelay>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xB6B818", Offset = "0xB6B818", VA = "0xB6B818", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xB6B81C", Offset = "0xB6B81C", VA = "0xB6B81C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xB6B8E4", Offset = "0xB6B8E4", VA = "0xB6B8E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayTime;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delayTimeTweakageRange;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SimpleAnimator myAnimator;

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xB6B618", Offset = "0xB6B618", VA = "0xB6B618")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xB6B768", Offset = "0xB6B768", VA = "0xB6B768")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D6474", Offset = "0x7D6474")]
	private IEnumerator waitForDelay()
	{
		return null;
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xB6B730", Offset = "0xB6B730", VA = "0xB6B730")]
	private void runAnim()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xB6B810", Offset = "0xB6B810", VA = "0xB6B810")]
	public SimpleAnimatorPlayOnEnable()
	{
	}
}
[Token(Token = "0x2000075")]
public sealed class SimpleAnimatorRandomSpeed : SimpleAnimation
{
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float baseForwardSpeed;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float forwardTweakRange;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float baseReverseSpeed;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float reverseTweakRange;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleAnimator animator;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xB6B94C", Offset = "0xB6B94C", VA = "0xB6B94C", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xB6BA48", Offset = "0xB6BA48", VA = "0xB6BA48")]
	public SimpleAnimatorRandomSpeed()
	{
	}
}
[Token(Token = "0x2000076")]
public class SimpleModelFlash : MonoBehaviour
{
	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD920", Offset = "0x7CD920")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SimpleModelFlash <>4__this;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeForFlash;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xB6BC88", Offset = "0xB6BC88", VA = "0xB6BC88")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xB6BC98", Offset = "0xB6BC98", VA = "0xB6BC98")]
		internal void <flashMaterials>b__0()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xB6BD5C", Offset = "0xB6BD5C", VA = "0xB6BD5C")]
		internal void <flashMaterials>b__1()
		{
		}
	}

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE958", Offset = "0x7CE958")]
	public List<MeshRenderer> renderersToFlash;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isFlashing;

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xB6BA5C", Offset = "0xB6BA5C", VA = "0xB6BA5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xB6BB68", Offset = "0xB6BB68", VA = "0xB6BB68")]
	public void flashMaterials(float flashValue, float timeForFlash)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xB6BA68", Offset = "0xB6BA68", VA = "0xB6BA68")]
	public void changeMaterialFlashOnAllFrames(float flashValue)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xB6BC90", Offset = "0xB6BC90", VA = "0xB6BC90")]
	public SimpleModelFlash()
	{
	}
}
[Token(Token = "0x2000077")]
public sealed class SpinningFilledImage : MonoBehaviour
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationsPerSecond;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image leadImage;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image leadImageBack;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image lagImageBack;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image lagImageFront;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text countLabel;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float width;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float direction;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float fillAmount;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int count;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float randomFactor;

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xA1026C", Offset = "0xA1026C", VA = "0xA1026C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xA103AC", Offset = "0xA103AC", VA = "0xA103AC")]
	public void tryTap()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xA10520", Offset = "0xA10520", VA = "0xA10520")]
	public bool isGoodTap()
	{
		return default(bool);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xA10534", Offset = "0xA10534", VA = "0xA10534")]
	public SpinningFilledImage()
	{
	}
}
[Token(Token = "0x2000078")]
public sealed class SuperPiffleHitFlash : MonoBehaviour
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock propBlock;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xA12EB4", Offset = "0xA12EB4", VA = "0xA12EB4")]
	public void superPIffleHitFlash()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xA1302C", Offset = "0xA1302C", VA = "0xA1302C")]
	public SuperPiffleHitFlash()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xA13034", Offset = "0xA13034", VA = "0xA13034")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D64D8", Offset = "0x7D64D8")]
	private void <superPIffleHitFlash>b__2_0(float lerpValue)
	{
	}
}
[Token(Token = "0x2000079")]
public class ParameterizedEmitter<T> : SignalEmitter
{
	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T parameter;

	[Token(Token = "0x600028A")]
	public ParameterizedEmitter()
	{
	}
}
[Token(Token = "0x200007A")]
public class SignalEmitterWithString : ParameterizedEmitter<string>
{
	[Token(Token = "0x600028B")]
	[Address(RVA = "0xB642B8", Offset = "0xB642B8", VA = "0xB642B8")]
	public SignalEmitterWithString()
	{
	}
}
[Token(Token = "0x200007B")]
public class SignalReceiverWithString : MonoBehaviour, INotificationReceiver
{
	[Serializable]
	[Token(Token = "0x20002D0")]
	public class SignalAssetEventPair
	{
		[Serializable]
		[Token(Token = "0x20003B4")]
		public class ParameterizedEvent : UnityEvent<string>
		{
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0xB646B4", Offset = "0xB646B4", VA = "0xB646B4")]
			public ParameterizedEvent()
			{
			}
		}

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SignalAsset signalAsset;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParameterizedEvent events;

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xB646AC", Offset = "0xB646AC", VA = "0xB646AC")]
		public SignalAssetEventPair()
		{
		}
	}

	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD930", Offset = "0x7CD930")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParameterizedEmitter<string> stringEmitter;

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xB6466C", Offset = "0xB6466C", VA = "0xB6466C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xB6467C", Offset = "0xB6467C", VA = "0xB6467C")]
		internal bool <OnNotify>b__0(SignalAssetEventPair x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SignalAssetEventPair[] signalAssetEventPairs;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xB64308", Offset = "0xB64308", VA = "0xB64308", Slot = "4")]
	public void OnNotify(Playable origin, INotification notification, object context)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xB64674", Offset = "0xB64674", VA = "0xB64674")]
	public SignalReceiverWithString()
	{
	}
}
[Token(Token = "0x200007C")]
public sealed class Vibrate : MonoBehaviour
{
	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD940", Offset = "0x7CD940")]
	private sealed class <UpdateLoop>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vibrate <>4__this;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x1700013A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0x13CB8AC", Offset = "0x13CB8AC", VA = "0x13CB8AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x13CB914", Offset = "0x13CB914", VA = "0x13CB914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x13CB6AC", Offset = "0x13CB6AC", VA = "0x13CB6AC")]
		[DebuggerHidden]
		public <UpdateLoop>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x13CB700", Offset = "0x13CB700", VA = "0x13CB700", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x13CB704", Offset = "0x13CB704", VA = "0x13CB704", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x13CB8B4", Offset = "0x13CB8B4", VA = "0x13CB8B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE990", Offset = "0x7CE990")]
	public float loopTime;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeBetweenLoops;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float vibrationMagnitude;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool firstTime;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 baseLocalPosition;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds loopWait;

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x13CB440", Offset = "0x13CB440", VA = "0x13CB440")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x13CB444", Offset = "0x13CB444", VA = "0x13CB444")]
	public void StopAnimation()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x13CB4E0", Offset = "0x13CB4E0", VA = "0x13CB4E0")]
	public void StartAnimation()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x13CB630", Offset = "0x13CB630", VA = "0x13CB630")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D64E8", Offset = "0x7D64E8")]
	private IEnumerator UpdateLoop()
	{
		return null;
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x13CB6D8", Offset = "0x13CB6D8", VA = "0x13CB6D8")]
	public Vibrate()
	{
	}
}
[Token(Token = "0x200007D")]
public sealed class animationEventParticle : MonoBehaviour
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particleSystemToPlay;

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x13D0E94", Offset = "0x13D0E94", VA = "0x13D0E94")]
	public void AnimationEventPlayParticle()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x13D0EB4", Offset = "0x13D0EB4", VA = "0x13D0EB4")]
	public animationEventParticle()
	{
	}
}
[Token(Token = "0x200007E")]
public class CharacterScreenCapture : MonoBehaviour
{
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD950", Offset = "0x7CD950")]
	private sealed class <WriteRenderTextureToDisk>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterScreenCapture <>4__this;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTexture renderTexture;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string filename;

		[Token(Token = "0x1700013C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0x9F723C", Offset = "0x9F723C", VA = "0x9F723C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x9F72A4", Offset = "0x9F72A4", VA = "0x9F72A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x9F6F44", Offset = "0x9F6F44", VA = "0x9F6F44")]
		[DebuggerHidden]
		public <WriteRenderTextureToDisk>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x9F6F94", Offset = "0x9F6F94", VA = "0x9F6F94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x9F6F98", Offset = "0x9F6F98", VA = "0x9F6F98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x9F7244", Offset = "0x9F7244", VA = "0x9F7244", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material CharacterMaterial;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> ModelsToCapture;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera targetCamera;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RenderTexture targetRenderTexture;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D textureWriter;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int screenWidth;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int screenHeight;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float shotDelay;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool takeShot;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timePassed;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool running;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int totalModelCount;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject currentModel;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 originalPosition;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool fitCamera;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int currentModelIndex;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string captureName;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool busy;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x9F6644", Offset = "0x9F6644", VA = "0x9F6644")]
	private void Start()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x9F676C", Offset = "0x9F676C", VA = "0x9F676C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x9F6C7C", Offset = "0x9F6C7C", VA = "0x9F6C7C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x9F67D4", Offset = "0x9F67D4", VA = "0x9F67D4")]
	private void SetupNextCharacter()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x9F6D84", Offset = "0x9F6D84", VA = "0x9F6D84")]
	private void FitCameraToModel(MeshRenderer mr)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x9F6CD8", Offset = "0x9F6CD8", VA = "0x9F6CD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D654C", Offset = "0x7D654C")]
	private IEnumerator WriteRenderTextureToDisk(RenderTexture renderTexture, string filename)
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x9F6F70", Offset = "0x9F6F70", VA = "0x9F6F70")]
	public CharacterScreenCapture()
	{
	}
}
[Token(Token = "0x200007F")]
public class DropInBakeAsset : MonoBehaviour
{
	[Token(Token = "0x600029C")]
	[Address(RVA = "0xA21F00", Offset = "0xA21F00", VA = "0xA21F00")]
	private void Start()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xA21F04", Offset = "0xA21F04", VA = "0xA21F04")]
	private void Update()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xA21F08", Offset = "0xA21F08", VA = "0xA21F08")]
	public DropInBakeAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000080")]
public class GlobalShaderLighting : MonoBehaviour
{
	[Token(Token = "0x20002D4")]
	private static class GlobalShaderParams
	{
		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int _GLOBAL_AMBIENT_COLOUR;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int _GLOBAL_AMBIENT_INTENSITY;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int _GLOBAL_AMBIENT_ENV_CUBE;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int _GLOBAL_REFLECTION_INTENSITY;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int _GLOBAL_FOG_COLOUR;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int _GLOBAL_FOG_SIZE;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int _GLOBAL_FOG_CHOKE;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int _GLOBAL_FADEIN_Y_OFFSET;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int _GLOBAL_FADEIN_VALUE;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int _LUT_Params;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly int _LUT_Texture;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static readonly int _USE_COLOURGRADE;
	}

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CE9C8", Offset = "0x7CE9C8")]
	public string worldId;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isDefaultWorld;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEA00", Offset = "0x7CEA00")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x7CEA00", Offset = "0x7CEA00")]
	public Color platformHighlightColor;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color platformSpiteBaseColor;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEA54", Offset = "0x7CEA54")]
	public Color ambientColour;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Cubemap ambientReflectionProbe;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float ambientIntensity;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float reflectionIntensity;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ShaderLightGizmo[] shaderLights;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEA8C", Offset = "0x7CEA8C")]
	public float fadeInValue;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float fadeInYOffset;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEAC4", Offset = "0x7CEAC4")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x7CEAC4", Offset = "0x7CEAC4")]
	public Color fogColour;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float fogSize;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float fogChoke;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEB18", Offset = "0x7CEB18")]
	public Texture colorLUT;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float colorLUTContribution;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEB50", Offset = "0x7CEB50")]
	public GameObject hideAtRuntime;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x9E6B2C", Offset = "0x9E6B2C", VA = "0x9E6B2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x9E6EE4", Offset = "0x9E6EE4", VA = "0x9E6EE4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x9E6FB4", Offset = "0x9E6FB4", VA = "0x9E6FB4")]
	private void hubWasLoaded()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x9E7154", Offset = "0x9E7154", VA = "0x9E7154")]
	private void worldWasLoaded(object note)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x9E7074", Offset = "0x9E7074", VA = "0x9E7074")]
	private void updateShaderLightsAndPlatformColours()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x9E6CC0", Offset = "0x9E6CC0", VA = "0x9E6CC0")]
	public void updateShaderLights()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x9E7448", Offset = "0x9E7448", VA = "0x9E7448")]
	private void updateColorGradingLUT()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x9E72E0", Offset = "0x9E72E0", VA = "0x9E72E0")]
	private void updateGlobalShaderAmbientParameters()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x9E71B0", Offset = "0x9E71B0", VA = "0x9E71B0")]
	private void updateGlobalShaderLightParameters(string key, Color color, Vector3 dir, float intensity)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x9E73A0", Offset = "0x9E73A0", VA = "0x9E73A0")]
	private void updateGlobalFogParameters()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x9E7594", Offset = "0x9E7594", VA = "0x9E7594")]
	public void updateFadeInParameters(float alpha)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x9E762C", Offset = "0x9E762C", VA = "0x9E762C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x9E7670", Offset = "0x9E7670", VA = "0x9E7670")]
	public GlobalShaderLighting()
	{
	}
}
[Token(Token = "0x2000081")]
public class IgnoreMeshModification : MonoBehaviour
{
	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x9EDA1C", Offset = "0x9EDA1C", VA = "0x9EDA1C")]
	public IgnoreMeshModification()
	{
	}
}
[Token(Token = "0x2000082")]
public sealed class PrefabBakeContainer : MonoBehaviour
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ObjectSpacer spacer;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<GameObject> objectsToUpdate;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] initialProbePositions;

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xAC117C", Offset = "0xAC117C", VA = "0xAC117C")]
	public void setUpObjectSpacer(string name)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xAC1288", Offset = "0xAC1288", VA = "0xAC1288")]
	public void instantiateAndAddObjectToUpdate(GameObject go)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xAC12F8", Offset = "0xAC12F8", VA = "0xAC12F8")]
	private GameObject instantiatePrefab(GameObject prefabToSpawn, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xAC1300", Offset = "0xAC1300", VA = "0xAC1300")]
	public void reset()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xAC13C8", Offset = "0xAC13C8", VA = "0xAC13C8")]
	public PrefabBakeContainer()
	{
	}
}
[Token(Token = "0x2000083")]
public class ShaderLightGizmo : MonoBehaviour
{
	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color lightColour;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lightIntensity;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string lightKey;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 lightDir;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer lightGizmo;

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xAD06F8", Offset = "0xAD06F8", VA = "0xAD06F8")]
	public void updateLightGizmo()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xAD071C", Offset = "0xAD071C", VA = "0xAD071C")]
	private void setLightCol()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xAD0824", Offset = "0xAD0824", VA = "0xAD0824")]
	private void setLightDir()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xAD0978", Offset = "0xAD0978", VA = "0xAD0978")]
	public ShaderLightGizmo()
	{
	}
}
[Token(Token = "0x2000084")]
[ExecuteInEditMode]
public sealed class WorkspaceController : DebugOnlyItem
{
	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject RetroWorkspace;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject CuteCandyWorkspace;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject HellWorkspace;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject MallWorkspace;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject SpaceWorkspace;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ShipsWorkspace;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject MiscWorkspace;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ParticleWorkspace;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject activeWorkspace;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int assetIndex;

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x13CD970", Offset = "0x13CD970", VA = "0x13CD970")]
	public void DetermineLoadedWorldScene(string loadedSceneName)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x13CDCC0", Offset = "0x13CDCC0", VA = "0x13CDCC0")]
	public void CycleAssetSampler()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x13CDAE4", Offset = "0x13CDAE4", VA = "0x13CDAE4")]
	public void LoadRetroWorkSpace()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x13CDB24", Offset = "0x13CDB24", VA = "0x13CDB24")]
	public void LoadCuteCandyWorkSpace()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x13CDBC0", Offset = "0x13CDBC0", VA = "0x13CDBC0")]
	public void LoadHellWorkSpace()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x13CDC00", Offset = "0x13CDC00", VA = "0x13CDC00")]
	public void LoadMallWorkSpace()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x13CDC40", Offset = "0x13CDC40", VA = "0x13CDC40")]
	public void LoadSpaceWorkSpace()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x13CDE14", Offset = "0x13CDE14", VA = "0x13CDE14")]
	public void LoadShipsWorkSpace()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x13CDC80", Offset = "0x13CDC80", VA = "0x13CDC80")]
	public void LoadMiscWorkSpace()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x13CDE54", Offset = "0x13CDE54", VA = "0x13CDE54")]
	public void LoadParticleWorkSpace()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x13CDE94", Offset = "0x13CDE94", VA = "0x13CDE94")]
	public void DeactiveWorkspaces()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x13CDF50", Offset = "0x13CDF50", VA = "0x13CDF50")]
	public WorkspaceController()
	{
	}
}
[Token(Token = "0x2000085")]
public class workspaceActivator : MonoBehaviour
{
	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x13D0EBC", Offset = "0x13D0EBC", VA = "0x13D0EBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x13D0EE4", Offset = "0x13D0EE4", VA = "0x13D0EE4")]
	public workspaceActivator()
	{
	}
}
[Token(Token = "0x2000086")]
public sealed class AutotestCharacterSelect : AutotestTask
{
	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD960", Offset = "0x7CD960")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button thebutton;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AutotestCharacterSelect <>4__this;

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xB77488", Offset = "0xB77488", VA = "0xB77488")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xB7789C", Offset = "0xB7789C", VA = "0xB7789C")]
		internal void <fillActionList>b__0()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xB778B4", Offset = "0xB778B4", VA = "0xB778B4")]
		internal void <fillActionList>b__1()
		{
		}
	}

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> exclusionList;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string iterationPrefix;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastActionIndex;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<AutotestAction> pickListActions;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Button> pickListButtons;

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xB7685C", Offset = "0xB7685C", VA = "0xB7685C", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xB76A34", Offset = "0xB76A34", VA = "0xB76A34")]
	public void nextActionThatMatchesPrefix()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xB76D00", Offset = "0xB76D00", VA = "0xB76D00")]
	public void randomActionThatMatchesPrefix()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xB76F8C", Offset = "0xB76F8C", VA = "0xB76F8C", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xB77568", Offset = "0xB77568", VA = "0xB77568")]
	private void scrollToButton(Button thebutton)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xB77490", Offset = "0xB77490", VA = "0xB77490")]
	private bool excludeButton(Button theButton)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xB7756C", Offset = "0xB7756C", VA = "0xB7756C")]
	public void pickButton()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xB77714", Offset = "0xB77714", VA = "0xB77714")]
	public AutotestCharacterSelect()
	{
	}
}
[Token(Token = "0x2000087")]
public enum AutotestMode
{
	[Token(Token = "0x4000285")]
	none,
	[Token(Token = "0x4000286")]
	autoplay,
	[Token(Token = "0x4000287")]
	scripted,
	[Token(Token = "0x4000288")]
	scriptedAutoplay
}
[Token(Token = "0x2000088")]
public sealed class AutotestController : SingletonMono<AutotestController>
{
	[Token(Token = "0x20002D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD970", Offset = "0x7CD970")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeToPauseUntil;

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xB78E8C", Offset = "0xB78E8C", VA = "0xB78E8C")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xB7A8EC", Offset = "0xB7A8EC", VA = "0xB7A8EC")]
		internal bool <ensureSetupForVR>b__0()
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20002D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD980", Offset = "0x7CD980")]
	private sealed class <>c
	{
		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__40_1;

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xB7A71C", Offset = "0xB7A71C", VA = "0xB7A71C")]
		public <>c()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xB7A724", Offset = "0xB7A724", VA = "0xB7A724")]
		internal void <ensureSetupForVR>b__40_1()
		{
		}
	}

	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD990", Offset = "0x7CD990")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AutotestController <>4__this;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button theButton;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__2;

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xB7909C", Offset = "0xB7909C", VA = "0xB7909C")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xB7A9D0", Offset = "0xB7A9D0", VA = "0xB7A9D0")]
		internal void <pressFingerDownOnButton>b__0()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xB7AB44", Offset = "0xB7AB44", VA = "0xB7AB44")]
		internal void <pressFingerDownOnButton>b__1()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xB7ABD8", Offset = "0xB7ABD8", VA = "0xB7ABD8")]
		internal void <pressFingerDownOnButton>b__2()
		{
		}
	}

	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD9A0", Offset = "0x7CD9A0")]
	private sealed class <runThroughWorkQueue>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestController <>4__this;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <doRun>5__2;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action <task>5__3;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0xB7B0EC", Offset = "0xB7B0EC", VA = "0xB7B0EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0xB7B154", Offset = "0xB7B154", VA = "0xB7B154", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xB7938C", Offset = "0xB7938C", VA = "0xB7938C")]
		[DebuggerHidden]
		public <runThroughWorkQueue>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xB7AEE8", Offset = "0xB7AEE8", VA = "0xB7AEE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xB7AEEC", Offset = "0xB7AEEC", VA = "0xB7AEEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xB7B0F4", Offset = "0xB7B0F4", VA = "0xB7B0F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD9B0", Offset = "0x7CD9B0")]
	private sealed class <>c__DisplayClass64_0
	{
		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 end;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestController <>4__this;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 start;

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xB79DF0", Offset = "0xB79DF0", VA = "0xB79DF0")]
		public <>c__DisplayClass64_0()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xB7ABF0", Offset = "0xB7ABF0", VA = "0xB7ABF0")]
		internal void <moveFingerToPosition>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xB7AD5C", Offset = "0xB7AD5C", VA = "0xB7AD5C")]
		internal void <moveFingerToPosition>b__1()
		{
		}
	}

	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD9C0", Offset = "0x7CD9C0")]
	private sealed class <reportMemoryLoop>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestController <>4__this;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <longTime>5__2;

		[Token(Token = "0x17000140")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0xB7AE78", Offset = "0xB7AE78", VA = "0xB7AE78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xB7AEE0", Offset = "0xB7AEE0", VA = "0xB7AEE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xB7A464", Offset = "0xB7A464", VA = "0xB7A464")]
		[DebuggerHidden]
		public <reportMemoryLoop>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xB7ADA4", Offset = "0xB7ADA4", VA = "0xB7ADA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xB7ADA8", Offset = "0xB7ADA8", VA = "0xB7ADA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xB7AE80", Offset = "0xB7AE80", VA = "0xB7AE80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startupDelay;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AutotestTask defaultTask;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Queue<Action> workQueue;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AutotestMode mode;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string testBotInstance;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fingerMover;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject fingerUp;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject fingerDown;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool screenCapEveryButtonDown;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool screenCapLocChanges;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool showFinger;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float actionCountdown;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int actionListCount;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<string> actionList;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<string> screenCaptureAction;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string cachedFilename;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool didBoot;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool canActivate;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool hasHandledArgs;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Text releaseDisplayText;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<Button> sameNamedButtons;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float langCheckCountdown;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int langCheckCounter;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool shouldProcessTestScripts;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xB778D0", Offset = "0xB778D0", VA = "0xB778D0")]
	public static bool isTestbot()
	{
		return default(bool);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xB778D8", Offset = "0xB778D8", VA = "0xB778D8")]
	public static bool isReleaseTestbot()
	{
		return default(bool);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xB778E0", Offset = "0xB778E0", VA = "0xB778E0")]
	public static void logAction(string actionString)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xB76CFC", Offset = "0xB76CFC", VA = "0xB76CFC")]
	public static void logActionError(string errorString)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xB778E4", Offset = "0xB778E4", VA = "0xB778E4")]
	public static void screenCapture([Optional] string context)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xB77BC4", Offset = "0xB77BC4", VA = "0xB77BC4")]
	public static void performTestAction(AutotestAction theAction)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xB77D1C", Offset = "0xB77D1C", VA = "0xB77D1C")]
	public static void resetActionInterval(float time = 0.5f)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xB77DA0", Offset = "0xB77DA0", VA = "0xB77DA0")]
	public static bool checkForExceptions()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xB77DA8", Offset = "0xB77DA8", VA = "0xB77DA8")]
	public string actionLogFileName()
	{
		return null;
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xB77E38", Offset = "0xB77E38", VA = "0xB77E38", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xB77EF0", Offset = "0xB77EF0", VA = "0xB77EF0")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xB78084", Offset = "0xB78084", VA = "0xB78084")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xB78094", Offset = "0xB78094", VA = "0xB78094")]
	public void tryStartTestbot()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xB786FC", Offset = "0xB786FC", VA = "0xB786FC")]
	public void checkLanguage()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xB77F5C", Offset = "0xB77F5C", VA = "0xB77F5C")]
	public static string findCommandArg(string argKey, string defaultArg)
	{
		return null;
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xB7809C", Offset = "0xB7809C", VA = "0xB7809C")]
	public void tryStart(bool forceSoak = false)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xB78D30", Offset = "0xB78D30", VA = "0xB78D30")]
	private void ensureSetupForVR()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xB78898", Offset = "0xB78898", VA = "0xB78898")]
	public void handleAnyCommandLineArgs()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xB781F4", Offset = "0xB781F4", VA = "0xB781F4")]
	private void addReleaseBuildDisplay()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xB77ED0", Offset = "0xB77ED0", VA = "0xB77ED0")]
	public void activateFinger(bool isActive)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xB78E94", Offset = "0xB78E94", VA = "0xB78E94")]
	public void downFinger()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xB78EFC", Offset = "0xB78EFC", VA = "0xB78EFC")]
	public void upFinger()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xB78F64", Offset = "0xB78F64", VA = "0xB78F64")]
	public void pressFingerDownOnButton(Button theButton)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xB790F4", Offset = "0xB790F4", VA = "0xB790F4")]
	public void runOneQueueLoop()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xB79360", Offset = "0xB79360", VA = "0xB79360")]
	public void runCurrentQueue()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xB792E4", Offset = "0xB792E4", VA = "0xB792E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D65B0", Offset = "0x7D65B0")]
	private IEnumerator runThroughWorkQueue()
	{
		return null;
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xB793B8", Offset = "0xB793B8", VA = "0xB793B8")]
	public void Update()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xB769CC", Offset = "0xB769CC", VA = "0xB769CC")]
	public void queueTask(Action task)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xB7972C", Offset = "0xB7972C", VA = "0xB7972C")]
	public void queueLongWait()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xB76938", Offset = "0xB76938", VA = "0xB76938")]
	public void queueWait()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xB77C84", Offset = "0xB77C84", VA = "0xB77C84")]
	public AutotestActionSignature generateSignature(AutotestAction action)
	{
		return null;
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xB7990C", Offset = "0xB7990C", VA = "0xB7990C")]
	public Vector3 getCurrentTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xB799CC", Offset = "0xB799CC", VA = "0xB799CC")]
	public AutotestTargetHolder highestPriorityTargetHolder()
	{
		return null;
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xB797C0", Offset = "0xB797C0", VA = "0xB797C0")]
	public AutotestTask highestPriorityTask()
	{
		return null;
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xB7969C", Offset = "0xB7969C", VA = "0xB7969C")]
	public void changeMode(AutotestMode newMode)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xB79128", Offset = "0xB79128", VA = "0xB79128")]
	public void fillWorkQueue()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xB79B28", Offset = "0xB79B28", VA = "0xB79B28")]
	public void forceEmptyWorkQueue()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xB79B80", Offset = "0xB79B80", VA = "0xB79B80")]
	public void wait()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xB79BA4", Offset = "0xB79BA4", VA = "0xB79BA4")]
	public void waitLong()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xB79BC8", Offset = "0xB79BC8", VA = "0xB79BC8")]
	public void moveFingerToViewportPosition(Vector2 viewportPos, float time = 0.2f)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xB79CAC", Offset = "0xB79CAC", VA = "0xB79CAC")]
	public void moveFingerToPosition(Vector3 end, float time = 0.2f)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xB790A4", Offset = "0xB790A4", VA = "0xB790A4")]
	public void moveFingerToButton(Button theButton, float time)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xB79DF8", Offset = "0xB79DF8", VA = "0xB79DF8")]
	public Button getButton(string buttonName, bool logError = false)
	{
		return null;
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xB77338", Offset = "0xB77338", VA = "0xB77338")]
	public static List<Button> currentlyAvailableButtons(GameObject source)
	{
		return null;
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xB7A048", Offset = "0xB7A048", VA = "0xB7A048")]
	public bool buttonIsShowing(string buttonName, bool checkParentCanvasGroup = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xB7A154", Offset = "0xB7A154", VA = "0xB7A154")]
	public void downButton(Button theButton)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB77AD4", Offset = "0xB77AD4", VA = "0xB77AD4")]
	public static string currentPanelName()
	{
		return null;
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xB7A2B4", Offset = "0xB7A2B4", VA = "0xB7A2B4")]
	public void clickButton(Button theButton)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xB78008", Offset = "0xB78008", VA = "0xB78008")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D6614", Offset = "0x7D6614")]
	private IEnumerator reportMemoryLoop()
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xB7A490", Offset = "0xB7A490", VA = "0xB7A490")]
	private void reportMemory()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xB7A560", Offset = "0xB7A560", VA = "0xB7A560")]
	public AutotestController()
	{
	}
}
[Token(Token = "0x2000089")]
public sealed class AutotestControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AutotestController controller;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AutotestGifCapture gifCapture;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AutotestScreenCapture screenCapture;

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xB7B15C", Offset = "0xB7B15C", VA = "0xB7B15C", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xB7B3B8", Offset = "0xB7B3B8", VA = "0xB7B3B8", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xB7BEA4", Offset = "0xB7BEA4", VA = "0xB7BEA4")]
	public AutotestControllerBooter()
	{
	}
}
[Token(Token = "0x200008A")]
public class AutotestFindEnemyTarget : AutotestTargetHolder
{
	[Token(Token = "0x6000302")]
	[Address(RVA = "0xB7BEAC", Offset = "0xB7BEAC", VA = "0xB7BEAC", Slot = "5")]
	public override Vector3 getPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xB7BFB4", Offset = "0xB7BFB4", VA = "0xB7BFB4", Slot = "4")]
	public override bool isReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xB7C02C", Offset = "0xB7C02C", VA = "0xB7C02C")]
	public AutotestFindEnemyTarget()
	{
	}
}
[Token(Token = "0x200008B")]
public sealed class AutotestGifCapture : MonoBehaviour
{
	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD9D0", Offset = "0x7CD9D0")]
	private sealed class <CaptureScreenshot>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestGifCapture <>4__this;

		[Token(Token = "0x17000142")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xB7CC28", Offset = "0xB7CC28", VA = "0xB7CC28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xB7CC90", Offset = "0xB7CC90", VA = "0xB7CC90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xB7C83C", Offset = "0xB7C83C", VA = "0xB7C83C")]
		[DebuggerHidden]
		public <CaptureScreenshot>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xB7C95C", Offset = "0xB7C95C", VA = "0xB7C95C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xB7C960", Offset = "0xB7C960", VA = "0xB7C960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xB7CC30", Offset = "0xB7CC30", VA = "0xB7CC30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD9E0", Offset = "0x7CD9E0")]
	private sealed class <WriteAllRenderTexturesToDisk>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestGifCapture <>4__this;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string logString;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string stackTrace;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0xB7CF6C", Offset = "0xB7CF6C", VA = "0xB7CF6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0xB7CFD4", Offset = "0xB7CFD4", VA = "0xB7CFD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xB7C868", Offset = "0xB7C868", VA = "0xB7C868")]
		[DebuggerHidden]
		public <WriteAllRenderTexturesToDisk>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xB7CC98", Offset = "0xB7CC98", VA = "0xB7CC98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xB7CC9C", Offset = "0xB7CC9C", VA = "0xB7CC9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xB7CF74", Offset = "0xB7CF74", VA = "0xB7CF74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool doCapture;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float delayBetweenCaptures;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastCaptureTime;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int capturesToKeep;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float captureResolutionScale;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string captureDirectoryRoot;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int totalFramesCaptured;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int nextCaptureIndex;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int nextGifFolderIndex;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool doingCopy;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<RenderTexture> renderTextures;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture renderTextureReader;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Texture2D textureWriter;

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xB7B3B0", Offset = "0xB7B3B0", VA = "0xB7B3B0")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xB7B414", Offset = "0xB7B414", VA = "0xB7B414")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xB7C2EC", Offset = "0xB7C2EC", VA = "0xB7C2EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xB7C4F0", Offset = "0xB7C4F0", VA = "0xB7C4F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xB7C5D0", Offset = "0xB7C5D0", VA = "0xB7C5D0")]
	public void forceCapture(string logString)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xB7C7D0", Offset = "0xB7C7D0", VA = "0xB7C7D0")]
	private void HandleLog(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xB7C554", Offset = "0xB7C554", VA = "0xB7C554")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D6678", Offset = "0x7D6678")]
	private IEnumerator CaptureScreenshot()
	{
		return null;
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xB7C724", Offset = "0xB7C724", VA = "0xB7C724")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D66DC", Offset = "0x7D66DC")]
	private IEnumerator WriteAllRenderTexturesToDisk(string logString, string stackTrace)
	{
		return null;
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xB7C894", Offset = "0xB7C894", VA = "0xB7C894")]
	private void WriteRenderTextureToDisk(RenderTexture renderTexture, string filename)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xB7C954", Offset = "0xB7C954", VA = "0xB7C954")]
	public AutotestGifCapture()
	{
	}
}
[Token(Token = "0x200008C")]
public sealed class AutotestJustClose : AutotestTask
{
	[Serializable]
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD9F0", Offset = "0x7CD9F0")]
	private sealed class <>c
	{
		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__2_0;

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xB7D3E8", Offset = "0xB7D3E8", VA = "0xB7D3E8")]
		public <>c()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xB7D3F0", Offset = "0xB7D3F0", VA = "0xB7D3F0")]
		internal void <fillActionList>b__2_0()
		{
		}
	}

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool pressOwnPanelToClose;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xB7CFDC", Offset = "0xB7CFDC", VA = "0xB7CFDC", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xB7D104", Offset = "0xB7D104", VA = "0xB7D104", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xB7D2D8", Offset = "0xB7D2D8", VA = "0xB7D2D8")]
	private void pressPanel()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xB7D37C", Offset = "0xB7D37C", VA = "0xB7D37C")]
	public AutotestJustClose()
	{
	}
}
[Token(Token = "0x200008D")]
public sealed class AutotestJustWait : AutotestTask
{
	[Token(Token = "0x6000313")]
	[Address(RVA = "0xB7D468", Offset = "0xB7D468", VA = "0xB7D468", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xB7D4EC", Offset = "0xB7D4EC", VA = "0xB7D4EC", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xB7D5A8", Offset = "0xB7D5A8", VA = "0xB7D5A8")]
	public AutotestJustWait()
	{
	}
}
[Token(Token = "0x200008E")]
public class AutotestLootButton : AutotestTask
{
	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDA00", Offset = "0x7CDA00")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string theName;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AutotestLootButton <>4__this;

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xB7D8A8", Offset = "0xB7D8A8", VA = "0xB7D8A8")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xB7DA54", Offset = "0xB7DA54", VA = "0xB7DA54")]
		internal void <fillActionList>b__0()
		{
		}
	}

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LootEntry> lootTableEntries;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected LootDropTable lootTable;

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xB7D5AC", Offset = "0xB7D5AC", VA = "0xB7D5AC", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xB7D688", Offset = "0xB7D688", VA = "0xB7D688", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xB7D8B0", Offset = "0xB7D8B0", VA = "0xB7D8B0", Slot = "7")]
	public virtual void pickButton()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xB7D900", Offset = "0xB7D900", VA = "0xB7D900", Slot = "8")]
	protected virtual void fillTable()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xB7D9DC", Offset = "0xB7D9DC", VA = "0xB7D9DC")]
	public AutotestLootButton()
	{
	}
}
[Serializable]
[Token(Token = "0x200008F")]
public struct TransformWeighting
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform target;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int weighting;
}
[Token(Token = "0x2000090")]
public class AutotestLootTableTargets : AutotestTargetHolder
{
	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TransformWeighting> targets;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, Transform> targetMappings;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected LootDropTable lootTable;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xB7DA70", Offset = "0xB7DA70", VA = "0xB7DA70", Slot = "5")]
	public override Vector3 getPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xB7DDE4", Offset = "0xB7DDE4", VA = "0xB7DDE4")]
	public AutotestLootTableTargets()
	{
	}
}
[Token(Token = "0x2000091")]
public sealed class AutotestPanelModeChanger : MonoBehaviour
{
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AutotestMode changeTo;

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xB7DDEC", Offset = "0xB7DDEC", VA = "0xB7DDEC")]
	public AutotestPanelModeChanger()
	{
	}
}
[Token(Token = "0x2000092")]
public sealed class AutotestPlayGame : AutotestTask
{
	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDA10", Offset = "0x7CDA10")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 randomStart;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 randomEnd;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestPlayGame <>4__this;

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xB7E3B8", Offset = "0xB7E3B8", VA = "0xB7E3B8")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xB7E3C4", Offset = "0xB7E3C4", VA = "0xB7E3C4")]
		internal void <fakeDrag>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xB7E5B8", Offset = "0xB7E5B8", VA = "0xB7E5B8")]
		internal void <fakeDrag>b__1()
		{
		}
	}

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 currentPos;

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xB7DDFC", Offset = "0xB7DDFC", VA = "0xB7DDFC")]
	public void panelWillMoveOut()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xB7DE80", Offset = "0xB7DE80", VA = "0xB7DE80", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xB7DF5C", Offset = "0xB7DF5C", VA = "0xB7DF5C", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xB7E018", Offset = "0xB7E018", VA = "0xB7E018")]
	public void playGame()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xB7E310", Offset = "0xB7E310", VA = "0xB7E310")]
	private Vector2 randomDragPos()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xB7E120", Offset = "0xB7E120", VA = "0xB7E120")]
	public void fakeDrag()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xB7E3C0", Offset = "0xB7E3C0", VA = "0xB7E3C0")]
	public AutotestPlayGame()
	{
	}
}
[Token(Token = "0x2000093")]
public sealed class AutotestRandomPick : AutotestTask
{
	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDA20", Offset = "0x7CDA20")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button thebutton;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AutotestRandomPick <>4__this;

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xB80A70", Offset = "0xB80A70", VA = "0xB80A70")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xB80DA4", Offset = "0xB80DA4", VA = "0xB80DA4")]
		internal void <fillActionList>b__0()
		{
		}
	}

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> exclusionList;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> extraList;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string iterationPrefix;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int lastActionIndex;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AutotestAction> pickListActions;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Button> pickListButtons;

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xB8024C", Offset = "0xB8024C", VA = "0xB8024C", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xB80328", Offset = "0xB80328", VA = "0xB80328")]
	public void nextActionThatMatchesPrefix()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xB804EC", Offset = "0xB804EC", VA = "0xB804EC")]
	public void randomActionThatMatchesPrefix()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xB80778", Offset = "0xB80778", VA = "0xB80778", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xB80A78", Offset = "0xB80A78", VA = "0xB80A78")]
	private bool excludeButton(Button theButton)
	{
		return default(bool);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xB80B50", Offset = "0xB80B50", VA = "0xB80B50")]
	public void pickButton()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xB80C70", Offset = "0xB80C70", VA = "0xB80C70")]
	public AutotestRandomPick()
	{
	}
}
[Token(Token = "0x2000094")]
public sealed class AutotestScreenCapture : MonoBehaviour
{
	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDA30", Offset = "0x7CDA30")]
	private sealed class <CaptureScreenshot>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestScreenCapture <>4__this;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string fullPath;

		[Token(Token = "0x17000146")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0xB81518", Offset = "0xB81518", VA = "0xB81518", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0xB81580", Offset = "0xB81580", VA = "0xB81580", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xB81134", Offset = "0xB81134", VA = "0xB81134")]
		[DebuggerHidden]
		public <CaptureScreenshot>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xB81284", Offset = "0xB81284", VA = "0xB81284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xB81288", Offset = "0xB81288", VA = "0xB81288", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xB81520", Offset = "0xB81520", VA = "0xB81520", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float captureResolutionScale;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string captureDirectoryRoot;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture renderTextureReader;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture renderTextureCapture;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D textureWriter;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool capEnabled;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AutotestGifCapture gifCapturer;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float screenCaptureIndex;

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xB7B3B4", Offset = "0xB7B3B4", VA = "0xB7B3B4")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xB7BB00", Offset = "0xB7BB00", VA = "0xB7BB00")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xB7F1AC", Offset = "0xB7F1AC", VA = "0xB7F1AC")]
	public void clearCaptureDirectory()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xB80DC0", Offset = "0xB80DC0", VA = "0xB80DC0")]
	private void forceCapture(string identifier)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xB7F2A4", Offset = "0xB7F2A4", VA = "0xB7F2A4")]
	public void generateBashScripts(int picsPerImage = 6)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xB8109C", Offset = "0xB8109C", VA = "0xB8109C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D6740", Offset = "0x7D6740")]
	private IEnumerator CaptureScreenshot(string fullPath)
	{
		return null;
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xB81160", Offset = "0xB81160", VA = "0xB81160")]
	private void WriteRenderTextureToDisk(RenderTexture renderTexture, string filename)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xB81220", Offset = "0xB81220", VA = "0xB81220")]
	public AutotestScreenCapture()
	{
	}
}
[Token(Token = "0x2000095")]
public sealed class PanelTestAction
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string startPanel;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string actionName;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeTillNext;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isOptional;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action rawAction;

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xB04CA8", Offset = "0xB04CA8", VA = "0xB04CA8")]
	public PanelTestAction(string start, string action, float time, bool optional = false)
	{
	}
}
[Token(Token = "0x2000096")]
public enum ScriptedTestStatus
{
	[Token(Token = "0x40002CF")]
	idle,
	[Token(Token = "0x40002D0")]
	testing,
	[Token(Token = "0x40002D1")]
	passed,
	[Token(Token = "0x40002D2")]
	failed
}
[Token(Token = "0x2000097")]
public enum ScriptedTestCategory
{
	[Token(Token = "0x40002D4")]
	any,
	[Token(Token = "0x40002D5")]
	levels,
	[Token(Token = "0x40002D6")]
	events,
	[Token(Token = "0x40002D7")]
	crafting,
	[Token(Token = "0x40002D8")]
	ui
}
[Token(Token = "0x2000098")]
public interface IScriptableAutotest
{
	[Token(Token = "0x6000336")]
	void resetTest();

	[Token(Token = "0x6000337")]
	void processNextStep();

	[Token(Token = "0x6000338")]
	bool testIsComplete();

	[Token(Token = "0x6000339")]
	string testStatus();
}
[Token(Token = "0x2000099")]
public sealed class ScriptedTest
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string testID;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IScriptableAutotest theTest;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ScriptedTestCategory category;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ScriptedTestStatus status;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string error;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DateTime startTime;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DateTime endTime;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string statusOverride;

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xACD704", Offset = "0xACD704", VA = "0xACD704")]
	public ScriptedTest(string itemID, IScriptableAutotest testObject, ScriptedTestCategory cat)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xACD760", Offset = "0xACD760", VA = "0xACD760")]
	public void start()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xACD854", Offset = "0xACD854", VA = "0xACD854")]
	public void end(bool passed)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xACD8DC", Offset = "0xACD8DC", VA = "0xACD8DC")]
	public bool isComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xACD8FC", Offset = "0xACD8FC", VA = "0xACD8FC")]
	public bool failed()
	{
		return default(bool);
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xACD90C", Offset = "0xACD90C", VA = "0xACD90C")]
	public bool passed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xACD91C", Offset = "0xACD91C", VA = "0xACD91C")]
	public bool isRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xACD92C", Offset = "0xACD92C", VA = "0xACD92C")]
	public string description()
	{
		return null;
	}
}
[Token(Token = "0x200009A")]
public sealed class AutotestScriptController : SingletonMono<AutotestScriptController>
{
	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDA40", Offset = "0x7CDA40")]
	private sealed class <runTest>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestScriptController <>4__this;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <pleaseWaitCount>5__2;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0xB84B68", Offset = "0xB84B68", VA = "0xB84B68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0xB84BD0", Offset = "0xB84BD0", VA = "0xB84BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xB83040", Offset = "0xB83040", VA = "0xB83040")]
		[DebuggerHidden]
		public <runTest>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xB8481C", Offset = "0xB8481C", VA = "0xB8481C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xB84820", Offset = "0xB84820", VA = "0xB84820", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xB84B70", Offset = "0xB84B70", VA = "0xB84B70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ScriptedTest> availableTests;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ScriptedTest runningTest;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool needsOnboarding;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool needsToGetBackToMap;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float waitTimeBetweenCommands;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float countDown;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ShuffleBag<string> testBag;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<string> statusList;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DateTime bootTime;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<string> gifCaptureAction;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GUIStyle passedStyle;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GUIStyle failedStyle;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GUIStyle idleStyle;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GUIStyle runningStyle;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool scriptControllerActive;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool showGUI;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int completeHeight;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool hasBooted;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int startLevel;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int endLevel;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int repeatCount;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string singularTest;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int testCount;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int maxTestCount;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool screenShotLocThings;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float startTime;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int tries;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int actionTryCount;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string scriptButtonError;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xB81588", Offset = "0xB81588", VA = "0xB81588")]
	public List<string> availableTestIDs()
	{
		return null;
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xB81898", Offset = "0xB81898", VA = "0xB81898")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xB821BC", Offset = "0xB821BC", VA = "0xB821BC")]
	public void gifCapture(string logMessage)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xB81F70", Offset = "0xB81F70", VA = "0xB81F70")]
	private void showCompletedTest(ScriptedTest theTest)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xB81C80", Offset = "0xB81C80", VA = "0xB81C80")]
	private void showTestBotStatus()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xB820EC", Offset = "0xB820EC", VA = "0xB820EC")]
	private void showRunningTest(ScriptedTest theTest)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xB82280", Offset = "0xB82280", VA = "0xB82280")]
	private void resetCountdown()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xB8228C", Offset = "0xB8228C", VA = "0xB8228C")]
	private void Update()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xB8232C", Offset = "0xB8232C", VA = "0xB8232C")]
	public void addStatus(string status)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xB823A4", Offset = "0xB823A4", VA = "0xB823A4")]
	private void addLevelRangeTest(int start, int end)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xB823A8", Offset = "0xB823A8", VA = "0xB823A8")]
	private void checkCommandLineLevels()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xB81684", Offset = "0xB81684", VA = "0xB81684")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xB82490", Offset = "0xB82490", VA = "0xB82490")]
	private void fillTestBag(string defaultCategory = "any")
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xB829E0", Offset = "0xB829E0", VA = "0xB829E0")]
	public void onlyRunTest(string testName)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xB82A10", Offset = "0xB82A10", VA = "0xB82A10")]
	public void runNextTest()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xB82EE0", Offset = "0xB82EE0", VA = "0xB82EE0")]
	private ScriptedTest testWithID(string theID)
	{
		return null;
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xB82B6C", Offset = "0xB82B6C", VA = "0xB82B6C")]
	public void runTest(string scriptName, bool backToMapAfter = false)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xB77BAC", Offset = "0xB77BAC", VA = "0xB77BAC")]
	public string currentTestID()
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xB82FC4", Offset = "0xB82FC4", VA = "0xB82FC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D67A4", Offset = "0x7D67A4")]
	private IEnumerator runTest()
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xB7C2A4", Offset = "0xB7C2A4", VA = "0xB7C2A4")]
	public void setTestError(string theError)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xB8306C", Offset = "0xB8306C", VA = "0xB8306C")]
	private void processNextStep()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xB83148", Offset = "0xB83148", VA = "0xB83148")]
	private float secondsSinceTestStart()
	{
		return default(float);
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xB83174", Offset = "0xB83174", VA = "0xB83174")]
	public void testSuccess()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xB83194", Offset = "0xB83194", VA = "0xB83194")]
	public void overrideTestStatus(string newStatus)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xB831A8", Offset = "0xB831A8", VA = "0xB831A8")]
	public void testFail(string error)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xB7C1CC", Offset = "0xB7C1CC", VA = "0xB7C1CC")]
	public static string currentPanelName()
	{
		return null;
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xB837CC", Offset = "0xB837CC", VA = "0xB837CC")]
	public static bool isOnRightPanel(string panelName)
	{
		return default(bool);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xB8383C", Offset = "0xB8383C", VA = "0xB8383C")]
	public static bool isActionAvailable(string actionName)
	{
		return default(bool);
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xB839E4", Offset = "0xB839E4", VA = "0xB839E4")]
	public static bool attemptActionOnAnyPanel(string actionName)
	{
		return default(bool);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xB84468", Offset = "0xB84468", VA = "0xB84468")]
	public static bool tryActionOnPanel(string panel, string action, float time = 1f, bool optional = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xB845A0", Offset = "0xB845A0", VA = "0xB845A0")]
	public static bool tryButtonOnPanel(string panel, string action, float time = 1f, bool optional = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xB766C4", Offset = "0xB766C4", VA = "0xB766C4")]
	public void tryRawAction(PanelTestAction theAction)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xB766F4", Offset = "0xB766F4", VA = "0xB766F4")]
	public void tryAction(PanelTestAction theAction)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xB84690", Offset = "0xB84690", VA = "0xB84690")]
	private void tryActionOptional(string startPanel, string action)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xB83CA8", Offset = "0xB83CA8", VA = "0xB83CA8")]
	private void tryAction(string startPanel, string action)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xB83B70", Offset = "0xB83B70", VA = "0xB83B70")]
	private static bool actionIsAvailable(string actionName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xB80010", Offset = "0xB80010", VA = "0xB80010")]
	public static void setTheStateToLevel(int level, int coins = 500)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xB84694", Offset = "0xB84694", VA = "0xB84694")]
	public AutotestScriptController()
	{
	}
}
[Token(Token = "0x200009B")]
public sealed class AutotestActionList : IScriptableAutotest
{
	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool testComplete;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string statusString;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<PanelTestAction> testActions;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int testActionIndex;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xB7640C", Offset = "0xB7640C", VA = "0xB7640C", Slot = "4")]
	public void resetTest()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xB76418", Offset = "0xB76418", VA = "0xB76418")]
	public void addAction(string start, string action, float time, bool optional = false)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xB764CC", Offset = "0xB764CC", VA = "0xB764CC")]
	public void addAction(string start, float time, Action action)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xB7658C", Offset = "0xB7658C", VA = "0xB7658C", Slot = "7")]
	public string testStatus()
	{
		return null;
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xB76594", Offset = "0xB76594", VA = "0xB76594", Slot = "5")]
	public void processNextStep()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xB7671C", Offset = "0xB7671C", VA = "0xB7671C", Slot = "6")]
	public bool testIsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xB76724", Offset = "0xB76724", VA = "0xB76724")]
	public AutotestActionList()
	{
	}
}
[Token(Token = "0x200009C")]
public sealed class AutotestGetBackToMap : IScriptableAutotest
{
	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool testComplete;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xB7C03C", Offset = "0xB7C03C", VA = "0xB7C03C", Slot = "4")]
	public void resetTest()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xB7C044", Offset = "0xB7C044", VA = "0xB7C044", Slot = "5")]
	public void processNextStep()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xB7C17C", Offset = "0xB7C17C", VA = "0xB7C17C", Slot = "6")]
	public bool testIsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xB7C184", Offset = "0xB7C184", VA = "0xB7C184", Slot = "7")]
	public string testStatus()
	{
		return null;
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xB7C09C", Offset = "0xB7C09C", VA = "0xB7C09C")]
	public static bool getBackToMap(string callingTest = "AutotestGetBackToMap")
	{
		return default(bool);
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xB7C2E4", Offset = "0xB7C2E4", VA = "0xB7C2E4")]
	public AutotestGetBackToMap()
	{
	}
}
[Token(Token = "0x200009D")]
public sealed class AutotestProofBot : IScriptableAutotest
{
	[Serializable]
	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDA50", Offset = "0x7CDA50")]
	private sealed class <>c
	{
		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__11_0;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__11_1;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__12_1;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__12_2;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action <>9__14_0;

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xB7F0F8", Offset = "0xB7F0F8", VA = "0xB7F0F8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xB7F100", Offset = "0xB7F100", VA = "0xB7F100")]
		internal void <setupTest>b__11_0()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xB7F1F0", Offset = "0xB7F1F0", VA = "0xB7F1F0")]
		internal void <setupTest>b__11_1()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xB7FFA0", Offset = "0xB7FFA0", VA = "0xB7FFA0")]
		internal void <setupState>b__12_1()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xB80014", Offset = "0xB80014", VA = "0xB80014")]
		internal void <setupState>b__12_2()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xB8001C", Offset = "0xB8001C", VA = "0xB8001C")]
		internal void <loadPanelLocScreenshotTestForLanguage>b__14_0()
		{
		}
	}

	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDA60", Offset = "0x7CDA60")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SystemLanguage lang;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float indexStart;

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xB7EF60", Offset = "0xB7EF60", VA = "0xB7EF60")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xB8008C", Offset = "0xB8008C", VA = "0xB8008C")]
		internal void <setupState>b__0()
		{
		}
	}

	[Token(Token = "0x20002E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDA70", Offset = "0x7CDA70")]
	private sealed class <captureMap>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700014A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600170F")]
			[Address(RVA = "0xB801DC", Offset = "0xB801DC", VA = "0xB801DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001711")]
			[Address(RVA = "0xB80244", Offset = "0xB80244", VA = "0xB80244", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xB7EFC8", Offset = "0xB7EFC8", VA = "0xB7EFC8")]
		[DebuggerHidden]
		public <captureMap>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xB8017C", Offset = "0xB8017C", VA = "0xB8017C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xB80180", Offset = "0xB80180", VA = "0xB80180", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xB801E4", Offset = "0xB801E4", VA = "0xB801E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool testComplete;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string statusString;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float standardDelay;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<PanelTestAction> testActions;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int testActionIndex;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xB7E5D8", Offset = "0xB7E5D8", VA = "0xB7E5D8", Slot = "4")]
	public void resetTest()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xB7E90C", Offset = "0xB7E90C", VA = "0xB7E90C")]
	public void addAction(string start, string action, float time, bool optional = false)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xB7E9C0", Offset = "0xB7E9C0", VA = "0xB7E9C0")]
	public void addAction(string start, float time, Action action)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xB7EA80", Offset = "0xB7EA80", VA = "0xB7EA80", Slot = "7")]
	public string testStatus()
	{
		return null;
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xB7EA88", Offset = "0xB7EA88", VA = "0xB7EA88", Slot = "5")]
	public void processNextStep()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xB7EBB8", Offset = "0xB7EBB8", VA = "0xB7EBB8", Slot = "6")]
	public bool testIsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xB7E640", Offset = "0xB7E640", VA = "0xB7E640")]
	private void setupTest()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xB7ECF0", Offset = "0xB7ECF0", VA = "0xB7ECF0")]
	private void setupState(SystemLanguage lang, bool keyOnly = false, float indexStart = 1f)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xB7EF68", Offset = "0xB7EF68", VA = "0xB7EF68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D6808", Offset = "0x7D6808")]
	private IEnumerator captureMap()
	{
		return null;
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xB7EBC0", Offset = "0xB7EBC0", VA = "0xB7EBC0")]
	private void loadPanelLocScreenshotTestForLanguage(SystemLanguage lang, bool keyOnly = false, float indexStart = 1f)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xB7EFF4", Offset = "0xB7EFF4", VA = "0xB7EFF4")]
	public AutotestProofBot()
	{
	}
}
[Token(Token = "0x200009E")]
public sealed class AutotestTapSelf : AutotestTask
{
	[Token(Token = "0x6000381")]
	[Address(RVA = "0xB84BD8", Offset = "0xB84BD8", VA = "0xB84BD8", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xB84CB4", Offset = "0xB84CB4", VA = "0xB84CB4", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xB84D70", Offset = "0xB84D70", VA = "0xB84D70")]
	public void pickButton()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xB84D8C", Offset = "0xB84D8C", VA = "0xB84D8C")]
	public AutotestTapSelf()
	{
	}
}
[Token(Token = "0x200009F")]
public abstract class AutotestTargetHolder : MonoBehaviour
{
	[Token(Token = "0x6000385")]
	[Address(RVA = "0xB84D90", Offset = "0xB84D90", VA = "0xB84D90", Slot = "4")]
	public virtual bool isReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000386")]
	public abstract Vector3 getPosition();

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xB7C034", Offset = "0xB7C034", VA = "0xB7C034")]
	protected AutotestTargetHolder()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A0")]
public sealed class AutotestActionSignature
{
	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string actionKey;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string taskControllerName;

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xB767B8", Offset = "0xB767B8", VA = "0xB767B8")]
	public AutotestActionSignature(string key, string name)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xB76808", Offset = "0xB76808", VA = "0xB76808")]
	public string description()
	{
		return null;
	}
}
[Token(Token = "0x20000A1")]
public sealed class AutotestAction
{
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string keyToLowered;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action actionToTake;

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xB76384", Offset = "0xB76384", VA = "0xB76384")]
	public AutotestAction(string actionKey, Action theAction)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xB763F8", Offset = "0xB763F8", VA = "0xB763F8")]
	public void performAction()
	{
	}
}
[Token(Token = "0x20000A2")]
public class AutotestTask : MonoBehaviour
{
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<AutotestAction> actions;

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xB84D98", Offset = "0xB84D98", VA = "0xB84D98", Slot = "4")]
	public virtual void panelWillMoveIn()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xB84E14", Offset = "0xB84E14", VA = "0xB84E14", Slot = "5")]
	public virtual void queueTasks()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xB83974", Offset = "0xB83974", VA = "0xB83974")]
	public List<AutotestAction> actionsAvailable()
	{
		return null;
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xB84E18", Offset = "0xB84E18", VA = "0xB84E18", Slot = "6")]
	public virtual void fillActionList()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xB84E1C", Offset = "0xB84E1C", VA = "0xB84E1C")]
	public void pressClose()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xB7768C", Offset = "0xB7768C", VA = "0xB7768C")]
	public void pressButton(Button theButton)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xB7D2F4", Offset = "0xB7D2F4", VA = "0xB7D2F4")]
	public void pressButtonWithName(string buttonName)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xB7781C", Offset = "0xB7781C", VA = "0xB7781C")]
	public AutotestTask()
	{
	}
}
[Token(Token = "0x20000A3")]
public sealed class MWebDebug : MonoBehaviour
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool ready;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string game;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string user;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string logURL;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static WebDebugLogger webLogger;

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xA64A78", Offset = "0xA64A78", VA = "0xA64A78")]
	public static WebDebugLogger getWebLogger()
	{
		return null;
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xA5DC54", Offset = "0xA5DC54", VA = "0xA5DC54")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xA64CFC", Offset = "0xA64CFC", VA = "0xA64CFC")]
	public static void SetGameName(string gameName)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xA64DA4", Offset = "0xA64DA4", VA = "0xA64DA4")]
	public MWebDebug()
	{
	}
}
[Token(Token = "0x20000A4")]
public sealed class ReplacementDeveloperConsole : MonoBehaviour
{
	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool overrideConsole;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEBA8", Offset = "0x7CEBA8")]
	public GameObject outputParent;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text outputLabel;

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xAC2B84", Offset = "0xAC2B84", VA = "0xAC2B84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xAC2C00", Offset = "0xAC2C00", VA = "0xAC2C00")]
	public ReplacementDeveloperConsole()
	{
	}
}
[Token(Token = "0x20000A5")]
public sealed class StartAutotestButton : MonoBehaviour
{
	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject autoplayerButton;

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xA11E1C", Offset = "0xA11E1C", VA = "0xA11E1C")]
	private void panelWillMoveIn()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xA11EDC", Offset = "0xA11EDC", VA = "0xA11EDC")]
	public void buttonWasPressed()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xA11F58", Offset = "0xA11F58", VA = "0xA11F58")]
	public StartAutotestButton()
	{
	}
}
[Token(Token = "0x20000A6")]
public sealed class WebDebugLogger : MonoBehaviour
{
	[Token(Token = "0x20002E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDA80", Offset = "0x7CDA80")]
	private sealed class <makeRequest>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string logURL;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string requestJSON;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001715")]
			[Address(RVA = "0x13CD900", Offset = "0x13CD900", VA = "0x13CD900", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001717")]
			[Address(RVA = "0x13CD968", Offset = "0x13CD968", VA = "0x13CD968", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x13CD758", Offset = "0x13CD758", VA = "0x13CD758")]
		[DebuggerHidden]
		public <makeRequest>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x13CD78C", Offset = "0x13CD78C", VA = "0x13CD78C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x13CD790", Offset = "0x13CD790", VA = "0x13CD790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x13CD908", Offset = "0x13CD908", VA = "0x13CD908", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x13CD694", Offset = "0x13CD694", VA = "0x13CD694")]
	public void sendLog(string logURL, string requestJSON)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x13CD6C0", Offset = "0x13CD6C0", VA = "0x13CD6C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D686C", Offset = "0x7D686C")]
	private IEnumerator makeRequest(string logURL, string requestJSON)
	{
		return null;
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x13CD784", Offset = "0x13CD784", VA = "0x13CD784")]
	public WebDebugLogger()
	{
	}
}
[Token(Token = "0x20000A7")]
public class DirtyScreenShotTool : MonoBehaviour
{
	[Token(Token = "0x20002E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDA90", Offset = "0x7CDA90")]
	private sealed class <WriteRenderTextureToDisk>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DirtyScreenShotTool <>4__this;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600171B")]
			[Address(RVA = "0xA07788", Offset = "0xA07788", VA = "0xA07788", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600171D")]
			[Address(RVA = "0xA077F0", Offset = "0xA077F0", VA = "0xA077F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xA07444", Offset = "0xA07444", VA = "0xA07444")]
		[DebuggerHidden]
		public <WriteRenderTextureToDisk>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xA07484", Offset = "0xA07484", VA = "0xA07484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xA07488", Offset = "0xA07488", VA = "0xA07488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xA07790", Offset = "0xA07790", VA = "0xA07790", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int screenWidth;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int screenHeight;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Texture2D textureWriter;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int count;

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xA072D8", Offset = "0xA072D8", VA = "0xA072D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xA0737C", Offset = "0xA0737C", VA = "0xA0737C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xA073C8", Offset = "0xA073C8", VA = "0xA073C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D68D0", Offset = "0x7D68D0")]
	private IEnumerator WriteRenderTextureToDisk()
	{
		return null;
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xA07470", Offset = "0xA07470", VA = "0xA07470")]
	public DirtyScreenShotTool()
	{
	}
}
[Token(Token = "0x20000A8")]
public class FrustrumFollower : MonoBehaviour
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera playerCamera;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask playerInputMask;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEBE0", Offset = "0x7CEBE0")]
	public Vector2 viewportPosition;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEC18", Offset = "0x7CEC18")]
	public bool randomisePlayspacePosition;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float viewportUnitsRandomRange;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float heightWorldspaceRandomRange;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray raycastRay;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RaycastHit theHit;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, Vector2> defaultFrustrumPositionMap;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<string, string> defaultZoneCodeMap;

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x9DD1B4", Offset = "0x9DD1B4", VA = "0x9DD1B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x9DD2F4", Offset = "0x9DD2F4", VA = "0x9DD2F4")]
	public Vector3 getNextPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x9DD528", Offset = "0x9DD528", VA = "0x9DD528")]
	private void updateFrustrumPosition()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x9DD5A0", Offset = "0x9DD5A0", VA = "0x9DD5A0")]
	public void updatePositionInPlayspace()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x9DD5E0", Offset = "0x9DD5E0", VA = "0x9DD5E0")]
	public static string closestZone(Vector2 position)
	{
		return null;
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x9DD7D0", Offset = "0x9DD7D0", VA = "0x9DD7D0")]
	public static Vector2 zonePositionForKey(string raw)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x9DD914", Offset = "0x9DD914", VA = "0x9DD914")]
	public static string zonesForZoneCode(string zoneCode)
	{
		return null;
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x9DD9FC", Offset = "0x9DD9FC", VA = "0x9DD9FC")]
	public FrustrumFollower()
	{
	}
}
[Token(Token = "0x20000A9")]
public class Bullet : MonoBehaviour
{
	[Token(Token = "0x4000325")]
	public const string PlayerUIBulletKey = "Bullets/Shooty2/Shooty2_player_bullet_finger_fake";

	[Token(Token = "0x4000326")]
	public const string PlayerMissileKey = "Bullets/Shooty2/Shooty2_player_saturn_missile";

	[Token(Token = "0x4000327")]
	private const string BulletNoDamageSoundKey = "Game_BulletHitNoDamage";

	[Token(Token = "0x4000328")]
	private const float BulletKillDistance = 8f;

	[Token(Token = "0x4000329")]
	private const float TimeToLiveGlobalMultiplier = 2f;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isExploded;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject geo;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float explostionTimeToLive;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxTimeToLive;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float damage;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CEC50", Offset = "0x7CEC50")]
	public float moveSpeed;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float speedMultiplierFromGun;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float spinSpeed;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 spinAxis;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float turnDelay;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float turnDuration;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float turnSpeed;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem[] explosionParticles;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool randomTweakageOfGeometry;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 geoOffsetRandomness;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float geoRotationRandomness;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Collider myCollider;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected bool isMoving;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected float timeToLive;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEC98", Offset = "0x7CEC98")]
	public TrailRenderer trail;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected float trailTime;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CECD0", Offset = "0x7CECD0")]
	public string bulletFireSoundKey;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string bulletHitSoundKey;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CED08", Offset = "0x7CED08")]
	public bool isTargetingEnemy;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform targetedTransform;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CED40", Offset = "0x7CED40")]
	public bool tracksTowardsPlayer;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float TrackToPlayerThresholdModifier;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isPlayerBullet;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ModelSwapAnimation swapper;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool shouldTurn;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool isCurrentTargetingPlayer;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float countDownToTurn;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float turningCountdown;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool sliceTime;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion targetHeading;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string shooterId;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isFakeBullet;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlaytimeOverseer sharedPlaytimeOverseer;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CED78", Offset = "0x7CED78")]
	private string <spawnContext>k__BackingField;

	[Token(Token = "0x17000012")]
	public string spawnContext
	{
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x9F5C00", Offset = "0x9F5C00", VA = "0x9F5C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6934", Offset = "0x7D6934")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x9F5C08", Offset = "0x9F5C08", VA = "0x9F5C08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6944", Offset = "0x7D6944")]
		private set
		{
		}
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x9F3D24", Offset = "0x9F3D24", VA = "0x9F3D24", Slot = "4")]
	public virtual void reset()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x9F442C", Offset = "0x9F442C", VA = "0x9F442C", Slot = "5")]
	public virtual void bulletWasCaughtInVacuum()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x9F435C", Offset = "0x9F435C", VA = "0x9F435C")]
	private float calculateTimeToLive()
	{
		return default(float);
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x9F444C", Offset = "0x9F444C", VA = "0x9F444C", Slot = "6")]
	public virtual void shootBullet(Vector3 shootPosition, Quaternion shootRotation, bool isPlayerBullet, string shooterId, bool isFakeBullet = false)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x9F4930", Offset = "0x9F4930", VA = "0x9F4930", Slot = "7")]
	public virtual void explode(GameObject hitObject, bool playSound = true)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x9F4250", Offset = "0x9F4250", VA = "0x9F4250")]
	private void resetExplosionParticles()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x9F4DF4", Offset = "0x9F4DF4", VA = "0x9F4DF4")]
	public void cull()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x9F4DFC", Offset = "0x9F4DFC", VA = "0x9F4DFC")]
	protected void cleanUp()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x9F4ED0", Offset = "0x9F4ED0", VA = "0x9F4ED0")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x9F468C", Offset = "0x9F468C", VA = "0x9F468C")]
	private void setDirection(Vector3 directionPosition, Quaternion directionRotation)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x9F5178", Offset = "0x9F5178", VA = "0x9F5178")]
	public void Update()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x9F53CC", Offset = "0x9F53CC", VA = "0x9F53CC")]
	private void lookAtTarget()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x9F55C0", Offset = "0x9F55C0", VA = "0x9F55C0")]
	private void rotateTowardsTarget(Vector3 theTargetPosition)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x9F57E4", Offset = "0x9F57E4", VA = "0x9F57E4", Slot = "8")]
	public virtual void updatePosition()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x9F58DC", Offset = "0x9F58DC", VA = "0x9F58DC")]
	private void updateTurn()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x9F5AE8", Offset = "0x9F5AE8", VA = "0x9F5AE8")]
	private void spin()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x9F48A0", Offset = "0x9F48A0", VA = "0x9F48A0")]
	public void bulletDidShoot()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x9F5C18", Offset = "0x9F5C18", VA = "0x9F5C18")]
	public void setDebugSpawnContext([Optional] string context)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x9F5C28", Offset = "0x9F5C28", VA = "0x9F5C28")]
	public void printExtraInformationForPlayerKiller()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x9F5D04", Offset = "0x9F5D04", VA = "0x9F5D04")]
	public Bullet()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x9F5DC0", Offset = "0x9F5DC0", VA = "0x9F5DC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6954", Offset = "0x7D6954")]
	private void <shootBullet>b__46_0()
	{
	}
}
[Token(Token = "0x20000AA")]
public class BulletMover : MonoBehaviour
{
	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x9F5DE4", Offset = "0x9F5DE4", VA = "0x9F5DE4")]
	public BulletMover()
	{
	}
}
[Token(Token = "0x20000AB")]
public class ChainsawCollisionDelegator : MonoBehaviour
{
	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OffhandChainsaw chainsaw;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x9F64E8", Offset = "0x9F64E8", VA = "0x9F64E8")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x9F65B0", Offset = "0x9F65B0", VA = "0x9F65B0")]
	public ChainsawCollisionDelegator()
	{
	}
}
[Token(Token = "0x20000AC")]
public class ColliderEventDelegator : MonoBehaviour
{
	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerController thePlayer;

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x9F9F6C", Offset = "0x9F9F6C", VA = "0x9F9F6C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x9FA11C", Offset = "0x9FA11C", VA = "0x9FA11C")]
	public ColliderEventDelegator()
	{
	}
}
[Token(Token = "0x20000AD")]
public class CopilotPowerupCrate : Powerup
{
	[Token(Token = "0x20002E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDAA0", Offset = "0x7CDAA0")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CopilotPowerupCrate <>4__this;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeToFlyToEnding;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 start;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 end;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 endPosition;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EnemyBossHeadDeathAnimation deathAnimation;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<float> <>9__1;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__2;

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x9FFB58", Offset = "0x9FFB58", VA = "0x9FFB58")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xA00014", Offset = "0xA00014", VA = "0xA00014")]
		internal void <moveToEndPositionAndCleanup>b__0()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xA0019C", Offset = "0xA0019C", VA = "0xA0019C")]
		internal void <moveToEndPositionAndCleanup>b__1(float alpha)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xA00278", Offset = "0xA00278", VA = "0xA00278")]
		internal void <moveToEndPositionAndCleanup>b__2()
		{
		}
	}

	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDAB0", Offset = "0x7CDAB0")]
	private sealed class <firingLoop>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CopilotPowerupCrate <>4__this;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GunFiringEffects[] <currentGuns>5__2;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <bulletKey>5__3;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <gunFireTransformIndex>5__4;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForSeconds <bulletWait>5__5;

		[Token(Token = "0x17000150")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0xA005E4", Offset = "0xA005E4", VA = "0xA005E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0xA0064C", Offset = "0xA0064C", VA = "0xA0064C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x9FFB60", Offset = "0x9FFB60", VA = "0x9FFB60")]
		[DebuggerHidden]
		public <firingLoop>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xA00360", Offset = "0xA00360", VA = "0xA00360", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xA00364", Offset = "0xA00364", VA = "0xA00364", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xA005EC", Offset = "0xA005EC", VA = "0xA005EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CED88", Offset = "0x7CED88")]
	public PlayerGeo playerGeo;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEDC0", Offset = "0x7CEDC0")]
	public float moveToSpeed;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float timeToReachMoveSpeed;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve moveSpeedCurve;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BBFloaty floaty;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEDF8", Offset = "0x7CEDF8")]
	public GameObject encasingBubble;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject flyInTrail;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEE30", Offset = "0x7CEE30")]
	public AnimationCurve scaleCurve;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float scaleTime;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEE68", Offset = "0x7CEE68")]
	public float timeToFlyToEnding;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve endingFlyCurve;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string assignedPilotId;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool canBeGrabbed;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float bulletsPerSecond;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 lookAtPosition;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine firingCoroutine;

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x9FF14C", Offset = "0x9FF14C", VA = "0x9FF14C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x9FF2A0", Offset = "0x9FF2A0", VA = "0x9FF2A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x9FF428", Offset = "0x9FF428", VA = "0x9FF428")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x9FF5FC", Offset = "0x9FF5FC", VA = "0x9FF5FC")]
	private void updateLookAtPosition(object note)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x9FF6AC", Offset = "0x9FF6AC", VA = "0x9FF6AC", Slot = "4")]
	public override bool canActivate(ShootyVRHandController activatingHand)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x9FF6F4", Offset = "0x9FF6F4", VA = "0x9FF6F4", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x9FF884", Offset = "0x9FF884", VA = "0x9FF884")]
	public void reachedStopPosition()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x9FF8A4", Offset = "0x9FF8A4", VA = "0x9FF8A4")]
	public void startFiring()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x9FF978", Offset = "0x9FF978", VA = "0x9FF978")]
	public void trapInBubble()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x9FFACC", Offset = "0x9FFACC", VA = "0x9FFACC")]
	public void stopFiring()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x9FF480", Offset = "0x9FF480", VA = "0x9FF480")]
	public void moveToEndPositionAndCleanup(Vector3 endPosition, float delay, float timeToFlyToEnding, EnemyBossHeadDeathAnimation deathAnimation)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x9FF8FC", Offset = "0x9FF8FC", VA = "0x9FF8FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D6964", Offset = "0x7D6964")]
	private IEnumerator firingLoop()
	{
		return null;
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x9FFB8C", Offset = "0x9FFB8C", VA = "0x9FFB8C")]
	private void shootFakeBullet(GunFiringEffects[] currentGuns, string bulletKey, int gunFireTransformIndex)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x9FF39C", Offset = "0x9FF39C", VA = "0x9FF39C")]
	private string getGunLoopId()
	{
		return null;
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x9FFC8C", Offset = "0x9FFC8C", VA = "0x9FFC8C")]
	public void moveToPlayer()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x9FFD70", Offset = "0x9FFD70", VA = "0x9FFD70", Slot = "7")]
	public override void applyPowerupToPlayer(ShootyVRHandController activatingHand)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x9FFE20", Offset = "0x9FFE20", VA = "0x9FFE20")]
	public CopilotPowerupCrate()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x9FFE40", Offset = "0x9FFE40", VA = "0x9FFE40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D69C8", Offset = "0x7D69C8")]
	private void <trapInBubble>b__24_0(float scaleAlpha)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x9FFEE8", Offset = "0x9FFEE8", VA = "0x9FFEE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D69D8", Offset = "0x7D69D8")]
	private void <trapInBubble>b__24_1()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x9FFF78", Offset = "0x9FFF78", VA = "0x9FFF78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D69E8", Offset = "0x7D69E8")]
	private void <moveToPlayer>b__30_0(float alpha)
	{
	}
}
[Token(Token = "0x20000AE")]
public sealed class DragInput : SingletonMono<DragInput>, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler, IPointerDownHandler, IPointerUpHandler
{
	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool doLookForInput;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool dragEnded;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float dragEndedTime;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform collectorRect;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Graphic collectorImage;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera myCam;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<Vector2> dragDidBeginAtViewportAction;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<Vector2> dragAtViewportAction;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action dragDidEndAction;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector2 maxViewportPos;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector2 minViewportPos;

	[Token(Token = "0x17000013")]
	public static bool isDragging
	{
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xA21828", Offset = "0xA21828", VA = "0xA21828")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xA218A8", Offset = "0xA218A8", VA = "0xA218A8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xA219A0", Offset = "0xA219A0", VA = "0xA219A0")]
	public static void tryEnableDragInput(bool isEnabled)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xA21924", Offset = "0xA21924", VA = "0xA21924")]
	private void enableDragInput(bool isEnabled)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xA21A1C", Offset = "0xA21A1C", VA = "0xA21A1C", Slot = "10")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xA21B60", Offset = "0xA21B60", VA = "0xA21B60", Slot = "7")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xA21BF4", Offset = "0xA21BF4", VA = "0xA21BF4", Slot = "8")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xA21D2C", Offset = "0xA21D2C", VA = "0xA21D2C", Slot = "11")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xA21D60", Offset = "0xA21D60", VA = "0xA21D60", Slot = "9")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xA21D64", Offset = "0xA21D64", VA = "0xA21D64")]
	public bool needsToBeginDrag()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xA21AB0", Offset = "0xA21AB0", VA = "0xA21AB0")]
	public void beginDragAtPosition(Vector3 position)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xA21C88", Offset = "0xA21C88", VA = "0xA21C88")]
	public void dragAtPosition(Vector3 position)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xA21D6C", Offset = "0xA21D6C", VA = "0xA21D6C")]
	private Vector2 screenToViewport(Vector3 pos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xA21D30", Offset = "0xA21D30", VA = "0xA21D30")]
	public void dragDidEnd()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xA21E50", Offset = "0xA21E50", VA = "0xA21E50")]
	public DragInput()
	{
	}
}
[Token(Token = "0x20000AF")]
public class GenericDamagingCollisionDelegator : MonoBehaviour
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damageToApply;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string damageId;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action hitCallback;

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x9E6814", Offset = "0x9E6814", VA = "0x9E6814")]
	public void setupDamageConfiguration(string damageId, Action hitCallback)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x9E6848", Offset = "0x9E6848", VA = "0x9E6848")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x9E69E0", Offset = "0x9E69E0", VA = "0x9E69E0")]
	public GenericDamagingCollisionDelegator()
	{
	}
}
[Token(Token = "0x20000B0")]
public class GunFiringEffects : MonoBehaviour
{
	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDAC0", Offset = "0x7CDAC0")]
	private sealed class <deactivateOnEnd>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GunFiringEffects <>4__this;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem particleSystem;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600172B")]
			[Address(RVA = "0x9EBD4C", Offset = "0x9EBD4C", VA = "0x9EBD4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600172D")]
			[Address(RVA = "0x9EBDB4", Offset = "0x9EBDB4", VA = "0x9EBDB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x9EBB70", Offset = "0x9EBB70", VA = "0x9EBB70")]
		[DebuggerHidden]
		public <deactivateOnEnd>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x9EBC24", Offset = "0x9EBC24", VA = "0x9EBC24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x9EBC28", Offset = "0x9EBC28", VA = "0x9EBC28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x9EBD54", Offset = "0x9EBD54", VA = "0x9EBD54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEEA0", Offset = "0x7CEEA0")]
	public string muzzleSystemName;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float muzzleSystemOffsetZ;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem muzzleSystem;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool waitingToStop;

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x9EB4D8", Offset = "0x9EB4D8", VA = "0x9EB4D8")]
	public void lookAtPoint(Vector3 endPoint)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x9EB524", Offset = "0x9EB524", VA = "0x9EB524")]
	public void launchBullet(float firingOffset, string bulletKey, string damageId)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x9EB6D0", Offset = "0x9EB6D0", VA = "0x9EB6D0")]
	public void fireMuzzles()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x9EB9F4", Offset = "0x9EB9F4", VA = "0x9EB9F4")]
	public void resetMuzzleSystem()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x9EBAD8", Offset = "0x9EBAD8", VA = "0x9EBAD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D69F8", Offset = "0x7D69F8")]
	private IEnumerator deactivateOnEnd(ParticleSystem particleSystem)
	{
		return null;
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x9EB794", Offset = "0x9EB794", VA = "0x9EB794")]
	public void spawnMuzzleSystem()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x9EBB9C", Offset = "0x9EBB9C", VA = "0x9EBB9C")]
	public static string muzzleSystemPath(string muzzleSystemName)
	{
		return null;
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x9EBC10", Offset = "0x9EBC10", VA = "0x9EBC10")]
	public GunFiringEffects()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B1")]
public struct GunLevelAssignment
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int level;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GunFiringEffects[] gunFireTransforms;
}
[Token(Token = "0x20000B2")]
public class GunFiringSetup : MonoBehaviour
{
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEED8", Offset = "0x7CEED8")]
	public List<GunLevelAssignment> gunSetups;

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x9EBDBC", Offset = "0x9EBDBC", VA = "0x9EBDBC")]
	public GunFiringEffects[] getGunsForLevel(int gunLevel)
	{
		return null;
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x9EBE94", Offset = "0x9EBE94", VA = "0x9EBE94")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x9EBF1C", Offset = "0x9EBF1C", VA = "0x9EBF1C")]
	private void DrawGunPositions(Color color, int index, float scale)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x9EC09C", Offset = "0x9EC09C", VA = "0x9EC09C")]
	public GunFiringSetup()
	{
	}
}
[Token(Token = "0x20000B3")]
public interface IDamageable
{
	[Token(Token = "0x60003FD")]
	bool isAlive();

	[Token(Token = "0x60003FE")]
	bool isDamageable();

	[Token(Token = "0x60003FF")]
	void takeDamage(float damageAmount, string damageSource);
}
[Token(Token = "0x20000B4")]
public interface IRaycastable
{
	[Token(Token = "0x6000400")]
	bool canBeHit();

	[Token(Token = "0x6000401")]
	void raycastHit(Vector3 hitpoint);
}
[Token(Token = "0x20000B5")]
public class LobBullet : Bullet
{
	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEF10", Offset = "0x7CEF10")]
	public bool isVerticalLob;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float lobOffset;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float duration;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public Vector3 initialGeoRotation;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEF48", Offset = "0x7CEF48")]
	public bool doExplode;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Collider explosionCollider;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float setDuration;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Coroutine lobRoutine;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 currentEndPoint;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 currentStartPoint;

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xA5B1D4", Offset = "0xA5B1D4", VA = "0xA5B1D4", Slot = "4")]
	public override void reset()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xA5B2F8", Offset = "0xA5B2F8", VA = "0xA5B2F8", Slot = "6")]
	public override void shootBullet(Vector3 shootPosition, Quaternion shootRotation, bool isPlayerBullet, string shooterId, bool isFakeBullet = false)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xA5B660", Offset = "0xA5B660", VA = "0xA5B660", Slot = "8")]
	public override void updatePosition()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xA5B664", Offset = "0xA5B664", VA = "0xA5B664", Slot = "5")]
	public override void bulletWasCaughtInVacuum()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xA5B4D8", Offset = "0xA5B4D8", VA = "0xA5B4D8")]
	private void lobToPosition(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xA5B6B8", Offset = "0xA5B6B8", VA = "0xA5B6B8")]
	private void updatePosition(float lobAlpha)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xA5B81C", Offset = "0xA5B81C", VA = "0xA5B81C")]
	private float getArcOffset(float alpha)
	{
		return default(float);
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xA5B864", Offset = "0xA5B864", VA = "0xA5B864", Slot = "7")]
	public override void explode(GameObject hitObject, bool playSound = true)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xA5B844", Offset = "0xA5B844", VA = "0xA5B844")]
	private bool isHorizontalFlipped()
	{
		return default(bool);
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xA5BD94", Offset = "0xA5BD94", VA = "0xA5BD94")]
	public LobBullet()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xA5BDB8", Offset = "0xA5BDB8", VA = "0xA5BDB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6A5C", Offset = "0x7D6A5C")]
	private void <lobToPosition>b__14_0(float lerpValue)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xA5BDBC", Offset = "0xA5BDBC", VA = "0xA5BDBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6A6C", Offset = "0x7D6A6C")]
	private void <lobToPosition>b__14_1()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xA5BDF4", Offset = "0xA5BDF4", VA = "0xA5BDF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6A7C", Offset = "0x7D6A7C")]
	private void <explode>b__17_0()
	{
	}
}
[Token(Token = "0x20000B6")]
public class Pilot : MonoBehaviour
{
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEF80", Offset = "0x7CEF80")]
	public Material defaultMaterial;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xB074F8", Offset = "0xB074F8", VA = "0xB074F8")]
	public Pilot()
	{
	}
}
[Token(Token = "0x20000B7")]
public class PilotSelectionCollider : MonoBehaviour, IDamageable, IRaycastable
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PilotShelfElement shelfElement;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentHitCount;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetTime;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool bootstrapped;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float hoverResetTime;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 baseScale;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xA8E0F0", Offset = "0xA8E0F0", VA = "0xA8E0F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xA8E150", Offset = "0xA8E150", VA = "0xA8E150")]
	private void Update()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xA8E2E8", Offset = "0xA8E2E8", VA = "0xA8E2E8", Slot = "4")]
	public bool isAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xA8E2F0", Offset = "0xA8E2F0", VA = "0xA8E2F0", Slot = "5")]
	public bool isDamageable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xA8E3C8", Offset = "0xA8E3C8", VA = "0xA8E3C8", Slot = "6")]
	public void takeDamage(float damageAmount, string damageSource)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xA8E148", Offset = "0xA8E148", VA = "0xA8E148")]
	private void resetHitCount()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xA8E2F4", Offset = "0xA8E2F4", VA = "0xA8E2F4", Slot = "7")]
	public bool canBeHit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xA8E5AC", Offset = "0xA8E5AC", VA = "0xA8E5AC", Slot = "8")]
	public void raycastHit(Vector3 hitpoint)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xA8E8D8", Offset = "0xA8E8D8", VA = "0xA8E8D8")]
	public PilotSelectionCollider()
	{
	}
}
[Token(Token = "0x20000B8")]
public class PlayerController : MonoBehaviour
{
	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDAD0", Offset = "0x7CDAD0")]
	private sealed class <chargeAttack>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerController <>4__this;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int count;

		[Token(Token = "0x17000154")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001731")]
			[Address(RVA = "0xA96DF8", Offset = "0xA96DF8", VA = "0xA96DF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001733")]
			[Address(RVA = "0xA96E60", Offset = "0xA96E60", VA = "0xA96E60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xA941C0", Offset = "0xA941C0", VA = "0xA941C0")]
		[DebuggerHidden]
		public <chargeAttack>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xA96B14", Offset = "0xA96B14", VA = "0xA96B14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xA96B18", Offset = "0xA96B18", VA = "0xA96B18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xA96E00", Offset = "0xA96E00", VA = "0xA96E00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDAE0", Offset = "0x7CDAE0")]
	private sealed class <>c__DisplayClass94_0
	{
		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MightyVRControlSide controller;

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xA94FE0", Offset = "0xA94FE0", VA = "0xA94FE0")]
		public <>c__DisplayClass94_0()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xA96A94", Offset = "0xA96A94", VA = "0xA96A94")]
		internal void <vibrateController>b__0()
		{
		}
	}

	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDAF0", Offset = "0x7CDAF0")]
	private sealed class <>c__DisplayClass101_0
	{
		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float slowTimeScale;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerController <>4__this;

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xA95C40", Offset = "0xA95C40", VA = "0xA95C40")]
		public <>c__DisplayClass101_0()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xA9662C", Offset = "0xA9662C", VA = "0xA9662C")]
		internal void <playerDied>b__0()
		{
		}
	}

	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDB00", Offset = "0x7CDB00")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerController <>4__this;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isDeath;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xA95C48", Offset = "0xA95C48", VA = "0xA95C48")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xA966D0", Offset = "0xA966D0", VA = "0xA966D0")]
		internal void <playerHitKnockBack>b__0()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xA96830", Offset = "0xA96830", VA = "0xA96830")]
		internal void <playerHitKnockBack>b__1()
		{
		}
	}

	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDB10", Offset = "0x7CDB10")]
	private sealed class <>c__DisplayClass103_0
	{
		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float newTimeScale;

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xA95C50", Offset = "0xA95C50", VA = "0xA95C50")]
		public <>c__DisplayClass103_0()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xA96A0C", Offset = "0xA96A0C", VA = "0xA96A0C")]
		internal void <animateTimeSlowdown>b__0(float alpha)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDB20", Offset = "0x7CDB20")]
	private sealed class <>c
	{
		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__103_1;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__104_0;

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xA963F8", Offset = "0xA963F8", VA = "0xA963F8")]
		public <>c()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xA96400", Offset = "0xA96400", VA = "0xA96400")]
		internal void <animateTimeSlowdown>b__103_1()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xA96488", Offset = "0xA96488", VA = "0xA96488")]
		internal void <playerDeathAnimationComplete>b__104_0()
		{
		}
	}

	[Token(Token = "0x4000389")]
	private const string FireGunLoopId = "GunLoop";

	[Token(Token = "0x400038A")]
	private const string ChargeShotLoopId = "ChargeLoop";

	[Token(Token = "0x400038B")]
	private const string CalloutPopupId = "GrabCallout";

	[Token(Token = "0x400038C")]
	private const string GunUpgradeCalloutPopupId = "GunUpgrade";

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int gunLevel;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int chargeAttackLevel;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CEFD8", Offset = "0x7CEFD8")]
	public GameObject geo;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject collision;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF010", Offset = "0x7CF010")]
	public float grabAttachSpeed;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF048", Offset = "0x7CF048")]
	public PlayerHitscanGun hitScanGun;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform missilesFirePoint;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float bulletsPerSecondGameplay;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float bulletsPerSecondUI;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF080", Offset = "0x7CF080")]
	public float noHitTime;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float flashDuration;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve flashAmountCurve;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve timeScaleCurve;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SimpleModelFlash flashControl;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float knockbackDuration;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int knockbackFloatySpeed;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int knockbackFloatyMagnitude;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF0B8", Offset = "0x7CF0B8")]
	public BBFloaty floaty;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float deathHeadAnimDuration;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF0F0", Offset = "0x7CF0F0")]
	public ParticleSystem chargeMaxParticles;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystem playerHitVFX;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ShootyVRHandController currentPlayerHolder;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<ShootyVRHandController> allHands;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MightyVRControlSide previousSide;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ParticleSystem spawnInEffect;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private PlayerGeo playerGeometry;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float chargeStartTime;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float gunCountdown;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AudioSourceController chargeStart;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine chargeLoopCoroutine;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int basePlayerHealth;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int hitsBeforeDeath;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float noHitCooldownEndTime;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF128", Offset = "0x7CF128")]
	private int <bulletsFiredThisLife>k__BackingField;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF138", Offset = "0x7CF138")]
	private int <saturnMissilesFiredThisLife>k__BackingField;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool isCharging;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	private bool previousIsFiring;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	private bool canBeDamaged;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
	private bool wasRecentlyGrabbed;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameMode currentMode;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Coroutine flavourSoundLoop;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF148", Offset = "0x7CF148")]
	private bool <isAlive>k__BackingField;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF158", Offset = "0x7CF158")]
	private bool <isAutofireOnAimEnabled>k__BackingField;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF168", Offset = "0x7CF168")]
	private bool <isAimingLaserEnabled>k__BackingField;

	[Token(Token = "0x17000014")]
	public int bulletsFiredThisLife
	{
		[Token(Token = "0x6000419")]
		[Address(RVA = "0xA90F88", Offset = "0xA90F88", VA = "0xA90F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6A8C", Offset = "0x7D6A8C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600041A")]
		[Address(RVA = "0xA90F90", Offset = "0xA90F90", VA = "0xA90F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6A9C", Offset = "0x7D6A9C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public int saturnMissilesFiredThisLife
	{
		[Token(Token = "0x600041B")]
		[Address(RVA = "0xA90F98", Offset = "0xA90F98", VA = "0xA90F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6AAC", Offset = "0x7D6AAC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600041C")]
		[Address(RVA = "0xA90FA0", Offset = "0xA90FA0", VA = "0xA90FA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6ABC", Offset = "0x7D6ABC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public bool isAlive
	{
		[Token(Token = "0x600041D")]
		[Address(RVA = "0xA90FA8", Offset = "0xA90FA8", VA = "0xA90FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6ACC", Offset = "0x7D6ACC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600041E")]
		[Address(RVA = "0xA90FB0", Offset = "0xA90FB0", VA = "0xA90FB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6ADC", Offset = "0x7D6ADC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public bool isPlayerBeingHeld
	{
		[Token(Token = "0x600041F")]
		[Address(RVA = "0xA90FBC", Offset = "0xA90FBC", VA = "0xA90FBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000018")]
	public bool isAutofireOnAimEnabled
	{
		[Token(Token = "0x6000420")]
		[Address(RVA = "0xA9102C", Offset = "0xA9102C", VA = "0xA9102C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6AEC", Offset = "0x7D6AEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000421")]
		[Address(RVA = "0xA91034", Offset = "0xA91034", VA = "0xA91034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6AFC", Offset = "0x7D6AFC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public bool isAimingLaserEnabled
	{
		[Token(Token = "0x6000422")]
		[Address(RVA = "0xA91040", Offset = "0xA91040", VA = "0xA91040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6B0C", Offset = "0x7D6B0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000423")]
		[Address(RVA = "0xA91048", Offset = "0xA91048", VA = "0xA91048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6B1C", Offset = "0x7D6B1C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xA91054", Offset = "0xA91054", VA = "0xA91054")]
	public void startLevel(int playerHealth, GameMode currentMode)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xA91BA8", Offset = "0xA91BA8", VA = "0xA91BA8")]
	public void pilotWasSelected(string pilotId)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xA91EAC", Offset = "0xA91EAC", VA = "0xA91EAC")]
	public void pilotRespawn(bool playEffects)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xA91330", Offset = "0xA91330", VA = "0xA91330")]
	private void resetPlayerState(bool showGeo = true)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xA928C4", Offset = "0xA928C4", VA = "0xA928C4")]
	private void Update()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000429")]
	[Address(RVA = "0xA92D30", Offset = "0xA92D30", VA = "0xA92D30")]
	private void updateFiringStates()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xA93378", Offset = "0xA93378", VA = "0xA93378")]
	private bool isChargeButtonDown(MightyVRControlSide activeSide)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600042B")]
	[Address(RVA = "0xA93640", Offset = "0xA93640", VA = "0xA93640")]
	private void updatePilotRotation()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xA921E0", Offset = "0xA921E0", VA = "0xA921E0")]
	private void playSpawnEffect()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xA93844", Offset = "0xA93844", VA = "0xA93844")]
	public void goToGameSuccess()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xA9392C", Offset = "0xA9392C", VA = "0xA9392C")]
	public Vector3 currentPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xA9278C", Offset = "0xA9278C", VA = "0xA9278C")]
	private void updateShootInputState(bool isDown, bool isPlayingLevel = false)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xA93B44", Offset = "0xA93B44", VA = "0xA93B44")]
	public void gunWasUpgraded()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xA93AB0", Offset = "0xA93AB0", VA = "0xA93AB0")]
	private string machineGunSoundLoopKey()
	{
		return null;
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xA94134", Offset = "0xA94134", VA = "0xA94134")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D6B2C", Offset = "0x7D6B2C")]
	private IEnumerator chargeAttack(int count)
	{
		return null;
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xA93488", Offset = "0xA93488", VA = "0xA93488")]
	private void startCharge()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xA941EC", Offset = "0xA941EC", VA = "0xA941EC")]
	private void resetChargeSoundsState()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xA924C8", Offset = "0xA924C8", VA = "0xA924C8")]
	private void endCharge()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xA942E0", Offset = "0xA942E0", VA = "0xA942E0")]
	public float currentChargeDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xA92354", Offset = "0xA92354", VA = "0xA92354")]
	public void grabPlayerWithLastHand()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xA9431C", Offset = "0xA9431C", VA = "0xA9431C")]
	public void grabPlayer(ShootyVRHandController newHolder, bool instantJump = true)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xA947BC", Offset = "0xA947BC", VA = "0xA947BC")]
	private void releaseGripOnPlayer()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xA94954", Offset = "0xA94954", VA = "0xA94954")]
	public bool isCurrentMainHand(MightyVRControlSide controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xA9499C", Offset = "0xA9499C", VA = "0xA9499C")]
	public bool isCurrentOffhand(MightyVRControlSide controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xA949E4", Offset = "0xA949E4", VA = "0xA949E4")]
	public Vector3 currentOffHandPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xA94B30", Offset = "0xA94B30", VA = "0xA94B30")]
	public void registerHandController(ShootyVRHandController handController)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xA94C78", Offset = "0xA94C78", VA = "0xA94C78")]
	public Transform getMessageAttachPoint()
	{
		return null;
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xA94010", Offset = "0xA94010", VA = "0xA94010")]
	public void vibrateHoldingHand(float duration = 2f, float strengthMultiplier = 1f)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xA94E7C", Offset = "0xA94E7C", VA = "0xA94E7C")]
	public void vibrateOffHand(float duration = 2f, float strengthMultiplier = 1f)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xA94D18", Offset = "0xA94D18", VA = "0xA94D18")]
	private void vibrateController(float duration, float strengthMultiplier, MightyVRControlSide controller)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xA94FE8", Offset = "0xA94FE8", VA = "0xA94FE8")]
	public MightyVRControlSide getActiveSide()
	{
		return default(MightyVRControlSide);
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xA95078", Offset = "0xA95078", VA = "0xA95078")]
	public void hitByBullet(Bullet theBullet)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xA95854", Offset = "0xA95854", VA = "0xA95854")]
	public void hitByEnemyPlane(EnemyCollider enemyCollider)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xA958E0", Offset = "0xA958E0", VA = "0xA958E0")]
	public void hitByLandmine(Landmine landmine)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xA95174", Offset = "0xA95174", VA = "0xA95174")]
	private void playerReceivedHit()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xA9560C", Offset = "0xA9560C", VA = "0xA9560C")]
	private void playerHealthLoss()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xA95270", Offset = "0xA95270", VA = "0xA95270")]
	private void playerDied()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xA95AC4", Offset = "0xA95AC4", VA = "0xA95AC4")]
	private void playerHitKnockBack(bool isDeath)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xA9595C", Offset = "0xA9595C", VA = "0xA9595C")]
	private void animateTimeSlowdown(float newTimeScale, float duration)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xA95C58", Offset = "0xA95C58", VA = "0xA95C58")]
	private void playerDeathAnimationComplete()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xA91484", Offset = "0xA91484", VA = "0xA91484")]
	private void pilotFlavourSoundLoop()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xA95144", Offset = "0xA95144", VA = "0xA95144")]
	private bool isPastHitCooldown()
	{
		return default(bool);
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xA92C20", Offset = "0xA92C20", VA = "0xA92C20")]
	private void updateDebugState()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xA91A34", Offset = "0xA91A34", VA = "0xA91A34")]
	private void showDebugGodModeMessage()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xA95DA0", Offset = "0xA95DA0", VA = "0xA95DA0")]
	public bool isGodModeOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xA95DB0", Offset = "0xA95DB0", VA = "0xA95DB0")]
	public PlayerController()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xA95E18", Offset = "0xA95E18", VA = "0xA95E18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6B90", Offset = "0x7D6B90")]
	private void <pilotRespawn>b__67_0()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xA95E38", Offset = "0xA95E38", VA = "0xA95E38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6BA0", Offset = "0x7D6BA0")]
	private void <startCharge>b__80_0()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xA95EEC", Offset = "0xA95EEC", VA = "0xA95EEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6BB0", Offset = "0x7D6BB0")]
	private bool <grabPlayerWithLastHand>b__84_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xA95F48", Offset = "0xA95F48", VA = "0xA95F48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6BC0", Offset = "0x7D6BC0")]
	private void <grabPlayerWithLastHand>b__84_1()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xA960AC", Offset = "0xA960AC", VA = "0xA960AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6BD0", Offset = "0x7D6BD0")]
	private void <grabPlayer>b__85_0()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xA960B4", Offset = "0xA960B4", VA = "0xA960B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6BE0", Offset = "0x7D6BE0")]
	private void <playerHealthLoss>b__100_0()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xA9613C", Offset = "0xA9613C", VA = "0xA9613C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6BF0", Offset = "0x7D6BF0")]
	private void <playerHealthLoss>b__100_1(float alpha)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xA962A4", Offset = "0xA962A4", VA = "0xA962A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6C00", Offset = "0x7D6C00")]
	private void <playerHealthLoss>b__100_2()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xA96358", Offset = "0xA96358", VA = "0xA96358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6C10", Offset = "0x7D6C10")]
	private void <pilotFlavourSoundLoop>b__105_0()
	{
	}
}
[Token(Token = "0x20000B9")]
public class PlayerGeo : MonoBehaviour
{
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDB30", Offset = "0x7CDB30")]
	private sealed class <>c__DisplayClass48_0
	{
		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float speed;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerGeo <>4__this;

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xA97AD0", Offset = "0xA97AD0", VA = "0xA97AD0")]
		public <>c__DisplayClass48_0()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xA98474", Offset = "0xA98474", VA = "0xA98474")]
		internal void <spinPilot>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xA9852C", Offset = "0xA9852C", VA = "0xA9852C")]
		internal void <spinPilot>b__1()
		{
		}
	}

	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDB40", Offset = "0x7CDB40")]
	private sealed class <>c__DisplayClass49_0
	{
		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerGeo <>4__this;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action completion;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xA97AD8", Offset = "0xA97AD8", VA = "0xA97AD8")]
		public <>c__DisplayClass49_0()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xA985B0", Offset = "0xA985B0", VA = "0xA985B0")]
		internal void <playerDeathAnimations>b__0()
		{
		}
	}

	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDB50", Offset = "0x7CDB50")]
	private sealed class <>c__DisplayClass50_0
	{
		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem system;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerGeo <>4__this;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider[] colliders;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minDistance;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxDistance;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<float> <>9__2;

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xA97CC4", Offset = "0xA97CC4", VA = "0xA97CC4")]
		public <>c__DisplayClass50_0()
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xA985D4", Offset = "0xA985D4", VA = "0xA985D4")]
		internal void <playerDeathExplosion>b__0()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xA985F4", Offset = "0xA985F4", VA = "0xA985F4")]
		internal void <playerDeathExplosion>b__1()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xA986B4", Offset = "0xA986B4", VA = "0xA986B4")]
		internal void <playerDeathExplosion>b__2(float alpha)
		{
		}
	}

	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDB60", Offset = "0x7CDB60")]
	private sealed class <>c__DisplayClass51_0
	{
		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerGeo <>4__this;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startPos;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 endPos;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion startRot;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion endRot;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 smokeStartOffset;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action completion;

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xA97FB4", Offset = "0xA97FB4", VA = "0xA97FB4")]
		public <>c__DisplayClass51_0()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xA98964", Offset = "0xA98964", VA = "0xA98964")]
		internal void <playerDeathHeadAnimation>b__0(float alpha)
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xA98AF0", Offset = "0xA98AF0", VA = "0xA98AF0")]
		internal void <playerDeathHeadAnimation>b__1()
		{
		}
	}

	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDB70", Offset = "0x7CDB70")]
	private sealed class <>c__DisplayClass52_0
	{
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem system;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerGeo <>4__this;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 startPos;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 endPos;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion startRot;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Quaternion endRot;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action completion;

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xA9832C", Offset = "0xA9832C", VA = "0xA9832C")]
		public <>c__DisplayClass52_0()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xA98C34", Offset = "0xA98C34", VA = "0xA98C34")]
		internal void <playerDeathHeadAnimation>b__0()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xA98C54", Offset = "0xA98C54", VA = "0xA98C54")]
		internal void <playerDeathHeadAnimation>b__1(float alpha)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xA98DE0", Offset = "0xA98DE0", VA = "0xA98DE0")]
		internal void <playerDeathHeadAnimation>b__2()
		{
		}
	}

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string PlayerExplosionKey;

	[Token(Token = "0x40003BA")]
	private const float PilotScaleFactor = 1.5f;

	[Token(Token = "0x40003BB")]
	private const float ShipScaleFactor = 3f;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isGameplayGeo;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF178", Offset = "0x7CF178")]
	public Transform shipMount;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pilotMount;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF1B0", Offset = "0x7CF1B0")]
	public AnimationCurve preGameRotationCurve;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF1E8", Offset = "0x7CF1E8")]
	public ParticleSystem pilotSmokeTrail;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF220", Offset = "0x7CF220")]
	public LayerMask deathExplosionLayers;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float explosionDelay;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float explosionMoveOutTime;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF258", Offset = "0x7CF258")]
	private string <assignedPilotId>k__BackingField;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF268", Offset = "0x7CF268")]
	private MeshRenderer[] <shipRenderers>k__BackingField;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF278", Offset = "0x7CF278")]
	private MeshRenderer[] <pilotRenderers>k__BackingField;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF288", Offset = "0x7CF288")]
	private string <bulletPrefabKey>k__BackingField;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Pilot pilotObject;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Ship shipObject;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private HoverOutline hoverOutline;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool hasBooted;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool isAlive;

	[Token(Token = "0x1700001A")]
	public string assignedPilotId
	{
		[Token(Token = "0x600045B")]
		[Address(RVA = "0xA96E68", Offset = "0xA96E68", VA = "0xA96E68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6C20", Offset = "0x7D6C20")]
		get
		{
			return null;
		}
		[Token(Token = "0x600045C")]
		[Address(RVA = "0xA96E70", Offset = "0xA96E70", VA = "0xA96E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6C30", Offset = "0x7D6C30")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public MeshRenderer[] shipRenderers
	{
		[Token(Token = "0x600045D")]
		[Address(RVA = "0xA96E78", Offset = "0xA96E78", VA = "0xA96E78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6C40", Offset = "0x7D6C40")]
		get
		{
			return null;
		}
		[Token(Token = "0x600045E")]
		[Address(RVA = "0xA96E80", Offset = "0xA96E80", VA = "0xA96E80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6C50", Offset = "0x7D6C50")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public MeshRenderer[] pilotRenderers
	{
		[Token(Token = "0x600045F")]
		[Address(RVA = "0xA96E88", Offset = "0xA96E88", VA = "0xA96E88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6C60", Offset = "0x7D6C60")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000460")]
		[Address(RVA = "0xA96E90", Offset = "0xA96E90", VA = "0xA96E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6C70", Offset = "0x7D6C70")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public string bulletPrefabKey
	{
		[Token(Token = "0x6000461")]
		[Address(RVA = "0xA96E98", Offset = "0xA96E98", VA = "0xA96E98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6C80", Offset = "0x7D6C80")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000462")]
		[Address(RVA = "0xA96EA0", Offset = "0xA96EA0", VA = "0xA96EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6C90", Offset = "0x7D6C90")]
		private set
		{
		}
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xA920A0", Offset = "0xA920A0", VA = "0xA920A0")]
	public void playerGeoRespawn()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xA96EA8", Offset = "0xA96EA8", VA = "0xA96EA8")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xA8DEE4", Offset = "0xA8DEE4", VA = "0xA8DEE4")]
	public void loadPilotAndShip(string pilotId, bool save = true)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xA973B8", Offset = "0xA973B8", VA = "0xA973B8")]
	private void setupHoverOutline()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xA94884", Offset = "0xA94884", VA = "0xA94884")]
	public void updateOutline(float size, bool moveOverTime)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xA97594", Offset = "0xA97594", VA = "0xA97594")]
	public void updateEnginePitch(float distanceMoved)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xA97718", Offset = "0xA97718", VA = "0xA97718")]
	public bool isAssignedPlayersPilot()
	{
		return default(bool);
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xA8E028", Offset = "0xA8E028", VA = "0xA8E028")]
	public bool isAssignedPilotLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xA977A0", Offset = "0xA977A0", VA = "0xA977A0")]
	public bool isAssignedPilotHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xA96F68", Offset = "0xA96F68", VA = "0xA96F68")]
	private void loadPilotObject(string pilotKey)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xA9714C", Offset = "0xA9714C", VA = "0xA9714C")]
	private void loadShipObject(string shipKey)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xA91C84", Offset = "0xA91C84", VA = "0xA91C84")]
	public void playFlavourSound()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xA9240C", Offset = "0xA9240C", VA = "0xA9240C")]
	public void playAppearSound()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xA97A14", Offset = "0xA97A14", VA = "0xA97A14")]
	public void playDeathSound()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xA96F48", Offset = "0xA96F48", VA = "0xA96F48")]
	public void startEngines(bool force = false)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xA97924", Offset = "0xA97924", VA = "0xA97924")]
	public void stopEngines()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xA93DAC", Offset = "0xA93DAC", VA = "0xA93DAC")]
	public void spinPilot(float duration, float speed)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xA968CC", Offset = "0xA968CC", VA = "0xA968CC")]
	public void playerDeathAnimations(Action completion, float duration)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xA97AE0", Offset = "0xA97AE0", VA = "0xA97AE0")]
	private void playerDeathExplosion()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xA97CCC", Offset = "0xA97CCC", VA = "0xA97CCC")]
	private void playerDeathHeadAnimation(Action completion, float duration)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xA97FBC", Offset = "0xA97FBC", VA = "0xA97FBC")]
	public void playerDeathHeadAnimation(float duration, Action completion)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xA8E0B4", Offset = "0xA8E0B4", VA = "0xA8E0B4")]
	public void setNewMaterial(Material newMaterial)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xA8E0BC", Offset = "0xA8E0BC", VA = "0xA8E0BC")]
	public void setMaterialDefaults()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xA983FC", Offset = "0xA983FC", VA = "0xA983FC")]
	public Ship assignedShip()
	{
		return null;
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xA97850", Offset = "0xA97850", VA = "0xA97850")]
	private void setDefaultPilotMaterials()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xA97940", Offset = "0xA97940", VA = "0xA97940")]
	private void setDefaultShipMaterials()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xA98334", Offset = "0xA98334", VA = "0xA98334")]
	private void setMaterials(Material pilotMaterial, Material shipMaterial)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xA98404", Offset = "0xA98404", VA = "0xA98404")]
	public PlayerGeo()
	{
	}
}
[Token(Token = "0x20000BA")]
public class PlayerHitscanGun : MonoBehaviour
{
	[Token(Token = "0x40003CD")]
	private const int MinGunLevel = 1;

	[Token(Token = "0x40003CE")]
	private const int MaxGunLevel = 4;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string DamageId;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string HitscanHitEffect;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string HitscanHitShieldEffect;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF298", Offset = "0x7CF298")]
	public LayerMask laserLayerMask;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask hitLayerMask;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask removeRaycastHit;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float hitCastRadius;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform guidedAim;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF2D0", Offset = "0x7CF2D0")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Gradient activeLaserColor;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Gradient hoveringLaserColor;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF308", Offset = "0x7CF308")]
	public float transformCyclingOffset;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GunFiringEffects[] levelOneGuns;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GunFiringEffects[] levelTwoGuns;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GunFiringEffects[] levelThreeGuns;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GunFiringEffects[] levelFourGuns;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<int, GunFiringEffects[]> gunLevelMappings;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isRaycastHitting;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int gunFireTransformIndex;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 hitPosition;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject hitGameObject;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerController player;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PlaytimeOverseer overseer;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private IRaycastable lastHoverTarget;

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xA98EA0", Offset = "0xA98EA0", VA = "0xA98EA0")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xA98FC8", Offset = "0xA98FC8", VA = "0xA98FC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xA9321C", Offset = "0xA9321C", VA = "0xA9321C")]
	public bool isShooting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xA93250", Offset = "0xA93250", VA = "0xA93250")]
	public int fire(bool isPlayingLevel, string assignedBulletKey)
	{
		return default(int);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xA99160", Offset = "0xA99160", VA = "0xA99160")]
	private void tryHitDamageable()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xA9962C", Offset = "0xA9962C", VA = "0xA9962C")]
	private void bootstrapMuzzleSystems()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xA939C0", Offset = "0xA939C0", VA = "0xA939C0")]
	public void resetMuzzles()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xA93950", Offset = "0xA93950", VA = "0xA93950")]
	public void activateMuzzleFlash()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xA9971C", Offset = "0xA9971C", VA = "0xA9971C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xA997F8", Offset = "0xA997F8", VA = "0xA997F8")]
	private bool canRenderLaser()
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600048A")]
	[Address(RVA = "0xA998BC", Offset = "0xA998BC", VA = "0xA998BC")]
	private void updateLaserSight()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xA99470", Offset = "0xA99470", VA = "0xA99470")]
	private void playHitScanHitEffect(Vector3 position, string hitEffect)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600048C")]
	[Address(RVA = "0xA99E38", Offset = "0xA99E38", VA = "0xA99E38")]
	private void updateRaycastHitInformation()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xA98FCC", Offset = "0xA98FCC", VA = "0xA98FCC")]
	private void resetRaycastInfo()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xA940C4", Offset = "0xA940C4", VA = "0xA940C4")]
	public int constrainGunLevel(int gunLevel)
	{
		return default(int);
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xA993A4", Offset = "0xA993A4", VA = "0xA993A4")]
	private float currentGunDamageLevel()
	{
		return default(float);
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xA99050", Offset = "0xA99050", VA = "0xA99050")]
	private GunFiringEffects[] getCurrentGuns()
	{
		return null;
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xA91D5C", Offset = "0xA91D5C", VA = "0xA91D5C")]
	public void updateGunAssignments(PlayerGeo playerGeo)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xA9A168", Offset = "0xA9A168", VA = "0xA9A168")]
	public PlayerHitscanGun()
	{
	}
}
[Token(Token = "0x20000BB")]
public class PlayerLoadSceneVFX : SingletonMono<PlayerLoadSceneVFX>
{
	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem fadeInVFX;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem fadeOutVFX;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xA9A28C", Offset = "0xA9A28C", VA = "0xA9A28C")]
	public void playLoadInVFX()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xA9A2AC", Offset = "0xA9A2AC", VA = "0xA9A2AC")]
	public void playLoadOutVFX()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xA9A2CC", Offset = "0xA9A2CC", VA = "0xA9A2CC")]
	public PlayerLoadSceneVFX()
	{
	}
}
[Token(Token = "0x20000BC")]
public class PlayerMover : MonoBehaviour
{
	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDB80", Offset = "0x7CDB80")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerMover <>4__this;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startPos;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 endPos;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion startRot;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion endRot;

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xA9A630", Offset = "0xA9A630", VA = "0xA9A630")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xA9AA6C", Offset = "0xA9AA6C", VA = "0xA9AA6C")]
		internal void <moveToTransform>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xA9ABC4", Offset = "0xA9ABC4", VA = "0xA9ABC4")]
		internal void <moveToTransform>b__1()
		{
		}
	}

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform fitoutTransform;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform gameStartTransform;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform gameWinTransform;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform playerMovement;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 destinationPosition;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 actualPosition;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector2[] speedLevels;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float xSpeed;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float zSpeed;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float winMovementDuration;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float fitoutToStartDuration;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool movementEnabled;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float fig8XMag;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float fig8ZMag;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float fig8XSpeed;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float fig8ZSpeed;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float fig8ZOffset;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool figure8;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SinCosLUT sinCosLUT;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xA9A33C", Offset = "0xA9A33C", VA = "0xA9A33C")]
	public void setLevel(int shipLevel)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xA9A3F0", Offset = "0xA9A3F0", VA = "0xA9A3F0")]
	public void enablePlayerMovement(bool isEnabled)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xA9A3FC", Offset = "0xA9A3FC", VA = "0xA9A3FC")]
	public void moveToFitout()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xA9A618", Offset = "0xA9A618", VA = "0xA9A618")]
	public void moveToGameStart()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xA9A624", Offset = "0xA9A624", VA = "0xA9A624")]
	public void moveToGameWin()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xA9A408", Offset = "0xA9A408", VA = "0xA9A408")]
	public void moveToTransform(Transform destination, float time = 0.35f)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xA9A638", Offset = "0xA9A638", VA = "0xA9A638")]
	public void movementDidBegin(Vector3 position)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xA9A644", Offset = "0xA9A644", VA = "0xA9A644")]
	public void movementDidUpdate(Vector3 movementDelta)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xA9A6F8", Offset = "0xA9A6F8", VA = "0xA9A6F8")]
	public void movementDidEnd()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xA9A6FC", Offset = "0xA9A6FC", VA = "0xA9A6FC")]
	public void figureEight(bool enabled)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xA9A708", Offset = "0xA9A708", VA = "0xA9A708")]
	private void fig8Update()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xA9A880", Offset = "0xA9A880", VA = "0xA9A880")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xA9A9CC", Offset = "0xA9A9CC", VA = "0xA9A9CC")]
	public PlayerMover()
	{
	}
}
[Token(Token = "0x20000BD")]
public class PlayerShield : MonoBehaviour
{
	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem shieldPop;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject geo;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject heavyShield;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float shieldHealth;

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xA9AFC4", Offset = "0xA9AFC4", VA = "0xA9AFC4")]
	public void reset(int shieldLevel)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xA9B010", Offset = "0xA9B010", VA = "0xA9B010")]
	public void powerup(float increment)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xA9B020", Offset = "0xA9B020", VA = "0xA9B020")]
	public void startShield()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xA9B128", Offset = "0xA9B128", VA = "0xA9B128")]
	public bool heavyShieldIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xA9B110", Offset = "0xA9B110", VA = "0xA9B110")]
	public bool shieldIsDead()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xA9B140", Offset = "0xA9B140", VA = "0xA9B140")]
	public void hitByBullet(Bullet theBullet)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xA9B1D4", Offset = "0xA9B1D4", VA = "0xA9B1D4")]
	private void disableShield()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xA9B1F4", Offset = "0xA9B1F4", VA = "0xA9B1F4")]
	public PlayerShield()
	{
	}
}
[Token(Token = "0x20000BE")]
public class PlayerTouchInput : MonoBehaviour
{
	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xA9B1FC", Offset = "0xA9B1FC", VA = "0xA9B1FC")]
	public PlayerTouchInput()
	{
	}
}
[Token(Token = "0x20000BF")]
public abstract class Powerup : MonoBehaviour
{
	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF340", Offset = "0x7CF340")]
	public string particlePath;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem spawnInEffect;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF378", Offset = "0x7CF378")]
	public BasicMover mover;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool overrideMoveSpeed;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x7CF3B0", Offset = "0x7CF3B0")]
	public float moveSpeedToSet;

	[Token(Token = "0x60004AD")]
	public abstract bool canActivate(ShootyVRHandController activatingHand);

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xAA3E38", Offset = "0xAA3E38", VA = "0xAA3E38", Slot = "5")]
	public virtual void reset()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xAA3F18", Offset = "0xAA3F18", VA = "0xAA3F18", Slot = "6")]
	public virtual void playActivationSound(Transform location)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xAA3F8C", Offset = "0xAA3F8C", VA = "0xAA3F8C", Slot = "7")]
	public virtual void applyPowerupToPlayer(ShootyVRHandController activatingHand)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xAA4094", Offset = "0xAA4094", VA = "0xAA4094")]
	public void cleanup()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xAA40B0", Offset = "0xAA40B0", VA = "0xAA40B0")]
	protected Powerup()
	{
	}
}
[Token(Token = "0x20000C0")]
public class PowerupCrate : Powerup
{
	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xABFF10", Offset = "0xABFF10", VA = "0xABFF10", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xABFFD4", Offset = "0xABFFD4", VA = "0xABFFD4", Slot = "4")]
	public override bool canActivate(ShootyVRHandController activatingHand)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xABFFF0", Offset = "0xABFFF0", VA = "0xABFFF0", Slot = "7")]
	public override void applyPowerupToPlayer(ShootyVRHandController activatingHand)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xAC008C", Offset = "0xAC008C", VA = "0xAC008C")]
	public PowerupCrate()
	{
	}
}
[Token(Token = "0x20000C1")]
public class PowerupUpgrade : Powerup
{
	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF3E8", Offset = "0x7CF3E8")]
	public ShipUpgradeType powerupType;

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xAC0688", Offset = "0xAC0688", VA = "0xAC0688", Slot = "4")]
	public override bool canActivate(ShootyVRHandController activatingHand)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xAC0690", Offset = "0xAC0690", VA = "0xAC0690", Slot = "7")]
	public override void applyPowerupToPlayer(ShootyVRHandController activatingHand)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xAC071C", Offset = "0xAC071C", VA = "0xAC071C")]
	public PowerupUpgrade()
	{
	}
}
[Token(Token = "0x20000C2")]
public class ScoreMultiplierPowerupCrate : Powerup
{
	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF420", Offset = "0x7CF420")]
	public float minMultiplier;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float roundToNearest;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF458", Offset = "0x7CF458")]
	public TMP_Text textLabel;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isCountingDown;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float countdown;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float multiplierCountdownTime;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float maxMultiplier;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float storedRoundedMultiplier;

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xACC120", Offset = "0xACC120", VA = "0xACC120", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xACC2B0", Offset = "0xACC2B0", VA = "0xACC2B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xACC210", Offset = "0xACC210", VA = "0xACC210")]
	private void updateMultiplierDisplay()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xACC390", Offset = "0xACC390", VA = "0xACC390")]
	private float currentMutliplierRounded()
	{
		return default(float);
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xACC568", Offset = "0xACC568", VA = "0xACC568", Slot = "7")]
	public override void applyPowerupToPlayer(ShootyVRHandController activatingHand)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xACC610", Offset = "0xACC610", VA = "0xACC610", Slot = "4")]
	public override bool canActivate(ShootyVRHandController activatingHand)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xACC618", Offset = "0xACC618", VA = "0xACC618", Slot = "6")]
	public override void playActivationSound(Transform location)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xACC68C", Offset = "0xACC68C", VA = "0xACC68C")]
	public ScoreMultiplierPowerupCrate()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C3")]
public struct EngineSoundKeyLoop
{
	[Token(Token = "0x400040E")]
	private const string DefaultEngineLoopKey = "Game_EngineLoop_Middle";

	[Token(Token = "0x400040F")]
	private const string EngineLoopId = "Game_EngineLoop_{0}";

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform engineTransform;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string soundLoopKey;

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x86B268", Offset = "0x86B268", VA = "0x86B268")]
	public void start(int index)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x86B270", Offset = "0x86B270", VA = "0x86B270")]
	public void updateEnginePitch(int index, float pitchShift)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x86B278", Offset = "0x86B278", VA = "0x86B278")]
	public void stop(int index)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x86B280", Offset = "0x86B280", VA = "0x86B280")]
	private string theLoopId(int index)
	{
		return null;
	}
}
[Token(Token = "0x20000C4")]
public class Ship : MonoBehaviour
{
	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF490", Offset = "0x7CF490")]
	public List<EngineSoundKeyLoop> engineSounds;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF4C8", Offset = "0x7CF4C8")]
	public Material defaultMaterial;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ParticleSystem> trailOwners;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF500", Offset = "0x7CF500")]
	public GunFiringSetup gunFiringSetup;

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xB5EDC0", Offset = "0xB5EDC0", VA = "0xB5EDC0")]
	public void setTrailsActiveState(bool isActive)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xB5EE68", Offset = "0xB5EE68", VA = "0xB5EE68")]
	public void startEngines()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xB5EF18", Offset = "0xB5EF18", VA = "0xB5EF18")]
	public void updateEnginePitch(float pitchShift)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xB5EFD8", Offset = "0xB5EFD8", VA = "0xB5EFD8")]
	public void stopEngines()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xB5F088", Offset = "0xB5F088", VA = "0xB5F088")]
	public GunFiringEffects[] getGunsForLevel(int gunLevel)
	{
		return null;
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xB5F134", Offset = "0xB5F134", VA = "0xB5F134")]
	public Ship()
	{
	}
}
[Token(Token = "0x20000C5")]
public class SpaceBattleCarouselController : SingletonMono<SpaceBattleCarouselController>
{
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDB90", Offset = "0x7CDB90")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpaceBattleCarouselController <>4__this;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 start;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 end;

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xA0EDA8", Offset = "0xA0EDA8", VA = "0xA0EDA8")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xA0F1FC", Offset = "0xA0F1FC", VA = "0xA0F1FC")]
		internal void <moveToEndPosition>b__0()
		{
		}
	}

	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDBA0", Offset = "0x7CDBA0")]
	private sealed class <>c__DisplayClass24_1
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CopilotPowerupCrate copilotCrate;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass24_0 CS$<>8__locals1;

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xA0F3C8", Offset = "0xA0F3C8", VA = "0xA0F3C8")]
		public <>c__DisplayClass24_1()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xA0F3D0", Offset = "0xA0F3D0", VA = "0xA0F3D0")]
		internal void <moveToEndPosition>b__1(float alpha)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xA0F4B0", Offset = "0xA0F4B0", VA = "0xA0F4B0")]
		internal void <moveToEndPosition>b__2()
		{
		}
	}

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string CopilotObjectKey;

	[Token(Token = "0x4000417")]
	private const int SpawnCount = 20;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF538", Offset = "0x7CF538")]
	private List<CopilotPowerupCrate> <spawnedCopilotPickups>k__BackingField;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF548", Offset = "0x7CF548")]
	public bool useUnlockedPilotCount;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF580", Offset = "0x7CF580")]
	public float pilotSpacing;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yOffset;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float baseZOffet;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float zOffset;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float baseXOffset;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> spawnPositionKeys;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF5B8", Offset = "0x7CF5B8")]
	public float appearYOffset;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float appearZOffset;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF5F0", Offset = "0x7CF5F0")]
	public float durationForAllSpawnIns;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float timeToFlyIn;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve flyInCurve;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minSecondsBetweenPilotDrop;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxSecondsBetweenPilotDrop;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF628", Offset = "0x7CF628")]
	public float timeToFlyToEnding;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float nextPilotDropTime;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isDroppingPilots;

	[Token(Token = "0x1700001E")]
	public List<CopilotPowerupCrate> spawnedCopilotPickups
	{
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xA0E858", Offset = "0xA0E858", VA = "0xA0E858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6CA0", Offset = "0x7D6CA0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xA0E860", Offset = "0xA0E860", VA = "0xA0E860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6CB0", Offset = "0x7D6CB0")]
		private set
		{
		}
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xA0E868", Offset = "0xA0E868", VA = "0xA0E868")]
	public void activateCarousel()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xA0EC44", Offset = "0xA0EC44", VA = "0xA0EC44")]
	private void moveToEndPosition(Vector3 endPosition, int index, int spawnCount)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xA0EDB0", Offset = "0xA0EDB0", VA = "0xA0EDB0")]
	public void beginFiringFakeGuns()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xA0EE48", Offset = "0xA0EE48", VA = "0xA0EE48")]
	public void startDropLoop()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xA0EE80", Offset = "0xA0EE80", VA = "0xA0EE80")]
	public void stopLootDrop()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xA0EF38", Offset = "0xA0EF38", VA = "0xA0EF38")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xA0F014", Offset = "0xA0F014", VA = "0xA0F014")]
	public void headBossEnding(Vector3 bossPosition, EnemyBossHeadDeathAnimation deathAnimation)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xA0EAF0", Offset = "0xA0EAF0", VA = "0xA0EAF0")]
	public void cleanup()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xA0F00C", Offset = "0xA0F00C", VA = "0xA0F00C")]
	private void stopDropLoop()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xA0EBA0", Offset = "0xA0EBA0", VA = "0xA0EBA0")]
	private Vector3 positionFromSpawnPoint(string key)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xA0F100", Offset = "0xA0F100", VA = "0xA0F100")]
	public SpaceBattleCarouselController()
	{
	}
}
[Token(Token = "0x20000C6")]
public enum ShipUpgradeType
{
	[Token(Token = "0x400042B")]
	none,
	[Token(Token = "0x400042C")]
	gun,
	[Token(Token = "0x400042D")]
	chargeAttack
}
[Token(Token = "0x20000C7")]
public class UpgradeController
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int baseGunLevel;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int baseChargeAttackLevel;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UpgradeController sharedInstance;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<string, ShipUpgradeType> ShipUpgradeTypeMap;

	[Token(Token = "0x1700001F")]
	public static UpgradeController instance
	{
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x13C65B4", Offset = "0x13C65B4", VA = "0x13C65B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x13C6688", Offset = "0x13C6688", VA = "0x13C6688")]
	public void resetPlayerToBase()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x13C6738", Offset = "0x13C6738", VA = "0x13C6738")]
	public static void awardPowerup(ShipUpgradeType powerupType, int increment = 1)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x13C68C8", Offset = "0x13C68C8", VA = "0x13C68C8")]
	public static void awardPowerupChargeAttackLevel(int increment)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x13C67FC", Offset = "0x13C67FC", VA = "0x13C67FC")]
	public static void awardPowerupGunLevel(int increment)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x13C6980", Offset = "0x13C6980", VA = "0x13C6980")]
	public static bool isMaxGunLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x13C6A3C", Offset = "0x13C6A3C", VA = "0x13C6A3C")]
	public static ShipUpgradeType upgradeDrop()
	{
		return default(ShipUpgradeType);
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x13C6AEC", Offset = "0x13C6AEC", VA = "0x13C6AEC")]
	public static ShipUpgradeType fastParseShipUpgrade(string raw, ShipUpgradeType defaultType)
	{
		return default(ShipUpgradeType);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x13C6680", Offset = "0x13C6680", VA = "0x13C6680")]
	public UpgradeController()
	{
	}
}
[Token(Token = "0x20000C8")]
public class ContentUnlockingAnimation : MonoBehaviour
{
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDBB0", Offset = "0x7CDBB0")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ContentUnlockingAnimation <>4__this;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldConfig config;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__2;

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x9FC974", Offset = "0x9FC974", VA = "0x9FC974")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x9FD324", Offset = "0x9FD324", VA = "0x9FD324")]
		internal void <unlockWorldAnimation>b__0(float alpha)
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x9FD3D4", Offset = "0x9FD3D4", VA = "0x9FD3D4")]
		internal void <unlockWorldAnimation>b__1()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x9FD570", Offset = "0x9FD570", VA = "0x9FD570")]
		internal void <unlockWorldAnimation>b__2()
		{
		}
	}

	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDBC0", Offset = "0x7CDBC0")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ContentUnlockingAnimation <>4__this;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldConfig config;

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x9FCB84", Offset = "0x9FCB84", VA = "0x9FCB84")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x9FD590", Offset = "0x9FD590", VA = "0x9FD590")]
		internal void <animateNubbinToTarget>b__0(float alpha)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x9FD6B8", Offset = "0x9FD6B8", VA = "0x9FD6B8")]
		internal void <animateNubbinToTarget>b__1()
		{
		}
	}

	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDBD0", Offset = "0x7CDBD0")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ContentUnlockingAnimation <>4__this;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PilotConfig config;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__2;

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x9FCB8C", Offset = "0x9FCB8C", VA = "0x9FCB8C")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x9FD9D4", Offset = "0x9FD9D4", VA = "0x9FD9D4")]
		internal void <unlockPilotAnimation>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x9FDA98", Offset = "0x9FDA98", VA = "0x9FDA98")]
		internal void <unlockPilotAnimation>b__1()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x9FDBFC", Offset = "0x9FDBFC", VA = "0x9FDBFC")]
		internal void <unlockPilotAnimation>b__2()
		{
		}
	}

	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDBE0", Offset = "0x7CDBE0")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ContentUnlockingAnimation <>4__this;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PilotConfig config;

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x9FCCD8", Offset = "0x9FCCD8", VA = "0x9FCCD8")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x9FDC1C", Offset = "0x9FDC1C", VA = "0x9FDC1C")]
		internal void <animatePilotToTarget>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x9FDD30", Offset = "0x9FDD30", VA = "0x9FDD30")]
		internal void <animatePilotToTarget>b__1()
		{
		}
	}

	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDBF0", Offset = "0x7CDBF0")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ContentUnlockingAnimation <>4__this;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameMode mode;

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x9FCCE0", Offset = "0x9FCCE0", VA = "0x9FCCE0")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x9FE078", Offset = "0x9FE078", VA = "0x9FE078")]
		internal void <unlockGameModeAnimation>b__0()
		{
		}
	}

	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDC00", Offset = "0x7CDC00")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ContentUnlockingAnimation <>4__this;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameMode mode;

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x9FCDFC", Offset = "0x9FCDFC", VA = "0x9FCDFC")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x9FE098", Offset = "0x9FE098", VA = "0x9FE098")]
		internal void <animatedGameModeToTarget>b__0(float alpha)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x9FE180", Offset = "0x9FE180", VA = "0x9FE180")]
		internal void <animatedGameModeToTarget>b__1()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDC10", Offset = "0x7CDC10")]
	private sealed class <>c
	{
		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__37_2;

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x9FD2CC", Offset = "0x9FD2CC", VA = "0x9FD2CC")]
		public <>c()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x9FD2D4", Offset = "0x9FD2D4", VA = "0x9FD2D4")]
		internal void <animatedGameModeToTarget>b__37_2()
		{
		}
	}

	[Token(Token = "0x4000432")]
	private const float DelayBeforeCheckAgain = 1f;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF660", Offset = "0x7CF660")]
	public WorldLoadButtonMenu worldLoadButtonMenu;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF698", Offset = "0x7CF698")]
	public GameObject worldUnlockParent;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshFilter nubbin;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF6D0", Offset = "0x7CF6D0")]
	public GameObject pilotUnlockParent;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerGeo pilotGeo;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem unlockVFX;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem unlockMenuVFX;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF708", Offset = "0x7CF708")]
	public float textMessageTime;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject textUnlockParent;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform textMover;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF740", Offset = "0x7CF740")]
	public Transform worldUnlockTarget;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform modeUnlockTarget;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform pilotUnlockTarget;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ParticleSystem moveTrail;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float unlockPopTime;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float moveTime;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float messageTime;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 nubbinStartPosition;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Quaternion nubbinStartRotation;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 pilotStartPosition;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Quaternion pilotStartRotation;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 textStartPosition;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 moveToTargetPos;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool bootstrapped;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF778", Offset = "0x7CF778")]
	private bool <isRunningAnimation>k__BackingField;

	[Token(Token = "0x17000020")]
	public bool isRunningAnimation
	{
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x9FB624", Offset = "0x9FB624", VA = "0x9FB624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6CC0", Offset = "0x7D6CC0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x9FB62C", Offset = "0x9FB62C", VA = "0x9FB62C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6CD0", Offset = "0x7D6CD0")]
		private set
		{
		}
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x9FB638", Offset = "0x9FB638", VA = "0x9FB638")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x9FB828", Offset = "0x9FB828", VA = "0x9FB828")]
	public void nextUnlock()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x9FC2A0", Offset = "0x9FC2A0", VA = "0x9FC2A0")]
	private void unlockWorldAnimation(WorldConfig config)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x9FCA40", Offset = "0x9FCA40", VA = "0x9FCA40")]
	private void animateNubbinToTarget(WorldConfig config)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x9FBE30", Offset = "0x9FBE30", VA = "0x9FBE30")]
	private void unlockPilotAnimation(PilotConfig config)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x9FCB94", Offset = "0x9FCB94", VA = "0x9FCB94")]
	private void animatePilotToTarget(PilotConfig config)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x9FC720", Offset = "0x9FC720", VA = "0x9FC720")]
	private void unlockGameModeAnimation(GameMode mode)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x9FCCE8", Offset = "0x9FCCE8", VA = "0x9FCCE8")]
	private void animatedGameModeToTarget(GameMode mode)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x9FCE04", Offset = "0x9FCE04", VA = "0x9FCE04")]
	private void setMoveTrail(Transform parent, bool active)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x9FCF54", Offset = "0x9FCF54", VA = "0x9FCF54")]
	private void setMenuUnlockVFX(Vector3 pos)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x9FC97C", Offset = "0x9FC97C", VA = "0x9FC97C")]
	private void updateUnlockVFXPlayState(bool isPlaying)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x9FCFD4", Offset = "0x9FCFD4", VA = "0x9FCFD4")]
	private void unlockingCompleteStep()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x9FD094", Offset = "0x9FD094", VA = "0x9FD094")]
	private void showPilotWorldUnlockMessage(Transform targetTransform, string localisedItemName)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x9FB63C", Offset = "0x9FB63C", VA = "0x9FB63C")]
	private void reset()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x9FD24C", Offset = "0x9FD24C", VA = "0x9FD24C")]
	private bool isUnlockAnimationBlocking()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x9FD1BC", Offset = "0x9FD1BC", VA = "0x9FD1BC")]
	private string getItemUnlockedString(string localisedItemName)
	{
		return null;
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x9FD254", Offset = "0x9FD254", VA = "0x9FD254")]
	public ContentUnlockingAnimation()
	{
	}
}
[Token(Token = "0x20000C9")]
public class ContentUnlockingController : SingletonMono<ContentUnlockingController>
{
	[Serializable]
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDC20", Offset = "0x7CDC20")]
	private sealed class <>c
	{
		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<string> <>9__11_0;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<string> <>9__16_0;

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x9FEF2C", Offset = "0x9FEF2C", VA = "0x9FEF2C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x9FEF34", Offset = "0x9FEF34", VA = "0x9FEF34")]
		internal bool <hasWorldUnlocksToAward>b__11_0(string worldId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x9FEFC0", Offset = "0x9FEFC0", VA = "0x9FEFC0")]
		internal bool <hasPilotUnlocksToAward>b__16_0(string pilotId)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameStateList stateList;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> worldsToUnlock;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> pilotsToUnlock;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> gameModesToUnlock;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool bootstrapped;

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x9FE53C", Offset = "0x9FE53C", VA = "0x9FE53C")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x9FE570", Offset = "0x9FE570", VA = "0x9FE570")]
	private void loadState()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x9FE8C0", Offset = "0x9FE8C0", VA = "0x9FE8C0")]
	private void saveState()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x9FE9A4", Offset = "0x9FE9A4", VA = "0x9FE9A4")]
	public bool hasContentToUnlock()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x9FE9E8", Offset = "0x9FE9E8", VA = "0x9FE9E8")]
	public string getRewardCalloutLabel(bool hasPilotFromMission)
	{
		return null;
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x9FEB0C", Offset = "0x9FEB0C", VA = "0x9FEB0C")]
	public void addWorldToUnlock(string worldId)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x9FC0DC", Offset = "0x9FC0DC", VA = "0x9FC0DC")]
	public bool hasWorldUnlocksToAward()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x9FC1FC", Offset = "0x9FC1FC", VA = "0x9FC1FC")]
	public WorldConfig nextWorldUnlock()
	{
		return null;
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x9FD8A8", Offset = "0x9FD8A8", VA = "0x9FD8A8")]
	public void unlockWorld(string worldId)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x9FEC24", Offset = "0x9FEC24", VA = "0x9FEC24")]
	public void addPilotToUnlock(string pilotId)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x9FBC04", Offset = "0x9FBC04", VA = "0x9FBC04")]
	public bool hasPilotUnlocksToAwardInWorld(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x9FC478", Offset = "0x9FC478", VA = "0x9FC478")]
	public bool hasPilotUnlocksToAward()
	{
		return default(bool);
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x9FC598", Offset = "0x9FC598", VA = "0x9FC598")]
	public PilotConfig nextPilotToUnlock()
	{
		return null;
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x9FBD20", Offset = "0x9FBD20", VA = "0x9FBD20")]
	public PilotConfig nextPilotToUnlockInWorld(string worldId)
	{
		return null;
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x9FDF4C", Offset = "0x9FDF4C", VA = "0x9FDF4C")]
	public void unlockPilot(string pilotId)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x9FED3C", Offset = "0x9FED3C", VA = "0x9FED3C")]
	public void addGameModeToUnlock(GameMode mode)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x9FC638", Offset = "0x9FC638", VA = "0x9FC638")]
	public bool hasGameModeUnlocksToAward()
	{
		return default(bool);
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x9FC690", Offset = "0x9FC690", VA = "0x9FC690")]
	public GameMode nextGameModeToUnlock()
	{
		return default(GameMode);
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x9FE354", Offset = "0x9FE354", VA = "0x9FE354")]
	public void unlockGameMode(GameMode mode)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x9FEE54", Offset = "0x9FEE54", VA = "0x9FEE54")]
	public ContentUnlockingController()
	{
	}
}
[Token(Token = "0x20000CA")]
public sealed class ContentUnlockingControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ContentUnlockingController contentUnlocking;

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x9FF04C", Offset = "0x9FF04C", VA = "0x9FF04C", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x9FF144", Offset = "0x9FF144", VA = "0x9FF144")]
	public ContentUnlockingControllerBooter()
	{
	}
}
[Token(Token = "0x20000CB")]
public class ABTestController : BootableMonoBehaviour
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameStateList stateList;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> previousTests;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> newTests;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xB6E724", Offset = "0xB6E724", VA = "0xB6E724", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xB6E934", Offset = "0xB6E934", VA = "0xB6E934")]
	private void saveState()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xB6EA40", Offset = "0xB6EA40", VA = "0xB6EA40")]
	private void joinTest(Command theCommand)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xB6EAC0", Offset = "0xB6EAC0", VA = "0xB6EAC0")]
	private void processTests()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xB6EB3C", Offset = "0xB6EB3C", VA = "0xB6EB3C")]
	public ABTestController()
	{
	}
}
[Token(Token = "0x20000CC")]
public interface IPauseable
{
	[Token(Token = "0x6000512")]
	void prepareForPause();

	[Token(Token = "0x6000513")]
	void appDidReturnFromPause();
}
[Token(Token = "0x20000CD")]
public sealed class ApplicationPauseController : SingletonMono<ApplicationPauseController>
{
	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IPauseable> thingsToPause;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool appDidBoot;

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xB6F074", Offset = "0xB6F074", VA = "0xB6F074")]
	public static void registerForPauses(IPauseable itemToPause)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xB74528", Offset = "0xB74528", VA = "0xB74528")]
	public static void deregisterForPauses(IPauseable itemToPause)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xB745B8", Offset = "0xB745B8", VA = "0xB745B8")]
	public void appDidCompleteBooting()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xB7475C", Offset = "0xB7475C", VA = "0xB7475C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xB74928", Offset = "0xB74928", VA = "0xB74928", Slot = "6")]
	protected override void ApplicationQuitting()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xB74774", Offset = "0xB74774", VA = "0xB74774")]
	public void prepareToGoAway()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xB745C4", Offset = "0xB745C4", VA = "0xB745C4")]
	public void refreshFromAway()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xB74994", Offset = "0xB74994", VA = "0xB74994")]
	public ApplicationPauseController()
	{
	}
}
[Token(Token = "0x20000CE")]
public sealed class BigScreenshot : MonoBehaviour
{
	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDC30", Offset = "0x7CDC30")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int oldAA;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BigScreenshot <>4__this;

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x9F0028", Offset = "0x9F0028", VA = "0x9F0028")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x9F0184", Offset = "0x9F0184", VA = "0x9F0184")]
		internal void <Update>b__0()
		{
		}
	}

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int rezMultiplier;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int aa;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int take;

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x9EF964", Offset = "0x9EF964", VA = "0x9EF964")]
	private void Update()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x9EFAF8", Offset = "0x9EFAF8", VA = "0x9EFAF8")]
	private void TakeScreenshot()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x9F0030", Offset = "0x9F0030", VA = "0x9F0030")]
	private void ToggleUI(float canvasAlpha)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x9F0170", Offset = "0x9F0170", VA = "0x9F0170")]
	public BigScreenshot()
	{
	}
}
[Token(Token = "0x20000CF")]
public sealed class BootSceneLoader : MonoBehaviour
{
	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> scenesToBoot;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> scenesWaitingToBeBooted;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BuildTimePrefabulator buildTimePrefab;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string defaultActiveScene;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool loadAllScenesAtOnce;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool bootstrapped;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int loadTimeLogLevel;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Stopwatch loadTimeStopwatch;

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x9F1500", Offset = "0x9F1500", VA = "0x9F1500")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x9F15B0", Offset = "0x9F15B0", VA = "0x9F15B0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x9F15F4", Offset = "0x9F15F4", VA = "0x9F15F4")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x9F1714", Offset = "0x9F1714", VA = "0x9F1714")]
	public bool shouldLoadScene(Scene theScene)
	{
		return default(bool);
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x9F1794", Offset = "0x9F1794", VA = "0x9F1794")]
	private void startBootLoad()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x9F19E4", Offset = "0x9F19E4", VA = "0x9F19E4")]
	private void sceneDidLoad(Scene scene, LoadSceneMode sceneMode)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x9F191C", Offset = "0x9F191C", VA = "0x9F191C")]
	private void bootScene(string theSceneName)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x9F1FC0", Offset = "0x9F1FC0", VA = "0x9F1FC0")]
	private bool sceneIsAlreadyLoaded(string theSceneName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x9F1F14", Offset = "0x9F1F14", VA = "0x9F1F14")]
	private void startLoadTimeStopwatch()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x9F1C48", Offset = "0x9F1C48", VA = "0x9F1C48")]
	private void stopLoadTimeStopwatch(string stage)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x9F20D0", Offset = "0x9F20D0", VA = "0x9F20D0")]
	public BootSceneLoader()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x9F2180", Offset = "0x9F2180", VA = "0x9F2180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6CE0", Offset = "0x7D6CE0")]
	private void <sceneDidLoad>b__13_0()
	{
	}
}
[Token(Token = "0x20000D0")]
public class BootUI : MonoBehaviour
{
	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera bootCam;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bootObject;

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x9F21FC", Offset = "0x9F21FC", VA = "0x9F21FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x9F2240", Offset = "0x9F2240", VA = "0x9F2240")]
	private void bootDidComplete()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x9F22E8", Offset = "0x9F22E8", VA = "0x9F22E8")]
	public static void bootComplete()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x9F2380", Offset = "0x9F2380", VA = "0x9F2380")]
	public BootUI()
	{
	}
}
[Token(Token = "0x20000D1")]
public sealed class BuildTimePrefabulator : BootableMonoBehaviour
{
	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BuildTimeConfig buildTimeConfigPrefab;

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x9F33F0", Offset = "0x9F33F0", VA = "0x9F33F0", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x9F3D1C", Offset = "0x9F3D1C", VA = "0x9F3D1C")]
	public BuildTimePrefabulator()
	{
	}
}
[Token(Token = "0x20000D2")]
public sealed class RedeemItem
{
	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string itemID;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string itemType;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string itemCount;

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xAC2928", Offset = "0xAC2928", VA = "0xAC2928")]
	public RedeemItem(string id, string type, string count)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xAC29F4", Offset = "0xAC29F4", VA = "0xAC29F4")]
	public string getRewardString()
	{
		return null;
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xAC2A4C", Offset = "0xAC2A4C", VA = "0xAC2A4C")]
	public bool isValidReward()
	{
		return default(bool);
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xAC2A94", Offset = "0xAC2A94", VA = "0xAC2A94")]
	public static bool IsValidRedeemType(string itemType)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000D3")]
public enum SupportCodeStatus
{
	[Token(Token = "0x400046A")]
	unknown,
	[Token(Token = "0x400046B")]
	failed,
	[Token(Token = "0x400046C")]
	success,
	[Token(Token = "0x400046D")]
	alreadyClaimed,
	[Token(Token = "0x400046E")]
	noCode
}
[Token(Token = "0x20000D4")]
public sealed class CodeRedeemController : MonoBehaviour
{
	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDC40", Offset = "0x7CDC40")]
	private sealed class <waitForResponse>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityWebRequest www;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<UnityWebRequest> onFailure;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<UnityWebRequest> onSuccess;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0x9F9CF4", Offset = "0x9F9CF4", VA = "0x9F9CF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0x9F9D5C", Offset = "0x9F9D5C", VA = "0x9F9D5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x9F9A84", Offset = "0x9F9A84", VA = "0x9F9A84")]
		[DebuggerHidden]
		public <waitForResponse>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x9F9B94", Offset = "0x9F9B94", VA = "0x9F9B94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x9F9B98", Offset = "0x9F9B98", VA = "0x9F9B98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x9F9CFC", Offset = "0x9F9CFC", VA = "0x9F9CFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string gameName;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string customerSupportURL;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string lastCode;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool firstTry;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action<SupportCodeStatus> completionAction;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameStateList stateList;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<string> codesAlreadyRedeemed;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool didBoot;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string codeWhatWeAreCurrentlyRedeeming;

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x9F884C", Offset = "0x9F884C", VA = "0x9F884C")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x9F8968", Offset = "0x9F8968", VA = "0x9F8968")]
	private void saveState()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x9F8A74", Offset = "0x9F8A74", VA = "0x9F8A74")]
	private void addCurrentCodeToRedeemedList()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x9F8AEC", Offset = "0x9F8AEC", VA = "0x9F8AEC")]
	private bool hasAlreadyRedeemed(string theCode)
	{
		return default(bool);
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x9F8B54", Offset = "0x9F8B54", VA = "0x9F8B54")]
	public void redeemCustomerSupportCode(string theCode, Action<SupportCodeStatus> complete)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x9F8BB4", Offset = "0x9F8BB4", VA = "0x9F8BB4")]
	private void tryRedeemCode(string theCode)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x9F8FF0", Offset = "0x9F8FF0", VA = "0x9F8FF0")]
	private void handleServerResponse(UnityWebRequest theWWW)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x9F8ED0", Offset = "0x9F8ED0", VA = "0x9F8ED0")]
	private void tryExecuteCompletionAction(SupportCodeStatus code)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x9F9820", Offset = "0x9F9820", VA = "0x9F9820")]
	private void redeemAll(int currency, List<RedeemItem> items)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x9F99E4", Offset = "0x9F99E4", VA = "0x9F99E4")]
	private void handleServerError(UnityWebRequest theWWW)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x9F8F44", Offset = "0x9F8F44", VA = "0x9F8F44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D6CF0", Offset = "0x7D6CF0")]
	private IEnumerator waitForResponse(UnityWebRequest www, Action<UnityWebRequest> onSuccess, Action<UnityWebRequest> onFailure)
	{
		return null;
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x9F9AB0", Offset = "0x9F9AB0", VA = "0x9F9AB0")]
	public CodeRedeemController()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x9F9B7C", Offset = "0x9F9B7C", VA = "0x9F9B7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6D54", Offset = "0x7D6D54")]
	private void <tryRedeemCode>b__14_0()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x9F9B84", Offset = "0x9F9B84", VA = "0x9F9B84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6D64", Offset = "0x7D6D64")]
	private void <handleServerResponse>b__15_0()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x9F9B8C", Offset = "0x9F9B8C", VA = "0x9F9B8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6D74", Offset = "0x7D6D74")]
	private void <handleServerResponse>b__15_1()
	{
	}
}
[Token(Token = "0x20000D5")]
public sealed class DeepLinkController : SingletonMono<DeepLinkController>
{
	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool testInEditor;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string testCode;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string deepLinkPanel;

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xA0561C", Offset = "0xA0561C", VA = "0xA0561C")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xA05918", Offset = "0xA05918", VA = "0xA05918")]
	public string getNextPanelDestination(string fallBack = "UIPanels/GameHubPanel")
	{
		return null;
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xA05950", Offset = "0xA05950", VA = "0xA05950")]
	private bool hasDeepLinkDestination()
	{
		return default(bool);
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xA05974", Offset = "0xA05974", VA = "0xA05974")]
	public DeepLinkController()
	{
	}
}
[Token(Token = "0x20000D6")]
public sealed class DeepLinkControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DeepLinkController deepLinkController;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xA059E4", Offset = "0xA059E4", VA = "0xA059E4", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xA05AC8", Offset = "0xA05AC8", VA = "0xA05AC8")]
	public DeepLinkControllerBooter()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D7")]
public struct KeyWithWeighting
{
	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string key;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int weighting;
}
[Serializable]
[Token(Token = "0x20000D8")]
public struct EnemyClassWeighting
{
	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public EnemyClass enemyClass;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int weighting;
}
[Token(Token = "0x20000D9")]
public class EndlessStaticEnemyMode : MonoBehaviour
{
	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF788", Offset = "0x7CF788")]
	public int maxNumberOfEnemies;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int minTickBetweenSpawns;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxTicksBetweenSpawns;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve tickCurve;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int tickCountdown;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF7C0", Offset = "0x7CF7C0")]
	public EnemyClassWeighting[] enemyClassWeighting;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, EnemyClassWeighting> classWeightMappings;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF7F8", Offset = "0x7CF7F8")]
	public float timeToIncreaseDifficulty;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float startSpawnDivider;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float endSpawnDivider;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LootDropTable enemySpawnTable;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float ticksDivider;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine difficultyRampRoutine;

	[Token(Token = "0x400048D")]
	private const int MaxLoopsForPositionAttempts = 30;

	[Token(Token = "0x400048E")]
	private const float TooCloseDistance = 2f;

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xA28250", Offset = "0xA28250", VA = "0xA28250")]
	public void resetMode()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xA28294", Offset = "0xA28294", VA = "0xA28294")]
	public void cleanup()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xA282D0", Offset = "0xA282D0", VA = "0xA282D0")]
	public void reset(int activeEnemyCount)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xA283A4", Offset = "0xA283A4", VA = "0xA283A4")]
	public bool tick(int activeEnemyCount)
	{
		return default(bool);
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xA284A4", Offset = "0xA284A4", VA = "0xA284A4")]
	public void spawnRandomEnemyAtRandomPosition(bool weightedSpawning)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xA28770", Offset = "0xA28770", VA = "0xA28770")]
	public EnemyController spawnEnemyAtRandomPosition(EnemyClass enemyClass)
	{
		return null;
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xA289C0", Offset = "0xA289C0", VA = "0xA289C0")]
	private bool isNearEnemies(Vector3 position, List<EnemyController> activeEnemies)
	{
		return default(bool);
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xA284D0", Offset = "0xA284D0", VA = "0xA284D0")]
	private EnemyClass getEnemyClass(bool weightedSpawning)
	{
		return default(EnemyClass);
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xA291B4", Offset = "0xA291B4", VA = "0xA291B4")]
	public EndlessStaticEnemyMode()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xA291EC", Offset = "0xA291EC", VA = "0xA291EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6D84", Offset = "0x7D6D84")]
	private void <tick>b__18_0(float progress)
	{
	}
}
[Token(Token = "0x20000DA")]
public sealed class DeviceInfo
{
	[Token(Token = "0x2000304")]
	public enum QualityLevel
	{
		[Token(Token = "0x400126B")]
		Low,
		[Token(Token = "0x400126C")]
		Medium,
		[Token(Token = "0x400126D")]
		High
	}

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private QualityLevel quality;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public QualityLevel debugQualityLevelOverride;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DeviceInfo sharedInstance;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool allUnknownIphonesAreXType;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isOculus;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isIOS;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isGooglePlay;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool isAmazon;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isAppleTV;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool isKindle2ndGen;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool isWeakDevice;

	[Token(Token = "0x17000021")]
	public static DeviceInfo sharedDeviceInfo
	{
		[Token(Token = "0x6000555")]
		[Address(RVA = "0xA060D8", Offset = "0xA060D8", VA = "0xA060D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public static QualityLevel deviceQuality
	{
		[Token(Token = "0x6000556")]
		[Address(RVA = "0xA06248", Offset = "0xA06248", VA = "0xA06248")]
		get
		{
			return default(QualityLevel);
		}
	}

	[Token(Token = "0x17000023")]
	public static float SafeScreenInsetLeft
	{
		[Token(Token = "0x6000562")]
		[Address(RVA = "0xA06A88", Offset = "0xA06A88", VA = "0xA06A88")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000024")]
	public static float SafeScreenInsetRight
	{
		[Token(Token = "0x6000563")]
		[Address(RVA = "0xA06A90", Offset = "0xA06A90", VA = "0xA06A90")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000025")]
	public static float SafeScreenInsetTop
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0xA06A98", Offset = "0xA06A98", VA = "0xA06A98")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000026")]
	public static float SafeScreenInsetBottom
	{
		[Token(Token = "0x6000565")]
		[Address(RVA = "0xA06AA0", Offset = "0xA06AA0", VA = "0xA06AA0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000027")]
	public static float SafeScreenWidth
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0xA06AA8", Offset = "0xA06AA8", VA = "0xA06AA8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000028")]
	public static float SafeScreenHeight
	{
		[Token(Token = "0x6000567")]
		[Address(RVA = "0xA06AC4", Offset = "0xA06AC4", VA = "0xA06AC4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xA062B4", Offset = "0xA062B4", VA = "0xA062B4")]
	public static bool isTouchDevice()
	{
		return default(bool);
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xA062E0", Offset = "0xA062E0", VA = "0xA062E0")]
	public static bool isTVDevice()
	{
		return default(bool);
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xA067BC", Offset = "0xA067BC", VA = "0xA067BC")]
	public static bool isEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xA0639C", Offset = "0xA0639C", VA = "0xA0639C")]
	public static bool isFireTV()
	{
		return default(bool);
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xA067C4", Offset = "0xA067C4", VA = "0xA067C4")]
	public static bool isSteamPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xA01814", Offset = "0xA01814", VA = "0xA01814")]
	public static bool isOculusPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xA067CC", Offset = "0xA067CC", VA = "0xA067CC")]
	public static bool isOculusQuest()
	{
		return default(bool);
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xA06868", Offset = "0xA06868", VA = "0xA06868")]
	public static bool isOculusDelMar()
	{
		return default(bool);
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xA06904", Offset = "0xA06904", VA = "0xA06904")]
	public static bool isKindle2ndGenCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xA069DC", Offset = "0xA069DC", VA = "0xA069DC")]
	public static bool isWeakDeviceCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xA06A80", Offset = "0xA06A80", VA = "0xA06A80")]
	public static bool isIPhoneX()
	{
		return default(bool);
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xA06AE0", Offset = "0xA06AE0", VA = "0xA06AE0")]
	public static bool gamepadIsPresent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xA06B0C", Offset = "0xA06B0C", VA = "0xA06B0C")]
	public static bool isLowQualityAndroid()
	{
		return default(bool);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xA06BD8", Offset = "0xA06BD8", VA = "0xA06BD8")]
	public static bool isIPad()
	{
		return default(bool);
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xA063F8", Offset = "0xA063F8", VA = "0xA063F8")]
	public static bool isAndroidTV()
	{
		return default(bool);
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xA061A0", Offset = "0xA061A0", VA = "0xA061A0")]
	private DeviceInfo()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xA06ED0", Offset = "0xA06ED0", VA = "0xA06ED0")]
	private void setupPlatform()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xA06BE0", Offset = "0xA06BE0", VA = "0xA06BE0")]
	private QualityLevel getQualityLevel(string graphicsName)
	{
		return default(QualityLevel);
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xA07148", Offset = "0xA07148", VA = "0xA07148")]
	private string onlyDigits(string source)
	{
		return null;
	}
}
[Token(Token = "0x20000DB")]
public class DisableOnPlatform : MonoBehaviour
{
	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF830", Offset = "0x7CF830")]
	public bool isDisabledOnAnyOculusPlatform;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF868", Offset = "0x7CF868")]
	public bool isDisabledOnQuest;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF8A0", Offset = "0x7CF8A0")]
	public bool isDisabledOnRift;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool isDisabledOnSteam;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF8D8", Offset = "0x7CF8D8")]
	public bool isDisabledInEditor;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xA21670", Offset = "0xA21670", VA = "0xA21670")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xA21820", Offset = "0xA21820", VA = "0xA21820")]
	public DisableOnPlatform()
	{
	}
}
[Token(Token = "0x20000DC")]
public sealed class FontBooter : BootableMonoBehaviour, IPauseable
{
	[Serializable]
	[Token(Token = "0x2000305")]
	public sealed class CacheFont
	{
		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Font TheFont;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FontGlyphsToCache;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MinSizeToCache;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int MaxSizeToCache;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool AlsoCacheBoldStyle;

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x9DD100", Offset = "0x9DD100", VA = "0x9DD100")]
		public CacheFont()
		{
		}
	}

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CacheFont> FontsToCache;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x9DCD9C", Offset = "0x9DCD9C", VA = "0x9DCD9C", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x9DD078", Offset = "0x9DD078", VA = "0x9DD078", Slot = "6")]
	public void prepareForPause()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x9DD07C", Offset = "0x9DD07C", VA = "0x9DD07C", Slot = "7")]
	public void appDidReturnFromPause()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x9DCDDC", Offset = "0x9DCDDC", VA = "0x9DCDDC")]
	private void CacheFonts()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x9DD0F4", Offset = "0x9DD0F4", VA = "0x9DD0F4")]
	public FontBooter()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x9DD0FC", Offset = "0x9DD0FC", VA = "0x9DD0FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6D94", Offset = "0x7D6D94")]
	private void <appDidReturnFromPause>b__4_0()
	{
	}
}
[Token(Token = "0x20000DD")]
public sealed class GameFlowController : MonoBehaviour
{
	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool limitFPSInEditor;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool preloadGameplayPanel;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string startingPanel;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF910", Offset = "0x7CF910")]
	private static bool <hasBooted>k__BackingField;

	[Token(Token = "0x40004A4")]
	public const string firstPlaythroughKey = "sfg";

	[Token(Token = "0x17000029")]
	public static bool hasBooted
	{
		[Token(Token = "0x6000579")]
		[Address(RVA = "0x9DEAA0", Offset = "0x9DEAA0", VA = "0x9DEAA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6DA4", Offset = "0x7D6DA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600057A")]
		[Address(RVA = "0x9DEB08", Offset = "0x9DEB08", VA = "0x9DEB08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6DB4", Offset = "0x7D6DB4")]
		private set
		{
		}
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x9DEB78", Offset = "0x9DEB78", VA = "0x9DEB78")]
	public void preBoot()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x9DEDCC", Offset = "0x9DEDCC", VA = "0x9DEDCC")]
	public void gameStartAfterLoad()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x9DEE7C", Offset = "0x9DEE7C", VA = "0x9DEE7C")]
	private void finalBootStep()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x9DEFA0", Offset = "0x9DEFA0", VA = "0x9DEFA0")]
	private void loadMain()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x9DF11C", Offset = "0x9DF11C", VA = "0x9DF11C")]
	private void startGame()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x9DF1E4", Offset = "0x9DF1E4", VA = "0x9DF1E4")]
	private void startTutorial()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x9DF260", Offset = "0x9DF260", VA = "0x9DF260")]
	public GameFlowController()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x9DF2CC", Offset = "0x9DF2CC", VA = "0x9DF2CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6DC4", Offset = "0x7D6DC4")]
	private void <finalBootStep>b__10_0()
	{
	}
}
[Token(Token = "0x20000DE")]
public sealed class GameStateController : BootableMonoBehaviour
{
	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDC50", Offset = "0x7CDC50")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameStateController <>4__this;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action completion;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x9E1108", Offset = "0x9E1108", VA = "0x9E1108")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x9E30FC", Offset = "0x9E30FC", VA = "0x9E30FC")]
		internal void <bootstrap>b__0(bool success)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x9E3358", Offset = "0x9E3358", VA = "0x9E3358")]
		internal void <bootstrap>b__1()
		{
		}
	}

	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDC60", Offset = "0x7CDC60")]
	private sealed class <checkForStateChange>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateController <>4__this;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <delay>5__2;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0x9E3580", Offset = "0x9E3580", VA = "0x9E3580", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001784")]
			[Address(RVA = "0x9E35E8", Offset = "0x9E35E8", VA = "0x9E35E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x9E130C", Offset = "0x9E130C", VA = "0x9E130C")]
		[DebuggerHidden]
		public <checkForStateChange>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x9E3430", Offset = "0x9E3430", VA = "0x9E3430", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x9E3434", Offset = "0x9E3434", VA = "0x9E3434", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x9E3588", Offset = "0x9E3588", VA = "0x9E3588", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PersistentStorage stateHolder;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PersistentStorage cloudState;

	[Token(Token = "0x40004A7")]
	private const string dateTimeStringFormat = "yyyy/MM/dd HH:mm:ss";

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool gameIsPaused;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float gameSpeed;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float saveInterval;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameStateController sharedInstance;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameStateUnlocker unlocker;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool canShowCloudSaveChoice;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool cloudSaveChoiceNeedsToBeShown;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool cloudSwitchInProgress;

	[Token(Token = "0x1700002A")]
	public static GameStateController instance
	{
		[Token(Token = "0x6000584")]
		[Address(RVA = "0x9E0DB0", Offset = "0x9E0DB0", VA = "0x9E0DB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x9E0F34", Offset = "0x9E0F34", VA = "0x9E0F34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x9E1018", Offset = "0x9E1018", VA = "0x9E1018", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x9E1110", Offset = "0x9E1110", VA = "0x9E1110", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x9E11FC", Offset = "0x9E11FC", VA = "0x9E11FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x9E1210", Offset = "0x9E1210", VA = "0x9E1210")]
	private string generateCloudSaveID()
	{
		return null;
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x9E1290", Offset = "0x9E1290", VA = "0x9E1290")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D6DD4", Offset = "0x7D6DD4")]
	private IEnumerator checkForStateChange()
	{
		return null;
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x9E1338", Offset = "0x9E1338", VA = "0x9E1338")]
	public void cloudDidUpdate()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x9E1730", Offset = "0x9E1730", VA = "0x9E1730")]
	public string cloudLastSaveTime()
	{
		return null;
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x9E1828", Offset = "0x9E1828", VA = "0x9E1828")]
	public string localLastSaveTime()
	{
		return null;
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x9E1920", Offset = "0x9E1920", VA = "0x9E1920")]
	public string base64State()
	{
		return null;
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x9E1610", Offset = "0x9E1610", VA = "0x9E1610")]
	public void showCloudSaveChoicePanel()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x9E19D0", Offset = "0x9E19D0", VA = "0x9E19D0")]
	public static void save()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x9E1A3C", Offset = "0x9E1A3C", VA = "0x9E1A3C")]
	public void saveState(bool saveCloud = false)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x9E1C3C", Offset = "0x9E1C3C", VA = "0x9E1C3C")]
	public void switchToCloudSave()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x9E1A8C", Offset = "0x9E1A8C", VA = "0x9E1A8C")]
	private void saveStateToPlatformCloud()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x9E1E68", Offset = "0x9E1E68", VA = "0x9E1E68")]
	public void dumpState(string file)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x9E1E84", Offset = "0x9E1E84", VA = "0x9E1E84")]
	public List<string> allStateKeys()
	{
		return null;
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x9E1F04", Offset = "0x9E1F04", VA = "0x9E1F04")]
	public void deleteAll()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x9E1F20", Offset = "0x9E1F20", VA = "0x9E1F20")]
	public static DateTime playerDateTimeForKey(string theKey, DateTime defaultTime)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x9E2108", Offset = "0x9E2108", VA = "0x9E2108")]
	public static DateTime playerDateTimeForKey(string theKey)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x9E2344", Offset = "0x9E2344", VA = "0x9E2344")]
	public static void setPlayerDateTimeForKey(string theKey, DateTime theDate)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x9E24F0", Offset = "0x9E24F0", VA = "0x9E24F0")]
	public static double playerDoubleForKey(string theKey, double defaultDouble = 0.0)
	{
		return default(double);
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x9E259C", Offset = "0x9E259C", VA = "0x9E259C")]
	public static void setPlayerDoubleForKey(string theKey, double theDouble)
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x9E2638", Offset = "0x9E2638", VA = "0x9E2638")]
	public static bool playerKeyExists(string theKey)
	{
		return default(bool);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x9E2740", Offset = "0x9E2740", VA = "0x9E2740")]
	public static void removePlayerKey(string theKey)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x9E26AC", Offset = "0x9E26AC", VA = "0x9E26AC")]
	public static string playerStringForKey(string theKey, [Optional] string defaultString)
	{
		return null;
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x9E27C4", Offset = "0x9E27C4", VA = "0x9E27C4")]
	public static int playerIntForKey(string theKey, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x9E2880", Offset = "0x9E2880", VA = "0x9E2880")]
	public static float playerFloatForKey(string theKey, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x9E2938", Offset = "0x9E2938", VA = "0x9E2938")]
	public static bool playerBoolForKey(string theKey, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x9E29E4", Offset = "0x9E29E4", VA = "0x9E29E4")]
	public static void setPlayerIntForKey(string theKey, int theValue)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x9E2A88", Offset = "0x9E2A88", VA = "0x9E2A88")]
	public static int incrementPlayerIntForKey(string theKey, int incrementAmount = 1)
	{
		return default(int);
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x9E2B14", Offset = "0x9E2B14", VA = "0x9E2B14")]
	public static void setPlayerFloatForKey(string theKey, float theValue)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x9E2BB8", Offset = "0x9E2BB8", VA = "0x9E2BB8")]
	public static void setPlayerStringForKey(string theKey, string theValue)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x9E2C5C", Offset = "0x9E2C5C", VA = "0x9E2C5C")]
	public static void setPlayerBoolForKey(string theKey, bool theValue)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x9E2D38", Offset = "0x9E2D38", VA = "0x9E2D38")]
	public static void clearUnlockerState()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x9E2DC4", Offset = "0x9E2DC4", VA = "0x9E2DC4")]
	public static bool unlocksAreAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x9DF6DC", Offset = "0x9DF6DC", VA = "0x9DF6DC")]
	public static bool isLocked(GameStateLocks lockFlag)
	{
		return default(bool);
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x9E2E34", Offset = "0x9E2E34", VA = "0x9E2E34")]
	public static bool isUnlocked(GameStateLocks lockFlag)
	{
		return default(bool);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x9DF74C", Offset = "0x9DF74C", VA = "0x9DF74C")]
	public static void unlockItem(GameStateLocks lockFlag)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x9E2F58", Offset = "0x9E2F58", VA = "0x9E2F58")]
	public static void lockItem(GameStateLocks lockFlag)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x9E2FDC", Offset = "0x9E2FDC", VA = "0x9E2FDC")]
	public static void lockAll()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x9E308C", Offset = "0x9E308C", VA = "0x9E308C")]
	public GameStateController()
	{
	}
}
[Token(Token = "0x20000DF")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7CC4D4", Offset = "0x7CC4D4")]
public sealed class GameStateFlags
{
	[Token(Token = "0x40004B0")]
	private const int maskCount = 32;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] upgradeMasks;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int upgradeMasksLength;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string stateKey;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int flagInt;

	[Token(Token = "0x1700002B")]
	public bool Item
	{
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x9E3968", Offset = "0x9E3968", VA = "0x9E3968")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x9E3AB0", Offset = "0x9E3AB0", VA = "0x9E3AB0")]
		set
		{
		}
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x9E35F0", Offset = "0x9E35F0", VA = "0x9E35F0")]
	private void loadMasks()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x9E3708", Offset = "0x9E3708", VA = "0x9E3708")]
	private void setup(int raw)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x9E378C", Offset = "0x9E378C", VA = "0x9E378C")]
	public GameStateFlags(int rawValue)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x9E37BC", Offset = "0x9E37BC", VA = "0x9E37BC")]
	public GameStateFlags(string key)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x9E3860", Offset = "0x9E3860", VA = "0x9E3860")]
	public void save()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x9E38E0", Offset = "0x9E38E0", VA = "0x9E38E0")]
	public void removeFromState()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x9E3958", Offset = "0x9E3958", VA = "0x9E3958")]
	public void clear(int value = 0)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x9E3960", Offset = "0x9E3960", VA = "0x9E3960")]
	public int intValue()
	{
		return default(int);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x9E3A04", Offset = "0x9E3A04", VA = "0x9E3A04")]
	public bool flagIsSet(int indexNumber)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x9E3AB8", Offset = "0x9E3AB8", VA = "0x9E3AB8")]
	public void setFlag(int indexNumber, bool stateValue)
	{
	}
}
[Token(Token = "0x20000E0")]
public sealed class GameStateHash
{
	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string separator;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string stateKey;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, string> gameState;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private StringBuilder saveString;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> keys;

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x9E3C30", Offset = "0x9E3C30", VA = "0x9E3C30")]
	public GameStateHash(string key)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x9E3EB4", Offset = "0x9E3EB4", VA = "0x9E3EB4")]
	public int stateCount()
	{
		return default(int);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x9E3F0C", Offset = "0x9E3F0C", VA = "0x9E3F0C")]
	public void save()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x9E3D38", Offset = "0x9E3D38", VA = "0x9E3D38")]
	public void load()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x9E41B8", Offset = "0x9E41B8", VA = "0x9E41B8")]
	public void removeFromState()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x9E4160", Offset = "0x9E4160", VA = "0x9E4160")]
	public void reset()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x9E4220", Offset = "0x9E4220", VA = "0x9E4220")]
	public float floatForKey(string key, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x9E42E8", Offset = "0x9E42E8", VA = "0x9E42E8")]
	public int intForKey(string key, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x9E4328", Offset = "0x9E4328", VA = "0x9E4328")]
	public double doubleForKey(string key, double defaultValue = 0.0)
	{
		return default(double);
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x9E425C", Offset = "0x9E425C", VA = "0x9E425C")]
	public string stringForKey(string key, [Optional] string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x9E4364", Offset = "0x9E4364", VA = "0x9E4364")]
	public bool boolForKey(string key, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x9E43A4", Offset = "0x9E43A4", VA = "0x9E43A4")]
	public void setValueForKey(string key, object valueObject)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x9E442C", Offset = "0x9E442C", VA = "0x9E442C")]
	public void removeKey(string key)
	{
	}
}
[Token(Token = "0x20000E1")]
public sealed class GameStateList
{
	[Token(Token = "0x40004BA")]
	public const string separatorString = ",";

	[Token(Token = "0x40004BB")]
	public const char separatorChar = ',';

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string stateKey;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> gameState;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int readIndex;

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x9E44F0", Offset = "0x9E44F0", VA = "0x9E44F0")]
	public GameStateList(string key)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x9E468C", Offset = "0x9E468C", VA = "0x9E468C")]
	public GameStateList(string key, string rawSave)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x9E480C", Offset = "0x9E480C", VA = "0x9E480C")]
	public int stateCount()
	{
		return default(int);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x9E485C", Offset = "0x9E485C", VA = "0x9E485C")]
	public void save()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x9E4594", Offset = "0x9E4594", VA = "0x9E4594")]
	public void load()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x9E4738", Offset = "0x9E4738", VA = "0x9E4738")]
	public void load(string rawFile)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x9E4944", Offset = "0x9E4944", VA = "0x9E4944")]
	public void removeFromState()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x9E48E4", Offset = "0x9E48E4", VA = "0x9E48E4")]
	public void reset()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x9E49AC", Offset = "0x9E49AC", VA = "0x9E49AC")]
	public float nextFloat(float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x9E4A60", Offset = "0x9E4A60", VA = "0x9E4A60")]
	public int nextInt(int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x9E4B08", Offset = "0x9E4B08", VA = "0x9E4B08")]
	public double nextDouble(double defaultValue = 0.0)
	{
		return default(double);
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x9E4BBC", Offset = "0x9E4BBC", VA = "0x9E4BBC")]
	public long nextLong(long defaultValue = 0L)
	{
		return default(long);
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x9E4C64", Offset = "0x9E4C64", VA = "0x9E4C64")]
	public string nextString([Optional] string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x9E4CF4", Offset = "0x9E4CF4", VA = "0x9E4CF4")]
	public bool nextBool(bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x9E4D9C", Offset = "0x9E4D9C", VA = "0x9E4D9C")]
	public DateTime nextDate(DateTime defaultValue)
	{
		return default(DateTime);
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x9E4EC8", Offset = "0x9E4EC8", VA = "0x9E4EC8")]
	public List<int> nextIntList()
	{
		return null;
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x9E4F94", Offset = "0x9E4F94", VA = "0x9E4F94")]
	public List<string> nextStringList()
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	public void pushListState<T>(List<T> theList)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x9E5070", Offset = "0x9E5070", VA = "0x9E5070")]
	public void pushState(object stateObject)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x9E5110", Offset = "0x9E5110", VA = "0x9E5110")]
	public bool contains(string stateItem)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000E2")]
public enum GameStateLocks
{
	[Token(Token = "0x40004C0")]
	firstLevelTutorialComplete,
	[Token(Token = "0x40004C1")]
	hasSeenGameHub
}
[Token(Token = "0x20000E3")]
public sealed class GameStateUnlocker
{
	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameStateFlags stateFlags;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x9E3330", Offset = "0x9E3330", VA = "0x9E3330")]
	public GameStateUnlocker()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x9E2DA8", Offset = "0x9E2DA8", VA = "0x9E2DA8")]
	public void clearState()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x9E5178", Offset = "0x9E5178", VA = "0x9E5178")]
	private void loadState()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x9E51E8", Offset = "0x9E51E8", VA = "0x9E51E8")]
	private void saveState()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x9E3054", Offset = "0x9E3054", VA = "0x9E3054")]
	public void lockAll()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x9E2F08", Offset = "0x9E2F08", VA = "0x9E2F08")]
	public bool isUnlocked(GameStateLocks flag)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x9E2F20", Offset = "0x9E2F20", VA = "0x9E2F20")]
	public void unlockItem(GameStateLocks flag, bool isUnlocked = true)
	{
	}
}
[Token(Token = "0x20000E4")]
public class GraphicsQualityBooter : BootableMonoBehaviour
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GraphicsQualityController controller;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x9E7A2C", Offset = "0x9E7A2C", VA = "0x9E7A2C", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x9E7B44", Offset = "0x9E7B44", VA = "0x9E7B44")]
	public GraphicsQualityBooter()
	{
	}
}
[Token(Token = "0x20000E5")]
public enum AntiAliasingSetting
{
	[Token(Token = "0x40004C5")]
	None,
	[Token(Token = "0x40004C6")]
	Low,
	[Token(Token = "0x40004C7")]
	Medium,
	[Token(Token = "0x40004C8")]
	High
}
[Token(Token = "0x20000E6")]
public enum DelMarQualitySetting
{
	[Token(Token = "0x40004CA")]
	PowerSaver = 0,
	[Token(Token = "0x40004CB")]
	HighFrequency = 2,
	[Token(Token = "0x40004CC")]
	PostFX = 3
}
[Token(Token = "0x20000E7")]
public class GraphicsQualityController : SingletonMono<GraphicsQualityController>
{
	[Token(Token = "0x40004CD")]
	private const int HighQualitySettingsLevel = 3;

	[Token(Token = "0x40004CE")]
	private const int DelMarPostFXQualitySettingsLevel = 2;

	[Token(Token = "0x40004CF")]
	private const int DelMarHighFrequencyQualitySettingsLevel = 1;

	[Token(Token = "0x40004D0")]
	private const int LowQualitySettingsLevel = 0;

	[Token(Token = "0x40004D1")]
	private const int DefaultDisplayFrequency = 72;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameStateList stateList;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHighQualityGraphicsEnabled;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isPostProcessingEnabled;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool isBloomEnabled;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	private bool isColorGradingEnabled;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isVignetteEnabled;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AntiAliasingSetting antiAliasingSetting;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private DelMarQualitySetting delMarQualitySetting;

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x9E7B10", Offset = "0x9E7B10", VA = "0x9E7B10")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x9E7B4C", Offset = "0x9E7B4C", VA = "0x9E7B4C")]
	private void loadState()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x9E7F98", Offset = "0x9E7F98", VA = "0x9E7F98")]
	private void saveState()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x9E812C", Offset = "0x9E812C", VA = "0x9E812C")]
	public void toggleGraphicQualitySetting()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x9E8210", Offset = "0x9E8210", VA = "0x9E8210")]
	public void cycleAASetting()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x9E8284", Offset = "0x9E8284", VA = "0x9E8284")]
	public void togglePostProcessing()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x9E82CC", Offset = "0x9E82CC", VA = "0x9E82CC")]
	public void toggleBloom()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x9E8314", Offset = "0x9E8314", VA = "0x9E8314")]
	public void toggleColorGrading()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x9E835C", Offset = "0x9E835C", VA = "0x9E835C")]
	public void toggleVignette()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x9E8174", Offset = "0x9E8174", VA = "0x9E8174")]
	private void toggleSettingsFlag(ref bool flag, string logName)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x9E83A4", Offset = "0x9E83A4", VA = "0x9E83A4")]
	public void setDelMarGraphicsSetting(DelMarQualitySetting newSetting)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x9E8474", Offset = "0x9E8474", VA = "0x9E8474")]
	public string GetLocalisedNameForDelMarGraphics()
	{
		return null;
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x9E8528", Offset = "0x9E8528", VA = "0x9E8528")]
	public string GetLocalisedDescriptionForDelMarGraphics()
	{
		return null;
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x9E83AC", Offset = "0x9E83AC", VA = "0x9E83AC")]
	private void ApplyCurrentDelMarSetting()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x9E7E64", Offset = "0x9E7E64", VA = "0x9E7E64")]
	private void refreshGraphicsQuality()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x9E7D4C", Offset = "0x9E7D4C", VA = "0x9E7D4C")]
	public void setGraphicsQualityToLow()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x9E85DC", Offset = "0x9E85DC", VA = "0x9E85DC")]
	public void setGraphicsQualityToDelMarHighFrequency()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x9E86F4", Offset = "0x9E86F4", VA = "0x9E86F4")]
	public void setGraphicsQualityToDelMarPostFX()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x9E880C", Offset = "0x9E880C", VA = "0x9E880C")]
	public void setGraphicsQualityToDesktopHigh()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x9E8930", Offset = "0x9E8930", VA = "0x9E8930")]
	public void SetDisplayFrequency(bool highFrequencyEnabled)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x9E8ACC", Offset = "0x9E8ACC", VA = "0x9E8ACC")]
	public bool isPostProcessingFlagEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x9E8AEC", Offset = "0x9E8AEC", VA = "0x9E8AEC")]
	public bool isBloomFlagEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x9E8B0C", Offset = "0x9E8B0C", VA = "0x9E8B0C")]
	public bool isColorGradingFlagEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x9E8B2C", Offset = "0x9E8B2C", VA = "0x9E8B2C")]
	public bool isVignetteFlagEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x9E8B4C", Offset = "0x9E8B4C", VA = "0x9E8B4C")]
	public AntiAliasingSetting GetAntiAliasingSetting()
	{
		return default(AntiAliasingSetting);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x9E8B54", Offset = "0x9E8B54", VA = "0x9E8B54")]
	public DelMarQualitySetting GetDelMArQualityLevelSetting()
	{
		return default(DelMarQualitySetting);
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x9E8B5C", Offset = "0x9E8B5C", VA = "0x9E8B5C")]
	public bool isHighQualityFlagEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x9E7CA4", Offset = "0x9E7CA4", VA = "0x9E7CA4")]
	public bool areDelMarGraphicsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x9E7ED4", Offset = "0x9E7ED4", VA = "0x9E7ED4")]
	public bool isHighQualityPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x9E8B7C", Offset = "0x9E8B7C", VA = "0x9E8B7C")]
	public bool isQualitySetToHighQuality()
	{
		return default(bool);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x9E8B9C", Offset = "0x9E8B9C", VA = "0x9E8B9C")]
	public GraphicsQualityController()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E8")]
public class Level
{
	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public string rawConfig;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string levelId;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public HashSet<string> allowedWorldIds;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int difficulty;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<WaveTickAction> sequence;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HashSet<string> spawnSet;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HashSet<string> fleetSet;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HashSet<string> preload;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int sequenceIndex;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int tickCountdown;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int waitingForCount;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int waitingForTutorial;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int deletionCount;

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x9C4988", Offset = "0x9C4988", VA = "0x9C4988")]
	public void prepareLevelFromKey(string objectKey)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x9C49D0", Offset = "0x9C49D0", VA = "0x9C49D0")]
	public void prepareLevel(string rawConfig, bool processWaves, bool runPreload = true)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x9C5094", Offset = "0x9C5094", VA = "0x9C5094")]
	public void resetLevel(int resumeCheckpoint)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x9C4E74", Offset = "0x9C4E74", VA = "0x9C4E74")]
	private void preProcessWave(string line)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x9C520C", Offset = "0x9C520C", VA = "0x9C520C")]
	private bool isValidForPreload(WaveTickAction waveAction)
	{
		return default(bool);
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x9C525C", Offset = "0x9C525C", VA = "0x9C525C")]
	public bool tick()
	{
		return default(bool);
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x9C5EF4", Offset = "0x9C5EF4", VA = "0x9C5EF4")]
	public List<string> allowedWorldsAsExportLines()
	{
		return null;
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x9C6040", Offset = "0x9C6040", VA = "0x9C6040")]
	public float levelProgressAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x9C60E0", Offset = "0x9C60E0", VA = "0x9C60E0")]
	public List<string> waveActionsAsExportLines(bool richTextColors = false)
	{
		return null;
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x9C6334", Offset = "0x9C6334", VA = "0x9C6334")]
	public List<string> spawnsInLevel()
	{
		return null;
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x9C63A4", Offset = "0x9C63A4", VA = "0x9C63A4")]
	public List<string> fleetsInLevel()
	{
		return null;
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x9C6414", Offset = "0x9C6414", VA = "0x9C6414")]
	public bool isValidForWorld(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x9C6490", Offset = "0x9C6490", VA = "0x9C6490")]
	public void append(Level levelToAddToEnd)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x9C6698", Offset = "0x9C6698", VA = "0x9C6698")]
	public bool hasABossSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x9C6804", Offset = "0x9C6804", VA = "0x9C6804")]
	public bool hasAMiniBossSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x9C6710", Offset = "0x9C6710", VA = "0x9C6710")]
	private bool hasASpawnWithKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x9C6854", Offset = "0x9C6854", VA = "0x9C6854")]
	private bool containsASpawnKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x9C694C", Offset = "0x9C694C", VA = "0x9C694C")]
	public bool hasAPowerupSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x9C69F4", Offset = "0x9C69F4", VA = "0x9C69F4")]
	public void addEnemiesInLevel(ref HashSet<EnemyClass> enemies)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x9C6B00", Offset = "0x9C6B00", VA = "0x9C6B00")]
	public Level()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E9")]
public struct ImageIdPairings
{
	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string id;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Mesh mesh;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite worldSprite;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite worldBossSprite;
}
[Token(Token = "0x20000EA")]
public class LevelController : SingletonMono<LevelController>
{
	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDC70", Offset = "0x7CDC70")]
	private sealed class <waveRunner>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelController <>4__this;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <tickCount>5__2;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private GameMode <currentGameMode>5__3;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001788")]
			[Address(RVA = "0x9D28D0", Offset = "0x9D28D0", VA = "0x9D28D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600178A")]
			[Address(RVA = "0x9D2938", Offset = "0x9D2938", VA = "0x9D2938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x9CE034", Offset = "0x9CE034", VA = "0x9CE034")]
		[DebuggerHidden]
		public <waveRunner>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x9D21F0", Offset = "0x9D21F0", VA = "0x9D21F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x9D21F4", Offset = "0x9D21F4", VA = "0x9D21F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x9D28D8", Offset = "0x9D28D8", VA = "0x9D28D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDC80", Offset = "0x7CDC80")]
	private sealed class <>c__DisplayClass126_0
	{
		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<EnemyController> enemiesToCleanup;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bullet[] allActiveBullets;

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x9D11C8", Offset = "0x9D11C8", VA = "0x9D11C8")]
		public <>c__DisplayClass126_0()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x9D2038", Offset = "0x9D2038", VA = "0x9D2038")]
		internal void <cleanupEnemies>b__1(float alpha)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDC90", Offset = "0x7CDC90")]
	private sealed class <>c
	{
		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<EnemyController> <>9__126_0;

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x9D1FF8", Offset = "0x9D1FF8", VA = "0x9D1FF8")]
		public <>c()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x9D2000", Offset = "0x9D2000", VA = "0x9D2000")]
		internal bool <cleanupEnemies>b__126_0(EnemyController enemy)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDCA0", Offset = "0x7CDCA0")]
	private sealed class <>c__DisplayClass141_0
	{
		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x9D1BFC", Offset = "0x9D1BFC", VA = "0x9D1BFC")]
		public <>c__DisplayClass141_0()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x9D21B8", Offset = "0x9D21B8", VA = "0x9D21B8")]
		internal bool <getEnemySpriteWithName>b__0(Sprite aSprite)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40004EB")]
	private const string ComboSoundLoopId = "ComboLoopId";

	[Token(Token = "0x40004EC")]
	public const string PowerupCrateKey = "Collectable/powerup_crate";

	[Token(Token = "0x40004ED")]
	public const string GunUpgradeKey = "Collectable/powerup_gunupgrade";

	[Token(Token = "0x40004EE")]
	public const string ScoreMultiplierKey = "Collectable/powerup_scoremultiplier";

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string LevelResourcePath;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Level EditorPlaytestLevel;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Level EditorPlaytestFullLevel;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tickLength;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForSeconds delayBetweenTicks;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF960", Offset = "0x7CF960")]
	public List<Sprite> enemySprites;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF998", Offset = "0x7CF998")]
	public int ticksPerExtraRandomSpawn;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<LevelContainer> levelContainers;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CF9D0", Offset = "0x7CF9D0")]
	public int ticksHoldAfterMajorEvent;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFA08", Offset = "0x7CFA08")]
	public LevelContainer infiniteModeContainer;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFA40", Offset = "0x7CFA40")]
	public EndlessStaticEnemyMode enemySpawner;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFA78", Offset = "0x7CFA78")]
	public List<ImageIdPairings> worldMeshPairings;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFAB0", Offset = "0x7CFAB0")]
	public float timeBeforeComboResets;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float comboMultiplier;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentResetTime;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float highestComboThisRun;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MappedList<WorldConfig> worlds;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WorldConfig currentWorld;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Level> allLevels;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Level> levelSetsForWorld;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Level theLevel;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int startCheckpointIndex;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float currentLevelProgress;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFAE8", Offset = "0x7CFAE8")]
	[SerializeField]
	private int enemiesDestroyedCounter;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float spawnPowerupDelaySeconds;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float timeAtLastPowerupSpawn;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFB34", Offset = "0x7CFB34")]
	private int <scoreThisLevel>k__BackingField;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFB44", Offset = "0x7CFB44")]
	private int <objectiveCount>k__BackingField;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, EnemySpawnPoint> allSpawns;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<string, EnemyFleetTemplate> fleetTemplates;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<EnemyController> enemiesToAddNextFrame;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<EnemyController> enemiesToRemoveNextFrame;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<EnemyController> activeEnemies;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private HashSet<string> loadedItems;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ShuffleBag<EnemyController> enemyTargetBag;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Dictionary<string, int> configPreloadAmounts;

	[Token(Token = "0x1700002C")]
	public int scoreThisLevel
	{
		[Token(Token = "0x600061B")]
		[Address(RVA = "0x9CC808", Offset = "0x9CC808", VA = "0x9CC808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6E38", Offset = "0x7D6E38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600061C")]
		[Address(RVA = "0x9CC810", Offset = "0x9CC810", VA = "0x9CC810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6E48", Offset = "0x7D6E48")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public int objectiveCount
	{
		[Token(Token = "0x600061D")]
		[Address(RVA = "0x9CC818", Offset = "0x9CC818", VA = "0x9CC818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6E58", Offset = "0x7D6E58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600061E")]
		[Address(RVA = "0x9CC820", Offset = "0x9CC820", VA = "0x9CC820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6E68", Offset = "0x7D6E68")]
		private set
		{
		}
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x9CC828", Offset = "0x9CC828", VA = "0x9CC828")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x9CC9C0", Offset = "0x9CC9C0", VA = "0x9CC9C0", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x9CCA6C", Offset = "0x9CCA6C", VA = "0x9CCA6C")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x9CCE24", Offset = "0x9CCE24", VA = "0x9CCE24")]
	private void defineWorld(Command theCommand)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x9CCEB4", Offset = "0x9CCEB4", VA = "0x9CCEB4")]
	private void definePreloadingConfig(Command theCommand)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x9CCB54", Offset = "0x9CCB54", VA = "0x9CCB54")]
	private void loadState()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x9CD190", Offset = "0x9CD190", VA = "0x9CD190")]
	private void saveState()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x9CD2B4", Offset = "0x9CD2B4", VA = "0x9CD2B4")]
	public void ensureWorldUnlocksAreCorrect()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x9CD59C", Offset = "0x9CD59C", VA = "0x9CD59C")]
	public int enemiesDestroyedThisLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x9CD5A4", Offset = "0x9CD5A4", VA = "0x9CD5A4")]
	public void prepareLevel(GameMode gameMode)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x9CD5D8", Offset = "0x9CD5D8", VA = "0x9CD5D8")]
	private void prepareLevel()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x9CD894", Offset = "0x9CD894", VA = "0x9CD894")]
	private void prepareArcadeModeLevel()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x9CD76C", Offset = "0x9CD76C", VA = "0x9CD76C")]
	private void prepareInfiniteModeLevel()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x9CD7C4", Offset = "0x9CD7C4", VA = "0x9CD7C4")]
	private void prepareTutorialLevel()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x9CDB74", Offset = "0x9CDB74", VA = "0x9CDB74")]
	private void resetTrackedLevelState(int checkpointIndex, int newObjectiveCount = 1)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x9CD948", Offset = "0x9CD948", VA = "0x9CD948")]
	private void prepareEditorTestingLevel()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x9CDF8C", Offset = "0x9CDF8C", VA = "0x9CDF8C")]
	public void runLevel()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x9CDFB8", Offset = "0x9CDFB8", VA = "0x9CDFB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D6E78", Offset = "0x7D6E78")]
	private IEnumerator waveRunner()
	{
		return null;
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x9CD9E8", Offset = "0x9CD9E8", VA = "0x9CD9E8")]
	private void updatePowerupSpawnDelay(GameMode currentGameMode)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x9C5CC0", Offset = "0x9C5CC0", VA = "0x9C5CC0")]
	public void checkpointReached(int checkpointIndex)
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x9CE060", Offset = "0x9CE060", VA = "0x9CE060")]
	public string localizedCheckpointName(int checkpointIndex)
	{
		return null;
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x9C8A6C", Offset = "0x9C8A6C", VA = "0x9C8A6C")]
	public static Level levelWithName(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x9CDD6C", Offset = "0x9CDD6C", VA = "0x9CDD6C")]
	public static string objectKeyForLevel(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x9CE264", Offset = "0x9CE264", VA = "0x9CE264")]
	public static string pathToLevelFile(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x9C9AC4", Offset = "0x9C9AC4", VA = "0x9C9AC4")]
	public static void saveLevelToFile(Level theLevel)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x9C7D34", Offset = "0x9C7D34", VA = "0x9C7D34")]
	public static string rawExportOfLevel(Level theLevel, bool richTextColors = false)
	{
		return null;
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x9CBD90", Offset = "0x9CBD90", VA = "0x9CBD90")]
	public WorldConfig worldForId(string worldId, bool throwError = true)
	{
		return null;
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x9CE328", Offset = "0x9CE328", VA = "0x9CE328")]
	public bool isValidWorldId(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x9CE3A8", Offset = "0x9CE3A8", VA = "0x9CE3A8")]
	public List<WorldConfig> allWorldConfigs()
	{
		return null;
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x9CE450", Offset = "0x9CE450", VA = "0x9CE450")]
	public Sprite worldSpriteForId(string worldId)
	{
		return null;
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x9CE598", Offset = "0x9CE598", VA = "0x9CE598")]
	public Sprite worldBossSpriteForId(string worldId)
	{
		return null;
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x9CE6E0", Offset = "0x9CE6E0", VA = "0x9CE6E0")]
	public Mesh worldNubbinMeshForId(string worldId)
	{
		return null;
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x9CE828", Offset = "0x9CE828", VA = "0x9CE828")]
	public void storyModeLevelComplete(GameDifficulty currentDifficulty)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x9CE83C", Offset = "0x9CE83C", VA = "0x9CE83C")]
	public void unlockWorld(string worldId)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x9CE8F0", Offset = "0x9CE8F0", VA = "0x9CE8F0")]
	public void lockWorld(string worldId)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x9CE9A4", Offset = "0x9CE9A4", VA = "0x9CE9A4")]
	public bool isWorldUnlocked(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x9CE1F0", Offset = "0x9CE1F0", VA = "0x9CE1F0")]
	public bool isCurrentWorldSpaceWorld()
	{
		return default(bool);
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x9CA9E0", Offset = "0x9CA9E0", VA = "0x9CA9E0")]
	public static bool isWorldIdSpaceWorld(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x9CEAF8", Offset = "0x9CEAF8", VA = "0x9CEAF8")]
	public int unlockedWorldCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x9CEBDC", Offset = "0x9CEBDC", VA = "0x9CEBDC")]
	public bool hasCompletedStory()
	{
		return default(bool);
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x9CCF88", Offset = "0x9CCF88", VA = "0x9CCF88")]
	public void setCurrentWorld(string worldId, bool doSave = true)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x9CECBC", Offset = "0x9CECBC", VA = "0x9CECBC")]
	public void unloadDataForCurrentWorld()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x9CF0BC", Offset = "0x9CF0BC", VA = "0x9CF0BC")]
	public void loadDataForCurrentWorld()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x9CFB48", Offset = "0x9CFB48", VA = "0x9CFB48")]
	public List<Level> allLevelsInWorld(string worldId)
	{
		return null;
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x9CF848", Offset = "0x9CF848", VA = "0x9CF848")]
	private void preloadPowerups()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x9CF4A4", Offset = "0x9CF4A4", VA = "0x9CF4A4")]
	private void preloadParticleSystems()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x9CF71C", Offset = "0x9CF71C", VA = "0x9CF71C")]
	private void preloadPlayerBullets()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x9CF408", Offset = "0x9CF408", VA = "0x9CF408")]
	private void preloadObjects(List<string> objectList, int countPerObject)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x9CF974", Offset = "0x9CF974", VA = "0x9CF974")]
	private void preloadObject(string objectKey, int countPerObject)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x9CCCAC", Offset = "0x9CCCAC", VA = "0x9CCCAC")]
	private void populateAllLevelsList()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x9CFC58", Offset = "0x9CFC58", VA = "0x9CFC58")]
	private bool isExcludedLevel(string levelId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x9CF0A8", Offset = "0x9CF0A8", VA = "0x9CF0A8")]
	public void clearAllCheckpointProgress()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x9CEA64", Offset = "0x9CEA64", VA = "0x9CEA64")]
	public string currentWorldId()
	{
		return null;
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x9CFD08", Offset = "0x9CFD08", VA = "0x9CFD08")]
	public WorldConfig getCurrentWorldConfig()
	{
		return null;
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x9CFDC4", Offset = "0x9CFDC4", VA = "0x9CFDC4")]
	public string getCurrentWorldEnemyInClass(EnemyClass enemyClass)
	{
		return null;
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x9CFE48", Offset = "0x9CFE48", VA = "0x9CFE48")]
	private List<string> getEnemiesInClassForCurrentWorld(EnemyClass enemyClass)
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x9CFF64", Offset = "0x9CFF64", VA = "0x9CFF64")]
	public string getCurrentWorldCheckpointNameLocalised()
	{
		return null;
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x9CAEDC", Offset = "0x9CAEDC", VA = "0x9CAEDC")]
	public bool hasReachedFirstCheckpoint()
	{
		return default(bool);
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x9CDDC0", Offset = "0x9CDDC0", VA = "0x9CDDC0")]
	private void prepareSpawns()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x9CDED0", Offset = "0x9CDED0", VA = "0x9CDED0")]
	private void prepareFleets()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x9CFFDC", Offset = "0x9CFFDC", VA = "0x9CFFDC")]
	public EnemySpawnPoint spawnPoint(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x9D0160", Offset = "0x9D0160", VA = "0x9D0160")]
	private EnemyFleetTemplate fleetTemplate(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x9C5860", Offset = "0x9C5860", VA = "0x9C5860")]
	public void spawnEnemy(WaveTickAction spawnInfo)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x9D03D4", Offset = "0x9D03D4", VA = "0x9D03D4")]
	public void spawnEnemySimple(string spawnPointKey, string enemyKey, MovementType movement = MovementType.none, int loiterTicks = 0)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x9D054C", Offset = "0x9D054C", VA = "0x9D054C")]
	public EnemyController spawnEnemySimple(EnemyClass enemyClass, Vector3 spawnPosition, MovementType moveType = MovementType.stationary)
	{
		return null;
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x9D05A4", Offset = "0x9D05A4", VA = "0x9D05A4")]
	public EnemyController spawnEnemySimple(string enemyKey, Vector3 spawnPosition, MovementType moveType = MovementType.stationary)
	{
		return null;
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x9D06F0", Offset = "0x9D06F0", VA = "0x9D06F0")]
	public void externalEnemyWasSpawned(EnemyController newEnemy)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x9C596C", Offset = "0x9C596C", VA = "0x9C596C")]
	public void spawnFleetEnemy(WaveTickAction spawnInfo)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x9D02B8", Offset = "0x9D02B8", VA = "0x9D02B8")]
	private void postSpawnHandling(string spawningContext, EnemyController newEnemy)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x9D0758", Offset = "0x9D0758", VA = "0x9D0758")]
	public void enemyWasRemoved(EnemyController theEnemy)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x9D07C0", Offset = "0x9D07C0", VA = "0x9D07C0")]
	private void reconcileEnemyQueues()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x9C5B70", Offset = "0x9C5B70", VA = "0x9C5B70")]
	public void spawnPowerup(string spawnPointKey)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x9C5BE0", Offset = "0x9C5BE0", VA = "0x9C5BE0")]
	public void spawnGunUpgrade(string spawnPointKey)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x9C5C50", Offset = "0x9C5C50", VA = "0x9C5C50")]
	public void spawnScoreMultiplier(string spawnPointKey)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x9D0948", Offset = "0x9D0948", VA = "0x9D0948")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x9C5810", Offset = "0x9C5810", VA = "0x9C5810")]
	public int activeEnemyCount()
	{
		return default(int);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x9D0BA8", Offset = "0x9D0BA8", VA = "0x9D0BA8")]
	public List<EnemyController> getActiveEnemies()
	{
		return null;
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x9D0BB0", Offset = "0x9D0BB0", VA = "0x9D0BB0")]
	public void enemyWasDestroyed(EnemyController theEnemy, bool isGameplayDeath)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x9D0D58", Offset = "0x9D0D58", VA = "0x9D0D58")]
	private bool isObjectiveComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x9D0D70", Offset = "0x9D0D70", VA = "0x9D0D70")]
	public void stopEnemyActivity()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x9D0F7C", Offset = "0x9D0F7C", VA = "0x9D0F7C")]
	public void cleanupEnemies(EnemyController enemyToIgnore, float cleanupTime, bool isCleaningUpPowerupCrates = true)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x9D0EB4", Offset = "0x9D0EB4", VA = "0x9D0EB4")]
	private void cleanupPowerupCrates()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x9D11D0", Offset = "0x9D11D0", VA = "0x9D11D0")]
	public void cleanupLevel()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x9D0D68", Offset = "0x9D0D68", VA = "0x9D0D68")]
	private void stopLevelRunner()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x9D1424", Offset = "0x9D1424", VA = "0x9D1424")]
	public void tryUpdateCombo(float amount)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x9D15E0", Offset = "0x9D15E0", VA = "0x9D15E0")]
	public float getHighestComboThisLife()
	{
		return default(float);
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x9D15E8", Offset = "0x9D15E8", VA = "0x9D15E8")]
	public float comboTimeRemainingAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x9D16A0", Offset = "0x9D16A0", VA = "0x9D16A0")]
	public bool isComboActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x9D173C", Offset = "0x9D173C", VA = "0x9D173C")]
	public float getComboMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x9D09F0", Offset = "0x9D09F0", VA = "0x9D09F0")]
	private void resetComboMultiplier()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x9D1744", Offset = "0x9D1744", VA = "0x9D1744")]
	public void levelWrappedUp(bool cleanupEnemies)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x9D17F0", Offset = "0x9D17F0", VA = "0x9D17F0")]
	private void checkForReturnToLevelEditor()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x9D17F4", Offset = "0x9D17F4", VA = "0x9D17F4")]
	public void resetEnemyTargets()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x9D18F8", Offset = "0x9D18F8", VA = "0x9D18F8")]
	public EnemyController randomEnemyTarget()
	{
		return null;
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x9D1950", Offset = "0x9D1950", VA = "0x9D1950")]
	public Transform randomEnemyTransform()
	{
		return null;
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x9D1B2C", Offset = "0x9D1B2C", VA = "0x9D1B2C")]
	public Sprite getEnemySpriteWithName(string name)
	{
		return null;
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x9D0750", Offset = "0x9D0750", VA = "0x9D0750")]
	private bool isSettingDebugContext()
	{
		return default(bool);
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x9D1C04", Offset = "0x9D1C04", VA = "0x9D1C04")]
	public LevelController()
	{
	}
}
[Token(Token = "0x20000EB")]
public sealed class LevelControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LevelController itemToBoot;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x9D2940", Offset = "0x9D2940", VA = "0x9D2940", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x9D2A40", Offset = "0x9D2A40", VA = "0x9D2A40", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x9D2B24", Offset = "0x9D2B24", VA = "0x9D2B24")]
	public LevelControllerBooter()
	{
	}
}
[Token(Token = "0x20000EC")]
public sealed class MTimer
{
	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float duration;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float elapsed;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedMultiplier;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int timerDidCompleteCycles;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool timerIsActive;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float effectiveDuration;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int cachedElapsedTime;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string cachedElapsedString;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int cachedRemainingTime;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int cachedRemainingShortTime;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string cachedRemainingString;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string cachedRemainingStringShortFormat;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string> timePairs;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static StringBuilder timeString;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static StringBuilder timeMinutesString;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static StringBuilder timeMinutesShort;

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xA63224", Offset = "0xA63224", VA = "0xA63224")]
	public MTimer(float seconds = 1f, float elapsedSeconds = 0f)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xA6333C", Offset = "0xA6333C", VA = "0xA6333C")]
	public void reset()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xA63374", Offset = "0xA63374", VA = "0xA63374")]
	public void clearCompletedCycles()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xA63358", Offset = "0xA63358", VA = "0xA63358")]
	public void reset(float newDuration)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xA6337C", Offset = "0xA6337C", VA = "0xA6337C")]
	public float scaledDuration()
	{
		return default(float);
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xA63384", Offset = "0xA63384", VA = "0xA63384")]
	public void setSpeedMultiplier(float scaler)
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xA63398", Offset = "0xA63398", VA = "0xA63398")]
	public void forceElapsedToPercent(float percent)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xA6341C", Offset = "0xA6341C", VA = "0xA6341C")]
	public float cumulativeElapsed()
	{
		return default(float);
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xA63288", Offset = "0xA63288", VA = "0xA63288")]
	public void incrementTimer(float deltaTime)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xA63434", Offset = "0xA63434", VA = "0xA63434")]
	public float percentElapsed()
	{
		return default(float);
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xA6345C", Offset = "0xA6345C", VA = "0xA6345C")]
	public float percentRemaining()
	{
		return default(float);
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xA63484", Offset = "0xA63484", VA = "0xA63484")]
	public string elapsedTimeString()
	{
		return null;
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xA635B0", Offset = "0xA635B0", VA = "0xA635B0")]
	public float secondsRemaining()
	{
		return default(float);
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xA635C8", Offset = "0xA635C8", VA = "0xA635C8")]
	public string timeRemainingString()
	{
		return null;
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xA63DC8", Offset = "0xA63DC8", VA = "0xA63DC8")]
	public string timeRemainingStringShortFormat()
	{
		return null;
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xA64188", Offset = "0xA64188", VA = "0xA64188")]
	private static void fillTimePairs()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xA6353C", Offset = "0xA6353C", VA = "0xA6353C")]
	public static string secondsToString(float intervalSeconds, bool showHours)
	{
		return null;
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xA64250", Offset = "0xA64250", VA = "0xA64250")]
	public static string zeroTime(bool showHours)
	{
		return null;
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xA636C8", Offset = "0xA636C8", VA = "0xA636C8")]
	public static string secondsToString(int intervalSeconds, bool showHours)
	{
		return null;
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xA642AC", Offset = "0xA642AC", VA = "0xA642AC")]
	public static string secondsToMinutesAndSecondsString(int intervalSeconds)
	{
		return null;
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xA645F8", Offset = "0xA645F8", VA = "0xA645F8")]
	public static string secondsToMinutesString(int intervalSeconds)
	{
		return null;
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xA63F28", Offset = "0xA63F28", VA = "0xA63F28")]
	public static string secondsToTextString(int intervalSeconds)
	{
		return null;
	}
}
[Token(Token = "0x20000ED")]
public sealed class MonoBehaviourObjectPool
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform containerParent;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, Queue<GameObject>> objectPool;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, List<GameObject>> activeItems;

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xA70BF4", Offset = "0xA70BF4", VA = "0xA70BF4")]
	public GameObject nextObjectThatMatches(GameObject sourceObject, string objectKey, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xA70F14", Offset = "0xA70F14", VA = "0xA70F14")]
	public GameObject nextObjectWithKey(string key)
	{
		return null;
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xA71290", Offset = "0xA71290", VA = "0xA71290")]
	public void returnObject(GameObject sourceTemplate)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xA71534", Offset = "0xA71534", VA = "0xA71534")]
	public void returnObjects(List<GameObject> objectsToReturn)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xA7144C", Offset = "0xA7144C", VA = "0xA7144C")]
	private void enqueuePoolItem(GameObject item)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xA71038", Offset = "0xA71038", VA = "0xA71038")]
	private void addActiveItem(GameObject item)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xA713CC", Offset = "0xA713CC", VA = "0xA713CC")]
	private void removeActiveItem(GameObject item)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xA711A4", Offset = "0xA711A4", VA = "0xA711A4")]
	private Queue<GameObject> getPoolQueueWithKey(string key)
	{
		return null;
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xA710B8", Offset = "0xA710B8", VA = "0xA710B8")]
	private List<GameObject> getActiveListWithKey(string key)
	{
		return null;
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xA715CC", Offset = "0xA715CC", VA = "0xA715CC")]
	public void returnAllObjects()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xA71750", Offset = "0xA71750", VA = "0xA71750")]
	public void returnInactiveObjects()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xA71910", Offset = "0xA71910", VA = "0xA71910")]
	public int pooledObjectsCount(GameObject sourceObject)
	{
		return default(int);
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xA71984", Offset = "0xA71984", VA = "0xA71984")]
	public int activeObjectsCount(GameObject sourceObject)
	{
		return default(int);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xA719F8", Offset = "0xA719F8", VA = "0xA719F8")]
	public void destroyObjectQueuesWithKey(string poolKey)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xA71AEC", Offset = "0xA71AEC", VA = "0xA71AEC")]
	public MonoBehaviourObjectPool()
	{
	}
}
[Token(Token = "0x20000EE")]
public struct PreloadingConfig
{
	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string objectKey;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int preloadCount;

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x86B754", Offset = "0x86B754", VA = "0x86B754")]
	public PreloadingConfig(Command theCommand)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x86B75C", Offset = "0x86B75C", VA = "0x86B75C")]
	public string objectKeyFlipped()
	{
		return null;
	}
}
[Token(Token = "0x20000EF")]
public sealed class ObjectFactory : SingletonMono<ObjectFactory>
{
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDCB0", Offset = "0x7CDCB0")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject theObject;

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xAF62B0", Offset = "0xAF62B0", VA = "0xAF62B0")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xAF6DA4", Offset = "0xAF6DA4", VA = "0xAF6DA4")]
		internal void <returnObjectAfterTime>b__0()
		{
		}
	}

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform defaultObjectFactoryParent;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, GameObject> prefabMap;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MonoBehaviourObjectPool objectPool;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, TextAsset> textAssets;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, AnimationClip> animationAssets;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFB54", Offset = "0x7CFB54")]
	private Dictionary<string, int> <poolOverrunStats>k__BackingField;

	[Token(Token = "0x1700002E")]
	public Dictionary<string, int> poolOverrunStats
	{
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xAF59A8", Offset = "0xAF59A8", VA = "0xAF59A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6EDC", Offset = "0x7D6EDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xAF59B0", Offset = "0xAF59B0", VA = "0xAF59B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6EEC", Offset = "0x7D6EEC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public static bool isAvailable
	{
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xAF59B8", Offset = "0xAF59B8", VA = "0xAF59B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xAF5A58", Offset = "0xAF5A58", VA = "0xAF5A58")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xAF5B98", Offset = "0xAF5B98", VA = "0xAF5B98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xAF5C30", Offset = "0xAF5C30", VA = "0xAF5C30")]
	public static void alignObjects(GameObject parent, GameObject child)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xAF5CD0", Offset = "0xAF5CD0", VA = "0xAF5CD0")]
	public static void preloadObject(string objectKey, int count = 1)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xAF5EC8", Offset = "0xAF5EC8", VA = "0xAF5EC8")]
	public static void preloadObjects(List<string> objects, int countPerObject)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xAF5F68", Offset = "0xAF5F68", VA = "0xAF5F68")]
	public void destoryPoolObjects(string objectKey)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xAF5F84", Offset = "0xAF5F84", VA = "0xAF5F84")]
	public static GameObject objectWithKey(string objectKey, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xAF5E4C", Offset = "0xAF5E4C", VA = "0xAF5E4C")]
	public static void returnObject(GameObject theObject)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xAF61B4", Offset = "0xAF61B4", VA = "0xAF61B4")]
	public static void returnObjectAfterTime(GameObject theObject, float time)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xAF6010", Offset = "0xAF6010", VA = "0xAF6010")]
	public GameObject pooledObject(string objectKey, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xAF5E08", Offset = "0xAF5E08", VA = "0xAF5E08")]
	public GameObject pooledObject(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xAF6450", Offset = "0xAF6450", VA = "0xAF6450")]
	public GameObject pooledObject(GameObject thePrefab)
	{
		return null;
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xAF60D4", Offset = "0xAF60D4", VA = "0xAF60D4")]
	public void returnPooledObject(GameObject theObject)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xAF64A8", Offset = "0xAF64A8", VA = "0xAF64A8")]
	public void returnPooledObjects(List<GameObject> theObjects)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xAF62B8", Offset = "0xAF62B8", VA = "0xAF62B8")]
	public GameObject prefabFromAssetPath(string theName)
	{
		return null;
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xAF64C4", Offset = "0xAF64C4", VA = "0xAF64C4")]
	public int pooledObjectsCount(GameObject thePrefab)
	{
		return default(int);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xAF64E0", Offset = "0xAF64E0", VA = "0xAF64E0")]
	public int activeObjectsCount(GameObject thePrefab)
	{
		return default(int);
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xAF64FC", Offset = "0xAF64FC", VA = "0xAF64FC")]
	public static TextAsset textAsset(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xAF6578", Offset = "0xAF6578", VA = "0xAF6578")]
	private TextAsset textAssetWithKey(string key)
	{
		return null;
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xAF66CC", Offset = "0xAF66CC", VA = "0xAF66CC")]
	public static bool hasTextAssetForKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xAF67CC", Offset = "0xAF67CC", VA = "0xAF67CC")]
	public static AnimationClip animationClip(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xAF6848", Offset = "0xAF6848", VA = "0xAF6848")]
	private AnimationClip animationClipWithKey(string key)
	{
		return null;
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xAF699C", Offset = "0xAF699C", VA = "0xAF699C")]
	private void debugTrackPoolOverruns(object note)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xAF6B54", Offset = "0xAF6B54", VA = "0xAF6B54")]
	public ObjectFactory()
	{
	}
}
[Token(Token = "0x20000F0")]
public sealed class PersistentListener : SingletonMono<PersistentListener>
{
	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioListener listener;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xB073FC", Offset = "0xB073FC", VA = "0xB073FC")]
	public static Vector3 position()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xB07488", Offset = "0xB07488", VA = "0xB07488")]
	public PersistentListener()
	{
	}
}
[Token(Token = "0x20000F1")]
public enum GameMode
{
	[Token(Token = "0x4000531")]
	Story = 0,
	[Token(Token = "0x4000532")]
	Infinite = 1,
	[Token(Token = "0x4000533")]
	Arcade = 2,
	[Token(Token = "0x4000534")]
	Tutorial = 3,
	[Token(Token = "0x4000535")]
	None = 99
}
[Token(Token = "0x20000F2")]
public enum GameDifficulty
{
	[Token(Token = "0x4000537")]
	Easy,
	[Token(Token = "0x4000538")]
	Medium,
	[Token(Token = "0x4000539")]
	Hard
}
[Token(Token = "0x20000F3")]
public class PlaytimeOverseer : SingletonMono<PlaytimeOverseer>
{
	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDCC0", Offset = "0x7CDCC0")]
	private sealed class <>c__DisplayClass106_0
	{
		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string startingPanel;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaytimeOverseer <>4__this;

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xA9DF94", Offset = "0xA9DF94", VA = "0xA9DF94")]
		public <>c__DisplayClass106_0()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xA9F818", Offset = "0xA9F818", VA = "0xA9F818")]
		internal void <firstTimeLoadIntoHub>b__0()
		{
		}
	}

	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDCD0", Offset = "0x7CDCD0")]
	private sealed class <>c__DisplayClass108_0
	{
		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isReturningFromTournament;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaytimeOverseer <>4__this;

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xA9F80C", Offset = "0xA9F80C", VA = "0xA9F80C")]
		public <>c__DisplayClass108_0()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xA9F854", Offset = "0xA9F854", VA = "0xA9F854")]
		internal void <OnWorldUnloadDone>b__1()
		{
		}
	}

	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDCE0", Offset = "0x7CDCE0")]
	private sealed class <>c__DisplayClass111_0
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AsyncOperationHandle<SceneInstance> handle;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlaytimeOverseer <>4__this;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action <>9__1;

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xA9E7B4", Offset = "0xA9E7B4", VA = "0xA9E7B4")]
		public <>c__DisplayClass111_0()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xA9F8CC", Offset = "0xA9F8CC", VA = "0xA9F8CC")]
		internal void <OnWorldLoadDone>b__0()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xA9FD24", Offset = "0xA9FD24", VA = "0xA9FD24")]
		internal void <OnWorldLoadDone>b__1()
		{
		}
	}

	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDCF0", Offset = "0x7CDCF0")]
	private sealed class <levelSpinUpRoutine>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isLaunchingLevel;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlaytimeOverseer <>4__this;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <popupId>5__2;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <popUpPosition>5__3;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private PopupTextType <textType>5__4;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0xAA0684", Offset = "0xAA0684", VA = "0xAA0684", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0xAA06EC", Offset = "0xAA06EC", VA = "0xAA06EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xA9EBD0", Offset = "0xA9EBD0", VA = "0xA9EBD0")]
		[DebuggerHidden]
		public <levelSpinUpRoutine>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xA9FDC4", Offset = "0xA9FDC4", VA = "0xA9FDC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xA9FDC8", Offset = "0xA9FDC8", VA = "0xA9FDC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xAA068C", Offset = "0xAA068C", VA = "0xAA068C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD00", Offset = "0x7CDD00")]
	private sealed class <runLevelDurationTimer>d__124 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaytimeOverseer <>4__this;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <nextArcadeTimeLeftPoint>5__3;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0xAA0A70", Offset = "0xAA0A70", VA = "0xAA0A70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017A6")]
			[Address(RVA = "0xAA0AD8", Offset = "0xAA0AD8", VA = "0xAA0AD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xA9EF08", Offset = "0xA9EF08", VA = "0xA9EF08")]
		[DebuggerHidden]
		public <runLevelDurationTimer>d__124(int <>1__state)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xAA06F4", Offset = "0xAA06F4", VA = "0xAA06F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xAA06F8", Offset = "0xAA06F8", VA = "0xAA06F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xAA0A78", Offset = "0xAA0A78", VA = "0xAA0A78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400053A")]
	private const string HubAmbientSoundKey = "ENV_Lobby_main_01";

	[Token(Token = "0x400053B")]
	private const float MinimumLoadTime = 3f;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material flashMaterial;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string defaultEnemyExplosion;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFB64", Offset = "0x7CFB64")]
	public float easyGameSpeed;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float mediumGameSpeed;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float hardGameSpeed;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFB9C", Offset = "0x7CFB9C")]
	public int easyPlayerHealth;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int mediumPlayerHealth;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int hardPlayerHealth;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFBD4", Offset = "0x7CFBD4")]
	public float timeAfterLoadToStartGameplay;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFC0C", Offset = "0x7CFC0C")]
	public float globalEnemyScaleModifier;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float globalBulletScaleModifier;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC44", Offset = "0x7CFC44")]
	private bool <isPlayingLevel>k__BackingField;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC54", Offset = "0x7CFC54")]
	private bool <isRunningSceneLoading>k__BackingField;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC64", Offset = "0x7CFC64")]
	private GameMode <currentGameMode>k__BackingField;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC74", Offset = "0x7CFC74")]
	private GameDifficulty <currentGameDifficulty>k__BackingField;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC84", Offset = "0x7CFC84")]
	private float <currentBulletKillHeight>k__BackingField;

	[Token(Token = "0x400054C")]
	private const float DefaultBulletKillHeight = -20f;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameStateList stateList;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PlayerController player;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasBooted;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool isGameplayPaused;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float currentGameplaySpeed;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameMode> unlockedGameModes;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SceneInstance terrainSceneInstance;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool justLoadedIntoWorld;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<string> keyLevelDebugEvents;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float loadingStartTime;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float lowestZPosition;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LightmapData[] hubLightmapData;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC94", Offset = "0x7CFC94")]
	private float <levelDurationSecs>k__BackingField;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFCA4", Offset = "0x7CFCA4")]
	private int <lifetimeEnemiesKilledStat>k__BackingField;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFCB4", Offset = "0x7CFCB4")]
	private int <lifetimeSaturnMissilesFiredStat>k__BackingField;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFCC4", Offset = "0x7CFCC4")]
	private long <lifetimeBulletsFiredStat>k__BackingField;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, GameMode> gameModeTypeMap;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<string, GameDifficulty> gameDifficultyTypeMap;

	[Token(Token = "0x17000030")]
	public bool isPlayingLevel
	{
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xA9B204", Offset = "0xA9B204", VA = "0xA9B204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6EFC", Offset = "0x7D6EFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xA9B20C", Offset = "0xA9B20C", VA = "0xA9B20C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6F0C", Offset = "0x7D6F0C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public bool isRunningSceneLoading
	{
		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xA9B218", Offset = "0xA9B218", VA = "0xA9B218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6F1C", Offset = "0x7D6F1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xA9B220", Offset = "0xA9B220", VA = "0xA9B220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6F2C", Offset = "0x7D6F2C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public GameMode currentGameMode
	{
		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xA9B22C", Offset = "0xA9B22C", VA = "0xA9B22C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6F3C", Offset = "0x7D6F3C")]
		get
		{
			return default(GameMode);
		}
		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xA9B234", Offset = "0xA9B234", VA = "0xA9B234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6F4C", Offset = "0x7D6F4C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public GameDifficulty currentGameDifficulty
	{
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xA9B23C", Offset = "0xA9B23C", VA = "0xA9B23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6F5C", Offset = "0x7D6F5C")]
		get
		{
			return default(GameDifficulty);
		}
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xA9B244", Offset = "0xA9B244", VA = "0xA9B244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6F6C", Offset = "0x7D6F6C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public float currentBulletKillHeight
	{
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xA9B24C", Offset = "0xA9B24C", VA = "0xA9B24C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6F7C", Offset = "0x7D6F7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xA9B254", Offset = "0xA9B254", VA = "0xA9B254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6F8C", Offset = "0x7D6F8C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public static Transform MusicPlayLocation
	{
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xA9B25C", Offset = "0xA9B25C", VA = "0xA9B25C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000036")]
	public float globalEnemyBulletSpeed
	{
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xA9B2DC", Offset = "0xA9B2DC", VA = "0xA9B2DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000037")]
	public float levelDurationSecs
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xA9B3FC", Offset = "0xA9B3FC", VA = "0xA9B3FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6F9C", Offset = "0x7D6F9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xA9B404", Offset = "0xA9B404", VA = "0xA9B404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6FAC", Offset = "0x7D6FAC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public int lifetimeEnemiesKilledStat
	{
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xA9B40C", Offset = "0xA9B40C", VA = "0xA9B40C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6FBC", Offset = "0x7D6FBC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xA9B414", Offset = "0xA9B414", VA = "0xA9B414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6FCC", Offset = "0x7D6FCC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public int lifetimeSaturnMissilesFiredStat
	{
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xA9B41C", Offset = "0xA9B41C", VA = "0xA9B41C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6FDC", Offset = "0x7D6FDC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xA9B424", Offset = "0xA9B424", VA = "0xA9B424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6FEC", Offset = "0x7D6FEC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public long lifetimeBulletsFiredStat
	{
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xA9B42C", Offset = "0xA9B42C", VA = "0xA9B42C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D6FFC", Offset = "0x7D6FFC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xA9B434", Offset = "0xA9B434", VA = "0xA9B434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D700C", Offset = "0x7D700C")]
		private set
		{
		}
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xA9B43C", Offset = "0xA9B43C", VA = "0xA9B43C")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xA9B510", Offset = "0xA9B510", VA = "0xA9B510")]
	private void loadState()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xA9BBB0", Offset = "0xA9BBB0", VA = "0xA9BBB0")]
	private void saveState()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xA98F50", Offset = "0xA98F50", VA = "0xA98F50")]
	public static PlayerController playerController()
	{
		return null;
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xA9BDE4", Offset = "0xA9BDE4", VA = "0xA9BDE4")]
	public static bool gameHasBooted()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xA9BE5C", Offset = "0xA9BE5C", VA = "0xA9BE5C")]
	public void pauseGamePlay(bool paused)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xA9BFBC", Offset = "0xA9BFBC", VA = "0xA9BFBC")]
	public bool gameIsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xA9BFC4", Offset = "0xA9BFC4", VA = "0xA9BFC4")]
	public void forceLevelEnd()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xA8F624", Offset = "0xA8F624", VA = "0xA8F624")]
	public void selectNewPilot(string pilotId, bool selectForTournament = false)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xA9BAC8", Offset = "0xA9BAC8", VA = "0xA9BAC8")]
	public void unlockGameMode(GameMode mode, bool saveUnlock = true)
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xA9BFC8", Offset = "0xA9BFC8", VA = "0xA9BFC8")]
	public void debugLockGameMode(GameMode mode)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xA9B8E8", Offset = "0xA9B8E8", VA = "0xA9B8E8")]
	public bool isGameModeFeatureInGame(GameMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xA9C0B4", Offset = "0xA9C0B4", VA = "0xA9C0B4")]
	public bool isGameModeUnlocked(GameMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xA9C13C", Offset = "0xA9C13C", VA = "0xA9C13C")]
	public static string getModeLocalisedName(GameMode mode)
	{
		return null;
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xA9C1EC", Offset = "0xA9C1EC", VA = "0xA9C1EC")]
	public bool isValidModeToUnlock(GameMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xA9C238", Offset = "0xA9C238", VA = "0xA9C238")]
	public void updateCurrentGameMode(GameMode mode)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xA9BAB0", Offset = "0xA9BAB0", VA = "0xA9BAB0")]
	public void updateCurrentDifficulty(GameDifficulty difficulty, bool doSave = true)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xA9C34C", Offset = "0xA9C34C", VA = "0xA9C34C")]
	public static string getLocalisedDifficultyName(GameDifficulty difficulty)
	{
		return null;
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xA9C420", Offset = "0xA9C420", VA = "0xA9C420")]
	public static string getLocalisedDifficultyDescription(GameDifficulty difficulty)
	{
		return null;
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xA9C4F4", Offset = "0xA9C4F4", VA = "0xA9C4F4")]
	public void resetPlayer(bool updateAudioMix = true)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xA9C660", Offset = "0xA9C660", VA = "0xA9C660")]
	public void startLevel()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xA9CA90", Offset = "0xA9CA90", VA = "0xA9CA90")]
	public void multiplyGameSpeed(float amount)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xA9C8F0", Offset = "0xA9C8F0", VA = "0xA9C8F0")]
	public void resetGameSpeed()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xA9CC20", Offset = "0xA9CC20", VA = "0xA9CC20")]
	public float getGameplayDelta(bool applyDifficulty = true)
	{
		return default(float);
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xA9CC50", Offset = "0xA9CC50", VA = "0xA9CC50")]
	public float getGameplaySpeed(bool applyDifficulty = true)
	{
		return default(float);
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xA9CD58", Offset = "0xA9CD58", VA = "0xA9CD58")]
	public float getBulletGameplaySpeed()
	{
		return default(float);
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xA9CD68", Offset = "0xA9CD68", VA = "0xA9CD68")]
	public float getBulletGameplayDelta()
	{
		return default(float);
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xA9C9B0", Offset = "0xA9C9B0", VA = "0xA9C9B0")]
	private int getPlayerHealthLevel()
	{
		return default(int);
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xA9CD98", Offset = "0xA9CD98", VA = "0xA9CD98")]
	public float getGunDelayMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xA9CE84", Offset = "0xA9CE84", VA = "0xA9CE84")]
	public float getSmallEnemyChanceToFire()
	{
		return default(float);
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xA9CF70", Offset = "0xA9CF70", VA = "0xA9CF70")]
	public void levelWasCompleted()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xA964FC", Offset = "0xA964FC", VA = "0xA964FC")]
	public void levelWasFailed()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xA9D298", Offset = "0xA9D298", VA = "0xA9D298")]
	private void showGameOver(bool isWin)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xA9D0F4", Offset = "0xA9D0F4", VA = "0xA9D0F4")]
	private void updateLifetimeStats()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xA9D450", Offset = "0xA9D450", VA = "0xA9D450")]
	public Vector3 offhandPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xA9D4FC", Offset = "0xA9D4FC", VA = "0xA9D4FC")]
	public float distanceToOffhandPosition(Vector3 position)
	{
		return default(float);
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xA9D5B0", Offset = "0xA9D5B0", VA = "0xA9D5B0")]
	public bool isPlayerAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xA9D5CC", Offset = "0xA9D5CC", VA = "0xA9D5CC")]
	public Vector3 playerPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xA9D678", Offset = "0xA9D678", VA = "0xA9D678")]
	public float getLowestZPositionThisLevel()
	{
		return default(float);
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xA9D6AC", Offset = "0xA9D6AC", VA = "0xA9D6AC")]
	public void loadIntoTutorial(bool fadeRequired)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xA9DD34", Offset = "0xA9DD34", VA = "0xA9DD34")]
	public void firstTimeLoadIntoHub(string startingPanel)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xA9E0FC", Offset = "0xA9E0FC", VA = "0xA9E0FC")]
	public void loadBackIntoHub()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xA9E32C", Offset = "0xA9E32C", VA = "0xA9E32C")]
	private void OnWorldUnloadDone(AsyncOperationHandle<SceneInstance> handle)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xA9D800", Offset = "0xA9D800", VA = "0xA9D800")]
	public void loadIntoWorld(bool doFade = true)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xA9E3E4", Offset = "0xA9E3E4", VA = "0xA9E3E4")]
	private void runLoadingSceneActions()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xA9E68C", Offset = "0xA9E68C", VA = "0xA9E68C")]
	private void OnWorldLoadDone(AsyncOperationHandle<SceneInstance> handle)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xA9DF9C", Offset = "0xA9DF9C", VA = "0xA9DF9C")]
	private void onBeginSceneLoadingSteps(float fadeTime)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xA9E7BC", Offset = "0xA9E7BC", VA = "0xA9E7BC")]
	private void onSceneLoadingCompleteEffects(bool isLoadingIntoGameHub)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xA9E840", Offset = "0xA9E840", VA = "0xA9E840")]
	private bool isReadyToFinishSceneLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xA9E878", Offset = "0xA9E878", VA = "0xA9E878")]
	public void runPregameProcess()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xA9EAA8", Offset = "0xA9EAA8", VA = "0xA9EAA8")]
	public void fakePregameProcess()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xA9EB38", Offset = "0xA9EB38", VA = "0xA9EB38")]
	public bool doesPlayerNeedSpawning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xA9EA18", Offset = "0xA9EA18", VA = "0xA9EA18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D701C", Offset = "0x7D701C")]
	private IEnumerator levelSpinUpRoutine(bool isLaunchingLevel = true)
	{
		return null;
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xA9EBFC", Offset = "0xA9EBFC", VA = "0xA9EBFC")]
	public bool isSpaceLevelFinalBattleActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xA9E980", Offset = "0xA9E980", VA = "0xA9E980")]
	public bool isStoryFinale()
	{
		return default(bool);
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xA9EC20", Offset = "0xA9EC20", VA = "0xA9EC20")]
	public bool isSpaceLevelFinalBattleUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xA9ED2C", Offset = "0xA9ED2C", VA = "0xA9ED2C")]
	public void debugHubSceneActive(bool isActive)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xA9ED34", Offset = "0xA9ED34", VA = "0xA9ED34")]
	private void setHubSceneActiveState(bool isActive)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xA9EE8C", Offset = "0xA9EE8C", VA = "0xA9EE8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7080", Offset = "0x7D7080")]
	private IEnumerator runLevelDurationTimer()
	{
		return null;
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xA9E060", Offset = "0xA9E060", VA = "0xA9E060")]
	public void playHubAmbientSounds()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xA9C9AC", Offset = "0xA9C9AC", VA = "0xA9C9AC")]
	public void trackGameplayLevelEvent(string message)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xA9D44C", Offset = "0xA9D44C", VA = "0xA9D44C")]
	private void printLevelReport()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xA9B7E0", Offset = "0xA9B7E0", VA = "0xA9B7E0")]
	public static GameMode fastParseGameMode(string raw, GameMode defaultType = GameMode.None)
	{
		return default(GameMode);
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xA9B9A8", Offset = "0xA9B9A8", VA = "0xA9B9A8")]
	public static GameDifficulty fastParseGameDifficulty(string raw, GameDifficulty defaultType = GameDifficulty.Medium)
	{
		return default(GameDifficulty);
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xA9EF34", Offset = "0xA9EF34", VA = "0xA9EF34")]
	public PlaytimeOverseer()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xA9F2F8", Offset = "0xA9F2F8", VA = "0xA9F2F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D70E4", Offset = "0x7D70E4")]
	private void <startLevel>b__86_0()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xA9F324", Offset = "0xA9F324", VA = "0xA9F324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D70F4", Offset = "0x7D70F4")]
	private void <loadBackIntoHub>b__107_0()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xA9F510", Offset = "0xA9F510", VA = "0xA9F510")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7104", Offset = "0x7D7104")]
	private void <OnWorldUnloadDone>b__108_0()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xA9F814", Offset = "0xA9F814", VA = "0xA9F814")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7114", Offset = "0x7D7114")]
	private void <loadIntoWorld>b__109_0()
	{
	}
}
[Token(Token = "0x20000F4")]
public class PoolableParticleSystem : MonoBehaviour
{
	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem theSystem;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string soundEvent;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform sourceTransform;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float totalDuration;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action completion;

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xAA0B8C", Offset = "0xAA0B8C", VA = "0xAA0B8C", Slot = "4")]
	public virtual void startSystem(bool autoReturnToPool)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xAA0CC0", Offset = "0xAA0CC0", VA = "0xAA0CC0")]
	public void returnSelfToPool()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xAA0CDC", Offset = "0xAA0CDC", VA = "0xAA0CDC", Slot = "5")]
	public virtual void setSource(Transform source, float rotation = 0f, float zOffset = -5f)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xAA0E10", Offset = "0xAA0E10", VA = "0xAA0E10", Slot = "6")]
	public virtual void childToSource(Transform source, float rotation = 0f, float zOffset = -1f)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xAA0F78", Offset = "0xAA0F78", VA = "0xAA0F78")]
	public void setSystemScale(float scale)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xAA1048", Offset = "0xAA1048", VA = "0xAA1048")]
	public PoolableParticleSystem()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xAA1058", Offset = "0xAA1058", VA = "0xAA1058")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7124", Offset = "0x7D7124")]
	private void <startSystem>b__5_0()
	{
	}
}
[Token(Token = "0x20000F5")]
public class PostProcessingController : SingletonMono<PostProcessingController>
{
	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Volume volume;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask renderAll;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask hideSkyBoxLayer;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ColorLookup colorLookup;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ColorCurves colorCurves;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bloom bloom;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vignette vignette;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UniversalAdditionalCameraData cameraData;

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xAA2DD8", Offset = "0xAA2DD8", VA = "0xAA2DD8")]
	public void updateAdditionalGraphicsSettings(AntiAliasingSetting antiAliasingSetting, bool isPostProcessingEnabled, bool isBloomEnabled, bool isColorGradingEnabled, bool isVignetteEnabled, bool DelMarPostFX = false)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xAA3154", Offset = "0xAA3154", VA = "0xAA3154")]
	private void toggleColorGrading(bool isEnabled)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xAA3094", Offset = "0xAA3094", VA = "0xAA3094")]
	private void toggleBloom(bool isEnabled)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xAA3214", Offset = "0xAA3214", VA = "0xAA3214")]
	private void toggleVignette(bool isEnabled)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xAA32B4", Offset = "0xAA32B4", VA = "0xAA32B4")]
	private void cacheColorGrading()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xAA337C", Offset = "0xAA337C", VA = "0xAA337C")]
	private void cacheBloom()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xAA3444", Offset = "0xAA3444", VA = "0xAA3444")]
	private void cacheVignette()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xAA350C", Offset = "0xAA350C", VA = "0xAA350C")]
	public PostProcessingController()
	{
	}
}
[Token(Token = "0x20000F6")]
public sealed class RateMeController : SingletonMono<RateMeController>
{
	[Token(Token = "0x400056C")]
	private const int BaseLevelIncrement = 5;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameStateList stateList;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameStateFlags stateFlags;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool userDeclinedPermission;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool userNeedsRateReward;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string lastRatedVersion;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DateTime lastPromptedDate;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastPromptedLevel;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string urlConfigKey;

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xAC1AE0", Offset = "0xAC1AE0", VA = "0xAC1AE0")]
	public static void showRateMeSite()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xAC1B90", Offset = "0xAC1B90", VA = "0xAC1B90")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xAC1D38", Offset = "0xAC1D38", VA = "0xAC1D38")]
	private void saveState()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xAC1E8C", Offset = "0xAC1E8C", VA = "0xAC1E8C")]
	private string choppedVersion(string raw)
	{
		return null;
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xAC1EC0", Offset = "0xAC1EC0", VA = "0xAC1EC0")]
	private bool userHasRatedCurrentVersion()
	{
		return default(bool);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xAC1F58", Offset = "0xAC1F58", VA = "0xAC1F58")]
	public bool canShowRatePanelAfterLevelWin(int levelCompleted)
	{
		return default(bool);
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xAC20B8", Offset = "0xAC20B8", VA = "0xAC20B8")]
	public void showRateMe(int levelCompleted)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xAC2124", Offset = "0xAC2124", VA = "0xAC2124")]
	private void userWasPrompted(int levelCompleted)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xAC21A4", Offset = "0xAC21A4", VA = "0xAC21A4")]
	public void userDeclined()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xAC2230", Offset = "0xAC2230", VA = "0xAC2230")]
	public void userAgreedToRate()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xAC22C4", Offset = "0xAC22C4", VA = "0xAC22C4")]
	public bool shouldRewardUser()
	{
		return default(bool);
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xAC22CC", Offset = "0xAC22CC", VA = "0xAC22CC")]
	public void rewardUser()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xAC2020", Offset = "0xAC2020", VA = "0xAC2020")]
	private int getNextLevelToPromptInSequence()
	{
		return default(int);
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xAC2360", Offset = "0xAC2360", VA = "0xAC2360")]
	public RateMeController()
	{
	}
}
[Token(Token = "0x20000F7")]
public sealed class RateMeControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x6000741")]
	[Address(RVA = "0xAC2404", Offset = "0xAC2404", VA = "0xAC2404", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xAC250C", Offset = "0xAC250C", VA = "0xAC250C")]
	public RateMeControllerBooter()
	{
	}
}
[Token(Token = "0x20000F8")]
public sealed class ResolutionController : BootableMonoBehaviour
{
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float screenWidth;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform canvasRect;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CanvasScaler scaler;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool didBoot;

	[Token(Token = "0x4000579")]
	private const float superThinMinRatio = 0.5625f;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFCD4", Offset = "0x7CFCD4")]
	private static bool <isWideScreen>k__BackingField;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFCE4", Offset = "0x7CFCE4")]
	private static bool <isSuperThin>k__BackingField;

	[Token(Token = "0x1700003B")]
	public static bool isWideScreen
	{
		[Token(Token = "0x6000743")]
		[Address(RVA = "0xAC2C0C", Offset = "0xAC2C0C", VA = "0xAC2C0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7134", Offset = "0x7D7134")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000744")]
		[Address(RVA = "0xAC2C5C", Offset = "0xAC2C5C", VA = "0xAC2C5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7144", Offset = "0x7D7144")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public static bool isSuperThin
	{
		[Token(Token = "0x6000745")]
		[Address(RVA = "0xAC2CB4", Offset = "0xAC2CB4", VA = "0xAC2CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7154", Offset = "0x7D7154")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000746")]
		[Address(RVA = "0xAC2D04", Offset = "0xAC2D04", VA = "0xAC2D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7164", Offset = "0x7D7164")]
		private set
		{
		}
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xAC2D5C", Offset = "0xAC2D5C", VA = "0xAC2D5C", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xAC2E98", Offset = "0xAC2E98", VA = "0xAC2E98")]
	public void updateUIScaler()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xAC3054", Offset = "0xAC3054", VA = "0xAC3054")]
	private void Update()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xAC3184", Offset = "0xAC3184", VA = "0xAC3184")]
	public ResolutionController()
	{
	}
}
[Token(Token = "0x20000F9")]
public enum PlayerSegment
{
	[Token(Token = "0x400057D")]
	unknown = -1,
	[Token(Token = "0x400057E")]
	buyer,
	[Token(Token = "0x400057F")]
	menuBarBonusAd,
	[Token(Token = "0x4000580")]
	hasEverLoggedIntoFacebook,
	[Token(Token = "0x4000581")]
	hasFailedAtLeastOneLevel
}
[Token(Token = "0x20000FA")]
public sealed class SegmentController : SingletonMono<SegmentController>, IPauseable
{
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameStateFlags stateFlags;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameStateList stateList;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFCF4", Offset = "0x7CFCF4")]
	private int <bootCount>k__BackingField;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD04", Offset = "0x7CFD04")]
	private int <gamesStarted>k__BackingField;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD14", Offset = "0x7CFD14")]
	private int <gamesEnded>k__BackingField;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD24", Offset = "0x7CFD24")]
	private int <gamesEndedSinceLastAd>k__BackingField;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD34", Offset = "0x7CFD34")]
	private int <gamesStartedThisSession>k__BackingField;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD44", Offset = "0x7CFD44")]
	private int <gamesEndedThisSession>k__BackingField;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD54", Offset = "0x7CFD54")]
	private int <freeGiftsAwarded>k__BackingField;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD64", Offset = "0x7CFD64")]
	private List<int> <levelAttempts>k__BackingField;

	[Token(Token = "0x1700003D")]
	public int bootCount
	{
		[Token(Token = "0x600074B")]
		[Address(RVA = "0xACDC68", Offset = "0xACDC68", VA = "0xACDC68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7174", Offset = "0x7D7174")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600074C")]
		[Address(RVA = "0xACDC70", Offset = "0xACDC70", VA = "0xACDC70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7184", Offset = "0x7D7184")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public int gamesStarted
	{
		[Token(Token = "0x600074D")]
		[Address(RVA = "0xACDC78", Offset = "0xACDC78", VA = "0xACDC78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7194", Offset = "0x7D7194")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600074E")]
		[Address(RVA = "0xACDC80", Offset = "0xACDC80", VA = "0xACDC80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D71A4", Offset = "0x7D71A4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public int gamesEnded
	{
		[Token(Token = "0x600074F")]
		[Address(RVA = "0xACDC88", Offset = "0xACDC88", VA = "0xACDC88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D71B4", Offset = "0x7D71B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000750")]
		[Address(RVA = "0xACDC90", Offset = "0xACDC90", VA = "0xACDC90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D71C4", Offset = "0x7D71C4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public int gamesEndedSinceLastAd
	{
		[Token(Token = "0x6000751")]
		[Address(RVA = "0xACDC98", Offset = "0xACDC98", VA = "0xACDC98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D71D4", Offset = "0x7D71D4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000752")]
		[Address(RVA = "0xACDCA0", Offset = "0xACDCA0", VA = "0xACDCA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D71E4", Offset = "0x7D71E4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public int gamesStartedThisSession
	{
		[Token(Token = "0x6000753")]
		[Address(RVA = "0xACDCA8", Offset = "0xACDCA8", VA = "0xACDCA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D71F4", Offset = "0x7D71F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000754")]
		[Address(RVA = "0xACDCB0", Offset = "0xACDCB0", VA = "0xACDCB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7204", Offset = "0x7D7204")]
		private set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public int gamesEndedThisSession
	{
		[Token(Token = "0x6000755")]
		[Address(RVA = "0xACDCB8", Offset = "0xACDCB8", VA = "0xACDCB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7214", Offset = "0x7D7214")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000756")]
		[Address(RVA = "0xACDCC0", Offset = "0xACDCC0", VA = "0xACDCC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7224", Offset = "0x7D7224")]
		private set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public int freeGiftsAwarded
	{
		[Token(Token = "0x6000757")]
		[Address(RVA = "0xACDCC8", Offset = "0xACDCC8", VA = "0xACDCC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7234", Offset = "0x7D7234")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000758")]
		[Address(RVA = "0xACDCD0", Offset = "0xACDCD0", VA = "0xACDCD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7244", Offset = "0x7D7244")]
		private set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public List<int> levelAttempts
	{
		[Token(Token = "0x6000759")]
		[Address(RVA = "0xACDCD8", Offset = "0xACDCD8", VA = "0xACDCD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7254", Offset = "0x7D7254")]
		get
		{
			return null;
		}
		[Token(Token = "0x600075A")]
		[Address(RVA = "0xACDCE0", Offset = "0xACDCE0", VA = "0xACDCE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7264", Offset = "0x7D7264")]
		private set
		{
		}
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xACDCE8", Offset = "0xACDCE8", VA = "0xACDCE8")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xACDF8C", Offset = "0xACDF8C", VA = "0xACDF8C", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xACE038", Offset = "0xACE038", VA = "0xACE038")]
	private void resetSessionStats()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xACDDD4", Offset = "0xACDDD4", VA = "0xACDDD4")]
	private void loadState()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xACE040", Offset = "0xACE040", VA = "0xACE040")]
	public void clearState()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xACE07C", Offset = "0xACE07C", VA = "0xACE07C")]
	private void saveState()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xACE284", Offset = "0xACE284", VA = "0xACE284", Slot = "7")]
	public void prepareForPause()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xACE288", Offset = "0xACE288", VA = "0xACE288", Slot = "8")]
	public void appDidReturnFromPause()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xACE28C", Offset = "0xACE28C", VA = "0xACE28C")]
	public void attemptLevel(int levelNumber)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xACE370", Offset = "0xACE370", VA = "0xACE370")]
	public int numberOfAttempts(int levelNumber)
	{
		return default(int);
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xACE3FC", Offset = "0xACE3FC", VA = "0xACE3FC")]
	public static bool isPlayerInSegment(PlayerSegment segment)
	{
		return default(bool);
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xACE484", Offset = "0xACE484", VA = "0xACE484")]
	public static void setPlayerInSegment(PlayerSegment segment)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xACE520", Offset = "0xACE520", VA = "0xACE520")]
	public static void appDidBoot()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xACE5D4", Offset = "0xACE5D4", VA = "0xACE5D4")]
	public static void gameDidStart(int levelNumber, string levelID)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xACE6C8", Offset = "0xACE6C8", VA = "0xACE6C8")]
	public static void gameDidEnd()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xACE784", Offset = "0xACE784", VA = "0xACE784")]
	public static void adDidComplete()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xACE7FC", Offset = "0xACE7FC", VA = "0xACE7FC")]
	public static bool gamedEndedSinceLastAdHasElapsed()
	{
		return default(bool);
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xACE93C", Offset = "0xACE93C", VA = "0xACE93C")]
	public static void freeGiftDidAward()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xACE9C8", Offset = "0xACE9C8", VA = "0xACE9C8")]
	public SegmentController()
	{
	}
}
[Token(Token = "0x20000FB")]
public sealed class SegmentControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SegmentController itemToBoot;

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xACEA70", Offset = "0xACEA70", VA = "0xACEA70", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xACEBC4", Offset = "0xACEBC4", VA = "0xACEBC4")]
	public SegmentControllerBooter()
	{
	}
}
[Token(Token = "0x20000FC")]
public sealed class ShareCamera : SingletonMono<ShareCamera>
{
	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera theCamera;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform canvasRect;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGImage imageSVG;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text scoreLabel;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text levelLabel;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int captureWidth;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int captureHeight;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject scoreBackground;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject levelBackground;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject logo;

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xB5DE18", Offset = "0xB5DE18", VA = "0xB5DE18")]
	public static void screenShot(int score, int level, [Optional] SVGAsset svgAsset, [Optional] Action<bool> completionCallback)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xB5DEBC", Offset = "0xB5DEBC", VA = "0xB5DEBC")]
	private void takeScreenShot(int score, int level, [Optional] SVGAsset svgAsset, [Optional] Action<bool> completionCallback)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xB5E094", Offset = "0xB5E094", VA = "0xB5E094")]
	public void adjustCamera()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xB5E2B0", Offset = "0xB5E2B0", VA = "0xB5E2B0")]
	public ShareCamera()
	{
	}
}
[Token(Token = "0x20000FD")]
public sealed class ShareController : SingletonMono<ShareController>
{
	[Token(Token = "0x2000312")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD10", Offset = "0x7CDD10")]
	private sealed class <DoCaptureScreenshot>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera cameraToCapture;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int captureWidth;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int captureHeight;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<bool> completionCallback;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0xB5ED50", Offset = "0xB5ED50", VA = "0xB5ED50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0xB5EDB8", Offset = "0xB5EDB8", VA = "0xB5EDB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xB5E674", Offset = "0xB5E674", VA = "0xB5E674")]
		[DebuggerHidden]
		public <DoCaptureScreenshot>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xB5E710", Offset = "0xB5E710", VA = "0xB5E710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xB5E714", Offset = "0xB5E714", VA = "0xB5E714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xB5ED58", Offset = "0xB5ED58", VA = "0xB5ED58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000597")]
	private const string captureFilename = "ShareImage.png";

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xB5E328", Offset = "0xB5E328", VA = "0xB5E328")]
	public static bool IsSupportedPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xB5E398", Offset = "0xB5E398", VA = "0xB5E398")]
	public static void CaptureScreenshot(Action<bool> completionCallback)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xB5E3D8", Offset = "0xB5E3D8", VA = "0xB5E3D8")]
	public static void CaptureScreenshot(Camera cameraToCapture, Action<bool> completionCallback)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xB5E1E8", Offset = "0xB5E1E8", VA = "0xB5E1E8")]
	public static void CaptureScreenshot(Camera cameraToCapture, int captureWidth, int captureHeight, Action<bool> completionCallback)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xB5E4D0", Offset = "0xB5E4D0", VA = "0xB5E4D0")]
	public static void ShareScreenshot(string shareText)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xB5E424", Offset = "0xB5E424", VA = "0xB5E424")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7274", Offset = "0x7D7274")]
	private IEnumerator DoCaptureScreenshot(Camera cameraToCapture, int captureWidth, int captureHeight, Action<bool> completionCallback)
	{
		return null;
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xB5E6A0", Offset = "0xB5E6A0", VA = "0xB5E6A0")]
	public ShareController()
	{
	}
}
[Token(Token = "0x20000FE")]
public class Shooty1LevelConverter
{
	[Token(Token = "0x600077B")]
	[Address(RVA = "0xB5F348", Offset = "0xB5F348", VA = "0xB5F348")]
	public string convertLevel(string raw)
	{
		return null;
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xB5F3C4", Offset = "0xB5F3C4", VA = "0xB5F3C4")]
	public Shooty1LevelConverter()
	{
	}
}
[Token(Token = "0x20000FF")]
public sealed class SvgLibrary : SingletonMono<SvgLibrary>
{
	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "AssetProxyListAttribute", RVA = "0x7CFD74", Offset = "0x7CFD74")]
	public AssetProxy svgs;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, SVGAsset> assetMap;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xA13880", Offset = "0xA13880", VA = "0xA13880")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xA13924", Offset = "0xA13924", VA = "0xA13924")]
	public static SVGAsset svgWithName(string svgName)
	{
		return null;
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xA139D4", Offset = "0xA139D4", VA = "0xA139D4")]
	public SvgLibrary()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xA13AEC", Offset = "0xA13AEC", VA = "0xA13AEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D72D8", Offset = "0x7D72D8")]
	private void <bootstrap>b__2_0(AssetProxyListSvgs asset)
	{
	}
}
[Token(Token = "0x2000100")]
public sealed class SvgLibraryBooter : BootableMonoBehaviour
{
	[Token(Token = "0x6000781")]
	[Address(RVA = "0xA13CD0", Offset = "0xA13CD0", VA = "0xA13CD0", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xA13D58", Offset = "0xA13D58", VA = "0xA13D58")]
	public SvgLibraryBooter()
	{
	}
}
[Token(Token = "0x2000101")]
public sealed class TimeController : BootableMonoBehaviour
{
	[Token(Token = "0x400059A")]
	private const float SecondsInAMinute = 60f;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<MTimer> allTimers;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool needsSimulation;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<MTimer> timersToSimulate;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TimeController sharedInstance;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double totalElapsedGameTime;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public double totalElapsedRealTime;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public double totalElapsedSessionTime;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public double totalElapsedLevelTime;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isTimingLevel;

	[Token(Token = "0x40005A4")]
	private const string elapsedKey = "tce";

	[Token(Token = "0x40005A5")]
	private const string elapsedRealKey = "tcre";

	[Token(Token = "0x40005A6")]
	private const string lkgTimeStampkey = "tclkg";

	[Token(Token = "0x40005A7")]
	private const string timestampKey = "ts1";

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string TimeShenanigansKey;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool doIncrement;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool firstTime;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timestampCountdown;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DateTime now;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TimeSpan timeAway;

	[Token(Token = "0x40005AE")]
	private const string DateTimeFormat = "yyyy-MM-dd hh:mm:ss tt";

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly CultureInfo DateTimeCulture;

	[Token(Token = "0x17000045")]
	public static TimeController instance
	{
		[Token(Token = "0x6000783")]
		[Address(RVA = "0xA16EE8", Offset = "0xA16EE8", VA = "0xA16EE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xA1706C", Offset = "0xA1706C", VA = "0xA1706C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xA17150", Offset = "0xA17150", VA = "0xA17150")]
	private void clearLists()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xA171C0", Offset = "0xA171C0", VA = "0xA171C0", Slot = "4")]
	public override void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xA171E4", Offset = "0xA171E4", VA = "0xA171E4", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xA17484", Offset = "0xA17484", VA = "0xA17484")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xA17554", Offset = "0xA17554", VA = "0xA17554")]
	public static void startTimer(MTimer theTimer)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xA176C0", Offset = "0xA176C0", VA = "0xA176C0")]
	public void resetSimulationMarker(bool needToSimulate = true)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xA17734", Offset = "0xA17734", VA = "0xA17734")]
	public static DateTime notificationTimeTomorrow(int minTimeRange = 11, int maxTimeRange = 17)
	{
		return default(DateTime);
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xA177EC", Offset = "0xA177EC", VA = "0xA177EC")]
	public static void setNormalTimeScale(float scale)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xA17878", Offset = "0xA17878", VA = "0xA17878")]
	public static void setTimeToNormal()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xA178F0", Offset = "0xA178F0", VA = "0xA178F0")]
	public static void fastForwardTime()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xA17968", Offset = "0xA17968", VA = "0xA17968")]
	public static bool isFastForwardActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xA179F8", Offset = "0xA179F8", VA = "0xA179F8")]
	public static TimeSpan timeUntilLocalMiddayTomorrow()
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xA17B4C", Offset = "0xA17B4C", VA = "0xA17B4C")]
	public static TimeSpan timeUntilMidnight()
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xA17C28", Offset = "0xA17C28", VA = "0xA17C28")]
	public string timeTillEndOfDayString()
	{
		return null;
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xA17DB4", Offset = "0xA17DB4", VA = "0xA17DB4")]
	public static int GetTodayInt()
	{
		return default(int);
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xA17E44", Offset = "0xA17E44", VA = "0xA17E44")]
	public static int GetTodayInt(TimeSpan withOffset)
	{
		return default(int);
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xA17F00", Offset = "0xA17F00", VA = "0xA17F00")]
	private static int GetIntForDate(DateTime date)
	{
		return default(int);
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xA17F64", Offset = "0xA17F64", VA = "0xA17F64")]
	public static int GetTodayIntWithoutYear()
	{
		return default(int);
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xA1800C", Offset = "0xA1800C", VA = "0xA1800C")]
	public static int GetDaysSinceEpochInt()
	{
		return default(int);
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xA180F0", Offset = "0xA180F0", VA = "0xA180F0")]
	public static void endTimer(MTimer theTimer)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xA1817C", Offset = "0xA1817C", VA = "0xA1817C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xA184B4", Offset = "0xA184B4", VA = "0xA184B4")]
	public void incrementAllTimers(int hours, int minutes, int seconds)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xA18240", Offset = "0xA18240", VA = "0xA18240")]
	public void incrementAllTimers(float seconds)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xA184F8", Offset = "0xA184F8", VA = "0xA184F8")]
	public int elapsedRealSeconds()
	{
		return default(int);
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xA18504", Offset = "0xA18504", VA = "0xA18504")]
	public float elapsedRealMinutes()
	{
		return default(float);
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xA1851C", Offset = "0xA1851C", VA = "0xA1851C")]
	public int elapsedGameSeconds()
	{
		return default(int);
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xA18528", Offset = "0xA18528", VA = "0xA18528")]
	public float elapsedGameMinutes()
	{
		return default(float);
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xA18540", Offset = "0xA18540", VA = "0xA18540")]
	public float elapsedSessionMinutes()
	{
		return default(float);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xA18558", Offset = "0xA18558", VA = "0xA18558")]
	public int elapsedLevelSeconds()
	{
		return default(int);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xA18564", Offset = "0xA18564", VA = "0xA18564")]
	public void prepareForPause()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xA17AEC", Offset = "0xA17AEC", VA = "0xA17AEC")]
	public static DateTime timeNow()
	{
		return default(DateTime);
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xA18568", Offset = "0xA18568", VA = "0xA18568")]
	public string timeTillEndOfUTCDayString()
	{
		return null;
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xA18758", Offset = "0xA18758", VA = "0xA18758")]
	public static DateTime getNextSensibleTimeOfDay(DateTime theTime)
	{
		return default(DateTime);
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xA182F8", Offset = "0xA182F8", VA = "0xA182F8")]
	private void saveTimeStamps()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xA1889C", Offset = "0xA1889C", VA = "0xA1889C")]
	public void appDidReturnFromPause()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xA18AF0", Offset = "0xA18AF0", VA = "0xA18AF0")]
	public void whileYouWereAway(TimeSpan timeAway)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xA18BC8", Offset = "0xA18BC8", VA = "0xA18BC8")]
	private void startAwaySimulation(float totalSeconds)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xA18CAC", Offset = "0xA18CAC", VA = "0xA18CAC")]
	private void resetSessionStats()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xA18C44", Offset = "0xA18C44", VA = "0xA18C44")]
	private void incrementAwayTime(float secondsAway)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xA18D30", Offset = "0xA18D30", VA = "0xA18D30")]
	private void cloudTimeHasBeenMessedWith()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xA18E5C", Offset = "0xA18E5C", VA = "0xA18E5C")]
	public static string howLongAgo(string rawTimestamp)
	{
		return null;
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xA18FC0", Offset = "0xA18FC0", VA = "0xA18FC0")]
	public static string howLongAgo(TimeSpan span)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xA19138", Offset = "0xA19138", VA = "0xA19138")]
	public static DateTime parseDate(string dateTimeString, string format = "yyyy-MM-dd hh:mm:ss tt")
	{
		return default(DateTime);
	}

	[MethodImpl(256)]
	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xA1927C", Offset = "0xA1927C", VA = "0xA1927C")]
	public static string getTimeUntilTimerEndsString(MTimer timer)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xA196BC", Offset = "0xA196BC", VA = "0xA196BC")]
	public static string getTimeUntilString(DateTime date)
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xA19334", Offset = "0xA19334", VA = "0xA19334")]
	public static string getTimeUntilTimespanEndsString(TimeSpan time)
	{
		return null;
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xA19788", Offset = "0xA19788", VA = "0xA19788")]
	public static string getLocalisedNameForMonth(DateTime dateTime)
	{
		return null;
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xA19AE8", Offset = "0xA19AE8", VA = "0xA19AE8")]
	public TimeController()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xA19C84", Offset = "0xA19C84", VA = "0xA19C84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D72E8", Offset = "0x7D72E8")]
	private void <bootstrapDidComplete>b__22_0()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xA19C90", Offset = "0xA19C90", VA = "0xA19C90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D72F8", Offset = "0x7D72F8")]
	private void <bootstrapDidComplete>b__22_1()
	{
	}
}
[Token(Token = "0x2000102")]
public enum WaveTickActionType
{
	[Token(Token = "0x40005B1")]
	none = 0,
	[Token(Token = "0x40005B2")]
	waitForClear = 1,
	[Token(Token = "0x40005B3")]
	waitForTicks = 2,
	[Token(Token = "0x40005B4")]
	waitForLast = 3,
	[Token(Token = "0x40005B5")]
	spawn = 4,
	[Token(Token = "0x40005B6")]
	fleetSpawn = 5,
	[Token(Token = "0x40005B7")]
	powerupSpawn = 6,
	[Token(Token = "0x40005B8")]
	levelCheckpoint = 7,
	[Token(Token = "0x40005B9")]
	gunUpgradeSpawn = 8,
	[Token(Token = "0x40005BA")]
	scoreMultiplier = 10,
	[Token(Token = "0x40005BB")]
	bossCallout = 9,
	[Token(Token = "0x40005BC")]
	waitForTutorialStep = 90,
	[Token(Token = "0x40005BD")]
	tutorialMessage = 91,
	[Token(Token = "0x40005BE")]
	progressTheTutorial = 92
}
[Serializable]
[Token(Token = "0x2000103")]
public class WaveTickAction : IComparable
{
	[Serializable]
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD20", Offset = "0x7CDD20")]
	private sealed class <>c
	{
		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<string> <>9__18_0;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<string> <>9__18_1;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<string> <>9__28_0;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<string> <>9__29_0;

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x13CD3D8", Offset = "0x13CD3D8", VA = "0x13CD3D8")]
		public <>c()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x13CD3E0", Offset = "0x13CD3E0", VA = "0x13CD3E0")]
		internal bool <setLoiterCount>b__18_0(string arg)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x13CD43C", Offset = "0x13CD43C", VA = "0x13CD43C")]
		internal bool <setLoiterCount>b__18_1(string arg)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x13CD498", Offset = "0x13CD498", VA = "0x13CD498")]
		internal bool <setHeightOverride>b__28_0(string arg)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x13CD4F4", Offset = "0x13CD4F4", VA = "0x13CD4F4")]
		internal bool <updateGunOverride>b__29_0(string arg)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD30", Offset = "0x7CDD30")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moveType;

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x13CC808", Offset = "0x13CC808", VA = "0x13CC808")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x13CD550", Offset = "0x13CD550", VA = "0x13CD550")]
		internal bool <hasMoveArg>b__0(string arg)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD40", Offset = "0x7CDD40")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moveType;

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x13CCA60", Offset = "0x13CCA60", VA = "0x13CCA60")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x13CD5C8", Offset = "0x13CD5C8", VA = "0x13CD5C8")]
		internal bool <updateMoveArg>b__0(string arg)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40005BF")]
	public const string GunIdArgPrefix = "gunOverride";

	[Token(Token = "0x40005C0")]
	public const string LoiterArgPrefix = "loiter";

	[Token(Token = "0x40005C1")]
	public const string HeightOverrideArgPrefix = "heightOverride";

	[Token(Token = "0x40005C2")]
	public const string WiggleMoveSuffix = "wiggle";

	[Token(Token = "0x40005C3")]
	public const string TrackToPlayerMoveSuffix = "trackToPlayer";

	[Token(Token = "0x40005C4")]
	public const string SplineJumpingSuffix = "jumpBetweenSplines";

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WaveTickActionType actionType;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int count;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string spawnPoint;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string objectKey;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string fleetTemplate;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int fleetIndex;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> spawnArgs;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, WaveTickActionType> waveTickActionTypeMap;

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x13CB91C", Offset = "0x13CB91C", VA = "0x13CB91C")]
	public WaveTickAction(Command theCommand)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x13CBD54", Offset = "0x13CBD54", VA = "0x13CBD54")]
	public WaveTickAction(WaveTickActionType theAction, int num = 0, [Optional] string spawn, [Optional] string obj)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x13CBE14", Offset = "0x13CBE14", VA = "0x13CBE14")]
	public WaveTickAction makeCopy()
	{
		return null;
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x13CBEC4", Offset = "0x13CBEC4", VA = "0x13CBEC4")]
	public string exportString()
	{
		return null;
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x13CC25C", Offset = "0x13CC25C", VA = "0x13CC25C")]
	public int getLoiterCount()
	{
		return default(int);
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x13CC398", Offset = "0x13CC398", VA = "0x13CC398")]
	public void setLoiterCount(int count)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x13CC648", Offset = "0x13CC648", VA = "0x13CC648")]
	public bool isWiggleMoveEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x13CC768", Offset = "0x13CC768", VA = "0x13CC768")]
	public bool isTrackToPlayerEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x13CC7B8", Offset = "0x13CC7B8", VA = "0x13CC7B8")]
	public bool isSplineJumpingEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x13CC698", Offset = "0x13CC698", VA = "0x13CC698")]
	private bool hasMoveArg(string moveType)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x13CC810", Offset = "0x13CC810", VA = "0x13CC810")]
	public void setWiggleMoveState(bool isEnabled)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x13CC9A0", Offset = "0x13CC9A0", VA = "0x13CC9A0")]
	public void setTrackToPlayer(bool isEnabled)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x13CCA00", Offset = "0x13CCA00", VA = "0x13CCA00")]
	public void setSplineJumping(bool isEnabled)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x13CC870", Offset = "0x13CC870", VA = "0x13CC870")]
	private void updateMoveArg(string moveType, bool isEnabled)
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x13CCA68", Offset = "0x13CCA68", VA = "0x13CCA68")]
	public int getHeightOverrideInt()
	{
		return default(int);
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x13CCBA4", Offset = "0x13CCBA4", VA = "0x13CCBA4")]
	public void setHeightOverride(int heightOverride)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x13CCD20", Offset = "0x13CCD20", VA = "0x13CCD20")]
	public void updateGunOverride(string gunId)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x13CCE88", Offset = "0x13CCE88", VA = "0x13CCE88")]
	public string getGunOverride()
	{
		return null;
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x13CBC4C", Offset = "0x13CBC4C", VA = "0x13CBC4C")]
	public static WaveTickActionType fastParseWaveTickAction(string raw, WaveTickActionType defaultType)
	{
		return default(WaveTickActionType);
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x13CCFAC", Offset = "0x13CCFAC", VA = "0x13CCFAC", Slot = "4")]
	public int CompareTo(object other)
	{
		return default(int);
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x13CD0B8", Offset = "0x13CD0B8", VA = "0x13CD0B8")]
	private bool isSpawnType()
	{
		return default(bool);
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x13CD0CC", Offset = "0x13CD0CC", VA = "0x13CD0CC")]
	private bool isTickWait()
	{
		return default(bool);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x13CD0DC", Offset = "0x13CD0DC", VA = "0x13CD0DC")]
	private bool isOtherWait()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000104")]
public class WorldConfig
{
	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFDD8", Offset = "0x7CFDD8")]
	private string <worldId>k__BackingField;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFDE8", Offset = "0x7CFDE8")]
	private int <worldOrder>k__BackingField;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFDF8", Offset = "0x7CFDF8")]
	private string <worldToUnlockId>k__BackingField;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE08", Offset = "0x7CFE08")]
	private string <pilotToUnlockId>k__BackingField;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE18", Offset = "0x7CFE18")]
	private string <modeToUnlockId>k__BackingField;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string objectFolderId;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string terrainSceneId;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE28", Offset = "0x7CFE28")]
	private string <worldMinibossLevel>k__BackingField;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string musicSoundKey;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string ambientSoundKey;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string bossMusicSoundKey;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameStateList stateList;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE38", Offset = "0x7CFE38")]
	private bool <isUnlocked>k__BackingField;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE48", Offset = "0x7CFE48")]
	private int <completionCount>k__BackingField;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE58", Offset = "0x7CFE58")]
	private string <selectedPilotId>k__BackingField;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameDifficulty> completedDifficulties;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<EnemyClass, List<string>> enemyGroupMapping;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private HashSet<string> commonEnemies;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private HashSet<string> rareEnemies;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private HashSet<string> enemyBullets;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool checkpointOneUnlocked;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool checkpointTwoUnlocked;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool bossCheckpointUnlocked;

	[Token(Token = "0x17000046")]
	public string worldId
	{
		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x13CDF58", Offset = "0x13CDF58", VA = "0x13CDF58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7308", Offset = "0x7D7308")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x13CDF60", Offset = "0x13CDF60", VA = "0x13CDF60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7318", Offset = "0x7D7318")]
		private set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public int worldOrder
	{
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x13CDF68", Offset = "0x13CDF68", VA = "0x13CDF68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7328", Offset = "0x7D7328")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x13CDF70", Offset = "0x13CDF70", VA = "0x13CDF70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7338", Offset = "0x7D7338")]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public string worldToUnlockId
	{
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x13CDF78", Offset = "0x13CDF78", VA = "0x13CDF78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7348", Offset = "0x7D7348")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x13CDF80", Offset = "0x13CDF80", VA = "0x13CDF80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7358", Offset = "0x7D7358")]
		private set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public string pilotToUnlockId
	{
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x13CDF88", Offset = "0x13CDF88", VA = "0x13CDF88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7368", Offset = "0x7D7368")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x13CDF90", Offset = "0x13CDF90", VA = "0x13CDF90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7378", Offset = "0x7D7378")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public string modeToUnlockId
	{
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x13CDF98", Offset = "0x13CDF98", VA = "0x13CDF98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7388", Offset = "0x7D7388")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x13CDFA0", Offset = "0x13CDFA0", VA = "0x13CDFA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7398", Offset = "0x7D7398")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public string worldMinibossLevel
	{
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x13CDFA8", Offset = "0x13CDFA8", VA = "0x13CDFA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D73A8", Offset = "0x7D73A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x13CDFB0", Offset = "0x13CDFB0", VA = "0x13CDFB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D73B8", Offset = "0x7D73B8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public bool isUnlocked
	{
		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x13CDFB8", Offset = "0x13CDFB8", VA = "0x13CDFB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D73C8", Offset = "0x7D73C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x13CDFC0", Offset = "0x13CDFC0", VA = "0x13CDFC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D73D8", Offset = "0x7D73D8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public int completionCount
	{
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x13CDFCC", Offset = "0x13CDFCC", VA = "0x13CDFCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D73E8", Offset = "0x7D73E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x13CDFD4", Offset = "0x13CDFD4", VA = "0x13CDFD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D73F8", Offset = "0x7D73F8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public string selectedPilotId
	{
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x13CDFDC", Offset = "0x13CDFDC", VA = "0x13CDFDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7408", Offset = "0x7D7408")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x13CDFE4", Offset = "0x13CDFE4", VA = "0x13CDFE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7418", Offset = "0x7D7418")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public string worldNumber
	{
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x13CDFEC", Offset = "0x13CDFEC", VA = "0x13CDFEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x13CE070", Offset = "0x13CE070", VA = "0x13CE070")]
	public WorldConfig(Command theCommand)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x13CE298", Offset = "0x13CE298", VA = "0x13CE298")]
	public void loadState()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x13CE560", Offset = "0x13CE560", VA = "0x13CE560")]
	public void saveState()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x13CE664", Offset = "0x13CE664", VA = "0x13CE664")]
	public void unlock()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x13CE708", Offset = "0x13CE708", VA = "0x13CE708")]
	public void lockWorld()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x13CE81C", Offset = "0x13CE81C", VA = "0x13CE81C")]
	public bool tryUnlockCheckpoint(int checkpointIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x13CE87C", Offset = "0x13CE87C", VA = "0x13CE87C")]
	public bool isCheckpointUnlocked(int checkpointIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x13CE984", Offset = "0x13CE984", VA = "0x13CE984")]
	public void worldCompletedInStoryMode(GameDifficulty currentDifficulty)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x13CEAF0", Offset = "0x13CEAF0", VA = "0x13CEAF0")]
	public void clearAllCheckpointProgress()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x13CEAFC", Offset = "0x13CEAFC", VA = "0x13CEAFC")]
	public int getHighestCheckpointIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x13CEB24", Offset = "0x13CEB24", VA = "0x13CEB24")]
	public static float progressAlphaForCheckpointIndex(int index)
	{
		return default(float);
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x13CEB60", Offset = "0x13CEB60", VA = "0x13CEB60")]
	public float getCurrentProgressAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x13CEBA0", Offset = "0x13CEBA0", VA = "0x13CEBA0")]
	public void setupWorldEnemyMappings()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x13CF0D0", Offset = "0x13CF0D0", VA = "0x13CF0D0")]
	public void setSelectedPilot(PilotConfig pilot)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x13CF384", Offset = "0x13CF384", VA = "0x13CF384")]
	public string localisedWorldName()
	{
		return null;
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x13CF40C", Offset = "0x13CF40C", VA = "0x13CF40C")]
	public string terrainScenePath()
	{
		return null;
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x13CF460", Offset = "0x13CF460", VA = "0x13CF460")]
	public bool hasEnemiesFor(EnemyClass enemyClass)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x13CF504", Offset = "0x13CF504", VA = "0x13CF504")]
	public bool hasCompletedDifficulty(GameDifficulty difficulty)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x13CF588", Offset = "0x13CF588", VA = "0x13CF588")]
	public List<string> getEnemiesFor(EnemyClass enemyClass)
	{
		return null;
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x13CF6BC", Offset = "0x13CF6BC", VA = "0x13CF6BC")]
	public List<string> getCommonEnemies()
	{
		return null;
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x13CF72C", Offset = "0x13CF72C", VA = "0x13CF72C")]
	public List<string> getRareEnemies()
	{
		return null;
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x13CF79C", Offset = "0x13CF79C", VA = "0x13CF79C")]
	public List<string> getEnemyBulletList()
	{
		return null;
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x13CF80C", Offset = "0x13CF80C", VA = "0x13CF80C")]
	public string localisedWorldBossName()
	{
		return null;
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x13CF894", Offset = "0x13CF894", VA = "0x13CF894")]
	public string localisedWorldMinibossName()
	{
		return null;
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x13CF07C", Offset = "0x13CF07C", VA = "0x13CF07C")]
	private string enemyResourcesFolderPath()
	{
		return null;
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x13CF91C", Offset = "0x13CF91C", VA = "0x13CF91C")]
	public int enemyClassCount(EnemyClass enemyClass)
	{
		return default(int);
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x13CF9A8", Offset = "0x13CF9A8", VA = "0x13CF9A8")]
	public void playWorldMusic()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x13CFA54", Offset = "0x13CFA54", VA = "0x13CFA54")]
	public void playWorldBossMusic(bool isArcadeMode = false)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x13CFB98", Offset = "0x13CFB98", VA = "0x13CFB98")]
	public void playWorldAmbience()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x13CFC18", Offset = "0x13CFC18", VA = "0x13CFC18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7428", Offset = "0x7D7428")]
	private bool <setupWorldEnemyMappings>b__64_0(string enemyPath)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000105")]
public class WorldUIBanner : MonoBehaviour
{
	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text bannerLabel;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SimpleAnimator mover;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SimpleAnimationMoveToWorldPosition positioner;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isHiding;

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x13D0B3C", Offset = "0x13D0B3C", VA = "0x13D0B3C")]
	public void showBanner(string content, float viewportY = 0.55f, [Optional] Action complete)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x13D0CF4", Offset = "0x13D0CF4", VA = "0x13D0CF4")]
	public void hideBanner([Optional] Action complete)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x13D0E8C", Offset = "0x13D0E8C", VA = "0x13D0E8C")]
	public WorldUIBanner()
	{
	}
}
[Token(Token = "0x2000106")]
public class DebugPoolOverrunFeed : MonoBehaviour
{
	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text feedLabel;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRPlayspace space;

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xA051A0", Offset = "0xA051A0", VA = "0xA051A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xA05458", Offset = "0xA05458", VA = "0xA05458")]
	private void Update()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xA051D8", Offset = "0xA051D8", VA = "0xA051D8")]
	private void updateFeed()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xA055B8", Offset = "0xA055B8", VA = "0xA055B8")]
	private void clearFeed()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xA05614", Offset = "0xA05614", VA = "0xA05614")]
	public DebugPoolOverrunFeed()
	{
	}
}
[Token(Token = "0x2000107")]
public class DesignSceneUIRunner : MonoBehaviour
{
	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string panelToShow;

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xA05E40", Offset = "0xA05E40", VA = "0xA05E40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xA05EC8", Offset = "0xA05EC8", VA = "0xA05EC8")]
	public DesignSceneUIRunner()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xA05F30", Offset = "0xA05F30", VA = "0xA05F30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7438", Offset = "0x7D7438")]
	private void <OnEnable>b__2_0()
	{
	}
}
[Token(Token = "0x2000108")]
public class EnemyGunBuilder : MonoBehaviour
{
	[Token(Token = "0x600080C")]
	[Address(RVA = "0x9D7C94", Offset = "0x9D7C94", VA = "0x9D7C94")]
	private void Awake()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x9D7D50", Offset = "0x9D7D50", VA = "0x9D7D50")]
	public static void saveGunConfigToFile(GunConfig gunConfig)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x9D8484", Offset = "0x9D8484", VA = "0x9D8484")]
	public static GunConfig loadConfigWithId(string gunId)
	{
		return default(GunConfig);
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x9D8524", Offset = "0x9D8524", VA = "0x9D8524")]
	public static GunConfig loadConfigFromPath(string fullPath)
	{
		return default(GunConfig);
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x9D84D0", Offset = "0x9D84D0", VA = "0x9D84D0")]
	public static GunConfig loadConfigFromFactory(string gunId)
	{
		return default(GunConfig);
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x9D89E8", Offset = "0x9D89E8", VA = "0x9D89E8")]
	public static List<GunConfig> allGunConfigs()
	{
		return null;
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x9D8BF8", Offset = "0x9D8BF8", VA = "0x9D8BF8")]
	private static string pathToGunsFolder()
	{
		return null;
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x9D83D0", Offset = "0x9D83D0", VA = "0x9D83D0")]
	private static string fullPathToGunFile(string gunId)
	{
		return null;
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x9D8944", Offset = "0x9D8944", VA = "0x9D8944")]
	private static string objectKeyForGunId(string gunId)
	{
		return null;
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x9D8C98", Offset = "0x9D8C98", VA = "0x9D8C98")]
	public EnemyGunBuilder()
	{
	}
}
[Token(Token = "0x2000109")]
public class GunBuilderCameraCycler : MonoBehaviour
{
	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CinemachineVirtualCamera[] cameras;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int cameraIndex;

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x9E8D24", Offset = "0x9E8D24", VA = "0x9E8D24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x9E8E70", Offset = "0x9E8E70", VA = "0x9E8E70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x9E8F08", Offset = "0x9E8F08", VA = "0x9E8F08")]
	private void cycleCameras()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x9E8E04", Offset = "0x9E8E04", VA = "0x9E8E04")]
	private void updateCameras()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x9E8F3C", Offset = "0x9E8F3C", VA = "0x9E8F3C")]
	public GunBuilderCameraCycler()
	{
	}
}
[Token(Token = "0x200010A")]
public class SplinePrefabCreator : MonoBehaviour
{
	[Token(Token = "0x600081B")]
	[Address(RVA = "0xA118D0", Offset = "0xA118D0", VA = "0xA118D0")]
	public SplinePrefabCreator()
	{
	}
}
[Token(Token = "0x200010B")]
public class SplineUpdateManager : MonoBehaviour
{
	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<ShootyVRSplinePath> allSplinePathPrefabInstances;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<ShootyVRSplinePath> splinePathPrefabRefs;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color splineActiveColor;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color splineInactiveColor;

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xA118D8", Offset = "0xA118D8", VA = "0xA118D8")]
	public void updateAllSplinePaths()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xA11A60", Offset = "0xA11A60", VA = "0xA11A60")]
	public SplineUpdateManager()
	{
	}
}
[Token(Token = "0x200010C")]
public sealed class EconomyBooter : BootableMonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD50", Offset = "0x7CDD50")]
	private sealed class <>c
	{
		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__1_0;

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xA2239C", Offset = "0xA2239C", VA = "0xA2239C")]
		public <>c()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xA223A4", Offset = "0xA223A4", VA = "0xA223A4")]
		internal void <bootstrapDidComplete>b__1_0()
		{
		}
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xA21F10", Offset = "0xA21F10", VA = "0xA21F10", Slot = "4")]
	public override void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xA2211C", Offset = "0xA2211C", VA = "0xA2211C", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xA2232C", Offset = "0xA2232C", VA = "0xA2232C")]
	public EconomyBooter()
	{
	}
}
[Token(Token = "0x200010D")]
public sealed class EconomyItem
{
	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string itemID;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int itemIDint;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int coinCount;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string nonCoinRewards;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string expandedNonCoinRewards;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string localizationID;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string editorPrice;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool visibleInMainShop;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool visibleInMiniShop;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool isPromotedItem;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool availableInSpecials;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int maxPurchaseCount;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string purchaseType;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string svgIconIdSuffix;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string calloutLocId;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int shopSortOrder;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string calloutLocIdMiniShop;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int miniShopSortOrder;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE88", Offset = "0x7CFE88")]
	private bool <isStarterPack>k__BackingField;

	[Token(Token = "0x17000050")]
	public bool isStarterPack
	{
		[Token(Token = "0x6000821")]
		[Address(RVA = "0xA24410", Offset = "0xA24410", VA = "0xA24410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7448", Offset = "0x7D7448")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000822")]
		[Address(RVA = "0xA24418", Offset = "0xA24418", VA = "0xA24418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7458", Offset = "0x7D7458")]
		private set
		{
		}
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xA22FBC", Offset = "0xA22FBC", VA = "0xA22FBC")]
	public EconomyItem(Command theCommand)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xA24424", Offset = "0xA24424", VA = "0xA24424")]
	public bool justCoins()
	{
		return default(bool);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xA24448", Offset = "0xA24448", VA = "0xA24448")]
	public bool hasCallout(bool miniShop = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xA24488", Offset = "0xA24488", VA = "0xA24488")]
	public string localizedCallout(bool miniShop = false)
	{
		return null;
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xA23DB8", Offset = "0xA23DB8", VA = "0xA23DB8")]
	public bool shouldBeShown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xA24534", Offset = "0xA24534", VA = "0xA24534")]
	public bool hasReachedMaxPurchaseCount()
	{
		return default(bool);
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xA245D8", Offset = "0xA245D8", VA = "0xA245D8")]
	public string localizedDescription()
	{
		return null;
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xA24840", Offset = "0xA24840", VA = "0xA24840")]
	public string localizedDescription(SystemLanguage language)
	{
		return null;
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xA24948", Offset = "0xA24948", VA = "0xA24948")]
	public string localizedAppStoreDescription(SystemLanguage language)
	{
		return null;
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xA24670", Offset = "0xA24670", VA = "0xA24670")]
	private string formatLocalizedDescription(string description)
	{
		return null;
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xA24A70", Offset = "0xA24A70", VA = "0xA24A70")]
	public List<string> rewards(bool includeCoins = true)
	{
		return null;
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xA24C1C", Offset = "0xA24C1C", VA = "0xA24C1C")]
	public void awardItems(string source)
	{
	}
}
[Token(Token = "0x200010E")]
public sealed class EconomyController : SingletonMono<EconomyController>
{
	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD60", Offset = "0x7CDD60")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<string> success;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<string> fail;

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xA22550", Offset = "0xA22550", VA = "0xA22550")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xA2429C", Offset = "0xA2429C", VA = "0xA2429C")]
		internal void <startPurchaseWithWaitUI>b__0(string context)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xA24318", Offset = "0xA24318", VA = "0xA24318")]
		internal void <startPurchaseWithWaitUI>b__1(string context)
		{
		}
	}

	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD70", Offset = "0x7CDD70")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> restoreCompletion;

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xA2383C", Offset = "0xA2383C", VA = "0xA2383C")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xA243A0", Offset = "0xA243A0", VA = "0xA243A0")]
		internal void <restorePurchases>b__0(bool result)
		{
		}
	}

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IAPWrapper biller;

	[Token(Token = "0x4000607")]
	private const string ShopIconPrefix = "shop_icon_";

	[Token(Token = "0x4000608")]
	private const string BannerIconPrefix = "shopbanner_icon_";

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "AssetProxyListAttribute", RVA = "0x7CFE98", Offset = "0x7CFE98")]
	public AssetProxy bundleImageLibrary;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool billerIsReady;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SVGAsset> bundleImages;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameStateList stateList;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<string> durableItems;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, int> purchaseCounts;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, EconomyItem> economyItemDefinitions;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int consumableItemsDefined;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int durableItemsDefined;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action<string> buyItemFail;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action<string> buyItemSuccess;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action billerStarted;

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xA22414", Offset = "0xA22414", VA = "0xA22414")]
	public static void startPurchaseWithWaitUI(string itemID, Action<string> success, Action<string> fail)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xA21FAC", Offset = "0xA21FAC", VA = "0xA21FAC")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xA22734", Offset = "0xA22734", VA = "0xA22734")]
	private void setBiller()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xA22A70", Offset = "0xA22A70", VA = "0xA22A70")]
	public int durableItemDefinitionCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xA22A78", Offset = "0xA22A78", VA = "0xA22A78")]
	public bool durableItemIsUnlocked(string itemID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xA22B3C", Offset = "0xA22B3C", VA = "0xA22B3C")]
	public void unlockDurableItem(string itemID)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xA2280C", Offset = "0xA2280C", VA = "0xA2280C")]
	private void loadState()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xA22C20", Offset = "0xA22C20", VA = "0xA22C20")]
	private void saveState()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xA22E84", Offset = "0xA22E84", VA = "0xA22E84")]
	private void defineConsumableItem(Command theCommand)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xA23334", Offset = "0xA23334", VA = "0xA23334")]
	private void defineDurableItem(Command theCommand)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xA2346C", Offset = "0xA2346C", VA = "0xA2346C")]
	public EconomyItem economyItemWithID(string itemID)
	{
		return null;
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xA23550", Offset = "0xA23550", VA = "0xA23550")]
	public List<EconomyItem> allEconomyItems()
	{
		return null;
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xA235E0", Offset = "0xA235E0", VA = "0xA235E0")]
	public int economyItemPurchaseCount(string itemID, bool idAlreadyToLowered = false)
	{
		return default(int);
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xA232C0", Offset = "0xA232C0", VA = "0xA232C0")]
	public void addIAP(string iapType, string iapID)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xA22258", Offset = "0xA22258", VA = "0xA22258")]
	public void startBiller(Action billerFinishedLoadingAction)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xA23688", Offset = "0xA23688", VA = "0xA23688")]
	private void billerDidBoot(bool success)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xA23758", Offset = "0xA23758", VA = "0xA23758")]
	public void restoreItem(string restoredItemID)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xA2375C", Offset = "0xA2375C", VA = "0xA2375C")]
	public void restorePurchases(Action<bool> restoreCompletion)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xA22558", Offset = "0xA22558", VA = "0xA22558")]
	private void inAppPurchase(string itemID, Action<string> success, Action<string> fail)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xA23844", Offset = "0xA23844", VA = "0xA23844")]
	private void purchaseWasGood(string itemID)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xA23950", Offset = "0xA23950", VA = "0xA23950")]
	private void purchaseWasBad(string itemID)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xA239FC", Offset = "0xA239FC", VA = "0xA239FC")]
	private void purchaseWasCancelled(string itemID)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xA23AA8", Offset = "0xA23AA8", VA = "0xA23AA8")]
	public static string priceStringForItem(string itemID)
	{
		return null;
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xA23B98", Offset = "0xA23B98", VA = "0xA23B98")]
	public static bool canShowStore()
	{
		return default(bool);
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xA23C68", Offset = "0xA23C68", VA = "0xA23C68")]
	public static bool canMakePurchase()
	{
		return default(bool);
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xA23CE0", Offset = "0xA23CE0", VA = "0xA23CE0")]
	public static EconomyItem getActiveStarterPack()
	{
		return null;
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xA23E9C", Offset = "0xA23E9C", VA = "0xA23E9C")]
	public SVGAsset iconForItem(EconomyItem theItem, bool isShop)
	{
		return null;
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xA24094", Offset = "0xA24094", VA = "0xA24094")]
	public EconomyController()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xA241EC", Offset = "0xA241EC", VA = "0xA241EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7468", Offset = "0x7D7468")]
	private void <bootstrap>b__16_0(AssetProxyListSvgs asset)
	{
	}
}
[Token(Token = "0x200010F")]
public sealed class MIAPProduct
{
	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string storeID;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool consumable;

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xA60D40", Offset = "0xA60D40", VA = "0xA60D40")]
	public MIAPProduct(string storeID, bool consumable)
	{
	}
}
[Token(Token = "0x2000110")]
public class IAPWrapper
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action<bool> iapInitCompleted;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<string> purchaseSuccess;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<string> purchaseFail;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected List<MIAPProduct> mightyDefinedProducts;

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x9ED668", Offset = "0x9ED668", VA = "0x9ED668")]
	public void defineIAP(string iapType, string itemID)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x9ED750", Offset = "0x9ED750", VA = "0x9ED750", Slot = "4")]
	public virtual void startIAP()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x9ED7B4", Offset = "0x9ED7B4", VA = "0x9ED7B4", Slot = "5")]
	public virtual void startPurchase(string itemID)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x9ED840", Offset = "0x9ED840", VA = "0x9ED840", Slot = "6")]
	public virtual void restorePurchases(Action<bool> completion)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x9ED8A4", Offset = "0x9ED8A4", VA = "0x9ED8A4", Slot = "7")]
	public virtual string localizedPrice(string itemID)
	{
		return null;
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x9ED910", Offset = "0x9ED910", VA = "0x9ED910", Slot = "8")]
	public virtual bool canMakePurchase()
	{
		return default(bool);
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x9ED7B8", Offset = "0x9ED7B8", VA = "0x9ED7B8")]
	protected void purchaseFailureInBiller(string context)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x9ED918", Offset = "0x9ED918", VA = "0x9ED918")]
	protected void purchaseSuccessInBiller(string context)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x9ED9A0", Offset = "0x9ED9A0", VA = "0x9ED9A0")]
	public IAPWrapper()
	{
	}
}
[Token(Token = "0x2000111")]
public sealed class TestbotIAPWrapper : IAPWrapper
{
	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD80", Offset = "0x7CDD80")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TestbotIAPWrapper <>4__this;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string itemID;

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xA15E6C", Offset = "0xA15E6C", VA = "0xA15E6C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xA16148", Offset = "0xA16148", VA = "0xA16148")]
		internal void <fakePurchase>b__0()
		{
		}
	}

	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD90", Offset = "0x7CDD90")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> completion;

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xA15F64", Offset = "0xA15F64", VA = "0xA15F64")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xA1616C", Offset = "0xA1616C", VA = "0xA1616C")]
		internal void <restorePurchases>b__0()
		{
		}
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xA15C28", Offset = "0xA15C28", VA = "0xA15C28", Slot = "4")]
	public override void startIAP()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xA15CC4", Offset = "0xA15CC4", VA = "0xA15CC4", Slot = "5")]
	public override void startPurchase(string itemID)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xA15D68", Offset = "0xA15D68", VA = "0xA15D68")]
	private void fakePurchase(string itemID)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xA15E74", Offset = "0xA15E74", VA = "0xA15E74", Slot = "6")]
	public override void restorePurchases(Action<bool> completion)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xA15F6C", Offset = "0xA15F6C", VA = "0xA15F6C", Slot = "7")]
	public override string localizedPrice(string itemID)
	{
		return null;
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xA16044", Offset = "0xA16044", VA = "0xA16044", Slot = "8")]
	public override bool canMakePurchase()
	{
		return default(bool);
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xA1604C", Offset = "0xA1604C", VA = "0xA1604C")]
	public MIAPProduct productWithID(string itemID)
	{
		return null;
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xA16140", Offset = "0xA16140", VA = "0xA16140")]
	public TestbotIAPWrapper()
	{
	}
}
[Token(Token = "0x2000112")]
public class EnemyBossInvulnerabilityController : EnemyBossAction
{
	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDDA0", Offset = "0x7CDDA0")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnemyBossInvulnerabilityController <>4__this;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isInvulnerable;

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xA2D4A4", Offset = "0xA2D4A4", VA = "0xA2D4A4")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xA2D684", Offset = "0xA2D684", VA = "0xA2D684")]
		internal void <setInvulnerableState>b__0()
		{
		}
	}

	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDDB0", Offset = "0x7CDDB0")]
	private sealed class <waveRunner>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level theLevel;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <delayBetweenTicks>5__2;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0xA2D7D8", Offset = "0xA2D7D8", VA = "0xA2D7D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0xA2D840", Offset = "0xA2D840", VA = "0xA2D840", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xA2D648", Offset = "0xA2D648", VA = "0xA2D648")]
		[DebuggerHidden]
		public <waveRunner>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xA2D6AC", Offset = "0xA2D6AC", VA = "0xA2D6AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xA2D6B0", Offset = "0xA2D6B0", VA = "0xA2D6B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xA2D7E0", Offset = "0xA2D7E0", VA = "0xA2D7E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400061B")]
	private const string ShieldActiveParameter = "ShieldActive";

	[Token(Token = "0x400061C")]
	private const string ShieldInactiveParameter = "ShieldInactive";

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFEFC", Offset = "0x7CFEFC")]
	public float secondsToBeVulnerable;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float secondsToBeInvulnerable;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool bossStartsWithShield;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFF34", Offset = "0x7CFF34")]
	public Animator shieldAnimationController;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer shieldRenderer;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material shieldMaterial;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFF6C", Offset = "0x7CFF6C")]
	public GameObject shieldColliders;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFFA4", Offset = "0x7CFFA4")]
	public List<string> levelsToSpawn;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine waveRunnerCoroutine;

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xA2D238", Offset = "0xA2D238", VA = "0xA2D238", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xA2D49C", Offset = "0xA2D49C", VA = "0xA2D49C", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xA2D274", Offset = "0xA2D274", VA = "0xA2D274")]
	private void setInvulnerableState(bool isInvulnerable)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xA2D4BC", Offset = "0xA2D4BC", VA = "0xA2D4BC")]
	private void runLevel()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xA2D5CC", Offset = "0xA2D5CC", VA = "0xA2D5CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7478", Offset = "0x7D7478")]
	private IEnumerator waveRunner(Level theLevel)
	{
		return null;
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xA2D674", Offset = "0xA2D674", VA = "0xA2D674")]
	public EnemyBossInvulnerabilityController()
	{
	}
}
[Token(Token = "0x2000113")]
public class EnemyBossSizeChanging : EnemyBossAction
{
	[Serializable]
	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDDC0", Offset = "0x7CDDC0")]
	private sealed class <>c
	{
		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<EnemyController> <>9__31_0;

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xA2FAE8", Offset = "0xA2FAE8", VA = "0xA2FAE8")]
		public <>c()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xA2FAF0", Offset = "0xA2FAF0", VA = "0xA2FAF0")]
		internal bool <countdownUntilNextScale>b__31_0(EnemyController enemy)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDDD0", Offset = "0x7CDDD0")]
	private sealed class <spawnPhaseEnemies>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyBossSizeChanging <>4__this;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numberOfEnemiesToSpawn>5__2;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<EnemyClass> <enemyTypes>5__3;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017D1")]
			[Address(RVA = "0xA2FCFC", Offset = "0xA2FCFC", VA = "0xA2FCFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0xA2FD64", Offset = "0xA2FD64", VA = "0xA2FD64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xA2F9D0", Offset = "0xA2F9D0", VA = "0xA2F9D0")]
		[DebuggerHidden]
		public <spawnPhaseEnemies>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xA2FB38", Offset = "0xA2FB38", VA = "0xA2FB38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xA2FB3C", Offset = "0xA2FB3C", VA = "0xA2FB3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xA2FD04", Offset = "0xA2FD04", VA = "0xA2FD04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CFFDC", Offset = "0x7CFFDC")]
	public float smallSizePercentage;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scaleChangeSpeed;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0014", Offset = "0x7D0014")]
	public bool doEnemiesPreventChange;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeBeforeSpawning;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeBetweenSpawns;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<EnemyClass> enemyTypesToSpawn;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int numberOfEnemiesToSpawnMin;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int numberOfEnemiesToSpawnMax;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D004C", Offset = "0x7D004C")]
	public List<EnemyClass> hardEnemyTypesToSpawn;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hardNumberOfEnemiesToSpawnMin;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int hardNumberOfEnemiesToSpawnMax;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0084", Offset = "0x7D0084")]
	public float bigSizeMoveSpeed;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float smallSizeMoveSpeed;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D00BC", Offset = "0x7D00BC")]
	public GameObject bigCollider;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject smallCollider;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D00F4", Offset = "0x7D00F4")]
	public float timeAsBigSize;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float timeAsSmallSize;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 bigScale;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 smallScale;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float defaultMoveSpeed;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 targetScale;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float countdown;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool bootstrapped;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	private bool isRunningLoop;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	private bool isHardEnemies;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<EnemyController> phaseEnemies;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private EndlessStaticEnemyMode enemySpawner;

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xA2EFD8", Offset = "0xA2EFD8", VA = "0xA2EFD8", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xA2F220", Offset = "0xA2F220", VA = "0xA2F220", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xA2F320", Offset = "0xA2F320", VA = "0xA2F320", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xA2F330", Offset = "0xA2F330", VA = "0xA2F330", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xA2F45C", Offset = "0xA2F45C", VA = "0xA2F45C")]
	private void countdownUntilNextScale()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xA2F700", Offset = "0xA2F700", VA = "0xA2F700")]
	private void scaleTowardsTarget()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xA2F894", Offset = "0xA2F894", VA = "0xA2F894")]
	private bool isSmall()
	{
		return default(bool);
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xA2F938", Offset = "0xA2F938", VA = "0xA2F938")]
	private bool canTaunt()
	{
		return default(bool);
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xA2F38C", Offset = "0xA2F38C", VA = "0xA2F38C")]
	private bool isAtTargetScale()
	{
		return default(bool);
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xA2F230", Offset = "0xA2F230", VA = "0xA2F230")]
	private void setSize(bool isSmall)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xA2F954", Offset = "0xA2F954", VA = "0xA2F954")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D74DC", Offset = "0x7D74DC")]
	private IEnumerator spawnPhaseEnemies()
	{
		return null;
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xA2F9FC", Offset = "0xA2F9FC", VA = "0xA2F9FC")]
	private List<EnemyClass> getEnemyTypes()
	{
		return null;
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xA2FA18", Offset = "0xA2FA18", VA = "0xA2FA18")]
	private int getNumberOfEnemies()
	{
		return default(int);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xA2FA4C", Offset = "0xA2FA4C", VA = "0xA2FA4C")]
	public EnemyBossSizeChanging()
	{
	}
}
[Token(Token = "0x2000114")]
public class EnemyBossAction : MonoBehaviour
{
	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected EnemyController myController;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool isUpdating;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool needsInit;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastHealth;

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xA2927C", Offset = "0xA2927C", VA = "0xA2927C", Slot = "4")]
	public virtual void resetBossAction()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xA29334", Offset = "0xA29334", VA = "0xA29334", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xA29454", Offset = "0xA29454", VA = "0xA29454", Slot = "6")]
	public virtual void bossHealth(float percent)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xA29458", Offset = "0xA29458", VA = "0xA29458", Slot = "7")]
	public virtual void bossInit()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xA2945C", Offset = "0xA2945C", VA = "0xA2945C", Slot = "8")]
	public virtual void loseFullHealth()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xA29460", Offset = "0xA29460", VA = "0xA29460", Slot = "9")]
	public virtual void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xA29464", Offset = "0xA29464", VA = "0xA29464", Slot = "10")]
	public virtual void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xA29468", Offset = "0xA29468", VA = "0xA29468", Slot = "11")]
	public virtual void bossDidDie()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xA2946C", Offset = "0xA2946C", VA = "0xA2946C")]
	public EnemyBossAction()
	{
	}
}
[Token(Token = "0x2000115")]
public class EnemyBossActivateGun : EnemyBossAction
{
	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnemyGun targetGun;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isShootingStageOne;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool isShootingStageTwo;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool isShootingStageThree;

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xA29474", Offset = "0xA29474", VA = "0xA29474", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xA29524", Offset = "0xA29524", VA = "0xA29524", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xA2952C", Offset = "0xA2952C", VA = "0xA2952C", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xA2947C", Offset = "0xA2947C", VA = "0xA2947C")]
	private void setGunFiringState(bool isShooting)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xA29A20", Offset = "0xA29A20", VA = "0xA29A20")]
	public EnemyBossActivateGun()
	{
	}
}
[Token(Token = "0x2000116")]
public class EnemyBossArgs : EnemyBossAction
{
	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string fullHealthArgs;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string halfHealthArgs;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string tenPercentHealthArgs;

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xA2A000", Offset = "0xA2A000", VA = "0xA2A000", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xA2A00C", Offset = "0xA2A00C", VA = "0xA2A00C")]
	private void changeArgs(string raw)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xA2A010", Offset = "0xA2A010", VA = "0xA2A010", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xA2A01C", Offset = "0xA2A01C", VA = "0xA2A01C", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xA2A028", Offset = "0xA2A028", VA = "0xA2A028")]
	public EnemyBossArgs()
	{
	}
}
[Token(Token = "0x2000117")]
public class EnemyBossDeathTiming : EnemyBossAction
{
	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDDE0", Offset = "0x7CDDE0")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> completion;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossDeathTiming <>4__this;

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xA2A57C", Offset = "0xA2A57C", VA = "0xA2A57C")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xA2A914", Offset = "0xA2A914", VA = "0xA2A914")]
		internal void <runDeathAfterDelay>b__0()
		{
		}
	}

	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDDF0", Offset = "0x7CDDF0")]
	private sealed class <flashLoop>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyBossDeathTiming <>4__this;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waitShort>5__2;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <wait>5__3;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0xA2ADD8", Offset = "0xA2ADD8", VA = "0xA2ADD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0xA2AE40", Offset = "0xA2AE40", VA = "0xA2AE40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xA2A878", Offset = "0xA2A878", VA = "0xA2A878")]
		[DebuggerHidden]
		public <flashLoop>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xA2AC5C", Offset = "0xA2AC5C", VA = "0xA2AC5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xA2AC60", Offset = "0xA2AC60", VA = "0xA2AC60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xA2ADE0", Offset = "0xA2ADE0", VA = "0xA2ADE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE00", Offset = "0x7CDE00")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem system;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossDeathTiming <>4__this;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__2;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xA2A8A4", Offset = "0xA2A8A4", VA = "0xA2A8A4")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xA2A9DC", Offset = "0xA2A9DC", VA = "0xA2A9DC")]
		internal void <deathDelayEffect>b__0()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xA2AAD4", Offset = "0xA2AAD4", VA = "0xA2AAD4")]
		internal void <deathDelayEffect>b__1()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xA2ABCC", Offset = "0xA2ABCC", VA = "0xA2ABCC")]
		internal void <deathDelayEffect>b__2()
		{
		}
	}

	[Token(Token = "0x400064C")]
	private const float DelayBeforeDeath = 2.25f;

	[Token(Token = "0x400064D")]
	private const float CleanupTime = 0.25f;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D012C", Offset = "0x7D012C")]
	public bool runFlashEffect;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string delayVFX;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform delayVFXOffset;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine flashRoutine;

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xA2A37C", Offset = "0xA2A37C", VA = "0xA2A37C", Slot = "4")]
	public override void resetBossAction()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xA2A418", Offset = "0xA2A418", VA = "0xA2A418")]
	private void runDeathAfterDelay(Action<bool> completion)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xA2A7FC", Offset = "0xA2A7FC", VA = "0xA2A7FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7540", Offset = "0x7D7540")]
	private IEnumerator flashLoop()
	{
		return null;
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xA2A584", Offset = "0xA2A584", VA = "0xA2A584")]
	private void deathDelayEffect()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xA2A8AC", Offset = "0xA2A8AC", VA = "0xA2A8AC")]
	public EnemyBossDeathTiming()
	{
	}
}
[Token(Token = "0x2000118")]
public enum GunFiringRules
{
	[Token(Token = "0x4000653")]
	None,
	[Token(Token = "0x4000654")]
	OnlyFireWhenStationary,
	[Token(Token = "0x4000655")]
	OnlyFireWhenMoving
}
[Token(Token = "0x2000119")]
public class EnemyBossGunController : EnemyBossAction
{
	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnemyGun mainGun;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EnemyGun altGun;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected EnemyGun specialBossGun;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0164", Offset = "0x7D0164")]
	public bool stageOneFireGun;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GunFiringRules stageOneMainRule;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool stageOneFireAltGun;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GunFiringRules stageOneAltRule;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool stageOneFireSpecialGun;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GunFiringRules stageOneSpecialRule;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D019C", Offset = "0x7D019C")]
	public bool stageTwoFireGun;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GunFiringRules stageTwoMainRule;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool stageTwoFireAltGun;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public GunFiringRules stageTwoAltRule;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool stageTwoFireSpecialGun;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public GunFiringRules stageTwoSpecialRule;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D01D4", Offset = "0x7D01D4")]
	public bool stageThreeFireGun;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GunFiringRules stageThreeMainRule;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool stageThreeFireAltGun;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public GunFiringRules stageThreeAltRule;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool stageThreeFireSpecialGun;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public GunFiringRules stageThreeSpecialRule;

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xA2AE48", Offset = "0xA2AE48", VA = "0xA2AE48", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xA2AFF4", Offset = "0xA2AFF4", VA = "0xA2AFF4", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xA2B030", Offset = "0xA2B030", VA = "0xA2B030", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xA2AF9C", Offset = "0xA2AF9C", VA = "0xA2AF9C")]
	private void updateAllFiringStates(bool isFiringGun, bool isFiringAltGun, bool isFiringSpecialGun)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xA2AF44", Offset = "0xA2AF44", VA = "0xA2AF44")]
	private void updateFiringRules(GunFiringRules mainGunRule, GunFiringRules altGunRule, GunFiringRules specialGunRule)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xA2B06C", Offset = "0xA2B06C", VA = "0xA2B06C")]
	private void updateFiringStates(EnemyGun targetGun, bool isFiring)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xA2B15C", Offset = "0xA2B15C", VA = "0xA2B15C")]
	private void updateGunFiringRule(EnemyGun theGun, GunFiringRules rule)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xA2B27C", Offset = "0xA2B27C", VA = "0xA2B27C")]
	private bool isBossStationary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xA2B330", Offset = "0xA2B330", VA = "0xA2B330")]
	private bool isBossMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xA2B34C", Offset = "0xA2B34C", VA = "0xA2B34C")]
	public EnemyBossGunController()
	{
	}
}
[Token(Token = "0x200011A")]
public class EnemyBossHealthBar : EnemyBossAction
{
	[Token(Token = "0x6000894")]
	[Address(RVA = "0xA2D080", Offset = "0xA2D080", VA = "0xA2D080")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xA2D0FC", Offset = "0xA2D0FC", VA = "0xA2D0FC", Slot = "6")]
	public override void bossHealth(float percent)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xA2D1B4", Offset = "0xA2D1B4", VA = "0xA2D1B4", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xA2D230", Offset = "0xA2D230", VA = "0xA2D230")]
	public EnemyBossHealthBar()
	{
	}
}
[Serializable]
[Token(Token = "0x200011B")]
public struct EnemyBossModelSwapSet
{
	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ModelSwapAnimation modelSwapAnimator;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject[] fullHealthModels;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] stageTwoHealthModels;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] stageThreeHealthModels;

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x86B524", Offset = "0x86B524", VA = "0x86B524")]
	public void changeTheModels(GameObject[] newFrames)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x86B52C", Offset = "0x86B52C", VA = "0x86B52C")]
	public void deactivateModels()
	{
	}
}
[Token(Token = "0x200011C")]
public class EnemyBossModelSwap : EnemyBossAction
{
	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnemyBossModelSwapSet[] modelSwapSets;

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xA2E914", Offset = "0xA2E914", VA = "0xA2E914", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xA2E9F8", Offset = "0xA2E9F8", VA = "0xA2E9F8", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xA2EA70", Offset = "0xA2EA70", VA = "0xA2EA70", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xA2EAE8", Offset = "0xA2EAE8", VA = "0xA2EAE8")]
	public EnemyBossModelSwap()
	{
	}
}
[Token(Token = "0x200011D")]
public class EnemyBossMoveSpeed : EnemyBossAction
{
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D020C", Offset = "0x7D020C")]
	public float baseMoveSpeed;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float firstSpeedUp;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float secondSpeedUp;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0244", Offset = "0x7D0244")]
	public float transitionRateForSpeed;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float waitOnTimeChange;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float targetMoveSpeed;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timeUntilUpdateAllowed;

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xA2EBF0", Offset = "0xA2EBF0", VA = "0xA2EBF0", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xA2EC28", Offset = "0xA2EC28", VA = "0xA2EC28", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xA2EC60", Offset = "0xA2EC60", VA = "0xA2EC60", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xA2EC98", Offset = "0xA2EC98", VA = "0xA2EC98", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xA2ED30", Offset = "0xA2ED30", VA = "0xA2ED30", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xA2EE28", Offset = "0xA2EE28", VA = "0xA2EE28")]
	public EnemyBossMoveSpeed()
	{
	}
}
[Token(Token = "0x200011E")]
public class EnemyBossPlayBossMusic : EnemyBossAction
{
	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xA2EE3C", Offset = "0xA2EE3C", VA = "0xA2EE3C", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xA2EED0", Offset = "0xA2EED0", VA = "0xA2EED0")]
	public EnemyBossPlayBossMusic()
	{
	}
}
[Token(Token = "0x200011F")]
public class EnemyBossSecondaryModelSwap : EnemyBossAction
{
	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fullHealthModel;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject stageTwoHealthModel;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject stageThreeHealthModel;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xA2EED8", Offset = "0xA2EED8", VA = "0xA2EED8", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xA2EFC0", Offset = "0xA2EFC0", VA = "0xA2EFC0", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xA2EFC8", Offset = "0xA2EFC8", VA = "0xA2EFC8", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xA2EEE0", Offset = "0xA2EEE0", VA = "0xA2EEE0")]
	private void changeTheModels(GameObject modelToSwapIn)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xA2EFD0", Offset = "0xA2EFD0", VA = "0xA2EFD0")]
	public EnemyBossSecondaryModelSwap()
	{
	}
}
[Token(Token = "0x2000120")]
public class EnemyBossSoundProgression : EnemyBossAction
{
	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xA2FD6C", Offset = "0xA2FD6C", VA = "0xA2FD6C", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xA2FF1C", Offset = "0xA2FF1C", VA = "0xA2FF1C", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xA30034", Offset = "0xA30034", VA = "0xA30034", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xA2FFD4", Offset = "0xA2FFD4", VA = "0xA2FFD4")]
	public static string StageTwoSoundEventKey(string eventId)
	{
		return null;
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xA300EC", Offset = "0xA300EC", VA = "0xA300EC")]
	public static string StageThreeSoundEventKey(string eventId)
	{
		return null;
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xA3014C", Offset = "0xA3014C", VA = "0xA3014C")]
	public EnemyBossSoundProgression()
	{
	}
}
[Token(Token = "0x2000121")]
public class EnemyBossSplineChange : EnemyBossAction
{
	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool isOverridingStageOneType;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public MovementType overrideMovementTypeStageOne;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D029C", Offset = "0x7D029C")]
	public string splineObjectKeyStageTwo;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MovementType movementTypeStageTwo;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D02D4", Offset = "0x7D02D4")]
	public string splineObjectKeyStageThree;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MovementType movementTypeStageThree;

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xA30600", Offset = "0xA30600", VA = "0xA30600", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xA30644", Offset = "0xA30644", VA = "0xA30644", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xA3079C", Offset = "0xA3079C", VA = "0xA3079C", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xA30650", Offset = "0xA30650", VA = "0xA30650")]
	private void tryAttachToSpline(string splineKey, MovementType movementType)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xA307A8", Offset = "0xA307A8", VA = "0xA307A8")]
	public EnemyBossSplineChange()
	{
	}
}
[Token(Token = "0x2000122")]
public class EnemyBossTaunt : EnemyBossAction
{
	[Token(Token = "0x4000680")]
	private const string TauntPopupId = "EnemyBossTaunt";

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D030C", Offset = "0x7D030C")]
	public string[] stage01Taunts;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] stage02Taunts;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] stage03Taunts;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0344", Offset = "0x7D0344")]
	public string shootTaunt;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float chanceForShootTauntShow;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D037C", Offset = "0x7D037C")]
	public Transform tauntMessageTransform;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform shootTauntMessagePos;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D03B4", Offset = "0x7D03B4")]
	public float minTimeBetweenTaunts;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float maxTimeBetweenTaunts;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] currentTaunts;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timeForNextTaunt;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isTauntingAllowed;

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xA309E4", Offset = "0xA309E4", VA = "0xA309E4", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xA30B38", Offset = "0xA30B38", VA = "0xA30B38", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xA30C08", Offset = "0xA30C08", VA = "0xA30C08", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xA30C1C", Offset = "0xA30C1C", VA = "0xA30C1C", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xA30C30", Offset = "0xA30C30", VA = "0xA30C30", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xA30FB4", Offset = "0xA30FB4", VA = "0xA30FB4")]
	public void tauntOnShoot()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xA30D38", Offset = "0xA30D38", VA = "0xA30D38")]
	private string selectTauntMessage()
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xA30E08", Offset = "0xA30E08", VA = "0xA30E08")]
	private void popTauntMessage(Transform pos, string taunt, float time)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xA30AF0", Offset = "0xA30AF0", VA = "0xA30AF0")]
	private void reset()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xA31094", Offset = "0xA31094", VA = "0xA31094")]
	private bool canShowShootTaunt()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xA31214", Offset = "0xA31214", VA = "0xA31214")]
	public void setTauntingState(bool isAllowed)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xA31220", Offset = "0xA31220", VA = "0xA31220")]
	public EnemyBossTaunt()
	{
	}
}
[Token(Token = "0x2000123")]
public class EnemyBossTransitionAnimation : EnemyBossAction
{
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE10", Offset = "0x7CDE10")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossTransitionAnimation <>4__this;

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xA315FC", Offset = "0xA315FC", VA = "0xA315FC")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xA31A90", Offset = "0xA31A90", VA = "0xA31A90")]
		internal void <fullHealth>b__0()
		{
		}
	}

	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE20", Offset = "0x7CDE20")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossTransitionAnimation <>4__this;

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xA3179C", Offset = "0xA3179C", VA = "0xA3179C")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xA31B1C", Offset = "0xA31B1C", VA = "0xA31B1C")]
		internal void <stageTwoHealth>b__0()
		{
		}
	}

	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE30", Offset = "0x7CDE30")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossTransitionAnimation <>4__this;

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xA31A64", Offset = "0xA31A64", VA = "0xA31A64")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xA31BA8", Offset = "0xA31BA8", VA = "0xA31BA8")]
		internal void <stageThreeHealth>b__0()
		{
		}
	}

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip[] fullHealthClips;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip[] stageTwoHealthClips;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip[] stageThreeHealthClips;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animation targetAnimation;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool secondaryAnimation;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool hasSetStartPosForSecondaryAnim;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 startPosSecondaryAnim;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion startRotationSecondaryAnim;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool hasAddedClips;

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xA31240", Offset = "0xA31240", VA = "0xA31240", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xA31470", Offset = "0xA31470", VA = "0xA31470")]
	public void fullHealth()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xA31604", Offset = "0xA31604", VA = "0xA31604", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xA318CC", Offset = "0xA318CC", VA = "0xA318CC", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xA31A6C", Offset = "0xA31A6C", VA = "0xA31A6C", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xA31A88", Offset = "0xA31A88", VA = "0xA31A88")]
	public EnemyBossTransitionAnimation()
	{
	}
}
[Token(Token = "0x2000124")]
public class EnemyBossWaveSpawning : EnemyBossAction
{
	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE40", Offset = "0x7CDE40")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnemyBossWaveSpawning <>4__this;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int phase;

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xA32EF0", Offset = "0xA32EF0", VA = "0xA32EF0")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xA33180", Offset = "0xA33180", VA = "0xA33180")]
		internal void <runNextStageSpawning>b__0()
		{
		}
	}

	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE50", Offset = "0x7CDE50")]
	private sealed class <waveRunner>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level theLevel;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyBossWaveSpawning <>4__this;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int phase;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds <delayBetweenTicks>5__2;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <interval>5__3;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0xA33404", Offset = "0xA33404", VA = "0xA33404", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0xA3346C", Offset = "0xA3346C", VA = "0xA3346C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xA33144", Offset = "0xA33144", VA = "0xA33144")]
		[DebuggerHidden]
		public <waveRunner>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xA331A0", Offset = "0xA331A0", VA = "0xA331A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xA331A4", Offset = "0xA331A4", VA = "0xA331A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xA3340C", Offset = "0xA3340C", VA = "0xA3340C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D03EC", Offset = "0x7D03EC")]
	public List<string> stageOneLevels;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> stageTwoLevels;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> stageThreeLevels;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0424", Offset = "0x7D0424")]
	public int intervalWaitBetweenSets;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D045C", Offset = "0x7D045C")]
	public EnemyBossAnimatorController animatorController;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0494", Offset = "0x7D0494")]
	public float delaySecondsBeforeStart;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float delaySecondsAfterPhaseChange;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D04CC", Offset = "0x7D04CC")]
	public bool cleanupEnemiesOnPhaseChange;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EnemyBossHeadController headController;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine waveRunnerCoroutine;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<string> currentWaves;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string previousWave;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xA32C60", Offset = "0xA32C60", VA = "0xA32C60", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xA32E78", Offset = "0xA32E78", VA = "0xA32E78", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xA32EB0", Offset = "0xA32EB0", VA = "0xA32EB0", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xA32EE8", Offset = "0xA32EE8", VA = "0xA32EE8", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xA32D24", Offset = "0xA32D24", VA = "0xA32D24")]
	private void runNextStageSpawning(int phase, float delay)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xA32EF8", Offset = "0xA32EF8", VA = "0xA32EF8")]
	private void runWaveSpawning(int phase)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xA330A4", Offset = "0xA330A4", VA = "0xA330A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D75A4", Offset = "0x7D75A4")]
	private IEnumerator waveRunner(Level theLevel, int phase)
	{
		return null;
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xA33170", Offset = "0xA33170", VA = "0xA33170")]
	public EnemyBossWaveSpawning()
	{
	}
}
[Token(Token = "0x2000125")]
public class EnemyBossMinionCycle : EnemyBossAction
{
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE60", Offset = "0x7CDE60")]
	private sealed class <runCycle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool initialWait;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyBossMinionCycle <>4__this;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <waitBetweenSpawn>5__2;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<string> <bandmatePool>5__3;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<string> <splinesPool>5__4;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WaitForSeconds <waitForEnemies>5__5;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__6;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xA2E8A4", Offset = "0xA2E8A4", VA = "0xA2E8A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0xA2E90C", Offset = "0xA2E90C", VA = "0xA2E90C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xA2DD30", Offset = "0xA2DD30", VA = "0xA2DD30")]
		[DebuggerHidden]
		public <runCycle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xA2E3BC", Offset = "0xA2E3BC", VA = "0xA2E3BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xA2E3C0", Offset = "0xA2E3C0", VA = "0xA2E3C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xA2E8AC", Offset = "0xA2E8AC", VA = "0xA2E8AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE70", Offset = "0x7CDE70")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startAlpha;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float endAlpha;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossMinionCycle <>4__this;

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xA2E178", Offset = "0xA2E178", VA = "0xA2E178")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xA2E304", Offset = "0xA2E304", VA = "0xA2E304")]
		internal void <updateInvulnerableState>b__0(float lerpAlpha)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xA2E39C", Offset = "0xA2E39C", VA = "0xA2E39C")]
		internal void <updateInvulnerableState>b__1()
		{
		}
	}

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnemySpawnPoint restingPoint;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0504", Offset = "0x7D0504")]
	public float waitForClearLevelDelay;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float initialDelay;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D053C", Offset = "0x7D053C")]
	public float delayBetweenBandSpawns;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<string> bandmateSpawnKeys;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0574", Offset = "0x7D0574")]
	public float timeSpentMoving;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public MovementType movementType;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<string> splinesToUse;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D05AC", Offset = "0x7D05AC")]
	public float fastMoveSpeed;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float normalMoveSpeed;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D05E4", Offset = "0x7D05E4")]
	public float fadeAlpha;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject theCollider;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshRenderer[] meshRenderers;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int bandmateCount;

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xA2DA4C", Offset = "0xA2DA4C", VA = "0xA2DA4C", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xA2DC80", Offset = "0xA2DC80", VA = "0xA2DC80", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xA2DC90", Offset = "0xA2DC90", VA = "0xA2DC90", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xA2DC40", Offset = "0xA2DC40", VA = "0xA2DC40")]
	private void startNewCycle(bool initialWait = false)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xA2DCA0", Offset = "0xA2DCA0", VA = "0xA2DCA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7608", Offset = "0x7D7608")]
	private IEnumerator runCycle(bool initialWait)
	{
		return null;
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xA2DD5C", Offset = "0xA2DD5C", VA = "0xA2DD5C")]
	private void enterRestingPhase()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xA2DF7C", Offset = "0xA2DF7C", VA = "0xA2DF7C")]
	private void enterMoveAroundPhase()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xA2DE3C", Offset = "0xA2DE3C", VA = "0xA2DE3C")]
	private void updateInvulnerableState(bool isInvulnerable)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xA2E180", Offset = "0xA2E180", VA = "0xA2E180")]
	private bool canMakeTaunts()
	{
		return default(bool);
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xA2E210", Offset = "0xA2E210", VA = "0xA2E210")]
	private void setTransparencyAlpha(float alpha)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xA2E2D0", Offset = "0xA2E2D0", VA = "0xA2E2D0")]
	public EnemyBossMinionCycle()
	{
	}
}
[Token(Token = "0x2000126")]
public class BossTentacleSpawnPositions : MonoBehaviour
{
	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> spawnPositionsForTentacles;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color gizmoColor;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x9F2388", Offset = "0x9F2388", VA = "0x9F2388")]
	public List<Vector3> spawnPositions()
	{
		return null;
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x9F24F8", Offset = "0x9F24F8", VA = "0x9F24F8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x9F2678", Offset = "0x9F2678", VA = "0x9F2678")]
	public BossTentacleSpawnPositions()
	{
	}
}
[Token(Token = "0x2000127")]
public class EnemyBossMallMinions : EnemyBossAction
{
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D061C", Offset = "0x7D061C")]
	public GameObject itemStageTwo;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform minionSpawnPositionStageTwo;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string minionSplineStageTwo;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0654", Offset = "0x7D0654")]
	public GameObject itemStageThree;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform minionSpawnPositionStageThree;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string minionSplineStageThree;

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xA2D848", Offset = "0xA2D848", VA = "0xA2D848", Slot = "4")]
	public override void resetBossAction()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xA2D890", Offset = "0xA2D890", VA = "0xA2D890", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xA2D928", Offset = "0xA2D928", VA = "0xA2D928")]
	private void processStage(GameObject itemToToggle, string minionKey, Vector3 spawnPosition, string splineKey)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xA2DA44", Offset = "0xA2DA44", VA = "0xA2DA44")]
	public EnemyBossMallMinions()
	{
	}
}
[Token(Token = "0x2000128")]
public class EnemyBossTurret : MonoBehaviour
{
	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lookAtSpeed;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D068C", Offset = "0x7D068C")]
	private EnemyController <enemyController>k__BackingField;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnemyBossTurretController bossTurretController;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform orientation;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D069C", Offset = "0x7D069C")]
	public float baseScale;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D06D4", Offset = "0x7D06D4")]
	public GameObject activeGeo;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject inactiveGeo;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject scalar;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem activateParticles;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve scalePopCurve;

	[Token(Token = "0x17000051")]
	public EnemyController enemyController
	{
		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xA31C34", Offset = "0xA31C34", VA = "0xA31C34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D766C", Offset = "0x7D766C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xA31C3C", Offset = "0xA31C3C", VA = "0xA31C3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D767C", Offset = "0x7D767C")]
		private set
		{
		}
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xA31C44", Offset = "0xA31C44", VA = "0xA31C44")]
	public void configure(EnemyBossTurretController bossTurretController, EnemyController enemyController, Vector3 lookAtPosition)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xA3207C", Offset = "0xA3207C", VA = "0xA3207C")]
	public bool isKilled()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xA31D18", Offset = "0xA31D18", VA = "0xA31D18")]
	private void updateGunShootingChecks(EnemyGun gun)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xA32114", Offset = "0xA32114", VA = "0xA32114")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xA31EFC", Offset = "0xA31EFC", VA = "0xA31EFC")]
	public void lookAt(Vector3 lookAtPosition, bool isMovingTowards)
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xA3214C", Offset = "0xA3214C", VA = "0xA3214C")]
	private bool isAllowedToFire()
	{
		return default(bool);
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xA321E4", Offset = "0xA321E4", VA = "0xA321E4")]
	private void updateToActiveState()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xA31E04", Offset = "0xA31E04", VA = "0xA31E04")]
	private void updateToInactiveState()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xA32374", Offset = "0xA32374", VA = "0xA32374")]
	public EnemyBossTurret()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xA32384", Offset = "0xA32384", VA = "0xA32384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D768C", Offset = "0x7D768C")]
	private void <updateToActiveState>b__19_0(float alpha)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xA3246C", Offset = "0xA3246C", VA = "0xA3246C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D769C", Offset = "0x7D769C")]
	private void <updateToInactiveState>b__20_0(float alpha)
	{
	}
}
[Token(Token = "0x2000129")]
public class EnemyBossTurretController : EnemyBossAction
{
	[Serializable]
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE80", Offset = "0x7CDE80")]
	private sealed class <>c
	{
		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<EnemyBossTurret> <>9__9_0;

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xA32C40", Offset = "0xA32C40", VA = "0xA32C40")]
		public <>c()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xA32C48", Offset = "0xA32C48", VA = "0xA32C48")]
		internal bool <cleanupDeadTurrets>b__9_0(EnemyBossTurret turret)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float turretCycleDuration;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<EnemyBossTurret> turretEnemies;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float cycleTurretAfterTime;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int activeTurretIndex;

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xA32564", Offset = "0xA32564", VA = "0xA32564", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xA32774", Offset = "0xA32774", VA = "0xA32774", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xA32A10", Offset = "0xA32A10", VA = "0xA32A10", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xA32778", Offset = "0xA32778", VA = "0xA32778")]
	private void setupTurrets()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xA32B44", Offset = "0xA32B44", VA = "0xA32B44")]
	private void cycleToNextTurret()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xA32668", Offset = "0xA32668", VA = "0xA32668")]
	private void cleanupDeadTurrets()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xA32300", Offset = "0xA32300", VA = "0xA32300")]
	public bool isCurrentActiveTurret(EnemyBossTurret turret)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xA32BC8", Offset = "0xA32BC8", VA = "0xA32BC8")]
	public EnemyBossTurretController()
	{
	}
}
[Serializable]
[Token(Token = "0x200012A")]
public struct WeakpointPair
{
	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject visual;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Collider theCollider;

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x890B4C", Offset = "0x890B4C", VA = "0x890B4C")]
	public void SetActive(bool isActive)
	{
	}
}
[Token(Token = "0x200012B")]
public class EnemyBossWeakpoints : EnemyBossAction
{
	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D070C", Offset = "0x7D070C")]
	public WeakpointPair stageTwo;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WeakpointPair stageThree;

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xA33474", Offset = "0xA33474", VA = "0xA33474", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xA334AC", Offset = "0xA334AC", VA = "0xA334AC", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xA334BC", Offset = "0xA334BC", VA = "0xA334BC", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xA334CC", Offset = "0xA334CC", VA = "0xA334CC")]
	public EnemyBossWeakpoints()
	{
	}
}
[Token(Token = "0x200012C")]
public class MallBossGunController : EnemyBossGunController
{
	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0744", Offset = "0x7D0744")]
	public string stageTwoGunId;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string stageThreeGunId;

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xA64EE8", Offset = "0xA64EE8", VA = "0xA64EE8", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xA64F84", Offset = "0xA64F84", VA = "0xA64F84", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xA64F14", Offset = "0xA64F14", VA = "0xA64F14")]
	private void setNewGunId(string gunConfigId)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xA64FB0", Offset = "0xA64FB0", VA = "0xA64FB0")]
	public MallBossGunController()
	{
	}
}
[Token(Token = "0x200012D")]
public class EnemyBossAnimatorController : EnemyBossAction
{
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE90", Offset = "0x7CDE90")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> completion;

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xA29E74", Offset = "0xA29E74", VA = "0xA29E74")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xA29F64", Offset = "0xA29F64", VA = "0xA29F64")]
		internal void <runDeathAfterDelay>b__0()
		{
		}
	}

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator theAnimator;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float deathAnimationDelayTime;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool runDeathAnimationProcess;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float cleanupTime;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D077C", Offset = "0x7D077C")]
	private bool <hasEnabledOnce>k__BackingField;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool ignoreNextWaveSpawnTrigger;

	[Token(Token = "0x17000052")]
	public bool hasEnabledOnce
	{
		[Token(Token = "0x6000900")]
		[Address(RVA = "0xA29A28", Offset = "0xA29A28", VA = "0xA29A28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D76AC", Offset = "0x7D76AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000901")]
		[Address(RVA = "0xA29A30", Offset = "0xA29A30", VA = "0xA29A30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D76BC", Offset = "0x7D76BC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xA29A3C", Offset = "0xA29A3C", VA = "0xA29A3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xA29A48", Offset = "0xA29A48", VA = "0xA29A48", Slot = "4")]
	public override void resetBossAction()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xA29B54", Offset = "0xA29B54", VA = "0xA29B54", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xA29BBC", Offset = "0xA29BBC", VA = "0xA29BBC", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xA29C24", Offset = "0xA29C24", VA = "0xA29C24", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xA29B38", Offset = "0xA29B38", VA = "0xA29B38")]
	public void setTrigger(string name)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xA29D18", Offset = "0xA29D18", VA = "0xA29D18")]
	public void runDeathAfterDelay(Action<bool> completion)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xA29E7C", Offset = "0xA29E7C", VA = "0xA29E7C")]
	public void waveSpawned(int phase)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xA29F40", Offset = "0xA29F40", VA = "0xA29F40")]
	public EnemyBossAnimatorController()
	{
	}
}
[Token(Token = "0x200012E")]
public class EnemyBossDamageShake : EnemyBossAction
{
	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float resetSpeed;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float offsetSizeStageOne;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float offsetSizeStageTwo;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float offsetSizeStageThree;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float offsetSize;

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xA2A030", Offset = "0xA2A030", VA = "0xA2A030", Slot = "4")]
	public override void resetBossAction()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xA2A0EC", Offset = "0xA2A0EC", VA = "0xA2A0EC", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xA2A0F8", Offset = "0xA2A0F8", VA = "0xA2A0F8", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xA2A104", Offset = "0xA2A104", VA = "0xA2A104", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xA2A29C", Offset = "0xA2A29C", VA = "0xA2A29C")]
	public void bossTakeDamage()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xA2A368", Offset = "0xA2A368", VA = "0xA2A368")]
	public EnemyBossDamageShake()
	{
	}
}
[Token(Token = "0x200012F")]
public class EnemyBossGunUpgradeDropper : EnemyBossAction
{
	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string upgradeSpawnPoint;

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xA2B354", Offset = "0xA2B354", VA = "0xA2B354", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xA2B410", Offset = "0xA2B410", VA = "0xA2B410", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xA2B358", Offset = "0xA2B358", VA = "0xA2B358")]
	private void spawnAGunUpgrade()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xA2B414", Offset = "0xA2B414", VA = "0xA2B414")]
	public EnemyBossGunUpgradeDropper()
	{
	}
}
[Token(Token = "0x2000130")]
public class EnemyBossHeadController : EnemyBossAction
{
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDEA0", Offset = "0x7CDEA0")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CopilotPowerupCrate target;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossHeadController <>4__this;

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xA2BED4", Offset = "0xA2BED4", VA = "0xA2BED4")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xA2C574", Offset = "0xA2C574", VA = "0xA2C574")]
		internal void <fireShieldBulletsAtCopilots>b__0()
		{
		}
	}

	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDEB0", Offset = "0x7CDEB0")]
	private sealed class <>c__DisplayClass15_1
	{
		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bullet theBullet;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass15_0 CS$<>8__locals1;

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xA2C860", Offset = "0xA2C860", VA = "0xA2C860")]
		public <>c__DisplayClass15_1()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xA2C868", Offset = "0xA2C868", VA = "0xA2C868")]
		internal bool <fireShieldBulletsAtCopilots>b__1()
		{
			return default(bool);
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xA2C968", Offset = "0xA2C968", VA = "0xA2C968")]
		internal void <fireShieldBulletsAtCopilots>b__2()
		{
		}
	}

	[Token(Token = "0x40006D9")]
	private const string HeadLoopId = "GalactoHeadLoop";

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasStartedFinalBattle;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D078C", Offset = "0x7D078C")]
	public string splineToMoveOn;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D07C4", Offset = "0x7D07C4")]
	public PlayableDirector timingDirector;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D07FC", Offset = "0x7D07FC")]
	public Transform gunTransform;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float delayBetweenShots;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator headFightAnimator;

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xA2B474", Offset = "0xA2B474", VA = "0xA2B474")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xA2B55C", Offset = "0xA2B55C", VA = "0xA2B55C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xA2B628", Offset = "0xA2B628", VA = "0xA2B628", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xA2B810", Offset = "0xA2B810", VA = "0xA2B810", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xA2B960", Offset = "0xA2B960", VA = "0xA2B960")]
	private void startFinalBattle()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xA2BAC8", Offset = "0xA2BAC8", VA = "0xA2BAC8")]
	public void spawnPilotSquadron()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xA2BB78", Offset = "0xA2BB78", VA = "0xA2BB78")]
	public void startFiringPilotGuns()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xA2BC28", Offset = "0xA2BC28", VA = "0xA2BC28")]
	public void stopFiringPilotGuns()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xA2BD24", Offset = "0xA2BD24", VA = "0xA2BD24")]
	public void fireShieldBulletsAtCopilots()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xA2BEDC", Offset = "0xA2BEDC", VA = "0xA2BEDC")]
	public void startBattle()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xA2C104", Offset = "0xA2C104", VA = "0xA2C104", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xA2B738", Offset = "0xA2B738", VA = "0xA2B738")]
	private void updateAllowance(EnemyGun gun)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xA2C168", Offset = "0xA2C168", VA = "0xA2C168")]
	private void clearAllowance(EnemyGun gun)
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xA2C210", Offset = "0xA2C210", VA = "0xA2C210")]
	public bool isHeadFightingTheBattle()
	{
		return default(bool);
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xA2C2A4", Offset = "0xA2C2A4", VA = "0xA2C2A4")]
	private bool isDamageAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xA2C2A8", Offset = "0xA2C2A8", VA = "0xA2C2A8")]
	private bool isGunAllowedToFire()
	{
		return default(bool);
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xA2C2AC", Offset = "0xA2C2AC", VA = "0xA2C2AC")]
	public void directDamage(float damageAmount, string damageId)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xA2C47C", Offset = "0xA2C47C", VA = "0xA2C47C")]
	public void playSoundEventWithKey(string soundEventKey)
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xA2C508", Offset = "0xA2C508", VA = "0xA2C508")]
	public EnemyBossHeadController()
	{
	}
}
[Token(Token = "0x2000131")]
public class EnemyBossHeadDeathAnimation : MonoBehaviour
{
	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDEC0", Offset = "0x7CDEC0")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnemyBossHeadDeathAnimation <>4__this;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startPosition;

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xA2CDC0", Offset = "0xA2CDC0", VA = "0xA2CDC0")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xA2CF7C", Offset = "0xA2CF7C", VA = "0xA2CF7C")]
		internal void <flyAway>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xA2D068", Offset = "0xA2D068", VA = "0xA2D068")]
		internal void <flyAway>b__1()
		{
		}
	}

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyController myController;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0834", Offset = "0x7D0834")]
	public float delayBeforeFlyAway;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeToFlyBack;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve flyBackCurve;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 flyAwayPoint;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float extraDelayAfterPilotsFlyIn;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D086C", Offset = "0x7D086C")]
	public EnemyBossTaunt tauntController;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D08A4", Offset = "0x7D08A4")]
	public float cleanupTime;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action<bool> regularDeathLogic;

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xA2C9B8", Offset = "0xA2C9B8", VA = "0xA2C9B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xA2CB04", Offset = "0xA2CB04", VA = "0xA2CB04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xA2CB3C", Offset = "0xA2CB3C", VA = "0xA2CB3C")]
	public void runDeathAnimation(Action<bool> regularDeathLogic)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xA2CC74", Offset = "0xA2CC74", VA = "0xA2CC74")]
	private void flyAway()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xA2CDC8", Offset = "0xA2CDC8", VA = "0xA2CDC8")]
	private void copilotsDoTheirThing()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xA2CE9C", Offset = "0xA2CE9C", VA = "0xA2CE9C")]
	public void pilotHit()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xA2CEB4", Offset = "0xA2CEB4", VA = "0xA2CEB4")]
	private void animationComplete()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xA2CF58", Offset = "0xA2CF58", VA = "0xA2CF58")]
	public EnemyBossHeadDeathAnimation()
	{
	}
}
[Token(Token = "0x2000132")]
public class EnemyBossSpawnOnDeath : EnemyBossAction
{
	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDED0", Offset = "0x7CDED0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 spawnPosition;

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xA302B0", Offset = "0xA302B0", VA = "0xA302B0")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xA302C8", Offset = "0xA302C8", VA = "0xA302C8")]
		internal void <bossDidDie>b__0()
		{
		}
	}

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spawnPoint;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnemyBossAnimatorController animatorController;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float spawnDelay;

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xA30154", Offset = "0xA30154", VA = "0xA30154", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xA302B8", Offset = "0xA302B8", VA = "0xA302B8")]
	public EnemyBossSpawnOnDeath()
	{
	}
}
[Token(Token = "0x2000133")]
public class EnemyBossSpawnVFXOnDeath : EnemyBossAction
{
	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnemyBossAnimatorController animatorController;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float spawnDelay;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string specialVFXOnDeath;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float cleanUpTime;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform spawnPos;

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xA30354", Offset = "0xA30354", VA = "0xA30354", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xA30430", Offset = "0xA30430", VA = "0xA30430")]
	private void spawnSpecialVFXOnDeath()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xA305F8", Offset = "0xA305F8", VA = "0xA305F8")]
	public EnemyBossSpawnVFXOnDeath()
	{
	}
}
[Token(Token = "0x2000134")]
public class EnemyBossStageChangeCallout : EnemyBossAction
{
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDEE0", Offset = "0x7CDEE0")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossStageChangeCallout <>4__this;

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xA308AC", Offset = "0xA308AC", VA = "0xA308AC")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xA308C8", Offset = "0xA308C8", VA = "0xA308C8")]
		internal void <showMessage>b__0()
		{
		}
	}

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D08DC", Offset = "0x7D08DC")]
	public string calloutStageTwo;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string calloutStageThree;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0914", Offset = "0x7D0914")]
	public float delayBeforeShowing;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float showTime;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xA307C4", Offset = "0xA307C4", VA = "0xA307C4", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xA308A4", Offset = "0xA308A4", VA = "0xA308A4", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xA307CC", Offset = "0xA307CC", VA = "0xA307CC")]
	private void showMessage(string key)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xA308B4", Offset = "0xA308B4", VA = "0xA308B4")]
	public EnemyBossStageChangeCallout()
	{
	}
}
[Token(Token = "0x2000135")]
public class GalactoHeadPositionAtRest : SingletonMono<GalactoHeadPositionAtRest>
{
	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 globalPosition;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 globalPositionForFight;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlaytimeOverseer overseer;

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x9DE5CC", Offset = "0x9DE5CC", VA = "0x9DE5CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x9DE68C", Offset = "0x9DE68C", VA = "0x9DE68C")]
	public Vector3 getPostion()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x9DE6F8", Offset = "0x9DE6F8", VA = "0x9DE6F8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x9DE800", Offset = "0x9DE800", VA = "0x9DE800")]
	public GalactoHeadPositionAtRest()
	{
	}
}
[Token(Token = "0x2000136")]
public class BreakdownEnemyDeath : MonoBehaviour
{
	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDEF0", Offset = "0x7CDEF0")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BreakdownEnemyDeath <>4__this;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 baseScale;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<bool> completion;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action <>9__2;

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x9F2DC4", Offset = "0x9F2DC4", VA = "0x9F2DC4")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x9F2F78", Offset = "0x9F2F78", VA = "0x9F2F78")]
		internal void <runDeathAnimation>b__0(float alpha)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x9F318C", Offset = "0x9F318C", VA = "0x9F318C")]
		internal void <runDeathAnimation>b__1()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x9F3288", Offset = "0x9F3288", VA = "0x9F3288")]
		internal void <runDeathAnimation>b__2()
		{
		}
	}

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnemyController myController;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform scaleEffectTransform;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D094C", Offset = "0x7D094C")]
	public Transform spawnPositionOne;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spawnPositionTwo;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spawnPositionThree;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform spawnPositionFour;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float spawnDistance;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0984", Offset = "0x7D0984")]
	public AnimationCurve shakeCurve;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float shakeOffset;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BBSpinner spinner;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float holdAnimationTime;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float animationProgressToSplitChildren;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator deathSplitAnimator;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ParticleSystem initialExplosion;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float baseSpinSpeed;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve spinOnDeathCurve;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve scaleOnDeathCurve;

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x9F2A30", Offset = "0x9F2A30", VA = "0x9F2A30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x9F2BA0", Offset = "0x9F2BA0", VA = "0x9F2BA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x9F2C34", Offset = "0x9F2C34", VA = "0x9F2C34")]
	public void runDeathAnimation(Action<bool> completion)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x9F2DCC", Offset = "0x9F2DCC", VA = "0x9F2DCC")]
	private void spawnForPosition(Vector3 childPosition)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x9F2F4C", Offset = "0x9F2F4C", VA = "0x9F2F4C")]
	public BreakdownEnemyDeath()
	{
	}
}
[Token(Token = "0x2000137")]
public class CoinSpinner : MonoBehaviour
{
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve distanceVsSpeed;

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x9F9D64", Offset = "0x9F9D64", VA = "0x9F9D64")]
	public void resetSpin()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x9F9DF0", Offset = "0x9F9DF0", VA = "0x9F9DF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x9F9F5C", Offset = "0x9F9F5C", VA = "0x9F9F5C")]
	public CoinSpinner()
	{
	}
}
[Token(Token = "0x2000138")]
public class EnemyCollider : MonoBehaviour, IDamageable
{
	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnemyController controller;

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xA334D4", Offset = "0xA334D4", VA = "0xA334D4")]
	public void setOwner(EnemyController controller)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xA334DC", Offset = "0xA334DC", VA = "0xA334DC", Slot = "5")]
	public bool isDamageable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xA33570", Offset = "0xA33570", VA = "0xA33570", Slot = "4")]
	public bool isAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xA33608", Offset = "0xA33608", VA = "0xA33608", Slot = "6")]
	public void takeDamage(float damageAmount, string damageSource)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xA336C0", Offset = "0xA336C0", VA = "0xA336C0")]
	public void forceKill()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xA33B18", Offset = "0xA33B18", VA = "0xA33B18")]
	public void enemyKilledPlayerInCollision()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xA33C64", Offset = "0xA33C64", VA = "0xA33C64")]
	public void printExtraInformationForPlayerKiller()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xA33DE0", Offset = "0xA33DE0", VA = "0xA33DE0")]
	public EnemyCollider()
	{
	}
}
[Token(Token = "0x2000139")]
public enum EnemyClass
{
	[Token(Token = "0x400070D")]
	None = 0,
	[Token(Token = "0x400070E")]
	Popcorn = 1,
	[Token(Token = "0x400070F")]
	SmallFleet = 2,
	[Token(Token = "0x4000710")]
	MediumGunPatterns = 3,
	[Token(Token = "0x4000711")]
	MediumYouTubes = 4,
	[Token(Token = "0x4000712")]
	SmallHoming = 5,
	[Token(Token = "0x4000713")]
	LargeGunPatterns = 6,
	[Token(Token = "0x4000714")]
	LargeTank = 7,
	[Token(Token = "0x4000715")]
	PopcornAlt = 8,
	[Token(Token = "0x4000716")]
	MiniBoss = 9,
	[Token(Token = "0x4000717")]
	Boss = 11,
	[Token(Token = "0x4000718")]
	FinalBoss = 12,
	[Token(Token = "0x4000719")]
	Breakdown = 13,
	[Token(Token = "0x400071A")]
	BreakdownChild = 14,
	[Token(Token = "0x400071B")]
	SpecialHellBandmate = 20,
	[Token(Token = "0x400071C")]
	SpecialMallBossMinion = 30,
	[Token(Token = "0x400071D")]
	SpecialMallBossTurret = 31,
	[Token(Token = "0x400071E")]
	SpecialSpaceLaser = 40,
	[Token(Token = "0x400071F")]
	SpecialTutorialDodgeBullets = 50,
	[Token(Token = "0x4000720")]
	SpecialMallMinibossSpawn = 60,
	[Token(Token = "0x4000721")]
	SpecialLandmineSpawner = 70
}
[Token(Token = "0x200013A")]
public class EnemyController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDF00", Offset = "0x7CDF00")]
	private sealed class <>c
	{
		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Transform> <>9__63_0;

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xA37784", Offset = "0xA37784", VA = "0xA37784")]
		public <>c()
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xA3778C", Offset = "0xA3778C", VA = "0xA3778C")]
		internal bool <spawn>b__63_0(Transform transformTargets)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDF10", Offset = "0x7CDF10")]
	private sealed class <>c__DisplayClass64_0
	{
		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem spawnInEffect;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trackingTransform;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject spawnInEffectObject;

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xA34F60", Offset = "0xA34F60", VA = "0xA34F60")]
		public <>c__DisplayClass64_0()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xA377F8", Offset = "0xA377F8", VA = "0xA377F8")]
		internal void <runSpawnInEffect>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xA37884", Offset = "0xA37884", VA = "0xA37884")]
		internal void <runSpawnInEffect>b__1()
		{
		}
	}

	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDF20", Offset = "0x7CDF20")]
	private sealed class <>c__DisplayClass65_0
	{
		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 lerpScale;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 initialScale;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyController <>4__this;

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xA34F68", Offset = "0xA34F68", VA = "0xA34F68")]
		public <>c__DisplayClass65_0()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xA37890", Offset = "0xA37890", VA = "0xA37890")]
		internal void <scaleOnSpawn>b__0(float lerpVal)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xA37964", Offset = "0xA37964", VA = "0xA37964")]
		internal void <scaleOnSpawn>b__1()
		{
		}
	}

	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDF30", Offset = "0x7CDF30")]
	private sealed class <>c__DisplayClass86_0
	{
		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 start;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 end;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 animatingScale;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EnemyController <>4__this;

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xA35E2C", Offset = "0xA35E2C", VA = "0xA35E2C")]
		public <>c__DisplayClass86_0()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xA379A4", Offset = "0xA379A4", VA = "0xA379A4")]
		internal void <normalDeathProcess>b__0(float alpha)
		{
		}
	}

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<EnemyClass, string> explosionTemplateMapping;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, int> explosionPreloads;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, string> explosionSounds;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string SpawnInEffectKey;

	[Token(Token = "0x4000726")]
	private const float ScaleOnSpawnDuration = 0.25f;

	[Token(Token = "0x4000727")]
	private const float HitFlashValue = 0.5f;

	[Token(Token = "0x4000728")]
	private const float TimeForFlash = 0.075f;

	[Token(Token = "0x4000729")]
	private const int GlobalScoreMultiplier = 100;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D09BC", Offset = "0x7D09BC")]
	public EnemyClass enemyClass;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float movementSpeed;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D09F4", Offset = "0x7D09F4")]
	public GameObject geo;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject orientation;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform colliderAlignment;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject collisions;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Movement mover;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D0A2C", Offset = "0x7D0A2C")]
	public List<Transform> missileTargets;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animation secondaryAnimation;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SimpleModelFlash modelFlash;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float timeForScore;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float scaleForScore;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float speedForScore;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0A64", Offset = "0x7D0A64")]
	public string soundEventId;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float minTimeBetweenTaunts;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float maxTimeBetweenTaunts;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0A9C", Offset = "0x7D0A9C")]
	public float missionIconOffset;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool missionOffsetUsesTransformUp;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0AD4", Offset = "0x7D0AD4")]
	public EnemyGun gun;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public EnemyGun altGun;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool startFireAltGun;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public EnemyGun specialBossGun;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public bool sendBossTakeDamageMessage;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0B2C", Offset = "0x7D0B2C")]
	[HideInInspector]
	public string bossHealthId;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0B78", Offset = "0x7D0B78")]
	[HideInInspector]
	public Transform specialVFXPosition;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ModelSwapAnimation modelSwap;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string extraSoundEventSuffix;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float timeUntilTaunt;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string gunConfigOverride;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string lastDamageSource;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3? startingScale;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float currentHealth;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float healthAtFull;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Action<Action<bool>> customGameplayDeath;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Func<bool> isDamageAllowed;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Func<bool> isTauntSoundAllowed;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0BC4", Offset = "0x7D0BC4")]
	private bool <killed>k__BackingField;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0BD4", Offset = "0x7D0BD4")]
	private bool <canTakeDamage>k__BackingField;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0BE4", Offset = "0x7D0BE4")]
	private List<EnemyCollider> <childColliders>k__BackingField;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0BF4", Offset = "0x7D0BF4")]
	private bool <isShowingChallengeIcon>k__BackingField;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly Dictionary<string, EnemyClass> enemyGroupMap;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0C04", Offset = "0x7D0C04")]
	private string <spawnContext>k__BackingField;

	[Token(Token = "0x17000053")]
	public bool killed
	{
		[Token(Token = "0x600094D")]
		[Address(RVA = "0xA33DE8", Offset = "0xA33DE8", VA = "0xA33DE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D76CC", Offset = "0x7D76CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600094E")]
		[Address(RVA = "0xA33DF0", Offset = "0xA33DF0", VA = "0xA33DF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D76DC", Offset = "0x7D76DC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public bool canTakeDamage
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0xA33DFC", Offset = "0xA33DFC", VA = "0xA33DFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D76EC", Offset = "0x7D76EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000950")]
		[Address(RVA = "0xA33E04", Offset = "0xA33E04", VA = "0xA33E04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D76FC", Offset = "0x7D76FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public List<EnemyCollider> childColliders
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0xA33E10", Offset = "0xA33E10", VA = "0xA33E10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D770C", Offset = "0x7D770C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000952")]
		[Address(RVA = "0xA33E18", Offset = "0xA33E18", VA = "0xA33E18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D771C", Offset = "0x7D771C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public bool isShowingChallengeIcon
	{
		[Token(Token = "0x6000953")]
		[Address(RVA = "0xA33E28", Offset = "0xA33E28", VA = "0xA33E28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D772C", Offset = "0x7D772C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000954")]
		[Address(RVA = "0xA33E30", Offset = "0xA33E30", VA = "0xA33E30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D773C", Offset = "0x7D773C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public string spawnContext
	{
		[Token(Token = "0x600098C")]
		[Address(RVA = "0xA37138", Offset = "0xA37138", VA = "0xA37138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D774C", Offset = "0x7D774C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600098D")]
		[Address(RVA = "0xA37140", Offset = "0xA37140", VA = "0xA37140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D775C", Offset = "0x7D775C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xA33E3C", Offset = "0xA33E3C", VA = "0xA33E3C")]
	public void reset()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xA34968", Offset = "0xA34968", VA = "0xA34968")]
	public void setGunOverrideFromSpawn(string gunId)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xA343D0", Offset = "0xA343D0", VA = "0xA343D0")]
	public void resetGun()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xA28AF4", Offset = "0xA28AF4", VA = "0xA28AF4")]
	public void spawn(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xA34A1C", Offset = "0xA34A1C", VA = "0xA34A1C")]
	private void runSpawnInEffect()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xA3475C", Offset = "0xA3475C", VA = "0xA3475C")]
	private void scaleOnSpawn()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xA34DAC", Offset = "0xA34DAC", VA = "0xA34DAC")]
	private void setupChallengeIcon()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xA34F70", Offset = "0xA34F70", VA = "0xA34F70")]
	private void checkForMissionIconSpawn()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xA350EC", Offset = "0xA350EC", VA = "0xA350EC")]
	private void checkForMissionIconHide()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xA351A8", Offset = "0xA351A8", VA = "0xA351A8")]
	public void assignCustomGameplayDeath(Action<Action<bool>> customGameplayDeath)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xA2CB28", Offset = "0xA2CB28", VA = "0xA2CB28")]
	public void clearCustomDeath()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xA351B8", Offset = "0xA351B8", VA = "0xA351B8")]
	public void assignDamageCheckFunction(Func<bool> isDamageAllowed)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xA2C1FC", Offset = "0xA2C1FC", VA = "0xA2C1FC")]
	public void clearDamageCheckFunction()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xA28FB0", Offset = "0xA28FB0", VA = "0xA28FB0")]
	public void attachMover(Movement theMover)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xA351C8", Offset = "0xA351C8", VA = "0xA351C8")]
	public HashSet<string> getBulletsUsed()
	{
		return null;
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xA2C0E4", Offset = "0xA2C0E4", VA = "0xA2C0E4")]
	public void setMoveSpeed(float moveSpeed)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xA353F8", Offset = "0xA353F8", VA = "0xA353F8")]
	private void outOfViewport()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xA356D4", Offset = "0xA356D4", VA = "0xA356D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xA31154", Offset = "0xA31154", VA = "0xA31154")]
	public void playTauntSoundEvent()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xA359A0", Offset = "0xA359A0", VA = "0xA359A0")]
	public void setIsTauntSoundAllowed(Func<bool> isTauntSoundAllowed)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xA35880", Offset = "0xA35880", VA = "0xA35880")]
	private bool canPlayTauntSound()
	{
		return default(bool);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xA2E198", Offset = "0xA2E198", VA = "0xA2E198")]
	public bool isDamageable()
	{
		return default(bool);
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xA2C2C4", Offset = "0xA2C2C4", VA = "0xA2C2C4")]
	public void takeDamage(float damageAmount, string damageSource)
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xA2AD7C", Offset = "0xA2AD7C", VA = "0xA2AD7C")]
	public void flashMaterial()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xA33B30", Offset = "0xA33B30", VA = "0xA33B30")]
	public void enemyKilledPlayerInCollision()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xA336DC", Offset = "0xA336DC", VA = "0xA336DC")]
	public void die(bool isGameplayDeath = true)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xA35B80", Offset = "0xA35B80", VA = "0xA35B80")]
	private void normalDeathProcess(bool isGameplayDeath)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xA35498", Offset = "0xA35498", VA = "0xA35498")]
	private void removeFromBoard()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xA359B0", Offset = "0xA359B0", VA = "0xA359B0")]
	private void explodeOnDeath()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xA317A4", Offset = "0xA317A4", VA = "0xA317A4")]
	public void explodeMeAsClass(EnemyClass theClass)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xA36530", Offset = "0xA36530", VA = "0xA36530")]
	public static void explode(EnemyClass theClass, Vector3 position)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xA36380", Offset = "0xA36380", VA = "0xA36380")]
	public static void explosionEffect(string key, Vector3 position, bool playSound = true)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xA342AC", Offset = "0xA342AC", VA = "0xA342AC")]
	public void startSecondaryAnimation()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xA35E34", Offset = "0xA35E34", VA = "0xA35E34")]
	public void stopSecondaryAnimation()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xA35AB8", Offset = "0xA35AB8", VA = "0xA35AB8")]
	public int score()
	{
		return default(int);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000978")]
	[Address(RVA = "0xA368F4", Offset = "0xA368F4", VA = "0xA368F4")]
	public float healthRemainingPercent()
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000979")]
	[Address(RVA = "0xA36900", Offset = "0xA36900", VA = "0xA36900")]
	public string killingDamageSourceId()
	{
		return null;
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xA2D4AC", Offset = "0xA2D4AC", VA = "0xA2D4AC")]
	public void setInvulnerableState(bool isInvulnerable)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xA2FDCC", Offset = "0xA2FDCC", VA = "0xA2FDCC")]
	public void updateSoundEventSuffix(string suffix)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600097C")]
	[Address(RVA = "0xA36964", Offset = "0xA36964", VA = "0xA36964")]
	public bool isBoss()
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600097D")]
	[Address(RVA = "0xA36978", Offset = "0xA36978", VA = "0xA36978")]
	public bool isMiniboss()
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600097E")]
	[Address(RVA = "0xA36988", Offset = "0xA36988", VA = "0xA36988")]
	public Vector3 getMissionIconPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xA34920", Offset = "0xA34920", VA = "0xA34920")]
	private string HomingLoopSoundKey()
	{
		return null;
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xA34D4C", Offset = "0xA34D4C", VA = "0xA34D4C")]
	public static string AppearSoundEventKey(string eventId)
	{
		return null;
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xA34970", Offset = "0xA34970", VA = "0xA34970")]
	public static string AttackSoundEventKey(string eventId, string suffix)
	{
		return null;
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xA35A58", Offset = "0xA35A58", VA = "0xA35A58")]
	public static string DeathSoundEventKey(string eventId)
	{
		return null;
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xA358F4", Offset = "0xA358F4", VA = "0xA358F4")]
	public static string TauntSoundEventKey(string eventId, string suffix)
	{
		return null;
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xA36ACC", Offset = "0xA36ACC", VA = "0xA36ACC")]
	public static bool isRareEnemy(EnemyClass enemyClass)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000985")]
	[Address(RVA = "0xA36B00", Offset = "0xA36B00", VA = "0xA36B00")]
	public static bool isStringAnEnemyClass(string enemyClassString)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000986")]
	[Address(RVA = "0xA36B84", Offset = "0xA36B84", VA = "0xA36B84")]
	public static EnemyClass enemyClassFromString(string enemyClassString, EnemyClass defaultClass = EnemyClass.None)
	{
		return default(EnemyClass);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000987")]
	[Address(RVA = "0xA36CA0", Offset = "0xA36CA0", VA = "0xA36CA0")]
	private int healthForEnemy()
	{
		return default(int);
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xA35EC8", Offset = "0xA35EC8", VA = "0xA35EC8")]
	public static string explosionKey(EnemyClass theClass)
	{
		return null;
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xA36E18", Offset = "0xA36E18", VA = "0xA36E18")]
	public static Dictionary<string, int> getAllExplosionPreloadingAmounts()
	{
		return null;
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xA365C4", Offset = "0xA365C4", VA = "0xA365C4")]
	private static string explosionSoundKey(string explosionId)
	{
		return null;
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xA36FA4", Offset = "0xA36FA4", VA = "0xA36FA4")]
	public static string localisedEnemyName(EnemyClass enemyType)
	{
		return null;
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xA37150", Offset = "0xA37150", VA = "0xA37150")]
	public void setDebugSpawnContext([Optional] string context)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xA37160", Offset = "0xA37160", VA = "0xA37160")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xA371A4", Offset = "0xA371A4", VA = "0xA371A4")]
	public EnemyController()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xA37554", Offset = "0xA37554", VA = "0xA37554")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D776C", Offset = "0x7D776C")]
	private void <normalDeathProcess>b__86_1()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xA37558", Offset = "0xA37558", VA = "0xA37558")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D777C", Offset = "0x7D777C")]
	private void <explodeOnDeath>b__88_0()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xA37660", Offset = "0xA37660", VA = "0xA37660")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D778C", Offset = "0x7D778C")]
	private void <explodeOnDeath>b__88_1()
	{
	}
}
[Token(Token = "0x200013B")]
public class EnemyFleetTemplate : MonoBehaviour
{
	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform[] kids;

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xA37B20", Offset = "0xA37B20", VA = "0xA37B20")]
	public Vector3 fleetPositionAtIndex(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xA37C9C", Offset = "0xA37C9C", VA = "0xA37C9C")]
	public EnemyFleetTemplate()
	{
	}
}
[Token(Token = "0x200013C")]
public enum EnemyGunType
{
	[Token(Token = "0x4000756")]
	none = 0,
	[Token(Token = "0x4000757")]
	standard = 1,
	[Token(Token = "0x4000758")]
	burst = 3,
	[Token(Token = "0x4000759")]
	radial = 4,
	[Token(Token = "0x400075A")]
	spray = 5,
	[Token(Token = "0x400075B")]
	saturnMissile = 6,
	[Token(Token = "0x400075C")]
	bubble = 7,
	[Token(Token = "0x400075D")]
	random = 8,
	[Token(Token = "0x400075E")]
	grid = 9,
	[Token(Token = "0x400075F")]
	gridFromPlayer = 10
}
[Serializable]
[Token(Token = "0x200013D")]
public struct GunConfig
{
	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string gunId;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0C14", Offset = "0x7D0C14")]
	public EnemyGunType gunType;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float initialShotDelay;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int bulletCount;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int shotSpreadAngle;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0C4C", Offset = "0x7D0C4C")]
	public float burstDelay;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0C84", Offset = "0x7D0C84")]
	public float sprayTime;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float backAndForthCount;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0CBC", Offset = "0x7D0CBC")]
	public float repeatShotDelay;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0CF4", Offset = "0x7D0CF4")]
	public float gridShotGapPercent;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gridSpacing;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0D2C", Offset = "0x7D0D2C")]
	public List<string> bulletPrefabKeys;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float bulletSpinSpeed;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 bulletSpinAxis;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool horizontalBullets;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float bulletSpeedMultiplier;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0D64", Offset = "0x7D0D64")]
	public string gunAnimationName;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float gunAnimationPlaybackRate;

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x86B380", Offset = "0x86B380", VA = "0x86B380")]
	public GunConfig(string raw)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x86B388", Offset = "0x86B388", VA = "0x86B388")]
	public string export()
	{
		return null;
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x86B390", Offset = "0x86B390", VA = "0x86B390")]
	public AnimationClip getGunAnimationClip()
	{
		return null;
	}
}
[Token(Token = "0x200013E")]
public class EnemyGun : MonoBehaviour
{
	[Token(Token = "0x2000335")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDF40", Offset = "0x7CDF40")]
	private sealed class <shootRandom>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyGun <>4__this;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600181A")]
			[Address(RVA = "0x9D78F8", Offset = "0x9D78F8", VA = "0x9D78F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600181C")]
			[Address(RVA = "0x9D7960", Offset = "0x9D7960", VA = "0x9D7960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x9D7680", Offset = "0x9D7680", VA = "0x9D7680")]
		[DebuggerHidden]
		public <shootRandom>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x9D76AC", Offset = "0x9D76AC", VA = "0x9D76AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x9D76B0", Offset = "0x9D76B0", VA = "0x9D76B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x9D7900", Offset = "0x9D7900", VA = "0x9D7900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDF50", Offset = "0x7CDF50")]
	private sealed class <burstShots>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyGun <>4__this;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <burstShotCountdown>5__2;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001820")]
			[Address(RVA = "0x9D7610", Offset = "0x9D7610", VA = "0x9D7610", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001822")]
			[Address(RVA = "0x9D7678", Offset = "0x9D7678", VA = "0x9D7678", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x9D7478", Offset = "0x9D7478", VA = "0x9D7478")]
		[DebuggerHidden]
		public <burstShots>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x9D74A4", Offset = "0x9D74A4", VA = "0x9D74A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x9D74A8", Offset = "0x9D74A8", VA = "0x9D74A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x9D7618", Offset = "0x9D7618", VA = "0x9D7618", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDF60", Offset = "0x7CDF60")]
	private sealed class <sprayShots>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyGun <>4__this;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <burstInterval>5__2;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <angleInterval>5__3;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <bulletCountdown>5__4;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <turnAngle>5__5;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <maxDegrees>5__6;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001826")]
			[Address(RVA = "0x9D7C24", Offset = "0x9D7C24", VA = "0x9D7C24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001828")]
			[Address(RVA = "0x9D7C8C", Offset = "0x9D7C8C", VA = "0x9D7C8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x9D7968", Offset = "0x9D7968", VA = "0x9D7968")]
		[DebuggerHidden]
		public <sprayShots>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x9D7994", Offset = "0x9D7994", VA = "0x9D7994", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x9D7998", Offset = "0x9D7998", VA = "0x9D7998", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x9D7C2C", Offset = "0x9D7C2C", VA = "0x9D7C2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000772")]
	private const float TutorialMessageDisplayTime = 4.5f;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0D9C", Offset = "0x7D0D9C")]
	[HideInInspector]
	public string gunConfigId;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> overrideBulletPrefabKeys;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform gunTransform;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0DE8", Offset = "0x7D0DE8")]
	public bool doBossTaunt;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0E20", Offset = "0x7D0E20")]
	public Animation gunMoveAnimation;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem muzzleFlash;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnemyGunType gunType;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float initialShotDelay;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int bulletCount;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int shotSpreadAngle;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float repeatShotDelay;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float burstDelay;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float sprayTime;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float backAndForthCount;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<string> bulletPrefabKeys;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float bulletSpinSpeed;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 bulletSpinAxis;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool horizontalBullets;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float bulletsSpeedMultiplier;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float gunAnimationPlaybackRate;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float gridShotGapPercent;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float gridSpacing;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isAssignedFromConfig;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GunConfig assignedConfig;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isEnemyGun;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private EnemyClass enemyClass;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float shotDelay;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int bulletIndex;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string fireGunSoundKey;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string spawnContext;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string shooterId;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Func<bool> isShootingAllowedFunction;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0E58", Offset = "0x7D0E58")]
	private bool <isShooting>k__BackingField;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0E68", Offset = "0x7D0E68")]
	private bool <hasActiveFiringRoutine>k__BackingField;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, EnemyGunType> enemyGunTypeMap;

	[Token(Token = "0x17000058")]
	public bool isShooting
	{
		[Token(Token = "0x600099A")]
		[Address(RVA = "0xA37CA4", Offset = "0xA37CA4", VA = "0xA37CA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D779C", Offset = "0x7D779C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600099B")]
		[Address(RVA = "0xA37CAC", Offset = "0xA37CAC", VA = "0xA37CAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D77AC", Offset = "0x7D77AC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public bool hasActiveFiringRoutine
	{
		[Token(Token = "0x600099C")]
		[Address(RVA = "0xA37CB8", Offset = "0xA37CB8", VA = "0xA37CB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D77BC", Offset = "0x7D77BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600099D")]
		[Address(RVA = "0xA37CC0", Offset = "0xA37CC0", VA = "0xA37CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D77CC", Offset = "0x7D77CC")]
		private set
		{
		}
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xA29534", Offset = "0xA29534", VA = "0xA29534")]
	public void beginShooting(string shooterId, Transform parent, EnemyClass enemyClass, bool isEnemy = true, [Optional] string gunConfigOverride)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xA2AF30", Offset = "0xA2AF30", VA = "0xA2AF30")]
	public void clearShootingAllowanceFunction()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xA3813C", Offset = "0xA3813C", VA = "0xA3813C")]
	public void setShootingAllowanceFunction(Func<bool> isShootingAllowedFunction)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xA3814C", Offset = "0xA3814C", VA = "0xA3814C")]
	public void setBulletCountMultiplier(float multiplier)
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xA37CCC", Offset = "0xA37CCC", VA = "0xA37CCC")]
	public void setupFromConfig(GunConfig theConfig)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xA3535C", Offset = "0xA3535C", VA = "0xA3535C")]
	public List<string> getBulletKeysForPooling()
	{
		return null;
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xA29988", Offset = "0xA29988", VA = "0xA29988")]
	public void endShooting()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xA381D4", Offset = "0xA381D4", VA = "0xA381D4")]
	public void updateSoundKey(string fireGunSoundKey)
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xA381E4", Offset = "0xA381E4", VA = "0xA381E4")]
	private void Update()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xA38324", Offset = "0xA38324", VA = "0xA38324")]
	private void fireGun()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xA38FE4", Offset = "0xA38FE4", VA = "0xA38FE4")]
	private string nextBulletPrefabKey()
	{
		return null;
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xA39078", Offset = "0xA39078", VA = "0xA39078")]
	public void setBullets(string rawList)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xA39118", Offset = "0xA39118", VA = "0xA39118")]
	public void setBullets(string[] list)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xA384E8", Offset = "0xA384E8", VA = "0xA384E8")]
	private void shootStandard()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xA388B8", Offset = "0xA388B8", VA = "0xA388B8")]
	private void shootMissile()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xA38654", Offset = "0xA38654", VA = "0xA38654")]
	private void shootRadial()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xA38ADC", Offset = "0xA38ADC", VA = "0xA38ADC")]
	private void shootBubble()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xA38C18", Offset = "0xA38C18", VA = "0xA38C18")]
	private void shootGrid()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xA38D88", Offset = "0xA38D88", VA = "0xA38D88")]
	private void shootGridFromPlayer()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xA394F0", Offset = "0xA394F0", VA = "0xA394F0")]
	private List<Vector3> getGridOffsets(Vector3 extraOffsetPosition)
	{
		return null;
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xA38F68", Offset = "0xA38F68", VA = "0xA38F68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D77DC", Offset = "0x7D77DC")]
	private IEnumerator shootRandom()
	{
		return null;
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xA385D8", Offset = "0xA385D8", VA = "0xA385D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7840", Offset = "0x7D7840")]
	private IEnumerator burstShots()
	{
		return null;
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xA3883C", Offset = "0xA3883C", VA = "0xA3883C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D78A4", Offset = "0x7D78A4")]
	private IEnumerator sprayShots()
	{
		return null;
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xA391E8", Offset = "0xA391E8", VA = "0xA391E8")]
	private void launchBullet()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xA39828", Offset = "0xA39828", VA = "0xA39828")]
	private bool isAllowedToShoot()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xA3945C", Offset = "0xA3945C", VA = "0xA3945C")]
	private void playMuzzleFlash()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xA39994", Offset = "0xA39994", VA = "0xA39994")]
	public GunConfig generateGunConfig()
	{
		return default(GunConfig);
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xA39B48", Offset = "0xA39B48", VA = "0xA39B48")]
	public static EnemyGunType fastParseEnemyGunType(string raw, EnemyGunType defaultType)
	{
		return default(EnemyGunType);
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xA39C50", Offset = "0xA39C50", VA = "0xA39C50")]
	public void setDebugSpawnContext([Optional] string context)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xA39C60", Offset = "0xA39C60", VA = "0xA39C60")]
	public EnemyGun()
	{
	}
}
[Token(Token = "0x200013F")]
public class EnemyInvulnerabilityCycler : MonoBehaviour
{
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDF70", Offset = "0x7CDF70")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnemyInvulnerabilityCycler <>4__this;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isInvulnerable;

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x9D91CC", Offset = "0x9D91CC", VA = "0x9D91CC")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x9D92A4", Offset = "0x9D92A4", VA = "0x9D92A4")]
		internal void <updateActiveState>b__0()
		{
		}
	}

	[Token(Token = "0x2000339")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDF80", Offset = "0x7CDF80")]
	private sealed class <>c__DisplayClass10_1
	{
		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startAlpha;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float endAlpha;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass10_0 CS$<>8__locals1;

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x9D91D4", Offset = "0x9D91D4", VA = "0x9D91D4")]
		public <>c__DisplayClass10_1()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x9D92D0", Offset = "0x9D92D0", VA = "0x9D92D0")]
		internal void <updateActiveState>b__1(float lerpAlpha)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x9D9388", Offset = "0x9D9388", VA = "0x9D9388")]
		internal void <updateActiveState>b__2()
		{
		}
	}

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0E78", Offset = "0x7D0E78")]
	public EnemyController myController;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject theCollider;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer[] meshRenderers;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0EB0", Offset = "0x7D0EB0")]
	public float fadeAlpha;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0EE8", Offset = "0x7D0EE8")]
	public float invulnerableTime;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float nonInvulnerableTime;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform targetGeo;

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x9D8CA0", Offset = "0x9D8CA0", VA = "0x9D8CA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x9D9050", Offset = "0x9D9050", VA = "0x9D9050")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x9D8D94", Offset = "0x9D8D94", VA = "0x9D8D94")]
	private void updateActiveState(bool isInvulnerable, bool playSound = true)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x9D910C", Offset = "0x9D910C", VA = "0x9D910C")]
	private void updateForMaterialAlpha(float alpha)
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x9D91DC", Offset = "0x9D91DC", VA = "0x9D91DC")]
	private void updateAngle(float lerpAlpha)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x9D929C", Offset = "0x9D929C", VA = "0x9D929C")]
	public EnemyInvulnerabilityCycler()
	{
	}
}
[Token(Token = "0x2000140")]
public class EnemySpawnPoint : MonoBehaviour
{
	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hasBooted;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0F20", Offset = "0x7D0F20")]
	private ShootyVRSplinePath <theVRPath>k__BackingField;

	[Token(Token = "0x1700005A")]
	public ShootyVRSplinePath theVRPath
	{
		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x9DAA08", Offset = "0x9DAA08", VA = "0x9DAA08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7908", Offset = "0x7D7908")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x9DAA10", Offset = "0x9DAA10", VA = "0x9DAA10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7918", Offset = "0x7D7918")]
		private set
		{
		}
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x9DAA18", Offset = "0x9DAA18", VA = "0x9DAA18")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x9DAAB0", Offset = "0x9DAAB0", VA = "0x9DAAB0")]
	public void spawnPowerup(string objectKey)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x9DAC2C", Offset = "0x9DAC2C", VA = "0x9DAC2C")]
	public EnemyController spawnEnemy(string objectKey, List<string> spawnArgs)
	{
		return null;
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x9DB270", Offset = "0x9DB270", VA = "0x9DB270")]
	public Movement spawnPlayerController(PlayerController player, float moveSpeed, Action moveComplete)
	{
		return null;
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x9DAF70", Offset = "0x9DAF70", VA = "0x9DAF70")]
	public static void handleArg(string arg, EnemyController controller, Movement mover)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x9DB448", Offset = "0x9DB448", VA = "0x9DB448")]
	public EnemySpawnPoint()
	{
	}
}
[Token(Token = "0x2000141")]
public class Landmine : MonoBehaviour, IDamageable
{
	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDF90", Offset = "0x7CDF90")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDamageable thingToDamage;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Landmine <>4__this;

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x9BDBB8", Offset = "0x9BDBB8", VA = "0x9BDBB8")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x9BDD48", Offset = "0x9BDD48", VA = "0x9BDD48")]
		internal void <applyDamage>b__0()
		{
		}
	}

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string DamageId;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float movementSpeed;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float landmineHP;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0F30", Offset = "0x7D0F30")]
	public float explosionDamageDelay;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float explosionRadius;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float explosionDamage;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currentHealth;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Movement mover;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isExploded;

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x9BD698", Offset = "0x9BD698", VA = "0x9BD698")]
	public void setup(Movement theMover)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x9BD7A4", Offset = "0x9BD7A4", VA = "0x9BD7A4")]
	public void setMoveSpeed(float moveSpeed)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x9BD7CC", Offset = "0x9BD7CC", VA = "0x9BD7CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x9BD868", Offset = "0x9BD868", VA = "0x9BD868", Slot = "6")]
	public void takeDamage(float damageAmount, string damageSource)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x9BDA0C", Offset = "0x9BDA0C", VA = "0x9BDA0C", Slot = "4")]
	public bool isAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x9BD88C", Offset = "0x9BD88C", VA = "0x9BD88C", Slot = "5")]
	public bool isDamageable()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x9BD89C", Offset = "0x9BD89C", VA = "0x9BD89C")]
	public void explode()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x9BDA1C", Offset = "0x9BDA1C", VA = "0x9BDA1C")]
	private bool applyDamage(IDamageable thingToDamage, int hitCount)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x9BDBC0", Offset = "0x9BDBC0", VA = "0x9BDBC0")]
	public void cleanup()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x9BDBDC", Offset = "0x9BDBDC", VA = "0x9BDBDC")]
	public Landmine()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x9BDC4C", Offset = "0x9BDC4C", VA = "0x9BDC4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7928", Offset = "0x7D7928")]
	private void <explode>b__15_0()
	{
	}
}
[Token(Token = "0x2000142")]
public class LandmineSpawner : MonoBehaviour
{
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDFA0", Offset = "0x7CDFA0")]
	private sealed class <spawnCycle>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LandmineSpawner <>4__this;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <spawnTotal>5__3;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <spawnCount>5__4;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001833")]
			[Address(RVA = "0x9BE1C8", Offset = "0x9BE1C8", VA = "0x9BE1C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0x9BE230", Offset = "0x9BE230", VA = "0x9BE230", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x9BDF10", Offset = "0x9BDF10", VA = "0x9BDF10")]
		[DebuggerHidden]
		public <spawnCycle>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x9BE048", Offset = "0x9BE048", VA = "0x9BE048", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x9BE04C", Offset = "0x9BE04C", VA = "0x9BE04C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x9BE1D0", Offset = "0x9BE1D0", VA = "0x9BE1D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007A9")]
	private const string PathToLandmine = "Enemies/Shared/Landmine";

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyController owner;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int minCount;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxCount;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeBetweenSpawns;

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x9BDE44", Offset = "0x9BDE44", VA = "0x9BDE44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x9BDE94", Offset = "0x9BDE94", VA = "0x9BDE94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7938", Offset = "0x7D7938")]
	private IEnumerator spawnCycle()
	{
		return null;
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x9BDF3C", Offset = "0x9BDF3C", VA = "0x9BDF3C")]
	private void spawnMine()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x9BE038", Offset = "0x9BE038", VA = "0x9BE038")]
	public LandmineSpawner()
	{
	}
}
[Token(Token = "0x2000143")]
public class EnemyMallMiniboss : MonoBehaviour
{
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDFB0", Offset = "0x7CDFB0")]
	private sealed class <spawningLoop>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyMallMiniboss <>4__this;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <spawnWait>5__2;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x9D99E0", Offset = "0x9D99E0", VA = "0x9D99E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600183B")]
			[Address(RVA = "0x9D9A48", Offset = "0x9D9A48", VA = "0x9D9A48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x9D9728", Offset = "0x9D9728", VA = "0x9D9728")]
		[DebuggerHidden]
		public <spawningLoop>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x9D98A4", Offset = "0x9D98A4", VA = "0x9D98A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x9D98A8", Offset = "0x9D98A8", VA = "0x9D98A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x9D99E8", Offset = "0x9D99E8", VA = "0x9D99E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyController myController;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0F68", Offset = "0x7D0F68")]
	public float spawnZOffset;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeBetweenSpawns;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string minibossPopcornEnemyKey;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D0FA0", Offset = "0x7D0FA0")]
	public float moveSpeedMultiplier;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isCurrentlySpawning;

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x9D942C", Offset = "0x9D942C", VA = "0x9D942C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x9D95E8", Offset = "0x9D95E8", VA = "0x9D95E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x9D96A8", Offset = "0x9D96A8", VA = "0x9D96A8")]
	public void updateCurrentState(bool isSpawning)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x9D96B4", Offset = "0x9D96B4", VA = "0x9D96B4")]
	public void setFinalState()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x9D956C", Offset = "0x9D956C", VA = "0x9D956C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D799C", Offset = "0x7D799C")]
	private IEnumerator spawningLoop()
	{
		return null;
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x9D9754", Offset = "0x9D9754", VA = "0x9D9754")]
	private Vector3 getSpawnPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x9D9820", Offset = "0x9D9820", VA = "0x9D9820")]
	private bool isMinibossNotSpawning()
	{
		return default(bool);
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x9D9830", Offset = "0x9D9830", VA = "0x9D9830")]
	public EnemyMallMiniboss()
	{
	}
}
[Token(Token = "0x2000144")]
public class EnemyMallMinibossController : MonoBehaviour
{
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDFC0", Offset = "0x7CDFC0")]
	private sealed class <bossBattleLoop>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyMallMinibossController <>4__this;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <flipFlop>5__2;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <cycleWait>5__3;

		[Token(Token = "0x17000176")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600183F")]
			[Address(RVA = "0x9DA2D8", Offset = "0x9DA2D8", VA = "0x9DA2D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0x9DA340", Offset = "0x9DA340", VA = "0x9DA340", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x9DA0A8", Offset = "0x9DA0A8", VA = "0x9DA0A8")]
		[DebuggerHidden]
		public <bossBattleLoop>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x9DA0E4", Offset = "0x9DA0E4", VA = "0x9DA0E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x9DA0E8", Offset = "0x9DA0E8", VA = "0x9DA0E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x9DA2E0", Offset = "0x9DA2E0", VA = "0x9DA2E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cycleTime;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EnemyMallMiniboss bossA;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnemyMallMiniboss bossB;

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x9D9A50", Offset = "0x9D9A50", VA = "0x9D9A50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x9D9BA0", Offset = "0x9D9BA0", VA = "0x9D9BA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x9D9C70", Offset = "0x9D9C70", VA = "0x9D9C70")]
	private void minibossSpawned(object note)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x9D9F04", Offset = "0x9D9F04", VA = "0x9D9F04")]
	private void minibossDied(object note)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x9D9E88", Offset = "0x9D9E88", VA = "0x9D9E88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7A00", Offset = "0x7D7A00")]
	private IEnumerator bossBattleLoop()
	{
		return null;
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x9DA0D4", Offset = "0x9DA0D4", VA = "0x9DA0D4")]
	public EnemyMallMinibossController()
	{
	}
}
[Token(Token = "0x2000145")]
public class MiniBossHealthBar : MonoBehaviour
{
	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyController myController;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isPrimaryHealthBar;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastHealthPercent;

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xA693F0", Offset = "0xA693F0", VA = "0xA693F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xA69510", Offset = "0xA69510", VA = "0xA69510")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xA695C0", Offset = "0xA695C0", VA = "0xA695C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xA696DC", Offset = "0xA696DC", VA = "0xA696DC")]
	public MiniBossHealthBar()
	{
	}
}
[Token(Token = "0x2000146")]
public class BasicMover : MonoBehaviour
{
	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Movement mover;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MovementType movementType;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action removeFromBoardAction;

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x9EF54C", Offset = "0x9EF54C", VA = "0x9EF54C")]
	public void reset()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x9EF6DC", Offset = "0x9EF6DC", VA = "0x9EF6DC")]
	public void setMoveSpeed(float speed)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x9EF610", Offset = "0x9EF610", VA = "0x9EF610")]
	public void attachMover(Movement theMover)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x9EF6EC", Offset = "0x9EF6EC", VA = "0x9EF6EC")]
	public void updateMovementType(MovementType movementType, float powerupLoiterTime = 2f)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x9EF700", Offset = "0x9EF700", VA = "0x9EF700")]
	public MovementType currentMovementType()
	{
		return default(MovementType);
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x9EF71C", Offset = "0x9EF71C", VA = "0x9EF71C")]
	public bool isStationary()
	{
		return default(bool);
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x9EF7D8", Offset = "0x9EF7D8", VA = "0x9EF7D8")]
	private void outOfViewport()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x9EF884", Offset = "0x9EF884", VA = "0x9EF884")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x9EF920", Offset = "0x9EF920", VA = "0x9EF920", Slot = "4")]
	public virtual void removeFromBoard()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x9EF95C", Offset = "0x9EF95C", VA = "0x9EF95C")]
	public BasicMover()
	{
	}
}
[Token(Token = "0x2000147")]
public enum MovementType
{
	[Token(Token = "0x40007BE")]
	forward = 0,
	[Token(Token = "0x40007BF")]
	spline = 1,
	[Token(Token = "0x40007C0")]
	wiggle = 2,
	[Token(Token = "0x40007C1")]
	stationary = 3,
	[Token(Token = "0x40007C2")]
	trackToPlayer = 4,
	[Token(Token = "0x40007C3")]
	powerupDrop = 5,
	[Token(Token = "0x40007C4")]
	splineHandover = 6,
	[Token(Token = "0x40007C5")]
	splineAligned = 7,
	[Token(Token = "0x40007C6")]
	splineJumping = 8,
	[Token(Token = "0x40007C7")]
	galactoHeadMoveToRest = 20,
	[Token(Token = "0x40007C8")]
	none = 99
}
[Token(Token = "0x2000148")]
public class Movement
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float TrackToPlayerThreshold;

	[Token(Token = "0x40007CA")]
	private const float PowerupHandAttractDistance = 1f;

	[Token(Token = "0x40007CB")]
	private const float AngleFromAwayLimit = 75f;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float speed;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected bool canUpdate;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransform;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetOrientation;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector3 direction;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 position;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action cullAction;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action endOfSplineAction;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float wiggleTurnSpeed;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float wiggleTurnDuration;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float wiggleForwardDuration;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float wiggleFirstTurnDelay;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool wiggleRandomTweak;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float maxTimeOffscreen;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ShootyVRSplinePath splineToFollow;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MovementType moveType;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private MovementType nextMovementType;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isMoveTypeExplicitlySet;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float offscreenCountdown;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float turnCountdown;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float forwardCountdown;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float firstTurnCountdown;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float distanceAlongSpline;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isTurning;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool hasBeenInPlayspace;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int configuredLoiterTicks;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int currentLoiterTicks;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int splineJumpingTargetIndex;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 fleetOffset;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 powerupTargetOffset;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float powerupLoiterTime;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public SplineHeightOverride splineHeightOverride;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PlaytimeOverseer sharedPlaytimeOverseer;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xA71EE4", Offset = "0xA71EE4", VA = "0xA71EE4")]
	public Movement(MovementType move = MovementType.forward)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xA7207C", Offset = "0xA7207C", VA = "0xA7207C")]
	public void restart(Transform target, [Optional] Transform orientation)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xA721F0", Offset = "0xA721F0", VA = "0xA721F0")]
	public void updatePosition()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xA72288", Offset = "0xA72288", VA = "0xA72288")]
	private void runMovementUpdate()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xA73940", Offset = "0xA73940", VA = "0xA73940")]
	private void updateLookAtOrientation()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xA73104", Offset = "0xA73104", VA = "0xA73104")]
	private Vector3 getPowerupDropMoveTarget()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xA72788", Offset = "0xA72788", VA = "0xA72788")]
	public float currentMoveSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xA739FC", Offset = "0xA739FC", VA = "0xA739FC")]
	public void setMoveType(MovementType moveType, float powerupLoiterTime = 2f)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xA73B04", Offset = "0xA73B04", VA = "0xA73B04")]
	public void setFleetOffset(Vector3 localOffset)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xA73BE4", Offset = "0xA73BE4", VA = "0xA73BE4")]
	public void resetWiggle()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xA72954", Offset = "0xA72954", VA = "0xA72954")]
	private void moveForward(float speed)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xA72A6C", Offset = "0xA72A6C", VA = "0xA72A6C")]
	private void moveWiggle(float speed)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xA73BE8", Offset = "0xA73BE8", VA = "0xA73BE8")]
	public void moveToNewSpline(ShootyVRSplinePath thePath, MovementType moveTypeOnNewSpline)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xA73C1C", Offset = "0xA73C1C", VA = "0xA73C1C")]
	public void attachToSpline(ShootyVRSplinePath thePath, MovementType splineMoveType, bool forceMoveTypeAssignment = true)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xA72BFC", Offset = "0xA72BFC", VA = "0xA72BFC")]
	private void moveAlongSpline(float speed)
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xA72EAC", Offset = "0xA72EAC", VA = "0xA72EAC")]
	private void moveToNextJumpPoint(float speed)
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xA73D6C", Offset = "0xA73D6C", VA = "0xA73D6C")]
	private void updateSplineJumpingIndex()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xA732CC", Offset = "0xA732CC", VA = "0xA732CC")]
	private void checkForHandoverComplete()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xA733D8", Offset = "0xA733D8", VA = "0xA733D8")]
	private void checkSplineCull()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xA73DD4", Offset = "0xA73DD4", VA = "0xA73DD4")]
	public void setSplineHeightOverride(SplineHeightOverride splineHeightOverride)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xA73DDC", Offset = "0xA73DDC", VA = "0xA73DDC")]
	public void setLoiter(int ticks)
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xA72D90", Offset = "0xA72D90", VA = "0xA72D90")]
	private void moveToPosition(Vector3 targetPosition, float moveSpeed)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xA73788", Offset = "0xA73788", VA = "0xA73788")]
	public void checkForVolumeCulling()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xA73EB0", Offset = "0xA73EB0", VA = "0xA73EB0", Slot = "4")]
	public virtual void stopMovement()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xA73EB8", Offset = "0xA73EB8", VA = "0xA73EB8")]
	public void setSpeed(float newSpeed)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xA73EC0", Offset = "0xA73EC0", VA = "0xA73EC0")]
	public MovementType currentMovementType()
	{
		return default(MovementType);
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xA73EC8", Offset = "0xA73EC8", VA = "0xA73EC8")]
	public bool isStationary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xA73EFC", Offset = "0xA73EFC", VA = "0xA73EFC")]
	public Movement makeCopy()
	{
		return null;
	}
}
[Token(Token = "0x2000149")]
public enum SplineHeightOverride
{
	[Token(Token = "0x40007EE")]
	None,
	[Token(Token = "0x40007EF")]
	Bottom,
	[Token(Token = "0x40007F0")]
	Middle,
	[Token(Token = "0x40007F1")]
	Top
}
[Token(Token = "0x200014A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CC50C", Offset = "0x7CC50C")]
public class ShootyVRSplinePath : MonoBehaviour
{
	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool allowsForHeightOverride;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<EnemyClass> enemyTypeFilters;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CinemachinePath thePath;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> coordinatePoints;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRPlayspace playSpace;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float topY;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float middleY;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float bottomY;

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xB630B0", Offset = "0xB630B0", VA = "0xB630B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xB63228", Offset = "0xB63228", VA = "0xB63228")]
	private void updateHeightOffsets()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xB63374", Offset = "0xB63374", VA = "0xB63374")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xB6340C", Offset = "0xB6340C", VA = "0xB6340C")]
	public void generateSplineFromCoordinates()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xB63710", Offset = "0xB63710", VA = "0xB63710")]
	public void updateSplineUsingCoordinates()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xB63A3C", Offset = "0xB63A3C", VA = "0xB63A3C")]
	public void regenerateCoordinatePointsFromSpline()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xB63C08", Offset = "0xB63C08", VA = "0xB63C08")]
	public Vector3 getStartingPosition(SplineHeightOverride heightOverride = SplineHeightOverride.None)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xB63C7C", Offset = "0xB63C7C", VA = "0xB63C7C")]
	public Quaternion getStartingRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xB63CA0", Offset = "0xB63CA0", VA = "0xB63CA0")]
	public void placeAndAlignToCurve(Transform theItem, float lerp)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xB63CE0", Offset = "0xB63CE0", VA = "0xB63CE0")]
	public void placeOnCurve(Transform theItem, float lerp, SplineHeightOverride heightOverride = SplineHeightOverride.None)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xB63D70", Offset = "0xB63D70", VA = "0xB63D70")]
	public void alignToCurve(Transform theItem, float lerp)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xB63DB0", Offset = "0xB63DB0", VA = "0xB63DB0")]
	public bool isJustASpawnPoint()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xB63DE4", Offset = "0xB63DE4", VA = "0xB63DE4")]
	public bool isAMovementPath()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xB63E18", Offset = "0xB63E18", VA = "0xB63E18")]
	public int splinePathPointCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xB63E40", Offset = "0xB63E40", VA = "0xB63E40")]
	public ShootyVRSplinePath()
	{
	}
}
[Token(Token = "0x200014B")]
public class TestEnemySimpleLookAt : MonoBehaviour
{
	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xA15988", Offset = "0xA15988", VA = "0xA15988")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xA159BC", Offset = "0xA159BC", VA = "0xA159BC")]
	public TestEnemySimpleLookAt()
	{
	}
}
[Token(Token = "0x200014C")]
public class TestEnemyTrackMover : MonoBehaviour
{
	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CinemachinePathBase path;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isLookingAtCamera;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float distancePos;

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xA159C4", Offset = "0xA159C4", VA = "0xA159C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xA159F8", Offset = "0xA159F8", VA = "0xA159F8")]
	public void assignPath(CinemachinePathBase path, float moveSpeed)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xA15A34", Offset = "0xA15A34", VA = "0xA15A34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xA15C18", Offset = "0xA15C18", VA = "0xA15C18")]
	public TestEnemyTrackMover()
	{
	}
}
[Token(Token = "0x200014D")]
public class SplinePath : MonoBehaviour
{
	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector2> viewportPoints;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float smoothNess;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int samples;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> originalPoints;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 pos;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AnimationCurve xCurve;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AnimationCurve yCurve;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimationCurve zCurve;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve resultantXCurve;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimationCurve resultantYCurve;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AnimationCurve resultantZCurve;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float curveLength;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Vector3> gizmoPoints;

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xA10554", Offset = "0xA10554", VA = "0xA10554")]
	public void addViewportPoint(Vector2 viewportPoint)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xA105C4", Offset = "0xA105C4", VA = "0xA105C4")]
	private void convertFrustrumPoints()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xA107C4", Offset = "0xA107C4", VA = "0xA107C4")]
	public List<AnimationCurve> generateSpline()
	{
		return null;
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xA10EAC", Offset = "0xA10EAC", VA = "0xA10EAC")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xA11298", Offset = "0xA11298", VA = "0xA11298")]
	public void placeOnCurve(Transform theItem, float lerp)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xA1138C", Offset = "0xA1138C", VA = "0xA1138C")]
	public Vector3 startOfCurve()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xA1128C", Offset = "0xA1128C", VA = "0xA1128C")]
	public Vector3 pointOnCurveAtLerp(float lerp)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xA11394", Offset = "0xA11394", VA = "0xA11394")]
	public Vector3 pointOnCurveAtDistance(float distance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xA11438", Offset = "0xA11438", VA = "0xA11438")]
	public string keypointString()
	{
		return null;
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xA10894", Offset = "0xA10894", VA = "0xA10894")]
	private void LoadCurve()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xA10A40", Offset = "0xA10A40", VA = "0xA10A40")]
	private void SmoothCurve()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xA11704", Offset = "0xA11704", VA = "0xA11704")]
	public SplinePath()
	{
	}
}
[Token(Token = "0x200014E")]
[ExecuteInEditMode]
public class WorldController : MonoBehaviour
{
	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float worldCurvature;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color horizonColor;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float horizonDistance;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float horizonBand;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshFilter groundPlane;

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x13CFC80", Offset = "0x13CFC80", VA = "0x13CFC80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x13CFE18", Offset = "0x13CFE18", VA = "0x13CFE18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x13CFE1C", Offset = "0x13CFE1C", VA = "0x13CFE1C")]
	public WorldController()
	{
	}
}
[Token(Token = "0x200014F")]
public sealed class LeaderboardData
{
	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0FD8", Offset = "0x7D0FD8")]
	private string <leaderboardId>k__BackingField;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0FE8", Offset = "0x7D0FE8")]
	private List<LeaderboardScore> <leaderboardScores>k__BackingField;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LeaderboardFilter filter;

	[Token(Token = "0x1700005B")]
	public string leaderboardId
	{
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x9BF1F8", Offset = "0x9BF1F8", VA = "0x9BF1F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7A64", Offset = "0x7D7A64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x9BF200", Offset = "0x9BF200", VA = "0x9BF200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7A74", Offset = "0x7D7A74")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public List<LeaderboardScore> leaderboardScores
	{
		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x9BF208", Offset = "0x9BF208", VA = "0x9BF208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7A84", Offset = "0x7D7A84")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x9BF210", Offset = "0x9BF210", VA = "0x9BF210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7A94", Offset = "0x7D7A94")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x9BF218", Offset = "0x9BF218", VA = "0x9BF218")]
	public LeaderboardData(string leaderboardId, List<LeaderboardScore> leaderboardScores, LeaderboardFilter filter = LeaderboardFilter.World)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x9BF300", Offset = "0x9BF300", VA = "0x9BF300")]
	public bool isValid()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000150")]
public sealed class LeaderboardScore
{
	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0FF8", Offset = "0x7D0FF8")]
	private string <name>k__BackingField;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1008", Offset = "0x7D1008")]
	private long <score>k__BackingField;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1018", Offset = "0x7D1018")]
	private int <rank>k__BackingField;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1028", Offset = "0x7D1028")]
	private bool <isUser>k__BackingField;

	[Token(Token = "0x1700005D")]
	public string name
	{
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x9C48C4", Offset = "0x9C48C4", VA = "0x9C48C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7AA4", Offset = "0x7D7AA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x9C48CC", Offset = "0x9C48CC", VA = "0x9C48CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7AB4", Offset = "0x7D7AB4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public long score
	{
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x9C48D4", Offset = "0x9C48D4", VA = "0x9C48D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7AC4", Offset = "0x7D7AC4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x9C48DC", Offset = "0x9C48DC", VA = "0x9C48DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7AD4", Offset = "0x7D7AD4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public int rank
	{
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x9C48E4", Offset = "0x9C48E4", VA = "0x9C48E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7AE4", Offset = "0x7D7AE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x9C48EC", Offset = "0x9C48EC", VA = "0x9C48EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7AF4", Offset = "0x7D7AF4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public bool isUser
	{
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x9C48F4", Offset = "0x9C48F4", VA = "0x9C48F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7B04", Offset = "0x7D7B04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x9C48FC", Offset = "0x9C48FC", VA = "0x9C48FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7B14", Offset = "0x7D7B14")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x9C1C4C", Offset = "0x9C1C4C", VA = "0x9C1C4C")]
	public LeaderboardScore(string name, long score, int rank, bool isUser = false)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x9C1CB8", Offset = "0x9C1CB8", VA = "0x9C1CB8")]
	public void overrrideRank(int newRank)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x9C2580", Offset = "0x9C2580", VA = "0x9C2580")]
	public void overrideScore(long newScore)
	{
	}
}
[Token(Token = "0x2000151")]
public enum LeaderboardFilter
{
	[Token(Token = "0x4000819")]
	World,
	[Token(Token = "0x400081A")]
	Friends
}
[Token(Token = "0x2000152")]
public sealed class LeaderboardScore_SortByScore : IComparer<LeaderboardScore>
{
	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x9C4948", Offset = "0x9C4948", VA = "0x9C4948", Slot = "4")]
	public int Compare(LeaderboardScore x, LeaderboardScore y)
	{
		return default(int);
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x9C1CB0", Offset = "0x9C1CB0", VA = "0x9C1CB0")]
	public LeaderboardScore_SortByScore()
	{
	}
}
[Token(Token = "0x2000153")]
public sealed class LeaderboardScore_SortByRank : IComparer<LeaderboardScore>
{
	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x9C4908", Offset = "0x9C4908", VA = "0x9C4908", Slot = "4")]
	public int Compare(LeaderboardScore x, LeaderboardScore y)
	{
		return default(int);
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x9BF2F8", Offset = "0x9BF2F8", VA = "0x9BF2F8")]
	public LeaderboardScore_SortByRank()
	{
	}
}
[Token(Token = "0x2000154")]
public sealed class LeaderboardController : SingletonMono<LeaderboardController>
{
	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hasBeenBootstrapped;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LeaderboardPlatformBase platformLeaderboard;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1038", Offset = "0x7D1038")]
	private LeaderboardFilter <scoreFilter>k__BackingField;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1048", Offset = "0x7D1048")]
	private static int <numberOfEntriesToFetch>k__BackingField;

	[Token(Token = "0x17000061")]
	public LeaderboardFilter scoreFilter
	{
		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x9BEB64", Offset = "0x9BEB64", VA = "0x9BEB64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7B24", Offset = "0x7D7B24")]
		get
		{
			return default(LeaderboardFilter);
		}
		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x9BEB6C", Offset = "0x9BEB6C", VA = "0x9BEB6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7B34", Offset = "0x7D7B34")]
		private set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public static int numberOfEntriesToFetch
	{
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x9BEB74", Offset = "0x9BEB74", VA = "0x9BEB74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7B44", Offset = "0x7D7B44")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x9BEBDC", Offset = "0x9BEBDC", VA = "0x9BEBDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7B54", Offset = "0x7D7B54")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x9BEC48", Offset = "0x9BEC48", VA = "0x9BEC48")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x9BEDC4", Offset = "0x9BEDC4", VA = "0x9BEDC4")]
	public void retryLogin()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x9BEDDC", Offset = "0x9BEDDC", VA = "0x9BEDDC")]
	public bool areLeaderboardsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x9BEDF4", Offset = "0x9BEDF4", VA = "0x9BEDF4")]
	public void setNewScore(string leaderboardId, long newScore, bool fetchUpdatedScores = true)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x9BEEE8", Offset = "0x9BEEE8", VA = "0x9BEEE8")]
	public void updateLeaderboard(string leaderboardId)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x9BEF08", Offset = "0x9BEF08", VA = "0x9BEF08")]
	public void refreshUserScores(string leaderboardId)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x9BEF28", Offset = "0x9BEF28", VA = "0x9BEF28")]
	public LeaderboardData getLeaderboardData(string leaderboardId)
	{
		return null;
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x9BEF50", Offset = "0x9BEF50", VA = "0x9BEF50")]
	public long getUserScore(string leaderboardId)
	{
		return default(long);
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x9BEF70", Offset = "0x9BEF70", VA = "0x9BEF70")]
	public int getUserRank(string leaderboardId)
	{
		return default(int);
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x9BEF90", Offset = "0x9BEF90", VA = "0x9BEF90")]
	public void setScoreFilter(LeaderboardFilter filter)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x9BEF98", Offset = "0x9BEF98", VA = "0x9BEF98")]
	public void updateNumerOfEntriesToFetch(int entryCount)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x9BF048", Offset = "0x9BF048", VA = "0x9BF048")]
	public LeaderboardController()
	{
	}
}
[Token(Token = "0x2000155")]
public sealed class LeaderboardControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LeaderboardController leaderboardController;

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x9BF10C", Offset = "0x9BF10C", VA = "0x9BF10C", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x9BF1F0", Offset = "0x9BF1F0", VA = "0x9BF1F0")]
	public LeaderboardControllerBooter()
	{
	}
}
[Token(Token = "0x2000156")]
public class LeaderboardPlatformBase
{
	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x9C1440", Offset = "0x9C1440", VA = "0x9C1440", Slot = "4")]
	public virtual void relogin()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x9C1444", Offset = "0x9C1444", VA = "0x9C1444", Slot = "5")]
	public virtual void bootstrap()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x9C1448", Offset = "0x9C1448", VA = "0x9C1448", Slot = "6")]
	public virtual void setNewScore(string leaderboardId, long newScore, bool fetchUpdatedScores)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x9C144C", Offset = "0x9C144C", VA = "0x9C144C", Slot = "7")]
	public virtual void updateLeaderboard(string leaderboardId)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x9C1450", Offset = "0x9C1450", VA = "0x9C1450", Slot = "8")]
	public virtual void refreshUserScores(string leaderboardId)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x9C1454", Offset = "0x9C1454", VA = "0x9C1454", Slot = "9")]
	public virtual bool leaderboardsAreAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x9C145C", Offset = "0x9C145C", VA = "0x9C145C", Slot = "10")]
	public virtual LeaderboardData getCachedData(string leaderboardId, LeaderboardFilter filter)
	{
		return null;
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x9C14D0", Offset = "0x9C14D0", VA = "0x9C14D0", Slot = "11")]
	public virtual long getUserScore(string leaderboardId)
	{
		return default(long);
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x9C14D8", Offset = "0x9C14D8", VA = "0x9C14D8", Slot = "12")]
	public virtual int getUserRank(string leaderboardId)
	{
		return default(int);
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x9BEDBC", Offset = "0x9BEDBC", VA = "0x9BEDBC")]
	public LeaderboardPlatformBase()
	{
	}
}
[Token(Token = "0x2000157")]
public sealed class LeaderboardPlatformEditor : LeaderboardPlatformBase
{
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDFD0", Offset = "0x7CDFD0")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string leaderboardId;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<LeaderboardScore> scores;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardFilter filter;

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x9C1E94", Offset = "0x9C1E94", VA = "0x9C1E94")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x9C2B98", Offset = "0x9C2B98", VA = "0x9C2B98")]
		internal void <getCachedData>b__0()
		{
		}
	}

	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDFE0", Offset = "0x7CDFE0")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string leaderboardId;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<LeaderboardScore> scores;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardFilter filter;

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x9C2030", Offset = "0x9C2030", VA = "0x9C2030")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x9C2C70", Offset = "0x9C2C70", VA = "0x9C2C70")]
		internal void <updateLeaderboard>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDFF0", Offset = "0x7CDFF0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<LeaderboardScore> <>9__11_0;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<LeaderboardScore> <>9__11_1;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<LeaderboardScore> <>9__12_0;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<LeaderboardScore> <>9__12_1;

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x9C2B30", Offset = "0x9C2B30", VA = "0x9C2B30")]
		public <>c()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x9C2B38", Offset = "0x9C2B38", VA = "0x9C2B38")]
		internal bool <getUserScore>b__11_0(LeaderboardScore score)
		{
			return default(bool);
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x9C2B50", Offset = "0x9C2B50", VA = "0x9C2B50")]
		internal bool <getUserScore>b__11_1(LeaderboardScore score)
		{
			return default(bool);
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x9C2B68", Offset = "0x9C2B68", VA = "0x9C2B68")]
		internal bool <getUserRank>b__12_0(LeaderboardScore score)
		{
			return default(bool);
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x9C2B80", Offset = "0x9C2B80", VA = "0x9C2B80")]
		internal bool <getUserRank>b__12_1(LeaderboardScore score)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, List<LeaderboardScore>> friendScores;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, List<LeaderboardScore>> worldScores;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private long playerScore;

	[Token(Token = "0x17000063")]
	private int entryCount
	{
		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x9C1BA8", Offset = "0x9C1BA8", VA = "0x9C1BA8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x9C14E0", Offset = "0x9C14E0", VA = "0x9C14E0", Slot = "5")]
	public override void bootstrap()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x9C15D4", Offset = "0x9C15D4", VA = "0x9C15D4", Slot = "9")]
	public override bool leaderboardsAreAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x9C15DC", Offset = "0x9C15DC", VA = "0x9C15DC")]
	private void playerFakeAuthenticated()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x9C16D0", Offset = "0x9C16D0", VA = "0x9C16D0")]
	private void regenerateScores()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x9C1CC0", Offset = "0x9C1CC0", VA = "0x9C1CC0", Slot = "10")]
	public override LeaderboardData getCachedData(string leaderboardId, LeaderboardFilter filter)
	{
		return null;
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x9C1E9C", Offset = "0x9C1E9C", VA = "0x9C1E9C", Slot = "7")]
	public override void updateLeaderboard(string leaderboardId)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x9C2038", Offset = "0x9C2038", VA = "0x9C2038", Slot = "6")]
	public override void setNewScore(string leaderboardId, long newScore, bool fetchUpdatedScores)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x9C2080", Offset = "0x9C2080", VA = "0x9C2080")]
	private void updateListsWithPlayerScore()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x9C2588", Offset = "0x9C2588", VA = "0x9C2588", Slot = "11")]
	public override long getUserScore(string leaderboardId)
	{
		return default(long);
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x9C27D0", Offset = "0x9C27D0", VA = "0x9C27D0", Slot = "12")]
	public override int getUserRank(string leaderboardId)
	{
		return default(int);
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x9C2A18", Offset = "0x9C2A18", VA = "0x9C2A18")]
	public LeaderboardPlatformEditor()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x9C2AC0", Offset = "0x9C2AC0", VA = "0x9C2AC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7B64", Offset = "0x7D7B64")]
	private void <bootstrap>b__3_0()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x9C2AC4", Offset = "0x9C2AC4", VA = "0x9C2AC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7B74", Offset = "0x7D7B74")]
	private void <playerFakeAuthenticated>b__5_0()
	{
	}
}
[Token(Token = "0x2000158")]
public class LeaderboardPlatformOculus : LeaderboardPlatformBase
{
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE000", Offset = "0x7CE000")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderboardPlatformOculus <>4__this;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string leaderboardId;

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x9C372C", Offset = "0x9C372C", VA = "0x9C372C")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x9C4824", Offset = "0x9C4824", VA = "0x9C4824")]
		internal void <refreshUserScores>b__0(Message<LeaderboardEntryList> msg)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE010", Offset = "0x7CE010")]
	private sealed class <>c
	{
		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__13_0;

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x9C4778", Offset = "0x9C4778", VA = "0x9C4778")]
		public <>c()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x9C4780", Offset = "0x9C4780", VA = "0x9C4780")]
		internal bool <loginToPlatform>b__13_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE020", Offset = "0x7CE020")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderboardPlatformOculus <>4__this;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string leaderboardId;

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x9C3B3C", Offset = "0x9C3B3C", VA = "0x9C3B3C")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x9C4848", Offset = "0x9C4848", VA = "0x9C4848")]
		internal void <leaderboardGetUserEntryCallback>b__0(Message<LeaderboardEntryList> nextMsg)
		{
		}
	}

	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE030", Offset = "0x7CE030")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderboardPlatformOculus <>4__this;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string leaderboardId;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardFilter filter;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<LeaderboardScore> scores;

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x9C3C00", Offset = "0x9C3C00", VA = "0x9C3C00")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x9C486C", Offset = "0x9C486C", VA = "0x9C486C")]
		internal void <refreshLeaderboardScores>b__0(Message<LeaderboardEntryList> msg)
		{
		}
	}

	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE040", Offset = "0x7CE040")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderboardPlatformOculus <>4__this;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string leaderboardId;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardFilter filter;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<LeaderboardScore> scores;

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x9C44F4", Offset = "0x9C44F4", VA = "0x9C44F4")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x9C4898", Offset = "0x9C4898", VA = "0x9C4898")]
		internal void <getEntries>b__0(Message<LeaderboardEntryList> nextMsg)
		{
		}
	}

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ulong userId;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, LeaderboardScore> userScores;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, LeaderboardData> cachedWorldData;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, LeaderboardData> cachedFriendData;

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x9C2D48", Offset = "0x9C2D48", VA = "0x9C2D48", Slot = "5")]
	public override void bootstrap()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x9C2F78", Offset = "0x9C2F78", VA = "0x9C2F78", Slot = "4")]
	public override void relogin()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x9C2F7C", Offset = "0x9C2F7C", VA = "0x9C2F7C", Slot = "9")]
	public override bool leaderboardsAreAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x9C304C", Offset = "0x9C304C", VA = "0x9C304C", Slot = "6")]
	public override void setNewScore(string leaderboardId, long newScore, bool fetchUpdatedScores)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x9C31C0", Offset = "0x9C31C0", VA = "0x9C31C0", Slot = "10")]
	public override LeaderboardData getCachedData(string leaderboardId, LeaderboardFilter filter)
	{
		return null;
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x9C3470", Offset = "0x9C3470", VA = "0x9C3470", Slot = "11")]
	public override long getUserScore(string leaderboardId)
	{
		return default(long);
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x9C3534", Offset = "0x9C3534", VA = "0x9C3534", Slot = "12")]
	public override int getUserRank(string leaderboardId)
	{
		return default(int);
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x9C35E4", Offset = "0x9C35E4", VA = "0x9C35E4", Slot = "7")]
	public override void updateLeaderboard(string leaderboardId)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x9C362C", Offset = "0x9C362C", VA = "0x9C362C", Slot = "8")]
	public override void refreshUserScores(string leaderboardId)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x9C2DEC", Offset = "0x9C2DEC", VA = "0x9C2DEC")]
	private void loginToPlatform()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x9C3734", Offset = "0x9C3734", VA = "0x9C3734")]
	private void leaderboardGetUserEntryCallback(string leaderboardId, Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x9C318C", Offset = "0x9C318C", VA = "0x9C318C")]
	private void refreshLeaderboardScores(string leaderboardId)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x9C32C4", Offset = "0x9C32C4", VA = "0x9C32C4")]
	private void refreshLeaderboardScores(string leaderboardId, LeaderboardFilter filter)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x9C3C20", Offset = "0x9C3C20", VA = "0x9C3C20")]
	private void getEntries(string leaderboardId, LeaderboardFilter filter, List<LeaderboardScore> scores, Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x9C3C08", Offset = "0x9C3C08", VA = "0x9C3C08")]
	private LeaderboardFilterType getFilterType(LeaderboardFilter filter)
	{
		return default(LeaderboardFilterType);
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x9C3B44", Offset = "0x9C3B44", VA = "0x9C3B44")]
	private LeaderboardScore scoreForEntry(LeaderboardEntry entry)
	{
		return null;
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x9BEDB4", Offset = "0x9BEDB4", VA = "0x9BEDB4")]
	public LeaderboardPlatformOculus()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x9C44FC", Offset = "0x9C44FC", VA = "0x9C44FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7B84", Offset = "0x7D7B84")]
	private void <loginToPlatform>b__13_1()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x9C4594", Offset = "0x9C4594", VA = "0x9C4594")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7B94", Offset = "0x7D7B94")]
	private void <loginToPlatform>b__13_2(Message msg)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x9C4664", Offset = "0x9C4664", VA = "0x9C4664")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7BA4", Offset = "0x7D7BA4")]
	private void <loginToPlatform>b__13_3(Message<User> userMsg)
	{
	}
}
[Token(Token = "0x2000159")]
public sealed class ScoreContextPacker
{
	[Token(Token = "0x4000827")]
	private const uint LEETKEY = 1337u;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint level;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public uint score;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint blocks;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public uint balls;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint checksum;

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xACBFF0", Offset = "0xACBFF0", VA = "0xACBFF0")]
	public ScoreContextPacker(uint level, uint score, uint blocks, uint balls)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xACC07C", Offset = "0xACC07C", VA = "0xACC07C")]
	public ulong GetPackedUInt64()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xACC09C", Offset = "0xACC09C", VA = "0xACC09C")]
	public long GetPackedInt64()
	{
		return default(long);
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xACC0BC", Offset = "0xACC0BC", VA = "0xACC0BC")]
	public Tuple<int, int> GetPackedInt32Tuple()
	{
		return null;
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xACC058", Offset = "0xACC058", VA = "0xACC058")]
	public uint CalculateChecksum()
	{
		return default(uint);
	}
}
[Token(Token = "0x200015A")]
public static class SocialWrapper
{
	[Token(Token = "0x2000346")]
	public static class localUser
	{
		[Token(Token = "0x20003B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE5D0", Offset = "0x7CE5D0")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40014CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> callback;

			[Token(Token = "0x60019B8")]
			[Address(RVA = "0xA096A0", Offset = "0xA096A0", VA = "0xA096A0")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60019B9")]
			[Address(RVA = "0xA097B8", Offset = "0xA097B8", VA = "0xA097B8")]
			internal void <Authenticate>b__0(bool success, string errorMessage)
			{
			}
		}

		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE5E0", Offset = "0x7CE5E0")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x40014CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x60019BA")]
			[Address(RVA = "0xA0974C", Offset = "0xA0974C", VA = "0xA0974C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xA0982C", Offset = "0xA0982C", VA = "0xA0982C")]
			internal void <Authenticate>b__0(bool success, string errorMessage)
			{
			}
		}

		[Token(Token = "0x17000178")]
		public static bool authenticated
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001857")]
			[Address(RVA = "0xA093FC", Offset = "0xA093FC", VA = "0xA093FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000179")]
		public static string userName
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001858")]
			[Address(RVA = "0xA0943C", Offset = "0xA0943C", VA = "0xA0943C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		public static string id
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001859")]
			[Address(RVA = "0xA0947C", Offset = "0xA0947C", VA = "0xA0947C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		public static bool isFriend
		{
			[MethodImpl(256)]
			[Token(Token = "0x600185A")]
			[Address(RVA = "0xA094BC", Offset = "0xA094BC", VA = "0xA094BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017C")]
		public static UserState state
		{
			[MethodImpl(256)]
			[Token(Token = "0x600185B")]
			[Address(RVA = "0xA094FC", Offset = "0xA094FC", VA = "0xA094FC")]
			get
			{
				return default(UserState);
			}
		}

		[Token(Token = "0x1700017D")]
		public static Texture2D image
		{
			[MethodImpl(256)]
			[Token(Token = "0x600185C")]
			[Address(RVA = "0xA0953C", Offset = "0xA0953C", VA = "0xA0953C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		public static IUserProfile[] friends
		{
			[MethodImpl(256)]
			[Token(Token = "0x600185D")]
			[Address(RVA = "0xA0957C", Offset = "0xA0957C", VA = "0xA0957C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		public static bool underage
		{
			[MethodImpl(256)]
			[Token(Token = "0x600185E")]
			[Address(RVA = "0xA095C8", Offset = "0xA095C8", VA = "0xA095C8")]
			get
			{
				return default(bool);
			}
		}

		[MethodImpl(256)]
		[Token(Token = "0x600185F")]
		[Address(RVA = "0xA09608", Offset = "0xA09608", VA = "0xA09608")]
		public static void Authenticate(Action<bool> callback)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001860")]
		[Address(RVA = "0xA096A8", Offset = "0xA096A8", VA = "0xA096A8")]
		public static void Authenticate(Action<bool, string> callback)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001861")]
		[Address(RVA = "0xA09754", Offset = "0xA09754", VA = "0xA09754")]
		public static void LoadFriends(Action<bool> callback)
		{
		}
	}

	[Token(Token = "0x17000064")]
	public static ISocialPlatform Active
	{
		[MethodImpl(256)]
		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xA09010", Offset = "0xA09010", VA = "0xA09010")]
		get
		{
			return null;
		}
		[MethodImpl(256)]
		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xA09050", Offset = "0xA09050", VA = "0xA09050")]
		set
		{
		}
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xA09008", Offset = "0xA09008", VA = "0xA09008")]
	public static bool canUseSocial()
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xA0908C", Offset = "0xA0908C", VA = "0xA0908C")]
	public static IAchievement CreateAchievement()
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xA090CC", Offset = "0xA090CC", VA = "0xA090CC")]
	public static ILeaderboard CreateLeaderboard()
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xA0910C", Offset = "0xA0910C", VA = "0xA0910C")]
	public static void LoadAchievementDescriptions(Action<IAchievementDescription[]> callback)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xA0917C", Offset = "0xA0917C", VA = "0xA0917C")]
	public static void LoadAchievements(Action<IAchievement[]> callback)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xA091EC", Offset = "0xA091EC", VA = "0xA091EC")]
	public static void LoadScores(string leaderboardID, Action<IScore[]> callback)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xA0925C", Offset = "0xA0925C", VA = "0xA0925C")]
	public static void LoadUsers(string[] userIDs, Action<IUserProfile[]> callback)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xA092CC", Offset = "0xA092CC", VA = "0xA092CC")]
	public static void ReportProgress(string achievementID, double progress, Action<bool> callback)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xA09328", Offset = "0xA09328", VA = "0xA09328")]
	public static void ReportScore(long score, string board, Action<bool> callback)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xA09384", Offset = "0xA09384", VA = "0xA09384")]
	public static void ShowAchievementsUI()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xA093C0", Offset = "0xA093C0", VA = "0xA093C0")]
	public static void ShowLeaderboardUI()
	{
	}
}
[Token(Token = "0x200015B")]
public enum LevelContainerSectionType
{
	[Token(Token = "0x400082E")]
	LevelSet,
	[Token(Token = "0x400082F")]
	Checkpoint1,
	[Token(Token = "0x4000830")]
	Checkpoint2,
	[Token(Token = "0x4000831")]
	MiniBoss,
	[Token(Token = "0x4000832")]
	LevelSetPair,
	[Token(Token = "0x4000833")]
	GunUpgradeDrop,
	[Token(Token = "0x4000834")]
	LevelSetGroup,
	[Token(Token = "0x4000835")]
	LevelIdPool,
	[Token(Token = "0x4000836")]
	ScoreMultiplierDrop
}
[Serializable]
[Token(Token = "0x200015C")]
public class DifficultyRange
{
	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D1058", Offset = "0x7D1058")]
	public int minDifficulty;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D1074", Offset = "0x7D1074")]
	public int maxDifficulty;

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xA0725C", Offset = "0xA0725C", VA = "0xA0725C")]
	public DifficultyRange(int minDifficulty, int maxDifficulty)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xA072A0", Offset = "0xA072A0", VA = "0xA072A0")]
	public bool isInRange(Level level)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x200015D")]
public class LevelContainerSection
{
	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LevelContainerSectionType sectionType;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool isHardModeOnly;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool excludedFromChillMode;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool isChillModeOnly;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DifficultyRange firstDifficulty;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ticksBetweenPair;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DifficultyRange secondDifficulty;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<DifficultyRange> difficultyOptions;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> levelIdPool;

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x9CC800", Offset = "0x9CC800", VA = "0x9CC800")]
	public LevelContainerSection()
	{
	}
}
[Token(Token = "0x200015E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CC580", Offset = "0x7CC580")]
public class LevelContainer : ScriptableObject
{
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE050", Offset = "0x7CE050")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelContainerSection thisSection;

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x9CBB6C", Offset = "0x9CBB6C", VA = "0x9CBB6C")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x9CC690", Offset = "0x9CC690", VA = "0x9CC690")]
		internal bool <getLevelsFromSection>b__0(Level level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x9CC6B8", Offset = "0x9CC6B8", VA = "0x9CC6B8")]
		internal bool <getLevelsFromSection>b__1(Level level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x9CC6E0", Offset = "0x9CC6E0", VA = "0x9CC6E0")]
		internal bool <getLevelsFromSection>b__3(Level level)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE060", Offset = "0x7CE060")]
	private sealed class <>c__DisplayClass24_1
	{
		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DifficultyRange difficultyRange;

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x9CBB98", Offset = "0x9CBB98", VA = "0x9CBB98")]
		public <>c__DisplayClass24_1()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x9CC754", Offset = "0x9CC754", VA = "0x9CC754")]
		internal bool <getLevelsFromSection>b__2(Level level)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE070", Offset = "0x7CE070")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelContainerSection thisSection;

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x9CC5C8", Offset = "0x9CC5C8", VA = "0x9CC5C8")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x9CC770", Offset = "0x9CC770", VA = "0x9CC770")]
		internal bool <allEnemiesThatCanSpawn>b__0(Level level)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE080", Offset = "0x7CE080")]
	private sealed class <>c__DisplayClass37_1
	{
		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DifficultyRange difficultyRange;

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x9CC5D0", Offset = "0x9CC5D0", VA = "0x9CC5D0")]
		public <>c__DisplayClass37_1()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x9CC7E4", Offset = "0x9CC7E4", VA = "0x9CC7E4")]
		internal bool <allEnemiesThatCanSpawn>b__1(Level level)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1090", Offset = "0x7D1090")]
	public float afterLoopSpeedMultiplier;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string worldId;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMode gameMode;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D10C8", Offset = "0x7D10C8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D10C8", Offset = "0x7D10C8")]
	public int ticksWaitBetweenLevelSets;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int easyTicksWaitBetweenLevelSets;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1128", Offset = "0x7D1128")]
	public float minTimeBetweenPowerupSpawns;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxTimeBetweenPowerupSpawns;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1160", Offset = "0x7D1160")]
	public float easyMinTimeBetweenPowerupSpawns;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easyMaxTimeBetweenPowerupSpawns;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string tournamentPilotId;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float levelDurationSecs;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameDifficulty tournamentDifficulty;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float bulletSpeedMultiplier;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool disableGuns;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool disableMissiles;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool disablePowerups;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1198", Offset = "0x7D1198")]
	public bool overridePowerupDrops;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PowerupWeightOverrides powerupOverrides;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D11D0", Offset = "0x7D11D0")]
	public float maxScoreMultiplier;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float multiplierCountdownTime;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<LevelContainerSection> levelSections;

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x9CA654", Offset = "0x9CA654", VA = "0x9CA654")]
	public Level generateNewLevel(List<Level> levelSetPool)
	{
		return null;
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x9CAB20", Offset = "0x9CAB20", VA = "0x9CAB20")]
	private List<Level> getLevelSetsForSpaceBattle()
	{
		return null;
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x9CACBC", Offset = "0x9CACBC", VA = "0x9CACBC")]
	private List<Level> getLevelSetsToMerge(List<Level> levelSetPool)
	{
		return null;
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x9CB334", Offset = "0x9CB334", VA = "0x9CB334")]
	private List<Level> getLevelsFromSection(LevelContainerSection thisSection, List<Level> levelSetPool, Level smallWaitIncrement, Level majorEventWaitIncrement)
	{
		return null;
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x9CAF6C", Offset = "0x9CAF6C", VA = "0x9CAF6C")]
	private Level getBossCalloutLevelSet(bool isBoss, bool isHeadBoss = false)
	{
		return null;
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x9CB128", Offset = "0x9CB128", VA = "0x9CB128")]
	private Level getBossWaveLevelSet(bool isGalactosFirstForm = false)
	{
		return null;
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x9CBEA4", Offset = "0x9CBEA4", VA = "0x9CBEA4")]
	public float timeBetweenPowerupSpawns()
	{
		return default(float);
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x9CBBA0", Offset = "0x9CBBA0", VA = "0x9CBBA0")]
	private Level getMiniBossLevelSet()
	{
		return null;
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x9CAF04", Offset = "0x9CAF04", VA = "0x9CAF04")]
	private Level getGunDropLevelSet()
	{
		return null;
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x9CBD28", Offset = "0x9CBD28", VA = "0x9CBD28")]
	private Level getScoreMultiplierLevelSet()
	{
		return null;
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x9CBB04", Offset = "0x9CBB04", VA = "0x9CBB04")]
	private Level getWaitForClearLevelSet()
	{
		return null;
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x9CB220", Offset = "0x9CB220", VA = "0x9CB220")]
	private Level getWaitLevelSet(int tickWaits)
	{
		return null;
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x9CB9F0", Offset = "0x9CB9F0", VA = "0x9CB9F0")]
	private Level getCheckpointLevelSet(int index)
	{
		return null;
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x9CBF70", Offset = "0x9CBF70", VA = "0x9CBF70")]
	public bool hasAllCheckpoints()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x9CC08C", Offset = "0x9CC08C", VA = "0x9CC08C")]
	public bool hasAMiniBoss()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x9CBB74", Offset = "0x9CBB74", VA = "0x9CBB74")]
	public static bool sectionHasModeFlags(LevelContainerSectionType sectionType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x9CC134", Offset = "0x9CC134", VA = "0x9CC134")]
	public List<EnemyClass> allEnemiesThatCanSpawn(List<Level> levelPool)
	{
		return null;
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x9CC5D8", Offset = "0x9CC5D8", VA = "0x9CC5D8")]
	public LevelContainer()
	{
	}
}
[Token(Token = "0x200015F")]
public class ShootyVRLivScaleUpdater : MonoBehaviour
{
	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xB61B18", Offset = "0xB61B18", VA = "0xB61B18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xB61C4C", Offset = "0xB61C4C", VA = "0xB61C4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xB61CE4", Offset = "0xB61CE4", VA = "0xB61CE4")]
	private void updateScale()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xB61D5C", Offset = "0xB61D5C", VA = "0xB61D5C")]
	public ShootyVRLivScaleUpdater()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xB61D64", Offset = "0xB61D64", VA = "0xB61D64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7BB4", Offset = "0x7D7BB4")]
	private void <updateScale>b__2_0()
	{
	}
}
[Token(Token = "0x2000160")]
public enum FontMaterialType
{
	[Token(Token = "0x4000858")]
	None,
	[Token(Token = "0x4000859")]
	Default,
	[Token(Token = "0x400085A")]
	BlueGlow,
	[Token(Token = "0x400085B")]
	BlueGlowOutlined
}
[Token(Token = "0x2000161")]
public sealed class LanguageFontSwapper : MonoBehaviour
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text textComponent;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FontMaterialType materialType;

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x9BE238", Offset = "0x9BE238", VA = "0x9BE238")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x9BE630", Offset = "0x9BE630", VA = "0x9BE630")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x9BE318", Offset = "0x9BE318", VA = "0x9BE318")]
	private void updateFont()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x9BE700", Offset = "0x9BE700", VA = "0x9BE700")]
	private FontMaterialType getTypeForCurrentText()
	{
		return default(FontMaterialType);
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x9BE7FC", Offset = "0x9BE7FC", VA = "0x9BE7FC")]
	public LanguageFontSwapper()
	{
	}
}
[Serializable]
[Token(Token = "0x2000162")]
public struct GameObjectLanguagePair
{
	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public string id;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SystemLanguage language;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject objectToActivate;
}
[Token(Token = "0x2000163")]
public sealed class LocalizationAssetActivation : MonoBehaviour
{
	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject defaultObject;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObjectLanguagePair> localizedPairings;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SystemLanguage previousLanguage;

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xA5BE14", Offset = "0xA5BE14", VA = "0xA5BE14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xA5C1B0", Offset = "0xA5C1B0", VA = "0xA5C1B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xA5C280", Offset = "0xA5C280", VA = "0xA5C280")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xA5BF5C", Offset = "0xA5BF5C", VA = "0xA5BF5C")]
	private void tryUpdateAssets()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xA5C434", Offset = "0xA5C434", VA = "0xA5C434")]
	private bool isUpdatingAssets()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xA5C460", Offset = "0xA5C460", VA = "0xA5C460")]
	public LocalizationAssetActivation()
	{
	}
}
[Token(Token = "0x2000164")]
public sealed class LocalizationBooter : BootableMonoBehaviour
{
	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xA5C470", Offset = "0xA5C470", VA = "0xA5C470", Slot = "4")]
	public override void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xA5C664", Offset = "0xA5C664", VA = "0xA5C664", Slot = "5")]
	public override void bootstrapDidComplete(Action complete)
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xA5C79C", Offset = "0xA5C79C", VA = "0xA5C79C")]
	public LocalizationBooter()
	{
	}
}
[Serializable]
[Token(Token = "0x2000165")]
public sealed class FontForLanguage
{
	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SystemLanguage language;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_FontAsset font;

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x9DD1AC", Offset = "0x9DD1AC", VA = "0x9DD1AC")]
	public FontForLanguage()
	{
	}
}
[Token(Token = "0x2000166")]
public enum LocalizedLanguageDirection
{
	[Token(Token = "0x4000867")]
	RightToLeft,
	[Token(Token = "0x4000868")]
	LeftToRight
}
[Serializable]
[Token(Token = "0x2000167")]
public sealed class JSONForLanguage
{
	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SystemLanguage language;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset jsonFile;

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x9EDF2C", Offset = "0x9EDF2C", VA = "0x9EDF2C")]
	public JSONForLanguage()
	{
	}
}
[Token(Token = "0x2000168")]
public sealed class LocalizationController : SingletonMono<LocalizationController>
{
	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE090", Offset = "0x7CE090")]
	private sealed class <waitOnLibraryLoad>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizationController <>4__this;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action complete;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startTime>5__2;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600186F")]
			[Address(RVA = "0xA602C4", Offset = "0xA602C4", VA = "0xA602C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001871")]
			[Address(RVA = "0xA6032C", Offset = "0xA6032C", VA = "0xA6032C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xA5CECC", Offset = "0xA5CECC", VA = "0xA5CECC")]
		[DebuggerHidden]
		public <waitOnLibraryLoad>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xA601BC", Offset = "0xA601BC", VA = "0xA601BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xA601C0", Offset = "0xA601C0", VA = "0xA601C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xA602CC", Offset = "0xA602CC", VA = "0xA602CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE0A0", Offset = "0x7CE0A0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static MatchEvaluator <>9__33_0;

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xA60104", Offset = "0xA60104", VA = "0xA60104")]
		public <>c()
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xA6010C", Offset = "0xA6010C", VA = "0xA6010C")]
		internal string <unescapeUnicode>b__33_0(Match m)
		{
			return null;
		}
	}

	[Token(Token = "0x400086B")]
	private const string LanguageChoiceKey = "SHOOTY_PLAYER_LANGUAGE";

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "AssetProxyAttribute", RVA = "0x7D1218", Offset = "0x7D1218")]
	public AssetProxy localizationLibraryPrefab;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LocalizationLibrary localizationLibrary;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool unfoundReturnsKey;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool unfoundLogsError;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SystemLanguage currentLanguage;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool overrideLanguageInEditor;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x7D127C", Offset = "0x7D127C")]
	public SystemLanguage overrideLanguage;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<SystemLanguage> supportedLanguages;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, string> currentLanguageDictionary;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, TMP_FontAsset> fontMap;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, Dictionary<SystemLanguage, string>> languagePatches;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LocalizedLanguageDirection fontDirection;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D12B8", Offset = "0x7D12B8")]
	private bool <languageHasBeenSet>k__BackingField;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D12C8", Offset = "0x7D12C8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D12C8", Offset = "0x7D12C8")]
	public List<SystemLanguage> provisionalSupportedLanguages;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string> unfoundKeys;

	[Token(Token = "0x17000065")]
	public bool languageHasBeenSet
	{
		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xA5C7A4", Offset = "0xA5C7A4", VA = "0xA5C7A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7BC4", Offset = "0x7D7BC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xA5C7AC", Offset = "0xA5C7AC", VA = "0xA5C7AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7BD4", Offset = "0x7D7BD4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xA5C4EC", Offset = "0xA5C4EC", VA = "0xA5C4EC")]
	public void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xA5C6E0", Offset = "0xA5C6E0", VA = "0xA5C6E0")]
	public void bootstrapDidComplete(Action complete)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xA5C850", Offset = "0xA5C850", VA = "0xA5C850")]
	private void libraryLoadedCallback(GameObject loadedAsset)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xA5C7B8", Offset = "0xA5C7B8", VA = "0xA5C7B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7BE4", Offset = "0x7D7BE4")]
	private IEnumerator waitOnLibraryLoad(Action complete)
	{
		return null;
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xA5CCE0", Offset = "0xA5CCE0", VA = "0xA5CCE0")]
	private void bootstrapCurrentLanguage()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xA5CFC8", Offset = "0xA5CFC8", VA = "0xA5CFC8")]
	public static LocalizedLanguageDirection layoutDirection()
	{
		return default(LocalizedLanguageDirection);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xA5D040", Offset = "0xA5D040", VA = "0xA5D040")]
	public static string stringForKeyInLanguage(string key, SystemLanguage language)
	{
		return null;
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xA5D0CC", Offset = "0xA5D0CC", VA = "0xA5D0CC")]
	public string stringInLanguage(string key, SystemLanguage language)
	{
		return null;
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xA5D548", Offset = "0xA5D548", VA = "0xA5D548")]
	public TMP_FontAsset currentLanguageFont()
	{
		return null;
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xA5D66C", Offset = "0xA5D66C", VA = "0xA5D66C")]
	public static string stringForKey(string key)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xA5DF6C", Offset = "0xA5DF6C", VA = "0xA5DF6C")]
	public static bool keyExists(string key)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xA5E014", Offset = "0xA5E014", VA = "0xA5E014")]
	public static string standardReplacements(string source)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xA5E194", Offset = "0xA5E194", VA = "0xA5E194")]
	private static string standardReplacementsCN(string source)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xA5E374", Offset = "0xA5E374", VA = "0xA5E374")]
	private static string standardReplacementsJA(string source)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xA5E4A8", Offset = "0xA5E4A8", VA = "0xA5E4A8")]
	public static string unescapeUnicode(string input)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xA5E5EC", Offset = "0xA5E5EC", VA = "0xA5E5EC")]
	public bool isLanguageSupported(SystemLanguage language)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xA5CEF8", Offset = "0xA5CEF8", VA = "0xA5CEF8")]
	public SystemLanguage findSystemLanguage()
	{
		return default(SystemLanguage);
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xA5C43C", Offset = "0xA5C43C", VA = "0xA5C43C")]
	public static SystemLanguage findSystemLanguageDirect()
	{
		return default(SystemLanguage);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xA5E654", Offset = "0xA5E654", VA = "0xA5E654")]
	public void userSetLanguage(SystemLanguage language)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xA5CFC0", Offset = "0xA5CFC0", VA = "0xA5CFC0")]
	public void systemSetLanguage(SystemLanguage language)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xA5E65C", Offset = "0xA5E65C", VA = "0xA5E65C")]
	private void setLanguage(SystemLanguage language, bool setByUser)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xA5E7F8", Offset = "0xA5E7F8", VA = "0xA5E7F8")]
	private void reorderFallbackFontListForLanguage(SystemLanguage language)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xA5D18C", Offset = "0xA5D18C", VA = "0xA5D18C")]
	private void loadLanguage(SystemLanguage language, Dictionary<string, string> dictionary)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xA5E9DC", Offset = "0xA5E9DC", VA = "0xA5E9DC")]
	private string rawJSONForLanguage(SystemLanguage language)
	{
		return null;
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xA5EF88", Offset = "0xA5EF88", VA = "0xA5EF88")]
	public TextAsset getFakeLanguageFileForCode(string languageKey)
	{
		return null;
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xA5F3A0", Offset = "0xA5F3A0", VA = "0xA5F3A0")]
	private void defineLanguagePatch(Command theCommand)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xA5F634", Offset = "0xA5F634", VA = "0xA5F634")]
	public static bool isCurrentLanguage(SystemLanguage lang)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xA5F6B8", Offset = "0xA5F6B8", VA = "0xA5F6B8")]
	public static bool isCurrentLanguageChinese()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xA5F750", Offset = "0xA5F750", VA = "0xA5F750")]
	private void addLanguageSupport(Command theCommand)
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xA5F8B4", Offset = "0xA5F8B4", VA = "0xA5F8B4")]
	private void removeLanguageSupport(Command theCommand)
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xA5ED30", Offset = "0xA5ED30", VA = "0xA5ED30")]
	private void loadAllLanguagePatches(SystemLanguage language, Dictionary<string, string> dictionary)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xA5FA7C", Offset = "0xA5FA7C", VA = "0xA5FA7C")]
	public static SystemLanguage systemLanguageFromString(string languageString)
	{
		return default(SystemLanguage);
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xA5F0CC", Offset = "0xA5F0CC", VA = "0xA5F0CC")]
	public static string languageCodeForSystemLanguage(SystemLanguage name)
	{
		return null;
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xA5FB14", Offset = "0xA5FB14", VA = "0xA5FB14")]
	public static string iosLanguageCodeForSystemLanguage(SystemLanguage name)
	{
		return null;
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xA5FD4C", Offset = "0xA5FD4C", VA = "0xA5FD4C")]
	public List<SystemLanguage> getDebugLanguages()
	{
		return null;
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xA5FDB0", Offset = "0xA5FDB0", VA = "0xA5FDB0")]
	public LocalizationController()
	{
	}
}
[Token(Token = "0x2000169")]
public sealed class LocalizationLibrary : MonoBehaviour
{
	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1328", Offset = "0x7D1328")]
	public List<JSONForLanguage> jsonFiles;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1360", Offset = "0x7D1360")]
	public TMP_FontAsset fallbackFont;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<FontForLanguage> fontsForLanguages;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1398", Offset = "0x7D1398")]
	public List<JSONForLanguage> fakeJsonFiles;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextAsset englishJSON;

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xA60334", Offset = "0xA60334", VA = "0xA60334")]
	public TextAsset getEnglishJSON()
	{
		return null;
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xA604D0", Offset = "0xA604D0", VA = "0xA604D0")]
	public TextAsset getJsonForLanguage(SystemLanguage targetLanguage, bool printError = true)
	{
		return null;
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xA5E8FC", Offset = "0xA5E8FC", VA = "0xA5E8FC")]
	public TMP_FontAsset getFontForLanguage(SystemLanguage targetLanguage)
	{
		return null;
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xA6062C", Offset = "0xA6062C", VA = "0xA6062C")]
	public LocalizationLibrary()
	{
	}
}
[Token(Token = "0x200016A")]
public class LocalizedUITextMeshProText : MonoBehaviour
{
	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TMP_Text myText;

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xA60708", Offset = "0xA60708", VA = "0xA60708")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xA607E0", Offset = "0xA607E0", VA = "0xA607E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xA60878", Offset = "0xA60878", VA = "0xA60878")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xA6087C", Offset = "0xA6087C", VA = "0xA6087C")]
	public void updateText()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xA60A40", Offset = "0xA60A40", VA = "0xA60A40")]
	public LocalizedUITextMeshProText()
	{
	}
}
[Serializable]
[Token(Token = "0x200016B")]
public class MissionConfig
{
	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string missionId;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string worldId;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string locId;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pilotId;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMode gameMode;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] missionTaskIds;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameStateList stateList;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D13D0", Offset = "0x7D13D0")]
	private bool <isCompleted>k__BackingField;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D13E0", Offset = "0x7D13E0")]
	private bool <hasClaimedReward>k__BackingField;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<MissionTaskConfig> trackedTasks;

	[Token(Token = "0x17000066")]
	public bool isCompleted
	{
		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xA696F4", Offset = "0xA696F4", VA = "0xA696F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7C48", Offset = "0x7D7C48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xA696FC", Offset = "0xA696FC", VA = "0xA696FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7C58", Offset = "0x7D7C58")]
		private set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public bool hasClaimedReward
	{
		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xA69708", Offset = "0xA69708", VA = "0xA69708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7C68", Offset = "0x7D7C68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xA69710", Offset = "0xA69710", VA = "0xA69710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7C78", Offset = "0x7D7C78")]
		private set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public bool isFullyComplete
	{
		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xA6971C", Offset = "0xA6971C", VA = "0xA6971C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xA6973C", Offset = "0xA6973C", VA = "0xA6973C")]
	public MissionConfig(Command theCommand)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xA69C08", Offset = "0xA69C08", VA = "0xA69C08")]
	public void loadState()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xA69CEC", Offset = "0xA69CEC", VA = "0xA69CEC")]
	public void saveState()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xA69DB8", Offset = "0xA69DB8", VA = "0xA69DB8")]
	public void startTracking(in Dictionary<string, MissionTaskConfig> tasksToUse)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xA6A4C8", Offset = "0xA6A4C8", VA = "0xA6A4C8")]
	public void stopTracking()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xA6A67C", Offset = "0xA6A67C", VA = "0xA6A67C")]
	public void gameplayLevelStarted()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xA6A7D8", Offset = "0xA6A7D8", VA = "0xA6A7D8")]
	public void clearTaskProgress()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xA6A8EC", Offset = "0xA6A8EC", VA = "0xA6A8EC")]
	public void claimReward()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xA6AA88", Offset = "0xA6AA88", VA = "0xA6AA88")]
	private bool hasRewardDrop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xA6AB08", Offset = "0xA6AB08", VA = "0xA6AB08")]
	public bool checkForCompletion()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xA6AB60", Offset = "0xA6AB60", VA = "0xA6AB60")]
	private bool areAllTasksComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xA6AC30", Offset = "0xA6AC30", VA = "0xA6AC30")]
	public void debugCompleteMission()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xA6ACC4", Offset = "0xA6ACC4", VA = "0xA6ACC4")]
	public string localisedTitle()
	{
		return null;
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xA6AD2C", Offset = "0xA6AD2C", VA = "0xA6AD2C")]
	public List<MissionDescription> localisedTaskDescriptions()
	{
		return null;
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xA6B130", Offset = "0xA6B130", VA = "0xA6B130")]
	public string localisedRewardsString()
	{
		return null;
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xA6B1CC", Offset = "0xA6B1CC", VA = "0xA6B1CC")]
	public bool isInCurrentGameMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xA6B254", Offset = "0xA6B254", VA = "0xA6B254")]
	public bool hasTimedMissionTask()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xA6B2FC", Offset = "0xA6B2FC", VA = "0xA6B2FC")]
	public int getTimedMissionDuration()
	{
		return default(int);
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xA6B42C", Offset = "0xA6B42C", VA = "0xA6B42C")]
	public void clearCompletionFlagProgress()
	{
	}
}
[Token(Token = "0x200016C")]
public class MissionController : SingletonMono<MissionController>
{
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, MissionTaskConfig> taskDefinitions;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MappedList<MissionConfig> missions;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MissionConfig activeMission;

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xA6B4AC", Offset = "0xA6B4AC", VA = "0xA6B4AC")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xA6B5B4", Offset = "0xA6B5B4", VA = "0xA6B5B4")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xA6BB98", Offset = "0xA6BB98", VA = "0xA6BB98", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xA6BC84", Offset = "0xA6BC84", VA = "0xA6BC84", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xA6BD30", Offset = "0xA6BD30", VA = "0xA6BD30")]
	public void refreshActiveMission()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xA6C068", Offset = "0xA6C068", VA = "0xA6C068")]
	public void checkToClearActiveMission(WorldConfig currentWorld)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xA6C400", Offset = "0xA6C400", VA = "0xA6C400")]
	public void setActiveMission(string missionId)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xA6C54C", Offset = "0xA6C54C", VA = "0xA6C54C")]
	public MissionConfig getMissionConfigForPilot(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xA6C0E4", Offset = "0xA6C0E4", VA = "0xA6C0E4")]
	public void setActiveMission(MissionConfig missionToSet)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xA6C670", Offset = "0xA6C670", VA = "0xA6C670")]
	public MissionConfig getActiveMission()
	{
		return null;
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xA6C364", Offset = "0xA6C364", VA = "0xA6C364")]
	private void clearActiveMission()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xA6C678", Offset = "0xA6C678", VA = "0xA6C678")]
	private void gameplayLevelStarted()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xA6C688", Offset = "0xA6C688", VA = "0xA6C688")]
	public void clearProgressForActiveMission()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xA6C6A0", Offset = "0xA6C6A0", VA = "0xA6C6A0")]
	public bool checkForActiveMissionCompletion()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xA6C6BC", Offset = "0xA6C6BC", VA = "0xA6C6BC")]
	public string getMissionCompletionMessage()
	{
		return null;
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xA6C7A8", Offset = "0xA6C7A8", VA = "0xA6C7A8")]
	public void tryClaimMissionReward()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xA6C7E8", Offset = "0xA6C7E8", VA = "0xA6C7E8")]
	public void debugCompleteActiveMission()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xA6C880", Offset = "0xA6C880", VA = "0xA6C880")]
	public bool hasActiveMission()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xA6C890", Offset = "0xA6C890", VA = "0xA6C890")]
	public bool hasActiveMissionWithTimedTask()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xA6C8A0", Offset = "0xA6C8A0", VA = "0xA6C8A0")]
	public bool hasActiveMissionWithEnemyRequirement(EnemyClass enemy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xA6C9BC", Offset = "0xA6C9BC", VA = "0xA6C9BC")]
	private void defineMissionTask(Command theCommand)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xA6CC4C", Offset = "0xA6CC4C", VA = "0xA6CC4C")]
	private void defineMission(Command theCommand)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xA6B640", Offset = "0xA6B640", VA = "0xA6B640")]
	private void loadState()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xA6B710", Offset = "0xA6B710", VA = "0xA6B710")]
	private void checkForMissionCompletion()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xA6CD78", Offset = "0xA6CD78", VA = "0xA6CD78")]
	private void saveState()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xA6CE48", Offset = "0xA6CE48", VA = "0xA6CE48")]
	public MissionTaskConfig getTaskConfig(string taskId)
	{
		return null;
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xA6CF38", Offset = "0xA6CF38", VA = "0xA6CF38")]
	public List<MissionTaskConfig> allMissionTasks()
	{
		return null;
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xA6CFC8", Offset = "0xA6CFC8", VA = "0xA6CFC8")]
	public void clearAllMissions()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xA6D098", Offset = "0xA6D098", VA = "0xA6D098")]
	public List<MissionConfig> allMissions()
	{
		return null;
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xA6B850", Offset = "0xA6B850", VA = "0xA6B850")]
	private void debugVerifyAllMissionTaskSetups()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xA6D140", Offset = "0xA6D140", VA = "0xA6D140")]
	public MissionController()
	{
	}
}
[Token(Token = "0x200016D")]
public sealed class MissionControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MissionController itemToBoot;

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xA6D228", Offset = "0xA6D228", VA = "0xA6D228", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xA6D30C", Offset = "0xA6D30C", VA = "0xA6D30C", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xA6D344", Offset = "0xA6D344", VA = "0xA6D344")]
	public MissionControllerBooter()
	{
	}
}
[Token(Token = "0x200016E")]
public enum MissionObjectiveType
{
	[Token(Token = "0x4000891")]
	None = 0,
	[Token(Token = "0x4000892")]
	CompleteLevel = 1,
	[Token(Token = "0x4000893")]
	Kills = 2,
	[Token(Token = "0x4000894")]
	ActivatePowerup = 3,
	[Token(Token = "0x4000895")]
	Score = 4,
	[Token(Token = "0x4000896")]
	TimeAlive = 5,
	[Token(Token = "0x4000897")]
	VacuumBullets = 20,
	[Token(Token = "0x4000898")]
	BlockBullets = 21
}
[Token(Token = "0x200016F")]
public class MissionDescription
{
	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<string> descriptionLines;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int indexTick;

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xA6D34C", Offset = "0xA6D34C", VA = "0xA6D34C")]
	public MissionDescription()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xA6D3C8", Offset = "0xA6D3C8", VA = "0xA6D3C8")]
	public MissionDescription(string line)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xA6D45C", Offset = "0xA6D45C", VA = "0xA6D45C")]
	public void add(string newLine)
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xA6D4C4", Offset = "0xA6D4C4", VA = "0xA6D4C4")]
	public string nextLine()
	{
		return null;
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xA6D544", Offset = "0xA6D544", VA = "0xA6D544")]
	public bool isMultipleLines()
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000170")]
public class MissionTaskConfig
{
	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string taskId;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MissionObjectiveType objectiveType;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int count;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnemyClass enemyClassRequired;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pilotActive;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string powerupActive;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int progressCount;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isTracking;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WorldConfig currentWorld;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, MissionObjectiveType> missionObjectiveTypeMap;

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xA6CAD0", Offset = "0xA6CAD0", VA = "0xA6CAD0")]
	public MissionTaskConfig(Command theCommand)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xA6E1B8", Offset = "0xA6E1B8", VA = "0xA6E1B8")]
	private void forceCertainFieldsForObjective()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xA6E244", Offset = "0xA6E244", VA = "0xA6E244")]
	private void cleanupEmptyFields()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xA6A164", Offset = "0xA6A164", VA = "0xA6A164")]
	public MissionTaskConfig(MissionTaskConfig toCopy)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xA6A1E0", Offset = "0xA6A1E0", VA = "0xA6A1E0")]
	public void startTracking()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xA6A56C", Offset = "0xA6A56C", VA = "0xA6A56C")]
	public void stopTracking()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xA6AC1C", Offset = "0xA6AC1C", VA = "0xA6AC1C")]
	public bool isComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xA6E404", Offset = "0xA6E404", VA = "0xA6E404")]
	public float progressAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xA6AE24", Offset = "0xA6AE24", VA = "0xA6AE24")]
	public MissionDescription localisedDescription()
	{
		return null;
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xA6E47C", Offset = "0xA6E47C", VA = "0xA6E47C")]
	private string descriptionForKills(int index = 0)
	{
		return null;
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xA6E8CC", Offset = "0xA6E8CC", VA = "0xA6E8CC")]
	private string descriptionForPowerupActivations()
	{
		return null;
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xA6EA2C", Offset = "0xA6EA2C", VA = "0xA6EA2C")]
	private string descriptionForScore()
	{
		return null;
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xA6EB8C", Offset = "0xA6EB8C", VA = "0xA6EB8C")]
	private string descriptionForTimeAlive()
	{
		return null;
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xA6ECEC", Offset = "0xA6ECEC", VA = "0xA6ECEC")]
	private string descriptionForBlockBullets()
	{
		return null;
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xA6EEBC", Offset = "0xA6EEBC", VA = "0xA6EEBC")]
	private string descriptionForVacuumBullets()
	{
		return null;
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xA6C954", Offset = "0xA6C954", VA = "0xA6C954")]
	public bool isEnemyToBeKilledForTask(EnemyClass enemy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xA6F1DC", Offset = "0xA6F1DC", VA = "0xA6F1DC")]
	private void levelPlayFinishedHandler(object note)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xA6F344", Offset = "0xA6F344", VA = "0xA6F344")]
	private void enemyDestroyedHandler(object note)
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xA6F4B4", Offset = "0xA6F4B4", VA = "0xA6F4B4")]
	private void powerupCollectedHandler(object note)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xA6F550", Offset = "0xA6F550", VA = "0xA6F550")]
	private void scoreGainHandler(object note)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xA6F634", Offset = "0xA6F634", VA = "0xA6F634")]
	private void levelDurationTimeHandler(object note)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xA6F7B4", Offset = "0xA6F7B4", VA = "0xA6F7B4")]
	private void trackedEventRegisteredHandler(object note)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xA6F0A8", Offset = "0xA6F0A8", VA = "0xA6F0A8")]
	private bool isPassingPilotCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xA6F08C", Offset = "0xA6F08C", VA = "0xA6F08C")]
	private bool isPassingEnemyCheck(EnemyClass enemyClassToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xA6F154", Offset = "0xA6F154", VA = "0xA6F154")]
	private bool isPassingActivePowerupCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xA6F464", Offset = "0xA6F464", VA = "0xA6F464")]
	private bool isPassingPowerupCheck(string powerupIdToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xA6A784", Offset = "0xA6A784", VA = "0xA6A784")]
	public void levelStarted()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xA6A8E4", Offset = "0xA6A8E4", VA = "0xA6A8E4")]
	public void clearProgress()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xA6F708", Offset = "0xA6F708", VA = "0xA6F708")]
	private void setProgressCount(int amount)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xA6F290", Offset = "0xA6F290", VA = "0xA6F290")]
	private void incrementProgressCount(int amount)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xA6E2EC", Offset = "0xA6E2EC", VA = "0xA6E2EC")]
	private void addObserver(string key, Action<object> action)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xA6E37C", Offset = "0xA6E37C", VA = "0xA6E37C")]
	private void removeObserver(string key)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xA6E0B0", Offset = "0xA6E0B0", VA = "0xA6E0B0")]
	private static MissionObjectiveType fastParseMissionObjectives(string raw, MissionObjectiveType defaultType)
	{
		return default(MissionObjectiveType);
	}
}
[Token(Token = "0x2000171")]
public class MissionTrackingIcon : MonoBehaviour
{
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE0B0", Offset = "0x7CE0B0")]
	private sealed class <trackingLoop>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionTrackingIcon <>4__this;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyController attachedEnemy;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001878")]
			[Address(RVA = "0xA6FD00", Offset = "0xA6FD00", VA = "0xA6FD00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600187A")]
			[Address(RVA = "0xA6FD68", Offset = "0xA6FD68", VA = "0xA6FD68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xA6FB00", Offset = "0xA6FB00", VA = "0xA6FB00")]
		[DebuggerHidden]
		public <trackingLoop>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xA6FB90", Offset = "0xA6FB90", VA = "0xA6FB90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xA6FB94", Offset = "0xA6FB94", VA = "0xA6FB94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xA6FD08", Offset = "0xA6FD08", VA = "0xA6FD08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string ResourcesKey;

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xA6FA3C", Offset = "0xA6FA3C", VA = "0xA6FA3C")]
	public void attachToEnemy(EnemyController attachedEnemy)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xA6FA68", Offset = "0xA6FA68", VA = "0xA6FA68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7C88", Offset = "0x7D7C88")]
	private IEnumerator trackingLoop(EnemyController attachedEnemy)
	{
		return null;
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xA6FB2C", Offset = "0xA6FB2C", VA = "0xA6FB2C")]
	public MissionTrackingIcon()
	{
	}
}
[Token(Token = "0x2000172")]
public class FaceTowardsVR : MonoBehaviour
{
	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x9DBE24", Offset = "0x9DBE24", VA = "0x9DBE24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x9DBFE0", Offset = "0x9DBFE0", VA = "0x9DBFE0")]
	public FaceTowardsVR()
	{
	}
}
[Token(Token = "0x2000173")]
public class GroundCollisionPlane : SingletonMono<GroundCollisionPlane>
{
	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x9E8C28", Offset = "0x9E8C28", VA = "0x9E8C28")]
	public float getHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x9E8CB4", Offset = "0x9E8CB4", VA = "0x9E8CB4")]
	public GroundCollisionPlane()
	{
	}
}
[Token(Token = "0x2000174")]
public class HoverOutline : MonoBehaviour
{
	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color outlineCol;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MeshRenderer> renderers;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float size;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<MaterialPropertyBlock> materialPropertyBlocks;

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x9ED088", Offset = "0x9ED088", VA = "0x9ED088")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x9ED154", Offset = "0x9ED154", VA = "0x9ED154")]
	public void updateOutline(List<MeshRenderer> newRenderers, Color newColor, float newSize)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x9ED544", Offset = "0x9ED544", VA = "0x9ED544")]
	public void updateTowardsOutlineSize(float newSize)
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x9ED3A8", Offset = "0x9ED3A8", VA = "0x9ED3A8")]
	public void updateOutlineSize(float newSize)
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x9ED0F8", Offset = "0x9ED0F8", VA = "0x9ED0F8")]
	private bool isConfiguredForUpdate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x9ED5E4", Offset = "0x9ED5E4", VA = "0x9ED5E4")]
	public HoverOutline()
	{
	}
}
[Token(Token = "0x2000175")]
public class PlatformCube : MonoBehaviour
{
	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xA8FD58", Offset = "0xA8FD58", VA = "0xA8FD58")]
	public void setCubeColors(Color Highlight, Color Base)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xA8FE30", Offset = "0xA8FE30", VA = "0xA8FE30")]
	public PlatformCube()
	{
	}
}
[Token(Token = "0x2000176")]
public class ShootyVRBoundaryPlatform : SingletonMono<ShootyVRBoundaryPlatform>
{
	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformCube theCube;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float cubeSpacing;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color defaultColor;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x7D13F0", Offset = "0x7D13F0")]
	public Color defaultEmissionColor;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TypedObjectPool<PlatformCube> platformCubes;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool bootstrapped;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float nextUpdate;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color currentSpriteColor;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color currentEmissionColor;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float platformMinX;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float platformMaxX;

	[Token(Token = "0x40008B7")]
	private const float YPosUpdateDelay = 0.25f;

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xB5F3CC", Offset = "0xB5F3CC", VA = "0xB5F3CC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xB5F4E4", Offset = "0xB5F4E4", VA = "0xB5F4E4", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xB5F654", Offset = "0xB5F654", VA = "0xB5F654")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xB5FD08", Offset = "0xB5FD08", VA = "0xB5FD08")]
	private void resetBootstrap()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xB5FD10", Offset = "0xB5FD10", VA = "0xB5FD10")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xB5FB84", Offset = "0xB5FB84", VA = "0xB5FB84")]
	private void updateYPositions()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xB5F8C4", Offset = "0xB5F8C4", VA = "0xB5F8C4")]
	private void setupBoundary()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xB5FD1C", Offset = "0xB5FD1C", VA = "0xB5FD1C")]
	private float yPosition()
	{
		return default(float);
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xB5FDF8", Offset = "0xB5FDF8", VA = "0xB5FDF8")]
	private bool polygonContainsPoint(Vector3[] polyPoints, Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xB5FEC4", Offset = "0xB5FEC4", VA = "0xB5FEC4")]
	public void updatePlatformColours(Color emissionColor, Color spriteColor)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xB60080", Offset = "0xB60080", VA = "0xB60080")]
	public ShootyVRBoundaryPlatform()
	{
	}
}
[Token(Token = "0x2000177")]
public class ShootyVRCleanupPosition : MonoBehaviour
{
	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1408", Offset = "0x7D1408")]
	public float offsetFromPositionForCleanup;

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xB600F8", Offset = "0xB600F8", VA = "0xB600F8")]
	public float getBulletKillHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xB60134", Offset = "0xB60134", VA = "0xB60134")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xB60208", Offset = "0xB60208", VA = "0xB60208")]
	public ShootyVRCleanupPosition()
	{
	}
}
[Token(Token = "0x2000178")]
public class ShootyVRControllerVisuals : MonoBehaviour
{
	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject visualsParent;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject defaultVisuals;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject quest2Visuals;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MightyVRControlSide side;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1440", Offset = "0x7D1440")]
	public Shader steamModelShader;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform anchor;

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xB60210", Offset = "0xB60210", VA = "0xB60210")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xB60320", Offset = "0xB60320", VA = "0xB60320")]
	public void updateActiveState(bool isActive)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xB60248", Offset = "0xB60248", VA = "0xB60248")]
	private void updateControllerVisuals(MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xB60384", Offset = "0xB60384", VA = "0xB60384")]
	public ShootyVRControllerVisuals()
	{
	}
}
[Token(Token = "0x2000179")]
public class ShootyVRDebugBoundary : MonoBehaviour
{
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE0C0", Offset = "0x7CE0C0")]
	private sealed class <UpdateLoop>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootyVRDebugBoundary <>4__this;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600187E")]
			[Address(RVA = "0xB60D20", Offset = "0xB60D20", VA = "0xB60D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001880")]
			[Address(RVA = "0xB60D88", Offset = "0xB60D88", VA = "0xB60D88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xB605B0", Offset = "0xB605B0", VA = "0xB605B0")]
		[DebuggerHidden]
		public <UpdateLoop>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xB60B70", Offset = "0xB60B70", VA = "0xB60B70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xB60B74", Offset = "0xB60B74", VA = "0xB60B74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xB60D28", Offset = "0xB60D28", VA = "0xB60D28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1478", Offset = "0x7D1478")]
	public Transform testPoint;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Transform> spawnedPoints;

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xB6038C", Offset = "0xB6038C", VA = "0xB6038C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xB604F8", Offset = "0xB604F8", VA = "0xB604F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xB604FC", Offset = "0xB604FC", VA = "0xB604FC")]
	public void ShowBoundary()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xB603D0", Offset = "0xB603D0", VA = "0xB603D0")]
	public void HideBoundary()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xB60534", Offset = "0xB60534", VA = "0xB60534")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7CEC", Offset = "0x7D7CEC")]
	private IEnumerator UpdateLoop()
	{
		return null;
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xB605DC", Offset = "0xB605DC", VA = "0xB605DC")]
	private void UpdateDebugBoundaryPoints()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xB609A4", Offset = "0xB609A4", VA = "0xB609A4")]
	private void activatePoint(int index, Vector3 worldPosition)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xB60AF4", Offset = "0xB60AF4", VA = "0xB60AF4")]
	public ShootyVRDebugBoundary()
	{
	}
}
[Token(Token = "0x200017A")]
public class ShootyVREditorPause : MonoBehaviour
{
	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xB60D90", Offset = "0xB60D90", VA = "0xB60D90")]
	public ShootyVREditorPause()
	{
	}
}
[Token(Token = "0x200017B")]
public class ShootyVRHandColliderDelegator : MonoBehaviour
{
	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShootyVRHandController handController;

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xB60D98", Offset = "0xB60D98", VA = "0xB60D98")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xB61054", Offset = "0xB61054", VA = "0xB61054")]
	private void powerupActivation(Powerup thePowerup)
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xB61108", Offset = "0xB61108", VA = "0xB61108")]
	public ShootyVRHandColliderDelegator()
	{
	}
}
[Token(Token = "0x200017C")]
public class ShootyVRHandController : MonoBehaviour
{
	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D14B0", Offset = "0x7D14B0")]
	public MightyVRControlSide controller;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D14E8", Offset = "0x7D14E8")]
	public float grabBegin;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform grabAttachParent;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float grabDistance;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1520", Offset = "0x7D1520")]
	public ShootyVRControllerVisuals visuals;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1558", Offset = "0x7D1558")]
	public Transform messageAttachPoint;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1590", Offset = "0x7D1590")]
	public PlayerHealthCount healthDisplay;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D15C8", Offset = "0x7D15C8")]
	public PlayerScoreMultiplier comboDisplay;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1600", Offset = "0x7D1600")]
	public ArcadeModifierIcons modifierIcons;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float prevFlex;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isGrabbingEnabled;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool bootstrapped;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerController player;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 previousPosition;

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xB61110", Offset = "0xB61110", VA = "0xB61110")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xB61150", Offset = "0xB61150", VA = "0xB61150")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xB613D0", Offset = "0xB613D0", VA = "0xB613D0")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xB615BC", Offset = "0xB615BC", VA = "0xB615BC")]
	public bool isGrabbingAllowed_Old()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xB614CC", Offset = "0xB614CC", VA = "0xB614CC")]
	public bool isGrabbingAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xB61778", Offset = "0xB61778", VA = "0xB61778")]
	public void grabEnd()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xB61784", Offset = "0xB61784", VA = "0xB61784")]
	public bool isCurrentOffhand()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xB61828", Offset = "0xB61828", VA = "0xB61828")]
	public float distancedMovedSinceLastFrame()
	{
		return default(float);
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xB618EC", Offset = "0xB618EC", VA = "0xB618EC")]
	public void resetBlockingIconCounts()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xB61980", Offset = "0xB61980", VA = "0xB61980")]
	public void showGunsBlocked()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xB61A38", Offset = "0xB61A38", VA = "0xB61A38")]
	public void showMissilesBlocked()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xB61AF0", Offset = "0xB61AF0", VA = "0xB61AF0")]
	public ShootyVRHandController()
	{
	}
}
[Token(Token = "0x200017D")]
public class ShootyVRSceneryHider : MonoBehaviour
{
	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sceneryToHideParent;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sceneryToShowParent;

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xB61DF0", Offset = "0xB61DF0", VA = "0xB61DF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xB62024", Offset = "0xB62024", VA = "0xB62024")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xB61EE8", Offset = "0xB61EE8", VA = "0xB61EE8")]
	private void refreshScenery()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xB620BC", Offset = "0xB620BC", VA = "0xB620BC")]
	public ShootyVRSceneryHider()
	{
	}
}
[Serializable]
[Token(Token = "0x200017E")]
public struct ResourcePathLanguagePair
{
	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public string id;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SystemLanguage language;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string resourcePath;
}
[Token(Token = "0x200017F")]
public class ShootyVRScreenFade : SingletonMono<ShootyVRScreenFade>
{
	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float ScreenFadeOutTime;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly float ScreenFadeInTime;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1648", Offset = "0x7D1648")]
	public Transform cameraTransform;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1680", Offset = "0x7D1680")]
	public float logoZOffset;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D16B8", Offset = "0x7D16B8")]
	public Transform fadeParent;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform transitionEffectsParent;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform overlayObjectParent;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D16F0", Offset = "0x7D16F0")]
	public MeshRenderer fadeSphere;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator fadeAnimator;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OVROverlay[] logoOverlays;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public OVROverlay screenFlashOverlay;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TerrainFadeInController terrainFade;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1728", Offset = "0x7D1728")]
	public OVROverlay oculusOverlay;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshRenderer steamOverlay;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string defaultResourcePath;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<ResourcePathLanguagePair> localizedPairings;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SystemLanguage previousLanguage;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string previousResourcePath;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public float Anim_OVRoverlayAlpha;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public float Anim_OVRScreenFlashAlpha;

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xB620C4", Offset = "0xB620C4", VA = "0xB620C4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xB62224", Offset = "0xB62224", VA = "0xB62224")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xB62678", Offset = "0xB62678", VA = "0xB62678")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xB62748", Offset = "0xB62748", VA = "0xB62748")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xB623B8", Offset = "0xB623B8", VA = "0xB623B8")]
	private void tryUpdateLogoTextures()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xB628FC", Offset = "0xB628FC", VA = "0xB628FC")]
	private string getResourcePathForLanguage(SystemLanguage language)
	{
		return null;
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xB629D4", Offset = "0xB629D4", VA = "0xB629D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xB621C4", Offset = "0xB621C4", VA = "0xB621C4")]
	private void updateFadeAndScreenFlashPositions()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xB62A80", Offset = "0xB62A80", VA = "0xB62A80")]
	private void updateOVROverlaysAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xB62AF4", Offset = "0xB62AF4", VA = "0xB62AF4")]
	private void updateOVROverlayAlpha(OVROverlay overlay, float alpha)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xB62B48", Offset = "0xB62B48", VA = "0xB62B48")]
	public void SetSortingOrder()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xB62BB8", Offset = "0xB62BB8", VA = "0xB62BB8")]
	public void runFadeOutTransition(bool runTerrainFadeEffect)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xB62D70", Offset = "0xB62D70", VA = "0xB62D70")]
	public void runFadeInTransition(bool runTerrainFadeEffect)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xB62124", Offset = "0xB62124", VA = "0xB62124")]
	public void updateEffectsPositioning()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xB62EA0", Offset = "0xB62EA0", VA = "0xB62EA0")]
	public void FadeInTerrainFromTutorial()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xB62EFC", Offset = "0xB62EFC", VA = "0xB62EFC")]
	public void CrossFadeSkyBG(float alpha)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xB62F1C", Offset = "0xB62F1C", VA = "0xB62F1C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xB62F90", Offset = "0xB62F90", VA = "0xB62F90")]
	public void ResetTerrain()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xB62C7C", Offset = "0xB62C7C", VA = "0xB62C7C")]
	private void resetLogoPosition()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xB62FAC", Offset = "0xB62FAC", VA = "0xB62FAC")]
	public ShootyVRScreenFade()
	{
	}
}
[Token(Token = "0x2000180")]
public class ShootyVRTrackToEyeHeight : MonoBehaviour
{
	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1780", Offset = "0x7D1780")]
	public float maxTrackingSpeed;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minTrackingSpeed;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speedMaxThreshold;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D17B8", Offset = "0x7D17B8")]
	public float offset;

	[Token(Token = "0x40008ED")]
	private const float CloseThreshold = 0.1f;

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xB63EBC", Offset = "0xB63EBC", VA = "0xB63EBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xB64070", Offset = "0xB64070", VA = "0xB64070")]
	public ShootyVRTrackToEyeHeight()
	{
	}
}
[Token(Token = "0x2000181")]
public class ShootableSlider : MonoBehaviour, IRaycastable
{
	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider theCollider;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider theSlider;

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xB5F13C", Offset = "0xB5F13C", VA = "0xB5F13C", Slot = "4")]
	public bool canBeHit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xB5F284", Offset = "0xB5F284", VA = "0xB5F284", Slot = "5")]
	public void raycastHit(Vector3 hitpoint)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xB5F340", Offset = "0xB5F340", VA = "0xB5F340")]
	public ShootableSlider()
	{
	}
}
[Serializable]
[Token(Token = "0x2000182")]
public class ButtonUnityEvent : UnityEvent
{
	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x9F5F5C", Offset = "0x9F5F5C", VA = "0x9F5F5C")]
	public ButtonUnityEvent()
	{
	}
}
[Token(Token = "0x2000183")]
public class SimpleShootableButton : MonoBehaviour, IDamageable, IRaycastable
{
	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D17F0", Offset = "0x7D17F0")]
	public ButtonUnityEvent activatedEvent;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string pressedSound;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1828", Offset = "0x7D1828")]
	public ButtonUnityEvent onHoverEvent;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool scaleUpOnHover;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1860", Offset = "0x7D1860")]
	[HideInInspector]
	public bool canBeDisabled;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Image buttonBackground;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public MaskableGraphic buttonLabel;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isDisabled;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Color enabledColor;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Color disabledColor;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentHitCount;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float resetTime;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isToggledOn;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool bootstrapped;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float hoverResetTime;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 baseScale;

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xB6C040", Offset = "0xB6C040", VA = "0xB6C040")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xB6C10C", Offset = "0xB6C10C", VA = "0xB6C10C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xB6C114", Offset = "0xB6C114", VA = "0xB6C114")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xB6C388", Offset = "0xB6C388", VA = "0xB6C388")]
	public void updateDisabledState(bool isDisabled)
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xB6C464", Offset = "0xB6C464", VA = "0xB6C464", Slot = "4")]
	public bool isAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xB6C46C", Offset = "0xB6C46C", VA = "0xB6C46C", Slot = "5")]
	public bool isDamageable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xB6C514", Offset = "0xB6C514", VA = "0xB6C514", Slot = "6")]
	public void takeDamage(float damageAmount, string damageSource)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xB6C644", Offset = "0xB6C644", VA = "0xB6C644")]
	private void buttonActivationLogic()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xB6C104", Offset = "0xB6C104", VA = "0xB6C104")]
	private void resetHitCount()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xB6C7E8", Offset = "0xB6C7E8", VA = "0xB6C7E8")]
	public void toggleActivation(bool toggle)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xB6C470", Offset = "0xB6C470", VA = "0xB6C470", Slot = "7")]
	public bool canBeHit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xB6C7F4", Offset = "0xB6C7F4", VA = "0xB6C7F4", Slot = "8")]
	public void raycastHit(Vector3 hitpoint)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xB6C368", Offset = "0xB6C368", VA = "0xB6C368")]
	public bool isButtonDisabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xB6CA04", Offset = "0xB6CA04", VA = "0xB6CA04")]
	public SimpleShootableButton()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xB6CA70", Offset = "0xB6CA70", VA = "0xB6CA70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7D50", Offset = "0x7D7D50")]
	private void <buttonActivationLogic>b__23_0()
	{
	}
}
[Token(Token = "0x2000184")]
public class WorldLoadButtonMenu : MonoBehaviour
{
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE0D0", Offset = "0x7CE0D0")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string worldId;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldLoadButtonMenu <>4__this;

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x13D09FC", Offset = "0x13D09FC", VA = "0x13D09FC")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x13D0A0C", Offset = "0x13D0A0C", VA = "0x13D0A0C")]
		internal void <updateToggle>b__0()
		{
		}
	}

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D18CC", Offset = "0x7D18CC")]
	public Image worldImage;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image bossImage;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1904", Offset = "0x7D1904")]
	public Image easyCompleteIcon;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image mediumCompleteIcon;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image hardCompleteIcon;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite easyMedal;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite mediumMedal;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite hardMedal;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite noMedal;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D193C", Offset = "0x7D193C")]
	public Color worldLockedColor;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1974", Offset = "0x7D1974")]
	public TMP_Text[] worldNameLabels;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_Text worldPilotsLabel;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D19AC", Offset = "0x7D19AC")]
	public List<UIButtonToggle> worldToggleButtons;

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x13CFE24", Offset = "0x13CFE24", VA = "0x13CFE24")]
	private void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x13D019C", Offset = "0x13D019C", VA = "0x13D019C")]
	private void panelWillMoveOut()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x13D026C", Offset = "0x13D026C", VA = "0x13D026C")]
	public void selectWorld(string worldId)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x13CFF74", Offset = "0x13CFF74", VA = "0x13CFF74")]
	public void updateDisplay()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x13D0304", Offset = "0x13D0304", VA = "0x13D0304")]
	private void updateLabels()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x13D04D4", Offset = "0x13D04D4", VA = "0x13D04D4")]
	private void updateCompletionMedals(WorldConfig world)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x13D059C", Offset = "0x13D059C", VA = "0x13D059C")]
	private void updateToggle(UIButtonToggle toggleButton, WorldConfig world, string currentWorldId)
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x13D0714", Offset = "0x13D0714", VA = "0x13D0714")]
	private void updateWorldLabels(string worldName, string pilotLabel)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x13D0810", Offset = "0x13D0810", VA = "0x13D0810")]
	private void updateWorldImages(string worldId, Color color)
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x13D0A04", Offset = "0x13D0A04", VA = "0x13D0A04")]
	public WorldLoadButtonMenu()
	{
	}
}
[Token(Token = "0x2000185")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CC5C4", Offset = "0x7CC5C4")]
public class VRAutotestMover : MonoBehaviour
{
	[Token(Token = "0x400090D")]
	private const float MinTimeBetweenChanges = 5f;

	[Token(Token = "0x400090E")]
	private const float MaxTimeBetweenChanges = 20f;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D19E4", Offset = "0x7D19E4")]
	public float moveSpeedMin;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float moveSpeedMax;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedMultiplierDuringGameplay;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CinemachinePath thePath;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1A1C", Offset = "0x7D1A1C")]
	public bool updateRotation;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool onlyLookIntoPlayspace;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minTimeBetweenRotationChange;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxTimeBetweenRotationChange;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float moveSpeed;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float position;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeUntilMoveSpeedReset;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timeUntilRotationPositionReset;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float durationOfRotationLoop;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion rotationToFace;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion startRotation;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isActive;

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x13C75FC", Offset = "0x13C75FC", VA = "0x13C75FC")]
	public void activate()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x13C7A84", Offset = "0x13C7A84", VA = "0x13C7A84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x13C762C", Offset = "0x13C762C", VA = "0x13C762C")]
	private void resetMoveSpeed()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x13C7710", Offset = "0x13C7710", VA = "0x13C7710")]
	private void resetRotation()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x13C7CD4", Offset = "0x13C7CD4", VA = "0x13C7CD4")]
	public VRAutotestMover()
	{
	}
}
[Token(Token = "0x2000186")]
public enum MightyVRControlSide
{
	[Token(Token = "0x4000921")]
	Left = 0,
	[Token(Token = "0x4000922")]
	Right = 1,
	[Token(Token = "0x4000923")]
	None = 99
}
[Token(Token = "0x2000187")]
public class MightyVRController : SingletonMono<MightyVRController>
{
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE0E0", Offset = "0x7CE0E0")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MightyVRController <>4__this;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MightyVRControlSide side;

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xA690D0", Offset = "0xA690D0", VA = "0xA690D0")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xA69234", Offset = "0xA69234", VA = "0xA69234")]
		internal void <pulseControllerVibration>b__0()
		{
		}
	}

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MightyVRWrapper currentVRWrapper;

	[Token(Token = "0x17000069")]
	private bool hasWrapper
	{
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xA68920", Offset = "0xA68920", VA = "0xA68920")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xA68930", Offset = "0xA68930", VA = "0xA68930")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xA68BDC", Offset = "0xA68BDC", VA = "0xA68BDC")]
	public void enableTestingWrapper()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xA68C48", Offset = "0xA68C48", VA = "0xA68C48")]
	public void enableNewTestingWrapper(NewTestbotVRWrapper wrapper)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xA68C50", Offset = "0xA68C50", VA = "0xA68C50")]
	public static bool isVRReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xA68D78", Offset = "0xA68D78", VA = "0xA68D78")]
	public Vector3 getEyePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xA68E48", Offset = "0xA68E48", VA = "0xA68E48")]
	public Transform getEyeTransform()
	{
		return null;
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xA68E60", Offset = "0xA68E60", VA = "0xA68E60")]
	public Vector3[] getPlayAreaBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xA68E78", Offset = "0xA68E78", VA = "0xA68E78")]
	public Vector3[] getOuterBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xA68E90", Offset = "0xA68E90", VA = "0xA68E90")]
	public float getGrabFlex(MightyVRControlSide side)
	{
		return default(float);
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xA68EB4", Offset = "0xA68EB4", VA = "0xA68EB4")]
	public Vector2 getJoystickDirection(MightyVRControlSide side)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xA68F50", Offset = "0xA68F50", VA = "0xA68F50")]
	public bool isAFaceButtonDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xA68F74", Offset = "0xA68F74", VA = "0xA68F74")]
	public bool isFingerTriggerDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xA68F98", Offset = "0xA68F98", VA = "0xA68F98")]
	public bool isThumbstickDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xA68FBC", Offset = "0xA68FBC", VA = "0xA68FBC")]
	public void pulseControllerVibration(float frequency, float amplitude, MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xA690D8", Offset = "0xA690D8", VA = "0xA690D8")]
	public void setControllerVibration(float frequency, float amplitude, MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xA690F4", Offset = "0xA690F4", VA = "0xA690F4")]
	public void stopControllerVibration(MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xA69118", Offset = "0xA69118", VA = "0xA69118")]
	public void stopAllVibration()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xA69134", Offset = "0xA69134", VA = "0xA69134")]
	public OVRPose getAnchorPoseOffset(MightyVRControlSide side)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xA69150", Offset = "0xA69150", VA = "0xA69150")]
	public string getFaceButtonName()
	{
		return null;
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xA691C4", Offset = "0xA691C4", VA = "0xA691C4")]
	public MightyVRController()
	{
	}
}
[Token(Token = "0x2000188")]
public sealed class MightyVRControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MightyVRController itemToBoot;

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xA69274", Offset = "0xA69274", VA = "0xA69274", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xA69368", Offset = "0xA69368", VA = "0xA69368")]
	public MightyVRControllerBooter()
	{
	}
}
[Token(Token = "0x2000189")]
public abstract class MightyVRWrapper
{
	[Token(Token = "0x6000BE7")]
	public abstract bool isVRReady();

	[Token(Token = "0x6000BE8")]
	public abstract Vector3[] getPlayAreaBoundary();

	[Token(Token = "0x6000BE9")]
	public abstract Vector3[] getOuterBoundary();

	[Token(Token = "0x6000BEA")]
	public abstract Transform getEyeTransform();

	[Token(Token = "0x6000BEB")]
	public abstract float getGrabFlex(MightyVRControlSide side);

	[Token(Token = "0x6000BEC")]
	public abstract Vector2 getJoystickDirection(MightyVRControlSide side);

	[Token(Token = "0x6000BED")]
	public abstract bool isAFaceButtonDown(MightyVRControlSide side);

	[Token(Token = "0x6000BEE")]
	public abstract bool isFingerTriggerDown(MightyVRControlSide side);

	[Token(Token = "0x6000BEF")]
	public abstract bool isThumbstickDown(MightyVRControlSide side);

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xA69370", Offset = "0xA69370", VA = "0xA69370", Slot = "13")]
	public virtual void setControllerVibration(float frequency, float amplitude, MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xA69374", Offset = "0xA69374", VA = "0xA69374", Slot = "14")]
	public virtual void stopAllVibration()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xA69378", Offset = "0xA69378", VA = "0xA69378", Slot = "15")]
	public virtual OVRPose getAnchorPoseOffset(MightyVRControlSide side)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xA69380", Offset = "0xA69380", VA = "0xA69380", Slot = "16")]
	public virtual string getFaceButtonName()
	{
		return null;
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xA693E8", Offset = "0xA693E8", VA = "0xA693E8")]
	protected MightyVRWrapper()
	{
	}
}
[Token(Token = "0x200018A")]
public class NewTestbotVRWrapper : MightyVRWrapper
{
	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE0F0", Offset = "0x7CE0F0")]
	private sealed class <inputControlsLoop>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NewTestbotVRWrapper <>4__this;

		[Token(Token = "0x17000186")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001888")]
			[Address(RVA = "0x11588D4", Offset = "0x11588D4", VA = "0x11588D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600188A")]
			[Address(RVA = "0x115893C", Offset = "0x115893C", VA = "0x115893C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x1157D64", Offset = "0x1157D64", VA = "0x1157D64")]
		[DebuggerHidden]
		public <inputControlsLoop>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x115865C", Offset = "0x115865C", VA = "0x115865C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x1158660", Offset = "0x1158660", VA = "0x1158660", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x11588DC", Offset = "0x11588DC", VA = "0x11588DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private OVRCameraRig cameraRig;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trackingSpace;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MonoBehaviour coroutineHolder;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool fakedGripTriggerDownFlagLeft;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool fakedGripTriggerDownFlagRight;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool fakedFingerTriggerDownFlagLeft;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool fakedFingerTriggerDownFlagRight;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool fakedThumbstickDownFlagLeft;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool fakedThumbstickDownFlagRight;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool fakedFaceButtonIsDown;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 fakeJoystickDirectionLeft;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 fakeJoystickDirectionRight;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> playAreaPoints;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> boundaryPoints;

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x1157C4C", Offset = "0x1157C4C", VA = "0x1157C4C")]
	public NewTestbotVRWrapper(MonoBehaviour monoBehaviour)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x1157CE8", Offset = "0x1157CE8", VA = "0x1157CE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7D60", Offset = "0x7D7D60")]
	private IEnumerator inputControlsLoop()
	{
		return null;
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x1157D90", Offset = "0x1157D90", VA = "0x1157D90")]
	private float chanceToFlipTrigger(bool isDown)
	{
		return default(float);
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x1157E9C", Offset = "0x1157E9C", VA = "0x1157E9C", Slot = "4")]
	public override bool isVRReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x1157EA4", Offset = "0x1157EA4", VA = "0x1157EA4", Slot = "5")]
	public override Vector3[] getPlayAreaBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x1158168", Offset = "0x1158168", VA = "0x1158168", Slot = "6")]
	public override Vector3[] getOuterBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x115842C", Offset = "0x115842C", VA = "0x115842C", Slot = "7")]
	public override Transform getEyeTransform()
	{
		return null;
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x115852C", Offset = "0x115852C", VA = "0x115852C", Slot = "8")]
	public override float getGrabFlex(MightyVRControlSide side)
	{
		return default(float);
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x11585F4", Offset = "0x11585F4", VA = "0x11585F4", Slot = "9")]
	public override Vector2 getJoystickDirection(MightyVRControlSide side)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x115861C", Offset = "0x115861C", VA = "0x115861C", Slot = "10")]
	public override bool isAFaceButtonDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x1158624", Offset = "0x1158624", VA = "0x1158624", Slot = "11")]
	public override bool isFingerTriggerDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x1158638", Offset = "0x1158638", VA = "0x1158638", Slot = "12")]
	public override bool isThumbstickDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x115864C", Offset = "0x115864C", VA = "0x115864C")]
	private OVRInput.Controller getControllerForSide(MightyVRControlSide side)
	{
		return default(OVRInput.Controller);
	}
}
[Token(Token = "0x200018B")]
public class OVRWrapper : MightyVRWrapper
{
	[Token(Token = "0x4000934")]
	private const float inputThreshold = 0.001f;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform trackingSpace;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig cameraRig;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isOpenVRUsingValveIndexControllers;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isOpenVRUsingHTCVive;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool isOpenVRUsingOculusTouchController;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 ValveIndexRotationOffsetEulerLeft;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Vector3 ValveIndexRotationOffsetEulerRight;

	[Token(Token = "0x400093C")]
	private const float BoundaryRadius = 0.75f;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Vector3[] defaultStationaryBoundary;

	[Token(Token = "0x400093E")]
	private const float DefaultBoundarySize = 0.75f;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Vector3[] defaultPlayAreaPoints;

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xAF404C", Offset = "0xAF404C", VA = "0xAF404C")]
	public OVRWrapper()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xAF45DC", Offset = "0xAF45DC", VA = "0xAF45DC")]
	private void entitlementCheckCallback(Message msg)
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xAF4310", Offset = "0xAF4310", VA = "0xAF4310")]
	private void entitlementCheckFailed()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xAF46E4", Offset = "0xAF46E4", VA = "0xAF46E4", Slot = "4")]
	public override bool isVRReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xAF47EC", Offset = "0xAF47EC", VA = "0xAF47EC", Slot = "5")]
	public override Vector3[] getPlayAreaBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xAF4BC0", Offset = "0xAF4BC0", VA = "0xAF4BC0", Slot = "6")]
	public override Vector3[] getOuterBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xAF4BC8", Offset = "0xAF4BC8", VA = "0xAF4BC8", Slot = "7")]
	public override Transform getEyeTransform()
	{
		return null;
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xAF4CC8", Offset = "0xAF4CC8", VA = "0xAF4CC8", Slot = "8")]
	public override float getGrabFlex(MightyVRControlSide side)
	{
		return default(float);
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xAF4D74", Offset = "0xAF4D74", VA = "0xAF4D74", Slot = "9")]
	public override Vector2 getJoystickDirection(MightyVRControlSide side)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xAF4EDC", Offset = "0xAF4EDC", VA = "0xAF4EDC", Slot = "10")]
	public override bool isAFaceButtonDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xAF50B0", Offset = "0xAF50B0", VA = "0xAF50B0")]
	private bool isXRButtonDown(XRNode side, InputFeatureUsage<bool> button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xAF518C", Offset = "0xAF518C", VA = "0xAF518C", Slot = "16")]
	public override string getFaceButtonName()
	{
		return null;
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xAF5218", Offset = "0xAF5218", VA = "0xAF5218", Slot = "11")]
	public override bool isFingerTriggerDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xAF52A4", Offset = "0xAF52A4", VA = "0xAF52A4", Slot = "12")]
	public override bool isThumbstickDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xAF532C", Offset = "0xAF532C", VA = "0xAF532C", Slot = "13")]
	public override void setControllerVibration(float frequency, float amplitude, MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xAF53B8", Offset = "0xAF53B8", VA = "0xAF53B8", Slot = "14")]
	public override void stopAllVibration()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xAF544C", Offset = "0xAF544C", VA = "0xAF544C", Slot = "15")]
	public override OVRPose getAnchorPoseOffset(MightyVRControlSide side)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xAF47F4", Offset = "0xAF47F4", VA = "0xAF47F4")]
	private Vector3[] getBoundaryPoints(OVRBoundary.BoundaryType boundaryType)
	{
		return null;
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xAF4D64", Offset = "0xAF4D64", VA = "0xAF4D64")]
	private OVRInput.Controller getControllerForSide(MightyVRControlSide side)
	{
		return default(OVRInput.Controller);
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xAF57AC", Offset = "0xAF57AC", VA = "0xAF57AC")]
	private void onDeviceConnectionChange(InputDevice device)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xAF4388", Offset = "0xAF4388", VA = "0xAF4388")]
	private void refreshGameControllers()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xAF55A0", Offset = "0xAF55A0", VA = "0xAF55A0")]
	private static Vector3[] getDefaultOuterBoundaryPoints()
	{
		return null;
	}
}
[Token(Token = "0x200018C")]
public class SteamVRWrapper : MightyVRWrapper
{
	[Token(Token = "0x4000940")]
	private const float inputThreshold = 0.001f;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform trackingSpace;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig cameraRig;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isOpenVRUsingValveIndexControllers;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isOpenVRUsingHTCVive;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 ValveIndexRotationOffsetEulerLeft;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Vector3 ValveIndexRotationOffsetEulerRight;

	[Token(Token = "0x4000947")]
	private const float BoundaryRadius = 0.75f;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Vector3[] defaultStationaryBoundary;

	[Token(Token = "0x4000949")]
	private const float DefaultBoundarySize = 0.75f;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Vector3[] defaultPlayAreaPoints;

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xA11F94", Offset = "0xA11F94", VA = "0xA11F94")]
	public SteamVRWrapper()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xA12230", Offset = "0xA12230", VA = "0xA12230", Slot = "8")]
	public override float getGrabFlex(MightyVRControlSide side)
	{
		return default(float);
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xA12238", Offset = "0xA12238", VA = "0xA12238", Slot = "9")]
	public override Vector2 getJoystickDirection(MightyVRControlSide side)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xA12298", Offset = "0xA12298", VA = "0xA12298", Slot = "10")]
	public override bool isAFaceButtonDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xA122A0", Offset = "0xA122A0", VA = "0xA122A0", Slot = "11")]
	public override bool isFingerTriggerDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xA122A8", Offset = "0xA122A8", VA = "0xA122A8", Slot = "12")]
	public override bool isThumbstickDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xA122B0", Offset = "0xA122B0", VA = "0xA122B0", Slot = "13")]
	public override void setControllerVibration(float frequency, float amplitude, MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xA122B4", Offset = "0xA122B4", VA = "0xA122B4", Slot = "14")]
	public override void stopAllVibration()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xA122B8", Offset = "0xA122B8", VA = "0xA122B8", Slot = "4")]
	public override bool isVRReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xA123C0", Offset = "0xA123C0", VA = "0xA123C0", Slot = "5")]
	public override Vector3[] getPlayAreaBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xA12794", Offset = "0xA12794", VA = "0xA12794", Slot = "6")]
	public override Vector3[] getOuterBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xA1279C", Offset = "0xA1279C", VA = "0xA1279C", Slot = "7")]
	public override Transform getEyeTransform()
	{
		return null;
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xA1289C", Offset = "0xA1289C", VA = "0xA1289C", Slot = "16")]
	public override string getFaceButtonName()
	{
		return null;
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xA12928", Offset = "0xA12928", VA = "0xA12928", Slot = "15")]
	public override OVRPose getAnchorPoseOffset(MightyVRControlSide side)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xA123C8", Offset = "0xA123C8", VA = "0xA123C8")]
	private Vector3[] getBoundaryPoints(OVRBoundary.BoundaryType boundaryType)
	{
		return null;
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xA12C88", Offset = "0xA12C88", VA = "0xA12C88")]
	private OVRInput.Controller getControllerForSide(MightyVRControlSide side)
	{
		return default(OVRInput.Controller);
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xA12C98", Offset = "0xA12C98", VA = "0xA12C98")]
	private void onDeviceConnectionChange(InputDevice device)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xA1205C", Offset = "0xA1205C", VA = "0xA1205C")]
	private void refreshGameControllers()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xA12A7C", Offset = "0xA12A7C", VA = "0xA12A7C")]
	private static Vector3[] getDefaultOuterBoundaryPoints()
	{
		return null;
	}
}
[Token(Token = "0x200018D")]
public class TestbotVRWrapper : MightyVRWrapper
{
	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE100", Offset = "0x7CE100")]
	private sealed class <inputControlsLoop>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestbotVRWrapper <>4__this;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600188E")]
			[Address(RVA = "0xA16E78", Offset = "0xA16E78", VA = "0xA16E78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001890")]
			[Address(RVA = "0xA16EE0", Offset = "0xA16EE0", VA = "0xA16EE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xA16308", Offset = "0xA16308", VA = "0xA16308")]
		[DebuggerHidden]
		public <inputControlsLoop>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xA16C00", Offset = "0xA16C00", VA = "0xA16C00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xA16C04", Offset = "0xA16C04", VA = "0xA16C04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xA16E80", Offset = "0xA16E80", VA = "0xA16E80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private OVRCameraRig cameraRig;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trackingSpace;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MonoBehaviour coroutineHolder;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool fakedGripTriggerDownFlagLeft;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool fakedGripTriggerDownFlagRight;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool fakedFingerTriggerDownFlagLeft;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool fakedFingerTriggerDownFlagRight;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool fakedThumbstickDownFlagLeft;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool fakedThumbstickDownFlagRight;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	private bool fakedFaceButtonIsDown;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 fakeJoystickDirectionLeft;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 fakeJoystickDirectionRight;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> playAreaPoints;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> boundaryPoints;

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xA161C8", Offset = "0xA161C8", VA = "0xA161C8")]
	public TestbotVRWrapper(MonoBehaviour monoBehaviour)
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xA1628C", Offset = "0xA1628C", VA = "0xA1628C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7DC4", Offset = "0x7D7DC4")]
	private IEnumerator inputControlsLoop()
	{
		return null;
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xA16334", Offset = "0xA16334", VA = "0xA16334")]
	private float chanceToFlipTrigger(bool isDown)
	{
		return default(float);
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xA16440", Offset = "0xA16440", VA = "0xA16440", Slot = "4")]
	public override bool isVRReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xA16448", Offset = "0xA16448", VA = "0xA16448", Slot = "5")]
	public override Vector3[] getPlayAreaBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xA1670C", Offset = "0xA1670C", VA = "0xA1670C", Slot = "6")]
	public override Vector3[] getOuterBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xA169D0", Offset = "0xA169D0", VA = "0xA169D0", Slot = "7")]
	public override Transform getEyeTransform()
	{
		return null;
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xA16AD0", Offset = "0xA16AD0", VA = "0xA16AD0", Slot = "8")]
	public override float getGrabFlex(MightyVRControlSide side)
	{
		return default(float);
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xA16B98", Offset = "0xA16B98", VA = "0xA16B98", Slot = "9")]
	public override Vector2 getJoystickDirection(MightyVRControlSide side)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xA16BC0", Offset = "0xA16BC0", VA = "0xA16BC0", Slot = "10")]
	public override bool isAFaceButtonDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xA16BC8", Offset = "0xA16BC8", VA = "0xA16BC8", Slot = "11")]
	public override bool isFingerTriggerDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xA16BDC", Offset = "0xA16BDC", VA = "0xA16BDC", Slot = "12")]
	public override bool isThumbstickDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xA16BF0", Offset = "0xA16BF0", VA = "0xA16BF0")]
	private OVRInput.Controller getControllerForSide(MightyVRControlSide side)
	{
		return default(OVRInput.Controller);
	}
}
[Token(Token = "0x200018E")]
public class OffhandBulletShield : OffhandPower
{
	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string ShieldHitEffect;

	[Token(Token = "0x400095A")]
	private const string SoundLoopId = "BulletShieldLoop";

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int bulletsBlockedCount;

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xAFADB8", Offset = "0xAFADB8", VA = "0xAFADB8", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xAFB038", Offset = "0xAFB038", VA = "0xAFB038", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xAFB1C8", Offset = "0xAFB1C8", VA = "0xAFB1C8", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xAFB1CC", Offset = "0xAFB1CC", VA = "0xAFB1CC")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xAFB32C", Offset = "0xAFB32C", VA = "0xAFB32C")]
	private void playOnHitEffect(Vector3 position)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xAFB458", Offset = "0xAFB458", VA = "0xAFB458")]
	public OffhandBulletShield()
	{
	}
}
[Token(Token = "0x200018F")]
public class OffhandChainsaw : OffhandPower
{
	[Token(Token = "0x400095C")]
	private const string ChainsawHitLoopId = "ChainsawHitLoop";

	[Token(Token = "0x400095D")]
	private const string SoundLoopId = "ChainsawLoop";

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform content;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float damagePerTick;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float timeBetweenHitSounds;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float timeToSpringToPosition;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float timeToSpringToPositionCollision;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject shortCollisionDelegate;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject extendedCollisionDelegate;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ModelSwapAnimation modelSwapper;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1A54", Offset = "0x7D1A54")]
	public float timeToTurnOffSoundAfterHits;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float timeUntilNextSound;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 positionVelocity;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Quaternion rotationalVelocity;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool previousIsDown;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool isTriggerDown;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
	private bool isHitting;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float lastHitTime;

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xAFB4C4", Offset = "0xAFB4C4", VA = "0xAFB4C4", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xAFB6D0", Offset = "0xAFB6D0", VA = "0xAFB6D0", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xAFB7B8", Offset = "0xAFB7B8", VA = "0xAFB7B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xAFB838", Offset = "0xAFB838", VA = "0xAFB838", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xAFBC0C", Offset = "0xAFBC0C", VA = "0xAFBC0C")]
	private void activateChainsaw()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xAFBD3C", Offset = "0xAFBD3C", VA = "0xAFBD3C")]
	private void deactivateChainsaw()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xAFBE20", Offset = "0xAFBE20", VA = "0xAFBE20")]
	public void hitDamageable(IDamageable hitItem, Vector3 hitPosition)
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xAFC060", Offset = "0xAFC060", VA = "0xAFC060")]
	private void playHitSound()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xAFB5D0", Offset = "0xAFB5D0", VA = "0xAFB5D0")]
	private void resetContent()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xAFC0F0", Offset = "0xAFC0F0", VA = "0xAFC0F0")]
	public OffhandChainsaw()
	{
	}
}
[Token(Token = "0x2000190")]
public class OffhandCopilot : OffhandPower
{
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE110", Offset = "0x7CE110")]
	private sealed class <launch>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OffhandCopilot <>4__this;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyBossHeadController head;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__2;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0xAFD5E0", Offset = "0xAFD5E0", VA = "0xAFD5E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001896")]
			[Address(RVA = "0xAFD648", Offset = "0xAFD648", VA = "0xAFD648", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xAFC844", Offset = "0xAFC844", VA = "0xAFC844")]
		[DebuggerHidden]
		public <launch>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xAFD1D0", Offset = "0xAFD1D0", VA = "0xAFD1D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xAFD1D4", Offset = "0xAFD1D4", VA = "0xAFD1D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xAFD5E8", Offset = "0xAFD5E8", VA = "0xAFD5E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE120", Offset = "0x7CE120")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OffhandCopilot <>4__this;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string powerupId;

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xAFCA48", Offset = "0xAFCA48", VA = "0xAFCA48")]
		public <>c__DisplayClass27_0()
		{
		}
	}

	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE130", Offset = "0x7CE130")]
	private sealed class <>c__DisplayClass27_1
	{
		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDamageable theDamageable;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass27_0 CS$<>8__locals1;

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xAFCA50", Offset = "0xAFCA50", VA = "0xAFCA50")]
		public <>c__DisplayClass27_1()
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xAFD0F4", Offset = "0xAFD0F4", VA = "0xAFD0F4")]
		internal void <applyDamage>b__0()
		{
		}
	}

	[Token(Token = "0x400096E")]
	private const string CopilotFireGunLoopId = "CopilotGunLoop";

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1A8C", Offset = "0x7D1A8C")]
	public PlayerGeo playerGeo;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform animationTransform;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1AC4", Offset = "0x7D1AC4")]
	public OffhandPugHitscanGun hitScanGun;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1AFC", Offset = "0x7D1AFC")]
	public Transform rotationTransform;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1B34", Offset = "0x7D1B34")]
	public float minTimeBetweenSounds;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float maxTimeBetweenSounds;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1B6C", Offset = "0x7D1B6C")]
	public Transform targetParent;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform target;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float minSpeed;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float maxSpeed;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve speedUpCurve;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float speedIncreaseTime;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1BA4", Offset = "0x7D1BA4")]
	public float explosionDamage;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string explosionVFX;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float explosionRadius;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public LayerMask hitLayerMask;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1BDC", Offset = "0x7D1BDC")]
	public GameObject trail;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float bulletsPerSecond;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float timeUntilPlaySound;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private MightyVRControlSide activeSide;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool previousIsFiring;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float gunCountdown;

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xAFC10C", Offset = "0xAFC10C", VA = "0xAFC10C")]
	public void activateForPilot(string pilotId, ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xAFC38C", Offset = "0xAFC38C", VA = "0xAFC38C")]
	public void setupVisuals(string pilotId)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xAFC560", Offset = "0xAFC560", VA = "0xAFC560", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xAFC7AC", Offset = "0xAFC7AC", VA = "0xAFC7AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7E28", Offset = "0x7D7E28")]
	private IEnumerator launch(EnemyBossHeadController head)
	{
		return null;
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xAFC870", Offset = "0xAFC870", VA = "0xAFC870")]
	private bool applyDamage(IDamageable thingToDamage, string powerupId, int hitCount)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xAFCA58", Offset = "0xAFCA58", VA = "0xAFCA58", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xAFCEE4", Offset = "0xAFCEE4", VA = "0xAFCEE4")]
	private void updatePilotRotation()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xAFC290", Offset = "0xAFC290", VA = "0xAFC290")]
	private void resetMeteorObjects()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xAFD0C8", Offset = "0xAFD0C8", VA = "0xAFD0C8")]
	public OffhandCopilot()
	{
	}
}
[Token(Token = "0x2000191")]
public class OffhandMeteor : OffhandPower
{
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE140", Offset = "0x7CE140")]
	private sealed class <launch>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OffhandMeteor <>4__this;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 forward;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x1700018C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600189D")]
			[Address(RVA = "0xAFE524", Offset = "0xAFE524", VA = "0xAFE524", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600189F")]
			[Address(RVA = "0xAFE58C", Offset = "0xAFE58C", VA = "0xAFE58C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xAFDB60", Offset = "0xAFDB60", VA = "0xAFDB60")]
		[DebuggerHidden]
		public <launch>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xAFE320", Offset = "0xAFE320", VA = "0xAFE320", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xAFE324", Offset = "0xAFE324", VA = "0xAFE324", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xAFE52C", Offset = "0xAFE52C", VA = "0xAFE52C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE150", Offset = "0x7CE150")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OffhandMeteor <>4__this;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string powerupId;

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xAFE1D8", Offset = "0xAFE1D8", VA = "0xAFE1D8")]
		public <>c__DisplayClass26_0()
		{
		}
	}

	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE160", Offset = "0x7CE160")]
	private sealed class <>c__DisplayClass26_1
	{
		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDamageable theDamageable;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass26_0 CS$<>8__locals1;

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xAFE1E0", Offset = "0xAFE1E0", VA = "0xAFE1E0")]
		public <>c__DisplayClass26_1()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xAFE224", Offset = "0xAFE224", VA = "0xAFE224")]
		internal void <applyDamage>b__0()
		{
		}
	}

	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE170", Offset = "0x7CE170")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem system;

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xAFE1E8", Offset = "0xAFE1E8", VA = "0xAFE1E8")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xAFE300", Offset = "0xAFE300", VA = "0xAFE300")]
		internal void <explosionEffect>b__0()
		{
		}
	}

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1C14", Offset = "0x7D1C14")]
	public Transform target;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Collider targetCollider;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float timeToLive;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1C4C", Offset = "0x7D1C4C")]
	public float timeUntilThrowAllowed;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1C84", Offset = "0x7D1C84")]
	public AnimationCurve speedUpCurve;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float speedUpDuration;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float startSpeed;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float endSpeed;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystem meteorTrail;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1CBC", Offset = "0x7D1CBC")]
	public GameObject aimVector;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1CF4", Offset = "0x7D1CF4")]
	public LayerMask hitLayerMask;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float explosionRadius;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float explosionDamage;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string explosionVFX;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform parentOfTarget;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1D2C", Offset = "0x7D1D2C")]
	private bool <isThrown>k__BackingField;

	[Token(Token = "0x1700006A")]
	public bool isThrown
	{
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xAFD650", Offset = "0xAFD650", VA = "0xAFD650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7E8C", Offset = "0x7D7E8C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xAFD658", Offset = "0xAFD658", VA = "0xAFD658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7E9C", Offset = "0x7D7E9C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xAFD664", Offset = "0xAFD664", VA = "0xAFD664", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xAFD890", Offset = "0xAFD890", VA = "0xAFD890", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xAFD8C4", Offset = "0xAFD8C4", VA = "0xAFD8C4", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xAFD9B8", Offset = "0xAFD9B8", VA = "0xAFD9B8")]
	private void fireMeteor()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xAFDAC0", Offset = "0xAFDAC0", VA = "0xAFDAC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7EAC", Offset = "0x7D7EAC")]
	private IEnumerator launch(Vector3 forward)
	{
		return null;
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xAFDB8C", Offset = "0xAFDB8C", VA = "0xAFDB8C")]
	private void checkForCollision()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xAFDCFC", Offset = "0xAFDCFC", VA = "0xAFDCFC")]
	private void explode()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xAFE000", Offset = "0xAFE000", VA = "0xAFE000")]
	private bool applyDamage(IDamageable thingToDamage, string powerupId, int hitCount)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xAFDE38", Offset = "0xAFDE38", VA = "0xAFDE38")]
	public void explosionEffect(string key, Vector3 position)
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xAFD760", Offset = "0xAFD760", VA = "0xAFD760")]
	private void resetState(bool isVisible = false)
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xAFE1F0", Offset = "0xAFE1F0", VA = "0xAFE1F0")]
	public OffhandMeteor()
	{
	}
}
[Token(Token = "0x2000192")]
public abstract class OffhandPower : MonoBehaviour
{
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE180", Offset = "0x7CE180")]
	private sealed class <flashLoop>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OffhandPower <>4__this;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <betweenFlashes>5__2;

		[Token(Token = "0x1700018E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0xAFEB7C", Offset = "0xAFEB7C", VA = "0xAFEB7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0xAFEBE4", Offset = "0xAFEBE4", VA = "0xAFEBE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xAFEA24", Offset = "0xAFEA24", VA = "0xAFEA24")]
		[DebuggerHidden]
		public <flashLoop>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xAFEA50", Offset = "0xAFEA50", VA = "0xAFEA50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xAFEA54", Offset = "0xAFEA54", VA = "0xAFEA54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xAFEB84", Offset = "0xAFEB84", VA = "0xAFEB84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000995")]
	private const float WarningFlashValue = 0.5f;

	[Token(Token = "0x4000996")]
	private const float TimeForFlash = 0.125f;

	[Token(Token = "0x4000997")]
	private const float TimeBetweenFlashes = 0.25f;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform geo;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator offHandPowerAnimator;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleModelFlash modelFlash;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem hitEffect;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1D3C", Offset = "0x7D1D3C")]
	private bool <isPowerActive>k__BackingField;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected ShootyVRHandController handController;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1D4C", Offset = "0x7D1D4C")]
	private PowerupConfig <config>k__BackingField;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasShownWarning;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float secondsToShowWarning;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine flashRoutine;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float timeActive;

	[Token(Token = "0x1700006B")]
	public bool isPowerActive
	{
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xAFE594", Offset = "0xAFE594", VA = "0xAFE594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7F10", Offset = "0x7D7F10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xAFE59C", Offset = "0xAFE59C", VA = "0xAFE59C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7F20", Offset = "0x7D7F20")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public PowerupConfig config
	{
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xAFE5A8", Offset = "0xAFE5A8", VA = "0xAFE5A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7F30", Offset = "0x7D7F30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xAFE5B0", Offset = "0xAFE5B0", VA = "0xAFE5B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7F40", Offset = "0x7D7F40")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xAFE5B8", Offset = "0xAFE5B8", VA = "0xAFE5B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xAFAE70", Offset = "0xAFAE70", VA = "0xAFAE70", Slot = "4")]
	public virtual void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xAFB0D0", Offset = "0xAFB0D0", VA = "0xAFB0D0", Slot = "5")]
	public virtual void deactivate()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xAFE6F4", Offset = "0xAFE6F4", VA = "0xAFE6F4")]
	public bool isHolding(ShootyVRHandController handControllerToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xAFE7CC", Offset = "0xAFE7CC", VA = "0xAFE7CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xAFE888", Offset = "0xAFE888", VA = "0xAFE888")]
	protected float activationSecondsLeft()
	{
		return default(float);
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xAFE8AC", Offset = "0xAFE8AC", VA = "0xAFE8AC")]
	private void showWarning()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xAFE9A8", Offset = "0xAFE9A8", VA = "0xAFE9A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7F50", Offset = "0x7D7F50")]
	private IEnumerator flashLoop()
	{
		return null;
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xAFE634", Offset = "0xAFE634", VA = "0xAFE634")]
	private void flashRoutineCleanup()
	{
	}

	[Token(Token = "0x6000C6E")]
	protected abstract void updateProgress(float progressAlpha);

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xAFB460", Offset = "0xAFB460", VA = "0xAFB460")]
	protected OffhandPower()
	{
	}
}
[Token(Token = "0x2000193")]
public class OffhandPugHitscanGun : MonoBehaviour
{
	[Token(Token = "0x40009A3")]
	private const string HitscanHitEffect = "Particles/Shooty2_hitScanBullethit";

	[Token(Token = "0x40009A4")]
	private const string HitscanHitShieldEffect = "Particles/Shooty2_hitScanBullethit_boss";

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1D5C", Offset = "0x7D1D5C")]
	public LayerMask laserLayerMask;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask hitLayerMask;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask removeRaycastHit;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float hitCastRadius;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform guidedAim;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1D94", Offset = "0x7D1D94")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Gradient activeLaserColor;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1DCC", Offset = "0x7D1DCC")]
	public float transformCyclingOffset;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GunFiringEffects[] gunFiringEffects;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GunFiringEffects[] currentEffects;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isRaycastHitting;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int gunFireTransformIndex;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 hitPosition;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject hitGameObject;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isAutofireOnAimEnabled;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool isLaserEnabled;

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xAFC3BC", Offset = "0xAFC3BC", VA = "0xAFC3BC")]
	public void setupGun([Optional] PlayerGeo playerGeo)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xAFCC78", Offset = "0xAFCC78", VA = "0xAFCC78")]
	public bool isShooting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xAFCD70", Offset = "0xAFCD70", VA = "0xAFCD70")]
	public void shootBullet(string damageId)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xAFEBEC", Offset = "0xAFEBEC", VA = "0xAFEBEC")]
	private void tryHitDamageable(string damageId)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xAFCD04", Offset = "0xAFCD04", VA = "0xAFCD04")]
	public void resetMuzzles()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xAFCC98", Offset = "0xAFCC98", VA = "0xAFCC98")]
	public void activateMuzzleFlash()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xAFEFE0", Offset = "0xAFEFE0", VA = "0xAFEFE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xAFF078", Offset = "0xAFF078", VA = "0xAFF078")]
	private void updateLaserSight()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xAFEE2C", Offset = "0xAFEE2C", VA = "0xAFEE2C")]
	private void playHitScanHitEffect(Vector3 position, string hitEffect = "Particles/Shooty2_hitScanBullethit")
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xAFF368", Offset = "0xAFF368", VA = "0xAFF368")]
	private void updateRaycastHitInformation()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xAFC720", Offset = "0xAFC720", VA = "0xAFC720")]
	public void resetRaycastInfo()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xAFC7A4", Offset = "0xAFC7A4", VA = "0xAFC7A4")]
	public void hideLaser()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xAFEDBC", Offset = "0xAFEDBC", VA = "0xAFEDBC")]
	private float currentGunDamageLevel()
	{
		return default(float);
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xAFF698", Offset = "0xAFF698", VA = "0xAFF698")]
	public OffhandPugHitscanGun()
	{
	}
}
[Token(Token = "0x2000194")]
public class OffhandShark : OffhandPower
{
	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1E04", Offset = "0x7D1E04")]
	public LayerMask raycastLayer;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int damageAmount;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float extendSpeed;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float retractSpeed;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float biteRadius;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1E3C", Offset = "0x7D1E3C")]
	public Transform content;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float timeToSpringToPosition;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1E74", Offset = "0x7D1E74")]
	public Transform head;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform headAnchor;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform handleScaler;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isAnimating;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float baseDistance;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 positionVelocity;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Quaternion rotationalVelocity;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool didBiteRecently;

	[Token(Token = "0x40009C4")]
	private const string SoundLoopId = "SharkIdleLoop";

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xAFF6B4", Offset = "0xAFF6B4", VA = "0xAFF6B4", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xAFF934", Offset = "0xAFF934", VA = "0xAFF934", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xAFFA0C", Offset = "0xAFFA0C", VA = "0xAFFA0C", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xB000E8", Offset = "0xB000E8", VA = "0xB000E8")]
	private void positionAndPlayBiteVFX()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xAFF858", Offset = "0xAFF858", VA = "0xAFF858")]
	private void resetContent()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xB00168", Offset = "0xB00168", VA = "0xB00168")]
	public OffhandShark()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xB001A0", Offset = "0xB001A0", VA = "0xB001A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7FB4", Offset = "0x7D7FB4")]
	private void <updateProgress>b__18_0()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xB00234", Offset = "0xB00234", VA = "0xB00234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7FC4", Offset = "0x7D7FC4")]
	private void <positionAndPlayBiteVFX>b__19_0()
	{
	}
}
[Token(Token = "0x2000195")]
public class OffhandTrumpet : OffhandPower
{
	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string TrumpetBulletKey;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1EAC", Offset = "0x7D1EAC")]
	public Transform trumpetMouthpiece;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 offsetToMouth;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float distanceToActivate;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1EE4", Offset = "0x7D1EE4")]
	public Transform trumpetFiringSpot;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float timeBetweenShots;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem muzzleFlash;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float timeUntilNextShot;

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xB00254", Offset = "0xB00254", VA = "0xB00254", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xB0026C", Offset = "0xB0026C", VA = "0xB0026C", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xB004E0", Offset = "0xB004E0", VA = "0xB004E0")]
	private void launchBullet()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xB00260", Offset = "0xB00260", VA = "0xB00260")]
	private void resetShotTime()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xB00600", Offset = "0xB00600", VA = "0xB00600")]
	public OffhandTrumpet()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xB0066C", Offset = "0xB0066C", VA = "0xB0066C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D7FD4", Offset = "0x7D7FD4")]
	private void <updateProgress>b__9_0()
	{
	}
}
[Token(Token = "0x2000196")]
public class OffhandVacuum : OffhandPower
{
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE190", Offset = "0x7CE190")]
	private sealed class <suctionLoop>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OffhandVacuum <>4__this;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <itemsSuckedInCount>5__2;

		[Token(Token = "0x17000190")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018AE")]
			[Address(RVA = "0xB01170", Offset = "0xB01170", VA = "0xB01170", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018B0")]
			[Address(RVA = "0xB011D8", Offset = "0xB011D8", VA = "0xB011D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xB00BCC", Offset = "0xB00BCC", VA = "0xB00BCC")]
		[DebuggerHidden]
		public <suctionLoop>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xB00F04", Offset = "0xB00F04", VA = "0xB00F04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xB00F08", Offset = "0xB00F08", VA = "0xB00F08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xB01178", Offset = "0xB01178", VA = "0xB01178", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009CD")]
	private const float VacuumRadius = 2.5f;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1F1C", Offset = "0x7D1F1C")]
	public Transform suctionPoint;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LayerMask targetLayer;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float distanceToCleanup;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1F54", Offset = "0x7D1F54")]
	public AnimationCurve suctionForceCurve;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float suctionForceMin;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float suctionForceMax;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float suctionDistanceMax;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1F8C", Offset = "0x7D1F8C")]
	public ParticleSystem suctionVFX;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Transform> itemsBeingSuckedIn;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine suctionRoutine;

	[Token(Token = "0x40009D8")]
	private const string SoundLoopId = "OffhandVacuumLoop";

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xB006FC", Offset = "0xB006FC", VA = "0xB006FC", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xB008D0", Offset = "0xB008D0", VA = "0xB008D0", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xB0095C", Offset = "0xB0095C", VA = "0xB0095C", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xB00854", Offset = "0xB00854", VA = "0xB00854")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D7FE4", Offset = "0x7D7FE4")]
	private IEnumerator suctionLoop()
	{
		return null;
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xB00BF8", Offset = "0xB00BF8", VA = "0xB00BF8")]
	private void applySuction(Transform target, Vector3 suctionPosition)
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xB00D7C", Offset = "0xB00D7C", VA = "0xB00D7C")]
	private void tryCleanup(Transform target)
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xB00E80", Offset = "0xB00E80", VA = "0xB00E80")]
	public OffhandVacuum()
	{
	}
}
[Token(Token = "0x2000197")]
public class OffhandWingcat : OffhandPower
{
	[Token(Token = "0x40009D9")]
	private const string PugFireGunLoopId = "PugGunLoop";

	[Token(Token = "0x40009DA")]
	private const string PugEngineLoopId = "PugGunEngineLoop";

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1FC4", Offset = "0x7D1FC4")]
	public OffhandPugHitscanGun hitScanGun;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D1FFC", Offset = "0x7D1FFC")]
	public Transform rotationTransform;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2034", Offset = "0x7D2034")]
	public string soundKey;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float minTimeBetweenSounds;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float maxTimeBetweenSounds;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float bulletsPerSecond;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float timeUntilPlaySound;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MightyVRControlSide activeSide;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool previousIsFiring;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float gunCountdown;

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xB011E0", Offset = "0xB011E0", VA = "0xB011E0", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xB01318", Offset = "0xB01318", VA = "0xB01318", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xB013D4", Offset = "0xB013D4", VA = "0xB013D4", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xB0161C", Offset = "0xB0161C", VA = "0xB0161C")]
	private void updatePilotRotation()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xB01800", Offset = "0xB01800", VA = "0xB01800")]
	public OffhandWingcat()
	{
	}
}
[Token(Token = "0x2000198")]
public class OffhandYoyo : OffhandPower
{
	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D206C", Offset = "0x7D206C")]
	public Transform yoyo;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LineRenderer stringLine;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GenericDamagingCollisionDelegator collisionDelegator;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ParticleSystem yoyoTrail;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D20A4", Offset = "0x7D20A4")]
	public float rotationSpeed;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float forwardSpeed;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float extensionDistance;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float feedbackAmplitude;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isExtending;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 extensionTarget;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform yoyoParent;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool previousIsTriggerDown;

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xB01814", Offset = "0xB01814", VA = "0xB01814", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xB01B14", Offset = "0xB01B14", VA = "0xB01B14", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xB01BC8", Offset = "0xB01BC8", VA = "0xB01BC8", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xB02294", Offset = "0xB02294", VA = "0xB02294")]
	private bool isYoyoInHand()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xB021B4", Offset = "0xB021B4", VA = "0xB021B4")]
	private bool canBeRetracted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xB01FF8", Offset = "0xB01FF8", VA = "0xB01FF8")]
	private void extendOut()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xB021AC", Offset = "0xB021AC", VA = "0xB021AC")]
	private void retract()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xB01980", Offset = "0xB01980", VA = "0xB01980")]
	private void resetYoyo()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xB023BC", Offset = "0xB023BC", VA = "0xB023BC")]
	private void rotateYoyo()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xB01AA8", Offset = "0xB01AA8", VA = "0xB01AA8")]
	private void updateYoyoString()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xB02484", Offset = "0xB02484", VA = "0xB02484")]
	private void playHitEffect()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xB024A4", Offset = "0xB024A4", VA = "0xB024A4")]
	public OffhandYoyo()
	{
	}
}
[Serializable]
[Token(Token = "0x2000199")]
public struct PowerupWeightOverrides
{
	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int yoyo;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int trumpet;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int chainsaw;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int shark;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int meteor;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int shield;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int vacuum;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int wingcatpug;

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x86B6B0", Offset = "0x86B6B0", VA = "0x86B6B0")]
	public Dictionary<string, int> getPowerupWeights()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200019A")]
public class PowerupConfig
{
	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string powerupId;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string prefabKey;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string locId;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float activationDuration;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string allowedWorldId;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameStateList stateList;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D20DC", Offset = "0x7D20DC")]
	private int <lifetimeActivations>k__BackingField;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D20EC", Offset = "0x7D20EC")]
	private int <lifetimeKeyEventCount>k__BackingField;

	[Token(Token = "0x1700006D")]
	public int lifetimeActivations
	{
		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xAA411C", Offset = "0xAA411C", VA = "0xAA411C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8048", Offset = "0x7D8048")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xAA4124", Offset = "0xAA4124", VA = "0xAA4124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8058", Offset = "0x7D8058")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public int lifetimeKeyEventCount
	{
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xAA412C", Offset = "0xAA412C", VA = "0xAA412C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8068", Offset = "0x7D8068")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xAA4134", Offset = "0xAA4134", VA = "0xAA4134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8078", Offset = "0x7D8078")]
		private set
		{
		}
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xAA413C", Offset = "0xAA413C", VA = "0xAA413C")]
	public PowerupConfig(Command theCommand)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xAA4204", Offset = "0xAA4204", VA = "0xAA4204")]
	private void loadState()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xAA42F0", Offset = "0xAA42F0", VA = "0xAA42F0")]
	private void saveState()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xAA43BC", Offset = "0xAA43BC", VA = "0xAA43BC")]
	public string localisedName()
	{
		return null;
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xAA4428", Offset = "0xAA4428", VA = "0xAA4428")]
	public string iconString()
	{
		return null;
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xAA4434", Offset = "0xAA4434", VA = "0xAA4434")]
	public string resourcesPath()
	{
		return null;
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xAA4488", Offset = "0xAA4488", VA = "0xAA4488")]
	public float getActivationDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xAA4490", Offset = "0xAA4490", VA = "0xAA4490")]
	public bool isAllowedToSpawn(string currentWorldId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xAA4520", Offset = "0xAA4520", VA = "0xAA4520")]
	public bool isCopilotPowerup()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xAA4578", Offset = "0xAA4578", VA = "0xAA4578")]
	public void incrementActivationCount()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xAA4588", Offset = "0xAA4588", VA = "0xAA4588")]
	public void incrementKeyEventCount(int amount = 1)
	{
	}
}
[Token(Token = "0x200019B")]
public class PowerupController : SingletonMono<PowerupController>
{
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE1A0", Offset = "0x7CE1A0")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShootyVRHandController controller;

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xABFC8C", Offset = "0xABFC8C", VA = "0xABFC8C")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xABFC94", Offset = "0xABFC94", VA = "0xABFC94")]
		internal void <postActivationLogic>b__0()
		{
		}
	}

	[Token(Token = "0x200035D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE1B0", Offset = "0x7CE1B0")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject toCleanup;

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xABFD1C", Offset = "0xABFD1C", VA = "0xABFD1C")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xABFD24", Offset = "0xABFD24", VA = "0xABFD24")]
		internal void <returnPowerupObject>b__0()
		{
		}
	}

	[Token(Token = "0x4000A01")]
	private const string PopupId = "PowerupActive";

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MappedList<PowerupConfig> powerups;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LootDropTable powerupDrops;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OffhandPower currentActive;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> copilotIds;

	[Token(Token = "0x1700006F")]
	public string currentActiveId
	{
		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xAA4598", Offset = "0xAA4598", VA = "0xAA4598")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xAA4608", Offset = "0xAA4608", VA = "0xAA4608")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xAA483C", Offset = "0xAA483C", VA = "0xAA483C")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xAA4BF4", Offset = "0xAA4BF4", VA = "0xAA4BF4", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xAA4D10", Offset = "0xAA4D10", VA = "0xAA4D10")]
	public List<string> allPowerupIds()
	{
		return null;
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xAA4DE4", Offset = "0xAA4DE4", VA = "0xAA4DE4")]
	public void activatePowerup(ShootyVRHandController controller)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xAA5330", Offset = "0xAA5330", VA = "0xAA5330")]
	public void activatePowerup(string powerupId, ShootyVRHandController controller)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xAA505C", Offset = "0xAA505C", VA = "0xAA505C")]
	private void activatePowerup(PowerupConfig chosenPowerup, ShootyVRHandController controller)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xAA546C", Offset = "0xAA546C", VA = "0xAA546C")]
	public void activateCopilotPowerup(string pilotId, ShootyVRHandController controller)
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xAA5970", Offset = "0xAA5970", VA = "0xAA5970")]
	public string getNextCopilotId()
	{
		return null;
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xAA56D8", Offset = "0xAA56D8", VA = "0xAA56D8")]
	private void postActivationLogic(string popupContent, string powerupId, ShootyVRHandController controller)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xAA5A7C", Offset = "0xAA5A7C", VA = "0xAA5A7C")]
	public void cleanupPowerup(OffhandPower deactivatingPowerup)
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xAA5C68", Offset = "0xAA5C68", VA = "0xAA5C68")]
	private void returnPowerupObject(OffhandPower powerup, float delay = 0.5f)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xAA5D34", Offset = "0xAA5D34", VA = "0xAA5D34")]
	public PowerupConfig getPowerupConfig(string powerupId)
	{
		return null;
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xAA5E10", Offset = "0xAA5E10", VA = "0xAA5E10")]
	public string getPowerupName(string powerupId)
	{
		return null;
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xAA5EF0", Offset = "0xAA5EF0", VA = "0xAA5EF0")]
	public string getPowerupIconCode(string powerupId)
	{
		return null;
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xAA5FD8", Offset = "0xAA5FD8", VA = "0xAA5FD8")]
	public bool isHoldingPower(ShootyVRHandController handController)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xAA6084", Offset = "0xAA6084", VA = "0xAA6084")]
	private void definePowerup(Command theCommand)
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xAA4F10", Offset = "0xAA4F10", VA = "0xAA4F10")]
	private PowerupConfig getNextPowerupConfig()
	{
		return null;
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xAA61B0", Offset = "0xAA61B0", VA = "0xAA61B0")]
	private void levelPlayStarted(object note)
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xAA4844", Offset = "0xAA4844", VA = "0xAA4844")]
	private void resetPowerupDrops(GameMode gameMode = GameMode.None)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xAA6258", Offset = "0xAA6258", VA = "0xAA6258")]
	public List<PowerupConfig> getPowerupsInCurrentWorld()
	{
		return null;
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xAA63F4", Offset = "0xAA63F4", VA = "0xAA63F4")]
	public void debugPrintStats(string powerupId)
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xAA6560", Offset = "0xAA6560", VA = "0xAA6560")]
	public PowerupController()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xAA6608", Offset = "0xAA6608", VA = "0xAA6608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8088", Offset = "0x7D8088")]
	private void <bootstrap>b__7_0()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xAA6610", Offset = "0xAA6610", VA = "0xAA6610")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8098", Offset = "0x7D8098")]
	private void <bootstrap>b__7_1()
	{
	}
}
[Token(Token = "0x200019C")]
public sealed class PowerupControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PowerupController powerupController;

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xABFDE4", Offset = "0xABFDE4", VA = "0xABFDE4", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xABFECC", Offset = "0xABFECC", VA = "0xABFECC", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xABFF08", Offset = "0xABFF08", VA = "0xABFF08")]
	public PowerupControllerBooter()
	{
	}
}
[Token(Token = "0x200019D")]
public sealed class AdjustForScreenSafe : MonoBehaviour
{
	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform myRect;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float screenPercentage;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float scale;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool adhereToScreenSpace;

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xB727EC", Offset = "0xB727EC", VA = "0xB727EC")]
	public AdjustForScreenSafe()
	{
	}
}
[Token(Token = "0x200019E")]
public class ArcadeModifierIcons : MonoBehaviour
{
	[Token(Token = "0x4000A0B")]
	private const float ShowTime = 3f;

	[Token(Token = "0x4000A0C")]
	private const int ShowLimit = 4;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject iconParent;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject noGunsIcon;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject noMissilesIcon;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine noGunsShow;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine noMissilesShow;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int showCountGuns;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int showCountMissiles;

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xB74A3C", Offset = "0xB74A3C", VA = "0xB74A3C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xB74B24", Offset = "0xB74B24", VA = "0xB74B24")]
	public void showGunsBlockedIcon(MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xB74CD4", Offset = "0xB74CD4", VA = "0xB74CD4")]
	private bool CanShowGunIcon()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xB74CF4", Offset = "0xB74CF4", VA = "0xB74CF4")]
	public void showMissilesBlockedIcon(MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xB74EA4", Offset = "0xB74EA4", VA = "0xB74EA4")]
	private bool CanShowMissileIcon()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xB74EC4", Offset = "0xB74EC4", VA = "0xB74EC4")]
	public ArcadeModifierIcons()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xB74ECC", Offset = "0xB74ECC", VA = "0xB74ECC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D80A8", Offset = "0x7D80A8")]
	private void <showGunsBlockedIcon>b__10_0()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xB74F0C", Offset = "0xB74F0C", VA = "0xB74F0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D80B8", Offset = "0x7D80B8")]
	private void <showMissilesBlockedIcon>b__12_0()
	{
	}
}
[Token(Token = "0x200019F")]
public sealed class BackButton : MonoBehaviour
{
	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xB85A8C", Offset = "0xB85A8C", VA = "0xB85A8C")]
	public BackButton()
	{
	}
}
[Token(Token = "0x20001A0")]
public sealed class BackButtonHandler : MonoBehaviour
{
	[Token(Token = "0x200035E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE1C0", Offset = "0x7CE1C0")]
	private sealed class <delayedBoot>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaitForSeconds <delay>5__2;

		[Token(Token = "0x17000192")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018B8")]
			[Address(RVA = "0xB85F88", Offset = "0xB85F88", VA = "0xB85F88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018BA")]
			[Address(RVA = "0xB85FF0", Offset = "0xB85FF0", VA = "0xB85FF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xB85B20", Offset = "0xB85B20", VA = "0xB85B20")]
		[DebuggerHidden]
		public <delayedBoot>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xB85E18", Offset = "0xB85E18", VA = "0xB85E18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xB85E1C", Offset = "0xB85E1C", VA = "0xB85E1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xB85F90", Offset = "0xB85F90", VA = "0xB85F90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xB85A94", Offset = "0xB85A94", VA = "0xB85A94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xB85AC0", Offset = "0xB85AC0", VA = "0xB85AC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D80C8", Offset = "0x7D80C8")]
	private IEnumerator delayedBoot()
	{
		return null;
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xB85B4C", Offset = "0xB85B4C", VA = "0xB85B4C")]
	private void handleBackButton()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xB85D40", Offset = "0xB85D40", VA = "0xB85D40")]
	private bool handlePausePanel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xB85D38", Offset = "0xB85D38", VA = "0xB85D38")]
	private bool handleBackEnabledPanels()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xB85DF8", Offset = "0xB85DF8", VA = "0xB85DF8")]
	private bool handleAreYouSurePanel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xB85E00", Offset = "0xB85E00", VA = "0xB85E00")]
	private bool handleMainMenuTypePanels()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xB85E08", Offset = "0xB85E08", VA = "0xB85E08")]
	private bool handleAppExit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xB85E10", Offset = "0xB85E10", VA = "0xB85E10")]
	public BackButtonHandler()
	{
	}
}
[Token(Token = "0x20001A1")]
public sealed class BoingPopper
{
	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE1D0", Offset = "0x7CE1D0")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform theItem;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startScale;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 midScale;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action complete;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<float> <>9__2;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action <>9__3;

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x9F0438", Offset = "0x9F0438", VA = "0x9F0438")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x9F09F8", Offset = "0x9F09F8", VA = "0x9F09F8")]
		internal void <boingPop>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x9F0AC0", Offset = "0x9F0AC0", VA = "0x9F0AC0")]
		internal void <boingPop>b__1()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x9F0C20", Offset = "0x9F0C20", VA = "0x9F0C20")]
		internal void <boingPop>b__2(float lerpValue)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x9F0CE8", Offset = "0x9F0CE8", VA = "0x9F0CE8")]
		internal void <boingPop>b__3()
		{
		}
	}

	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE1E0", Offset = "0x7CE1E0")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform theItem;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startScale;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 midScale;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 endScale;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action complete;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<float> <>9__2;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__3;

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x9F06DC", Offset = "0x9F06DC", VA = "0x9F06DC")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x9F0DA0", Offset = "0x9F0DA0", VA = "0x9F0DA0")]
		internal void <boingShrink>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x9F0E68", Offset = "0x9F0E68", VA = "0x9F0E68")]
		internal void <boingShrink>b__1()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x9F0FCC", Offset = "0x9F0FCC", VA = "0x9F0FCC")]
		internal void <boingShrink>b__2(float lerpValue)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x9F1098", Offset = "0x9F1098", VA = "0x9F1098")]
		internal void <boingShrink>b__3()
		{
		}
	}

	[Token(Token = "0x2000361")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE1F0", Offset = "0x7CE1F0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform theItem;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startScale;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 midScale;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 endScale;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action complete;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<float> <>9__2;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__3;

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x9F0970", Offset = "0x9F0970", VA = "0x9F0970")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x9F1150", Offset = "0x9F1150", VA = "0x9F1150")]
		internal void <boingGrow>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x9F1218", Offset = "0x9F1218", VA = "0x9F1218")]
		internal void <boingGrow>b__1()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x9F137C", Offset = "0x9F137C", VA = "0x9F137C")]
		internal void <boingGrow>b__2(float lerpValue)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x9F1448", Offset = "0x9F1448", VA = "0x9F1448")]
		internal void <boingGrow>b__3()
		{
		}
	}

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Transform, bool> itemsPopping;

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x9F01BC", Offset = "0x9F01BC", VA = "0x9F01BC")]
	public static bool boingPop(Transform theItem, float scale = 1.3f, float time = 0.25f, [Optional] Action complete)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x9F0440", Offset = "0x9F0440", VA = "0x9F0440")]
	public static bool boingShrink(Transform theItem, float scale = 1.3f, float time = 0.25f, [Optional] Action complete)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x9F06E4", Offset = "0x9F06E4", VA = "0x9F06E4")]
	public static bool boingGrow(Transform theItem, float scale = 1.3f, float time = 0.25f, [Optional] Action complete)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x9F0978", Offset = "0x9F0978", VA = "0x9F0978")]
	public BoingPopper()
	{
	}
}
[Token(Token = "0x20001A2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CC628", Offset = "0x7CC628")]
public sealed class ButtonDebouncer : MonoBehaviour
{
	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float debounceTime;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lastClickedTime;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button theButton;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button.ButtonClickedEvent theButtonEvent;

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x9F5DEC", Offset = "0x9F5DEC", VA = "0x9F5DEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x9F5EF8", Offset = "0x9F5EF8", VA = "0x9F5EF8")]
	public void buttonWasPressed()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x9F5F4C", Offset = "0x9F5F4C", VA = "0x9F5F4C")]
	public ButtonDebouncer()
	{
	}
}
[Token(Token = "0x20001A3")]
public sealed class ChangeLanguageTrigger : MonoBehaviour
{
	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SystemLanguage language;

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x9F65B8", Offset = "0x9F65B8", VA = "0x9F65B8")]
	public void changeMyLanguage()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x9F663C", Offset = "0x9F663C", VA = "0x9F663C")]
	public ChangeLanguageTrigger()
	{
	}
}
[Token(Token = "0x20001A4")]
public class CloudSavePanel : MonoBehaviour
{
	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CloudSavePanelItem localPanelItem;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CloudSavePanelItem cloudSavePanelItem;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CloudSavePanelItem selectedItem;

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x9F8070", Offset = "0x9F8070", VA = "0x9F8070")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x9F857C", Offset = "0x9F857C", VA = "0x9F857C")]
	public void selectLocalSave()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x9F8584", Offset = "0x9F8584", VA = "0x9F8584")]
	public void selectCloudSave()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x9F858C", Offset = "0x9F858C", VA = "0x9F858C")]
	public void confirmButtonWasPressed()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x9F849C", Offset = "0x9F849C", VA = "0x9F849C")]
	private void selectSavePanel(bool isLocalSaveSelected)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x9F8614", Offset = "0x9F8614", VA = "0x9F8614")]
	private void localSaveWasConfirmed()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x9F86A4", Offset = "0x9F86A4", VA = "0x9F86A4")]
	private void cloudSaveWasConfirmed()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x9F8830", Offset = "0x9F8830", VA = "0x9F8830")]
	public CloudSavePanel()
	{
	}
}
[Token(Token = "0x20001A5")]
public class CloudSavePanelItem : MonoBehaviour
{
	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text saveTitle;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text saveHighScore;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text saveTime;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SVGImage tick;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D20FC", Offset = "0x7D20FC")]
	public SVGImage background;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SVGAsset selected;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SVGAsset notSelected;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float scale;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float duration;

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x9F8714", Offset = "0x9F8714", VA = "0x9F8714")]
	public void select()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x9F87E0", Offset = "0x9F87E0", VA = "0x9F87E0")]
	public void deselect()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x9F82B4", Offset = "0x9F82B4", VA = "0x9F82B4")]
	public void setAsNewGame()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x9F8160", Offset = "0x9F8160", VA = "0x9F8160")]
	public void setAsLocalSave()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x9F8388", Offset = "0x9F8388", VA = "0x9F8388")]
	public void setAsCloudSave()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x9F8838", Offset = "0x9F8838", VA = "0x9F8838")]
	public CloudSavePanelItem()
	{
	}
}
[Token(Token = "0x20001A6")]
public class CurrentWavePrintOut : MonoBehaviour
{
	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text waveLabel;

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xA013CC", Offset = "0xA013CC", VA = "0xA013CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xA014D8", Offset = "0xA014D8", VA = "0xA014D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xA01570", Offset = "0xA01570", VA = "0xA01570")]
	private void updateLabel(object note)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xA0162C", Offset = "0xA0162C", VA = "0xA0162C")]
	public CurrentWavePrintOut()
	{
	}
}
[Token(Token = "0x20001A7")]
public sealed class DebugActions : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000362")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE200", Offset = "0x7CE200")]
	private sealed class <>c
	{
		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__13_0;

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xA03F08", Offset = "0xA03F08", VA = "0xA03F08")]
		public <>c()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xA03F10", Offset = "0xA03F10", VA = "0xA03F10")]
		internal void <clearAllGameProgress>b__13_0()
		{
		}
	}

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text showingControllersLabel;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text showingFloorLabel;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text refreshRateLabel;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text refreshRateList;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text FXAAAmountLabel;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material UberMaterial;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isShowingControllers;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool isShowingFloor;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool FXAABlending;

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xA01E74", Offset = "0xA01E74", VA = "0xA01E74")]
	public static bool CanShowControllers()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xA01F0C", Offset = "0xA01F0C", VA = "0xA01F0C")]
	public static bool CanShowFloor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x9F42FC", Offset = "0x9F42FC", VA = "0x9F42FC")]
	public static bool IsDebugAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xA01FA4", Offset = "0xA01FA4", VA = "0xA01FA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xA02610", Offset = "0xA02610", VA = "0xA02610")]
	public void wipeSaves()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xA027B8", Offset = "0xA027B8", VA = "0xA027B8")]
	public void clearAllGameProgress(Transform button)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xA0307C", Offset = "0xA0307C", VA = "0xA0307C")]
	public void unlockAllPilotsWasPressed(Transform button)
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xA02DC0", Offset = "0xA02DC0", VA = "0xA02DC0")]
	public void clearAllMissionProgress(Transform button)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xA02B2C", Offset = "0xA02B2C", VA = "0xA02B2C")]
	public void lockAllPilotsWasPressed(Transform button)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xA0327C", Offset = "0xA0327C", VA = "0xA0327C")]
	public void completeCurrentMission(Transform button)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xA033DC", Offset = "0xA033DC", VA = "0xA033DC")]
	public void unlockAllWorldsWasPressed(Transform button)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xA03564", Offset = "0xA03564", VA = "0xA03564")]
	public void unlockArcadeModeButtonPressed(Transform button)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xA036B8", Offset = "0xA036B8", VA = "0xA036B8")]
	public void lockArcadeModeButtonPressed(Transform button)
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xA02974", Offset = "0xA02974", VA = "0xA02974")]
	public void lockAllWorldsWasPressed(Transform button)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xA03778", Offset = "0xA03778", VA = "0xA03778")]
	public void toggleControllersFlag()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xA03864", Offset = "0xA03864", VA = "0xA03864")]
	public void toggleFloorFlag()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xA02E90", Offset = "0xA02E90", VA = "0xA02E90")]
	public void clearAchievementProgress(Transform button)
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xA03950", Offset = "0xA03950", VA = "0xA03950")]
	public void togglePostProcessing()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xA03A90", Offset = "0xA03A90", VA = "0xA03A90")]
	public void cycleRefreshRate()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xA03CC0", Offset = "0xA03CC0", VA = "0xA03CC0")]
	public void cycleFXAAAmount()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xA03D64", Offset = "0xA03D64", VA = "0xA03D64")]
	private void updateFXAAAmountLabel()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xA024CC", Offset = "0xA024CC", VA = "0xA024CC")]
	private void updateRefreshRateLabel()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xA02214", Offset = "0xA02214", VA = "0xA02214")]
	private void updateControllerToggleLabel()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xA02370", Offset = "0xA02370", VA = "0xA02370")]
	private void updateFloorToggleLabel()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xA02F5C", Offset = "0xA02F5C", VA = "0xA02F5C")]
	private void showPopup(string content)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xA03E38", Offset = "0xA03E38", VA = "0xA03E38")]
	public DebugActions()
	{
	}
}
[Token(Token = "0x20001A8")]
public class DebugDevelopmentDisplay : MonoBehaviour
{
	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject displayParent;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text godModeLabel;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text averageFrameRateText;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text recentLowFrameRateText;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentSecond;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<float> recentFrameTimes;

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xA040F8", Offset = "0xA040F8", VA = "0xA040F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xA0423C", Offset = "0xA0423C", VA = "0xA0423C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xA042D4", Offset = "0xA042D4", VA = "0xA042D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xA04540", Offset = "0xA04540", VA = "0xA04540")]
	private void UpdateFPSDisplay(Text display, int fps, string prefix)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xA045F0", Offset = "0xA045F0", VA = "0xA045F0")]
	private void UpdateGodModeState(object note)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xA04684", Offset = "0xA04684", VA = "0xA04684")]
	public DebugDevelopmentDisplay()
	{
	}
}
[Token(Token = "0x20001A9")]
public class DebugLevelProgress : MonoBehaviour
{
	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fillParent;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image fillBar;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject label;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2134", Offset = "0x7D2134")]
	public float minEaseVelocity;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxEaseVelocity;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float targetFillAmount;

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xA04700", Offset = "0xA04700", VA = "0xA04700")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xA04848", Offset = "0xA04848", VA = "0xA04848")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xA048E0", Offset = "0xA048E0", VA = "0xA048E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xA049DC", Offset = "0xA049DC", VA = "0xA049DC")]
	private void updateProgress(object note)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xA047E8", Offset = "0xA047E8", VA = "0xA047E8")]
	private void reset()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xA04AFC", Offset = "0xA04AFC", VA = "0xA04AFC")]
	public DebugLevelProgress()
	{
	}
}
[Token(Token = "0x20001AA")]
public class DebugLifeTimer : MonoBehaviour
{
	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject contentParent;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text timerLabel;

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xA04B10", Offset = "0xA04B10", VA = "0xA04B10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xA04C28", Offset = "0xA04C28", VA = "0xA04C28")]
	public DebugLifeTimer()
	{
	}
}
[Token(Token = "0x20001AB")]
public class DebugMeshToggles : MonoBehaviour
{
	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool areBulletMeshesEnabled;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool areEnemyMeshesEnabled;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text toggleBulletsLabel;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text toggleEnemiesLabel;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRPlayspace space;

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xA04C30", Offset = "0xA04C30", VA = "0xA04C30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xA04DE0", Offset = "0xA04DE0", VA = "0xA04DE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xA04FB0", Offset = "0xA04FB0", VA = "0xA04FB0")]
	public void toggleEnemyMeshesButtonPressed()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xA05028", Offset = "0xA05028", VA = "0xA05028")]
	public void toggleBulletMeshesButtonPressed()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xA04C34", Offset = "0xA04C34", VA = "0xA04C34")]
	private void updateButtonLabels()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xA050A0", Offset = "0xA050A0", VA = "0xA050A0")]
	public DebugMeshToggles()
	{
	}
}
[Token(Token = "0x20001AC")]
public class DebugOnlyItem : MonoBehaviour
{
	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xA05108", Offset = "0xA05108", VA = "0xA05108", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xA05198", Offset = "0xA05198", VA = "0xA05198")]
	public DebugOnlyItem()
	{
	}
}
[Token(Token = "0x20001AD")]
public sealed class DetailFrameSizer : MonoBehaviour
{
	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float smallHeight;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smallYPos;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float medHeight;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float medYPos;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float tallHeight;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float tallYPos;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float extraTallHeight;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float extraTallYPos;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform myRect;

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xA05FBC", Offset = "0xA05FBC", VA = "0xA05FBC")]
	public void goSmall()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xA060B8", Offset = "0xA060B8", VA = "0xA060B8")]
	public void goMed()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xA060C0", Offset = "0xA060C0", VA = "0xA060C0")]
	public void goTall()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xA060C8", Offset = "0xA060C8", VA = "0xA060C8")]
	public void goExtraTall()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xA05FC4", Offset = "0xA05FC4", VA = "0xA05FC4")]
	public void resize(float height, float yPos)
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xA060D0", Offset = "0xA060D0", VA = "0xA060D0")]
	public DetailFrameSizer()
	{
	}
}
[Token(Token = "0x20001AE")]
public sealed class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text CounterText;

	[Token(Token = "0x4000A4E")]
	private const string intStringFormat = "D2";

	[Token(Token = "0x4000A4F")]
	private const int intStringCacheLength = 100;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string[] intStringCache;

	[Token(Token = "0x4000A51")]
	private const int averageCountLength = 120;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> fpsAverageList;

	[Token(Token = "0x4000A53")]
	private const float textUpdateFrequency = 0.05f;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastTextUpdateTime;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x4000A56")]
	private const string highFpsColourTag = "<color=green>";

	[Token(Token = "0x4000A57")]
	private const string mediumFpsColourTag = "<color=orange>";

	[Token(Token = "0x4000A58")]
	private const string lowFpsColourTag = "<color=red>";

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x9DB8EC", Offset = "0x9DB8EC", VA = "0x9DB8EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x9DBA84", Offset = "0x9DBA84", VA = "0x9DBA84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x9DBE14", Offset = "0x9DBE14", VA = "0x9DBE14")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x20001AF")]
public sealed class FacebookErrorPanel : MonoBehaviour
{
	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action completion;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool debounce;

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x9DBFE8", Offset = "0x9DBFE8", VA = "0x9DBFE8")]
	public static void showErrorPanel([Optional] Action completion)
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x9DC08C", Offset = "0x9DC08C", VA = "0x9DC08C")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x9DC168", Offset = "0x9DC168", VA = "0x9DC168")]
	public void panelDidTap()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x9DC1BC", Offset = "0x9DC1BC", VA = "0x9DC1BC")]
	public FacebookErrorPanel()
	{
	}
}
[Token(Token = "0x20001B0")]
public class GizmoLine : MonoBehaviour
{
	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showsGizmo;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform destination;

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x9E69E8", Offset = "0x9E69E8", VA = "0x9E69E8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x9E6AF0", Offset = "0x9E6AF0", VA = "0x9E6AF0")]
	public GizmoLine()
	{
	}
}
[Token(Token = "0x20001B1")]
public sealed class GlobalSimpleSpinner : SingletonMono<GlobalSimpleSpinner>
{
	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomAxis;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool randomSpeed;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool randomStart;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool spaceSelf;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationValue;

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x9E7854", Offset = "0x9E7854", VA = "0x9E7854")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x9E78AC", Offset = "0x9E78AC", VA = "0x9E78AC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x9E7974", Offset = "0x9E7974", VA = "0x9E7974")]
	public float GetCurrentRotation()
	{
		return default(float);
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x9E797C", Offset = "0x9E797C", VA = "0x9E797C")]
	public GlobalSimpleSpinner()
	{
	}
}
[Token(Token = "0x20001B2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CC68C", Offset = "0x7CC68C")]
public class UICornersGradient : BaseMeshEffect
{
	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color m_topLeftColor;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color m_topRightColor;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color m_bottomRightColor;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color m_bottomLeftColor;

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xB3FBDC", Offset = "0xB3FBDC", VA = "0xB3FBDC", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xB400C4", Offset = "0xB400C4", VA = "0xB400C4")]
	public UICornersGradient()
	{
	}
}
[Token(Token = "0x20001B3")]
public static class UIGradientUtils
{
	[Token(Token = "0x2000363")]
	public struct Matrix2x3
	{
		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m10;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m11;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m12;

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x86DCC8", Offset = "0x86DCC8", VA = "0x86DCC8")]
		public Matrix2x3(float m00, float m01, float m02, float m10, float m11, float m12)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xB3FF90", Offset = "0xB3FF90", VA = "0xB3FF90")]
		public static Vector2 operator *(Matrix2x3 m, Vector2 v)
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2[] ms_verticesPositions;

	[Token(Token = "0x17000070")]
	public static Vector2[] VerticePositions
	{
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xB40138", Offset = "0xB40138", VA = "0xB40138")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xB3FED0", Offset = "0xB3FED0", VA = "0xB3FED0")]
	public static Matrix2x3 LocalPositionMatrix(Rect rect, Vector2 dir)
	{
		return default(Matrix2x3);
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xB401A0", Offset = "0xB401A0", VA = "0xB401A0")]
	public static Vector2 RotationDir(float angle)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xB40244", Offset = "0xB40244", VA = "0xB40244")]
	public static Vector2 CompensateAspectRatio(Rect rect, Vector2 dir)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xB402A8", Offset = "0xB402A8", VA = "0xB402A8")]
	public static float InverseLerp(float a, float b, float v)
	{
		return default(float);
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xB3FFE8", Offset = "0xB3FFE8", VA = "0xB3FFE8")]
	public static Color Bilerp(Color a1, Color a2, Color b1, Color b2, Vector2 t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xB402C8", Offset = "0xB402C8", VA = "0xB402C8")]
	public static void Lerp(UIVertex a, UIVertex b, float t, ref UIVertex c)
	{
	}
}
[Token(Token = "0x20001B4")]
public class HealthBar : MonoBehaviour
{
	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image fill;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D216C", Offset = "0x7D216C")]
	public Image bossIcon;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite fullhealthIcon;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite stageTwoIcon;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite stageThreeIcon;

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x9E666C", Offset = "0x9E666C", VA = "0x9E666C")]
	public void updateHealth(float percent)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x9EC0A4", Offset = "0x9EC0A4", VA = "0x9EC0A4")]
	public HealthBar()
	{
	}
}
[Token(Token = "0x20001B5")]
public sealed class HideOnLandscape : MonoBehaviour
{
	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x9ECC2C", Offset = "0x9ECC2C", VA = "0x9ECC2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x9ECD6C", Offset = "0x9ECD6C", VA = "0x9ECD6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x9ECD0C", Offset = "0x9ECD0C", VA = "0x9ECD0C")]
	private void UpdateDisplay()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x9ECE04", Offset = "0x9ECE04", VA = "0x9ECE04")]
	public HideOnLandscape()
	{
	}
}
[Token(Token = "0x20001B6")]
public sealed class HideOnPlatform : MonoBehaviour
{
	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<RuntimePlatform> PlatformsToHideOn;

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x9ECE0C", Offset = "0x9ECE0C", VA = "0x9ECE0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x9ECEA0", Offset = "0x9ECEA0", VA = "0x9ECEA0")]
	public HideOnPlatform()
	{
	}
}
[Token(Token = "0x20001B7")]
public sealed class HideOnPortrait : MonoBehaviour
{
	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x9ECEA8", Offset = "0x9ECEA8", VA = "0x9ECEA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x9ECFE8", Offset = "0x9ECFE8", VA = "0x9ECFE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x9ECF88", Offset = "0x9ECF88", VA = "0x9ECF88")]
	private void UpdateDisplay()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x9ED080", Offset = "0x9ED080", VA = "0x9ED080")]
	public HideOnPortrait()
	{
	}
}
[Token(Token = "0x20001B8")]
public class Invisiparent : MonoBehaviour
{
	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool drawsArrow;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float size;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool showsGizmo;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool showsGizmoInGame;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color color;

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x9EDBD4", Offset = "0x9EDBD4", VA = "0x9EDBD4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x9EDEE8", Offset = "0x9EDEE8", VA = "0x9EDEE8")]
	public Invisiparent()
	{
	}
}
[Token(Token = "0x20001B9")]
public sealed class MakeUIInvisibleToEvents : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xA64ED8", Offset = "0xA64ED8", VA = "0xA64ED8", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xA64EE0", Offset = "0xA64EE0", VA = "0xA64EE0")]
	public MakeUIInvisibleToEvents()
	{
	}
}
[Token(Token = "0x20001BA")]
public class MissionDescriptionLine : MonoBehaviour
{
	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text missionDescription;

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xA6D5A0", Offset = "0xA6D5A0", VA = "0xA6D5A0")]
	public void update(string content, bool isLargeSet = false)
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xA6D5F0", Offset = "0xA6D5F0", VA = "0xA6D5F0")]
	public MissionDescriptionLine()
	{
	}
}
[Token(Token = "0x20001BB")]
public class MissionDisplay : MonoBehaviour
{
	[Token(Token = "0x2000364")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE210", Offset = "0x7CE210")]
	private sealed class <cycleDescriptions>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionDisplay <>4__this;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameMode gameMode;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<MissionDescription> localisedTaskDescriptions;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x17000194")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018D2")]
			[Address(RVA = "0xA6E040", Offset = "0xA6E040", VA = "0xA6E040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0xA6E0A8", Offset = "0xA6E0A8", VA = "0xA6E0A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xA6DF2C", Offset = "0xA6DF2C", VA = "0xA6DF2C")]
		[DebuggerHidden]
		public <cycleDescriptions>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xA6DF60", Offset = "0xA6DF60", VA = "0xA6DF60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xA6DF64", Offset = "0xA6DF64", VA = "0xA6DF64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xA6E048", Offset = "0xA6E048", VA = "0xA6E048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isTutorialHeaderDisplay;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text missionHeader;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text missionMode;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image missionReward;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject missionDisplayParent;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MissionDescriptionLine descriptionLineTemplate;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TypedObjectPool<MissionDescriptionLine> descriptionLines;

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xA6D5F8", Offset = "0xA6D5F8", VA = "0xA6D5F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xA6D750", Offset = "0xA6D750", VA = "0xA6D750")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xA6D7E8", Offset = "0xA6D7E8", VA = "0xA6D7E8")]
	public void updateDisplay()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xA6D8C8", Offset = "0xA6D8C8", VA = "0xA6D8C8")]
	public void updateForMission(MissionConfig theMission)
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xA6DE8C", Offset = "0xA6DE8C", VA = "0xA6DE8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D812C", Offset = "0x7D812C")]
	private IEnumerator cycleDescriptions(GameMode gameMode, List<MissionDescription> localisedTaskDescriptions)
	{
		return null;
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xA6DBCC", Offset = "0xA6DBCC", VA = "0xA6DBCC")]
	private void updateDescriptionDisplay(GameMode gameMode, List<MissionDescription> localisedTaskDescriptions)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xA6DF58", Offset = "0xA6DF58", VA = "0xA6DF58")]
	public MissionDisplay()
	{
	}
}
[Token(Token = "0x20001BC")]
public sealed class ObjectSpacer : MonoBehaviour
{
	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float verticalSpace;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float horizontalSpace;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float depthSpace;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 lastItemPosition;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastVertSpace;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lastHorizSpace;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastDepthSpace;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool offsetFirstItem;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool centerItems;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool destroyOnAwake;

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xAF6E20", Offset = "0xAF6E20", VA = "0xAF6E20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xAF6E9C", Offset = "0xAF6E9C", VA = "0xAF6E9C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xAF74C8", Offset = "0xAF74C8", VA = "0xAF74C8")]
	public void clearObjects()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xAF78FC", Offset = "0xAF78FC", VA = "0xAF78FC")]
	public void placeObject(GameObject newObject)
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xAF6F10", Offset = "0xAF6F10", VA = "0xAF6F10")]
	public void spaceObjects()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xAF7A8C", Offset = "0xAF7A8C", VA = "0xAF7A8C")]
	public ObjectSpacer()
	{
	}
}
[Token(Token = "0x20001BD")]
public enum GridDirection
{
	[Token(Token = "0x4000A88")]
	acrossThenDown,
	[Token(Token = "0x4000A89")]
	downThenAcross
}
[Token(Token = "0x20001BE")]
public sealed class ObjectSpacerGrid : MonoBehaviour
{
	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GridDirection placement;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool swapYandZ;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool center;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool placeOnGizmos;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int columns;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float verticalSpace;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float horizontalSpace;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lastVertSpace;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lastHorizSpace;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int lastColumns;

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xAF7A94", Offset = "0xAF7A94", VA = "0xAF7A94")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xAF7E7C", Offset = "0xAF7E7C", VA = "0xAF7E7C")]
	public void clearObjects()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xAF82B0", Offset = "0xAF82B0", VA = "0xAF82B0")]
	public void placeObject(GameObject newObject)
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xAF7B10", Offset = "0xAF7B10", VA = "0xAF7B10")]
	public void spaceObjects()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xAF8308", Offset = "0xAF8308", VA = "0xAF8308")]
	public ObjectSpacerGrid()
	{
	}
}
[Token(Token = "0x20001BF")]
public sealed class OffsetScreenSafe : MonoBehaviour
{
	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform myRect;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float screenPercentage;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float scale;

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xB02524", Offset = "0xB02524", VA = "0xB02524")]
	public OffsetScreenSafe()
	{
	}
}
[Token(Token = "0x20001C0")]
public sealed class CloseButton : SingletonMono<CloseButton>
{
	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject closeButton;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pauseButton;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject backButton;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action closeButtonHandler;

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x9F72AC", Offset = "0x9F72AC", VA = "0x9F72AC")]
	public static void shiftPositionInHierarchy()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x9F7564", Offset = "0x9F7564", VA = "0x9F7564")]
	public static bool canHandleBackButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x9F77C8", Offset = "0x9F77C8", VA = "0x9F77C8")]
	public static void androidAppPause()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x9F79C8", Offset = "0x9F79C8", VA = "0x9F79C8")]
	public static bool canHandlePauseButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x9F7B40", Offset = "0x9F7B40", VA = "0x9F7B40")]
	public static void show(bool visible)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x9F7D88", Offset = "0x9F7D88", VA = "0x9F7D88")]
	public GameObject backButtonCopy(Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x9F7EBC", Offset = "0x9F7EBC", VA = "0x9F7EBC")]
	public GameObject closeButtonCopy(Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x9F7950", Offset = "0x9F7950", VA = "0x9F7950")]
	public void pauseWasPressed()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x9F76DC", Offset = "0x9F76DC", VA = "0x9F76DC")]
	public void closeButtonWasPressed()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x9F7FF0", Offset = "0x9F7FF0", VA = "0x9F7FF0")]
	public void goBackWasPressed()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x9F7FF8", Offset = "0x9F7FF8", VA = "0x9F7FF8")]
	public void goBackNoAd()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x9F8000", Offset = "0x9F8000", VA = "0x9F8000")]
	public CloseButton()
	{
	}
}
[Token(Token = "0x20001C1")]
public sealed class MenuController : SingletonMono<MenuController>
{
	[Serializable]
	[Token(Token = "0x2000365")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE220", Offset = "0x7CE220")]
	private sealed class <>c
	{
		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Transform> <>9__27_0;

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xA66E24", Offset = "0xA66E24", VA = "0xA66E24")]
		public <>c()
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xA66E2C", Offset = "0xA66E2C", VA = "0xA66E2C")]
		internal int <sortPanels>b__27_0(Transform x, Transform y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000366")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE230", Offset = "0x7CE230")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string uiName;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MenuController <>4__this;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object context;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xA65CA4", Offset = "0xA65CA4", VA = "0xA65CA4")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xA66E80", Offset = "0xA66E80", VA = "0xA66E80")]
		internal void <moveInUI>b__0(PanelMover thePanel)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xA67188", Offset = "0xA67188", VA = "0xA67188")]
		internal void <moveInUI>b__1()
		{
		}
	}

	[Token(Token = "0x2000367")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE240", Offset = "0x7CE240")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string uiName;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MenuController <>4__this;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object context;

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xA65DAC", Offset = "0xA65DAC", VA = "0xA65DAC")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xA671F8", Offset = "0xA671F8", VA = "0xA671F8")]
		internal void <moveInUINoStack>b__0(PanelMover thePanel)
		{
		}
	}

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PanelHelper panelHelper;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string mainUIGroup;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string errorPanelKey;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform panelHolder;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform panelHolderOver;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool updateEventCameraFromOverseer;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public float lastTimePanelChanged;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Stack<PanelMover> panelStack;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RectTransform rootRect;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool hasGottenCamera;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Camera uiCamera;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D21B4", Offset = "0x7D21B4")]
	public List<string> panelsToPreload;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D21EC", Offset = "0x7D21EC")]
	public int hitsForActivation;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float delayBeforeHitCountReset;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float repeatDelay;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2224", Offset = "0x7D2224")]
	public float hoverScaleChange;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float hoverDuration;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float hoverResetSpeed;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D225C", Offset = "0x7D225C")]
	public Vector3 sharedPickupOffset;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform behindPlayLowPopupPositioner;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform behindPlayMiddlePopupPositioner;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform behindPlayHighPopupPositioner;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform inFrontOfPlayPopupPositioner;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2294", Offset = "0x7D2294")]
	public Transform levelCountdownPositioner;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D22CC", Offset = "0x7D22CC")]
	public Transform moveTargetPositioner;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Func<bool> isMenuInteractionBlockedFunction;

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xA64FB8", Offset = "0xA64FB8", VA = "0xA64FB8")]
	public static void sortPanels(Transform parent)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xA65344", Offset = "0xA65344", VA = "0xA65344")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xA65490", Offset = "0xA65490", VA = "0xA65490")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xA654C4", Offset = "0xA654C4", VA = "0xA654C4")]
	private void preloadPanels()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xA6562C", Offset = "0xA6562C", VA = "0xA6562C")]
	public static void clearToMain()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xA659F8", Offset = "0xA659F8", VA = "0xA659F8")]
	public void showPanel(string panelName, [Optional] object context)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xA65A04", Offset = "0xA65A04", VA = "0xA65A04")]
	public void hidePanel(string panelName)
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xA65A24", Offset = "0xA65A24", VA = "0xA65A24")]
	public static bool panelIsShowing(string panelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xA6580C", Offset = "0xA6580C", VA = "0xA6580C")]
	public static string mainGroup()
	{
		return null;
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xA65AAC", Offset = "0xA65AAC", VA = "0xA65AAC")]
	public static string switchMainGroup(string newGroup)
	{
		return null;
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xA65B34", Offset = "0xA65B34", VA = "0xA65B34")]
	public PanelMover topPanel()
	{
		return null;
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xA65BA4", Offset = "0xA65BA4", VA = "0xA65BA4")]
	private void moveInUI(string uiName, [Optional] object context)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xA65CAC", Offset = "0xA65CAC", VA = "0xA65CAC")]
	public void moveInUINoStack(string uiName, [Optional] object context)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xA65DB4", Offset = "0xA65DB4", VA = "0xA65DB4")]
	private void _popUI()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xA65884", Offset = "0xA65884", VA = "0xA65884")]
	private void moveOutUI(PanelMover thePanel, [Optional] Action completion)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xA65EA8", Offset = "0xA65EA8", VA = "0xA65EA8")]
	private void moveOutUI(string uiName)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xA65EC8", Offset = "0xA65EC8", VA = "0xA65EC8")]
	private void _hideUI(PanelMover thePanel)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xA65F70", Offset = "0xA65F70", VA = "0xA65F70")]
	private void removeItemFromStack(PanelMover panelToRemove)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xA660C4", Offset = "0xA660C4", VA = "0xA660C4")]
	public void showBossCallout(string localisedBossName, float duration)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xA66278", Offset = "0xA66278", VA = "0xA66278")]
	public void clearMenuInteractionBlockedFunction()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xA66284", Offset = "0xA66284", VA = "0xA66284")]
	public void setMenuInteractionBlockedFunction(Func<bool> isMenuInteractionBlockedFunction)
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xA6628C", Offset = "0xA6628C", VA = "0xA6628C")]
	public bool isMenuInteractionAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xA6633C", Offset = "0xA6633C", VA = "0xA6633C")]
	public static void reshowUI(PanelMover thePanel)
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xA65960", Offset = "0xA65960", VA = "0xA65960")]
	public static void showUI(string uiName, [Optional] object context)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xA663D4", Offset = "0xA663D4", VA = "0xA663D4")]
	public static void popUI()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xA66448", Offset = "0xA66448", VA = "0xA66448")]
	public static void hideUI(PanelMover thePanel)
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xA664C4", Offset = "0xA664C4", VA = "0xA664C4")]
	public static void hideUI(string uiName)
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xA66568", Offset = "0xA66568", VA = "0xA66568")]
	public PanelMover panelWithName(string theName)
	{
		return null;
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xA66584", Offset = "0xA66584", VA = "0xA66584")]
	public List<PanelMover> currentPanels()
	{
		return null;
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xA66614", Offset = "0xA66614", VA = "0xA66614")]
	public RectTransform rootCanvasRect()
	{
		return null;
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xA666C0", Offset = "0xA666C0", VA = "0xA666C0")]
	public Camera getUICamera()
	{
		return null;
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xA66750", Offset = "0xA66750", VA = "0xA66750")]
	public bool panelIsMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xA667CC", Offset = "0xA667CC", VA = "0xA667CC")]
	public bool isPilotSwitchingAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xA66894", Offset = "0xA66894", VA = "0xA66894")]
	public Vector3 uiPositionForViewportPosition(Vector3 posViewPort, [Optional] Camera theCam)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xA668E4", Offset = "0xA668E4", VA = "0xA668E4")]
	public Vector3 getCheckpointUnlockPopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xA6691C", Offset = "0xA6691C", VA = "0xA6691C")]
	public Vector3 getBehindPlayLowPopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xA66900", Offset = "0xA66900", VA = "0xA66900")]
	public Vector3 getBehindPlayMiddlePopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xA6625C", Offset = "0xA6625C", VA = "0xA6625C")]
	public Vector3 getBehindPlayHighPopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xA66938", Offset = "0xA66938", VA = "0xA66938")]
	public Vector3 getGameStartPopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xA66954", Offset = "0xA66954", VA = "0xA66954")]
	public Vector3 getMissionCompletePopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xA66970", Offset = "0xA66970", VA = "0xA66970")]
	public Vector3 getUpgradePopupPosition(MightyVRControlSide side)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xA6697C", Offset = "0xA6697C", VA = "0xA6697C")]
	private Vector3 getLeftHandUpgradePopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xA66A08", Offset = "0xA66A08", VA = "0xA66A08")]
	private Vector3 getRightHandUpgradePopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xA66B50", Offset = "0xA66B50", VA = "0xA66B50")]
	public Vector3 getLevelCountdownPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xA66B6C", Offset = "0xA66B6C", VA = "0xA66B6C")]
	private Vector3 getInFrontPopupPosition(Vector3 elementOffset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xA66A90", Offset = "0xA66A90", VA = "0xA66A90")]
	private Vector3 getBackMiddlePopupPosition(Vector3 elementOffset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xA66C2C", Offset = "0xA66C2C", VA = "0xA66C2C")]
	public Vector3 getMoveTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xA66C48", Offset = "0xA66C48", VA = "0xA66C48")]
	public MenuController()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xA66D4C", Offset = "0xA66D4C", VA = "0xA66D4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8190", Offset = "0x7D8190")]
	private void <_popUI>b__40_0()
	{
	}
}
[Token(Token = "0x20001C2")]
public sealed class PanelHelper : MonoBehaviour
{
	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MappedList<PanelMover> myPanels;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MappedList<PanelResourceStub> myStubs;

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xB0252C", Offset = "0xB0252C", VA = "0xB0252C")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xB02730", Offset = "0xB02730", VA = "0xB02730")]
	public void loadPanelsFrom(PanelHelper otherHelper)
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xB028C0", Offset = "0xB028C0", VA = "0xB028C0")]
	public List<string> allPanelKeys()
	{
		return null;
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xB0265C", Offset = "0xB0265C", VA = "0xB0265C")]
	public void findStubs()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xB02550", Offset = "0xB02550", VA = "0xB02550")]
	public void findPanels()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xB02AB8", Offset = "0xB02AB8", VA = "0xB02AB8")]
	public PanelMover getLoadedPanel(string panelName)
	{
		return null;
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xB02B5C", Offset = "0xB02B5C", VA = "0xB02B5C")]
	public void getOrLoadPanel(string panelName, Action<PanelMover> callback)
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xB02CE4", Offset = "0xB02CE4", VA = "0xB02CE4")]
	public bool loadFromKey(string panelKey, Action<PanelMover> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xB03088", Offset = "0xB03088", VA = "0xB03088")]
	public void showPanelWithContext(PanelMover thePanel, object context)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xB034FC", Offset = "0xB034FC", VA = "0xB034FC")]
	public void hideUI(string uiName, [Optional] Action completion)
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xB03904", Offset = "0xB03904", VA = "0xB03904")]
	public bool panelIsShowing(string panelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xB039D8", Offset = "0xB039D8", VA = "0xB039D8")]
	public List<PanelMover> allPanels(Transform root)
	{
		return null;
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xB03B54", Offset = "0xB03B54", VA = "0xB03B54")]
	public void parkAll()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xB03C18", Offset = "0xB03C18", VA = "0xB03C18")]
	public void showAll()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xB03E6C", Offset = "0xB03E6C", VA = "0xB03E6C")]
	public void sortPanels()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xB03E70", Offset = "0xB03E70", VA = "0xB03E70")]
	public PanelHelper()
	{
	}
}
[Token(Token = "0x20001C3")]
public enum PanelTransitionType
{
	[Token(Token = "0x4000AB9")]
	none,
	[Token(Token = "0x4000ABA")]
	fromTop,
	[Token(Token = "0x4000ABB")]
	fromBottom,
	[Token(Token = "0x4000ABC")]
	fromLeft,
	[Token(Token = "0x4000ABD")]
	fromRight,
	[Token(Token = "0x4000ABE")]
	fadeIn
}
[Token(Token = "0x20001C4")]
public enum PanelMoverState
{
	[Token(Token = "0x4000AC0")]
	offscreen,
	[Token(Token = "0x4000AC1")]
	onscreen,
	[Token(Token = "0x4000AC2")]
	movingOffscreen,
	[Token(Token = "0x4000AC3")]
	movingOnscreen,
	[Token(Token = "0x4000AC4")]
	unknown
}
[Token(Token = "0x20001C5")]
public sealed class PanelMover : MonoBehaviour
{
	[Token(Token = "0x2000368")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE250", Offset = "0x7CE250")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PanelMover <>4__this;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action completion;

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xB04268", Offset = "0xB04268", VA = "0xB04268")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xB049C0", Offset = "0xB049C0", VA = "0xB049C0")]
		internal void <movePanelOut>b__0()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xB049E0", Offset = "0xB049E0", VA = "0xB049E0")]
		internal void <movePanelOut>b__1()
		{
		}
	}

	[Token(Token = "0x2000369")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE260", Offset = "0x7CE260")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PanelMover <>4__this;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action completion;

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xB045F4", Offset = "0xB045F4", VA = "0xB045F4")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xB04A00", Offset = "0xB04A00", VA = "0xB04A00")]
		internal void <movePanelInAfterDelay>b__0()
		{
		}
	}

	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE270", Offset = "0x7CE270")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PanelMover <>4__this;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action completion;

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xB045FC", Offset = "0xB045FC", VA = "0xB045FC")]
		public <>c__DisplayClass31_0()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xB04A20", Offset = "0xB04A20", VA = "0xB04A20")]
		internal void <movePanelIn>b__0()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xB04AAC", Offset = "0xB04AAC", VA = "0xB04AAC")]
		internal void <movePanelIn>b__1()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xB04ACC", Offset = "0xB04ACC", VA = "0xB04ACC")]
		internal void <movePanelIn>b__2()
		{
		}
	}

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool panelIsModal;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public object panelContext;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PanelMoverState panelState;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SimpleAnimator panelMover;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator panelAnimator;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PanelMoverTemplate moverTemplate;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string presentationTemplate;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2304", Offset = "0x7D2304")]
	public bool isPilotSwitchingAllowed;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float moveInSoundDelay;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string moveInSoundEvent;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool panelHasBooted;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RectTransform rectTransform;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RectTransform rootCanvas;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string myPanelKey;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool animationClipHasCompleted;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Action animationClipCompletion;

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xB029C0", Offset = "0xB029C0", VA = "0xB029C0")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xB039B8", Offset = "0xB039B8", VA = "0xB039B8")]
	public bool isShowing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xB0286C", Offset = "0xB0286C", VA = "0xB0286C")]
	public string panelKey()
	{
		return null;
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xB03F28", Offset = "0xB03F28", VA = "0xB03F28")]
	public bool panelDidBoot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xB03F30", Offset = "0xB03F30", VA = "0xB03F30")]
	public void findRootCanvas()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xB04068", Offset = "0xB04068", VA = "0xB04068")]
	private void setVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xB03C0C", Offset = "0xB03C0C", VA = "0xB03C0C")]
	public void forcePark()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xB041E0", Offset = "0xB041E0", VA = "0xB041E0")]
	public void reShow()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xB0409C", Offset = "0xB0409C", VA = "0xB0409C")]
	public void park()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xB03CC0", Offset = "0xB03CC0", VA = "0xB03CC0")]
	public void unpark()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xB04248", Offset = "0xB04248", VA = "0xB04248")]
	public bool panelIsMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xB035B4", Offset = "0xB035B4", VA = "0xB035B4")]
	public void movePanelOut([Optional] Action completion)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xB04448", Offset = "0xB04448", VA = "0xB04448")]
	private void panelDidCompleteMoveOut(Action completion)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xB044EC", Offset = "0xB044EC", VA = "0xB044EC")]
	public void movePanelInAfterDelay(float delay, Action completion)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xB030C4", Offset = "0xB030C4", VA = "0xB030C4")]
	public void movePanelIn([Optional] Action completion)
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xB04770", Offset = "0xB04770", VA = "0xB04770")]
	private void panelDidCompleteMoveIn(Action completion)
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xB0480C", Offset = "0xB0480C", VA = "0xB0480C")]
	public void panelBackgroundWasTapped()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xB048F8", Offset = "0xB048F8", VA = "0xB048F8")]
	public void animationMoveInComplete()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xB04928", Offset = "0xB04928", VA = "0xB04928")]
	public void animationMoveOuComplete()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xB04958", Offset = "0xB04958", VA = "0xB04958")]
	public PanelMover()
	{
	}
}
[Token(Token = "0x20001C6")]
public class PanelMoverTemplate : MonoBehaviour
{
	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE280", Offset = "0x7CE280")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PanelMover thePanel;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action completion;

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xB04B58", Offset = "0xB04B58", VA = "0xB04B58")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xB04B68", Offset = "0xB04B68", VA = "0xB04B68")]
		internal void <movePanelOut>b__0()
		{
		}
	}

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimpleAnimator anim;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SimpleAnimationMoveToPosition positioner;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject stub;

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xB04AEC", Offset = "0xB04AEC", VA = "0xB04AEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xB04604", Offset = "0xB04604", VA = "0xB04604")]
	public static void movePanelIn(PanelMover thePanel, Action completion)
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xB04270", Offset = "0xB04270", VA = "0xB04270")]
	public static void movePanelOut(PanelMover thePanel, Action completion)
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xB04B60", Offset = "0xB04B60", VA = "0xB04B60")]
	public PanelMoverTemplate()
	{
	}
}
[Token(Token = "0x20001C7")]
public class PanelResourceStub : MonoBehaviour
{
	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string panelKey;

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xB02EC8", Offset = "0xB02EC8", VA = "0xB02EC8")]
	public PanelMover createPanel([Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xB04C90", Offset = "0xB04C90", VA = "0xB04C90")]
	public PanelMover createPanelEditor([Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xB04C98", Offset = "0xB04C98", VA = "0xB04C98")]
	public static PanelResourceStub createNewStub(string panelKey)
	{
		return null;
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xB04CA0", Offset = "0xB04CA0", VA = "0xB04CA0")]
	public PanelResourceStub()
	{
	}
}
[Token(Token = "0x20001C8")]
public sealed class PanelUIButtonTwiddler : MonoBehaviour
{
	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showClose;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool showGameCamera;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool showTopNav;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool showBottomNav;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool cameraInGamePosition;

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xB04D18", Offset = "0xB04D18", VA = "0xB04D18")]
	public void panelWillReShow()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xB04D1C", Offset = "0xB04D1C", VA = "0xB04D1C")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xB04D20", Offset = "0xB04D20", VA = "0xB04D20")]
	public static void hideEverything()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xB04D24", Offset = "0xB04D24", VA = "0xB04D24")]
	public PanelUIButtonTwiddler()
	{
	}
}
[Token(Token = "0x20001C9")]
public sealed class ParticlePanel : MonoBehaviour
{
	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage renderImage;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string particleID;

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xB0707C", Offset = "0xB0707C", VA = "0xB0707C")]
	public void playEvent(string eventKey)
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xB07174", Offset = "0xB07174", VA = "0xB07174")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xB07248", Offset = "0xB07248", VA = "0xB07248")]
	public ParticlePanel()
	{
	}
}
[Token(Token = "0x20001CA")]
public class PlayerHealthCount : MonoBehaviour
{
	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject contentParent;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image[] playerHealthIcons;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite normalSprite;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite flashSprite;

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xA91578", Offset = "0xA91578", VA = "0xA91578")]
	public void setActiveState(bool isActive)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xA915FC", Offset = "0xA915FC", VA = "0xA915FC")]
	public void updateHealthLevel(int healthLevel)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xA96214", Offset = "0xA96214", VA = "0xA96214")]
	public void updateHealthFlash(float flashValue)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xA98E98", Offset = "0xA98E98", VA = "0xA98E98")]
	public PlayerHealthCount()
	{
	}
}
[Token(Token = "0x20001CB")]
public class PlayerScoreMultiplier : MonoBehaviour
{
	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D233C", Offset = "0x7D233C")]
	public GameObject multiplierParent;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text multiplierLabel;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image multiplierFill;

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xA9173C", Offset = "0xA9173C", VA = "0xA9173C")]
	public void tryActivate(GameMode gameMode)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xA918DC", Offset = "0xA918DC", VA = "0xA918DC")]
	public void deactivate()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xA9AC3C", Offset = "0xA9AC3C", VA = "0xA9AC3C")]
	private void updateMultiplierCount(object note)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xA9AE50", Offset = "0xA9AE50", VA = "0xA9AE50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xA9AFBC", Offset = "0xA9AFBC", VA = "0xA9AFBC")]
	public PlayerScoreMultiplier()
	{
	}
}
[Token(Token = "0x20001CC")]
public sealed class PowerSavingButton : MonoBehaviour
{
	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject powerSavingIsOnIcon;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject powerSavingIsOffIcon;

	[Token(Token = "0x4000AEA")]
	private const string powerSavingKey = "ps";

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xAA3C30", Offset = "0xAA3C30", VA = "0xAA3C30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xAA3CA4", Offset = "0xAA3CA4", VA = "0xAA3CA4")]
	public void buttonWasPressed()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xAA3C34", Offset = "0xAA3C34", VA = "0xAA3C34")]
	private void updateDisplay()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xAA3D4C", Offset = "0xAA3D4C", VA = "0xAA3D4C")]
	public static bool powerSavingIsOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xAA3CC8", Offset = "0xAA3CC8", VA = "0xAA3CC8")]
	public static void togglePowerSaving()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xAA3DF0", Offset = "0xAA3DF0", VA = "0xAA3DF0")]
	public static void applyPowerSavingSetting()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xAA3E30", Offset = "0xAA3E30", VA = "0xAA3E30")]
	public PowerSavingButton()
	{
	}
}
[Token(Token = "0x20001CD")]
public sealed class PurchaseErrorPanel : MonoBehaviour
{
	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action completion;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool debounce;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xAC1904", Offset = "0xAC1904", VA = "0xAC1904")]
	public static void showErrorPanel([Optional] Action completion)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xAC19A8", Offset = "0xAC19A8", VA = "0xAC19A8")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xAC1A84", Offset = "0xAC1A84", VA = "0xAC1A84")]
	public void panelDidTap()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xAC1AD8", Offset = "0xAC1AD8", VA = "0xAC1AD8")]
	public PurchaseErrorPanel()
	{
	}
}
[Token(Token = "0x20001CE")]
public sealed class RawImageAspect : MonoBehaviour
{
	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float refWdith;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float refHeight;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform myRect;

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xAC2514", Offset = "0xAC2514", VA = "0xAC2514")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xAC2518", Offset = "0xAC2518", VA = "0xAC2518")]
	public void readjust()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xAC266C", Offset = "0xAC266C", VA = "0xAC266C")]
	public RawImageAspect()
	{
	}
}
[Token(Token = "0x20001CF")]
public sealed class RawImageUVAnimator : MonoBehaviour
{
	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tiles;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float xSpeed;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ySpeed;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RawImage theImage;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rect uvOffset;

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xAC2674", Offset = "0xAC2674", VA = "0xAC2674")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xAC2794", Offset = "0xAC2794", VA = "0xAC2794")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xAC2910", Offset = "0xAC2910", VA = "0xAC2910")]
	public RawImageUVAnimator()
	{
	}
}
[Token(Token = "0x20001D0")]
public sealed class RestoreCompletePanel : MonoBehaviour
{
	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action completion;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool debounce;

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xACAFE4", Offset = "0xACAFE4", VA = "0xACAFE4")]
	public static void showRestoreCompletePanel([Optional] Action completion)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xACB0F8", Offset = "0xACB0F8", VA = "0xACB0F8")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xACB20C", Offset = "0xACB20C", VA = "0xACB20C")]
	public void panelDidTap()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xACB260", Offset = "0xACB260", VA = "0xACB260")]
	public RestoreCompletePanel()
	{
	}
}
[Token(Token = "0x20001D1")]
public sealed class ScreenSafeController : MonoBehaviour
{
	[Token(Token = "0x4000AF7")]
	private const float AmazonTVShrinkPercentage = 1f;

	[Token(Token = "0x4000AF8")]
	private const float GoogleTVShrinkPercentage = 1f;

	[Token(Token = "0x4000AF9")]
	private const float AppleTVShrinkPercentage = 1f;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform myRect;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2374", Offset = "0x7D2374")]
	private float <scale>k__BackingField;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2384", Offset = "0x7D2384")]
	private static bool <editorFakeIphoneX>k__BackingField;

	[Token(Token = "0x17000071")]
	public float scale
	{
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xACC6A0", Offset = "0xACC6A0", VA = "0xACC6A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D81A0", Offset = "0x7D81A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xACC6A8", Offset = "0xACC6A8", VA = "0xACC6A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D81B0", Offset = "0x7D81B0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public static bool editorFakeIphoneX
	{
		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xACC6B0", Offset = "0xACC6B0", VA = "0xACC6B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D81C0", Offset = "0x7D81C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xACC718", Offset = "0xACC718", VA = "0xACC718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D81D0", Offset = "0x7D81D0")]
		set
		{
		}
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xACC788", Offset = "0xACC788", VA = "0xACC788")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xACCA94", Offset = "0xACCA94", VA = "0xACCA94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xACC868", Offset = "0xACC868", VA = "0xACC868")]
	private void UpdateDisplay()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xACCD30", Offset = "0xACCD30", VA = "0xACCD30")]
	public void forceiPhoneX()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xACCE90", Offset = "0xACCE90", VA = "0xACCE90")]
	public void forceiPhoneX(RectTransform theRect, bool invert = false)
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xACCB2C", Offset = "0xACCB2C", VA = "0xACCB2C")]
	public void SetiPhoneXSafeArea(RectTransform theRect, bool invert = false)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xACCF5C", Offset = "0xACCF5C", VA = "0xACCF5C")]
	private void SetRect(RectTransform theRect, float left, float top, float right, float bottom)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xACCCB4", Offset = "0xACCCB4", VA = "0xACCCB4")]
	private void ResetRect(RectTransform theRect)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xACCFE4", Offset = "0xACCFE4", VA = "0xACCFE4")]
	public ScreenSafeController()
	{
	}
}
[Token(Token = "0x20001D2")]
public sealed class ScreenshotSceneController : MonoBehaviour
{
	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE290", Offset = "0x7CE290")]
	private sealed class <shotMachine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string panel;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScreenshotSceneController <>4__this;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0xACD694", Offset = "0xACD694", VA = "0xACD694", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0xACD6FC", Offset = "0xACD6FC", VA = "0xACD6FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xACD2C4", Offset = "0xACD2C4", VA = "0xACD2C4")]
		[DebuggerHidden]
		public <shotMachine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xACD36C", Offset = "0xACD36C", VA = "0xACD36C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xACD370", Offset = "0xACD370", VA = "0xACD370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xACD69C", Offset = "0xACD69C", VA = "0xACD69C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject UIParent;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action<string, string> capture;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> panels;

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xACCFF8", Offset = "0xACCFF8", VA = "0xACCFF8")]
	public void preboot()
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xACD070", Offset = "0xACD070", VA = "0xACD070")]
	public void finishBoot()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xACD090", Offset = "0xACD090", VA = "0xACD090")]
	public void doTheThing(Action<string, string> captureAction)
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xACD22C", Offset = "0xACD22C", VA = "0xACD22C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D81E0", Offset = "0x7D81E0")]
	private IEnumerator shotMachine(string panel)
	{
		return null;
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xACD1A4", Offset = "0xACD1A4", VA = "0xACD1A4")]
	private void loadShot()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xACD2F0", Offset = "0xACD2F0", VA = "0xACD2F0")]
	public ScreenshotSceneController()
	{
	}
}
[Token(Token = "0x20001D3")]
public sealed class ShakeButton : MonoBehaviour
{
	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject shakeIsOn;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject shakeIsOff;

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xAD09D8", Offset = "0xAD09D8", VA = "0xAD09D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xAD0A50", Offset = "0xAD0A50", VA = "0xAD0A50")]
	public void buttonWasPressed()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xAD09DC", Offset = "0xAD09DC", VA = "0xAD09DC")]
	private void updateDisplay()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xAD0A78", Offset = "0xAD0A78", VA = "0xAD0A78")]
	public ShakeButton()
	{
	}
}
[Token(Token = "0x20001D4")]
public class ShopButton : MonoBehaviour
{
	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text cost;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string itemID;

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xB6408C", Offset = "0xB6408C", VA = "0xB6408C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xB64098", Offset = "0xB64098", VA = "0xB64098", Slot = "4")]
	public virtual void resetDisplay()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xB640F8", Offset = "0xB640F8", VA = "0xB640F8", Slot = "5")]
	public virtual void buyButtonWasPressed()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xB641D8", Offset = "0xB641D8", VA = "0xB641D8", Slot = "6")]
	public virtual void awardPurchasedItem()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xB64248", Offset = "0xB64248", VA = "0xB64248")]
	public void completeTransaction()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xB642A0", Offset = "0xB642A0", VA = "0xB642A0")]
	public void purchaseBad(string context)
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xB642A4", Offset = "0xB642A4", VA = "0xB642A4")]
	public void purchaseGood(string context)
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xB642B0", Offset = "0xB642B0", VA = "0xB642B0")]
	public ShopButton()
	{
	}
}
[Token(Token = "0x20001D5")]
public sealed class SimpleMover : MonoBehaviour
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve xMovement;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve yMovement;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve zMovement;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lerpValue;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform myTransform;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 position;

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xB6BD78", Offset = "0xB6BD78", VA = "0xB6BD78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xB6BE0C", Offset = "0xB6BE0C", VA = "0xB6BE0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xB6BEB0", Offset = "0xB6BEB0", VA = "0xB6BEB0")]
	public SimpleMover()
	{
	}
}
[Token(Token = "0x20001D6")]
public sealed class SimpleRotator : MonoBehaviour
{
	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve zRotation;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lerpValue;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool addToSetRotation;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 oilers;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float baseRot;

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xB6BEC0", Offset = "0xB6BEC0", VA = "0xB6BEC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xB6BF4C", Offset = "0xB6BF4C", VA = "0xB6BF4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xB6C030", Offset = "0xB6C030", VA = "0xB6C030")]
	public SimpleRotator()
	{
	}
}
[Token(Token = "0x20001D7")]
public sealed class SimpleSpinner : MonoBehaviour
{
	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomAxis;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool randomSpeed;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool randomStart;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool spaceSelf;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool active;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SVGRenderer mySvgRenderer;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer theMeshRenderer;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator theAnimator;

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xB6CA80", Offset = "0xB6CA80", VA = "0xB6CA80")]
	public SVGRenderer svgRenderer()
	{
		return null;
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xB6CB80", Offset = "0xB6CB80", VA = "0xB6CB80")]
	public MeshRenderer meshRenderer()
	{
		return null;
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xB6CC80", Offset = "0xB6CC80", VA = "0xB6CC80")]
	public Animator getAnimator()
	{
		return null;
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xB6CD80", Offset = "0xB6CD80", VA = "0xB6CD80")]
	public void activate(bool activate)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xB6CD8C", Offset = "0xB6CD8C", VA = "0xB6CD8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xB6CE78", Offset = "0xB6CE78", VA = "0xB6CE78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xB6CFC8", Offset = "0xB6CFC8", VA = "0xB6CFC8")]
	public SimpleSpinner()
	{
	}
}
[Token(Token = "0x20001D8")]
public sealed class SimpleSpinnerDirectionBased : MonoBehaviour
{
	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomAxis;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool uniformRotation;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool randomSpeed;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool randomStart;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool spaceSelf;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastPosX;

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xB6D058", Offset = "0xB6D058", VA = "0xB6D058")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xB6D144", Offset = "0xB6D144", VA = "0xB6D144")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xB6D358", Offset = "0xB6D358", VA = "0xB6D358")]
	public SimpleSpinnerDirectionBased()
	{
	}
}
[Token(Token = "0x20001D9")]
public sealed class SimpleSpinnerUniform : MonoBehaviour
{
	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomAxis;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool uniformRotation;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool randomSpeed;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool randomStart;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool spaceSelf;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xB6D3E8", Offset = "0xB6D3E8", VA = "0xB6D3E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xB6D4D4", Offset = "0xB6D4D4", VA = "0xB6D4D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xB6D694", Offset = "0xB6D694", VA = "0xB6D694")]
	public SimpleSpinnerUniform()
	{
	}
}
[Token(Token = "0x20001DA")]
public class UIButtonToggle : MonoBehaviour
{
	[Token(Token = "0x4000B2E")]
	private const float ToggleDepth = -0.3f;

	[Token(Token = "0x4000B2F")]
	private const float ToggleScale = 1.1f;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2394", Offset = "0x7D2394")]
	public TMP_Text buttonLabel;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image buttonBackground;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite selectedBackground;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite notSelectedBackground;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lockedIcon;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SimpleShootableButton shootableButton;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D23CC", Offset = "0x7D23CC")]
	public Color backgroundSelected;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color backgroundNotSelected;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color backgroundLocked;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2404", Offset = "0x7D2404")]
	public Color textSelected;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color textNotSelected;

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xB3F894", Offset = "0xB3F894", VA = "0xB3F894")]
	public void updateToggle(bool isInteractable, bool isSelected)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xB3FB50", Offset = "0xB3FB50", VA = "0xB3FB50")]
	private void setLockedVisuals()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xB3FA08", Offset = "0xB3FA08", VA = "0xB3FA08")]
	private void setInteractableSelectedVisuals()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xB3FAAC", Offset = "0xB3FAAC", VA = "0xB3FAAC")]
	private void setInteractableNotSelectedVisuals()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xB3FBD4", Offset = "0xB3FBD4", VA = "0xB3FBD4")]
	public UIButtonToggle()
	{
	}
}
[Token(Token = "0x20001DB")]
[ExecuteInEditMode]
public class UIImageGradient : MonoBehaviour
{
	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image theImage;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform rectTransform;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color gradientCol;

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xB40638", Offset = "0xB40638", VA = "0xB40638")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xB40908", Offset = "0xB40908", VA = "0xB40908")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xB4090C", Offset = "0xB4090C", VA = "0xB4090C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xB4063C", Offset = "0xB4063C", VA = "0xB4063C")]
	private void setGradientShaderParameters()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xB40910", Offset = "0xB40910", VA = "0xB40910")]
	public UIImageGradient()
	{
	}
}
[Token(Token = "0x20001DC")]
public sealed class UVAnimator : MonoBehaviour
{
	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tiles;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float xSpeed;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ySpeed;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 uvOffset;

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xB40AD4", Offset = "0xB40AD4", VA = "0xB40AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xB40AD8", Offset = "0xB40AD8", VA = "0xB40AD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xB40BF4", Offset = "0xB40BF4", VA = "0xB40BF4")]
	public UVAnimator()
	{
	}
}
[Token(Token = "0x20001DD")]
public sealed class VRPlayspace : SingletonMono<VRPlayspace>
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D243C", Offset = "0x7D243C")]
	public BoxCollider volumeBounds;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2474", Offset = "0x7D2474")]
	public bool editorShowDebugLines;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer topLine;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer middleLine;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineRenderer bottomLine;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D24AC", Offset = "0x7D24AC")]
	public float distanceFromPlayer;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float playspaceDepth;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D24E4", Offset = "0x7D24E4")]
	public float angleFromCentreLine;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D251C", Offset = "0x7D251C")]
	public float offsetToTopLevel;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float playerHeightBaseOffset;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float offsetToBottomLevel;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float currentPlayerHeight;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2554", Offset = "0x7D2554")]
	public float middleLineMiniumY;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D258C", Offset = "0x7D258C")]
	public Vector3 testPlayerPos;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float testPlayerHeadHeight;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D25C4", Offset = "0x7D25C4")]
	public float testAngleCoordinate;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float testHeightCoordinate;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float testDepthCoordinate;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Bounds cullingBounds;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3[] currentBoundaryPoints;

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x13C7CE4", Offset = "0x13C7CE4", VA = "0x13C7CE4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x13C7D68", Offset = "0x13C7D68", VA = "0x13C7D68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x13C7E2C", Offset = "0x13C7E2C", VA = "0x13C7E2C")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x13C7E4C", Offset = "0x13C7E4C", VA = "0x13C7E4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x13C83F8", Offset = "0x13C83F8", VA = "0x13C83F8")]
	public bool isInsidePlayspace(Vector3 worldPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x13C7C80", Offset = "0x13C7C80", VA = "0x13C7C80")]
	public Vector3 randomWorldPositionInPlayspace()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x13C8954", Offset = "0x13C8954", VA = "0x13C8954")]
	public Vector3 coordinatePositionToWorldPosition(Vector3 coordinates)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x13C8878", Offset = "0x13C8878", VA = "0x13C8878")]
	public Vector3 coordinatePositionToWorldPosition(float angleCoordinate, float heightCoordinate, float depthCoordinate)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x13C8BD8", Offset = "0x13C8BD8", VA = "0x13C8BD8")]
	public Vector3 worldPositionToCoordinatePosition(Vector3 worldPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x13C8F04", Offset = "0x13C8F04", VA = "0x13C8F04")]
	public Vector3 clampPositionToPlayspaceHeights(Vector3 worldPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x13C8FF8", Offset = "0x13C8FF8", VA = "0x13C8FF8")]
	public Vector3 getPowerupTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x13C9108", Offset = "0x13C9108", VA = "0x13C9108")]
	public bool isInsideCullingVolume(Vector3 worldPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x13C85AC", Offset = "0x13C85AC", VA = "0x13C85AC")]
	private Vector3 getPlayerPoint(float height)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x13C7E40", Offset = "0x13C7E40", VA = "0x13C7E40")]
	public void clearOuterBoundaryCache()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x13C8958", Offset = "0x13C8958", VA = "0x13C8958")]
	private float playspaceHeightFromCoordinate(float heightCoordinate)
	{
		return default(float);
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x13C8EB8", Offset = "0x13C8EB8", VA = "0x13C8EB8")]
	private float currentPlayspaceHeight(float offsetFromMiddle = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x13C8A88", Offset = "0x13C8A88", VA = "0x13C8A88")]
	private Vector3 rotatePoint(Vector3 inputPoint, float height, float degrees)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x13C91DC", Offset = "0x13C91DC", VA = "0x13C91DC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x13C8174", Offset = "0x13C8174", VA = "0x13C8174")]
	private void DrawDebugArcLine(LineRenderer target, float heightOffset, Color lineColor)
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x13C7D78", Offset = "0x13C7D78", VA = "0x13C7D78")]
	private void DisableAllDebugLines()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x13C9378", Offset = "0x13C9378", VA = "0x13C9378")]
	public VRPlayspace()
	{
	}
}
[Token(Token = "0x20001DE")]
public class WorldNameTextLabel : MonoBehaviour
{
	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string worldId;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text worldNameLabel;

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x13D0A2C", Offset = "0x13D0A2C", VA = "0x13D0A2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x13D0A30", Offset = "0x13D0A30", VA = "0x13D0A30")]
	private void updateName()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x13D0B34", Offset = "0x13D0B34", VA = "0x13D0B34")]
	public WorldNameTextLabel()
	{
	}
}
[Token(Token = "0x20001DF")]
public sealed class AdSkippedErrorPanel : MonoBehaviour
{
	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action completion;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool debounce;

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xB72494", Offset = "0xB72494", VA = "0xB72494")]
	public static void showAdSkippedError(Action completion)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xB724E8", Offset = "0xB724E8", VA = "0xB724E8")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xB72568", Offset = "0xB72568", VA = "0xB72568")]
	public void panelDidMoveOut()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xB725A0", Offset = "0xB725A0", VA = "0xB725A0")]
	public void panelDidTap()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xB72638", Offset = "0xB72638", VA = "0xB72638")]
	public AdSkippedErrorPanel()
	{
	}
}
[Token(Token = "0x20001E0")]
public sealed class AdUnavailableErrorPanel : MonoBehaviour
{
	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action completion;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool debounce;

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xB72640", Offset = "0xB72640", VA = "0xB72640")]
	public static void showAdUnavailableError(Action completion)
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xB72694", Offset = "0xB72694", VA = "0xB72694")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xB72714", Offset = "0xB72714", VA = "0xB72714")]
	public void panelDidMoveOut()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xB7274C", Offset = "0xB7274C", VA = "0xB7274C")]
	public void panelDidTap()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xB727E4", Offset = "0xB727E4", VA = "0xB727E4")]
	public AdUnavailableErrorPanel()
	{
	}
}
[Token(Token = "0x20001E1")]
public sealed class BasicFillImageRectangle : MonoBehaviour
{
	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform imageBack;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform imageFront;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text amountLabel;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 pos;

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x9EF1F0", Offset = "0x9EF1F0", VA = "0x9EF1F0")]
	public void setFillValue(int current, int total)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x9EF314", Offset = "0x9EF314", VA = "0x9EF314")]
	public void setFillValue(float percent)
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x9EF4CC", Offset = "0x9EF4CC", VA = "0x9EF4CC")]
	public float xOffsetForValue(int current, int total)
	{
		return default(float);
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x9EF4DC", Offset = "0x9EF4DC", VA = "0x9EF4DC")]
	public float xOffsetForPercent(float percent)
	{
		return default(float);
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x9EF46C", Offset = "0x9EF46C", VA = "0x9EF46C")]
	public void show(bool doShow)
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x9EF544", Offset = "0x9EF544", VA = "0x9EF544")]
	public BasicFillImageRectangle()
	{
	}
}
[Token(Token = "0x20001E2")]
public class BottomNavButton : MonoBehaviour
{
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE2A0", Offset = "0x7CE2A0")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startWidth;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float endWidth;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startHeight;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float endHeight;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BottomNavButton <>4__this;

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x9F2878", Offset = "0x9F2878", VA = "0x9F2878")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x9F28EC", Offset = "0x9F28EC", VA = "0x9F28EC")]
		internal void <selected>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x9F29D4", Offset = "0x9F29D4", VA = "0x9F29D4")]
		internal void <selected>b__1()
		{
		}
	}

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform myRect;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float selectedWidth;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float unselectedWidth;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float selectedHeight;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float unselectedHeight;

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x9F2680", Offset = "0x9F2680", VA = "0x9F2680")]
	public void selected(bool isSelected, float time = 0.2f)
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x9F2880", Offset = "0x9F2880", VA = "0x9F2880")]
	public void buttonWasPressed()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x9F28D8", Offset = "0x9F28D8", VA = "0x9F28D8")]
	public BottomNavButton()
	{
	}
}
[Token(Token = "0x20001E3")]
public class CreditsPanel : MonoBehaviour
{
	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE2B0", Offset = "0x7CE2B0")]
	private sealed class <fadeCycle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsPanel <>4__this;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action showCompleteAction;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds <holdBetween>5__3;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__4;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0xA0135C", Offset = "0xA0135C", VA = "0xA0135C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0xA013C4", Offset = "0xA013C4", VA = "0xA013C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xA00F00", Offset = "0xA00F00", VA = "0xA00F00")]
		[DebuggerHidden]
		public <fadeCycle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xA00F50", Offset = "0xA00F50", VA = "0xA00F50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xA00F54", Offset = "0xA00F54", VA = "0xA00F54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xA01364", Offset = "0xA01364", VA = "0xA01364", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D25FC", Offset = "0x7D25FC")]
	public GameObject contentParent;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text creditsText;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup fader;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2634", Offset = "0x7D2634")]
	public TextAsset creditsAsset;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D266C", Offset = "0x7D266C")]
	public float fadeTime;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float holdTime;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float holdBetweenTime;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D26A4", Offset = "0x7D26A4")]
	public Image creditsButtonIcon;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite creditsIcon;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite creditsCloseIcon;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool bootstrapped;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] lines;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int index;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private SystemLanguage bootstrapLanguage;

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xA00654", Offset = "0xA00654", VA = "0xA00654")]
	public void toggleCreditsButtonPressed()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xA006BC", Offset = "0xA006BC", VA = "0xA006BC")]
	public void hide()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xA00768", Offset = "0xA00768", VA = "0xA00768")]
	public void show(Action cycleCompletAction)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xA00870", Offset = "0xA00870", VA = "0xA00870")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xA00E68", Offset = "0xA00E68", VA = "0xA00E68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D8244", Offset = "0x7D8244")]
	private IEnumerator fadeCycle(Action showCompleteAction)
	{
		return null;
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xA006A0", Offset = "0xA006A0", VA = "0xA006A0")]
	private bool isShowing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xA00F2C", Offset = "0xA00F2C", VA = "0xA00F2C")]
	public CreditsPanel()
	{
	}
}
[Token(Token = "0x20001E4")]
public enum VisionType
{
	[Token(Token = "0x4000B74")]
	normal,
	[Token(Token = "0x4000B75")]
	protanopia,
	[Token(Token = "0x4000B76")]
	deuteranopia,
	[Token(Token = "0x4000B77")]
	tritanopia
}
[Token(Token = "0x20001E5")]
public sealed class DebugColorblindButton : MonoBehaviour
{
	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text label;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VisionType selectedVisionType;

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xA03F18", Offset = "0xA03F18", VA = "0xA03F18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xA03FC0", Offset = "0xA03FC0", VA = "0xA03FC0")]
	public void CycleButtonWasPressed()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xA03F1C", Offset = "0xA03F1C", VA = "0xA03F1C")]
	private void UpdateLabel()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xA04000", Offset = "0xA04000", VA = "0xA04000")]
	private void UpdateCameras()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xA04004", Offset = "0xA04004", VA = "0xA04004")]
	public static void setColorblindMode(VisionType visionType)
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xA04008", Offset = "0xA04008", VA = "0xA04008")]
	public static VisionType visionTypeFromString(string theString)
	{
		return default(VisionType);
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xA03FE0", Offset = "0xA03FE0", VA = "0xA03FE0")]
	private void CycleType()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xA040F0", Offset = "0xA040F0", VA = "0xA040F0")]
	public DebugColorblindButton()
	{
	}
}
[Token(Token = "0x20001E6")]
public class ConfigPickerPanel : MonoBehaviour
{
	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text pickerHeading;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NamedPickerItem pickerTemplate;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TypedObjectPool<NamedPickerItem> pickerPool;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D26DC", Offset = "0x7D26DC")]
	public InputField filter;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2714", Offset = "0x7D2714")]
	public Dropdown enemyDropdownFilter;

	[Token(Token = "0x4000B7F")]
	private const string NoneOption = "NONE";

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D274C", Offset = "0x7D274C")]
	public Toggle enemyClassOnlyToggle;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LevelWaveItem waveItem;

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x9FA614", Offset = "0x9FA614", VA = "0x9FA614")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x9FAAFC", Offset = "0x9FAAFC", VA = "0x9FAAFC")]
	private void filterInformationUpdated()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x9FACD8", Offset = "0x9FACD8", VA = "0x9FACD8")]
	public void openGunPicker(LevelWaveItem waveItem)
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x9FAFD4", Offset = "0x9FAFD4", VA = "0x9FAFD4")]
	public void openEnemyPicker(LevelWaveItem waveItem)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x9FB080", Offset = "0x9FB080", VA = "0x9FB080")]
	public void openSpawnPicker(LevelWaveItem waveItem)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x9FB12C", Offset = "0x9FB12C", VA = "0x9FB12C")]
	public void openFleetSpawnPicker(LevelWaveItem waveItem)
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x9FAEBC", Offset = "0x9FAEBC", VA = "0x9FAEBC")]
	private void resetPanel(bool showEnemyClassDropdown, bool showEnemyClassOnlyToggle)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x9FB1D8", Offset = "0x9FB1D8", VA = "0x9FB1D8")]
	private void gunWasPicked(string gunId)
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x9FB330", Offset = "0x9FB330", VA = "0x9FB330")]
	private void enemyWasPicked(string objectKey)
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x9FB3F0", Offset = "0x9FB3F0", VA = "0x9FB3F0")]
	private void spawnWasPicked(string objectKey)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x9FB4B0", Offset = "0x9FB4B0", VA = "0x9FB4B0")]
	private void fleetSpawnWasPicked(string objectKey)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x9FB288", Offset = "0x9FB288", VA = "0x9FB288")]
	public void closePanel()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x9FB570", Offset = "0x9FB570", VA = "0x9FB570")]
	public ConfigPickerPanel()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x9FB578", Offset = "0x9FB578", VA = "0x9FB578")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D82A8", Offset = "0x7D82A8")]
	private void <OnEnable>b__8_0(string newText)
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x9FB57C", Offset = "0x9FB57C", VA = "0x9FB57C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D82B8", Offset = "0x7D82B8")]
	private void <OnEnable>b__8_1(int option)
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x9FB580", Offset = "0x9FB580", VA = "0x9FB580")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D82C8", Offset = "0x7D82C8")]
	private void <OnEnable>b__8_2(bool isOn)
	{
	}
}
[Token(Token = "0x20001E7")]
public class ConfigToggleItem : MonoBehaviour
{
	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle toggleItem;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text itemLabel;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2784", Offset = "0x7D2784")]
	private string <itemKey>k__BackingField;

	[Token(Token = "0x17000073")]
	public string itemKey
	{
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x9FB584", Offset = "0x9FB584", VA = "0x9FB584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D82D8", Offset = "0x7D82D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x9FB58C", Offset = "0x9FB58C", VA = "0x9FB58C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D82E8", Offset = "0x7D82E8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public bool isOn
	{
		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x9FB594", Offset = "0x9FB594", VA = "0x9FB594")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x9FB5B0", Offset = "0x9FB5B0", VA = "0x9FB5B0")]
	public void configure(string itemKey, bool isOn)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x9FB61C", Offset = "0x9FB61C", VA = "0x9FB61C")]
	public ConfigToggleItem()
	{
	}
}
[Token(Token = "0x20001E8")]
public class EnemyPickerPanel : MonoBehaviour
{
	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text pickerHeading;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NamedPickerItem pickerTemplate;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TypedObjectPool<NamedPickerItem> pickerPool;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2794", Offset = "0x7D2794")]
	public InputField filter;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GunBuilderPanel gunBuilder;

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x9DA348", Offset = "0x9DA348", VA = "0x9DA348")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x9DA404", Offset = "0x9DA404", VA = "0x9DA404")]
	private void filterFieldUpdated(string newText)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x9DA408", Offset = "0x9DA408", VA = "0x9DA408")]
	private void updateFilters()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x9DA544", Offset = "0x9DA544", VA = "0x9DA544")]
	public void openEnemyPicker(GunBuilderPanel gunBuilder)
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x9DA650", Offset = "0x9DA650", VA = "0x9DA650")]
	private void enemyWasPicked(string objectKey)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x9DA958", Offset = "0x9DA958", VA = "0x9DA958")]
	public void closePanel()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x9DAA00", Offset = "0x9DAA00", VA = "0x9DAA00")]
	public EnemyPickerPanel()
	{
	}
}
[Token(Token = "0x20001E9")]
public class GunBuilderConfigLoadItem : MonoBehaviour
{
	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text label;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button loadButton;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action<GunConfig> onLoadButtonHit;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GunConfig configToShow;

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x9E8F44", Offset = "0x9E8F44", VA = "0x9E8F44")]
	public void bootstrap(GunConfig configToShow, Action<GunConfig> onLoadButtonHit)
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x9E8FB8", Offset = "0x9E8FB8", VA = "0x9E8FB8")]
	public void loadButtonWasPressed()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x9E909C", Offset = "0x9E909C", VA = "0x9E909C")]
	public GunBuilderConfigLoadItem()
	{
	}
}
[Token(Token = "0x20001EA")]
public class GunBuilderPanel : MonoBehaviour
{
	[Token(Token = "0x4000B8E")]
	private const string DefaultGunConfigId = "gun_default";

	[Token(Token = "0x4000B8F")]
	private const string EditorSpawnedEnemyKey = "ed_enemy_spawn_key";

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D27CC", Offset = "0x7D27CC")]
	public Button saveConfigButton;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button clearConfigButton;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button revertGunIDButton;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] contentParents;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2804", Offset = "0x7D2804")]
	public GameObject loadingParent;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GunBuilderConfigLoadItem loadItemTemplate;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InputField loadingFilter;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TypedObjectPool<GunBuilderConfigLoadItem> loadItemPool;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D283C", Offset = "0x7D283C")]
	public Text header;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public InputField gunId;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2874", Offset = "0x7D2874")]
	public EnemyPickerPanel enemyPickerPanel;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D28AC", Offset = "0x7D28AC")]
	public Dropdown gunTypeDropDown;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D28E4", Offset = "0x7D28E4")]
	public LevelEditNumberInput initialShotDelay;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LevelEditNumberInput bulletCount;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LevelEditNumberInput shotSpreadAngle;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LevelEditNumberInput repeatShotDelay;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D291C", Offset = "0x7D291C")]
	public LevelEditNumberInput burstDelay;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2954", Offset = "0x7D2954")]
	public LevelEditNumberInput sprayTime;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public LevelEditNumberInput backAndForthCount;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D298C", Offset = "0x7D298C")]
	public LevelEditNumberInput gridShotGapPercent;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LevelEditNumberInput gridSpacing;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D29C4", Offset = "0x7D29C4")]
	public LevelEditStringListBuilder bulletListBuilder;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public LevelEditNumberInput bulletSpinSpeed;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LevelEditNumberInput bulletSpinAxisX;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LevelEditNumberInput bulletSpinAxisY;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LevelEditNumberInput bulletSpinAxisZ;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Toggle horizontalBulletToggle;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public LevelEditNumberInput bulletSpeedMultiplier;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D29FC", Offset = "0x7D29FC")]
	public Dropdown gunAnimDropdown;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public LevelEditNumberInput gunAnimationPlaybackRate;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string loadedGunId;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<string> gunAnimClips;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool isLoaded;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GunConfig currentLoadedConfig;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool isUpdatingUI;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private EnemyController spawnedEnemy;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public EnemyGun enemyGun;

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x9E90A4", Offset = "0x9E90A4", VA = "0x9E90A4")]
	public void loadConfig(GunConfig loadedConfig)
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x9E9CAC", Offset = "0x9E9CAC", VA = "0x9E9CAC")]
	public void saveButtonWasPressed()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x9E9D6C", Offset = "0x9E9D6C", VA = "0x9E9D6C")]
	public void clearButtonWasPressed()
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x9E9E04", Offset = "0x9E9E04", VA = "0x9E9E04")]
	public void newConfigButtonWasPressed()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x9E9F40", Offset = "0x9E9F40", VA = "0x9E9F40")]
	public void revertGunIdButtonWasPressed()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x9EA28C", Offset = "0x9EA28C", VA = "0x9EA28C")]
	public void cameraCycleButtonWasPressed()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x9EA308", Offset = "0x9EA308", VA = "0x9EA308")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x9EAC18", Offset = "0x9EAC18", VA = "0x9EAC18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x9EB0A0", Offset = "0x9EB0A0", VA = "0x9EB0A0")]
	public void enemyPickerOpenButtonPressed()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x9DA70C", Offset = "0x9DA70C", VA = "0x9DA70C")]
	public void enemyPicked(string objectKey)
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x9E9258", Offset = "0x9E9258", VA = "0x9E9258")]
	private void updateAssignedEnemyGun(string theGunId)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x9EAE68", Offset = "0x9EAE68", VA = "0x9EAE68")]
	private void updateGunsEntriesFromFilter(string filterText)
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x9E939C", Offset = "0x9E939C", VA = "0x9E939C")]
	private void updateDisplay(GunConfig next)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x9EB0BC", Offset = "0x9EB0BC", VA = "0x9EB0BC")]
	public void applyInputsToConfig()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x9E9F8C", Offset = "0x9E9F8C", VA = "0x9E9F8C")]
	public void applyInputsToConfig(float value)
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x9EB0C0", Offset = "0x9EB0C0", VA = "0x9EB0C0")]
	public void randomButtonPressed()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x9EA9F0", Offset = "0x9EA9F0", VA = "0x9EA9F0")]
	private void setupLabel(LevelEditNumberInput label, float incrementAmount, float minimum, float maximum, string labelText)
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x9EAA38", Offset = "0x9EAA38", VA = "0x9EAA38")]
	private List<string> getAllBulletsFromDirectory(string path)
	{
		return null;
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x9EB424", Offset = "0x9EB424", VA = "0x9EB424")]
	public GunBuilderPanel()
	{
	}
}
[Token(Token = "0x20001EB")]
public class LevelEditNumberInput : MonoBehaviour
{
	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2A34", Offset = "0x7D2A34")]
	public Text valueLabel;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text titleLabel;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text plusLabel;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text minusLabel;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2A6C", Offset = "0x7D2A6C")]
	public float currentValue;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float incrementAmount;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2AA4", Offset = "0x7D2AA4")]
	public float minimum;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maximum;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool roundToInt;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action<float> itemDidChangeAction;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float multiplier;

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x9D2B2C", Offset = "0x9D2B2C", VA = "0x9D2B2C")]
	public int currentValueAsInt()
	{
		return default(int);
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x9D2BA0", Offset = "0x9D2BA0", VA = "0x9D2BA0")]
	public float currentValueAsFloat()
	{
		return default(float);
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x9D2BA8", Offset = "0x9D2BA8", VA = "0x9D2BA8")]
	public void updateTitle(string title)
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x9D2C58", Offset = "0x9D2C58", VA = "0x9D2C58")]
	public void setValue(float value, bool doInt = false, [Optional] Action<float> theAction)
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x9D2DB4", Offset = "0x9D2DB4", VA = "0x9D2DB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x9D2F28", Offset = "0x9D2F28", VA = "0x9D2F28")]
	public void incrementValueWasPressed(int amount)
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x9D2C90", Offset = "0x9D2C90", VA = "0x9D2C90")]
	private void updateDisplay()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x9D2FC0", Offset = "0x9D2FC0", VA = "0x9D2FC0")]
	public LevelEditNumberInput()
	{
	}
}
[Token(Token = "0x20001EC")]
public class LevelEditStringListBuilder : MonoBehaviour
{
	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2ADC", Offset = "0x7D2ADC")]
	public Button nextSelection;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button previousSelection;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text selectionDisplay;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button addCurrentSelection;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button removeLastFromList;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2B14", Offset = "0x7D2B14")]
	public Text listDisplay;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int selectionIndex;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<string> selectionOptions;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<string> stringListContent;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action updateCallback;

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x9D2FE8", Offset = "0x9D2FE8", VA = "0x9D2FE8")]
	public void setup(List<string> selectionOptions)
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x9D3014", Offset = "0x9D3014", VA = "0x9D3014")]
	public void setValue(List<string> startingListContent, Action updateCallback)
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x9D3054", Offset = "0x9D3054", VA = "0x9D3054")]
	private void updateDisplay()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x9D3264", Offset = "0x9D3264", VA = "0x9D3264")]
	public void selectionButtonWasPressed(int direction)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x9D32F8", Offset = "0x9D32F8", VA = "0x9D32F8")]
	public void addCurrentSelectionWasPressed()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x9D3384", Offset = "0x9D3384", VA = "0x9D3384")]
	public void removeLastItemButtonWasPressed()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x9D340C", Offset = "0x9D340C", VA = "0x9D340C")]
	public List<string> currentListContents()
	{
		return null;
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x9D31F4", Offset = "0x9D31F4", VA = "0x9D31F4")]
	private string currentSelection()
	{
		return null;
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x9D34C4", Offset = "0x9D34C4", VA = "0x9D34C4")]
	public LevelEditStringListBuilder()
	{
	}
}
[Token(Token = "0x20001ED")]
public class LevelBuilderPanel : MonoBehaviour
{
	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2B4C", Offset = "0x7D2B4C")]
	public GameObject mainFrame;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject loadFrame;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject messageFrame;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConfigPickerPanel configPickerFrame;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2B84", Offset = "0x7D2B84")]
	public Text header;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform scrollRect;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text modeToggleButtonLabel;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text saveButtonLabel;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2BBC", Offset = "0x7D2BBC")]
	public LevelWaveItem levelWaveItemTemplate;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2BF4", Offset = "0x7D2BF4")]
	public LoadLevelToEditItem levelLoadItemTemplate;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TMP_InputField levelLoadFilter;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Slider difficultyFilterSlider;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text difficultyFilterLabel;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2C2C", Offset = "0x7D2C2C")]
	public TMP_InputField levelIdInput;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2C64", Offset = "0x7D2C64")]
	public Slider difficultySlider;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text difficultyLabel;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2C9C", Offset = "0x7D2C9C")]
	public ConfigToggleItem worldToggleTemplate;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ConfigToggleItem worldToggleFilterTemplate;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2CD4", Offset = "0x7D2CD4")]
	public ScrollRect messageScroll;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text messageHeader;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text messageContent;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private TypedObjectPool<LevelWaveItem> waveItemPool;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private TypedObjectPool<LoadLevelToEditItem> levelLoadItemPool;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private TypedObjectPool<ConfigToggleItem> worldTogglePool;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private TypedObjectPool<ConfigToggleItem> worldToggleFilterPool;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool isItemControlActive;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Level loadedLevel;

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x9C6C38", Offset = "0x9C6C38", VA = "0x9C6C38")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x9C75A8", Offset = "0x9C75A8", VA = "0x9C75A8")]
	public void openLoadPanelButtonPressed()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x9C75AC", Offset = "0x9C75AC", VA = "0x9C75AC")]
	public void testLevelButtonPressed()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x9C7B88", Offset = "0x9C7B88", VA = "0x9C7B88")]
	public void testLevelFromHereButtonPressed(LevelWaveItem itemToTestFrom)
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x9C7C8C", Offset = "0x9C7C8C", VA = "0x9C7C8C")]
	public void showRawButtonPressed()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x9C8140", Offset = "0x9C8140", VA = "0x9C8140")]
	public void loadLevelButtonPressed(string levelFilename)
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x9C81C0", Offset = "0x9C81C0", VA = "0x9C81C0")]
	public void deleteLevelButtonPressed(string levelName)
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x9C8364", Offset = "0x9C8364", VA = "0x9C8364")]
	public void closeMessageButtonPressed()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x9C7304", Offset = "0x9C7304", VA = "0x9C7304")]
	private void setupLevelLoadFrame()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x9C84CC", Offset = "0x9C84CC", VA = "0x9C84CC")]
	private void updateItemsToLoadList()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x9C8B04", Offset = "0x9C8B04", VA = "0x9C8B04")]
	public void createNewLevel()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x9C8E40", Offset = "0x9C8E40", VA = "0x9C8E40")]
	public void duplicateItem(LevelWaveItem itemToCopy)
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x9C9018", Offset = "0x9C9018", VA = "0x9C9018")]
	public void insertFleetSpawnItem(LevelWaveItem itemToPlaceAt)
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x9C9080", Offset = "0x9C9080", VA = "0x9C9080")]
	public void insertSpawnItem(LevelWaveItem itemToPlaceAt)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x9C9088", Offset = "0x9C9088", VA = "0x9C9088")]
	public void insertWaitOnlyItem(LevelWaveItem itemToPlaceAt)
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x9C9020", Offset = "0x9C9020", VA = "0x9C9020")]
	private void insertNewItem(LevelWaveItem itemToPlaceAt, WaveTickActionType optionalAction = WaveTickActionType.none)
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x9C8D20", Offset = "0x9C8D20", VA = "0x9C8D20")]
	private void createNewItem(int siblingIndex, WaveTickActionType optionalAction = WaveTickActionType.none)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x9C8F6C", Offset = "0x9C8F6C", VA = "0x9C8F6C")]
	private void createNewItem(int siblingIndex, List<WaveTickAction> waveGroup)
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x9C9588", Offset = "0x9C9588", VA = "0x9C9588")]
	public void deleteItemWasPressed(LevelWaveItem theItem)
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x9C969C", Offset = "0x9C969C", VA = "0x9C969C")]
	public void moveUpWasPressed(LevelWaveItem theItem)
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x9C9818", Offset = "0x9C9818", VA = "0x9C9818")]
	public void moveDownWasPressed(LevelWaveItem theItem)
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x9C99A0", Offset = "0x9C99A0", VA = "0x9C99A0")]
	public void exportWavesToLevel()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x9C7690", Offset = "0x9C7690", VA = "0x9C7690")]
	private Level assembleExportLevel([Optional] LevelWaveItem waveToStartExport)
	{
		return null;
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x9C8144", Offset = "0x9C8144", VA = "0x9C8144")]
	private void loadLevel(string levelName)
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x9C6D5C", Offset = "0x9C6D5C", VA = "0x9C6D5C")]
	private void setupPanelForLevel(Level theLevel)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x9C8384", Offset = "0x9C8384", VA = "0x9C8384")]
	private void setupToggle(string worldId, bool isFilter)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x9C9FDC", Offset = "0x9C9FDC", VA = "0x9C9FDC")]
	private void levelIdInputFieldUpdate(string newId)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x9C80C4", Offset = "0x9C80C4", VA = "0x9C80C4")]
	private void showMessage(string header, string content)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x9C97B4", Offset = "0x9C97B4", VA = "0x9C97B4")]
	private void updateItemPosition(LevelWaveItem theItem, int index)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x9CA1B4", Offset = "0x9CA1B4", VA = "0x9CA1B4")]
	public void modeToggleButtonWasPressed()
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x9CA1C4", Offset = "0x9CA1C4", VA = "0x9CA1C4")]
	private void updateItemsWithEditMode(bool newMode)
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x9C9480", Offset = "0x9C9480", VA = "0x9C9480")]
	private void updateWaveItemsForPosition(bool animate)
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x9CA488", Offset = "0x9CA488", VA = "0x9CA488")]
	private void scrollDidHappen()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x9C9F38", Offset = "0x9C9F38", VA = "0x9C9F38")]
	private void difficultySliderUpdated(float value)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x9C9F14", Offset = "0x9C9F14", VA = "0x9C9F14")]
	private bool isSpawnAction(WaveTickAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x9C8C38", Offset = "0x9C8C38", VA = "0x9C8C38")]
	private string getNewLevelChunkId()
	{
		return null;
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x9CA638", Offset = "0x9CA638", VA = "0x9CA638")]
	public LevelBuilderPanel()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x9CA640", Offset = "0x9CA640", VA = "0x9CA640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D82F8", Offset = "0x7D82F8")]
	private void <setupLevelLoadFrame>b__35_0(string value)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x9CA644", Offset = "0x9CA644", VA = "0x9CA644")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8308", Offset = "0x7D8308")]
	private void <setupLevelLoadFrame>b__35_1(float value)
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x9CA648", Offset = "0x9CA648", VA = "0x9CA648")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8318", Offset = "0x7D8318")]
	private void <setupPanelForLevel>b__51_0()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x9CA650", Offset = "0x9CA650", VA = "0x9CA650")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8328", Offset = "0x7D8328")]
	private void <setupToggle>b__52_0(bool ignoreToggle)
	{
	}
}
[Token(Token = "0x20001EE")]
public class LevelWaveItem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE2C0", Offset = "0x7CE2C0")]
	private sealed class <>c
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<WaveTickAction> <>9__52_0;

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xA5AD10", Offset = "0xA5AD10", VA = "0xA5AD10")]
		public <>c()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xA5AD18", Offset = "0xA5AD18", VA = "0xA5AD18")]
		internal bool <getActionsForExport>b__52_0(WaveTickAction waveAction)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE2D0", Offset = "0x7CE2D0")]
	private sealed class <>c__DisplayClass57_0
	{
		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveTickActionType actionType;

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xA5AD4C", Offset = "0xA5AD4C", VA = "0xA5AD4C")]
		public <>c__DisplayClass57_0()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xA5AD54", Offset = "0xA5AD54", VA = "0xA5AD54")]
		internal bool <updateActionsFromToggle>b__0(WaveTickAction waveAction)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xA5AD78", Offset = "0xA5AD78", VA = "0xA5AD78")]
		internal bool <updateActionsFromToggle>b__1(WaveTickAction waveAction)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000371")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE2E0", Offset = "0x7CE2E0")]
	private sealed class <>c__DisplayClass65_0
	{
		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelWaveItem <>4__this;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle target;

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xA5AD9C", Offset = "0xA5AD9C", VA = "0xA5AD9C")]
		public <>c__DisplayClass65_0()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xA5ADA4", Offset = "0xA5ADA4", VA = "0xA5ADA4")]
		internal void <setupToggle>b__0(bool boolToIgnore)
		{
		}
	}

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2D0C", Offset = "0x7D2D0C")]
	public RectTransform contentsParent;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text elementIndexLabel;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGImage background;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2D44", Offset = "0x7D2D44")]
	public ConfigPickerPanel configPicker;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject itemControlElementParent;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2D7C", Offset = "0x7D2D7C")]
	public GameObject moveOptionParent;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle wiggleMoveToggle;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle trackToPlayerToggle;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Toggle splineJumpToggle;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2DB4", Offset = "0x7D2DB4")]
	public LevelEditNumberInput loiterCount;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2DEC", Offset = "0x7D2DEC")]
	public LevelEditNumberInput waveWaitTicks;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Toggle waitForClearToggle;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Toggle waitForLastToggle;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2E24", Offset = "0x7D2E24")]
	public GameObject spawnParent;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text spawnPointLabel;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LevelEditNumberInput heightOffset;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2E5C", Offset = "0x7D2E5C")]
	public GameObject enemySpawnParent;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text enemySpawnLabel;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2E94", Offset = "0x7D2E94")]
	public GameObject gunOverrideParent;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text gunLabel;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2ECC", Offset = "0x7D2ECC")]
	public GameObject fleetSpawnParent;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text fleetSpawnLabel;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public LevelEditNumberInput fleetSpawnIndex;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2F04", Offset = "0x7D2F04")]
	private List<WaveTickAction> <waveActionsToEdit>k__BackingField;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Color baseColor;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isBootstrapped;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool isUpdatingUI;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	private bool isUpdatingConfig;

	[Token(Token = "0x4000C01")]
	private const string SpawnPath = "Spawns/{0}";

	[Token(Token = "0x4000C02")]
	private const string FleetPath = "Fleets/{0}";

	[Token(Token = "0x17000075")]
	public List<WaveTickAction> waveActionsToEdit
	{
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x9D34CC", Offset = "0x9D34CC", VA = "0x9D34CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8338", Offset = "0x7D8338")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x9D34D4", Offset = "0x9D34D4", VA = "0x9D34D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8348", Offset = "0x7D8348")]
		private set
		{
		}
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x9C9090", Offset = "0x9C9090", VA = "0x9C9090")]
	public void setup(List<WaveTickAction> waveActionsToEdit)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x9CA36C", Offset = "0x9CA36C", VA = "0x9CA36C")]
	public void updateEntryNumber(int entryNumber, bool animate)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x9CA34C", Offset = "0x9CA34C", VA = "0x9CA34C")]
	public void updateEditMode(bool isItemControlActive)
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x9D3624", Offset = "0x9D3624", VA = "0x9D3624")]
	public void updateDisplay()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x9D3858", Offset = "0x9D3858", VA = "0x9D3858")]
	private void setupForSpawnAction(WaveTickAction wave)
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x9D3E9C", Offset = "0x9D3E9C", VA = "0x9D3E9C")]
	private void setupForTickWait(WaveTickAction wave)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x9D3F74", Offset = "0x9D3F74", VA = "0x9D3F74")]
	private void setupForWaitForClear()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x9D3F94", Offset = "0x9D3F94", VA = "0x9D3F94")]
	private void setupForWaitForLast()
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x9D4260", Offset = "0x9D4260", VA = "0x9D4260")]
	private void toggleEntryWasUpdate(Toggle theToggle)
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x9D4460", Offset = "0x9D4460", VA = "0x9D4460")]
	private void ensureToggleStates(Toggle updatedToggle, params Toggle[] allToggles)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x9D45D0", Offset = "0x9D45D0", VA = "0x9D45D0")]
	private void entryWasUpdated()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x9D49C8", Offset = "0x9D49C8", VA = "0x9D49C8")]
	public void gunOverrideButtonPressed()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x9D4AC0", Offset = "0x9D4AC0", VA = "0x9D4AC0")]
	public void enemyPickButtonPressed()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x9D4BB8", Offset = "0x9D4BB8", VA = "0x9D4BB8")]
	public void spawnPickButtonPressed()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x9D4CB0", Offset = "0x9D4CB0", VA = "0x9D4CB0")]
	public void fleetPickButtonWasPressed()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x9D4DA4", Offset = "0x9D4DA4", VA = "0x9D4DA4")]
	public void updateWithGunOverride(string gunId)
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x9D4E74", Offset = "0x9D4E74", VA = "0x9D4E74")]
	public void updateWithNewEnemyObjectKey(string objectKey)
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x9D4F78", Offset = "0x9D4F78", VA = "0x9D4F78")]
	public void updateWithNewSpawnKey(string spawnName)
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x9D50DC", Offset = "0x9D50DC", VA = "0x9D50DC")]
	public void updateWithNewFleetSpawnKey(string fleetName)
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x9C9DD0", Offset = "0x9C9DD0", VA = "0x9C9DD0")]
	public List<WaveTickAction> getActionsForExport()
	{
		return null;
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x9C9BF0", Offset = "0x9C9BF0", VA = "0x9C9BF0")]
	public List<string> findSetupErrors()
	{
		return null;
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x9D52F0", Offset = "0x9D52F0", VA = "0x9D52F0")]
	public bool isABossSpawningWave()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x9D523C", Offset = "0x9D523C", VA = "0x9D523C")]
	private bool isItemInvalid(string itemName, bool checkForTemplate)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x9C93A4", Offset = "0x9C93A4", VA = "0x9C93A4")]
	public void interactionHappened(bool isShort = false)
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x9D4798", Offset = "0x9D4798", VA = "0x9D4798")]
	private void updateActionsFromToggle(Toggle toggle, WaveTickActionType actionType)
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x9D51E8", Offset = "0x9D51E8", VA = "0x9D51E8")]
	private string objectKeyForFleet(string fleetName)
	{
		return null;
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x9D5088", Offset = "0x9D5088", VA = "0x9D5088")]
	private string objectKeyForSpawn(string spawnName)
	{
		return null;
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x9D4084", Offset = "0x9D4084", VA = "0x9D4084")]
	private string getEnemyDisplayLabel(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x9D4024", Offset = "0x9D4024", VA = "0x9D4024")]
	private string getEnemyGroupDisplayLabel(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x9D3FB4", Offset = "0x9D3FB4", VA = "0x9D3FB4")]
	private string getSpawnDisplayLabel(string spawnName)
	{
		return null;
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x9D41CC", Offset = "0x9D41CC", VA = "0x9D41CC")]
	private string getFleetDisplayLabel(string fleetName)
	{
		return null;
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x9D34DC", Offset = "0x9D34DC", VA = "0x9D34DC")]
	private void setupLabel(LevelEditNumberInput label, float incrementAmount, float minimum, float maximum, string labelText)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x9D3520", Offset = "0x9D3520", VA = "0x9D3520")]
	private void setupToggle(Toggle target)
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x9D53C0", Offset = "0x9D53C0", VA = "0x9D53C0")]
	public LevelWaveItem()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x9D53C8", Offset = "0x9D53C8", VA = "0x9D53C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8358", Offset = "0x7D8358")]
	private void <setupForSpawnAction>b__37_0(float floatToIgnore)
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x9D53CC", Offset = "0x9D53CC", VA = "0x9D53CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8368", Offset = "0x7D8368")]
	private void <setupForSpawnAction>b__37_2(float floatToIgnore)
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x9D53D0", Offset = "0x9D53D0", VA = "0x9D53D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8378", Offset = "0x7D8378")]
	private void <setupForSpawnAction>b__37_1(float floatToIgnore)
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x9D53D4", Offset = "0x9D53D4", VA = "0x9D53D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8388", Offset = "0x7D8388")]
	private void <setupForTickWait>b__38_0(float floatToIgnore)
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x9D53D8", Offset = "0x9D53D8", VA = "0x9D53D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8398", Offset = "0x7D8398")]
	private void <interactionHappened>b__56_0(float alpha)
	{
	}
}
[Token(Token = "0x20001EF")]
public class LoadLevelToEditItem : MonoBehaviour
{
	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text levelNameLabel;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string levelName;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LevelBuilderPanel builderPanel;

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xA5ADC8", Offset = "0xA5ADC8", VA = "0xA5ADC8")]
	public void setupForLevel(string levelName, LevelBuilderPanel builderPanel)
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xA5AE30", Offset = "0xA5AE30", VA = "0xA5AE30")]
	public void loadButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xA5AE54", Offset = "0xA5AE54", VA = "0xA5AE54")]
	public void deleteButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xA5AE78", Offset = "0xA5AE78", VA = "0xA5AE78")]
	public LoadLevelToEditItem()
	{
	}
}
[Token(Token = "0x20001F0")]
public class MainEditPanel : MonoBehaviour
{
	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xA64E60", Offset = "0xA64E60", VA = "0xA64E60")]
	public void enemyDesignerButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xA64ED0", Offset = "0xA64ED0", VA = "0xA64ED0")]
	public MainEditPanel()
	{
	}
}
[Token(Token = "0x20001F1")]
public class NamedPickerItem : MonoBehaviour
{
	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text displayLabel;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string objectKey;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action<string> pickAction;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> metaInfo;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isEnemyClassItem;

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x11572FC", Offset = "0x11572FC", VA = "0x11572FC")]
	public void setupForGun(string gunId, Action<string> pickAction)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x1157500", Offset = "0x1157500", VA = "0x1157500")]
	public void setupForEnemy(EnemyController enemy, Action<string> pickAction)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x1157718", Offset = "0x1157718", VA = "0x1157718")]
	public void setupForEnemyGroup(EnemyClass enemyGroup, Action<string> pickAction)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x11578AC", Offset = "0x11578AC", VA = "0x11578AC")]
	public void setupForSpawn(string spawnName, string enemyClassMeta, Action<string> pickAction)
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x1157A18", Offset = "0x1157A18", VA = "0x1157A18")]
	public void setupForFleetSpawn(string fleetName, Action<string> pickAction)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x11573A8", Offset = "0x11573A8", VA = "0x11573A8")]
	private void setup(string objectKey, string displayText, Action<string> pickAction, [Optional] Color? color)
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x1157B04", Offset = "0x1157B04", VA = "0x1157B04")]
	public void pickButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x1157B60", Offset = "0x1157B60", VA = "0x1157B60")]
	public bool isPassingFilter(string filter, bool onlyAllowEnemyClasses = false, [Optional] string metaInfoFilter)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x11575D0", Offset = "0x11575D0", VA = "0x11575D0")]
	private string getEnemyDisplayLabel(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x115784C", Offset = "0x115784C", VA = "0x115784C")]
	private string getEnemyGroupDisplayLabel(string enemyGroup)
	{
		return null;
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x1157A70", Offset = "0x1157A70", VA = "0x1157A70")]
	private string getFleetDisplayLabel(string fleetName)
	{
		return null;
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x1157588", Offset = "0x1157588", VA = "0x1157588")]
	private string objectKeyForEnemy(EnemyController enemy)
	{
		return null;
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x1157C44", Offset = "0x1157C44", VA = "0x1157C44")]
	public NamedPickerItem()
	{
	}
}
[Token(Token = "0x20001F2")]
public class EndOfGameCheckpointDisplay : MonoBehaviour
{
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE2F0", Offset = "0x7CE2F0")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EndOfGameCheckpointDisplay <>4__this;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float start;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float target;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isWin;

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xA25000", Offset = "0xA25000", VA = "0xA25000")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xA25584", Offset = "0xA25584", VA = "0xA25584")]
		internal void <animateToFill>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xA25638", Offset = "0xA25638", VA = "0xA25638")]
		internal void <animateToFill>b__1()
		{
		}
	}

	[Token(Token = "0x4000C0B")]
	private const float PostFillPopSize = 1.2f;

	[Token(Token = "0x4000C0C")]
	private const float PostFillPopTime = 0.4f;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayBeforePostAction;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2F14", Offset = "0x7D2F14")]
	public GameObject topLevelParent;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject contentParent;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UICornersGradient gradient;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2F4C", Offset = "0x7D2F4C")]
	public GameObject winPopup;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject failPopup;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text winPopupLabel;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text failPopupLabel;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2F84", Offset = "0x7D2F84")]
	public Image medalImage;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite easyMedal;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite mediumMedal;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite hardMedal;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2FBC", Offset = "0x7D2FBC")]
	public float fillTime;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image fillBar;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve fillCurve;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem fillBarVFX;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material fillMaterial;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Action postAnimationAction;

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xA24C8C", Offset = "0xA24C8C", VA = "0xA24C8C")]
	public void updateDisplay(bool isWin, Action postAnimationAction)
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xA24E68", Offset = "0xA24E68", VA = "0xA24E68")]
	private void animateToFill(float target, bool isWin)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xA25008", Offset = "0xA25008", VA = "0xA25008")]
	private void updateFillBar(float value)
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xA25254", Offset = "0xA25254", VA = "0xA25254")]
	private void showWin()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xA250E0", Offset = "0xA250E0", VA = "0xA250E0")]
	private void showFailure()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xA253C8", Offset = "0xA253C8", VA = "0xA253C8")]
	public void prepareForAnimation(GameDifficulty difficulty)
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xA25464", Offset = "0xA25464", VA = "0xA25464")]
	public void hide()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xA254A8", Offset = "0xA254A8", VA = "0xA254A8")]
	public void updateColors(Color lightColor, Color darkColor)
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xA25544", Offset = "0xA25544", VA = "0xA25544")]
	public EndOfGameCheckpointDisplay()
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xA2555C", Offset = "0xA2555C", VA = "0xA2555C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D83A8", Offset = "0x7D83A8")]
	private void <showWin>b__23_0()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xA25570", Offset = "0xA25570", VA = "0xA25570")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D83B8", Offset = "0x7D83B8")]
	private void <showFailure>b__24_0()
	{
	}
}
[Token(Token = "0x20001F3")]
public class EndOfGameMissionDisplay : MonoBehaviour
{
	[Token(Token = "0x4000C1F")]
	private const float PostFillPopSize = 1.2f;

	[Token(Token = "0x4000C20")]
	private const float PostFillPopTime = 0.4f;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EndOfGameMissionProgressBar missionProgressBarTemplate;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TypedObjectPool<EndOfGameMissionProgressBar> progressBars;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D2FF4", Offset = "0x7D2FF4")]
	public GameObject noChallengeAvailableParent;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UICornersGradient gradient;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D302C", Offset = "0x7D302C")]
	public TMP_Text challengeNotAvailable;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3064", Offset = "0x7D3064")]
	public GameObject winPopup;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject failPopup;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action postAnimationAction;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isMissionComplete;

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xA25660", Offset = "0xA25660", VA = "0xA25660")]
	public void updateDisplay(MissionConfig currentMission, Action postAnimationAction)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xA259D0", Offset = "0xA259D0", VA = "0xA259D0")]
	public void prepareForAnimation()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xA25838", Offset = "0xA25838", VA = "0xA25838")]
	private void checkProgressBarBootstrap()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xA25C04", Offset = "0xA25C04", VA = "0xA25C04")]
	public void hide()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xA25D54", Offset = "0xA25D54", VA = "0xA25D54")]
	public void updateColors(Color lightColor, Color darkColor)
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xA25F20", Offset = "0xA25F20", VA = "0xA25F20")]
	private void fillBarsCompleteAction()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xA25F30", Offset = "0xA25F30", VA = "0xA25F30")]
	private void showSuccess()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xA26030", Offset = "0xA26030", VA = "0xA26030")]
	private void showFailure()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xA26130", Offset = "0xA26130", VA = "0xA26130")]
	public EndOfGameMissionDisplay()
	{
	}
}
[Token(Token = "0x20001F4")]
public class EndOfGameMissionProgressBar : MonoBehaviour
{
	[Token(Token = "0x2000373")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE300", Offset = "0x7CE300")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EndOfGameMissionProgressBar <>4__this;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float target;

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xA262DC", Offset = "0xA262DC", VA = "0xA262DC")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xA26308", Offset = "0xA26308", VA = "0xA26308")]
		internal void <animateToFill>b__0(float alpha)
		{
		}
	}

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D309C", Offset = "0x7D309C")]
	public GameObject topLevelParent;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject contentParent;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fillBarParent;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D30D4", Offset = "0x7D30D4")]
	public TMP_Text missionTask;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UICornersGradient gradient;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image fillBar;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D310C", Offset = "0x7D310C")]
	public float fillTime;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve fillCurve;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem fillCompleteVFX;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action fillCompleteAction;

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xA25900", Offset = "0xA25900", VA = "0xA25900")]
	public void updateDisplay(MissionTaskConfig trackedTask, bool missionComplete, Action fillCompleteAction)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xA25BAC", Offset = "0xA25BAC", VA = "0xA25BAC")]
	public void prepareForAnimation()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xA25D10", Offset = "0xA25D10", VA = "0xA25D10")]
	public void hide()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xA25E84", Offset = "0xA25E84", VA = "0xA25E84")]
	public void updateColors(Color lightColor, Color darkColor)
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xA26138", Offset = "0xA26138", VA = "0xA26138")]
	private void animateToFill(float target)
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xA262E4", Offset = "0xA262E4", VA = "0xA262E4")]
	private void fillAnimationIsComplete()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xA262F8", Offset = "0xA262F8", VA = "0xA262F8")]
	public EndOfGameMissionProgressBar()
	{
	}
}
[Token(Token = "0x20001F5")]
public class EndOfGamePanel : MonoBehaviour
{
	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3144", Offset = "0x7D3144")]
	public GameObject scoreParent;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text scoreLabel;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D317C", Offset = "0x7D317C")]
	public EndOfGameCheckpointDisplay campaignProgress;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D31B4", Offset = "0x7D31B4")]
	public TMP_Text missionHeader;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EndOfGameMissionDisplay missionDisplay;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D31EC", Offset = "0x7D31EC")]
	public Color normalFillLightColor;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color normalFillDarkerColor;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color warningFillLightColor;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color warningFillDarkColor;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3224", Offset = "0x7D3224")]
	public GameObject continueButtonParent;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SimpleShootableButton continueButton;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_Text continueButtonLabel;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D325C", Offset = "0x7D325C")]
	public GameObject restartButtonParent;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SimpleShootableButton restartButton;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject mainMenuButtonParent;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SimpleShootableButton mainMenuButton;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TMP_Text mainMenuButtonLabel;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3294", Offset = "0x7D3294")]
	public GameObject progressCallout;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float progressShowTime;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D32CC", Offset = "0x7D32CC")]
	public GameObject rewardCallout;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TMP_Text calloutLabel;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool isWin;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float timeToHideProgressCallout;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private MissionConfig currentMission;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WorldConfig currentWorld;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isRunningAnimations;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3304", Offset = "0x7D3304")]
	public TMP_Text FXAAToggleLabel;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public TMP_Text BloomToggleLabel;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool FXAAToggle;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool BloomToggle;

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xA26360", Offset = "0xA26360", VA = "0xA26360")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xA26534", Offset = "0xA26534", VA = "0xA26534")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xA26934", Offset = "0xA26934", VA = "0xA26934")]
	public void panelWillMoveOut()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xA26564", Offset = "0xA26564", VA = "0xA26564")]
	private void reset()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xA265C0", Offset = "0xA265C0", VA = "0xA265C0")]
	private void normalEndOfGame()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xA26B8C", Offset = "0xA26B8C", VA = "0xA26B8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xA26938", Offset = "0xA26938", VA = "0xA26938")]
	private void updateMissionAnimations()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xA26CEC", Offset = "0xA26CEC", VA = "0xA26CEC")]
	private void postGameAnimationComplete()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xA26DAC", Offset = "0xA26DAC", VA = "0xA26DAC")]
	public void showLoseProgressCalloutState()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xA26D14", Offset = "0xA26D14", VA = "0xA26D14")]
	private void updateRewardCallout(bool checkMissionForRewards)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xA26E78", Offset = "0xA26E78", VA = "0xA26E78")]
	private bool hasRewardsAvailable(bool checkMissionForRewards)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xA26F28", Offset = "0xA26F28", VA = "0xA26F28")]
	private string getRewardLabel(bool checkMissionForRewards)
	{
		return null;
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xA269F8", Offset = "0xA269F8", VA = "0xA269F8")]
	private void updateScoreDisplay(bool isActive)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xA26C28", Offset = "0xA26C28", VA = "0xA26C28")]
	private void updateFillBarColors()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xA27004", Offset = "0xA27004", VA = "0xA27004")]
	public void restartButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xA2713C", Offset = "0xA2713C", VA = "0xA2713C")]
	public void continueButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xA27224", Offset = "0xA27224", VA = "0xA27224")]
	public void mainMenuButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xA272F8", Offset = "0xA272F8", VA = "0xA272F8")]
	public void debugCheckpointButtonPressed(int checkpointIndex)
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xA27520", Offset = "0xA27520", VA = "0xA27520")]
	public void debugToggleFXAA()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xA275C8", Offset = "0xA275C8", VA = "0xA275C8")]
	private void updateFXAAToggleLabel()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xA2769C", Offset = "0xA2769C", VA = "0xA2769C")]
	public void debugToggleBloom()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xA27744", Offset = "0xA27744", VA = "0xA27744")]
	private void updateBloomToggleLabel()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xA27818", Offset = "0xA27818", VA = "0xA27818")]
	public EndOfGamePanel()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xA27830", Offset = "0xA27830", VA = "0xA27830")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D83C8", Offset = "0x7D83C8")]
	private void <normalEndOfGame>b__30_0()
	{
	}
}
[Token(Token = "0x20001F6")]
public class EndOfTournamentPanel : MonoBehaviour
{
	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE310", Offset = "0x7CE310")]
	private sealed class <interactionUpdate>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndOfTournamentPanel <>4__this;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001907")]
			[Address(RVA = "0xA281E0", Offset = "0xA281E0", VA = "0xA281E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001909")]
			[Address(RVA = "0xA28248", Offset = "0xA28248", VA = "0xA28248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xA27EE4", Offset = "0xA27EE4", VA = "0xA27EE4")]
		[DebuggerHidden]
		public <interactionUpdate>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xA28090", Offset = "0xA28090", VA = "0xA28090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xA28094", Offset = "0xA28094", VA = "0xA28094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xA281E8", Offset = "0xA281E8", VA = "0xA281E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D333C", Offset = "0x7D333C")]
	public TMP_Text leaderboardTitleLabel;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3374", Offset = "0x7D3374")]
	public TMP_Text scoreLabel;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D33AC", Offset = "0x7D33AC")]
	public TMP_Text highestMultiplierLabel;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text runDurationLabel;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text killHeaderLabel;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text killStatLabel;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D33E4", Offset = "0x7D33E4")]
	public GameObject restartButtonParent;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D341C", Offset = "0x7D341C")]
	public LeaderboardDisplay leaderboardDisplay;

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xA27858", Offset = "0xA27858", VA = "0xA27858")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xA27EB0", Offset = "0xA27EB0", VA = "0xA27EB0")]
	public void panelWillMoveOut()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xA27E34", Offset = "0xA27E34", VA = "0xA27E34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D83D8", Offset = "0x7D83D8")]
	private IEnumerator interactionUpdate()
	{
		return null;
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xA279E0", Offset = "0xA279E0", VA = "0xA279E0")]
	private void updateScoreDisplay()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xA27B40", Offset = "0xA27B40", VA = "0xA27B40")]
	private void updateStats()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xA27F10", Offset = "0xA27F10", VA = "0xA27F10")]
	public void restartButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xA28010", Offset = "0xA28010", VA = "0xA28010")]
	public void mainMenuButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xA28088", Offset = "0xA28088", VA = "0xA28088")]
	public EndOfTournamentPanel()
	{
	}
}
[Token(Token = "0x20001F7")]
public class ErrorPanel : MonoBehaviour
{
	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text errorCode;

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x9DB838", Offset = "0x9DB838", VA = "0x9DB838")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x9DB8DC", Offset = "0x9DB8DC", VA = "0x9DB8DC")]
	public void homeButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x9DB8E4", Offset = "0x9DB8E4", VA = "0x9DB8E4")]
	public ErrorPanel()
	{
	}
}
[Token(Token = "0x20001F8")]
public class GameDifficultyDisplay : MonoBehaviour
{
	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3454", Offset = "0x7D3454")]
	public UIButtonToggle easyDifficultyButton;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButtonToggle mediumDifficultyButton;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButtonToggle hardDifficultyButton;

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x9DE870", Offset = "0x9DE870", VA = "0x9DE870")]
	private void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x9DE9E8", Offset = "0x9DE9E8", VA = "0x9DE9E8")]
	public void easyDifficultyButtonPressed()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x9DEA88", Offset = "0x9DEA88", VA = "0x9DEA88")]
	public void mediumDifficultyButtonPressed()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x9DEA90", Offset = "0x9DEA90", VA = "0x9DEA90")]
	public void hardDifficultyButtonPressed()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x9DE9F0", Offset = "0x9DE9F0", VA = "0x9DE9F0")]
	private void updateDifficulty(GameDifficulty difficulty)
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x9DE874", Offset = "0x9DE874", VA = "0x9DE874")]
	public void updateToggleButtons()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x9DEA98", Offset = "0x9DEA98", VA = "0x9DEA98")]
	public GameDifficultyDisplay()
	{
	}
}
[Token(Token = "0x20001F9")]
public class GameHubPanel : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE320", Offset = "0x7CE320")]
	private sealed class <>c
	{
		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__16_0;

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x9E0434", Offset = "0x9E0434", VA = "0x9E0434")]
		public <>c()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x9E043C", Offset = "0x9E043C", VA = "0x9E043C")]
		internal bool <panelDidMoveIn>b__16_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000C5E")]
	private const GameMode ArcadeMode = GameMode.Arcade;

	[Token(Token = "0x4000C5F")]
	private const GameMode Story = GameMode.Story;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D348C", Offset = "0x7D348C")]
	public SimpleShootableButton arcadeModeButton;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D34C4", Offset = "0x7D34C4")]
	public ContentUnlockingAnimation contentUnlocking;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D34FC", Offset = "0x7D34FC")]
	public MissionDisplay missionDisplay;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text playStoryLabel;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text playArcadeLabel;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3534", Offset = "0x7D3534")]
	public GameObject activeEventCalloutParent;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text activeEventLabel;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject inactiveEventCalloutParent;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text inactiveEventLabel;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D356C", Offset = "0x7D356C")]
	public PilotInformationDisplay pilotInformation;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SettingsPanel settings;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D35A4", Offset = "0x7D35A4")]
	public CreditsPanel creditsPanel;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool firstTimeShow;

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x9DF380", Offset = "0x9DF380", VA = "0x9DF380")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x9DF990", Offset = "0x9DF990", VA = "0x9DF990")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x9DFAF0", Offset = "0x9DFAF0", VA = "0x9DFAF0")]
	private void panelWillMoveOut()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x9DFC78", Offset = "0x9DFC78", VA = "0x9DFC78")]
	public void creditsButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x9DFC94", Offset = "0x9DFC94", VA = "0x9DFC94")]
	public void openSettingsButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x9DFCD0", Offset = "0x9DFCD0", VA = "0x9DFCD0")]
	public void closeSettingsButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x9DFCD8", Offset = "0x9DFCD8", VA = "0x9DFCD8")]
	public void playStoryModeButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x9DFD8C", Offset = "0x9DFD8C", VA = "0x9DFD8C")]
	public void playArcadeModeButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x9DFEC4", Offset = "0x9DFEC4", VA = "0x9DFEC4")]
	public void replayTutorialButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x9DF7D0", Offset = "0x9DF7D0", VA = "0x9DF7D0")]
	private void setDefaultLeftHandDisplayState([Optional] object note)
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x9DFCE0", Offset = "0x9DFCE0", VA = "0x9DFCE0")]
	private void playCurrentWorldInMode(GameMode mode)
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x9DF848", Offset = "0x9DF848", VA = "0x9DF848")]
	private void updatePanel()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x9DFF54", Offset = "0x9DFF54", VA = "0x9DFF54")]
	private void updateArcadeDisplays()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x9E0300", Offset = "0x9E0300", VA = "0x9E0300")]
	public GameHubPanel()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x9E0310", Offset = "0x9E0310", VA = "0x9E0310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D843C", Offset = "0x7D843C")]
	private void <panelDidMoveIn>b__16_1()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x9E03B0", Offset = "0x9E03B0", VA = "0x9E03B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D844C", Offset = "0x7D844C")]
	private void <panelDidMoveIn>b__16_2()
	{
	}
}
[Token(Token = "0x20001FA")]
public class GameOverPanel : MonoBehaviour
{
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE330", Offset = "0x7CE330")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameOverPanel <>4__this;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameMode currentMode;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStoryFinale;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float mainDelay;

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x9E0910", Offset = "0x9E0910", VA = "0x9E0910")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x9E0938", Offset = "0x9E0938", VA = "0x9E0938")]
		internal void <gameOverSequence>b__0()
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x9E0BB4", Offset = "0x9E0BB4", VA = "0x9E0BB4")]
		internal void <gameOverSequence>b__1()
		{
		}
	}

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D35DC", Offset = "0x7D35DC")]
	public float waitOnWin;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float waitOnLoss;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delayUntilVictoryMessage;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float messageDurationPercent;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3614", Offset = "0x7D3614")]
	public GameObject gameOverEffect;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float delayUntilMainMenu;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float delayUntilMainMenuLoss;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isWin;

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x9E04BC", Offset = "0x9E04BC", VA = "0x9E04BC")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x9E0544", Offset = "0x9E0544", VA = "0x9E0544")]
	private void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x9E0620", Offset = "0x9E0620", VA = "0x9E0620")]
	private void panelDidMoveIn()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x9E0624", Offset = "0x9E0624", VA = "0x9E0624")]
	private void gameOverSequence()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x9E0918", Offset = "0x9E0918", VA = "0x9E0918")]
	public GameOverPanel()
	{
	}
}
[Token(Token = "0x20001FB")]
public class GameplayPanel : MonoBehaviour
{
	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D364C", Offset = "0x7D364C")]
	public Transform contentScaleParent;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3684", Offset = "0x7D3684")]
	public float arcadeModeScaleFactor;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D36BC", Offset = "0x7D36BC")]
	public CanvasGroup theCanvasGroup;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeDuration;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float waitAfterGameOver;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D36F4", Offset = "0x7D36F4")]
	public GameObject scoreParent;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text scoreCounterLabel;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform scoreCointPopObject;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color comboColorTop;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color comboColorBottom;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D372C", Offset = "0x7D372C")]
	public RawImage scoreBacking;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material baseMaterial;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material comboMaterial;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3764", Offset = "0x7D3764")]
	public GameObject timerParent;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_Text timerLabel;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color normalColorTop;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color normalColorBottom;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Color lowColorTop;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color lowColorBottom;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D379C", Offset = "0x7D379C")]
	public HealthBar healthBar;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public HealthBar healthBarTwo;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float currentShowingScore;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float currentVelocity;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string scoreTemplate;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float timerDuration;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private VertexGradient lowColor;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private VertexGradient normalColor;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private VertexGradient comboColor;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private bool hasTriedArcadeMusicChange;

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x9E5200", Offset = "0x9E5200", VA = "0x9E5200")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x9E5A68", Offset = "0x9E5A68", VA = "0x9E5A68")]
	private void updateGameplayTimer()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x9E5BEC", Offset = "0x9E5BEC", VA = "0x9E5BEC")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x9E5C7C", Offset = "0x9E5C7C", VA = "0x9E5C7C")]
	public void panelDidMoveOut()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x9E5E2C", Offset = "0x9E5E2C", VA = "0x9E5E2C")]
	private void updateScoreCount()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x9E5EFC", Offset = "0x9E5EFC", VA = "0x9E5EFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x9E65A4", Offset = "0x9E65A4", VA = "0x9E65A4")]
	private void updateBossHealth(object note)
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x9E5920", Offset = "0x9E5920", VA = "0x9E5920")]
	private void disableBossHealth()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x9E665C", Offset = "0x9E665C", VA = "0x9E665C")]
	private void updateBossHealthTwo(object note)
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x9E59C4", Offset = "0x9E59C4", VA = "0x9E59C4")]
	private void disableBossHealthTwo()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x9E65B4", Offset = "0x9E65B4", VA = "0x9E65B4")]
	private void updateHealthBar(HealthBar target, object note)
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x9E66F4", Offset = "0x9E66F4", VA = "0x9E66F4")]
	private void popTimerParent()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x9E67E0", Offset = "0x9E67E0", VA = "0x9E67E0")]
	public GameplayPanel()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x9E67F8", Offset = "0x9E67F8", VA = "0x9E67F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D845C", Offset = "0x7D845C")]
	private void <panelDidMoveIn>b__31_0(float alpha)
	{
	}
}
[Token(Token = "0x20001FC")]
public class LeaderboardDisplay : MonoBehaviour
{
	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE340", Offset = "0x7CE340")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int scoreThisLevel;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LeaderboardDisplay <>4__this;

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x9C0770", Offset = "0x9C0770", VA = "0x9C0770")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x9C0818", Offset = "0x9C0818", VA = "0x9C0818")]
		internal void <updateDataDisplay>b__1()
		{
		}
	}

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D37D4", Offset = "0x7D37D4")]
	public int entriesToDisplayCount;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool alwaysDisplayScores;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool isPostGameplayDisplay;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D380C", Offset = "0x7D380C")]
	public LoadingOverlay loadingOverlay;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LeaderboardEntryDisplay entryTemplate;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject entryParent;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CanvasGroup entriesCanvasGroup;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float fadeDownAmount;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TypedObjectPool<LeaderboardEntryDisplay> entryPool;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3844", Offset = "0x7D3844")]
	public GameObject noScoreMessageParent;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text noScoreLabel;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string noScoreMessageKey;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D387C", Offset = "0x7D387C")]
	public Transform currentScoreObject;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform highScoreObject;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Animator scorePopAnimator;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float currentScoreDelay;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float highScoreDelay;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D38B4", Offset = "0x7D38B4")]
	public GameObject toggleButtonParent;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UIButtonToggle worldToggle;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UIButtonToggle friendsToggle;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string leaderboardLoaded;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int rankToCheck;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private long scoreToCheck;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool checkForAnimation;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool hasPlayedAssociatedGameplay;

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x9BF3A8", Offset = "0x9BF3A8", VA = "0x9BF3A8")]
	public void loadLeaderboard(string leaderboardId, int previousUserRank = -1, long previousHighScore = 0L, bool hasPlayedAssociatedGameplay = true)
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x9BF9E4", Offset = "0x9BF9E4", VA = "0x9BF9E4")]
	public void unloadLeaderboard()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x9BFA84", Offset = "0x9BFA84", VA = "0x9BFA84")]
	public void worldFilterButtonPressed()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x9BFB58", Offset = "0x9BFB58", VA = "0x9BFB58")]
	public void friendsFilterButtonPressed()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x9BF71C", Offset = "0x9BF71C", VA = "0x9BF71C")]
	private void updateFilterToggles()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x9BFC34", Offset = "0x9BFC34", VA = "0x9BFC34")]
	private void updateDataDisplay(object note)
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x9C0484", Offset = "0x9C0484", VA = "0x9C0484")]
	private void animationComplete()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x9BF850", Offset = "0x9BF850", VA = "0x9BF850")]
	private void showNoScoreMessage()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x9C04AC", Offset = "0x9C04AC", VA = "0x9C04AC")]
	private void showMessage(string message)
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x9BF968", Offset = "0x9BF968", VA = "0x9BF968")]
	private void updateLoadingOverlay(bool isActive)
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x9C0544", Offset = "0x9C0544", VA = "0x9C0544")]
	public LeaderboardDisplay()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x9C057C", Offset = "0x9C057C", VA = "0x9C057C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D846C", Offset = "0x7D846C")]
	private void <updateDataDisplay>b__30_0()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x9C0778", Offset = "0x9C0778", VA = "0x9C0778")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D847C", Offset = "0x7D847C")]
	private void <showNoScoreMessage>b__32_0()
	{
	}
}
[Token(Token = "0x20001FD")]
public class LeaderboardEntryDisplay : MonoBehaviour
{
	[Token(Token = "0x2000378")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE350", Offset = "0x7CE350")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderboardEntryDisplay <>4__this;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isAnimatingRank;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int rankToCheck;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardScore score;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isAnimatingScore;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long scoreToCheck;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action animationComplete;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<float> <>9__1;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<float> <>9__3;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__4;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action <>9__2;

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x9C0CFC", Offset = "0x9C0CFC", VA = "0x9C0CFC")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x9C0DB0", Offset = "0x9C0DB0", VA = "0x9C0DB0")]
		internal void <updateForEntryWithAnimation>b__0()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x9C0EEC", Offset = "0x9C0EEC", VA = "0x9C0EEC")]
		internal void <updateForEntryWithAnimation>b__1(float alpha)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x9C1210", Offset = "0x9C1210", VA = "0x9C1210")]
		internal void <updateForEntryWithAnimation>b__2()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x9C1314", Offset = "0x9C1314", VA = "0x9C1314")]
		internal void <updateForEntryWithAnimation>b__3(float alpha)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x9C1404", Offset = "0x9C1404", VA = "0x9C1404")]
		internal void <updateForEntryWithAnimation>b__4()
		{
		}
	}

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D38EC", Offset = "0x7D38EC")]
	public CanvasGroup theCanvasGroup;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3924", Offset = "0x7D3924")]
	public Image background;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color userBgColor;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color otherBgColor;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D395C", Offset = "0x7D395C")]
	public TMP_Text rankLabel;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text scoreLabel;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text nameLabel;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3994", Offset = "0x7D3994")]
	public Color baseColor;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color animatingColor;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D39CC", Offset = "0x7D39CC")]
	public AnimationCurve animateScaleCurve;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ParticleSystem animationVFX;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LeaderboardScore trackedScore;

	[Token(Token = "0x4000CB7")]
	private const float PauseBeforeStart = 0.5f;

	[Token(Token = "0x4000CB8")]
	private const float SharedAnimTime = 0.9f;

	[Token(Token = "0x4000CB9")]
	private const float PauseAtEnd = 0.1f;

	[Token(Token = "0x4000CBA")]
	private const float ScaleChange = 1.2f;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine pauseRoutine;

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x9C0480", Offset = "0x9C0480", VA = "0x9C0480")]
	public void updateForEntry(LeaderboardScore score)
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x9C0174", Offset = "0x9C0174", VA = "0x9C0174")]
	public bool updateForEntryWithAnimation(LeaderboardScore score, int rankToCheck, long scoreToCheck, Action animationComplete)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x9C0B08", Offset = "0x9C0B08", VA = "0x9C0B08")]
	private void updateEntryShared(LeaderboardScore score)
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x9C090C", Offset = "0x9C090C", VA = "0x9C090C")]
	public void checkForScorePopups(int scoreThisLevel, Transform highScoreObject, Transform currentScoreObject, Animator scorePopAnimator)
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x9C0D04", Offset = "0x9C0D04", VA = "0x9C0D04")]
	private void setLabelColor(Color theColor)
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x9C0DA8", Offset = "0x9C0DA8", VA = "0x9C0DA8")]
	public LeaderboardEntryDisplay()
	{
	}
}
[Token(Token = "0x20001FE")]
public class LoadingOverlay : MonoBehaviour
{
	[Token(Token = "0x2000379")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE360", Offset = "0x7CE360")]
	private sealed class <loadingLoop>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingOverlay <>4__this;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600191B")]
			[Address(RVA = "0xA5B164", Offset = "0xA5B164", VA = "0xA5B164", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600191D")]
			[Address(RVA = "0xA5B1CC", Offset = "0xA5B1CC", VA = "0xA5B1CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xA5AF30", Offset = "0xA5AF30", VA = "0xA5AF30")]
		[DebuggerHidden]
		public <loadingLoop>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xA5AF64", Offset = "0xA5AF64", VA = "0xA5AF64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xA5AF68", Offset = "0xA5AF68", VA = "0xA5AF68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xA5B16C", Offset = "0xA5B16C", VA = "0xA5B16C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text displayLabel;

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xA5AE80", Offset = "0xA5AE80", VA = "0xA5AE80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xA5AF28", Offset = "0xA5AF28", VA = "0xA5AF28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xA5AEAC", Offset = "0xA5AEAC", VA = "0xA5AEAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D848C", Offset = "0x7D848C")]
	private IEnumerator loadingLoop()
	{
		return null;
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xA5AF5C", Offset = "0xA5AF5C", VA = "0xA5AF5C")]
	public LoadingOverlay()
	{
	}
}
[Token(Token = "0x20001FF")]
public class ObjectiveUIDisplay : MonoBehaviour
{
	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text objectiveCount;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform icon;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectiveComplete;

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xAF8318", Offset = "0xAF8318", VA = "0xAF8318")]
	public void loadObjective()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xAF84C4", Offset = "0xAF84C4", VA = "0xAF84C4")]
	public ObjectiveUIDisplay()
	{
	}
}
[Token(Token = "0x2000200")]
public sealed class PausePanel : MonoBehaviour
{
	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject backToMainButton;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button panelBackgroundButton;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button controlButton;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text controlLabel;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hasBeenPaused;

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xB07250", Offset = "0xB07250", VA = "0xB07250")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xB07348", Offset = "0xB07348", VA = "0xB07348")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xB072B4", Offset = "0xB072B4", VA = "0xB072B4")]
	private void pause(bool isPaused)
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xB07368", Offset = "0xB07368", VA = "0xB07368")]
	public void resumeButtonWasPressed()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xB073F0", Offset = "0xB073F0", VA = "0xB073F0")]
	public void mainMenuButtonWasPressed()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xB073F4", Offset = "0xB073F4", VA = "0xB073F4")]
	public PausePanel()
	{
	}
}
[Token(Token = "0x2000201")]
public sealed class PleaseWaitPanel : MonoBehaviour
{
	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xAA0AE0", Offset = "0xAA0AE0", VA = "0xAA0AE0")]
	public static void show()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xAA0B38", Offset = "0xAA0B38", VA = "0xAA0B38")]
	public static void hide()
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xAA0B84", Offset = "0xAA0B84", VA = "0xAA0B84")]
	public PleaseWaitPanel()
	{
	}
}
[Token(Token = "0x2000202")]
public class PostTutorialPanel : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE370", Offset = "0x7CE370")]
	private sealed class <>c
	{
		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__10_0;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__10_1;

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xAA3B3C", Offset = "0xAA3B3C", VA = "0xAA3B3C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xAA3B44", Offset = "0xAA3B44", VA = "0xAA3B44")]
		internal void <startButtonWasPressed>b__10_0()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xAA3BBC", Offset = "0xAA3BBC", VA = "0xAA3BBC")]
		internal void <startButtonWasPressed>b__10_1()
		{
		}
	}

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MissionDisplay missionDisplay;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameDifficultyDisplay difficultyDisplay;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3A04", Offset = "0x7D3A04")]
	public GameObject popupParent;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text difficultyDescriptionLabel;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float popupShowTime;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3A3C", Offset = "0x7D3A3C")]
	public float terrainFadeDelay;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float pregameProcessDelay;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeToHideDifficultyPopup;

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xAA357C", Offset = "0xAA357C", VA = "0xAA357C")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xAA3684", Offset = "0xAA3684", VA = "0xAA3684")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xAA3708", Offset = "0xAA3708", VA = "0xAA3708")]
	public void startButtonWasPressed()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xAA3974", Offset = "0xAA3974", VA = "0xAA3974")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xAA39D8", Offset = "0xAA39D8", VA = "0xAA39D8")]
	public void easyDifficultyHovered()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xAA3AA4", Offset = "0xAA3AA4", VA = "0xAA3AA4")]
	public void mediumDifficultyHovered()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xAA3AAC", Offset = "0xAA3AAC", VA = "0xAA3AAC")]
	public void hardDifficultyHovered()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xAA39E0", Offset = "0xAA39E0", VA = "0xAA39E0")]
	private void showDifficultyDescription(GameDifficulty difficulty)
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xAA3AB4", Offset = "0xAA3AB4", VA = "0xAA3AB4")]
	public PostTutorialPanel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000203")]
public struct StringSpritePairing
{
	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string pairId;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Sprite pairSprite;
}
[Token(Token = "0x2000204")]
public class PowerupStatsDisplay : MonoBehaviour
{
	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3A74", Offset = "0x7D3A74")]
	public List<StringSpritePairing> iconsForPowerups;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite defaultSpriteIcon;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PowerupStatDisplay statDisplayTemplate;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TypedObjectPool<PowerupStatDisplay> powerupStatDisplayPool;

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xAC0158", Offset = "0xAC0158", VA = "0xAC0158")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xAC01F8", Offset = "0xAC01F8", VA = "0xAC01F8")]
	public void hideElements()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xAC02B0", Offset = "0xAC02B0", VA = "0xAC02B0")]
	public void updateDisplay(Dictionary<string, int> powerupWeightings)
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xAC053C", Offset = "0xAC053C", VA = "0xAC053C")]
	private Sprite iconForPowerupId(string powerupId)
	{
		return null;
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xAC0680", Offset = "0xAC0680", VA = "0xAC0680")]
	public PowerupStatsDisplay()
	{
	}
}
[Token(Token = "0x2000205")]
public class PreGamePanel : MonoBehaviour
{
	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tutorialPopUp;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator MoveInAnimator;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PanelMover mover;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3AAC", Offset = "0x7D3AAC")]
	public TMP_Text FXAAToggleLabel;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text BloomToggleLabel;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text displayBufferLabel;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text hdrDisplayLabel;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool FXAAToggle;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool BloomToggle;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool displayBufferToggle;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool hdrDisplayToggle;

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xAC0910", Offset = "0xAC0910", VA = "0xAC0910")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xAC0AA4", Offset = "0xAC0AA4", VA = "0xAC0AA4")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xAC0B7C", Offset = "0xAC0B7C", VA = "0xAC0B7C")]
	public void startGameplayButtonWasPressed()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xAC0C7C", Offset = "0xAC0C7C", VA = "0xAC0C7C")]
	public void debugCheckpointButtonPressed(int checkpointIndex)
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xAC0E74", Offset = "0xAC0E74", VA = "0xAC0E74")]
	public void debugToggleFXAA()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xAC0F1C", Offset = "0xAC0F1C", VA = "0xAC0F1C")]
	private void updateFXAAToggleLabel()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xAC0FF0", Offset = "0xAC0FF0", VA = "0xAC0FF0")]
	public void debugToggleBloom()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xAC1098", Offset = "0xAC1098", VA = "0xAC1098")]
	private void updateBloomToggleLabel()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xAC116C", Offset = "0xAC116C", VA = "0xAC116C")]
	public PreGamePanel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000206")]
public class LanguageToggles
{
	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE380", Offset = "0x7CE380")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LanguageToggles <>4__this;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action panelUpdateAction;

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x9BEA98", Offset = "0x9BEA98", VA = "0x9BEA98")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x9BEB2C", Offset = "0x9BEB2C", VA = "0x9BEB2C")]
		internal void <updateState>b__0()
		{
		}
	}

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SystemLanguage language;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButtonToggle toggleButton;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasSetupCallback;

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x9BE804", Offset = "0x9BE804", VA = "0x9BE804")]
	public void updateState(Action panelUpdateAction)
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x9BEAA0", Offset = "0x9BEAA0", VA = "0x9BEAA0")]
	private void buttonWasPressed()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x9BEB24", Offset = "0x9BEB24", VA = "0x9BEB24")]
	public LanguageToggles()
	{
	}
}
[Token(Token = "0x2000207")]
public class SettingsPanel : MonoBehaviour
{
	[Token(Token = "0x4000CE1")]
	private const string AutofireSettingsKey = "settings_IsAutofireOnAimEnabled";

	[Token(Token = "0x4000CE2")]
	private const string AimingLaserSettingsKey = "settings_IsAimingLaserEnabled";

	[Token(Token = "0x4000CE3")]
	private const string DefaultHandSettingsKey = "settings_DefaultHand";

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3AE4", Offset = "0x7D3AE4")]
	public TMP_Text musicVolumeLevel;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider musicSlider;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text soundFXVolumeLevel;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider soundFXSlider;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3B1C", Offset = "0x7D3B1C")]
	public UIButtonToggle autofireToggle;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text autofireButtonLabel;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIButtonToggle aimingLaserToggle;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text aimingLaserButtonLabel;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIButtonToggle defaultHandToggle;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_Text defaultHandButtonLabel;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3B54", Offset = "0x7D3B54")]
	public TMP_Text versionLabel;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3B8C", Offset = "0x7D3B8C")]
	public UIButtonToggle highQualityToggle;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_Text highQualityButtonLabel;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3BC4", Offset = "0x7D3BC4")]
	public UIButtonToggle antiAliasingToggle;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TMP_Text antiAliasingButtonLabel;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3BFC", Offset = "0x7D3BFC")]
	public UIButtonToggle postProcessingToggle;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TMP_Text postProcessingButtonLabel;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UIButtonToggle bloomToggle;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TMP_Text bloomButtonLabel;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UIButtonToggle colorGradingToggle;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TMP_Text colorGradingButtonLabel;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UIButtonToggle vignetteToggle;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TMP_Text vignetteButtonLabel;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3C34", Offset = "0x7D3C34")]
	public UIButtonToggle generalTabToggle;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UIButtonToggle graphicsTabToggle;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UIButtonToggle languageTabToggle;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3C6C", Offset = "0x7D3C6C")]
	public GameObject generalTab;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject graphicsTab;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject languageTab;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3CA4", Offset = "0x7D3CA4")]
	public List<LanguageToggles> languageToggles;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3CDC", Offset = "0x7D3CDC")]
	public GameObject delMarGraphicsTab;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public TMP_Text currentSelectedModeDescription;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UIButtonToggle powerSaverToggle;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public UIButtonToggle highFrequencyToggle;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public UIButtonToggle postFXToggle;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private SoundController soundController;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private string onLabel;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private string offLabel;

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xACEBCC", Offset = "0xACEBCC", VA = "0xACEBCC")]
	public void activate()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xACF098", Offset = "0xACF098", VA = "0xACF098")]
	public void deactivate()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xACEF04", Offset = "0xACEF04", VA = "0xACEF04")]
	public void showGeneralTab()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xACF5C4", Offset = "0xACF5C4", VA = "0xACF5C4")]
	public void showGraphicsTab()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xACFA18", Offset = "0xACFA18", VA = "0xACFA18")]
	public void showLanguageTab()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xACF0C0", Offset = "0xACF0C0", VA = "0xACF0C0")]
	private void showTab(GameObject tabToShow)
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xACFB14", Offset = "0xACFB14", VA = "0xACFB14")]
	private void musicSliderUpdated(float value)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xACFB5C", Offset = "0xACFB5C", VA = "0xACFB5C")]
	private void soundFXSliderUpdated(float value)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xACFBA4", Offset = "0xACFBA4", VA = "0xACFBA4")]
	public void toggleHighQualityGraphicsButtonPressed()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xACFC28", Offset = "0xACFC28", VA = "0xACFC28")]
	public void cycleAntiAliasingButtonPressed()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xACFDEC", Offset = "0xACFDEC", VA = "0xACFDEC")]
	public void togglePostProcessingButtonPressed()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xACFFC8", Offset = "0xACFFC8", VA = "0xACFFC8")]
	public void toggleBloomButtonPressed()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xAD004C", Offset = "0xAD004C", VA = "0xAD004C")]
	public void toggleColorGradingButtonPressed()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xAD00D0", Offset = "0xAD00D0", VA = "0xAD00D0")]
	public void toggleVignetteButtonPressed()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xAD0154", Offset = "0xAD0154", VA = "0xAD0154")]
	public void toggleAutofireButtonPressed()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xAD0258", Offset = "0xAD0258", VA = "0xAD0258")]
	public void toggleAimingLaserButtonPressed()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xAD035C", Offset = "0xAD035C", VA = "0xAD035C")]
	public void toggleDefaultHandButtonPressed()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xACF284", Offset = "0xACF284", VA = "0xACF284")]
	private void updateSoundDisplay()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xACEF44", Offset = "0xACEF44", VA = "0xACEF44")]
	private void updateVersionLabel()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xACF3D4", Offset = "0xACF3D4", VA = "0xACF3D4")]
	private void updateAutofireToggle()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xACF454", Offset = "0xACF454", VA = "0xACF454")]
	private void updateAimingLaserToggle()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xACF4D4", Offset = "0xACF4D4", VA = "0xACF4D4")]
	private void updateDefaultHandToggle()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xACF7A8", Offset = "0xACF7A8", VA = "0xACF7A8")]
	private void updateAllGraphicsToggles()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xACFCAC", Offset = "0xACFCAC", VA = "0xACFCAC")]
	private void updateAntiAliasingToggle()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xACFE70", Offset = "0xACFE70", VA = "0xACFE70")]
	private void updatePostProcessingToggles()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xAD04CC", Offset = "0xAD04CC", VA = "0xAD04CC")]
	private void updateToggleButton(UIButtonToggle toggleButton, TMP_Text buttonLabel, bool isTargetEnabled, bool isInteractable)
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xACFA40", Offset = "0xACFA40", VA = "0xACFA40")]
	private void updateLanguageTab()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xACF704", Offset = "0xACF704", VA = "0xACF704")]
	private void refreshOnOffLabels()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xAD01E8", Offset = "0xAD01E8", VA = "0xAD01E8")]
	public static bool IsAutofireEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xAD02EC", Offset = "0xAD02EC", VA = "0xAD02EC")]
	public static bool IsAimingLaserEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xAD0440", Offset = "0xAD0440", VA = "0xAD0440")]
	public static MightyVRControlSide DefaultPlayerHand()
	{
		return default(MightyVRControlSide);
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xAD0558", Offset = "0xAD0558", VA = "0xAD0558")]
	public void setDelMarHighFrequency()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xAD05E0", Offset = "0xAD05E0", VA = "0xAD05E0")]
	public void setDelMarPowerSaver()
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xAD0668", Offset = "0xAD0668", VA = "0xAD0668")]
	public void setDelMarPostFX()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xACF890", Offset = "0xACF890", VA = "0xACF890")]
	private void updateDelMarGraphicsToggle()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xAD06F0", Offset = "0xAD06F0", VA = "0xAD06F0")]
	public SettingsPanel()
	{
	}
}
[Token(Token = "0x2000208")]
public class SpaceFinalePanel : MonoBehaviour
{
	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isWin;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3D14", Offset = "0x7D3D14")]
	public GameObject centralDisplayParent;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject logoParent;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CreditsPanel creditsPanel;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject panelVFX;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3D4C", Offset = "0x7D3D4C")]
	public TMP_Text scoreLabel;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3D84", Offset = "0x7D3D84")]
	public TMP_Text messageLabel;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3DBC", Offset = "0x7D3DBC")]
	public GameObject continueButtonParent;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text continueButtonLabel;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject restartButtonParent;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject mainMenuButtonParent;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject creditsButtonParent;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3DF4", Offset = "0x7D3DF4")]
	public GameObject unlockPilotsCallout;

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xA0F4CC", Offset = "0xA0F4CC", VA = "0xA0F4CC")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xA0F850", Offset = "0xA0F850", VA = "0xA0F850")]
	private void updateCheckpointRelatedItems()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xA0FA28", Offset = "0xA0FA28", VA = "0xA0FA28")]
	private void updateScoreDisplay()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xA0FB88", Offset = "0xA0FB88", VA = "0xA0FB88")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xA0FC30", Offset = "0xA0FC30", VA = "0xA0FC30")]
	public void mainMenuButtonPressed()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xA0FD34", Offset = "0xA0FD34", VA = "0xA0FD34")]
	public void restartButtonWasPressed()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xA0FED8", Offset = "0xA0FED8", VA = "0xA0FED8")]
	public void continueButtonPressed()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xA0FD3C", Offset = "0xA0FD3C", VA = "0xA0FD3C")]
	private void beginLevel(bool clearProgress)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xA0FEE0", Offset = "0xA0FEE0", VA = "0xA0FEE0")]
	public void creditsButtonPressed()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xA0FFB4", Offset = "0xA0FFB4", VA = "0xA0FFB4")]
	public void debugCheckpointButtonPressed(int checkpointIndex)
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xA0F7FC", Offset = "0xA0F7FC", VA = "0xA0F7FC")]
	private void showMainDisplay()
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xA101B8", Offset = "0xA101B8", VA = "0xA101B8")]
	public SpaceFinalePanel()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xA101C0", Offset = "0xA101C0", VA = "0xA101C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D84F0", Offset = "0x7D84F0")]
	private void <creditsButtonPressed>b__21_0()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xA101E0", Offset = "0xA101E0", VA = "0xA101E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8500", Offset = "0x7D8500")]
	private void <creditsButtonPressed>b__21_1()
	{
	}
}
[Token(Token = "0x2000209")]
public enum CalloutType
{
	[Token(Token = "0x4000D18")]
	bomb = 6,
	[Token(Token = "0x4000D19")]
	shuffler = 10,
	[Token(Token = "0x4000D1A")]
	mallet = 13,
	[Token(Token = "0x4000D1B")]
	freeze = 14
}
[Token(Token = "0x200020A")]
public sealed class SupportRedeemPanel : MonoBehaviour
{
	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string currentTutorial;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeWhenPanelMovedIn;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text content;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text itemName;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject tuteIcons;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bombIcon;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TapToContinue tapToContinue;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float delayUntilTappable;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool debounce;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action completion;

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xA130E4", Offset = "0xA130E4", VA = "0xA130E4")]
	public static void showRedeemPanel(string contentKey, [Optional] Action completion)
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xA131D4", Offset = "0xA131D4", VA = "0xA131D4")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xA13580", Offset = "0xA13580", VA = "0xA13580")]
	private void activateItem(string itemID)
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xA13668", Offset = "0xA13668", VA = "0xA13668")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xA13670", Offset = "0xA13670", VA = "0xA13670")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xA13698", Offset = "0xA13698", VA = "0xA13698")]
	public void panelDidTap()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xA13740", Offset = "0xA13740", VA = "0xA13740")]
	private void buttonDidPress()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xA13858", Offset = "0xA13858", VA = "0xA13858")]
	public void panelDidMoveOut()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xA1386C", Offset = "0xA1386C", VA = "0xA1386C")]
	public SupportRedeemPanel()
	{
	}
}
[Token(Token = "0x200020B")]
public sealed class TapToContinue : MonoBehaviour
{
	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tapToContinue;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject clickToContinue;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pressKeyToContinue;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pressButtonToContinue;

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xA134EC", Offset = "0xA134EC", VA = "0xA134EC")]
	public void setVisible(bool isActive)
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xA13D68", Offset = "0xA13D68", VA = "0xA13D68")]
	public TapToContinue()
	{
	}
}
[Token(Token = "0x200020C")]
public sealed class TopBar : SingletonMono<TopBar>
{
	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text coinCount;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text premiumCount;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text heartCount;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text heartTimer;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject holder;

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xA19C98", Offset = "0xA19C98", VA = "0xA19C98")]
	public static void show(bool visible)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xA19D20", Offset = "0xA19D20", VA = "0xA19D20")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xA19E64", Offset = "0xA19E64", VA = "0xA19E64")]
	public void optionsButtonWasPressed()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xA19EB4", Offset = "0xA19EB4", VA = "0xA19EB4")]
	public void updateCoins()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xA19EB8", Offset = "0xA19EB8", VA = "0xA19EB8")]
	public TopBar()
	{
	}
}
[Token(Token = "0x200020D")]
public class TournamentCompletePanel : MonoBehaviour
{
	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE390", Offset = "0x7CE390")]
	private sealed class <eventStartedCheck>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <isChecking>5__3;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xA1B240", Offset = "0xA1B240", VA = "0xA1B240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xA1B2A8", Offset = "0xA1B2A8", VA = "0xA1B2A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xA1B068", Offset = "0xA1B068", VA = "0xA1B068")]
		[DebuggerHidden]
		public <eventStartedCheck>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xA1B09C", Offset = "0xA1B09C", VA = "0xA1B09C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xA1B0A0", Offset = "0xA1B0A0", VA = "0xA1B0A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xA1B248", Offset = "0xA1B248", VA = "0xA1B248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3E2C", Offset = "0x7D3E2C")]
	public GameObject previousEventContentParent;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text oldEventNameLabel;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text oldEventDateLabel;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LeaderboardDisplay leaderboardDisplay;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3E64", Offset = "0x7D3E64")]
	public GameObject nextEventParent;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text eventNameHeader;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text eventCountdownLabel;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image pilotIcon;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image worldImage;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string countdownTemplate;

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xA19F28", Offset = "0xA19F28", VA = "0xA19F28")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xA1A970", Offset = "0xA1A970", VA = "0xA1A970")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xA1A9FC", Offset = "0xA1A9FC", VA = "0xA1A9FC")]
	public void panelDidMoveOut()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xA1AA30", Offset = "0xA1AA30", VA = "0xA1AA30")]
	private void Update()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xA1A23C", Offset = "0xA1A23C", VA = "0xA1A23C")]
	private void updatePreviousEventDisplay()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xA1A71C", Offset = "0xA1A71C", VA = "0xA1A71C")]
	private void updateUpcomingEventDisplay()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xA1B018", Offset = "0xA1B018", VA = "0xA1B018")]
	public void hubButtonPressed()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xA1A99C", Offset = "0xA1A99C", VA = "0xA1A99C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D8510", Offset = "0x7D8510")]
	private IEnumerator eventStartedCheck()
	{
		return null;
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xA1B094", Offset = "0xA1B094", VA = "0xA1B094")]
	public TournamentCompletePanel()
	{
	}
}
[Token(Token = "0x200020E")]
public class TournamentModifierElement : MonoBehaviour, IRaycastable
{
	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3E9C", Offset = "0x7D3E9C")]
	public TMP_Text modifierLabel;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image modifierIcon;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3ED4", Offset = "0x7D3ED4")]
	public ButtonUnityEvent onHoverEvent;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D3F0C", Offset = "0x7D3F0C")]
	private string <description>k__BackingField;

	[Token(Token = "0x17000076")]
	public string description
	{
		[Token(Token = "0x6001014")]
		[Address(RVA = "0xA1EA0C", Offset = "0xA1EA0C", VA = "0xA1EA0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8574", Offset = "0x7D8574")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001015")]
		[Address(RVA = "0xA1EA14", Offset = "0xA1EA14", VA = "0xA1EA14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8584", Offset = "0x7D8584")]
		private set
		{
		}
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xA1EA1C", Offset = "0xA1EA1C", VA = "0xA1EA1C")]
	public void updateDisplay(Sprite modifierSprite, string label, string description)
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xA1EAB4", Offset = "0xA1EAB4", VA = "0xA1EAB4", Slot = "4")]
	public bool canBeHit()
	{
		return default(bool);
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xA1EABC", Offset = "0xA1EABC", VA = "0xA1EABC", Slot = "5")]
	public void raycastHit(Vector3 hitpoint)
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xA1EB0C", Offset = "0xA1EB0C", VA = "0xA1EB0C")]
	public TournamentModifierElement()
	{
	}
}
[Token(Token = "0x200020F")]
public class TournamentOnboardPanel : MonoBehaviour
{
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE3A0", Offset = "0x7CE3A0")]
	private sealed class <showElementsAnimation>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentOnboardPanel <>4__this;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600192D")]
			[Address(RVA = "0xA1F110", Offset = "0xA1F110", VA = "0xA1F110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600192F")]
			[Address(RVA = "0xA1F178", Offset = "0xA1F178", VA = "0xA1F178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xA1EDC8", Offset = "0xA1EDC8", VA = "0xA1EDC8")]
		[DebuggerHidden]
		public <showElementsAnimation>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xA1EF5C", Offset = "0xA1EF5C", VA = "0xA1EF5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xA1EF60", Offset = "0xA1EF60", VA = "0xA1EF60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xA1F118", Offset = "0xA1F118", VA = "0xA1F118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3F1C", Offset = "0x7D3F1C")]
	public TMP_Text headerLabel;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3F54", Offset = "0x7D3F54")]
	public GameObject headerText;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject messageText;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject continueButton;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3F8C", Offset = "0x7D3F8C")]
	public float waitBeforeStart;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float waitBeforeMessage;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float waitBeforeButton;

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xA1EB14", Offset = "0xA1EB14", VA = "0xA1EB14")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xA1ED20", Offset = "0xA1ED20", VA = "0xA1ED20")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xA1ED4C", Offset = "0xA1ED4C", VA = "0xA1ED4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D8594", Offset = "0x7D8594")]
	private IEnumerator showElementsAnimation()
	{
		return null;
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xA1EC80", Offset = "0xA1EC80", VA = "0xA1EC80")]
	private void resetElement(GameObject target)
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xA1EDF4", Offset = "0xA1EDF4", VA = "0xA1EDF4")]
	private void showElement(GameObject target)
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xA1EE98", Offset = "0xA1EE98", VA = "0xA1EE98")]
	public void continueButtonWasPressed()
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xA1EF44", Offset = "0xA1EF44", VA = "0xA1EF44")]
	public TournamentOnboardPanel()
	{
	}
}
[Token(Token = "0x2000210")]
public class TournamentPanel : MonoBehaviour
{
	[Token(Token = "0x200037E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE3B0", Offset = "0x7CE3B0")]
	private sealed class <runEnemyIconCycle>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentPanel <>4__this;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Sprite> enemyIcons;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <index>5__3;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0xB3D05C", Offset = "0xB3D05C", VA = "0xB3D05C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001935")]
			[Address(RVA = "0xB3D0C4", Offset = "0xB3D0C4", VA = "0xB3D0C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xB3CEFC", Offset = "0xB3CEFC", VA = "0xB3CEFC")]
		[DebuggerHidden]
		public <runEnemyIconCycle>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xB3CF28", Offset = "0xB3CF28", VA = "0xB3CF28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xB3CF2C", Offset = "0xB3CF2C", VA = "0xB3CF2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xB3D064", Offset = "0xB3D064", VA = "0xB3D064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3FC4", Offset = "0x7D3FC4")]
	public GameObject eventIsActiveParent;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject arcadeModeLockedParent;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D3FFC", Offset = "0x7D3FFC")]
	public TMP_Text tournamentNameLabel;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4034", Offset = "0x7D4034")]
	public LeaderboardDisplay leaderboardDisplay;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D406C", Offset = "0x7D406C")]
	public TMP_Text eventCountdownLabel;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string countdownTemplate;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D40A4", Offset = "0x7D40A4")]
	public TournamentModifierElement modifierElementTemplate;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite multiplierIcon;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite bulletSpeedIcon;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite noGunsIcon;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite noMissilesIcon;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite noPowerupsIcon;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TypedObjectPool<TournamentModifierElement> tournamentModifiers;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject modifierDescription;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TMP_Text descriptionLabel;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float descriptionShowTime;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D40DC", Offset = "0x7D40DC")]
	public PowerupStatsDisplay powerupStats;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject powerupsDisabledLabel;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4114", Offset = "0x7D4114")]
	public TMP_Text durationLabel;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TMP_Text difficultyLabel;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TMP_Text pilotLabel;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TMP_Text worldLabel;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D414C", Offset = "0x7D414C")]
	public Image worldImage;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image pilotIcon;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4184", Offset = "0x7D4184")]
	public Image enemiesIcon;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float timeToShowEachIcon;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float timeToHideDescription;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TournamentModifierElement elementHighlighted;

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xA1F180", Offset = "0xA1F180", VA = "0xA1F180")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xA1F284", Offset = "0xA1F284", VA = "0xA1F284")]
	public void panelDidMoveOut()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xA1E094", Offset = "0xA1E094", VA = "0xA1E094")]
	public void refreshPanel()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xA1F2F0", Offset = "0xA1F2F0", VA = "0xA1F2F0")]
	public void showEventIsActiveDisplay()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xA1FD6C", Offset = "0xA1FD6C", VA = "0xA1FD6C")]
	private void showNoEventActiveDisplay()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xA1FDBC", Offset = "0xA1FDBC", VA = "0xA1FDBC")]
	public void showModeLockedDisplay()
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xA1FE00", Offset = "0xA1FE00", VA = "0xA1FE00")]
	private void Update()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xA1F69C", Offset = "0xA1F69C", VA = "0xA1F69C")]
	private void updateEnemiesInWorld(LevelContainer container)
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xA1FF54", Offset = "0xA1FF54", VA = "0xA1FF54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D85F8", Offset = "0x7D85F8")]
	private IEnumerator runEnemyIconCycle(List<Sprite> enemyIcons)
	{
		return null;
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xA1F914", Offset = "0xA1F914", VA = "0xA1F914")]
	private void updateModifiers(LevelContainer container)
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xA1F334", Offset = "0xA1F334", VA = "0xA1F334")]
	private void updateTournamentInfo(LevelContainer container)
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xA200C8", Offset = "0xA200C8", VA = "0xA200C8")]
	public void playButtonPressed()
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xA201DC", Offset = "0xA201DC", VA = "0xA201DC")]
	public void hubButtonPressed()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xA2022C", Offset = "0xA2022C", VA = "0xA2022C")]
	public void updateModifierDescription(TournamentModifierElement element)
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xA1FFEC", Offset = "0xA1FFEC", VA = "0xA1FFEC")]
	private TournamentModifierElement nextModifierElement()
	{
		return null;
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xA203C4", Offset = "0xA203C4", VA = "0xA203C4")]
	public TournamentPanel()
	{
	}
}
[Token(Token = "0x2000211")]
public sealed class UpdateNeededPanel : MonoBehaviour
{
	[Token(Token = "0x6001031")]
	[Address(RVA = "0x13C63C4", Offset = "0x13C63C4", VA = "0x13C63C4")]
	public static bool needsToShowUpdatePanel()
	{
		return default(bool);
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x13C6534", Offset = "0x13C6534", VA = "0x13C6534")]
	public void getUpdateWasPressed()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x13C65AC", Offset = "0x13C65AC", VA = "0x13C65AC")]
	public UpdateNeededPanel()
	{
	}
}
[Token(Token = "0x2000212")]
public class ParticleAccelerator : MonoBehaviour
{
	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ParticleAcceleration;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem m_particleSystem;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xB051EC", Offset = "0xB051EC", VA = "0xB051EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xB0540C", Offset = "0xB0540C", VA = "0xB0540C")]
	public ParticleAccelerator()
	{
	}
}
[Token(Token = "0x2000213")]
public sealed class ParticleController : SingletonMono<ParticleController>
{
	[Token(Token = "0x200037F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE3C0", Offset = "0x7CE3C0")]
	private sealed class <preloadPool>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleController <>4__this;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject[] <pooledObjects>5__2;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001939")]
			[Address(RVA = "0xB06EF8", Offset = "0xB06EF8", VA = "0xB06EF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600193B")]
			[Address(RVA = "0xB06F60", Offset = "0xB06F60", VA = "0xB06F60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xB0566C", Offset = "0xB0566C", VA = "0xB0566C")]
		[DebuggerHidden]
		public <preloadPool>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xB06C50", Offset = "0xB06C50", VA = "0xB06C50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xB06C54", Offset = "0xB06C54", VA = "0xB06C54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xB06F00", Offset = "0xB06F00", VA = "0xB06F00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000380")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE3D0", Offset = "0x7CE3D0")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIParticleCamera theCam;

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xB0690C", Offset = "0xB0690C", VA = "0xB0690C")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xB06BD4", Offset = "0xB06BD4", VA = "0xB06BD4")]
		internal void <playEventInUI>b__0()
		{
		}
	}

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "AssetProxyAttribute", RVA = "0x7D41BC", Offset = "0x7D41BC")]
	public AssetProxy particleLibraryPrefab;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleLibrary particleLibrary;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int prepoolCount;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> particlesToCullOnLow;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> particlesToCullOnMedium;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform testSource;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RenderTexture particleTexture;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera particleCam;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<string, ParticleEvent> eventMap;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<string, PoolableParticleSystem> loopingParticles;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Queue<UIParticleCamera> uiParticlePool;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UIParticleCamera uiParticleCamPrefab;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 uiParticleCamPosition;

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xB05414", Offset = "0xB05414", VA = "0xB05414")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xB055F0", Offset = "0xB055F0", VA = "0xB055F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D865C", Offset = "0x7D865C")]
	private IEnumerator preloadPool()
	{
		return null;
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xB05698", Offset = "0xB05698", VA = "0xB05698")]
	public static void showParticles(RawImage image)
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xB05904", Offset = "0xB05904", VA = "0xB05904")]
	public void testParticleEvent(string eventKey)
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xB059E0", Offset = "0xB059E0", VA = "0xB059E0")]
	public string playParticleEventAtSource(string eventKey, Transform source, float rotation = 0f, [Optional] Action systemCompletion)
	{
		return null;
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xB05ED0", Offset = "0xB05ED0", VA = "0xB05ED0")]
	public string playParticleEventAsChildOfSource(string eventKey, Transform source, float rotation = 0f, [Optional] Action systemCompletion)
	{
		return null;
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xB05B78", Offset = "0xB05B78", VA = "0xB05B78")]
	private ParticleEvent setUpEvent(string eventKey)
	{
		return null;
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xB0626C", Offset = "0xB0626C", VA = "0xB0626C")]
	public void stopLoopingParticles(string poolID)
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xB06170", Offset = "0xB06170", VA = "0xB06170")]
	private ParticleEvent eventWithKey(string eventKey)
	{
		return null;
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xB0633C", Offset = "0xB0633C", VA = "0xB0633C")]
	private void fillMap()
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xB0647C", Offset = "0xB0647C", VA = "0xB0647C")]
	public int getEventCount()
	{
		return default(int);
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xB06514", Offset = "0xB06514", VA = "0xB06514")]
	public ParticleEvent getEventAtIndex(int index)
	{
		return null;
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xB065E4", Offset = "0xB065E4", VA = "0xB065E4")]
	private UIParticleCamera nextUIParticleCamera()
	{
		return null;
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xB066E8", Offset = "0xB066E8", VA = "0xB066E8")]
	private void returnUICameraToPool(UIParticleCamera theCam)
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xB06760", Offset = "0xB06760", VA = "0xB06760")]
	public static string playEventInUI(string particleKey, RawImage particleDestinationImage)
	{
		return null;
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xB06914", Offset = "0xB06914", VA = "0xB06914")]
	public ParticleController()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xB06A88", Offset = "0xB06A88", VA = "0xB06A88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D86C0", Offset = "0x7D86C0")]
	private void <bootstrap>b__10_0(GameObject loadedAsset)
	{
	}
}
[Token(Token = "0x2000214")]
public sealed class ParticleControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x6001047")]
	[Address(RVA = "0xB06F68", Offset = "0xB06F68", VA = "0xB06F68", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xB06FF0", Offset = "0xB06FF0", VA = "0xB06FF0")]
	public ParticleControllerBooter()
	{
	}
}
[Serializable]
[Token(Token = "0x2000215")]
public sealed class ParticleEvent
{
	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string eventID;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem system;

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xB05DC8", Offset = "0xB05DC8", VA = "0xB05DC8")]
	public PoolableParticleSystem playEventAtSource(Transform source, bool looping, float rotation = 0f)
	{
		return null;
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xB06068", Offset = "0xB06068", VA = "0xB06068")]
	public PoolableParticleSystem playEventAsChildOfSource(Transform source, bool looping, float rotation = 0f)
	{
		return null;
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xB06FF8", Offset = "0xB06FF8", VA = "0xB06FF8")]
	public ParticleEvent()
	{
	}
}
[Token(Token = "0x2000216")]
public sealed class ParticleLibrary : MonoBehaviour
{
	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ParticleEvent> events;

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xB07000", Offset = "0xB07000", VA = "0xB07000")]
	public ParticleLibrary()
	{
	}
}
[Token(Token = "0x2000217")]
public sealed class UIParticleCamera : MonoBehaviour
{
	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera theCamera;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture texture;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform centerSource;

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xB40918", Offset = "0xB40918", VA = "0xB40918")]
	public void prepareForPool()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xB40938", Offset = "0xB40938", VA = "0xB40938")]
	private void createRenderTexture()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xB409FC", Offset = "0xB409FC", VA = "0xB409FC")]
	public void prepareForParticles(RawImage theImage)
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xB40ACC", Offset = "0xB40ACC", VA = "0xB40ACC")]
	public UIParticleCamera()
	{
	}
}
[Serializable]
[Token(Token = "0x2000218")]
public class PilotConfig
{
	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string DefaultPlayerHitscanBulletKey;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string PlayerComboBulletKey;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int pilotNumber;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string internalId;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnabled;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string world;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string pilotPrefabKey;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string shipPrefabKey;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string bulletPrefabKey;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string audioKey;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string locId;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<string, int> powerupWeightings;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameStateList stateList;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4220", Offset = "0x7D4220")]
	private bool <isUnlocked>k__BackingField;

	[Token(Token = "0x17000077")]
	public bool isUnlocked
	{
		[Token(Token = "0x6001051")]
		[Address(RVA = "0xB07500", Offset = "0xB07500", VA = "0xB07500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D86D0", Offset = "0x7D86D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001052")]
		[Address(RVA = "0xB07508", Offset = "0xB07508", VA = "0xB07508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D86E0", Offset = "0x7D86E0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public string pilotKey
	{
		[Token(Token = "0x6001053")]
		[Address(RVA = "0xB07514", Offset = "0xB07514", VA = "0xB07514")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000079")]
	public string shipKey
	{
		[Token(Token = "0x6001054")]
		[Address(RVA = "0xB07568", Offset = "0xB07568", VA = "0xB07568")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007A")]
	public string flavourSoundKey
	{
		[Token(Token = "0x6001055")]
		[Address(RVA = "0xB075BC", Offset = "0xB075BC", VA = "0xB075BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007B")]
	public string appearSoundKey
	{
		[Token(Token = "0x6001056")]
		[Address(RVA = "0xB07610", Offset = "0xB07610", VA = "0xB07610")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007C")]
	public string deathSoundKey
	{
		[Token(Token = "0x6001057")]
		[Address(RVA = "0xB07664", Offset = "0xB07664", VA = "0xB07664")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007D")]
	public string localisedName
	{
		[Token(Token = "0x600105E")]
		[Address(RVA = "0xB07F04", Offset = "0xB07F04", VA = "0xB07F04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xB076B8", Offset = "0xB076B8", VA = "0xB076B8")]
	public PilotConfig(Command theCommand)
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xB07ADC", Offset = "0xB07ADC", VA = "0xB07ADC")]
	public void loadState()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xB07BB0", Offset = "0xB07BB0", VA = "0xB07BB0")]
	public void saveState()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xB07C50", Offset = "0xB07C50", VA = "0xB07C50")]
	public void unlock()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xB07CEC", Offset = "0xB07CEC", VA = "0xB07CEC")]
	public void lockPilot()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xB07DC8", Offset = "0xB07DC8", VA = "0xB07DC8")]
	public bool isInWorld(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xB07F70", Offset = "0xB07F70", VA = "0xB07F70")]
	public Dictionary<string, int> getPowerupWeightings()
	{
		return null;
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xB08194", Offset = "0xB08194", VA = "0xB08194")]
	public string getBulletKey()
	{
		return null;
	}
}
[Token(Token = "0x2000219")]
public class PilotController : SingletonMono<PilotController>
{
	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4230", Offset = "0x7D4230")]
	public bool preloadPilotsOnBoot;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4268", Offset = "0x7D4268")]
	public Color pilotOutlineColor;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float pilotOutlineSize;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Sprite> pilotSprites;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MappedList<PilotConfig> pilotConfigs;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D42A0", Offset = "0x7D42A0")]
	private string <currentPilotId>k__BackingField;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D42B0", Offset = "0x7D42B0")]
	private bool <isBooted>k__BackingField;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<string> pilotIds;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameStateList stateList;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<string, Sprite> pilotIdSpriteMappingHigh;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<string, Sprite> pilotIdSpriteMappingLow;

	[Token(Token = "0x1700007E")]
	public string currentPilotId
	{
		[Token(Token = "0x6001062")]
		[Address(RVA = "0xB08214", Offset = "0xB08214", VA = "0xB08214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D86F0", Offset = "0x7D86F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001063")]
		[Address(RVA = "0xB0821C", Offset = "0xB0821C", VA = "0xB0821C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8700", Offset = "0x7D8700")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public bool isBooted
	{
		[Token(Token = "0x6001064")]
		[Address(RVA = "0xB08224", Offset = "0xB08224", VA = "0xB08224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8710", Offset = "0x7D8710")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001065")]
		[Address(RVA = "0xB0822C", Offset = "0xB0822C", VA = "0xB0822C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8720", Offset = "0x7D8720")]
		private set
		{
		}
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xB08238", Offset = "0xB08238", VA = "0xB08238")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xB08338", Offset = "0xB08338", VA = "0xB08338")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xB086D8", Offset = "0xB086D8", VA = "0xB086D8")]
	public void preloadPilots(bool unlockedOnly)
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xB08CBC", Offset = "0xB08CBC", VA = "0xB08CBC")]
	private void definePilotConfig(Command theCommand)
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xB08B80", Offset = "0xB08B80", VA = "0xB08B80")]
	public void loadState()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xB08DB8", Offset = "0xB08DB8", VA = "0xB08DB8")]
	public void saveState()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xB07E94", Offset = "0xB07E94", VA = "0xB07E94")]
	public static string defaultPilotId()
	{
		return null;
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xB08EBC", Offset = "0xB08EBC", VA = "0xB08EBC")]
	public PilotConfig currentPilotConfig()
	{
		return null;
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xB09020", Offset = "0xB09020", VA = "0xB09020")]
	public PilotConfig pilotConfigWithId(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xB090C4", Offset = "0xB090C4", VA = "0xB090C4")]
	public Sprite getSpriteForPilot(string pilotId, bool isHighQuality)
	{
		return null;
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xB08F7C", Offset = "0xB08F7C", VA = "0xB08F7C")]
	public bool isValidPilotId(string pilotId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xB0918C", Offset = "0xB0918C", VA = "0xB0918C")]
	public List<string> allPilotIdsInWorld(string worldId)
	{
		return null;
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xB09354", Offset = "0xB09354", VA = "0xB09354")]
	public bool areAllPilotsUnlockedInWorld(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xB094E0", Offset = "0xB094E0", VA = "0xB094E0")]
	public float percentOfPilotsUnlockedInWorld(string worldId)
	{
		return default(float);
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xB09628", Offset = "0xB09628", VA = "0xB09628")]
	public string getFirstLockedPilotIdInWorld(string worldId)
	{
		return null;
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xB089D8", Offset = "0xB089D8", VA = "0xB089D8")]
	public List<string> allPilotIds()
	{
		return null;
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xB09754", Offset = "0xB09754", VA = "0xB09754")]
	public List<string> allUnlockedPilotIds()
	{
		return null;
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xB09984", Offset = "0xB09984", VA = "0xB09984")]
	public int unlockedPilotCount()
	{
		return default(int);
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xB099D8", Offset = "0xB099D8", VA = "0xB099D8")]
	public string getPilotKeyWithId(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xB09B00", Offset = "0xB09B00", VA = "0xB09B00")]
	public string getPilotName(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xB09C3C", Offset = "0xB09C3C", VA = "0xB09C3C")]
	public string getPilotIconCode(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xB09868", Offset = "0xB09868", VA = "0xB09868")]
	public bool isPilotUnlocked(string pilotId)
	{
		return default(bool);
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xB09C48", Offset = "0xB09C48", VA = "0xB09C48")]
	public void unlockPilot(string pilotId)
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xB09DA8", Offset = "0xB09DA8", VA = "0xB09DA8")]
	public void lockPilot(string pilotId)
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xB09EC8", Offset = "0xB09EC8", VA = "0xB09EC8")]
	public void selectPilotForTournament(string pilotId)
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xB09ED0", Offset = "0xB09ED0", VA = "0xB09ED0")]
	public void selectPilot(string pilotId)
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xB0A09C", Offset = "0xB0A09C", VA = "0xB0A09C")]
	public string getShipKeyWithId(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xB0A1C4", Offset = "0xB0A1C4", VA = "0xB0A1C4")]
	public string getBulletKeyForPilot(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xB0A2EC", Offset = "0xB0A2EC", VA = "0xB0A2EC")]
	public string getFlavourSoundKey(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xB0A420", Offset = "0xB0A420", VA = "0xB0A420")]
	public string getAppearSoundKey(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xB0A554", Offset = "0xB0A554", VA = "0xB0A554")]
	public string getDeathSoundKey(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xB0A688", Offset = "0xB0A688", VA = "0xB0A688")]
	public PilotController()
	{
	}
}
[Token(Token = "0x200021A")]
public sealed class PilotControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PilotController pilotController;

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xA8DA50", Offset = "0xA8DA50", VA = "0xA8DA50", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xA8DB38", Offset = "0xA8DB38", VA = "0xA8DB38", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xA8DB74", Offset = "0xA8DB74", VA = "0xA8DB74")]
	public PilotControllerBooter()
	{
	}
}
[Token(Token = "0x200021B")]
public class PilotInformationDisplay : MonoBehaviour
{
	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D42C0", Offset = "0x7D42C0")]
	public TMP_Text pilotNameLabel;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playMissionCallout;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D42F8", Offset = "0x7D42F8")]
	public PowerupStatsDisplay powerupStats;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4330", Offset = "0x7D4330")]
	public PlayerGeo pilotVisual;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pilotVisualScaleFactor;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform scalarTransform;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material lockedMaterial;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string trackedPilotId;

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xA8DB7C", Offset = "0xA8DB7C", VA = "0xA8DB7C")]
	public void activate()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xA8DBA4", Offset = "0xA8DBA4", VA = "0xA8DBA4")]
	public void deactivate()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xA8DBCC", Offset = "0xA8DBCC", VA = "0xA8DBCC")]
	public bool isDeactivated()
	{
		return default(bool);
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xA8DBFC", Offset = "0xA8DBFC", VA = "0xA8DBFC")]
	public void updateDisplay(object note)
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xA8DE24", Offset = "0xA8DE24", VA = "0xA8DE24")]
	public void refreshTextLabels()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xA8E0E0", Offset = "0xA8E0E0", VA = "0xA8E0E0")]
	public PilotInformationDisplay()
	{
	}
}
[Token(Token = "0x200021C")]
public class PilotShelf : SingletonMono<PilotShelf>
{
	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4368", Offset = "0x7D4368")]
	public PilotShelfElement shelfPilotTemplate;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text unlockCountLabel;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D43A0", Offset = "0x7D43A0")]
	public int pilotsPerPageAll;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image pageIndicatorTemplate;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color pageColor;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color pageSelectedColor;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TypedObjectPool<PilotShelfElement> shelfPilotPool;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TypedObjectPool<Image> pageIndicatorPool;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int pageIndex;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int pageTotalForWorld;

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xA8E8E0", Offset = "0xA8E8E0", VA = "0xA8E8E0")]
	private void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xA8EEFC", Offset = "0xA8EEFC", VA = "0xA8EEFC")]
	private void panelWillMoveOut()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xA8F004", Offset = "0xA8F004", VA = "0xA8F004")]
	public void nextPageButtonWasPressed()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xA8F020", Offset = "0xA8F020", VA = "0xA8F020")]
	public void previousPageButtonWasPressed()
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xA8EA9C", Offset = "0xA8EA9C", VA = "0xA8EA9C")]
	private void updateShowingPilots(bool resetPageIndexes)
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xA8F394", Offset = "0xA8F394", VA = "0xA8F394")]
	private void updateUnlockCountLabel()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xA8F0FC", Offset = "0xA8F0FC", VA = "0xA8F0FC")]
	public void pilotHasUIFocus(string pilotId, bool updateMaterials = true)
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xA8F794", Offset = "0xA8F794", VA = "0xA8F794")]
	private void updatePilotMaterials()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xA8F864", Offset = "0xA8F864", VA = "0xA8F864")]
	public PilotShelf()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xA8F8DC", Offset = "0xA8F8DC", VA = "0xA8F8DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8730", Offset = "0x7D8730")]
	private void <panelWillMoveIn>b__10_0()
	{
	}
}
[Token(Token = "0x200021D")]
public class PilotShelfElement : MonoBehaviour
{
	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D43D8", Offset = "0x7D43D8")]
	public Material defaultMaterial;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material lockedMaterial;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4410", Offset = "0x7D4410")]
	public Image backing;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image playerIcon;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite selected;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite notSelected;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4448", Offset = "0x7D4448")]
	private string <assignedPilotId>k__BackingField;

	[Token(Token = "0x17000080")]
	public string assignedPilotId
	{
		[Token(Token = "0x6001099")]
		[Address(RVA = "0xA8F8E4", Offset = "0xA8F8E4", VA = "0xA8F8E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8740", Offset = "0x7D8740")]
		get
		{
			return null;
		}
		[Token(Token = "0x600109A")]
		[Address(RVA = "0xA8F8EC", Offset = "0xA8F8EC", VA = "0xA8F8EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8750", Offset = "0x7D8750")]
		private set
		{
		}
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xA8F8F4", Offset = "0xA8F8F4", VA = "0xA8F8F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xA8F9D4", Offset = "0xA8F9D4", VA = "0xA8F9D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xA8F044", Offset = "0xA8F044", VA = "0xA8F044")]
	public void setPilotSprite(string pilotId)
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xA8E4E8", Offset = "0xA8E4E8", VA = "0xA8E4E8")]
	public void select()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xA8E568", Offset = "0xA8E568", VA = "0xA8E568")]
	public bool isSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xA8E854", Offset = "0xA8E854", VA = "0xA8E854")]
	public void aimedAt()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xA8FB1C", Offset = "0xA8FB1C", VA = "0xA8FB1C")]
	private void tryPopOnSelect(object note)
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xA8F274", Offset = "0xA8F274", VA = "0xA8F274")]
	public void updateVisuals()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xA8FA6C", Offset = "0xA8FA6C", VA = "0xA8FA6C")]
	private bool isAssignedPilotHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xA8FC3C", Offset = "0xA8FC3C", VA = "0xA8FC3C")]
	private bool isAssignedPilotLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xA8FCC8", Offset = "0xA8FCC8", VA = "0xA8FCC8")]
	private bool isAssignedToPlayerPilot()
	{
		return default(bool);
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xA8FD50", Offset = "0xA8FD50", VA = "0xA8FD50")]
	public PilotShelfElement()
	{
	}
}
[Token(Token = "0x200021E")]
public class PowerupStatDisplay : MonoBehaviour
{
	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text statPercentLabel;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image powerupLogo;

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xAC0094", Offset = "0xAC0094", VA = "0xAC0094")]
	public void updateDisplay(int percent, Sprite powerupIcon)
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xAC0150", Offset = "0xAC0150", VA = "0xAC0150")]
	public PowerupStatDisplay()
	{
	}
}
[Token(Token = "0x200021F")]
public sealed class PlatformSpecificCloudSave
{
	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, object> cloudStore;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action cloudDidUpdateAction;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlatformSpecificCloudSave sharedInstance;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasBeenBootstrapped;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool cloudHasBooted;

	[Token(Token = "0x17000081")]
	public static PlatformSpecificCloudSave instance
	{
		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xA8FE38", Offset = "0xA8FE38", VA = "0xA8FE38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xA8FF7C", Offset = "0xA8FF7C", VA = "0xA8FF7C")]
	public void forceRefresh()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xA90218", Offset = "0xA90218", VA = "0xA90218")]
	private bool isEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xA90110", Offset = "0xA90110", VA = "0xA90110")]
	private bool isIOS()
	{
		return default(bool);
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xA90194", Offset = "0xA90194", VA = "0xA90194")]
	private bool isTVOS()
	{
		return default(bool);
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xA90220", Offset = "0xA90220", VA = "0xA90220")]
	private bool isAmazon()
	{
		return default(bool);
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xA902A4", Offset = "0xA902A4", VA = "0xA902A4")]
	public static void bootstrap(Action cloudUpdate)
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xA905C0", Offset = "0xA905C0", VA = "0xA905C0")]
	public static bool needsBoot()
	{
		return default(bool);
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xA90324", Offset = "0xA90324", VA = "0xA90324")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xA90884", Offset = "0xA90884", VA = "0xA90884")]
	public List<string> cloudKeys()
	{
		return null;
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xA90914", Offset = "0xA90914", VA = "0xA90914")]
	public string stringForKey(string key)
	{
		return null;
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xA90A0C", Offset = "0xA90A0C", VA = "0xA90A0C")]
	public void setString(string key, string theValue)
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xA90ACC", Offset = "0xA90ACC", VA = "0xA90ACC")]
	public bool cloudHasFinishedBooting()
	{
		return default(bool);
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xA90634", Offset = "0xA90634", VA = "0xA90634")]
	private void cloudStoreDidChange(Dictionary<string, object> theStore)
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xA90AD4", Offset = "0xA90AD4", VA = "0xA90AD4")]
	public void saveToCloud()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xA90C34", Offset = "0xA90C34", VA = "0xA90C34")]
	private void loadForEditor()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xA90DB8", Offset = "0xA90DB8", VA = "0xA90DB8")]
	private void clearForEditor()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xA90E4C", Offset = "0xA90E4C", VA = "0xA90E4C")]
	public void deleteAll()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xA8FF00", Offset = "0xA8FF00", VA = "0xA8FF00")]
	public PlatformSpecificCloudSave()
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xA90F08", Offset = "0xA90F08", VA = "0xA90F08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8760", Offset = "0x7D8760")]
	private void <forceRefresh>b__6_0()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xA90F0C", Offset = "0xA90F0C", VA = "0xA90F0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8770", Offset = "0x7D8770")]
	private void <bootstrap>b__14_0()
	{
	}
}
[Token(Token = "0x2000220")]
public class GameModeUnlockPopup : PopupTextElement
{
	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x9E04B4", Offset = "0x9E04B4", VA = "0x9E04B4")]
	public GameModeUnlockPopup()
	{
	}
}
[Token(Token = "0x2000221")]
public class PopupTextController : SingletonMono<PopupTextController>
{
	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<PopupTextElement> templates;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<PopupTextType, TypedObjectPool<PopupTextElement>> elementPools;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, PopupTextElement> trackedElements;

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xAA1074", Offset = "0xAA1074", VA = "0xAA1074")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xAA135C", Offset = "0xAA135C", VA = "0xAA135C")]
	public void showAndFollow(Transform target, Vector3 followOffset, string content, float showTime, PopupTextType popupTextType, [Optional] string popupId)
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xAA1620", Offset = "0xAA1620", VA = "0xAA1620")]
	public void showAndFollowAndScale(Transform target, Vector3 followOffset, string content, float showTime, PopupTextType popupTextType, [Optional] string popupId)
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xA93F30", Offset = "0xA93F30", VA = "0xA93F30")]
	public void showAtPosition(Vector3 position, string content, float showTime, PopupTextType popupTextType, [Optional] string popupId)
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xAA1444", Offset = "0xAA1444", VA = "0xAA1444")]
	public void showAndFollow(Transform target, Vector3 followOffset, List<string> content, float showTime, PopupTextType popupTextType, [Optional] string popupId)
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xAA1910", Offset = "0xAA1910", VA = "0xAA1910")]
	public void showAtPosition(Vector3 position, List<string> content, float showTime, PopupTextType popupTextType, [Optional] string popupId)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xAA1708", Offset = "0xAA1708", VA = "0xAA1708")]
	public void showAndFollowAndScale(Transform target, Vector3 followOffset, List<string> content, float showTime, PopupTextType popupTextType, [Optional] string popupId)
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xAA1E84", Offset = "0xAA1E84", VA = "0xAA1E84")]
	public void showScoreAtPosition(Vector3 position, int score, float showTime, float scale, float speed, bool isComboActive = false, [Optional] string popupId)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xAA1BC0", Offset = "0xAA1BC0", VA = "0xAA1BC0")]
	private void startTracking(PopupTextElement element, string popupId)
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xAA2194", Offset = "0xAA2194", VA = "0xAA2194")]
	public void dismissAll()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xAA212C", Offset = "0xAA212C", VA = "0xAA212C")]
	public bool isTracking(string popupId)
	{
		return default(bool);
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xA91988", Offset = "0xA91988", VA = "0xA91988")]
	public void dismissPopup(string popupId)
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xAA2404", Offset = "0xAA2404", VA = "0xAA2404")]
	public void returnElement(PopupTextElement item)
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xAA1A60", Offset = "0xAA1A60", VA = "0xAA1A60")]
	private TypedObjectPool<PopupTextElement> getPool(PopupTextType popupTextType)
	{
		return null;
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xAA2584", Offset = "0xAA2584", VA = "0xAA2584")]
	public PopupTextController()
	{
	}
}
[Token(Token = "0x2000222")]
public enum PopupTextType
{
	[Token(Token = "0x4000DB4")]
	TextOnly = 1,
	[Token(Token = "0x4000DB5")]
	ScorePopUp = 3,
	[Token(Token = "0x4000DB6")]
	BossCallout = 4,
	[Token(Token = "0x4000DB7")]
	InformationCallout = 5,
	[Token(Token = "0x4000DB8")]
	NumberCallout = 6,
	[Token(Token = "0x4000DB9")]
	TutorialCallout = 7,
	[Token(Token = "0x4000DBA")]
	CheckpointCallout = 8,
	[Token(Token = "0x4000DBB")]
	UpgradeCallOut = 9,
	[Token(Token = "0x4000DBC")]
	BossTauntCallOut = 10
}
[Token(Token = "0x2000223")]
public enum PopupLookAtType
{
	[Token(Token = "0x4000DBE")]
	None,
	[Token(Token = "0x4000DBF")]
	LeftRight,
	[Token(Token = "0x4000DC0")]
	UpDown,
	[Token(Token = "0x4000DC1")]
	All
}
[Token(Token = "0x2000224")]
public class PopupTextElement : MonoBehaviour
{
	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4458", Offset = "0x7D4458")]
	public PopupTextType textType;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PopupLookAtType lookAtBehaviour;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int poolingCount;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4490", Offset = "0x7D4490")]
	public CanvasGroup labelParent;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text label;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D44C8", Offset = "0x7D44C8")]
	public AnimationCurve fadeCurve;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float popScale;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float popTime;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4500", Offset = "0x7D4500")]
	public AnimationCurve ySpeedCurve;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4538", Offset = "0x7D4538")]
	public List<TMP_Text> additionalLabels;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4570", Offset = "0x7D4570")]
	public float slideInOffset;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D45A8", Offset = "0x7D45A8")]
	public Animator textAnimator;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string clipToAnimate;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform trackingTarget;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 trackingOffset;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float scorePopUpYSpeed;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float scorePopScale;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform cameraTransform;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timeToLive;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float lifetime;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<string> contentToShow;

	[Token(Token = "0x4000DD8")]
	private const float AnimationCycleTime = 2.5f;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float animationTime;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int animationIndex;

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xAA1B60", Offset = "0xAA1B60", VA = "0xAA1B60")]
	public void activateAndFollow(List<string> content, float lifetime, Transform trackingTarget, Vector3 trackingOffset)
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xAA2024", Offset = "0xAA2024", VA = "0xAA2024")]
	public void activateScore(List<string> content, float lifetime, float scale, float speed, bool isComboActive)
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xAA25F4", Offset = "0xAA25F4", VA = "0xAA25F4")]
	public void activateWithAnimationClip(List<string> content, float lifetime, string clipName)
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xAA1CA8", Offset = "0xAA1CA8", VA = "0xAA1CA8")]
	public void activate(List<string> content, float lifetime)
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xAA2950", Offset = "0xAA2950", VA = "0xAA2950")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xAA2CB8", Offset = "0xAA2CB8", VA = "0xAA2CB8")]
	private void updateContentCycling()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xAA276C", Offset = "0xAA276C", VA = "0xAA276C")]
	private void updateLookAt()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xAA2638", Offset = "0xAA2638", VA = "0xAA2638")]
	private void setLabelContent(string content)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xAA2290", Offset = "0xAA2290", VA = "0xAA2290")]
	public void cleanup()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xAA2DA0", Offset = "0xAA2DA0", VA = "0xAA2DA0")]
	public PopupTextElement()
	{
	}
}
[Token(Token = "0x2000225")]
public class MMQuad
{
	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MMTriangle3D[] face;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color col;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] postitions;

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xA60DD8", Offset = "0xA60DD8", VA = "0xA60DD8")]
	public MMQuad(Vector3 a, Vector3 b, Vector3 c, Vector3 d, Color color)
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xA610DC", Offset = "0xA610DC", VA = "0xA610DC")]
	public bool SharesVertexWith(MMQuad quad)
	{
		return default(bool);
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xA61214", Offset = "0xA61214", VA = "0xA61214")]
	public Vector3[] GetVertexArray()
	{
		return null;
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xA61220", Offset = "0xA61220", VA = "0xA61220")]
	public Vector3[] GetVertexArray(Vector3[] array, int offset)
	{
		return null;
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xA6139C", Offset = "0xA6139C", VA = "0xA6139C")]
	public Color[] GetColorsArray(Color[] array, int offset)
	{
		return null;
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xA61494", Offset = "0xA61494", VA = "0xA61494")]
	public int[] GetTrianglesArray(int[] array, int offsetQuadCount, int offset)
	{
		return null;
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xA615C0", Offset = "0xA615C0", VA = "0xA615C0")]
	public Vector3[] GetNormalArray()
	{
		return null;
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xA615CC", Offset = "0xA615CC", VA = "0xA615CC")]
	public Vector3[] GetNormalArray(Vector3[] array, int offset)
	{
		return null;
	}
}
[Token(Token = "0x2000226")]
public class MMTriIndexes
{
	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int a;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int b;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int c;

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xA6175C", Offset = "0xA6175C", VA = "0xA6175C")]
	public MMTriIndexes(int _a, int _b, int _c)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xA6179C", Offset = "0xA6179C", VA = "0xA6179C")]
	public bool Contains(int test)
	{
		return default(bool);
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xA617CC", Offset = "0xA617CC", VA = "0xA617CC")]
	public bool Contains(List<int> test)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000227")]
public class MMVoxelData
{
	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string name;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Vector3 position;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int sizeX;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int sizeY;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int sizeZ;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color32[] colors;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private byte[] colorComponents;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int[] colorIndexes;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int[] visabilityMask;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] positions;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float[] positionComponents;

	[Token(Token = "0x17000082")]
	public int VoxelMaxCount
	{
		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xA6188C", Offset = "0xA6188C", VA = "0xA6188C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000083")]
	public Vector3[] Positions
	{
		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xA618A8", Offset = "0xA618A8", VA = "0xA618A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000084")]
	public Color32[] Colors
	{
		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xA61A00", Offset = "0xA61A00", VA = "0xA61A00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000085")]
	public int[] ColorIndexes
	{
		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xA61B84", Offset = "0xA61B84", VA = "0xA61B84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000086")]
	public int[] VisabilityMask
	{
		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xA61B8C", Offset = "0xA61B8C", VA = "0xA61B8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xA61B94", Offset = "0xA61B94", VA = "0xA61B94")]
	public void SetVoxelData(int[,,] matrix, int posX, int posY, int posZ, uint version, uint zAxisOrientation, uint colorFormat, uint visibilityMaskEncoded)
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xA625A8", Offset = "0xA625A8", VA = "0xA625A8")]
	private int GetColorIndex(List<Color32> c, Color32 test)
	{
		return default(int);
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xA62654", Offset = "0xA62654", VA = "0xA62654")]
	public List<MMQuad> GetOuterQuads()
	{
		return null;
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xA6305C", Offset = "0xA6305C", VA = "0xA6305C")]
	private int[] GetOuterVoxels()
	{
		return null;
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xA63150", Offset = "0xA63150", VA = "0xA63150")]
	public MMVoxelData()
	{
	}
}
[Token(Token = "0x2000228")]
public class MMVoxelDataHolder : ScriptableObject
{
	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MMVoxelData content;

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xA631F0", Offset = "0xA631F0", VA = "0xA631F0")]
	public MMVoxelDataHolder(MMVoxelData content)
	{
	}
}
[Token(Token = "0x2000229")]
public class MeshData
{
	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<VertexData> vertexes;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] vertices;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] normals;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2[] uv;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color[] colors;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[] triangles;

	[Token(Token = "0x17000087")]
	public Vector3[] Vertices
	{
		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xA6733C", Offset = "0xA6733C", VA = "0xA6733C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000088")]
	public Vector3[] Normals
	{
		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xA67344", Offset = "0xA67344", VA = "0xA67344")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000089")]
	public Vector2[] Uv
	{
		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xA6734C", Offset = "0xA6734C", VA = "0xA6734C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008A")]
	public Color[] Colors
	{
		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xA67354", Offset = "0xA67354", VA = "0xA67354")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008B")]
	public int[] Triangles
	{
		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xA6735C", Offset = "0xA6735C", VA = "0xA6735C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xA67364", Offset = "0xA67364", VA = "0xA67364")]
	public MeshData(Mesh m)
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xA67480", Offset = "0xA67480", VA = "0xA67480")]
	public MeshData(List<MMQuad> quads)
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xA67C08", Offset = "0xA67C08", VA = "0xA67C08")]
	public Mesh GetMesh(bool includeNormals = true, bool includeColors = true, bool includeUvs = true)
	{
		return null;
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xA67C04", Offset = "0xA67C04", VA = "0xA67C04")]
	private void FindEdges()
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xA67CF4", Offset = "0xA67CF4", VA = "0xA67CF4")]
	public void SmoothNormals()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xA680AC", Offset = "0xA680AC", VA = "0xA680AC")]
	public void RemoveBottomFacesNearGround()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xA68120", Offset = "0xA68120", VA = "0xA68120")]
	public void RemoveFacesAlongNormal(Vector3 direction, float heightThreshold = 0f)
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xA67710", Offset = "0xA67710", VA = "0xA67710")]
	public void OptimiseArrays()
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xA68640", Offset = "0xA68640", VA = "0xA68640")]
	private void FlipNormals()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xA68594", Offset = "0xA68594", VA = "0xA68594")]
	public int GetNewIndex(List<VertexData> check, VertexData target)
	{
		return default(int);
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xA68738", Offset = "0xA68738", VA = "0xA68738")]
	public void SetVertexColorsFromTexture(Texture2D texture)
	{
	}
}
[Token(Token = "0x200022A")]
public class VertexData
{
	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 position;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 normal;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 uv;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color color;

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x13C9414", Offset = "0x13C9414", VA = "0x13C9414")]
	public VertexData(Vector3 p, Vector3 n, Vector2 u, Color c)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x13C9554", Offset = "0x13C9554", VA = "0x13C9554")]
	public bool Approximately(VertexData data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x13C96A8", Offset = "0x13C96A8", VA = "0x13C96A8")]
	public bool HasSamePosition(VertexData other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x13C9760", Offset = "0x13C9760", VA = "0x13C9760")]
	public bool HasSameNormal(VertexData other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x13C9818", Offset = "0x13C9818", VA = "0x13C9818")]
	public bool HasSameColor(VertexData other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x13C9840", Offset = "0x13C9840", VA = "0x13C9840")]
	public bool HasSameUV(VertexData other)
	{
		return default(bool);
	}
}
[Token(Token = "0x200022B")]
public class AmbientSoundEventPlayer : MonoBehaviour
{
	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE3E0", Offset = "0x7CE3E0")]
	private sealed class <soundPlayLoop>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AmbientSoundEventPlayer <>4__this;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001941")]
			[Address(RVA = "0xB72BD0", Offset = "0xB72BD0", VA = "0xB72BD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0xB72C38", Offset = "0xB72C38", VA = "0xB72C38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xB72960", Offset = "0xB72960", VA = "0xB72960")]
		[DebuggerHidden]
		public <soundPlayLoop>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xB729A8", Offset = "0xB729A8", VA = "0xB729A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xB729AC", Offset = "0xB729AC", VA = "0xB729AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xB72BD8", Offset = "0xB72BD8", VA = "0xB72BD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4670", Offset = "0x7D4670")]
	public List<string> soundKeys;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D46A8", Offset = "0x7D46A8")]
	public bool beginWaitAfterSoundCompleted;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minTimeBetweenSounds;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxTimeBetweenSounds;

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xB727FC", Offset = "0xB727FC", VA = "0xB727FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xB72958", Offset = "0xB72958", VA = "0xB72958")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xB728DC", Offset = "0xB728DC", VA = "0xB728DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D8780", Offset = "0x7D8780")]
	private IEnumerator soundPlayLoop()
	{
		return null;
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xB7298C", Offset = "0xB7298C", VA = "0xB7298C")]
	public AmbientSoundEventPlayer()
	{
	}
}
[Token(Token = "0x200022C")]
public sealed class AudioSourceController : MonoBehaviour
{
	[Token(Token = "0x2000382")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE3F0", Offset = "0x7CE3F0")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSourceController <>4__this;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float finalVolume;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action duckComplete;

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xB75404", Offset = "0xB75404", VA = "0xB75404")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xB75E70", Offset = "0xB75E70", VA = "0xB75E70")]
		internal void <duckToVolume>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xB75F1C", Offset = "0xB75F1C", VA = "0xB75F1C")]
		internal void <duckToVolume>b__1()
		{
		}
	}

	[Token(Token = "0x2000383")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE400", Offset = "0x7CE400")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSourceController <>4__this;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action unDuckComplete;

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xB7558C", Offset = "0xB7558C", VA = "0xB7558C")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xB75F70", Offset = "0xB75F70", VA = "0xB75F70")]
		internal void <unDuck>b__1()
		{
		}
	}

	[Token(Token = "0x2000384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE410", Offset = "0x7CE410")]
	private sealed class <>c__DisplayClass20_1
	{
		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startVolume;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass20_0 CS$<>8__locals1;

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xB75594", Offset = "0xB75594", VA = "0xB75594")]
		public <>c__DisplayClass20_1()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xB75FC4", Offset = "0xB75FC4", VA = "0xB75FC4")]
		internal void <unDuck>b__0(float lerpValue)
		{
		}
	}

	[Token(Token = "0x2000385")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE420", Offset = "0x7CE420")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSourceController <>4__this;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startVolume;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float finalVolume;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action fadeComplete;

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xB756E8", Offset = "0xB756E8", VA = "0xB756E8")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xB76078", Offset = "0xB76078", VA = "0xB76078")]
		internal void <fadeTo>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xB76120", Offset = "0xB76120", VA = "0xB76120")]
		internal void <fadeTo>b__1()
		{
		}
	}

	[Token(Token = "0x2000386")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE430", Offset = "0x7CE430")]
	private sealed class <trackTransformLocation>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform location;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSourceController <>4__this;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001951")]
			[Address(RVA = "0xB76314", Offset = "0xB76314", VA = "0xB76314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001953")]
			[Address(RVA = "0xB7637C", Offset = "0xB7637C", VA = "0xB7637C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xB75DD4", Offset = "0xB75DD4", VA = "0xB75DD4")]
		[DebuggerHidden]
		public <trackTransformLocation>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xB76174", Offset = "0xB76174", VA = "0xB76174", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xB76178", Offset = "0xB76178", VA = "0xB76178", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xB7631C", Offset = "0xB7631C", VA = "0xB7631C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource mySource;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isAmbisonic;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float nearDistance;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float farDistance;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4700", Offset = "0x7D4700")]
	private string <CurrentKey>k__BackingField;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4710", Offset = "0x7D4710")]
	private float <StartTime>k__BackingField;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4720", Offset = "0x7D4720")]
	private float <VolumeAtFull>k__BackingField;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float assignedPitch;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float assignVolume;

	[Token(Token = "0x1700008C")]
	public string CurrentKey
	{
		[Token(Token = "0x6001109")]
		[Address(RVA = "0xB75134", Offset = "0xB75134", VA = "0xB75134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D87E4", Offset = "0x7D87E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600110A")]
		[Address(RVA = "0xB7513C", Offset = "0xB7513C", VA = "0xB7513C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D87F4", Offset = "0x7D87F4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public float StartTime
	{
		[Token(Token = "0x600110B")]
		[Address(RVA = "0xB75144", Offset = "0xB75144", VA = "0xB75144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8804", Offset = "0x7D8804")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600110C")]
		[Address(RVA = "0xB7514C", Offset = "0xB7514C", VA = "0xB7514C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8814", Offset = "0x7D8814")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public float VolumeAtFull
	{
		[Token(Token = "0x600110D")]
		[Address(RVA = "0xB75154", Offset = "0xB75154", VA = "0xB75154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8824", Offset = "0x7D8824")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600110E")]
		[Address(RVA = "0xB7515C", Offset = "0xB7515C", VA = "0xB7515C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8834", Offset = "0x7D8834")]
		set
		{
		}
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xB75164", Offset = "0xB75164", VA = "0xB75164")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xB752C4", Offset = "0xB752C4", VA = "0xB752C4")]
	public void duckToVolume(float finalVolume, float time = 0.2f, [Optional] Action duckComplete)
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xB7540C", Offset = "0xB7540C", VA = "0xB7540C")]
	public void unDuck(float time = 0.1f, [Optional] Action unDuckComplete)
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xB7559C", Offset = "0xB7559C", VA = "0xB7559C")]
	public void fadeToFullVolume(float time, [Optional] Action fadeComplete)
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xB755B0", Offset = "0xB755B0", VA = "0xB755B0")]
	public void fadeTo(float finalVolume, float time, [Optional] Action fadeComplete)
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xB756F0", Offset = "0xB756F0", VA = "0xB756F0")]
	public bool isPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xB7570C", Offset = "0xB7570C", VA = "0xB7570C")]
	public void stopSource()
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xB75728", Offset = "0xB75728", VA = "0xB75728")]
	public void restartSource()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xB75744", Offset = "0xB75744", VA = "0xB75744")]
	public float clipLength()
	{
		return default(float);
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0xB757FC", Offset = "0xB757FC", VA = "0xB757FC")]
	public void setCurrentKey(string key, bool keyIsAlreadyToLowered = false)
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xB75890", Offset = "0xB75890", VA = "0xB75890")]
	public void applyPitchShift(float pitchShift)
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0xB758B8", Offset = "0xB758B8", VA = "0xB758B8")]
	public void applyVolumeShift(float volumeShift)
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xB758E0", Offset = "0xB758E0", VA = "0xB758E0")]
	public void clearAssignedSound(string keyToSkip)
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0xB75A14", Offset = "0xB75A14", VA = "0xB75A14")]
	public void playClip(AudioClip theClip, float volume, float pitch, bool loops, bool startAtRandomTime, Transform location, [Optional] AudioMixerGroup mixerGroup, string eventKey = "", bool eventKeyIsAlreadyToLowered = false)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xB75D3C", Offset = "0xB75D3C", VA = "0xB75D3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D8844", Offset = "0x7D8844")]
	private IEnumerator trackTransformLocation(Transform location)
	{
		return null;
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xB75E00", Offset = "0xB75E00", VA = "0xB75E00")]
	public AudioSourceController()
	{
	}
}
[Serializable]
[Token(Token = "0x200022D")]
public sealed class CompoundSoundEvent
{
	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string eventKey;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumTimeDelay;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maximumTimeDelay;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoundEvent backgroundLoop;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SoundEvent randomEvents;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeTime;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float eventCountdown;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSourceController currentController;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform playLocation;

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x9FA124", Offset = "0x9FA124", VA = "0x9FA124")]
	public CompoundSoundEvent()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x9FA224", Offset = "0x9FA224", VA = "0x9FA224")]
	public bool hasBackgroundLoop()
	{
		return default(bool);
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x9FA288", Offset = "0x9FA288", VA = "0x9FA288")]
	public bool hasRandomEvents()
	{
		return default(bool);
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x9FA2EC", Offset = "0x9FA2EC", VA = "0x9FA2EC")]
	public void startBackgroundLoop(Transform playLocation)
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x9FA3B4", Offset = "0x9FA3B4", VA = "0x9FA3B4")]
	public void stopBackgroundLoop()
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x9FA4B4", Offset = "0x9FA4B4", VA = "0x9FA4B4")]
	private void stopLoopingEvent()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x9FA52C", Offset = "0x9FA52C", VA = "0x9FA52C")]
	public void resetCountdown()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x9FA558", Offset = "0x9FA558", VA = "0x9FA558")]
	public void countdownToEvent(float timeDelta)
	{
	}
}
[Token(Token = "0x200022E")]
public class LoopingAmbientSoundEventPlayer : MonoBehaviour
{
	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string loopingSoundKey;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isCompoundEvent;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4730", Offset = "0x7D4730")]
	public float minDelayBeforePlayingSound;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxDelayBeforePlayingSound;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string loopID;

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xA60AA0", Offset = "0xA60AA0", VA = "0xA60AA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xA60B34", Offset = "0xA60B34", VA = "0xA60B34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xA60BEC", Offset = "0xA60BEC", VA = "0xA60BEC")]
	public LoopingAmbientSoundEventPlayer()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xA60BF4", Offset = "0xA60BF4", VA = "0xA60BF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D88A8", Offset = "0x7D88A8")]
	private void <OnEnable>b__5_0()
	{
	}
}
[Token(Token = "0x200022F")]
public sealed class SoundBooter : BootableMonoBehaviour
{
	[Token(Token = "0x600112B")]
	[Address(RVA = "0xA09908", Offset = "0xA09908", VA = "0xA09908", Slot = "4")]
	public override void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xA09AB8", Offset = "0xA09AB8", VA = "0xA09AB8", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xA09BCC", Offset = "0xA09BCC", VA = "0xA09BCC")]
	public SoundBooter()
	{
	}
}
[Token(Token = "0x2000230")]
public sealed class SoundController : SingletonMono<SoundController>
{
	[Token(Token = "0x2000387")]
	private class PitchModLevels
	{
		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float pitchToAddToHits;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float pitchAddResetTicker;

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xA0CDE8", Offset = "0xA0CDE8", VA = "0xA0CDE8")]
		public PitchModLevels()
		{
		}
	}

	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE440", Offset = "0x7CE440")]
	private sealed class <>c__DisplayClass48_0
	{
		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundController <>4__this;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundEvent theEvent;

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xA0B204", Offset = "0xA0B204", VA = "0xA0B204")]
		public <>c__DisplayClass48_0()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xA0DA10", Offset = "0xA0DA10", VA = "0xA0DA10")]
		internal void <processCrossfadeQueue>b__0()
		{
		}
	}

	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE450", Offset = "0x7CE450")]
	private sealed class <>c__DisplayClass49_0
	{
		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundController <>4__this;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSourceController previousMusicController;

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xA0B934", Offset = "0xA0B934", VA = "0xA0B934")]
		public <>c__DisplayClass49_0()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xA0DAC8", Offset = "0xA0DAC8", VA = "0xA0DAC8")]
		internal void <fadeOutPreviousMusic>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200038A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE460", Offset = "0x7CE460")]
	private sealed class <>c
	{
		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<AudioSourceController> <>9__78_0;

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xA0D9D8", Offset = "0xA0D9D8", VA = "0xA0D9D8")]
		public <>c()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xA0D9E0", Offset = "0xA0D9E0", VA = "0xA0D9E0")]
		internal bool <nextController>b__78_0(AudioSourceController controller)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E12")]
	private const string MusicLevelPrefsKey = "MGG_music_volume_key";

	[Token(Token = "0x4000E13")]
	private const string SoundFXLevelPrefsKey = "MGG_soundfx_volume_key";

	[Token(Token = "0x4000E14")]
	private const string MusicVolumeKey = "MusicVolume";

	[Token(Token = "0x4000E15")]
	private const string HubSoundFXVolumeKey = "Hub_SoundFXVolume";

	[Token(Token = "0x4000E16")]
	private const string SoundFXVolumeKey = "SoundFXVolume";

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string MusicLoopId;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4768", Offset = "0x7D4768")]
	public AudioSourceController audioSourceControllerPrefab;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int sourceCount;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSourceController ambisonicAudioSourceControllerPrefab;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int ambisonicSourceCount;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D47A0", Offset = "0x7D47A0")]
	public SoundLibrary soundLibraryPrefab;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D47D8", Offset = "0x7D47D8")]
	public int maxConcurrentPlaysPerEvent;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float crossfadeTime;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool defaultOffInEditor;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool logAllSoundPlaysInEditor;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4810", Offset = "0x7D4810")]
	public AudioMixer gameAudioMixer;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4848", Offset = "0x7D4848")]
	public AudioMixerSnapshot defaultMixSnapshot;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioMixerSnapshot deathMixSnapshot;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioMixerSnapshot loadingMixSnapshot;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioMixerSnapshot lostHealthMixSnapshot;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4880", Offset = "0x7D4880")]
	public float moveDistanceForMaxPitchShift;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float highestEnginePitchShift;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool booted;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<AudioSourceController> standardAudioSources;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int currentStandardIndex;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<AudioSourceController> ambisonicAudioSources;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int currentAmbisonicIndex;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<string, AudioSourceController> loopControllers;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<CompoundSoundEvent> compoundControllers;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool musicEventQueueActive;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AudioSourceController musicController;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Queue<string> crossfadeQueue;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string currentMusicTrack;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string currentAmbientEventKey;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private MappedList<PitchModLevels> pitchModifiers;

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xA09BD4", Offset = "0xA09BD4", VA = "0xA09BD4")]
	public List<string> allEventKeys()
	{
		return null;
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xA09984", Offset = "0xA09984", VA = "0xA09984")]
	public void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xA0A61C", Offset = "0xA0A61C", VA = "0xA0A61C")]
	public void updateMusicVolume(float alpha)
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xA0A5CC", Offset = "0xA0A5CC", VA = "0xA0A5CC")]
	public float getCurrentMusicLevelAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xA0A908", Offset = "0xA0A908", VA = "0xA0A908")]
	public float getMusicLevelFromMixer()
	{
		return default(float);
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xA0A97C", Offset = "0xA0A97C", VA = "0xA0A97C")]
	public float getSoundFxLevelFromMixer()
	{
		return default(float);
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xA0A9F0", Offset = "0xA0A9F0", VA = "0xA0A9F0")]
	public string getMusicControllerMixerGroup()
	{
		return null;
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xA0A77C", Offset = "0xA0A77C", VA = "0xA0A77C")]
	public void updateSoundFXVolume(float alpha)
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xA0A87C", Offset = "0xA0A87C", VA = "0xA0A87C")]
	private float volumeForAlpha(float alpha)
	{
		return default(float);
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xA0A72C", Offset = "0xA0A72C", VA = "0xA0A72C")]
	public float getCurrentSoundFXLevelAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xA0AAA4", Offset = "0xA0AAA4", VA = "0xA0AAA4")]
	public void setMasterVolumeFadeDownAmount(float alpha)
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xA0AB44", Offset = "0xA0AB44", VA = "0xA0AB44")]
	public void crossfadeToMusic(string eventKey)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xA0AC8C", Offset = "0xA0AC8C", VA = "0xA0AC8C")]
	private void processCrossfadeQueue()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xA0B20C", Offset = "0xA0B20C", VA = "0xA0B20C")]
	private void fadeOutPreviousMusic(AudioSourceController previousMusicController)
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xA0B93C", Offset = "0xA0B93C", VA = "0xA0B93C")]
	public string getCurrentMusicEventKey()
	{
		return null;
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xA0B9CC", Offset = "0xA0B9CC", VA = "0xA0B9CC")]
	public void changeToAmbientEvent(string eventKey)
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xA0A82C", Offset = "0xA0A82C", VA = "0xA0A82C")]
	public void playDefaultAmbience()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xA0BAD0", Offset = "0xA0BAD0", VA = "0xA0BAD0")]
	public void stopAmbient()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xA0BC88", Offset = "0xA0BC88", VA = "0xA0BC88")]
	public void transitionToDefaultMix(float timeToReach = 1f)
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xA0BCA4", Offset = "0xA0BCA4", VA = "0xA0BCA4")]
	public void transitionToDeathMix(float timeToReach)
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xA0A810", Offset = "0xA0A810", VA = "0xA0A810")]
	public void transitionToLoadingMix(float timeToReach)
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xA0BCC0", Offset = "0xA0BCC0", VA = "0xA0BCC0")]
	public void transitionToLostHealthMix(float timeToReach)
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xA0BB6C", Offset = "0xA0BB6C", VA = "0xA0BB6C")]
	public static void playCompoundEvent(string eventKey, [Optional] Transform location)
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xA0BC04", Offset = "0xA0BC04", VA = "0xA0BC04")]
	public static void stopCompoundEvent(string eventKey)
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xA0BEE0", Offset = "0xA0BEE0", VA = "0xA0BEE0")]
	public static AudioSourceController playLoopingEvent(string eventKey, string loopID, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xA0C084", Offset = "0xA0C084", VA = "0xA0C084")]
	public static void stopLoopingEvent(string loopID)
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xA0C1E8", Offset = "0xA0C1E8", VA = "0xA0C1E8")]
	public static bool isLoopRunning(string loopId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xA0C278", Offset = "0xA0C278", VA = "0xA0C278")]
	public static AudioSourceController playSoundEvent(string eventKey, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xA0C5B4", Offset = "0xA0C5B4", VA = "0xA0C5B4")]
	public static AudioSourceController playSoundEvent(SoundEvent theEvent, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xA0C768", Offset = "0xA0C768", VA = "0xA0C768")]
	public static bool soundEventExists(string eventKey)
	{
		return default(bool);
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xA0C92C", Offset = "0xA0C92C", VA = "0xA0C92C")]
	public static bool isALoopingEvent(string eventKey)
	{
		return default(bool);
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xA0BDE8", Offset = "0xA0BDE8", VA = "0xA0BDE8")]
	private void endCompoundEvent(string soundKey)
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xA0BCDC", Offset = "0xA0BCDC", VA = "0xA0BCDC")]
	private void startCompoundEvent(string soundKey, Transform location)
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xA0CA18", Offset = "0xA0CA18", VA = "0xA0CA18")]
	private void Update()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xA0CC98", Offset = "0xA0CC98", VA = "0xA0CC98")]
	private void bumpUpModifiedPitch(string pitchKey)
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xA0CDF8", Offset = "0xA0CDF8", VA = "0xA0CDF8")]
	public float pitchToAddToHits(string pitchKey)
	{
		return default(float);
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xA0CED8", Offset = "0xA0CED8", VA = "0xA0CED8")]
	public void updateLoopingEventPitch(string loopID, float pitchShift)
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xA0CF90", Offset = "0xA0CF90", VA = "0xA0CF90")]
	public void updateLoopingEventVolume(string loopID, float volumeShift)
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xA0C10C", Offset = "0xA0C10C", VA = "0xA0C10C")]
	private void stopLoopEvent(string loopID, [Optional] string incomingSoundKey)
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xA0BF80", Offset = "0xA0BF80", VA = "0xA0BF80")]
	private AudioSourceController startLoopEvent(string soundKey, string loopID, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xA0C64C", Offset = "0xA0C64C", VA = "0xA0C64C")]
	private AudioSourceController playEvent(SoundEvent theEvent, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xA0C310", Offset = "0xA0C310", VA = "0xA0C310")]
	private AudioSourceController playEvent(string eventKey, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xA0B3B0", Offset = "0xA0B3B0", VA = "0xA0B3B0")]
	private AudioSourceController nextController(bool isAmbisonic)
	{
		return null;
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xA0D2B4", Offset = "0xA0D2B4", VA = "0xA0D2B4")]
	private bool canCullEventKey(string eventKey, bool eventKeyIsAlreadyToLowered = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xA0D048", Offset = "0xA0D048", VA = "0xA0D048")]
	public bool isEventAtMaxPlayCount(string checkEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xA0D398", Offset = "0xA0D398", VA = "0xA0D398")]
	public int eventPlayingCount(string checkEvent)
	{
		return default(int);
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xA0D4F0", Offset = "0xA0D4F0", VA = "0xA0D4F0")]
	public void releaseAllAudioSourceClips()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xA09DC4", Offset = "0xA09DC4", VA = "0xA09DC4")]
	private void setupAudioSourcePools()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xA0D6A4", Offset = "0xA0D6A4", VA = "0xA0D6A4")]
	public SoundController()
	{
	}
}
[Token(Token = "0x2000231")]
public sealed class SoundControllerParent : MonoBehaviour
{
	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioListener theListener;

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xA0DBFC", Offset = "0xA0DBFC", VA = "0xA0DBFC")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xA0DCA0", Offset = "0xA0DCA0", VA = "0xA0DCA0")]
	public void enableListener()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xA0DCC0", Offset = "0xA0DCC0", VA = "0xA0DCC0")]
	public SoundControllerParent()
	{
	}
}
[Serializable]
[Token(Token = "0x2000232")]
public sealed class SoundEvent
{
	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string eventKey;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioClip> clipList;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve pitch;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve volume;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixerGroup mixingGroup;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isAmbisonic;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool loops;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool startAtRandomTime;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool doesUseModifiedPitch;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string modifiedPitchKey;

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xA0DCC8", Offset = "0xA0DCC8", VA = "0xA0DCC8")]
	public SoundEvent()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xA0DE04", Offset = "0xA0DE04", VA = "0xA0DE04")]
	private float pitchValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xA0DEA8", Offset = "0xA0DEA8", VA = "0xA0DEA8")]
	private float volumeValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xA0DEDC", Offset = "0xA0DEDC", VA = "0xA0DEDC")]
	private AudioClip clip()
	{
		return null;
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xA0D1BC", Offset = "0xA0D1BC", VA = "0xA0D1BC")]
	public void playOnSourceWithVolume(AudioSourceController sourceController, float volumePercent = 1f, [Optional] Transform location)
	{
	}
}
[Token(Token = "0x2000233")]
public class SoundEventPlayer : MonoBehaviour
{
	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool filterForUI;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool playHere;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string soundKey;

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xA0DF5C", Offset = "0xA0DF5C", VA = "0xA0DF5C")]
	public void playSound()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xA0DFE8", Offset = "0xA0DFE8", VA = "0xA0DFE8")]
	public SoundEventPlayer()
	{
	}
}
[Token(Token = "0x2000234")]
public sealed class SoundLibrary : MonoBehaviour
{
	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SoundEvent> soundEvents;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CompoundSoundEvent> compoundSoundEvents;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D48B8", Offset = "0x7D48B8")]
	public AudioMixerGroup soundFXGroup;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, SoundEvent> eventMap;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, CompoundSoundEvent> compoundMap;

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xA0A018", Offset = "0xA0A018", VA = "0xA0A018")]
	public void bootstrap()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600116B")]
	[Address(RVA = "0xA0DFF8", Offset = "0xA0DFF8", VA = "0xA0DFF8")]
	public SoundEvent eventForKey(string key)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x600116C")]
	[Address(RVA = "0xA0E070", Offset = "0xA0E070", VA = "0xA0E070")]
	public CompoundSoundEvent compoundEventForKey(string key)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x600116D")]
	[Address(RVA = "0xA0E0E8", Offset = "0xA0E0E8", VA = "0xA0E0E8")]
	public void playKeyedSoundEventOnSource(string key, AudioSourceController sourceController, float volumePercent = 1f, [Optional] Transform location)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600116E")]
	[Address(RVA = "0xA0E200", Offset = "0xA0E200", VA = "0xA0E200")]
	public void playKeyedSoundEventOnSource(SoundEvent theEvent, AudioSourceController sourceController, float volumePercent = 1f, [Optional] Transform location)
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xA09C8C", Offset = "0xA09C8C", VA = "0xA09C8C")]
	public List<string> allEventKeys()
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6001170")]
	[Address(RVA = "0xA0E2B8", Offset = "0xA0E2B8", VA = "0xA0E2B8")]
	public bool eventExists(string eventKey)
	{
		return default(bool);
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xA0E364", Offset = "0xA0E364", VA = "0xA0E364")]
	public bool eventExistsSlow(string eventKey)
	{
		return default(bool);
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xA0E418", Offset = "0xA0E418", VA = "0xA0E418")]
	public int getEventIndex(string eventKey)
	{
		return default(int);
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xA0E4D8", Offset = "0xA0E4D8", VA = "0xA0E4D8")]
	public SoundLibrary()
	{
	}
}
[Token(Token = "0x2000235")]
public sealed class SoundOnClick : SoundEventPlayer, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x6001174")]
	[Address(RVA = "0xA0E654", Offset = "0xA0E654", VA = "0xA0E654", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xA0E658", Offset = "0xA0E658", VA = "0xA0E658")]
	public SoundOnClick()
	{
	}
}
[Token(Token = "0x2000236")]
public sealed class SoundOnClickButton : SoundEventPlayer, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button myButton;

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xA0E668", Offset = "0xA0E668", VA = "0xA0E668")]
	private void Start()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xA0E798", Offset = "0xA0E798", VA = "0xA0E798", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xA0E834", Offset = "0xA0E834", VA = "0xA0E834")]
	public SoundOnClickButton()
	{
	}
}
[Token(Token = "0x2000237")]
public sealed class SoundOnEnable : SoundEventPlayer
{
	[Token(Token = "0x6001179")]
	[Address(RVA = "0xA0E844", Offset = "0xA0E844", VA = "0xA0E844")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xA0E848", Offset = "0xA0E848", VA = "0xA0E848")]
	public SoundOnEnable()
	{
	}
}
[Token(Token = "0x2000238")]
public class TerrainFadeInController : MonoBehaviour
{
	[Token(Token = "0x200038B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE470", Offset = "0x7CE470")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool forward;

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xA14FA8", Offset = "0xA14FA8", VA = "0xA14FA8")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xA15024", Offset = "0xA15024", VA = "0xA15024")]
		internal void <lerpTutorialSkyBG>b__0(float alpha)
		{
		}
	}

	[Token(Token = "0x4000E49")]
	private const string GlobalSkyAlphaKey = "_GLOBAL_TUTORIALSKY_TEXALPHA";

	[Token(Token = "0x4000E4A")]
	private const string GlobalFadeInKey = "_GLOBAL_FADEIN_VALUE";

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool AV_isAnimating;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float AV_terrainFadeAlpha;

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xA14D60", Offset = "0xA14D60", VA = "0xA14D60")]
	private void Update()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xA14DD0", Offset = "0xA14DD0", VA = "0xA14DD0")]
	public void prepareTutorialSkyBG()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xA14E20", Offset = "0xA14E20", VA = "0xA14E20")]
	public void refreshScenery()
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xA14D74", Offset = "0xA14D74", VA = "0xA14D74")]
	public void setTerrainFade(float alpha)
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xA14EAC", Offset = "0xA14EAC", VA = "0xA14EAC")]
	public void lerpTutorialSkyBG(float time, bool forward = true)
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xA14FB0", Offset = "0xA14FB0", VA = "0xA14FB0")]
	public void setShaderDefaults()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xA1501C", Offset = "0xA1501C", VA = "0xA1501C")]
	public TerrainFadeInController()
	{
	}
}
[Token(Token = "0x2000239")]
public class TerrainSceneEditingWorkflow : DebugOnlyItem
{
	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MightyVRController controller;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject children;

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xA15094", Offset = "0xA15094", VA = "0xA15094", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xA15134", Offset = "0xA15134", VA = "0xA15134")]
	public TerrainSceneEditingWorkflow()
	{
	}
}
[Token(Token = "0x200023A")]
public class TerrainSceneryRandomiser : MonoBehaviour
{
	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isEditingAllowed;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool enableMeshRandomisation;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh[] options;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool enableTransformRandomisation;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minScale;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxScale;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool incrementalYRotation;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 minRotation;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 maxRotation;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float yOffsetMin;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float yOffsetMax;

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xA1513C", Offset = "0xA1513C", VA = "0xA1513C")]
	public void reset()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xA15334", Offset = "0xA15334", VA = "0xA15334")]
	public void runRandomiser(bool isLoggingOut, bool isCleaningUp)
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xA158DC", Offset = "0xA158DC", VA = "0xA158DC")]
	public TerrainSceneryRandomiser()
	{
	}
}
[Token(Token = "0x200023B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CC6D4", Offset = "0x7CC6D4")]
public class ImportVariables : ScriptableObject
{
	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4910", Offset = "0x7D4910")]
	public List<string> requiredFileContents;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4948", Offset = "0x7D4948")]
	public List<string> excludedFiles;

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x9EDA24", Offset = "0x9EDA24", VA = "0x9EDA24")]
	public bool isValidForBottomFaceRemoval(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x9EDB48", Offset = "0x9EDB48", VA = "0x9EDB48")]
	public ImportVariables()
	{
	}
}
[Token(Token = "0x200023C")]
public class SpriteBuilder : MonoBehaviour
{
	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4980", Offset = "0x7D4980")]
	public bool isCapturingTMPSprites;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int windowSize;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D49B8", Offset = "0x7D49B8")]
	public float scaleFactor;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int importSize;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D49F0", Offset = "0x7D49F0")]
	public Transform spawningParent;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 defaultPosition;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 defaultRotation;

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xA11B08", Offset = "0xA11B08", VA = "0xA11B08")]
	public static string getEnemySpriteAssetNameForUI(string worldId, EnemyClass enemyClass, int enemyIndex)
	{
		return null;
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xA11B8C", Offset = "0xA11B8C", VA = "0xA11B8C")]
	public static string getEnemySpriteAssetName(string worldId, EnemyClass enemyClass, int enemyIndex)
	{
		return null;
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xA11C3C", Offset = "0xA11C3C", VA = "0xA11C3C")]
	public static string getPowerupSpriteAssetNameForUI(string prefabKay)
	{
		return null;
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xA11CA8", Offset = "0xA11CA8", VA = "0xA11CA8")]
	public static string getPowerupSpriteAssetName(string prefabKay)
	{
		return null;
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xA11CFC", Offset = "0xA11CFC", VA = "0xA11CFC")]
	public static string getPilotSpriteAssetNameForUI(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xA11D6C", Offset = "0xA11D6C", VA = "0xA11D6C")]
	public static string getPilotSpriteAssetName(string pilotId, bool isHQ = false)
	{
		return null;
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xA11DF4", Offset = "0xA11DF4", VA = "0xA11DF4")]
	public SpriteBuilder()
	{
	}
}
[Token(Token = "0x200023D")]
public class ArcadeTypeMeta
{
	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string arcadeTypeId;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string arcadeTypeLocKey;

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xB74F4C", Offset = "0xB74F4C", VA = "0xB74F4C")]
	public ArcadeTypeMeta(Command theCommand)
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xB74FB8", Offset = "0xB74FB8", VA = "0xB74FB8")]
	public string localisedName()
	{
		return null;
	}
}
[Token(Token = "0x200023E")]
public class ScheduleArcadeLevelMeta
{
	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A28", Offset = "0x7D4A28")]
	private string <oculusEventId>k__BackingField;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A38", Offset = "0x7D4A38")]
	private string <levelContainerName>k__BackingField;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A48", Offset = "0x7D4A48")]
	private string <arcadeTypeId>k__BackingField;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A58", Offset = "0x7D4A58")]
	private DateTime <startDateUTC>k__BackingField;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A68", Offset = "0x7D4A68")]
	private DateTime <endDateUTC>k__BackingField;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A78", Offset = "0x7D4A78")]
	private bool <isActiveInDevBuild>k__BackingField;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A88", Offset = "0x7D4A88")]
	private bool <isActiveInReleaseBuild>k__BackingField;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameStateList stateList;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A98", Offset = "0x7D4A98")]
	private bool <hasPlayed>k__BackingField;

	[Token(Token = "0x1700008F")]
	public string oculusEventId
	{
		[Token(Token = "0x6001192")]
		[Address(RVA = "0xACB7E0", Offset = "0xACB7E0", VA = "0xACB7E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D88B8", Offset = "0x7D88B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001193")]
		[Address(RVA = "0xACB7E8", Offset = "0xACB7E8", VA = "0xACB7E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D88C8", Offset = "0x7D88C8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public string levelContainerName
	{
		[Token(Token = "0x6001194")]
		[Address(RVA = "0xACB7F0", Offset = "0xACB7F0", VA = "0xACB7F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D88D8", Offset = "0x7D88D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001195")]
		[Address(RVA = "0xACB7F8", Offset = "0xACB7F8", VA = "0xACB7F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D88E8", Offset = "0x7D88E8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public string arcadeTypeId
	{
		[Token(Token = "0x6001196")]
		[Address(RVA = "0xACB800", Offset = "0xACB800", VA = "0xACB800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D88F8", Offset = "0x7D88F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001197")]
		[Address(RVA = "0xACB808", Offset = "0xACB808", VA = "0xACB808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8908", Offset = "0x7D8908")]
		private set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public DateTime startDateUTC
	{
		[Token(Token = "0x6001198")]
		[Address(RVA = "0xACB810", Offset = "0xACB810", VA = "0xACB810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8918", Offset = "0x7D8918")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x6001199")]
		[Address(RVA = "0xACB818", Offset = "0xACB818", VA = "0xACB818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8928", Offset = "0x7D8928")]
		private set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public DateTime endDateUTC
	{
		[Token(Token = "0x600119A")]
		[Address(RVA = "0xACB820", Offset = "0xACB820", VA = "0xACB820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8938", Offset = "0x7D8938")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x600119B")]
		[Address(RVA = "0xACB828", Offset = "0xACB828", VA = "0xACB828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8948", Offset = "0x7D8948")]
		private set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public bool isActiveInDevBuild
	{
		[Token(Token = "0x600119C")]
		[Address(RVA = "0xACB830", Offset = "0xACB830", VA = "0xACB830")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8958", Offset = "0x7D8958")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600119D")]
		[Address(RVA = "0xACB838", Offset = "0xACB838", VA = "0xACB838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8968", Offset = "0x7D8968")]
		private set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public bool isActiveInReleaseBuild
	{
		[Token(Token = "0x600119E")]
		[Address(RVA = "0xACB844", Offset = "0xACB844", VA = "0xACB844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8978", Offset = "0x7D8978")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600119F")]
		[Address(RVA = "0xACB84C", Offset = "0xACB84C", VA = "0xACB84C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8988", Offset = "0x7D8988")]
		private set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public bool hasPlayed
	{
		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xACB858", Offset = "0xACB858", VA = "0xACB858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8998", Offset = "0x7D8998")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xACB860", Offset = "0xACB860", VA = "0xACB860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D89A8", Offset = "0x7D89A8")]
		private set
		{
		}
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xACB86C", Offset = "0xACB86C", VA = "0xACB86C")]
	public ScheduleArcadeLevelMeta(Command theCommand)
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0xACB9F0", Offset = "0xACB9F0", VA = "0xACB9F0")]
	private void loadState()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0xACBAC0", Offset = "0xACBAC0", VA = "0xACBAC0")]
	private void saveState()
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xACBB60", Offset = "0xACBB60", VA = "0xACBB60")]
	public void markAsPlayed()
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xACBB78", Offset = "0xACBB78", VA = "0xACBB78")]
	public bool isInTheFuture()
	{
		return default(bool);
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xACBC64", Offset = "0xACBC64", VA = "0xACBC64")]
	public bool isCurrentlyRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xACBD50", Offset = "0xACBD50", VA = "0xACBD50")]
	public bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xACBE3C", Offset = "0xACBE3C", VA = "0xACBE3C")]
	public string getTimeUntilEventStartsString()
	{
		return null;
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xACBEA8", Offset = "0xACBEA8", VA = "0xACBEA8")]
	public string getTimeUntilFinishedString()
	{
		return null;
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xACBF14", Offset = "0xACBF14", VA = "0xACBF14")]
	public void debugForceActiveTimeWindow(int seconds = 300)
	{
	}
}
[Token(Token = "0x200023F")]
public class TournamentController : SingletonMono<TournamentController>
{
	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE480", Offset = "0x7CE480")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScheduleArcadeLevelMeta arcadeLevel;

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xA1BF60", Offset = "0xA1BF60", VA = "0xA1BF60")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xA1D3B0", Offset = "0xA1D3B0", VA = "0xA1D3B0")]
		internal bool <scheduleArcadeLevel>b__0(ScheduleArcadeLevelMeta alreadyScheduled)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200038D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE490", Offset = "0x7CE490")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TournamentController <>4__this;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isDevBuild;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isReleaseBuild;

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xA1BF68", Offset = "0xA1BF68", VA = "0xA1BF68")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xA1D3DC", Offset = "0xA1D3DC", VA = "0xA1D3DC")]
		internal bool <bootstrapArcadeLevelSchedule>b__0(ScheduleArcadeLevelMeta arcadeLevel)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE4A0", Offset = "0x7CE4A0")]
	private sealed class <>c
	{
		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<ScheduleArcadeLevelMeta> <>9__25_0;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<ScheduleArcadeLevelMeta> <>9__53_0;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<ScheduleArcadeLevelMeta> <>9__53_1;

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xA1D30C", Offset = "0xA1D30C", VA = "0xA1D30C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xA1D314", Offset = "0xA1D314", VA = "0xA1D314")]
		internal int <refreshTrackedArcadeSchedules>b__25_0(ScheduleArcadeLevelMeta levelA, ScheduleArcadeLevelMeta levelB)
		{
			return default(int);
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xA1D354", Offset = "0xA1D354", VA = "0xA1D354")]
		internal bool <getMostRecentCompletedEvent>b__53_0(ScheduleArcadeLevelMeta level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xA1D370", Offset = "0xA1D370", VA = "0xA1D370")]
		internal int <getMostRecentCompletedEvent>b__53_1(ScheduleArcadeLevelMeta levelA, ScheduleArcadeLevelMeta levelB)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MappedList<ArcadeTypeMeta> arcadeTypes;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ScheduleArcadeLevelMeta> theSchedule;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ScheduleArcadeLevelMeta activeArcade;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ScheduleArcadeLevelMeta upcomingArcade;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MappedList<LevelContainer> containers;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameStateList stateList;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string previousWorld;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string previousPilot;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameDifficulty previousDifficulty;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int previousHighestRank;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private long previousHighestScore;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float previousRecalledDuration;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string ContainerResourcePath;

	[Token(Token = "0x17000097")]
	private LevelContainer activeArcadeSettings
	{
		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xA1B2B0", Offset = "0xA1B2B0", VA = "0xA1B2B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000098")]
	public static string oculusLeaderboardId
	{
		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xA1ADE8", Offset = "0xA1ADE8", VA = "0xA1ADE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0xA1B398", Offset = "0xA1B398", VA = "0xA1B398")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0xA1B544", Offset = "0xA1B544", VA = "0xA1B544")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0xA1BAA0", Offset = "0xA1BAA0", VA = "0xA1BAA0")]
	private void loadState()
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0xA1BBE8", Offset = "0xA1BBE8", VA = "0xA1BBE8")]
	private void saveState()
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0xA1BCB0", Offset = "0xA1BCB0", VA = "0xA1BCB0")]
	private void defineArcadeType(Command theCommand)
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0xA1BDE0", Offset = "0xA1BDE0", VA = "0xA1BDE0")]
	private void scheduleArcadeLevel(Command theCommand)
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0xA1B78C", Offset = "0xA1B78C", VA = "0xA1B78C")]
	private void bootstrapArcadeLevelSchedule()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0xA1BF70", Offset = "0xA1BF70", VA = "0xA1BF70")]
	private bool isValidSchedule(ScheduleArcadeLevelMeta arcadeLevel, bool isDevBuild, bool isReleaseBuild)
	{
		return default(bool);
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0xA19FB0", Offset = "0xA19FB0", VA = "0xA19FB0")]
	public void refreshTrackedArcadeSchedules()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0xA1B1FC", Offset = "0xA1B1FC", VA = "0xA1B1FC")]
	public bool isActiveArcadeRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0xA1C1E0", Offset = "0xA1C1E0", VA = "0xA1C1E0")]
	public bool hasPlayedActiveArcade()
	{
		return default(bool);
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0xA1C200", Offset = "0xA1C200", VA = "0xA1C200")]
	public string getTimeLeftStringForActiveArcade()
	{
		return null;
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0xA1AFD4", Offset = "0xA1AFD4", VA = "0xA1AFD4")]
	public bool isThereAnUpcomingEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0xA1AB5C", Offset = "0xA1AB5C", VA = "0xA1AB5C")]
	public string getTimeLeftStringUntilNextArcadeEvent()
	{
		return null;
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xA1C2BC", Offset = "0xA1C2BC", VA = "0xA1C2BC")]
	public void configureGameSettingsForTournament()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xA1C73C", Offset = "0xA1C73C", VA = "0xA1C73C")]
	public void applyPreTournamentSettings()
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0xA1B6E4", Offset = "0xA1B6E4", VA = "0xA1B6E4")]
	public static bool isTournamentModeEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0xA1C534", Offset = "0xA1C534", VA = "0xA1C534")]
	private void applySettings(string worldId, string pilotId, GameDifficulty difficulty, bool isEnteringTournament)
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0xA1C808", Offset = "0xA1C808", VA = "0xA1C808")]
	public LevelContainer getTournamentContainer()
	{
		return null;
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0xA1B010", Offset = "0xA1B010", VA = "0xA1B010")]
	public LevelContainer getUpcomingEventContainer()
	{
		return null;
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0xA1C810", Offset = "0xA1C810", VA = "0xA1C810")]
	public string currentArcadeLocalisedName()
	{
		return null;
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xA1B008", Offset = "0xA1B008", VA = "0xA1B008")]
	public string upcomingArcadeLocalisedName()
	{
		return null;
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xA1AE60", Offset = "0xA1AE60", VA = "0xA1AE60")]
	public string localisedNameForScheduledArcade(ScheduleArcadeLevelMeta scheduleItem)
	{
		return null;
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xA1C818", Offset = "0xA1C818", VA = "0xA1C818")]
	public Dictionary<string, int> powerupOverrideWeights()
	{
		return null;
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xA1C920", Offset = "0xA1C920", VA = "0xA1C920")]
	public float getLevelDuration()
	{
		return default(float);
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xA1C9E4", Offset = "0xA1C9E4", VA = "0xA1C9E4")]
	public float getBulletSpeedMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0xA1CA8C", Offset = "0xA1CA8C", VA = "0xA1CA8C")]
	public float getMaxScoreMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0xA1CB34", Offset = "0xA1CB34", VA = "0xA1CB34")]
	public float getMultiplierCountdownTime()
	{
		return default(float);
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0xA1CBDC", Offset = "0xA1CBDC", VA = "0xA1CBDC")]
	public bool areGunsBlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0xA1CC8C", Offset = "0xA1CC8C", VA = "0xA1CC8C")]
	public bool areMissilesBlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0xA1CD3C", Offset = "0xA1CD3C", VA = "0xA1CD3C")]
	public void newTournamentScore(int score)
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0xA1CE7C", Offset = "0xA1CE7C", VA = "0xA1CE7C")]
	public int getArcadeRank()
	{
		return default(int);
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0xA1CE84", Offset = "0xA1CE84", VA = "0xA1CE84")]
	public long getArcadeScore()
	{
		return default(long);
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0xA1CE8C", Offset = "0xA1CE8C", VA = "0xA1CE8C")]
	public bool debugSetActiveEvent(ScheduleArcadeLevelMeta levelMeta)
	{
		return default(bool);
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xA1CFB8", Offset = "0xA1CFB8", VA = "0xA1CFB8")]
	public bool debugSetNewEventExpiry(int seconds)
	{
		return default(bool);
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xA1D050", Offset = "0xA1D050", VA = "0xA1D050")]
	public List<ScheduleArcadeLevelMeta> getAllScheduledLevels()
	{
		return null;
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0xA1AC08", Offset = "0xA1AC08", VA = "0xA1AC08")]
	public ScheduleArcadeLevelMeta getMostRecentCompletedEvent()
	{
		return null;
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0xA1B2B8", Offset = "0xA1B2B8", VA = "0xA1B2B8")]
	private LevelContainer getLevelContainerForSchedule(ScheduleArcadeLevelMeta schedule)
	{
		return null;
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xA1D0EC", Offset = "0xA1D0EC", VA = "0xA1D0EC")]
	public LevelContainer getLevelContainerForId(string containerName)
	{
		return null;
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0xA1D1C8", Offset = "0xA1D1C8", VA = "0xA1D1C8")]
	public TournamentController()
	{
	}
}
[Token(Token = "0x2000240")]
public sealed class TournamentControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TournamentController tournamentController;

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xA1D410", Offset = "0xA1D410", VA = "0xA1D410", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xA1D4F4", Offset = "0xA1D4F4", VA = "0xA1D4F4", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xA1D52C", Offset = "0xA1D52C", VA = "0xA1D52C")]
	public TournamentControllerBooter()
	{
	}
}
[Token(Token = "0x2000241")]
public class TournamentModeTestPanel : MonoBehaviour
{
	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimpleShootableButton buttonTemplate;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text headerLabel;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text infoLabel;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4AA8", Offset = "0x7D4AA8")]
	public GameObject previousButton;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject nextButton;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text pageLabel;

	[Token(Token = "0x4000E82")]
	private const int ItemsPerPage = 18;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int pageIndex;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TypedObjectPool<SimpleShootableButton> buttonPool;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<ScheduleArcadeLevelMeta> scheduledLevels;

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xA1D534", Offset = "0xA1D534", VA = "0xA1D534")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xA1DD84", Offset = "0xA1DD84", VA = "0xA1DD84")]
	public void nextPagePressed()
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0xA1DD94", Offset = "0xA1DD94", VA = "0xA1DD94")]
	public void previousPagePressed()
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xA1D75C", Offset = "0xA1D75C", VA = "0xA1D75C")]
	private void updateDisplay()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xA1DDA4", Offset = "0xA1DDA4", VA = "0xA1DDA4")]
	private int GetTotalPageIndices()
	{
		return default(int);
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xA1DE0C", Offset = "0xA1DE0C", VA = "0xA1DE0C")]
	public void playButtonPressed(SimpleShootableButton button)
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xA1DFE4", Offset = "0xA1DFE4", VA = "0xA1DFE4")]
	public void updateExpireTimeForCurrentEvent(int seconds)
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xA1DF38", Offset = "0xA1DF38", VA = "0xA1DF38")]
	private void tryRefreshPanel()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xA1E280", Offset = "0xA1E280", VA = "0xA1E280")]
	public void playButtonHovered(SimpleShootableButton button)
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xA1E9B4", Offset = "0xA1E9B4", VA = "0xA1E9B4")]
	public TournamentModeTestPanel()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xA1E9C4", Offset = "0xA1E9C4", VA = "0xA1E9C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D89B8", Offset = "0x7D89B8")]
	private void <playButtonHovered>b__18_0()
	{
	}
}
[Token(Token = "0x2000242")]
public sealed class FingerPointer : MonoBehaviour
{
	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE4B0", Offset = "0x7CE4B0")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FingerPointer <>4__this;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action newNotify;

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x9DCB88", Offset = "0x9DCB88", VA = "0x9DCB88")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x9DCBD0", Offset = "0x9DCBD0", VA = "0x9DCBD0")]
		internal void <moveTo>b__0()
		{
		}
	}

	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE4C0", Offset = "0x7CE4C0")]
	private sealed class <tap>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FingerPointer <>4__this;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <down>5__2;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <delay>5__3;

		[Token(Token = "0x170001AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600196C")]
			[Address(RVA = "0x9DCD2C", Offset = "0x9DCD2C", VA = "0x9DCD2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600196E")]
			[Address(RVA = "0x9DCD94", Offset = "0x9DCD94", VA = "0x9DCD94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x9DCB90", Offset = "0x9DCB90", VA = "0x9DCB90")]
		[DebuggerHidden]
		public <tap>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x9DCC28", Offset = "0x9DCC28", VA = "0x9DCC28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x9DCC2C", Offset = "0x9DCC2C", VA = "0x9DCC2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x9DCD34", Offset = "0x9DCD34", VA = "0x9DCD34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SVGImage[] fingerUp;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SVGImage[] fingerDown;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float downTime;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TargetFollower follower;

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x9DC88C", Offset = "0x9DC88C", VA = "0x9DC88C")]
	public void startTapping()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x9DC934", Offset = "0x9DC934", VA = "0x9DC934")]
	public void stopTapping()
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x9DCA2C", Offset = "0x9DCA2C", VA = "0x9DCA2C")]
	public void goAway()
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x9DCA70", Offset = "0x9DCA70", VA = "0x9DCA70")]
	public void moveTo(string targetKey, float moveTime, [Optional] Action newNotify)
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x9DC8B8", Offset = "0x9DC8B8", VA = "0x9DC8B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D89C8", Offset = "0x7D89C8")]
	private IEnumerator tap()
	{
		return null;
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x9DC960", Offset = "0x9DC960", VA = "0x9DC960")]
	private void showFinger(bool isDown)
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x9DCBBC", Offset = "0x9DCBBC", VA = "0x9DCBBC")]
	private void playFingerDownEffect(bool isDown)
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x9DCBC0", Offset = "0x9DCBC0", VA = "0x9DCBC0")]
	public FingerPointer()
	{
	}
}
[Token(Token = "0x2000243")]
public sealed class TargetAnchor : MonoBehaviour
{
	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string anchorID;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button myButton;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action actionCallback;

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xA13D70", Offset = "0xA13D70", VA = "0xA13D70")]
	public void enableButtonInteraction(bool enabled)
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xA13E7C", Offset = "0xA13E7C", VA = "0xA13E7C")]
	public void anchorWasPressed()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xA13E90", Offset = "0xA13E90", VA = "0xA13E90")]
	public void listenForButtonTap(Action tapAction)
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0xA13F9C", Offset = "0xA13F9C", VA = "0xA13F9C")]
	public void unlisten()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0xA13FA8", Offset = "0xA13FA8", VA = "0xA13FA8")]
	public TargetAnchor()
	{
	}
}
[Token(Token = "0x2000244")]
public sealed class TargetFollower : MonoBehaviour
{
	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE4D0", Offset = "0x7CE4D0")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TargetFollower <>4__this;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startPos;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 endPos;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TargetAnchor newTarget;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action arrived;

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xA148AC", Offset = "0xA148AC", VA = "0xA148AC")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xA14C18", Offset = "0xA14C18", VA = "0xA14C18")]
		internal void <moveToTarget>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xA14CF4", Offset = "0xA14CF4", VA = "0xA14CF4")]
		internal void <moveToTarget>b__1()
		{
		}
	}

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TargetAnchor myTarget;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action targetPressedCallback;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 parkingSpace;

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0xA14020", Offset = "0xA14020", VA = "0xA14020")]
	public static void enableTargetButton(string targetID, bool enabled)
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0xA14154", Offset = "0xA14154", VA = "0xA14154")]
	public static Button targetButtonWithID(string targetID)
	{
		return null;
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0xA14284", Offset = "0xA14284", VA = "0xA14284")]
	public static bool targetIsAvailable(string targetID)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0xA1438C", Offset = "0xA1438C", VA = "0xA1438C")]
	public void findAndTarget(string targetID)
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0xA144F0", Offset = "0xA144F0", VA = "0xA144F0")]
	public TargetAnchor findTarget(string targetID)
	{
		return null;
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0xA1460C", Offset = "0xA1460C", VA = "0xA1460C")]
	public void target(TargetAnchor newTarget)
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0xA146B8", Offset = "0xA146B8", VA = "0xA146B8")]
	public void moveToTarget(TargetAnchor newTarget, float time = 0.5f, [Optional] Action arrived)
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0xA14440", Offset = "0xA14440", VA = "0xA14440")]
	public void untarget(bool doPark = true)
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0xA148B4", Offset = "0xA148B4", VA = "0xA148B4")]
	private void park()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0xA148EC", Offset = "0xA148EC", VA = "0xA148EC")]
	public void notifiyWhenTargetPressed(Action callback)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0xA149D0", Offset = "0xA149D0", VA = "0xA149D0")]
	private void targetPressed()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0xA149E4", Offset = "0xA149E4", VA = "0xA149E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0xA14B28", Offset = "0xA14B28", VA = "0xA14B28")]
	public Button targetedButton()
	{
		return null;
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0xA14C10", Offset = "0xA14C10", VA = "0xA14C10")]
	public TargetFollower()
	{
	}
}
[Token(Token = "0x2000245")]
public enum TutorialProgress
{
	[Token(Token = "0x4000E92")]
	none,
	[Token(Token = "0x4000E93")]
	moveCatAround,
	[Token(Token = "0x4000E94")]
	fireWithTrigger,
	[Token(Token = "0x4000E95")]
	dodgeBullets,
	[Token(Token = "0x4000E96")]
	powerup,
	[Token(Token = "0x4000E97")]
	powerupGrabbed,
	[Token(Token = "0x4000E98")]
	chargeMissiles,
	[Token(Token = "0x4000E99")]
	releaseCharge,
	[Token(Token = "0x4000E9A")]
	lastEnemiesToFight,
	[Token(Token = "0x4000E9B")]
	complete
}
[Token(Token = "0x2000246")]
public class TutorialController : SingletonMono<TutorialController>
{
	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE4E0", Offset = "0x7CE4E0")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialController <>4__this;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialProgress newTutorialProgress;

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xB3D4C0", Offset = "0xB3D4C0", VA = "0xB3D4C0")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xB3E19C", Offset = "0xB3E19C", VA = "0xB3E19C")]
		internal void <tutorialHasProgressed>b__0()
		{
		}
	}

	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE4F0", Offset = "0x7CE4F0")]
	private sealed class <moveAroundLoop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <moveTarget>5__2;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <controllerPulseCounter>5__3;

		[Token(Token = "0x170001AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001977")]
			[Address(RVA = "0xB3E738", Offset = "0xB3E738", VA = "0xB3E738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001979")]
			[Address(RVA = "0xB3E7A0", Offset = "0xB3E7A0", VA = "0xB3E7A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xB3D78C", Offset = "0xB3D78C", VA = "0xB3D78C")]
		[DebuggerHidden]
		public <moveAroundLoop>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xB3E3F4", Offset = "0xB3E3F4", VA = "0xB3E3F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xB3E3F8", Offset = "0xB3E3F8", VA = "0xB3E3F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xB3E740", Offset = "0xB3E740", VA = "0xB3E740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000394")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE500", Offset = "0x7CE500")]
	private sealed class <waitForPowerupGrab>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <controllerPulseCounter>5__2;

		[Token(Token = "0x170001AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600197D")]
			[Address(RVA = "0xB3EB9C", Offset = "0xB3EB9C", VA = "0xB3EB9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600197F")]
			[Address(RVA = "0xB3EC04", Offset = "0xB3EC04", VA = "0xB3EC04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xB3D834", Offset = "0xB3D834", VA = "0xB3D834")]
		[DebuggerHidden]
		public <waitForPowerupGrab>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xB3EA90", Offset = "0xB3EA90", VA = "0xB3EA90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xB3EA94", Offset = "0xB3EA94", VA = "0xB3EA94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xB3EBA4", Offset = "0xB3EBA4", VA = "0xB3EBA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000395")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE510", Offset = "0x7CE510")]
	private sealed class <waitForChargeThreshold>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <controllerPulseCounter>5__2;

		[Token(Token = "0x170001B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001983")]
			[Address(RVA = "0xB3EA20", Offset = "0xB3EA20", VA = "0xB3EA20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001985")]
			[Address(RVA = "0xB3EA88", Offset = "0xB3EA88", VA = "0xB3EA88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xB3D8DC", Offset = "0xB3D8DC", VA = "0xB3D8DC")]
		[DebuggerHidden]
		public <waitForChargeThreshold>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xB3E7A8", Offset = "0xB3E7A8", VA = "0xB3E7A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xB3E7AC", Offset = "0xB3E7AC", VA = "0xB3E7AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xB3EA28", Offset = "0xB3EA28", VA = "0xB3EA28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E9C")]
	private const string TutorialPopupId = "tutorialMessage";

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4AE0", Offset = "0x7D4AE0")]
	private TutorialProgress <tutorialProgress>k__BackingField;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4AF0", Offset = "0x7D4AF0")]
	public float messageShowTime;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float positiveFeedbackMessageShowtime;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pulseStrength;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pulseTime;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4B28", Offset = "0x7D4B28")]
	public float pulseTimeOnMoveAround;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4B60", Offset = "0x7D4B60")]
	public float pulseTimeOnPowerupCharge;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4B98", Offset = "0x7D4B98")]
	public float pulseTimeOnSaturnCharge;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float chargeTimeBeforeProgression;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlaytimeOverseer playtimeOverseer;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PopupTextController popupTextController;

	[Token(Token = "0x17000099")]
	public TutorialProgress tutorialProgress
	{
		[Token(Token = "0x6001200")]
		[Address(RVA = "0xB3D0CC", Offset = "0xB3D0CC", VA = "0xB3D0CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8A2C", Offset = "0x7D8A2C")]
		get
		{
			return default(TutorialProgress);
		}
		[Token(Token = "0x6001201")]
		[Address(RVA = "0xB3D0D4", Offset = "0xB3D0D4", VA = "0xB3D0D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8A3C", Offset = "0x7D8A3C")]
		private set
		{
		}
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0xB3D0DC", Offset = "0xB3D0DC", VA = "0xB3D0DC")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0xB3D2B8", Offset = "0xB3D2B8", VA = "0xB3D2B8", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0xB3D2B0", Offset = "0xB3D2B0", VA = "0xB3D2B0")]
	public void resetTutorialProgress()
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0xB3D39C", Offset = "0xB3D39C", VA = "0xB3D39C")]
	private void tutorialHasProgressed(TutorialProgress newTutorialProgress)
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0xB3D4FC", Offset = "0xB3D4FC", VA = "0xB3D4FC")]
	private bool tryShowProgressionFeedback(TutorialProgress newTutorialProgress)
	{
		return default(bool);
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0xB3D710", Offset = "0xB3D710", VA = "0xB3D710")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D8A4C", Offset = "0x7D8A4C")]
	private IEnumerator moveAroundLoop()
	{
		return null;
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xB3D7B8", Offset = "0xB3D7B8", VA = "0xB3D7B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D8AB0", Offset = "0x7D8AB0")]
	private IEnumerator waitForPowerupGrab()
	{
		return null;
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0xB3D860", Offset = "0xB3D860", VA = "0xB3D860")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D8B14", Offset = "0x7D8B14")]
	private IEnumerator waitForChargeThreshold()
	{
		return null;
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xB3D908", Offset = "0xB3D908", VA = "0xB3D908")]
	private void checkForPowerupProgression()
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0xB3D9A0", Offset = "0xB3D9A0", VA = "0xB3D9A0")]
	public void progressTheTutorial()
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0xB3D9AC", Offset = "0xB3D9AC", VA = "0xB3D9AC")]
	private void completeTutorialInGameState()
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0xB3DA10", Offset = "0xB3DA10", VA = "0xB3DA10")]
	public void tutorialPostGameFlow()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0xB3DAB0", Offset = "0xB3DAB0", VA = "0xB3DAB0")]
	public bool hasCompletedTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xB3DB14", Offset = "0xB3DB14", VA = "0xB3DB14")]
	public void showPowerupMessage()
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xB3DD00", Offset = "0xB3DD00", VA = "0xB3DD00")]
	public bool isPlayerShootingBlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0xB3DD40", Offset = "0xB3DD40", VA = "0xB3DD40")]
	public bool isBlockingPilotGrabbing()
	{
		return default(bool);
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0xB3DD80", Offset = "0xB3DD80", VA = "0xB3DD80")]
	public bool isPlayerChargeShotBlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0xB3D968", Offset = "0xB3D968", VA = "0xB3D968")]
	public bool isPowerupTutorialPhase()
	{
		return default(bool);
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0xB3DDDC", Offset = "0xB3DDDC", VA = "0xB3DDDC")]
	public bool isTutorialBlockingDeath()
	{
		return default(bool);
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0xB3DE00", Offset = "0xB3DE00", VA = "0xB3DE00")]
	public bool onlyMissilesCanKillEnemies()
	{
		return default(bool);
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0xB3D4C8", Offset = "0xB3D4C8", VA = "0xB3D4C8")]
	public bool isPlayingTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0xB3DDB8", Offset = "0xB3DDB8", VA = "0xB3DDB8")]
	private bool isTutorialMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0xB3DBD4", Offset = "0xB3DBD4", VA = "0xB3DBD4")]
	private void showTutorialMessage(List<string> locKeys, float durationSecs, bool playSound)
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0xB3DE3C", Offset = "0xB3DE3C", VA = "0xB3DE3C")]
	private void showTutorialMessageLocalised(List<string> localisedLines, float durationSecs, bool playSound)
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0xB3DF58", Offset = "0xB3DF58", VA = "0xB3DF58")]
	public void showTutorialMessage(string locKey, float durationSecs, bool playSound)
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0xB3DFF0", Offset = "0xB3DFF0", VA = "0xB3DFF0")]
	private void showTutorialMessageLocalised(string localisedLine, float durationSecs, bool playSound)
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0xB3D6B4", Offset = "0xB3D6B4", VA = "0xB3D6B4")]
	private void dismissTutorialMessage()
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0xB3E10C", Offset = "0xB3E10C", VA = "0xB3E10C")]
	public TutorialController()
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0xB3E194", Offset = "0xB3E194", VA = "0xB3E194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8B78", Offset = "0x7D8B78")]
	private void <bootstrap>b__15_0()
	{
	}
}
[Token(Token = "0x2000247")]
public sealed class TutorialControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x600121F")]
	[Address(RVA = "0xB3EC0C", Offset = "0xB3EC0C", VA = "0xB3EC0C", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0xB3ECEC", Offset = "0xB3ECEC", VA = "0xB3ECEC")]
	public TutorialControllerBooter()
	{
	}
}
[Token(Token = "0x2000248")]
public class TutorialMoveTarget : MonoBehaviour
{
	[Token(Token = "0x4000EA8")]
	private const string TuteMoveTargetId = "tutorialMoveMessage";

	[Token(Token = "0x4000EA9")]
	private const string SoundEffectLoopId = "TuteMoveTargetLoop";

	[Token(Token = "0x4000EAA")]
	private const float BaseHoverEffectEmission = 1f;

	[Token(Token = "0x4000EAB")]
	private const float HoverEffectEmissionMultiplier = 1.5f;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4BD0", Offset = "0x7D4BD0")]
	public Transform meshTransform;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider myCollider;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem hoverEffect;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem successEffect;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4C08", Offset = "0x7D4C08")]
	public float hoverDuration;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float delayBeforeTargetCleanup;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float delayBeforeshowingNextMessage;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float activationDelay;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7D4C40", Offset = "0x7D4C40")]
	public Vector3 offset;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isActive;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool hasProgressed;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float hoverTime;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem.EmissionModule emitter;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 velocity;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private MightyVRControlSide activeSide;

	[Token(Token = "0x6001221")]
	[Address(RVA = "0xB3E608", Offset = "0xB3E608", VA = "0xB3E608")]
	public void reset()
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0xB3EE64", Offset = "0xB3EE64", VA = "0xB3EE64")]
	private void updatePosition(bool jumpToPosition = false)
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0xB3F060", Offset = "0xB3F060", VA = "0xB3F060")]
	private void Update()
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0xB3F284", Offset = "0xB3F284", VA = "0xB3F284")]
	private void playerOverlapTimeFull()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0xB3EDD8", Offset = "0xB3EDD8", VA = "0xB3EDD8")]
	private void runActivationDelay()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0xB3F184", Offset = "0xB3F184", VA = "0xB3F184")]
	private void playerFeedbackWhileInTarget(float scale)
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0xB3EFF8", Offset = "0xB3EFF8", VA = "0xB3EFF8")]
	private void playerFeedbackForMoveTarget()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0xB3F52C", Offset = "0xB3F52C", VA = "0xB3F52C")]
	private void setHoverEffectEmission(float emissionRate)
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0xB3F380", Offset = "0xB3F380", VA = "0xB3F380")]
	private void disableHoverEffect()
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0xB3F4A8", Offset = "0xB3F4A8", VA = "0xB3F4A8")]
	private void hideMessage()
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0xB3ECF4", Offset = "0xB3ECF4", VA = "0xB3ECF4")]
	private void showMessage(string message)
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0xB3F594", Offset = "0xB3F594", VA = "0xB3F594")]
	private void playAppearSound()
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0xB3F458", Offset = "0xB3F458", VA = "0xB3F458")]
	private void playProgressSound()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0xB3F5E4", Offset = "0xB3F5E4", VA = "0xB3F5E4")]
	private void playSound(string eventKey)
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0xB3F714", Offset = "0xB3F714", VA = "0xB3F714")]
	public TutorialMoveTarget()
	{
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0xB3F730", Offset = "0xB3F730", VA = "0xB3F730")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8B88", Offset = "0x7D8B88")]
	private void <playerOverlapTimeFull>b__22_0()
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xB3F7C4", Offset = "0xB3F7C4", VA = "0xB3F7C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8B98", Offset = "0x7D8B98")]
	private void <playerOverlapTimeFull>b__22_1()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0xB3F86C", Offset = "0xB3F86C", VA = "0xB3F86C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8BA8", Offset = "0x7D8BA8")]
	private void <runActivationDelay>b__23_0()
	{
	}
}
[Token(Token = "0x2000249")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CC718", Offset = "0x7CC718")]
public class DemoPlayerController : MonoBehaviour
{
	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mainCamera;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterController characterController;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float movementSpeed;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationX;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotationY;

	[Token(Token = "0x4000EC0")]
	private const float clampAngleDegrees = 80f;

	[Token(Token = "0x4000EC1")]
	private const float sensitivity = 2f;

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xA05AD0", Offset = "0xA05AD0", VA = "0xA05AD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xA05B78", Offset = "0xA05B78", VA = "0xA05B78")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xA05DF4", Offset = "0xA05DF4", VA = "0xA05DF4")]
	private void SetCursorLock(bool lockCursor)
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0xA05E30", Offset = "0xA05E30", VA = "0xA05E30")]
	public DemoPlayerController()
	{
	}
}
[Token(Token = "0x200024A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CC77C", Offset = "0x7CC77C")]
public class ResonanceAudioDemoCubeController : MonoBehaviour
{
	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material material;

	[Token(Token = "0x6001237")]
	[Address(RVA = "0xAC6550", Offset = "0xAC6550", VA = "0xAC6550")]
	private void Start()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0xAC65CC", Offset = "0xAC65CC", VA = "0xAC65CC")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0xAC6610", Offset = "0xAC6610", VA = "0xAC6610")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0xAC671C", Offset = "0xAC671C", VA = "0xAC671C")]
	public ResonanceAudioDemoCubeController()
	{
	}
}
[Token(Token = "0x200024B")]
public class ResonanceAudioDemoManager : MonoBehaviour
{
	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mainCamera;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ResonanceAudioDemoCubeController cube;

	[Token(Token = "0x600123B")]
	[Address(RVA = "0xAC6724", Offset = "0xAC6724", VA = "0xAC6724")]
	private void Start()
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0xAC6730", Offset = "0xAC6730", VA = "0xAC6730")]
	private void Update()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0xAC6960", Offset = "0xAC6960", VA = "0xAC6960")]
	public ResonanceAudioDemoManager()
	{
	}
}
[Token(Token = "0x200024C")]
public static class ResonanceAudio
{
	[StructLayout(0)]
	[Token(Token = "0x2000396")]
	private class RoomProperties
	{
		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float positionX;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float positionY;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float positionZ;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rotationX;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotationY;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationZ;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rotationW;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float dimensionsX;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float dimensionsY;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float dimensionsZ;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialLeft;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialRight;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialBottom;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialTop;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialFront;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialBack;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float reflectionScalar;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float reverbGain;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float reverbTime;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float reverbBrightness;

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xAC49F8", Offset = "0xAC49F8", VA = "0xAC49F8")]
		public RoomProperties()
		{
		}
	}

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform listenerTransform;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Color listenerDirectivityColor;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Color sourceDirectivityColor;

	[Token(Token = "0x4000EC8")]
	public const float distanceEpsilon = 0.01f;

	[Token(Token = "0x4000EC9")]
	public const float maxDistanceLimit = 1000000f;

	[Token(Token = "0x4000ECA")]
	public const float minDistanceLimit = 990099f;

	[Token(Token = "0x4000ECB")]
	public const float maxGainDb = 24f;

	[Token(Token = "0x4000ECC")]
	public const float minGainDb = -24f;

	[Token(Token = "0x4000ECD")]
	public const float maxReverbBrightness = 1f;

	[Token(Token = "0x4000ECE")]
	public const float minReverbBrightness = -1f;

	[Token(Token = "0x4000ECF")]
	public const float maxReverbTime = 10f;

	[Token(Token = "0x4000ED0")]
	public const float maxReflectivity = 2f;

	[Token(Token = "0x4000ED1")]
	public const int maxNumOcclusionHits = 12;

	[Token(Token = "0x4000ED2")]
	public const float occlusionDetectionInterval = 0.2f;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static RaycastHit[] occlusionHits;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static int occlusionMaskValue;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static float[] roomPosition;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static RoomProperties roomProperties;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr roomPropertiesPtr;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static Matrix4x4 transformMatrix;

	[Token(Token = "0x4000EDA")]
	private const string pluginName = "audiopluginresonanceaudio";

	[Token(Token = "0x1700009A")]
	public static Transform ListenerTransform
	{
		[Token(Token = "0x600123E")]
		[Address(RVA = "0xAC318C", Offset = "0xAC318C", VA = "0xAC318C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0xAC32DC", Offset = "0xAC32DC", VA = "0xAC32DC")]
	public static void UpdateAudioListener(ResonanceAudioListener listener)
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0xAC34F8", Offset = "0xAC34F8", VA = "0xAC34F8")]
	public static void DisableRoomEffects()
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0xAC3674", Offset = "0xAC3674", VA = "0xAC3674")]
	public static void UpdateRoom(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0xAC39C4", Offset = "0xAC39C4", VA = "0xAC39C4")]
	public static void UpdateReverbProbe(ResonanceAudioReverbProbe reverbPobe)
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0xAC3C74", Offset = "0xAC3C74", VA = "0xAC3C74")]
	public static bool StartRecording()
	{
		return default(bool);
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0xAC3C7C", Offset = "0xAC3C7C", VA = "0xAC3C7C")]
	public static bool StopRecordingAndSaveToFile(string filePath, bool seamless)
	{
		return default(bool);
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0xAC3C84", Offset = "0xAC3C84", VA = "0xAC3C84")]
	public static void InitializeReverbComputer(float[] vertices, int[] triangles, int[] materialIndices, float scatteringCoefficient)
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0xAC3C88", Offset = "0xAC3C88", VA = "0xAC3C88")]
	public static bool ComputeRt60sAndProxyRoom(ResonanceAudioReverbProbe reverbProbe, int totalNumPaths, int numPathsPerBatch, int maxDepth, float energyThreshold, float listenerSphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0xAC3C90", Offset = "0xAC3C90", VA = "0xAC3C90")]
	public static float ComputeOcclusion(Transform sourceTransform)
	{
		return default(float);
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0xAC337C", Offset = "0xAC337C", VA = "0xAC337C")]
	public static float ConvertAmplitudeFromDb(float db)
	{
		return default(float);
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0xAC3FB0", Offset = "0xAC3FB0", VA = "0xAC3FB0")]
	public static Vector2[] Generate2dPolarPattern(float alpha, float order, int resolution)
	{
		return null;
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0xAC4124", Offset = "0xAC4124", VA = "0xAC4124")]
	private static void ConvertAudioTransformFromUnity(ref Vector3 position, ref Quaternion rotation)
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0xAC4414", Offset = "0xAC4414", VA = "0xAC4414")]
	private static void SetProxyRoomProperties(ResonanceAudioReverbProbe reverbProbe, RoomProperties proxyRoomProperties)
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0xAC3834", Offset = "0xAC3834", VA = "0xAC3834")]
	private static void UpdateRoomProperties(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0xAC3B8C", Offset = "0xAC3B8C", VA = "0xAC3B8C")]
	private static void UpdateRoomProperties(ResonanceAudioReverbProbe reverbProbe)
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0xAC44B0", Offset = "0xAC44B0", VA = "0xAC44B0")]
	private static void FillGeometryOfRoomProperties(Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0xAC4600", Offset = "0xAC4600", VA = "0xAC4600")]
	private static void FillWallMaterialsOfRoomProperties(ResonanceAudioRoomManager.SurfaceMaterial leftWall, ResonanceAudioRoomManager.SurfaceMaterial rightWall, ResonanceAudioRoomManager.SurfaceMaterial floor, ResonanceAudioRoomManager.SurfaceMaterial ceiling, ResonanceAudioRoomManager.SurfaceMaterial frontWall, ResonanceAudioRoomManager.SurfaceMaterial backWall)
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0xAC46F4", Offset = "0xAC46F4", VA = "0xAC46F4")]
	private static void FillModifiersOfRoomProperties(float reverbGainDb, float reverbTime, float reverbBrightness, float reflectivity)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6001251")]
	[Address(RVA = "0xAC33F4", Offset = "0xAC33F4", VA = "0xAC33F4")]
	private static extern void SetListenerGain(float gain);

	[PreserveSig]
	[Token(Token = "0x6001252")]
	[Address(RVA = "0xAC3478", Offset = "0xAC3478", VA = "0xAC3478")]
	private static extern void SetListenerStereoSpeakerMode(bool enableStereoSpeakerMode);

	[PreserveSig]
	[Token(Token = "0x6001253")]
	[Address(RVA = "0xAC35DC", Offset = "0xAC35DC", VA = "0xAC35DC")]
	private static extern void SetRoomProperties(IntPtr roomProperties, float[] rt60s);
}
[Token(Token = "0x200024D")]
public class ResonanceAudioAcousticMesh
{
	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4C78", Offset = "0x7D4C78")]
	private Mesh <mesh>k__BackingField;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4C88", Offset = "0x7D4C88")]
	private GameObject <sourceObject>k__BackingField;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isIncludedByObjectFiltering;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ResonanceAudioRoomManager.SurfaceMaterial[] surfaceMaterialsFromSubMesh;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RangeInt[] triangleRangesFromSubMesh;

	[Token(Token = "0x4000EE0")]
	private const int unityMaxNumVerticesPerMesh = 65000;

	[Token(Token = "0x4000EE1")]
	private const int maxNumSubMeshes = 256;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material visualizationMaterial;

	[Token(Token = "0x1700009B")]
	public Mesh mesh
	{
		[Token(Token = "0x6001255")]
		[Address(RVA = "0xAC4A00", Offset = "0xAC4A00", VA = "0xAC4A00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8BB8", Offset = "0x7D8BB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001256")]
		[Address(RVA = "0xAC4A08", Offset = "0xAC4A08", VA = "0xAC4A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8BC8", Offset = "0x7D8BC8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public GameObject sourceObject
	{
		[Token(Token = "0x6001257")]
		[Address(RVA = "0xAC4A10", Offset = "0xAC4A10", VA = "0xAC4A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8BD8", Offset = "0x7D8BD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001258")]
		[Address(RVA = "0xAC4A18", Offset = "0xAC4A18", VA = "0xAC4A18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8BE8", Offset = "0x7D8BE8")]
		private set
		{
		}
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0xAC4A20", Offset = "0xAC4A20", VA = "0xAC4A20")]
	public static ResonanceAudioAcousticMesh GenerateFromMeshFilter(MeshFilter meshFilter, Shader surfaceMaterialShader)
	{
		return null;
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0xAC5344", Offset = "0xAC5344", VA = "0xAC5344")]
	public static ResonanceAudioAcousticMesh GenerateFromTerrain(Terrain terrain, Shader surfaceMaterialShader)
	{
		return null;
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0xAC5A54", Offset = "0xAC5A54", VA = "0xAC5A54")]
	public int[] GetSurfaceMaterialIndicesFromTriangle()
	{
		return null;
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0xAC5BAC", Offset = "0xAC5BAC", VA = "0xAC5BAC")]
	public void SetSurfaceMaterialToAllSubMeshes(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial)
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0xAC5D00", Offset = "0xAC5D00", VA = "0xAC5D00")]
	public void SetSurfaceMaterialToSubMesh(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial, int subMeshIndex)
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0xAC5F88", Offset = "0xAC5F88", VA = "0xAC5F88")]
	public bool Render()
	{
		return default(bool);
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0xAC6090", Offset = "0xAC6090", VA = "0xAC6090")]
	public bool IsIncluded()
	{
		return default(bool);
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0xAC616C", Offset = "0xAC616C", VA = "0xAC616C")]
	public bool IsSubMeshTriangular(int subMeshIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0xAC4C3C", Offset = "0xAC4C3C", VA = "0xAC4C3C")]
	private static int CountTriangleIndices(Mesh sourceMesh)
	{
		return default(int);
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0xAC55B8", Offset = "0xAC55B8", VA = "0xAC55B8")]
	private static void SubSampleHeightMap(int originalM, int originalN, out int m, out int n, out int subSampleStep, out int subSampledNumTriangleIndices)
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0xAC4CD4", Offset = "0xAC4CD4", VA = "0xAC4CD4")]
	private void InitializeMesh(int numTriangleIndices, int numVertices, out int[] triangles, out Vector3[] vertices)
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0xAC51BC", Offset = "0xAC51BC", VA = "0xAC51BC")]
	private void InitializeSubMeshMaterials()
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0xAC5288", Offset = "0xAC5288", VA = "0xAC5288")]
	private void InitializeVisualizationMaterial(Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0xAC4E08", Offset = "0xAC4E08", VA = "0xAC4E08")]
	private void FillVerticesAndTrianglesFromMesh(Mesh sourceMesh, Transform sourceObjectTransform, ref Vector3[] vertices, ref int[] triangles)
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0xAC5664", Offset = "0xAC5664", VA = "0xAC5664")]
	private void FillTrianglesAndVerticesFromHeightMap(Vector3 terrainPosition, Vector3 terrainSize, float[,] heightMap, int m, int n, int subSampleStep, ref int[] triangles, ref Vector3[] vertices)
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0xAC61B0", Offset = "0xAC61B0", VA = "0xAC61B0")]
	private void SetSubMeshEnds()
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0xAC5C00", Offset = "0xAC5C00", VA = "0xAC5C00")]
	private void SetSubMeshSurfaceMaterials()
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0xAC4CCC", Offset = "0xAC4CCC", VA = "0xAC4CCC")]
	public ResonanceAudioAcousticMesh()
	{
	}
}
[Token(Token = "0x200024E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CC7E0", Offset = "0x7CC7E0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CC7E0", Offset = "0x7CC7E0")]
[ExecuteInEditMode]
public class ResonanceAudioListener : MonoBehaviour
{
	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4C98", Offset = "0x7D4C98")]
	public float globalGainDb;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4CD0", Offset = "0x7D4CD0")]
	public LayerMask occlusionMask;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4D08", Offset = "0x7D4D08")]
	public bool stereoSpeakerModeEnabled;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4D40", Offset = "0x7D4D40")]
	public bool recorderSeamless;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4D78", Offset = "0x7D4D78")]
	public string recorderSourceTag;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4DB0", Offset = "0x7D4DB0")]
	private bool <IsRecording>k__BackingField;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool recorderFoldout;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<AudioSource> recorderTaggedSources;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private double recorderStartTime;

	[Token(Token = "0x1700009D")]
	public bool IsRecording
	{
		[Token(Token = "0x600126B")]
		[Address(RVA = "0xAC6968", Offset = "0xAC6968", VA = "0xAC6968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8BF8", Offset = "0x7D8BF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600126C")]
		[Address(RVA = "0xAC6970", Offset = "0xAC6970", VA = "0xAC6970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8C08", Offset = "0x7D8C08")]
		private set
		{
		}
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0xAC697C", Offset = "0xAC697C", VA = "0xAC697C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0xAC6A18", Offset = "0xAC6A18", VA = "0xAC6A18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0xAC6C44", Offset = "0xAC6C44", VA = "0xAC6C44")]
	private void Update()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0xAC6E5C", Offset = "0xAC6E5C", VA = "0xAC6E5C")]
	public double GetCurrentRecordDuration()
	{
		return default(double);
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0xAC6E98", Offset = "0xAC6E98", VA = "0xAC6E98")]
	public void StartSoundfieldRecorder()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0xAC6AB0", Offset = "0xAC6AB0", VA = "0xAC6AB0")]
	public void StopSoundfieldRecorder(string filePath)
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0xAC6CD8", Offset = "0xAC6CD8", VA = "0xAC6CD8")]
	private void UpdateTaggedSources()
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0xAC70C0", Offset = "0xAC70C0", VA = "0xAC70C0")]
	public ResonanceAudioListener()
	{
	}
}
[Token(Token = "0x200024F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CC878", Offset = "0x7CC878")]
public class ResonanceAudioMaterialMap : ScriptableObject
{
	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Color[] surfaceMaterialColors;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ResonanceAudioRoomManager.SurfaceMaterialDictionary surfaceMaterialFromGuid;

	[Token(Token = "0x4000EEE")]
	private const ResonanceAudioRoomManager.SurfaceMaterial defaultSurfaceMaterial = ResonanceAudioRoomManager.SurfaceMaterial.Transparent;

	[Token(Token = "0x6001275")]
	[Address(RVA = "0xAC7130", Offset = "0xAC7130", VA = "0xAC7130")]
	public List<string> GuidList()
	{
		return null;
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0xAC7198", Offset = "0xAC7198", VA = "0xAC7198")]
	public ResonanceAudioRoomManager.SurfaceMaterial GetMaterialFromGuid(string guid)
	{
		return default(ResonanceAudioRoomManager.SurfaceMaterial);
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0xAC7200", Offset = "0xAC7200", VA = "0xAC7200")]
	public void AddDefaultMaterialIfGuidUnmapped(string guid)
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0xAC729C", Offset = "0xAC729C", VA = "0xAC729C")]
	public ResonanceAudioMaterialMap()
	{
	}
}
[Token(Token = "0x2000250")]
public class ResonanceAudioMaterialMapper : ScriptableObject
{
	[Token(Token = "0x2000397")]
	private class UnityMaterialAcousticMeshData
	{
		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ResonanceAudioAcousticMesh> acousticMeshes;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> subMeshIndices;

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xAC850C", Offset = "0xAC850C", VA = "0xAC850C")]
		public UnityMaterialAcousticMeshData()
		{
		}
	}

	[Token(Token = "0x2000398")]
	private class TerrainAcousticMeshData
	{
		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ResonanceAudioAcousticMesh> acousticMeshes;

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xAC85BC", Offset = "0xAC85BC", VA = "0xAC85BC")]
		public TerrainAcousticMeshData()
		{
		}
	}

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ResonanceAudioMaterialMap materialMap;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, UnityMaterialAcousticMeshData> unityMaterialAcousticMeshDataFromGuid;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, TerrainAcousticMeshData> terrainAcousticMeshDataFromGuid;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LayerMask reverbLayerMask;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool includeNonStaticGameObjects;

	[Token(Token = "0x600127A")]
	[Address(RVA = "0xAC789C", Offset = "0xAC789C", VA = "0xAC789C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0xAC7940", Offset = "0xAC7940", VA = "0xAC7940")]
	public void ApplyMaterialMapping(MeshRenderer[] meshRenderers, List<string>[] guidsForMeshRenderers, Terrain[] activeTerrains, string[] guidsForTerrains, Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0xAC8154", Offset = "0xAC8154", VA = "0xAC8154")]
	public void RenderAcousticMeshes()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0xAC81EC", Offset = "0xAC81EC", VA = "0xAC81EC")]
	public List<ResonanceAudioAcousticMesh> GetIncludedAcousticMeshes()
	{
		return null;
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0xAC79AC", Offset = "0xAC79AC", VA = "0xAC79AC")]
	private void BuildUnityMaterialData(MeshRenderer[] meshRenderers, List<string>[] guidsForMeshRenderers, Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0xAC7C70", Offset = "0xAC7C70", VA = "0xAC7C70")]
	private void BuildTerrainData(Terrain[] activeTerrains, string[] guidsForTerrains, Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0xAC7E4C", Offset = "0xAC7E4C", VA = "0xAC7E4C")]
	private void ApplyMaterialMappingToGuids(List<string> guids)
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0xAC8638", Offset = "0xAC8638", VA = "0xAC8638")]
	private void ApplySurfaceMaterialToGameObjects(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial, string guid)
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0xAC8944", Offset = "0xAC8944", VA = "0xAC8944")]
	private void ApplySurfaceMaterialToTerrains(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial, string guid)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0xAC7F68", Offset = "0xAC7F68", VA = "0xAC7F68")]
	private void ApplyObjectFiltering()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0xAC8A1C", Offset = "0xAC8A1C", VA = "0xAC8A1C")]
	private bool IsIncludedByObjectFiltering(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0xAC8AA4", Offset = "0xAC8AA4", VA = "0xAC8AA4")]
	public ResonanceAudioMaterialMapper()
	{
	}
}
[Token(Token = "0x2000251")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CC8E4", Offset = "0x7CC8E4")]
[ExecuteInEditMode]
public class ResonanceAudioMaterialMapperUpdater : MonoBehaviour
{
	[Token(Token = "0x2000399")]
	public delegate void RefreshMaterialMapperDelegate();

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RefreshMaterialMapperDelegate RefreshMaterialMapper;

	[Token(Token = "0x6001286")]
	[Address(RVA = "0xAC8AE0", Offset = "0xAC8AE0", VA = "0xAC8AE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0xAC8D34", Offset = "0xAC8D34", VA = "0xAC8D34")]
	public ResonanceAudioMaterialMapperUpdater()
	{
	}
}
[Token(Token = "0x2000252")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CC930", Offset = "0x7CC930")]
[ExecuteInEditMode]
public class ResonanceAudioReverbProbe : MonoBehaviour
{
	[Token(Token = "0x200039A")]
	public enum RegionShape
	{
		[Token(Token = "0x4001455")]
		Sphere,
		[Token(Token = "0x4001456")]
		Box
	}

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4E10", Offset = "0x7D4E10")]
	public float[] rt60s;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4E48", Offset = "0x7D4E48")]
	public float reverbGainDb;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4E80", Offset = "0x7D4E80")]
	public float reverbBrightness;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4EB8", Offset = "0x7D4EB8")]
	public float reverbTime;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4EF0", Offset = "0x7D4EF0")]
	public RegionShape regionShape;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4F28", Offset = "0x7D4F28")]
	public Vector3 boxRegionSize;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4F60", Offset = "0x7D4F60")]
	public float sphereRegionRadius;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4F98", Offset = "0x7D4F98")]
	public bool onlyApplyWhenVisible;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 proxyRoomPosition;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion proxyRoomRotation;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 proxyRoomSize;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomLeftWall;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomRightWall;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomFloor;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomCeiling;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomBackWall;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomFrontWall;

	[Token(Token = "0x6001288")]
	[Address(RVA = "0xAC8D88", Offset = "0xAC8D88", VA = "0xAC8D88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0xAC8E60", Offset = "0xAC8E60", VA = "0xAC8E60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0xAC8F30", Offset = "0xAC8F30", VA = "0xAC8F30")]
	private void Update()
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0xAC8F94", Offset = "0xAC8F94", VA = "0xAC8F94")]
	public float GetScaledSphericalRegionRadius()
	{
		return default(float);
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0xAC9050", Offset = "0xAC9050", VA = "0xAC9050")]
	public Vector3 GetScaledBoxRegionSize()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0xAC9114", Offset = "0xAC9114", VA = "0xAC9114")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0xAC9258", Offset = "0xAC9258", VA = "0xAC9258")]
	public ResonanceAudioReverbProbe()
	{
	}
}
[Token(Token = "0x2000253")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CC97C", Offset = "0x7CC97C")]
public class ResonanceAudioRoom : MonoBehaviour
{
	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D4FD0", Offset = "0x7D4FD0")]
	public ResonanceAudioRoomManager.SurfaceMaterial leftWall;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5008", Offset = "0x7D5008")]
	public ResonanceAudioRoomManager.SurfaceMaterial rightWall;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5040", Offset = "0x7D5040")]
	public ResonanceAudioRoomManager.SurfaceMaterial floor;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5078", Offset = "0x7D5078")]
	public ResonanceAudioRoomManager.SurfaceMaterial ceiling;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D50B0", Offset = "0x7D50B0")]
	public ResonanceAudioRoomManager.SurfaceMaterial backWall;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D50E8", Offset = "0x7D50E8")]
	public ResonanceAudioRoomManager.SurfaceMaterial frontWall;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5120", Offset = "0x7D5120")]
	public float reflectivity;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5158", Offset = "0x7D5158")]
	public float reverbGainDb;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5190", Offset = "0x7D5190")]
	public float reverbBrightness;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D51C8", Offset = "0x7D51C8")]
	public float reverbTime;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5200", Offset = "0x7D5200")]
	public Vector3 size;

	[Token(Token = "0x600128F")]
	[Address(RVA = "0xAC9364", Offset = "0xAC9364", VA = "0xAC9364")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0xAC943C", Offset = "0xAC943C", VA = "0xAC943C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0xAC950C", Offset = "0xAC950C", VA = "0xAC950C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0xAC9570", Offset = "0xAC9570", VA = "0xAC9570")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0xAC963C", Offset = "0xAC963C", VA = "0xAC963C")]
	public ResonanceAudioRoom()
	{
	}
}
[Token(Token = "0x2000254")]
public static class ResonanceAudioRoomManager
{
	[Token(Token = "0x200039B")]
	public enum SurfaceMaterial
	{
		[Token(Token = "0x4001458")]
		Transparent,
		[Token(Token = "0x4001459")]
		AcousticCeilingTiles,
		[Token(Token = "0x400145A")]
		BrickBare,
		[Token(Token = "0x400145B")]
		BrickPainted,
		[Token(Token = "0x400145C")]
		ConcreteBlockCoarse,
		[Token(Token = "0x400145D")]
		ConcreteBlockPainted,
		[Token(Token = "0x400145E")]
		CurtainHeavy,
		[Token(Token = "0x400145F")]
		FiberglassInsulation,
		[Token(Token = "0x4001460")]
		GlassThin,
		[Token(Token = "0x4001461")]
		GlassThick,
		[Token(Token = "0x4001462")]
		Grass,
		[Token(Token = "0x4001463")]
		LinoleumOnConcrete,
		[Token(Token = "0x4001464")]
		Marble,
		[Token(Token = "0x4001465")]
		Metal,
		[Token(Token = "0x4001466")]
		ParquetOnConcrete,
		[Token(Token = "0x4001467")]
		PlasterRough,
		[Token(Token = "0x4001468")]
		PlasterSmooth,
		[Token(Token = "0x4001469")]
		PlywoodPanel,
		[Token(Token = "0x400146A")]
		PolishedConcreteOrTile,
		[Token(Token = "0x400146B")]
		Sheetrock,
		[Token(Token = "0x400146C")]
		WaterOrIceSurface,
		[Token(Token = "0x400146D")]
		WoodCeiling,
		[Token(Token = "0x400146E")]
		WoodPanel
	}

	[Serializable]
	[Token(Token = "0x200039C")]
	public class SurfaceMaterialDictionary : Dictionary<string, SurfaceMaterial>, ISerializationCallbackReceiver
	{
		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<string> guids;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<SurfaceMaterial> surfaceMaterials;

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xACA844", Offset = "0xACA844", VA = "0xACA844")]
		public SurfaceMaterialDictionary()
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xACA8FC", Offset = "0xACA8FC", VA = "0xACA8FC", Slot = "30")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xACAA6C", Offset = "0xACAA6C", VA = "0xACAA6C", Slot = "31")]
		public void OnAfterDeserialize()
		{
		}
	}

	[Token(Token = "0x200039D")]
	private struct RoomEffectsRegion
	{
		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ResonanceAudioRoom room;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ResonanceAudioReverbProbe reverbProbe;

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x86B934", Offset = "0x86B934", VA = "0x86B934")]
		public RoomEffectsRegion(ResonanceAudioRoom room, ResonanceAudioReverbProbe reverbProbe)
		{
		}
	}

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RoomEffectsRegion> roomEffectsRegions;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Bounds bounds;

	[Token(Token = "0x6001294")]
	[Address(RVA = "0xAC96D4", Offset = "0xAC96D4", VA = "0xAC96D4")]
	public static float ComputeRoomEffectsGain(Vector3 sourcePosition)
	{
		return default(float);
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0xAC93C8", Offset = "0xAC93C8", VA = "0xAC93C8")]
	public static void UpdateRoom(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0xAC94A0", Offset = "0xAC94A0", VA = "0xAC94A0")]
	public static void RemoveRoom(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0xAC8DEC", Offset = "0xAC8DEC", VA = "0xAC8DEC")]
	public static void UpdateReverbProbe(ResonanceAudioReverbProbe reverbProbe)
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0xAC8EC4", Offset = "0xAC8EC4", VA = "0xAC8EC4")]
	public static void RemoveReverbProbe(ResonanceAudioReverbProbe reverbProbe)
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0xAC9EB4", Offset = "0xAC9EB4", VA = "0xAC9EB4")]
	private static void UpdateRoomEffectsRegions(ResonanceAudioRoom room, bool isEnabled)
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0xACA4F8", Offset = "0xACA4F8", VA = "0xACA4F8")]
	private static void UpdateRoomEffectsRegions(ResonanceAudioReverbProbe reverbProbe, bool isEnabled)
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0xACA0B8", Offset = "0xACA0B8", VA = "0xACA0B8")]
	private static void UpdateRoomEffects()
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0xAC9BC8", Offset = "0xAC9BC8", VA = "0xAC9BC8")]
	private static float ComputeRoomEffectsAttenuation(float distanceToRoom)
	{
		return default(float);
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0xAC9C40", Offset = "0xAC9C40", VA = "0xAC9C40")]
	private static bool IsListenerInsideRoom(ResonanceAudioRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0xACA220", Offset = "0xACA220", VA = "0xACA220")]
	private static bool IsListenerInsideVisibleReverbProbe(ResonanceAudioReverbProbe reverbProbe)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000255")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CC9B4", Offset = "0x7CC9B4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7CC9B4", Offset = "0x7CC9B4")]
[ExecuteInEditMode]
public class ResonanceAudioSource : MonoBehaviour
{
	[Token(Token = "0x200039E")]
	public enum Quality
	{
		[Token(Token = "0x4001474")]
		Stereo,
		[Token(Token = "0x4001475")]
		Low,
		[Token(Token = "0x4001476")]
		High
	}

	[Token(Token = "0x200039F")]
	private enum EffectData
	{
		[Token(Token = "0x4001478")]
		Id,
		[Token(Token = "0x4001479")]
		DistanceAttenuation,
		[Token(Token = "0x400147A")]
		RoomEffectsGain,
		[Token(Token = "0x400147B")]
		Gain,
		[Token(Token = "0x400147C")]
		DirectivityAlpha,
		[Token(Token = "0x400147D")]
		DirectivitySharpness,
		[Token(Token = "0x400147E")]
		ListenerDirectivityAlpha,
		[Token(Token = "0x400147F")]
		ListenerDirectivitySharpness,
		[Token(Token = "0x4001480")]
		Occlusion,
		[Token(Token = "0x4001481")]
		Quality,
		[Token(Token = "0x4001482")]
		NearFieldEffectGain,
		[Token(Token = "0x4001483")]
		Volume
	}

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5238", Offset = "0x7D5238")]
	public bool bypassRoomEffects;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D5270", Offset = "0x7D5270")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5270", Offset = "0x7D5270")]
	public float directivityAlpha;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D52C4", Offset = "0x7D52C4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D52C4", Offset = "0x7D52C4")]
	public float directivitySharpness;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D5318", Offset = "0x7D5318")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5318", Offset = "0x7D5318")]
	public float listenerDirectivityAlpha;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D536C", Offset = "0x7D536C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D536C", Offset = "0x7D536C")]
	public float listenerDirectivitySharpness;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D53C0", Offset = "0x7D53C0")]
	public float gainDb;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D53F8", Offset = "0x7D53F8")]
	public bool nearFieldEffectEnabled;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D5430", Offset = "0x7D5430")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5430", Offset = "0x7D5430")]
	public float nearFieldEffectGain;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5484", Offset = "0x7D5484")]
	public bool occlusionEnabled;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D54BC", Offset = "0x7D54BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D54BC", Offset = "0x7D54BC")]
	public float occlusionIntensity;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5510", Offset = "0x7D5510")]
	public Quality quality;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D5548", Offset = "0x7D5548")]
	private AudioSource <audioSource>k__BackingField;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float currentOcclusion;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float nextOcclusionUpdate;

	[Token(Token = "0x1700009E")]
	public AudioSource audioSource
	{
		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xACAB58", Offset = "0xACAB58", VA = "0xACAB58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8C18", Offset = "0x7D8C18")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xACAB60", Offset = "0xACAB60", VA = "0xACAB60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8C28", Offset = "0x7D8C28")]
		private set
		{
		}
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0xACAB68", Offset = "0xACAB68", VA = "0xACAB68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0xACABC8", Offset = "0xACABC8", VA = "0xACABC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0xACAC98", Offset = "0xACAC98", VA = "0xACAC98")]
	private void UpdateSource()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0xACAFC0", Offset = "0xACAFC0", VA = "0xACAFC0")]
	public ResonanceAudioSource()
	{
	}
}
[Token(Token = "0x2000256")]
[ExecuteInEditMode]
public class VDColorHandler : VDColorHandlerBase
{
	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x13C6D3C", Offset = "0x13C6D3C", VA = "0x13C6D3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x13C702C", Offset = "0x13C702C", VA = "0x13C702C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x13C7070", Offset = "0x13C7070", VA = "0x13C7070")]
	public void SetColors()
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x13C6DD4", Offset = "0x13C6DD4", VA = "0x13C6DD4")]
	public void SetMesh()
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x13C7134", Offset = "0x13C7134", VA = "0x13C7134")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x13C71A4", Offset = "0x13C71A4", VA = "0x13C71A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x13C72C8", Offset = "0x13C72C8", VA = "0x13C72C8")]
	public VDColorHandler()
	{
	}
}
[Token(Token = "0x2000257")]
public class VDColorHandlerBase : MonoBehaviour
{
	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Color32[] colors;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Color32[] tempColors;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Mesh coloredMesh;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mesh originalMesh;

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x13C72CC", Offset = "0x13C72CC", VA = "0x13C72CC")]
	public VDColorHandlerBase()
	{
	}
}
[Token(Token = "0x2000258")]
[ExecuteInEditMode]
public class VDSampler : MonoBehaviour
{
	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D tex;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color32[] lum;

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x13C7354", Offset = "0x13C7354", VA = "0x13C7354")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x13C7400", Offset = "0x13C7400", VA = "0x13C7400")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x13C75F4", Offset = "0x13C75F4", VA = "0x13C75F4")]
	public VDSampler()
	{
	}
}
[Token(Token = "0x2000259")]
public class VertexDirtSettingsStruct
{
	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string occluderShader;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float samplingBias;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float samplingDistance;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float samplingAngle;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool edgeSmooth;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool invertNormals;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float edgeSmoothBias;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public CameraClearFlags skyMode;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool disableOccluders;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color customSkyColor;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color customShadowColor;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool useCustomSkyColor;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool useCustomShadowColor;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool useSkyCube;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material skyCube;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int blendModeIndex;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int colorOutputIndex;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int luminanceOutputIndex;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int bakeLayerMask;

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x13CB374", Offset = "0x13CB374", VA = "0x13CB374")]
	public VertexDirtSettingsStruct()
	{
	}
}
[Token(Token = "0x200025A")]
public static class VertexDirt
{
	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] v;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector3[] n;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Color32[] c;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static VertexSample vertexSample;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int sampleWidth;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int sampleHeight;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int rgbBakingMode;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int alphaBakingMode;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static VertexDirtSettingsStruct settings;

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x13C9860", Offset = "0x13C9860", VA = "0x13C9860")]
	public static void Dirt(Transform[] sels)
	{
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x13C9F34", Offset = "0x13C9F34", VA = "0x13C9F34")]
	public static void UpdateShaderVariables()
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x13CA0B8", Offset = "0x13CA0B8", VA = "0x13CA0B8")]
	private static void PrepareVertices(Transform go)
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x13CA530", Offset = "0x13CA530", VA = "0x13CA530")]
	public static void PrepareColors()
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x13CA5C8", Offset = "0x13CA5C8", VA = "0x13CA5C8")]
	private static void SmoothVertices()
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x13CAA6C", Offset = "0x13CAA6C", VA = "0x13CAA6C")]
	private static void CalcColors(GameObject camGO, Camera cam)
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x13C751C", Offset = "0x13C751C", VA = "0x13C751C")]
	public static void SetColorSample(Color32 c)
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x13CB210", Offset = "0x13CB210", VA = "0x13CB210")]
	public static Color ColorAndLuminance(Color c)
	{
		return default(Color);
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x13CB240", Offset = "0x13CB240", VA = "0x13CB240")]
	public static Color32 MultiplyColor32(Color c0, Color c1)
	{
		return default(Color32);
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x13CAEC4", Offset = "0x13CAEC4", VA = "0x13CAEC4")]
	private static void ApplyColors(Transform go)
	{
	}
}
[Token(Token = "0x200025B")]
public class VertexSample
{
	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color32 color;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int index;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isCalulated;

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x13CB324", Offset = "0x13CB324", VA = "0x13CB324")]
	public VertexSample()
	{
	}
}
namespace Shakespeare
{
	[Token(Token = "0x200025C")]
	public static class ColorExtensions
	{
		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xAD0A88", Offset = "0xAD0A88", VA = "0xAD0A88")]
		public static string ColorToString(Color c, char delimiter = ',')
		{
			return null;
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xAD0D38", Offset = "0xAD0D38", VA = "0xAD0D38")]
		public static Color StringToColor(string str, char delimiter = ',')
		{
			return default(Color);
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xAD1070", Offset = "0xAD1070", VA = "0xAD1070")]
		public static Color GetColorFromPositionInBounds(Vector3 v, Bounds b)
		{
			return default(Color);
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xAD11B8", Offset = "0xAD11B8", VA = "0xAD11B8")]
		public static Color[,,] GetColorCube(int val)
		{
			return null;
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xAD1318", Offset = "0xAD1318", VA = "0xAD1318")]
		public static bool Approximately(this Color a, Color b)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xAD13B4", Offset = "0xAD13B4", VA = "0xAD13B4")]
		public static bool Approximately(this Color32 a, Color32 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200025D")]
	public static class GizmoExtensions
	{
		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] ArrowPoints;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3[] BlockingPoints;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector3[] SquarePoints;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector3[] TrianglePoints;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D5588", Offset = "0x7D5588")]
		private static Camera <GizmoCamera>k__BackingField;

		[Token(Token = "0x1700009F")]
		public static Camera GizmoCamera
		{
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0xAD144C", Offset = "0xAD144C", VA = "0xAD144C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8C58", Offset = "0x7D8C58")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C5")]
			[Address(RVA = "0xAD14B4", Offset = "0xAD14B4", VA = "0xAD14B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8C68", Offset = "0x7D8C68")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public static bool IsGizmoCamera
		{
			[Token(Token = "0x60012C6")]
			[Address(RVA = "0xAD1524", Offset = "0xAD1524", VA = "0xAD1524")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xAD152C", Offset = "0xAD152C", VA = "0xAD152C")]
		public static void DrawTriangle(Vector3 p, Quaternion r, float s)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xAD17EC", Offset = "0xAD17EC", VA = "0xAD17EC")]
		public static void DrawTriangle(Matrix4x4 m)
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xAD1964", Offset = "0xAD1964", VA = "0xAD1964")]
		public static void DrawArrow(Vector3 p, Quaternion r, float s)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xAD1C24", Offset = "0xAD1C24", VA = "0xAD1C24")]
		public static void DrawArrow(Matrix4x4 m)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xAD1D9C", Offset = "0xAD1D9C", VA = "0xAD1D9C")]
		public static void DrawBounds(Bounds b)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xAD2048", Offset = "0xAD2048", VA = "0xAD2048")]
		public static void DrawSquare(Vector3 p, Quaternion r, float s)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xAD22BC", Offset = "0xAD22BC", VA = "0xAD22BC")]
		public static void DrawMMRect(MMRect rect)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xAD24E0", Offset = "0xAD24E0", VA = "0xAD24E0")]
		public static void DrawBlock(Vector3 p, Quaternion r, float s)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xAD2754", Offset = "0xAD2754", VA = "0xAD2754")]
		public static void DrawBlock(Matrix4x4 m)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xAD28CC", Offset = "0xAD28CC", VA = "0xAD28CC")]
		public static void DrawCircleArray(Transform transform, float drawscale, int dir, int count, bool arrow)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xAD2D74", Offset = "0xAD2D74", VA = "0xAD2D74")]
		public static void DrawCross(Vector3 v, float s)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xAD2FB8", Offset = "0xAD2FB8", VA = "0xAD2FB8")]
		public static void DrawCross(Transform t, float s)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xAD3244", Offset = "0xAD3244", VA = "0xAD3244")]
		public static void DrawCross(List<Vector3> v, float s)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xAD3324", Offset = "0xAD3324", VA = "0xAD3324")]
		public static void DrawDashedLine(Vector3 p1, Vector3 p2, float length, float gapLength = 0f)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xAD35C8", Offset = "0xAD35C8", VA = "0xAD35C8")]
		public static void DrawWireSquare(Vector3 pos, Vector3 extents)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xAD38AC", Offset = "0xAD38AC", VA = "0xAD38AC")]
		public static void DrawWireSquareXY(Vector3 pos, Vector3 extents, [Optional] Transform transform)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xAD3E10", Offset = "0xAD3E10", VA = "0xAD3E10")]
		public static void DrawWireCircle(Vector3 pos, float r)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xAD3FC4", Offset = "0xAD3FC4", VA = "0xAD3FC4")]
		public static void DrawWireCircleXZ(Vector3 pos, float r)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xAD4178", Offset = "0xAD4178", VA = "0xAD4178")]
		public static void DrawPlane(Vector3 pos, Vector3 normal, float scale)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xAD4254", Offset = "0xAD4254", VA = "0xAD4254")]
		public static void DrawAxis(Transform t, float scale)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xAD4414", Offset = "0xAD4414", VA = "0xAD4414")]
		public static void DrawLineArray(List<Vector3> line)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xAD4500", Offset = "0xAD4500", VA = "0xAD4500")]
		public static void DrawWireCapsule(Vector3 apos, float aradius, Vector3 bpos, float bradius)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025E")]
	public class MMLine2D
	{
		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector2 a;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector2 b;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 normal;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 mid;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isDirty;

		[Token(Token = "0x170000A1")]
		public Vector2 A
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0xAD4EFC", Offset = "0xAD4EFC", VA = "0xAD4EFC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xAD4F04", Offset = "0xAD4F04", VA = "0xAD4F04")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public Vector2 B
		{
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0xAD4F14", Offset = "0xAD4F14", VA = "0xAD4F14")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0xAD4F1C", Offset = "0xAD4F1C", VA = "0xAD4F1C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public Vector2 Normal
		{
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0xAD4F2C", Offset = "0xAD4F2C", VA = "0xAD4F2C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170000A4")]
		public Vector2 Center
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0xAD5020", Offset = "0xAD5020", VA = "0xAD5020")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xAD5044", Offset = "0xAD5044", VA = "0xAD5044")]
		public MMLine2D()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xAD50D8", Offset = "0xAD50D8", VA = "0xAD50D8")]
		public MMLine2D(Vector2 a, Vector2 b)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xAD5130", Offset = "0xAD5130", VA = "0xAD5130")]
		public void SetFromXZ(MMLine3D other)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xAD51B4", Offset = "0xAD51B4", VA = "0xAD51B4")]
		public bool IsLeft(Vector2 p)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xAD51D4", Offset = "0xAD51D4", VA = "0xAD51D4")]
		public bool SameSide(Vector2 A, Vector2 B)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xAD5244", Offset = "0xAD5244", VA = "0xAD5244")]
		public bool GetIntersection(MMLine2D other, ref Vector2 intersection)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xAD5360", Offset = "0xAD5360", VA = "0xAD5360")]
		public bool Intersects(MMLine2D other)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xAD53F0", Offset = "0xAD53F0", VA = "0xAD53F0")]
		public float LineToLineDistance(MMLine2D other, out Vector2 closestPoint, out Vector2 otherClosestPoint)
		{
			return default(float);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xAD5420", Offset = "0xAD5420", VA = "0xAD5420")]
		public float LineToPointDistance(Vector2 p, out Vector2 closestPoint)
		{
			return default(float);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xAD55F4", Offset = "0xAD55F4", VA = "0xAD55F4")]
		public float LineToPointDistance(Vector2 p)
		{
			return default(float);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xAD4F50", Offset = "0xAD4F50", VA = "0xAD4F50")]
		private void ResolveCalculations()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xAD576C", Offset = "0xAD576C", VA = "0xAD576C")]
		private static float Dot(Vector2 a, Vector2 b, Vector2 p)
		{
			return default(float);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xAD57DC", Offset = "0xAD57DC", VA = "0xAD57DC")]
		private static float Cross(Vector2 a, Vector2 b, Vector2 p)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x200025F")]
	public class MMLine3D
	{
		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector3 a;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 b;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float distance;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 direction;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 directionNormalised;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 v;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 pa;

		[Token(Token = "0x170000A5")]
		public Vector3 A
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0xAD5858", Offset = "0xAD5858", VA = "0xAD5858")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60012F2")]
			[Address(RVA = "0xAD5864", Offset = "0xAD5864", VA = "0xAD5864")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public Vector3 B
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0xAD594C", Offset = "0xAD594C", VA = "0xAD594C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0xAD5958", Offset = "0xAD5958", VA = "0xAD5958")]
			set
			{
			}
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xAD5964", Offset = "0xAD5964", VA = "0xAD5964")]
		public MMLine3D()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xAD59F8", Offset = "0xAD59F8", VA = "0xAD59F8")]
		public MMLine3D(Vector3 p1, Vector3 p2)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xAD5AC4", Offset = "0xAD5AC4", VA = "0xAD5AC4")]
		public void Set(Vector3 _p1, Vector3 _p2)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xAD5B24", Offset = "0xAD5B24", VA = "0xAD5B24")]
		public void Reset()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xAD5B74", Offset = "0xAD5B74", VA = "0xAD5B74")]
		public float GetLength()
		{
			return default(float);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xAD5B7C", Offset = "0xAD5B7C", VA = "0xAD5B7C")]
		public Vector3 GetPositionAlongLine(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xAD5C54", Offset = "0xAD5C54", VA = "0xAD5C54")]
		public Vector3 GetDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xAD5C60", Offset = "0xAD5C60", VA = "0xAD5C60")]
		public Vector3 GetHalfWay()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xAD5D0C", Offset = "0xAD5D0C", VA = "0xAD5D0C")]
		public Vector3 GetNormalizedDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xAD5D18", Offset = "0xAD5D18", VA = "0xAD5D18")]
		public void GizmoDraw()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xAD5DCC", Offset = "0xAD5DCC", VA = "0xAD5DCC")]
		public Vector3 ClosestPointTo(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xAD5E7C", Offset = "0xAD5E7C", VA = "0xAD5E7C")]
		public bool GetIntersection(MMLine3D other, ref Vector3 intersection, bool includeEndPoints = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xAD5F90", Offset = "0xAD5F90", VA = "0xAD5F90")]
		public static MMLine3D FindFirstIntersection(MMLine3D line, MMLine3D[] segments, ref Vector3 bestIntersection)
		{
			return null;
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xAD5870", Offset = "0xAD5870", VA = "0xAD5870")]
		private void Updated()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000260")]
	public sealed class MMRect
	{
		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float cx;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float cy;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float width;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rot;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isDirty;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2[] corners;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MMLine2D[] sides;

		[Token(Token = "0x170000A7")]
		public float X
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0xAD61BC", Offset = "0xAD61BC", VA = "0xAD61BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001304")]
			[Address(RVA = "0xAD61C4", Offset = "0xAD61C4", VA = "0xAD61C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public float Y
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0xAD61D4", Offset = "0xAD61D4", VA = "0xAD61D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001306")]
			[Address(RVA = "0xAD61DC", Offset = "0xAD61DC", VA = "0xAD61DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public float Width
		{
			[Token(Token = "0x6001307")]
			[Address(RVA = "0xAD61EC", Offset = "0xAD61EC", VA = "0xAD61EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001308")]
			[Address(RVA = "0xAD61F4", Offset = "0xAD61F4", VA = "0xAD61F4")]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public float Height
		{
			[Token(Token = "0x6001309")]
			[Address(RVA = "0xAD6204", Offset = "0xAD6204", VA = "0xAD6204")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600130A")]
			[Address(RVA = "0xAD620C", Offset = "0xAD620C", VA = "0xAD620C")]
			set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public float Rot
		{
			[Token(Token = "0x600130B")]
			[Address(RVA = "0xAD621C", Offset = "0xAD621C", VA = "0xAD621C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600130C")]
			[Address(RVA = "0xAD6224", Offset = "0xAD6224", VA = "0xAD6224")]
			set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public Vector2 Center
		{
			[Token(Token = "0x600130D")]
			[Address(RVA = "0xAD6234", Offset = "0xAD6234", VA = "0xAD6234")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170000AD")]
		public Vector2[] Corners
		{
			[Token(Token = "0x6001313")]
			[Address(RVA = "0xAD24BC", Offset = "0xAD24BC", VA = "0xAD24BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		public MMLine2D[] Sides
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0xAD6CDC", Offset = "0xAD6CDC", VA = "0xAD6CDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xAD6264", Offset = "0xAD6264", VA = "0xAD6264")]
		public MMRect()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xAD62FC", Offset = "0xAD62FC", VA = "0xAD62FC")]
		public MMRect(Rect rect)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xAD6748", Offset = "0xAD6748", VA = "0xAD6748")]
		public MMRect(float cx, float cy, float width, float height, float rot = 0f)
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xAD6820", Offset = "0xAD6820", VA = "0xAD6820")]
		public MMRect GetBoundingRect()
		{
			return null;
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xAD6A88", Offset = "0xAD6A88", VA = "0xAD6A88")]
		public Rect ToUnityRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xAD6D00", Offset = "0xAD6D00", VA = "0xAD6D00")]
		public bool Contains(Vector2 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xAD6E34", Offset = "0xAD6E34", VA = "0xAD6E34")]
		public bool Intersects(MMLine2D line, out Vector2 firstIntersection, out MMLine2D intersectedSide)
		{
			return default(bool);
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xAD6FE8", Offset = "0xAD6FE8", VA = "0xAD6FE8")]
		public MMLine2D GetClosestSide(Vector3 p)
		{
			return null;
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xAD63E4", Offset = "0xAD63E4", VA = "0xAD63E4")]
		private void ResolveCalculations()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xAD714C", Offset = "0xAD714C", VA = "0xAD714C")]
		private Vector2 GetCorner(float hw, float hh)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x2000261")]
	public class MMTriangle3D
	{
		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 a;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 b;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 c;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MMLine3D[] lines;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 normal;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 centroid;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 circumcenter;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float radius;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 incircle;

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xB56B70", Offset = "0xB56B70", VA = "0xB56B70")]
		public MMTriangle3D(Vector3 a, Vector3 b, Vector3 c)
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xB56DE8", Offset = "0xB56DE8", VA = "0xB56DE8")]
		public MMTriangle3D(Vector3 a, Vector3 b, Vector3 c, bool generateLines)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xB57040", Offset = "0xB57040", VA = "0xB57040")]
		public static MMTriangle3D CreateEquilateral(Vector3 center, float radius)
		{
			return null;
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xB56C08", Offset = "0xB56C08", VA = "0xB56C08")]
		public Vector3 ComputeCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xB56CD0", Offset = "0xB56CD0", VA = "0xB56CD0")]
		public Vector3 ComputeNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xB57258", Offset = "0xB57258", VA = "0xB57258")]
		public void Set(Vector3 a2, Vector3 b2, Vector3 c2)
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xB56E3C", Offset = "0xB56E3C", VA = "0xB56E3C")]
		public void GenerateLines()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xB57278", Offset = "0xB57278", VA = "0xB57278")]
		public Vector3 GetClosestPointTo(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xB57534", Offset = "0xB57534", VA = "0xB57534")]
		public Vector3 ClosestPointOnSurface(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xB57C58", Offset = "0xB57C58", VA = "0xB57C58")]
		public bool IntersectsLine(MMLine3D line, bool includeEndPoints = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xB580CC", Offset = "0xB580CC", VA = "0xB580CC")]
		public bool IntersectsTriangle(MMTriangle3D triangle, bool includeEndPoints = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xB58188", Offset = "0xB58188", VA = "0xB58188")]
		public bool ContainsPoint(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xB583B0", Offset = "0xB583B0", VA = "0xB583B0")]
		public bool CircumCircle(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xB58450", Offset = "0xB58450", VA = "0xB58450")]
		private static bool CircumCircle(float xp, float yp, float x1, float y1, float x2, float y2, float x3, float y3, ref Vector3 circle, ref float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xB586D0", Offset = "0xB586D0", VA = "0xB586D0")]
		public bool SharesVertexWith(MMTriangle3D triangle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xB589E4", Offset = "0xB589E4", VA = "0xB589E4")]
		public MMTriangle3D FlipVertexOrder()
		{
			return null;
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xB58A28", Offset = "0xB58A28", VA = "0xB58A28")]
		public Vector3 FromBarycentric(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xB58AAC", Offset = "0xB58AAC", VA = "0xB58AAC")]
		public Vector3 ToBarycentric(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xB58D4C", Offset = "0xB58D4C", VA = "0xB58D4C")]
		public Vector3[] GetVertexArray()
		{
			return null;
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xB58D58", Offset = "0xB58D58", VA = "0xB58D58")]
		public Vector3[] GetVertexArray(Vector3[] array, int offset)
		{
			return null;
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xB58E64", Offset = "0xB58E64", VA = "0xB58E64")]
		public Vector3[] GetNormalArray()
		{
			return null;
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xB58E70", Offset = "0xB58E70", VA = "0xB58E70")]
		public Vector3[] GetNormalArray(Vector3[] array, int offset)
		{
			return null;
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xB58F7C", Offset = "0xB58F7C", VA = "0xB58F7C")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xB590D0", Offset = "0xB590D0", VA = "0xB590D0")]
		public string toString()
		{
			return null;
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xB59330", Offset = "0xB59330", VA = "0xB59330")]
		public string toStringBetter()
		{
			return null;
		}
	}
	[Token(Token = "0x2000262")]
	public static class Vector2Extensions
	{
		[Token(Token = "0x6001333")]
		[Address(RVA = "0xB59810", Offset = "0xB59810", VA = "0xB59810")]
		public static bool Approximately(this Vector2 v, Vector2 other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xB598DC", Offset = "0xB598DC", VA = "0xB598DC")]
		public static Vector2 Limit(this Vector2 thiz, float magnitudeMax)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xB5999C", Offset = "0xB5999C", VA = "0xB5999C")]
		public static float SqDistance(Vector2 v1, Vector2 v2)
		{
			return default(float);
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xB599E4", Offset = "0xB599E4", VA = "0xB599E4")]
		public static float SqrMagnitude(Vector2 a)
		{
			return default(float);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xB599F4", Offset = "0xB599F4", VA = "0xB599F4")]
		public static bool TestLineAgainstCircle(Vector2 point1, Vector2 point2, Vector2 center, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xB59A4C", Offset = "0xB59A4C", VA = "0xB59A4C")]
		public static int FindLineCircleIntersections(float cx, float cy, float radius, Vector2 point1, Vector2 point2, out Vector2 intersection1, out Vector2 intersection2)
		{
			return default(int);
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xB59CB8", Offset = "0xB59CB8", VA = "0xB59CB8")]
		public static bool IsLeftXY(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(bool);
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xB59D0C", Offset = "0xB59D0C", VA = "0xB59D0C")]
		public static bool IsLeftXZ(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(bool);
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xB59D3C", Offset = "0xB59D3C", VA = "0xB59D3C")]
		public static bool IsLeftYZ(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(bool);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xB59D68", Offset = "0xB59D68", VA = "0xB59D68")]
		public static bool IsLeft(Vector2 a, Vector2 b, Vector2 c)
		{
			return default(bool);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xB59CE4", Offset = "0xB59CE4", VA = "0xB59CE4")]
		public static bool IsLeft(float x1, float y1, float x2, float y2, float x3, float y3)
		{
			return default(bool);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xB59D90", Offset = "0xB59D90", VA = "0xB59D90")]
		public static bool LineIntersectionXY(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, ref Vector3 intersection)
		{
			return default(bool);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xB59F40", Offset = "0xB59F40", VA = "0xB59F40")]
		public static bool LineIntersectionXZ(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, ref Vector3 intersection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xB59FA8", Offset = "0xB59FA8", VA = "0xB59FA8")]
		public static bool LineIntersectionYZ(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, ref Vector3 intersection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xB5A004", Offset = "0xB5A004", VA = "0xB5A004")]
		public static bool LineIntersection(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, ref Vector2 intersection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xB59DE4", Offset = "0xB59DE4", VA = "0xB59DE4")]
		public static bool LineIntersection(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4, ref Vector2 intersection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xB5A008", Offset = "0xB5A008", VA = "0xB5A008")]
		public static Vector2 GetMin(List<Vector2> l)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xB5A064", Offset = "0xB5A064", VA = "0xB5A064")]
		public static Vector2 GetMin(Vector2[] l)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xB5A18C", Offset = "0xB5A18C", VA = "0xB5A18C")]
		public static Vector2 GetMax(List<Vector2> l)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xB5A1E8", Offset = "0xB5A1E8", VA = "0xB5A1E8")]
		public static Vector2 GetMax(Vector2[] l)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xB5A310", Offset = "0xB5A310", VA = "0xB5A310")]
		public static float CalculateTotalLength(List<Vector2> l)
		{
			return default(float);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xB5A438", Offset = "0xB5A438", VA = "0xB5A438")]
		public static Vector2 ClosestPointOnCircle(Vector2 pos, Vector2 center, float radius)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xB5A51C", Offset = "0xB5A51C", VA = "0xB5A51C")]
		public static Vector2 ClosestPointOnLineToPoint(Vector2 p, Vector2 a, Vector2 b)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xB5A664", Offset = "0xB5A664", VA = "0xB5A664")]
		public static float PointToLineDistanceSq(Vector2 p, Vector2 a, Vector2 b, out Vector2 closestPointOnLine)
		{
			return default(float);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xB5A6C4", Offset = "0xB5A6C4", VA = "0xB5A6C4")]
		public static float PointToLineDistanceSq(Vector2 p, Vector2 a, Vector2 b)
		{
			return default(float);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xB5A714", Offset = "0xB5A714", VA = "0xB5A714")]
		public static float PointToLineDistance(Vector2 p, Vector2 a, Vector2 b, out Vector2 closestPointOnLine)
		{
			return default(float);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xB5A7F0", Offset = "0xB5A7F0", VA = "0xB5A7F0")]
		public static float PointToLineDistance(Vector2 p, Vector2 a, Vector2 b)
		{
			return default(float);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xB5A8C4", Offset = "0xB5A8C4", VA = "0xB5A8C4")]
		public static float LineToLineDistance(Vector2 aStart, Vector2 aEnd, Vector2 bStart, Vector2 bEnd, out Vector2 aClose, out Vector2 bClose)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000263")]
	public static class Vector3Extensions
	{
		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 Epsilon;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Vector3 MinValue;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Vector3 MaxValue;

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xB5AB1C", Offset = "0xB5AB1C", VA = "0xB5AB1C")]
		public static float AngleBetterX(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xB5AC00", Offset = "0xB5AC00", VA = "0xB5AC00")]
		public static float AngleBetterY(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xB5ACE4", Offset = "0xB5ACE4", VA = "0xB5ACE4")]
		public static float AngleBetterZ(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xB5ADC8", Offset = "0xB5ADC8", VA = "0xB5ADC8")]
		public static Vector3 Divide(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xB5AE08", Offset = "0xB5AE08", VA = "0xB5AE08")]
		public static Vector3 Multiply(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xB5AE48", Offset = "0xB5AE48", VA = "0xB5AE48")]
		public static Vector3 Clamp(this Vector3 self, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xB5AFBC", Offset = "0xB5AFBC", VA = "0xB5AFBC")]
		public static Vector3 Limit(this Vector3 self, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xB5B050", Offset = "0xB5B050", VA = "0xB5B050")]
		public static bool IsNAN(Vector3 check)
		{
			return default(bool);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xB5B0A4", Offset = "0xB5B0A4", VA = "0xB5B0A4")]
		public static Vector3 Abs(this Vector3 self)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xB5B14C", Offset = "0xB5B14C", VA = "0xB5B14C")]
		public static float CalculateTotalLength(Transform[] l)
		{
			return default(float);
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xB5B298", Offset = "0xB5B298", VA = "0xB5B298")]
		public static float CalculateTotalLength(List<Vector3> l)
		{
			return default(float);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xB5B3D8", Offset = "0xB5B3D8", VA = "0xB5B3D8")]
		public static float CalculateTotalSqLength(List<Vector3> l)
		{
			return default(float);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xB5B53C", Offset = "0xB5B53C", VA = "0xB5B53C")]
		public static int GetIndexToLength(List<Vector3> l, float length)
		{
			return default(int);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xB5B684", Offset = "0xB5B684", VA = "0xB5B684")]
		public static Vector3 GetMin(Transform[] t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xB5B8E4", Offset = "0xB5B8E4", VA = "0xB5B8E4")]
		public static Vector3 GetMin(List<Vector3> l)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xB5B780", Offset = "0xB5B780", VA = "0xB5B780")]
		public static Vector3 GetMin(Vector3[] l)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xB5B96C", Offset = "0xB5B96C", VA = "0xB5B96C")]
		public static Vector3 GetMin(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xB5BA60", Offset = "0xB5BA60", VA = "0xB5BA60")]
		public static Vector3 GetMax(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xB5BB54", Offset = "0xB5BB54", VA = "0xB5BB54")]
		public static Vector3 GetMax(Transform[] t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xB5BDB4", Offset = "0xB5BDB4", VA = "0xB5BDB4")]
		public static Vector3 GetMax(List<Vector3> l)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xB5BC50", Offset = "0xB5BC50", VA = "0xB5BC50")]
		public static Vector3 GetMax(Vector3[] l)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xB5BE3C", Offset = "0xB5BE3C", VA = "0xB5BE3C")]
		public static Vector3 ClampToBounds(this Vector3 v, Bounds bounds)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xB5BF64", Offset = "0xB5BF64", VA = "0xB5BF64")]
		public static Vector3 GetExtents(Vector3 min, Vector3 max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xB5C000", Offset = "0xB5C000", VA = "0xB5C000")]
		public static bool IsVector3ofVector4Zero(this Vector4 v)
		{
			return default(bool);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xB5AEE8", Offset = "0xB5AEE8", VA = "0xB5AEE8")]
		public static Vector3 LowerLimit(this Vector3 self, float min)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xB5C028", Offset = "0xB5C028", VA = "0xB5C028")]
		public static Vector3 Set(this Vector3 self, Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xB5C038", Offset = "0xB5C038", VA = "0xB5C038")]
		public static Vector3 Mod(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xB5C0C8", Offset = "0xB5C0C8", VA = "0xB5C0C8")]
		public static Vector3 SetMag(this Vector3 target, float len)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xB5C174", Offset = "0xB5C174", VA = "0xB5C174")]
		public static float Heading2DXY(Vector3 vec3)
		{
			return default(float);
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xB5C1F0", Offset = "0xB5C1F0", VA = "0xB5C1F0")]
		public static float Heading2DXZ(Vector3 vec3)
		{
			return default(float);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xB5C26C", Offset = "0xB5C26C", VA = "0xB5C26C")]
		public static float Heading2DYZ(Vector3 vec3)
		{
			return default(float);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xB5B518", Offset = "0xB5B518", VA = "0xB5B518")]
		public static float SqDistance(Vector3 v1, Vector3 v2)
		{
			return default(float);
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xB5C2E8", Offset = "0xB5C2E8", VA = "0xB5C2E8")]
		public static Vector3 SmoothStep(Vector3 f, Vector3 t, float a)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xB5C3F4", Offset = "0xB5C3F4", VA = "0xB5C3F4")]
		public static Vector3 GetDeltaToNearest(Vector3 p, float near)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xB59580", Offset = "0xB59580", VA = "0xB59580")]
		public static string ToStringBetter(this Vector3 self)
		{
			return null;
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xB5C50C", Offset = "0xB5C50C", VA = "0xB5C50C")]
		public static string ToStringSimple(this Vector3 self)
		{
			return null;
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xB5C6F8", Offset = "0xB5C6F8", VA = "0xB5C6F8")]
		public static Vector3 SubScalar(this Vector3 self, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xB5C708", Offset = "0xB5C708", VA = "0xB5C708")]
		public static Vector3 AddScalar(this Vector3 self, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xB5C718", Offset = "0xB5C718", VA = "0xB5C718")]
		public static Vector3 DistanceToMove(Vector3 a, Vector3 b, float _dist)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xB5C80C", Offset = "0xB5C80C", VA = "0xB5C80C")]
		public static Vector3 Reflection(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xB5C94C", Offset = "0xB5C94C", VA = "0xB5C94C")]
		public static Vector3 SnapTo(Vector3 v3, float snapAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xB5CBFC", Offset = "0xB5CBFC", VA = "0xB5CBFC")]
		public static bool LineLineIntersection(out Vector3 intersection, Vector3 linePoint1, Vector3 lineVec1, Vector3 linePoint2, Vector3 lineVec2, float planarErrorFactor = 1E-05f, bool includeEndPoints = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xB5CF18", Offset = "0xB5CF18", VA = "0xB5CF18")]
		public static Vector3 ClosestPointOnLineSegment(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xB5D0EC", Offset = "0xB5D0EC", VA = "0xB5D0EC")]
		public static float DistLineSegment(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(float);
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xB5D248", Offset = "0xB5D248", VA = "0xB5D248")]
		public static float SqDistLineSegment(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(float);
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xB57ED8", Offset = "0xB57ED8", VA = "0xB57ED8")]
		public static bool IsPointBetweenTwoPoints(this Vector3 p, Vector3 end1, Vector3 end2, float floatErrorFactor = 1E-05f)
		{
			return default(bool);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xB5D400", Offset = "0xB5D400", VA = "0xB5D400")]
		public static Vector3 RotateAround(this Vector3 v, Vector3 pivot, Vector3 eulerAngles)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xB5D524", Offset = "0xB5D524", VA = "0xB5D524")]
		public static Vector3 RotateX(this Vector3 v, float angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xB5D5D8", Offset = "0xB5D5D8", VA = "0xB5D5D8")]
		public static Vector3 RotateY(this Vector3 v, float angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xB5D68C", Offset = "0xB5D68C", VA = "0xB5D68C")]
		public static Vector3 RotateZ(this Vector3 v, float angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xB57FC0", Offset = "0xB57FC0", VA = "0xB57FC0")]
		public static bool Approximately(this Vector3 v, Vector3 other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xB5D740", Offset = "0xB5D740", VA = "0xB5D740")]
		public static Vector3 NormalifyForTrilateration(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xB5D848", Offset = "0xB5D848", VA = "0xB5D848")]
		public static int Trilateration(Vector3 P1, Vector3 P2, Vector3 P3, float r1, float r2, float r3, out Vector3 S1, out Vector3 S2)
		{
			return default(int);
		}
	}
}
namespace UnityEngine.Analytics.Experimental
{
	[Token(Token = "0x2000264")]
	public static class AnalyticsEvent
	{
		[Token(Token = "0x20003A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE520", Offset = "0x7CE520")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type payloadType;

			[Token(Token = "0x6001991")]
			[Address(RVA = "0xB43C38", Offset = "0xB43C38", VA = "0xB43C38")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001992")]
			[Address(RVA = "0xB4974C", Offset = "0xB4974C", VA = "0xB4974C")]
			internal bool <GetStandardEventName>b__0(KeyValuePair<string, Type> p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_SdkVersion;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ArgumentException_EmptyString;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ArgumentException_PayloadType;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Dictionary<string, Type> k_StandardEvents;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string[] k_StandardEventNames;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D5628", Offset = "0x7D5628")]
		private static bool <debugMode>k__BackingField;

		[Token(Token = "0x170000AF")]
		public static string sdkVersion
		{
			[Token(Token = "0x6001385")]
			[Address(RVA = "0xB428B0", Offset = "0xB428B0", VA = "0xB428B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		public static bool debugMode
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0xB42918", Offset = "0xB42918", VA = "0xB42918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8DB8", Offset = "0x7D8DB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001387")]
			[Address(RVA = "0xB42980", Offset = "0xB42980", VA = "0xB42980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8DC8", Offset = "0x7D8DC8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public static string[] standardEventNames
		{
			[Token(Token = "0x6001388")]
			[Address(RVA = "0xB429F0", Offset = "0xB429F0", VA = "0xB429F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001389")]
		public static T Create<T>([Optional] IDictionary<string, object> eventData) where T : AnalyticsEventPayload
		{
			return null;
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xB42B38", Offset = "0xB42B38", VA = "0xB42B38")]
		public static AnalyticsEventPayload Create(string eventName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xB42DBC", Offset = "0xB42DBC", VA = "0xB42DBC")]
		public static AnalyticsEventPayload Create(Type payloadType, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xB43004", Offset = "0xB43004", VA = "0xB43004")]
		public static AnalyticsResult Send(string eventName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xB43680", Offset = "0xB43680", VA = "0xB43680")]
		public static AnalyticsResult Send(string eventName, Vector3 position)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600138E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7D8DD8", Offset = "0x7D8DD8")]
		public static AnalyticsResult Send<T>([Optional] IDictionary<string, object> eventData) where T : AnalyticsEventPayload
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xB437C0", Offset = "0xB437C0", VA = "0xB437C0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7D8E10", Offset = "0x7D8E10")]
		public static AnalyticsResult Send(Type payloadType, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xB43960", Offset = "0xB43960", VA = "0xB43960")]
		public static AnalyticsResult Send(AnalyticsEventPayload eventPayload)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001391")]
		public static string GetStandardEventName<T>() where T : AnalyticsEventPayload
		{
			return null;
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xB43A1C", Offset = "0xB43A1C", VA = "0xB43A1C")]
		public static string GetStandardEventName(Type payloadType)
		{
			return null;
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xB43C40", Offset = "0xB43C40", VA = "0xB43C40")]
		public static Type GetStandardEventType(string eventName)
		{
			return null;
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xB43D14", Offset = "0xB43D14", VA = "0xB43D14")]
		public static AnalyticsResult AchievementStep(int stepIndex, string achievementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xB43D9C", Offset = "0xB43D9C", VA = "0xB43D9C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7D8E48", Offset = "0x7D8E48")]
		public static AnalyticsResult AchievementUnlock(string achievementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xB43E1C", Offset = "0xB43E1C", VA = "0xB43E1C")]
		public static AnalyticsResult AchievementUnlocked(string achievementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xB43E9C", Offset = "0xB43E9C", VA = "0xB43E9C")]
		public static AnalyticsResult AdComplete(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xB43F34", Offset = "0xB43F34", VA = "0xB43F34")]
		public static AnalyticsResult AdComplete(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xB43FCC", Offset = "0xB43FCC", VA = "0xB43FCC")]
		public static AnalyticsResult AdOffer(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xB44064", Offset = "0xB44064", VA = "0xB44064")]
		public static AnalyticsResult AdOffer(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xB440FC", Offset = "0xB440FC", VA = "0xB440FC")]
		public static AnalyticsResult AdSkip(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xB44194", Offset = "0xB44194", VA = "0xB44194")]
		public static AnalyticsResult AdSkip(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xB4422C", Offset = "0xB4422C", VA = "0xB4422C")]
		public static AnalyticsResult AdStart(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xB442C4", Offset = "0xB442C4", VA = "0xB442C4")]
		public static AnalyticsResult AdStart(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xB4435C", Offset = "0xB4435C", VA = "0xB4435C")]
		public static AnalyticsResult ChatMessageSent([Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xB443D8", Offset = "0xB443D8", VA = "0xB443D8")]
		public static AnalyticsResult ConsumableAcquired(string name, AcquisitionType type, AcquisitionSource source, int amount, int balance, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xB44568", Offset = "0xB44568", VA = "0xB44568")]
		public static AnalyticsResult ConsumableAcquired(string name, AcquisitionType type, string source, int amount, int balance, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xB446F4", Offset = "0xB446F4", VA = "0xB446F4")]
		public static AnalyticsResult ConsumableAcquired(string name, AcquisitionType type, AcquisitionSource source, float amount, float balance, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xB44884", Offset = "0xB44884", VA = "0xB44884")]
		public static AnalyticsResult ConsumableAcquired(string name, AcquisitionType type, string source, float amount, float balance, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xB44A18", Offset = "0xB44A18", VA = "0xB44A18")]
		public static AnalyticsResult ConsumableAcquired(string name, AcquisitionType type, AcquisitionSource source, decimal amount, decimal balance, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xB44BE0", Offset = "0xB44BE0", VA = "0xB44BE0")]
		public static AnalyticsResult ConsumableAcquired(string name, AcquisitionType type, string source, decimal amount, decimal balance, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xB44DA4", Offset = "0xB44DA4", VA = "0xB44DA4")]
		public static AnalyticsResult ConsumableSpent(string name, int amount, int balance, [Optional] string itemPurchased, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xB44F18", Offset = "0xB44F18", VA = "0xB44F18")]
		public static AnalyticsResult ConsumableSpent(string name, float amount, float balance, [Optional] string itemPurchased, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xB4508C", Offset = "0xB4508C", VA = "0xB4508C")]
		public static AnalyticsResult ConsumableSpent(string name, decimal amount, decimal balance, [Optional] string itemPurchased, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xB45228", Offset = "0xB45228", VA = "0xB45228")]
		public static AnalyticsResult CurrencyAcquired(string name, AcquisitionType type, AcquisitionSource source, int amount, int balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xB45400", Offset = "0xB45400", VA = "0xB45400")]
		public static AnalyticsResult CurrencyAcquired(string name, AcquisitionType type, string source, int amount, int balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xB455DC", Offset = "0xB455DC", VA = "0xB455DC")]
		public static AnalyticsResult CurrencyAcquired(string name, AcquisitionType type, AcquisitionSource source, float amount, float balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xB457AC", Offset = "0xB457AC", VA = "0xB457AC")]
		public static AnalyticsResult CurrencyAcquired(string name, AcquisitionType type, string source, float amount, float balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xB45988", Offset = "0xB45988", VA = "0xB45988")]
		public static AnalyticsResult CurrencyAcquired(string name, AcquisitionType type, AcquisitionSource source, decimal amount, decimal balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xB45BD0", Offset = "0xB45BD0", VA = "0xB45BD0")]
		public static AnalyticsResult CurrencyAcquired(string name, AcquisitionType type, string source, decimal amount, decimal balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xB45E18", Offset = "0xB45E18", VA = "0xB45E18")]
		public static AnalyticsResult CutsceneSkip(string cutsceneName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xB45F64", Offset = "0xB45F64", VA = "0xB45F64")]
		public static AnalyticsResult GameOver([Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xB46064", Offset = "0xB46064", VA = "0xB46064")]
		public static AnalyticsResult GameOver(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xB46174", Offset = "0xB46174", VA = "0xB46174")]
		public static AnalyticsResult GameStart([Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xB461F0", Offset = "0xB461F0", VA = "0xB461F0")]
		public static AnalyticsResult ItemAcquired(string name, AcquisitionType type, AcquisitionSource source, [Optional] string resourceType, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xB46360", Offset = "0xB46360", VA = "0xB46360")]
		public static AnalyticsResult ItemAcquired(string name, AcquisitionType type, string source, [Optional] string resourceType, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xB46548", Offset = "0xB46548", VA = "0xB46548")]
		public static AnalyticsResult LevelComplete(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xB46648", Offset = "0xB46648", VA = "0xB46648")]
		public static AnalyticsResult LevelComplete(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xB46758", Offset = "0xB46758", VA = "0xB46758")]
		public static AnalyticsResult LevelFail(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xB46858", Offset = "0xB46858", VA = "0xB46858")]
		public static AnalyticsResult LevelFail(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xB46968", Offset = "0xB46968", VA = "0xB46968")]
		public static AnalyticsResult LevelQuit(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xB46A68", Offset = "0xB46A68", VA = "0xB46A68")]
		public static AnalyticsResult LevelQuit(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xB46B78", Offset = "0xB46B78", VA = "0xB46B78")]
		public static AnalyticsResult LevelSkip(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xB46C78", Offset = "0xB46C78", VA = "0xB46C78")]
		public static AnalyticsResult LevelSkip(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xB46D88", Offset = "0xB46D88", VA = "0xB46D88")]
		public static AnalyticsResult LevelStart(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xB46E88", Offset = "0xB46E88", VA = "0xB46E88")]
		public static AnalyticsResult LevelStart(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xB46F98", Offset = "0xB46F98", VA = "0xB46F98")]
		public static AnalyticsResult LevelUp(string oldLevelName, string newLevelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xB47108", Offset = "0xB47108", VA = "0xB47108")]
		public static AnalyticsResult LevelUp(int oldLevelIndex, int newLevelIndex, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xB47214", Offset = "0xB47214", VA = "0xB47214")]
		public static AnalyticsResult LevelUp(int oldLevelIndex, int newLevelIndex, string oldLevelName, string newLevelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xB4741C", Offset = "0xB4741C", VA = "0xB4741C")]
		public static AnalyticsResult PostAdAction(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xB4754C", Offset = "0xB4754C", VA = "0xB4754C")]
		public static AnalyticsResult PostAdAction(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xB4767C", Offset = "0xB4767C", VA = "0xB4767C")]
		public static AnalyticsResult PostInstallAction([Optional] string actionId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xB477C8", Offset = "0xB477C8", VA = "0xB477C8")]
		public static AnalyticsResult PushNotificationClick(string messageId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xB47914", Offset = "0xB47914", VA = "0xB47914")]
		public static AnalyticsResult PushNotificationEnable([Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xB47990", Offset = "0xB47990", VA = "0xB47990")]
		public static AnalyticsResult ScreenVisit(ScreenName screenName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xB47AC0", Offset = "0xB47AC0", VA = "0xB47AC0")]
		public static AnalyticsResult ScreenVisit(string screenName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xB47C0C", Offset = "0xB47C0C", VA = "0xB47C0C")]
		public static AnalyticsResult SocialShare(ShareType shareType, SocialNetwork socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xB47D64", Offset = "0xB47D64", VA = "0xB47D64")]
		public static AnalyticsResult SocialShare(ShareType shareType, string socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xB47EA4", Offset = "0xB47EA4", VA = "0xB47EA4")]
		public static AnalyticsResult SocialShare(string shareType, SocialNetwork socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xB47FE4", Offset = "0xB47FE4", VA = "0xB47FE4")]
		public static AnalyticsResult SocialShare(string shareType, string socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xB48154", Offset = "0xB48154", VA = "0xB48154")]
		public static AnalyticsResult StoreItemClick(StoreType storeType, string itemId, [Optional] string itemName, [Optional] Dictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xB48310", Offset = "0xB48310", VA = "0xB48310")]
		public static AnalyticsResult StoreOpened(StoreType storeType, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xB48474", Offset = "0xB48474", VA = "0xB48474")]
		public static AnalyticsResult TutorialComplete([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xB48574", Offset = "0xB48574", VA = "0xB48574")]
		public static AnalyticsResult TutorialSkip([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xB48674", Offset = "0xB48674", VA = "0xB48674")]
		public static AnalyticsResult TutorialStart([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xB48774", Offset = "0xB48774", VA = "0xB48774")]
		public static AnalyticsResult TutorialStep(int stepIndex, [Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xB488F4", Offset = "0xB488F4", VA = "0xB488F4")]
		public static AnalyticsResult UserSignup(string authorizationNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xB48A40", Offset = "0xB48A40", VA = "0xB48A40")]
		public static AnalyticsResult UserSignup(AuthorizationNetwork authorizationNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}
	}
	[Token(Token = "0x2000265")]
	public enum StoreType
	{
		[Token(Token = "0x4000F72")]
		Soft,
		[Token(Token = "0x4000F73")]
		Premium
	}
	[Token(Token = "0x2000266")]
	public enum AcquisitionType
	{
		[Token(Token = "0x4000F75")]
		Soft,
		[Token(Token = "0x4000F76")]
		Premium
	}
	[Token(Token = "0x2000267")]
	public enum AcquisitionSource
	{
		[Token(Token = "0x4000F78")]
		None,
		[Token(Token = "0x4000F79")]
		Store,
		[Token(Token = "0x4000F7A")]
		Earned,
		[Token(Token = "0x4000F7B")]
		Promotion,
		[Token(Token = "0x4000F7C")]
		Gift,
		[Token(Token = "0x4000F7D")]
		RewardedAd,
		[Token(Token = "0x4000F7E")]
		TimedReward,
		[Token(Token = "0x4000F7F")]
		SocialReward
	}
	[Token(Token = "0x2000268")]
	public enum AdvertisingNetwork
	{
		[Token(Token = "0x4000F81")]
		None,
		[Token(Token = "0x4000F82")]
		Aarki,
		[Token(Token = "0x4000F83")]
		AdAction,
		[Token(Token = "0x4000F84")]
		AdapTv,
		[Token(Token = "0x4000F85")]
		Adcash,
		[Token(Token = "0x4000F86")]
		AdColony,
		[Token(Token = "0x4000F87")]
		AdMob,
		[Token(Token = "0x4000F88")]
		AerServ,
		[Token(Token = "0x4000F89")]
		Airpush,
		[Token(Token = "0x4000F8A")]
		Altrooz,
		[Token(Token = "0x4000F8B")]
		Ampush,
		[Token(Token = "0x4000F8C")]
		AppleSearch,
		[Token(Token = "0x4000F8D")]
		AppLift,
		[Token(Token = "0x4000F8E")]
		AppLovin,
		[Token(Token = "0x4000F8F")]
		Appnext,
		[Token(Token = "0x4000F90")]
		AppNexus,
		[Token(Token = "0x4000F91")]
		Appoday,
		[Token(Token = "0x4000F92")]
		Appodeal,
		[Token(Token = "0x4000F93")]
		AppsUnion,
		[Token(Token = "0x4000F94")]
		Avazu,
		[Token(Token = "0x4000F95")]
		BlueStacks,
		[Token(Token = "0x4000F96")]
		Chartboost,
		[Token(Token = "0x4000F97")]
		ClickDealer,
		[Token(Token = "0x4000F98")]
		CPAlead,
		[Token(Token = "0x4000F99")]
		CrossChannel,
		[Token(Token = "0x4000F9A")]
		CrossInstall,
		[Token(Token = "0x4000F9B")]
		Epom,
		[Token(Token = "0x4000F9C")]
		Facebook,
		[Token(Token = "0x4000F9D")]
		Fetch,
		[Token(Token = "0x4000F9E")]
		Fiksu,
		[Token(Token = "0x4000F9F")]
		Flurry,
		[Token(Token = "0x4000FA0")]
		Fuse,
		[Token(Token = "0x4000FA1")]
		Fyber,
		[Token(Token = "0x4000FA2")]
		Glispa,
		[Token(Token = "0x4000FA3")]
		Google,
		[Token(Token = "0x4000FA4")]
		GrowMobile,
		[Token(Token = "0x4000FA5")]
		HeyZap,
		[Token(Token = "0x4000FA6")]
		HyperMX,
		[Token(Token = "0x4000FA7")]
		Iddiction,
		[Token(Token = "0x4000FA8")]
		IndexExchange,
		[Token(Token = "0x4000FA9")]
		InMobi,
		[Token(Token = "0x4000FAA")]
		Instagram,
		[Token(Token = "0x4000FAB")]
		Instal,
		[Token(Token = "0x4000FAC")]
		Ipsos,
		[Token(Token = "0x4000FAD")]
		IronSource,
		[Token(Token = "0x4000FAE")]
		Jirbo,
		[Token(Token = "0x4000FAF")]
		Kimia,
		[Token(Token = "0x4000FB0")]
		Leadbolt,
		[Token(Token = "0x4000FB1")]
		Liftoff,
		[Token(Token = "0x4000FB2")]
		Manage,
		[Token(Token = "0x4000FB3")]
		Matomy,
		[Token(Token = "0x4000FB4")]
		MediaBrix,
		[Token(Token = "0x4000FB5")]
		MillenialMedia,
		[Token(Token = "0x4000FB6")]
		Minimob,
		[Token(Token = "0x4000FB7")]
		MobAir,
		[Token(Token = "0x4000FB8")]
		MobileCore,
		[Token(Token = "0x4000FB9")]
		Mobobeat,
		[Token(Token = "0x4000FBA")]
		Mobusi,
		[Token(Token = "0x4000FBB")]
		Mobvista,
		[Token(Token = "0x4000FBC")]
		MoPub,
		[Token(Token = "0x4000FBD")]
		Motive,
		[Token(Token = "0x4000FBE")]
		Msales,
		[Token(Token = "0x4000FBF")]
		NativeX,
		[Token(Token = "0x4000FC0")]
		OpenX,
		[Token(Token = "0x4000FC1")]
		Pandora,
		[Token(Token = "0x4000FC2")]
		PropellerAds,
		[Token(Token = "0x4000FC3")]
		Revmob,
		[Token(Token = "0x4000FC4")]
		RubiconProject,
		[Token(Token = "0x4000FC5")]
		SiriusAd,
		[Token(Token = "0x4000FC6")]
		Smaato,
		[Token(Token = "0x4000FC7")]
		SponsorPay,
		[Token(Token = "0x4000FC8")]
		SpotXchange,
		[Token(Token = "0x4000FC9")]
		StartApp,
		[Token(Token = "0x4000FCA")]
		Tapjoy,
		[Token(Token = "0x4000FCB")]
		Taptica,
		[Token(Token = "0x4000FCC")]
		Tremor,
		[Token(Token = "0x4000FCD")]
		TrialPay,
		[Token(Token = "0x4000FCE")]
		Twitter,
		[Token(Token = "0x4000FCF")]
		UnityAds,
		[Token(Token = "0x4000FD0")]
		Vungle,
		[Token(Token = "0x4000FD1")]
		Yeahmobi,
		[Token(Token = "0x4000FD2")]
		YuMe
	}
	[Token(Token = "0x2000269")]
	public enum AuthorizationNetwork
	{
		[Token(Token = "0x4000FD4")]
		None,
		[Token(Token = "0x4000FD5")]
		Internal,
		[Token(Token = "0x4000FD6")]
		Facebook,
		[Token(Token = "0x4000FD7")]
		Twitter,
		[Token(Token = "0x4000FD8")]
		Google,
		[Token(Token = "0x4000FD9")]
		GameCenter
	}
	[Token(Token = "0x200026A")]
	public enum SocialNetwork
	{
		[Token(Token = "0x4000FDB")]
		None,
		[Token(Token = "0x4000FDC")]
		Facebook,
		[Token(Token = "0x4000FDD")]
		Twitter,
		[Token(Token = "0x4000FDE")]
		Instagram,
		[Token(Token = "0x4000FDF")]
		GooglePlus,
		[Token(Token = "0x4000FE0")]
		Pinterest,
		[Token(Token = "0x4000FE1")]
		WeChat,
		[Token(Token = "0x4000FE2")]
		Weibo,
		[Token(Token = "0x4000FE3")]
		QQ,
		[Token(Token = "0x4000FE4")]
		Zhihu,
		[Token(Token = "0x4000FE5")]
		VK,
		[Token(Token = "0x4000FE6")]
		OK_ru
	}
	[Token(Token = "0x200026B")]
	public enum ShareType
	{
		[Token(Token = "0x4000FE8")]
		None,
		[Token(Token = "0x4000FE9")]
		TextOnly,
		[Token(Token = "0x4000FEA")]
		Image,
		[Token(Token = "0x4000FEB")]
		Video,
		[Token(Token = "0x4000FEC")]
		Invite,
		[Token(Token = "0x4000FED")]
		Achievement
	}
	[Token(Token = "0x200026C")]
	public enum ScreenName
	{
		[Token(Token = "0x4000FEF")]
		None,
		[Token(Token = "0x4000FF0")]
		MainMenu,
		[Token(Token = "0x4000FF1")]
		Settings,
		[Token(Token = "0x4000FF2")]
		Map,
		[Token(Token = "0x4000FF3")]
		Lose,
		[Token(Token = "0x4000FF4")]
		Win,
		[Token(Token = "0x4000FF5")]
		Credits,
		[Token(Token = "0x4000FF6")]
		Title,
		[Token(Token = "0x4000FF7")]
		IAPPromo,
		[Token(Token = "0x4000FF8")]
		CrossPromo,
		[Token(Token = "0x4000FF9")]
		FeaturePromo,
		[Token(Token = "0x4000FFA")]
		Hint,
		[Token(Token = "0x4000FFB")]
		Pause,
		[Token(Token = "0x4000FFC")]
		Inventory,
		[Token(Token = "0x4000FFD")]
		Leaderboard,
		[Token(Token = "0x4000FFE")]
		Achievements,
		[Token(Token = "0x4000FFF")]
		Lobby
	}
	[Serializable]
	[Token(Token = "0x200026D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCA9C", Offset = "0x7CCA9C")]
	public class AnalyticsEventPayload : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE530", Offset = "0x7CE530")]
		private sealed class <>c__30<T>
		{
			[Token(Token = "0x4001485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__30<T> <>9;

			[Token(Token = "0x4001486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, string> <>9__30_0;

			[Token(Token = "0x6001994")]
			public <>c__30()
			{
			}

			[Token(Token = "0x6001995")]
			internal string <ValidateDataValueExistsInEnum>b__30_0(T x)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20003A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE540", Offset = "0x7CE540")]
		private sealed class <>c__44<T>
		{
			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__44<T> <>9;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, string> <>9__44_0;

			[Token(Token = "0x6001997")]
			public <>c__44()
			{
			}

			[Token(Token = "0x6001998")]
			internal string <ConvertStringToEnum>b__44_0(T x)
			{
				return null;
			}
		}

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_WarningFormat_NullValue;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ErrorFormat_InvalidType;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ErrorFormat_InvalidValue;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string k_ErrorFormat_RequiredParamNotSet;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string k_StandardEventPrefix;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string k_Error_TooManyParams;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly string k_Error_NameNullOrEmpty;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly string k_Error_KeyValueCountNotEqual;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string k_PrefsKey_MaxParams;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly int k_DefaultMaxParams;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[ReadOnlyField]
		private string m_EventName;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private readonly List<string> m_EventDataKeys;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private readonly List<object> m_EventDataValues;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<string, object> m_EventData;

		[Token(Token = "0x170000B2")]
		public virtual string eventName
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0xB497B4", Offset = "0xB497B4", VA = "0xB497B4", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xB497BC", Offset = "0xB497BC", VA = "0xB497BC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public Dictionary<string, object> eventData
		{
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0xB49860", Offset = "0xB49860", VA = "0xB49860")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		public int maxParams
		{
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0xB49A1C", Offset = "0xB49A1C", VA = "0xB49A1C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013DA")]
			[Address(RVA = "0xB49AE8", Offset = "0xB49AE8", VA = "0xB49AE8")]
			set
			{
			}
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xB41044", Offset = "0xB41044", VA = "0xB41044", Slot = "6")]
		protected virtual void ValidatePayload()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xB411B0", Offset = "0xB411B0", VA = "0xB411B0", Slot = "7")]
		protected virtual void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xB49B9C", Offset = "0xB49B9C", VA = "0xB49B9C", Slot = "8")]
		protected virtual void OnValidationFailed(string message)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xB41048", Offset = "0xB41048", VA = "0xB41048")]
		protected void ValidateDataKeyExists(string key)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xB49C7C", Offset = "0xB49C7C", VA = "0xB49C7C")]
		protected void ValidateAtLeastOneDataKeyExists(params string[] keys)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xB49EC4", Offset = "0xB49EC4", VA = "0xB49EC4")]
		protected void ValidateAllDataKeysExist(params string[] keys)
		{
		}

		[Token(Token = "0x60013E1")]
		protected void ValidateDataValueType<T>(string key, object value)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xB4A054", Offset = "0xB4A054", VA = "0xB4A054")]
		protected void ValidateDataValueTypeIsNumeric(string key, object value)
		{
		}

		[Token(Token = "0x60013E3")]
		protected void ValidateDataValueExistsInEnum<T>(string key, string value)
		{
		}

		[Token(Token = "0x60013E4")]
		protected static string GetStandardParamValue<T>(T value) where T : struct
		{
			return null;
		}

		[Token(Token = "0x60013E5")]
		public static T CreateInstance<T>([Optional] IDictionary<string, object> eventData) where T : AnalyticsEventPayload
		{
			return null;
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xB42F5C", Offset = "0xB42F5C", VA = "0xB42F5C")]
		public static AnalyticsEventPayload CreateInstance(Type payloadType, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xB42C7C", Offset = "0xB42C7C", VA = "0xB42C7C")]
		public static AnalyticsEventPayload CreateInstance(string eventName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xB49864", Offset = "0xB49864", VA = "0xB49864")]
		public Dictionary<string, object> GetEventData()
		{
			return null;
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xB4A14C", Offset = "0xB4A14C", VA = "0xB4A14C")]
		public void SetEventData(IDictionary<string, object> eventData)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xB49C08", Offset = "0xB49C08", VA = "0xB49C08")]
		public bool HasParam(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60013EB")]
		public T GetParam<T>(string key)
		{
			return (T)null;
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xB40D08", Offset = "0xB40D08", VA = "0xB40D08")]
		public void SetParam(string key, object value)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xB43150", Offset = "0xB43150", VA = "0xB43150")]
		public AnalyticsResult Send()
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xB49DA0", Offset = "0xB49DA0", VA = "0xB49DA0")]
		private static string JoinWords(string conjunction, string[] words)
		{
			return null;
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xB4A5F4", Offset = "0xB4A5F4", VA = "0xB4A5F4")]
		private static string SplitCamelCase(string input)
		{
			return null;
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xB4A3E0", Offset = "0xB4A3E0", VA = "0xB4A3E0")]
		private static string ConvertEnumToString(object value)
		{
			return null;
		}

		[Token(Token = "0x60013F1")]
		private static T ConvertStringToEnum<T>(string value)
		{
			return (T)null;
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xB41218", Offset = "0xB41218", VA = "0xB41218")]
		public AnalyticsEventPayload()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class AnalyticsEventPayloadException : UnityException
	{
		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xB49C00", Offset = "0xB49C00", VA = "0xB49C00")]
		public AnalyticsEventPayloadException(string message)
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class ReadOnlyFieldAttribute : PropertyAttribute
	{
		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xB50170", Offset = "0xB50170", VA = "0xB50170")]
		public ReadOnlyFieldAttribute()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public abstract class AchievementPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_ParamKey_AchievementId;

		[Token(Token = "0x170000B5")]
		public string achievementId
		{
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0xB40C0C", Offset = "0xB40C0C", VA = "0xB40C0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0xB40C88", Offset = "0xB40C88", VA = "0xB40C88")]
			set
			{
			}
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xB40FD4", Offset = "0xB40FD4", VA = "0xB40FD4", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xB410FC", Offset = "0xB410FC", VA = "0xB410FC", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60013FA")]
		protected static T CreateInstance<T>(string achievementId, [Optional] IDictionary<string, object> eventData) where T : AchievementPayload
		{
			return null;
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xB411B4", Offset = "0xB411B4", VA = "0xB411B4")]
		protected AchievementPayload()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public abstract class AdPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_ParamKey_PlacementId;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_Network;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_Rewarded;

		[Token(Token = "0x170000B6")]
		public string placementId
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xB41EA8", Offset = "0xB41EA8", VA = "0xB41EA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xB41F24", Offset = "0xB41F24", VA = "0xB41F24")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public string network
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xB41FA4", Offset = "0xB41FA4", VA = "0xB41FA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001400")]
			[Address(RVA = "0xB42020", Offset = "0xB42020", VA = "0xB42020")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public string rewarded
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0xB420A0", Offset = "0xB420A0", VA = "0xB420A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001402")]
			[Address(RVA = "0xB4211C", Offset = "0xB4211C", VA = "0xB4211C")]
			set
			{
			}
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xB4219C", Offset = "0xB4219C", VA = "0xB4219C", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xB4220C", Offset = "0xB4220C", VA = "0xB4220C", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001405")]
		protected static T CreateInstance<T>(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData) where T : AdPayload
		{
			return null;
		}

		[Token(Token = "0x6001406")]
		protected static T CreateInstance<T>(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData) where T : AdPayload
		{
			return null;
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xB41B90", Offset = "0xB41B90", VA = "0xB41B90")]
		protected AdPayload()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public abstract class GamePayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_ParamKey_LevelIndex;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_LevelName;

		[Token(Token = "0x170000B9")]
		public int levelIndex
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0xB4D57C", Offset = "0xB4D57C", VA = "0xB4D57C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600140A")]
			[Address(RVA = "0xB4D5F8", Offset = "0xB4D5F8", VA = "0xB4D5F8")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public string levelName
		{
			[Token(Token = "0x600140B")]
			[Address(RVA = "0xB4D698", Offset = "0xB4D698", VA = "0xB4D698")]
			get
			{
				return null;
			}
			[Token(Token = "0x600140C")]
			[Address(RVA = "0xB4D714", Offset = "0xB4D714", VA = "0xB4D714")]
			set
			{
			}
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xB4D794", Offset = "0xB4D794", VA = "0xB4D794", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x600140E")]
		protected static T CreateInstance<T>(string levelName, [Optional] IDictionary<string, object> eventData) where T : GamePayload
		{
			return null;
		}

		[Token(Token = "0x600140F")]
		protected static T CreateInstance<T>(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData) where T : GamePayload
		{
			return null;
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xB4D4BC", Offset = "0xB4D4BC", VA = "0xB4D4BC")]
		protected GamePayload()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public abstract class LevelPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_ParamKey_LevelIndex;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_LevelName;

		[Token(Token = "0x170000BB")]
		public int levelIndex
		{
			[Token(Token = "0x6001412")]
			[Address(RVA = "0xB4E5E0", Offset = "0xB4E5E0", VA = "0xB4E5E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001413")]
			[Address(RVA = "0xB4E65C", Offset = "0xB4E65C", VA = "0xB4E65C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public string levelName
		{
			[Token(Token = "0x6001414")]
			[Address(RVA = "0xB4E6FC", Offset = "0xB4E6FC", VA = "0xB4E6FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001415")]
			[Address(RVA = "0xB4E778", Offset = "0xB4E778", VA = "0xB4E778")]
			set
			{
			}
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xB4E7F8", Offset = "0xB4E7F8", VA = "0xB4E7F8", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xB4E920", Offset = "0xB4E920", VA = "0xB4E920", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001418")]
		protected static T CreateInstance<T>(string levelName, [Optional] IDictionary<string, object> eventData) where T : LevelPayload
		{
			return null;
		}

		[Token(Token = "0x6001419")]
		protected static T CreateInstance<T>(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData) where T : LevelPayload
		{
			return null;
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xB4E3F8", Offset = "0xB4E3F8", VA = "0xB4E3F8")]
		protected LevelPayload()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public abstract class TutorialPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_ParamKey_TutorialId;

		[Token(Token = "0x170000BD")]
		public string tutorialId
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0xB51874", Offset = "0xB51874", VA = "0xB51874")]
			get
			{
				return null;
			}
			[Token(Token = "0x600141D")]
			[Address(RVA = "0xB518F0", Offset = "0xB518F0", VA = "0xB518F0")]
			set
			{
			}
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xB51970", Offset = "0xB51970", VA = "0xB51970", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x600141F")]
		protected static T CreateInstance<T>([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData) where T : TutorialPayload
		{
			return null;
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xB517B4", Offset = "0xB517B4", VA = "0xB517B4")]
		protected TutorialPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCB04", Offset = "0x7CCB04")]
	public class AchievementStepPayload : AchievementPayload
	{
		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string k_ParamKey_StepIndex;

		[Token(Token = "0x170000BE")]
		public override string eventName
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0xB41358", Offset = "0xB41358", VA = "0xB41358", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public int stepIndex
		{
			[Token(Token = "0x6001423")]
			[Address(RVA = "0xB413C0", Offset = "0xB413C0", VA = "0xB413C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001424")]
			[Address(RVA = "0xB4143C", Offset = "0xB4143C", VA = "0xB4143C")]
			set
			{
			}
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xB414DC", Offset = "0xB414DC", VA = "0xB414DC", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xB41554", Offset = "0xB41554", VA = "0xB41554", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xB41618", Offset = "0xB41618", VA = "0xB41618")]
		public static AchievementStepPayload CreateInstance(int stepIndex, string achievementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xB41710", Offset = "0xB41710", VA = "0xB41710")]
		public AchievementStepPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCB64", Offset = "0x7CCB64")]
	public class AchievementUnlockedPayload : AchievementPayload
	{
		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000C0")]
		public override string eventName
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0xB417EC", Offset = "0xB417EC", VA = "0xB417EC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xB41854", Offset = "0xB41854", VA = "0xB41854")]
		public new static AchievementUnlockedPayload CreateInstance(string achievementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xB418D4", Offset = "0xB418D4", VA = "0xB418D4")]
		public AchievementUnlockedPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCBC4", Offset = "0x7CCBC4")]
	public class AdCompletePayload : AdPayload
	{
		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000C1")]
		public override string eventName
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0xB41994", Offset = "0xB41994", VA = "0xB41994", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xB419FC", Offset = "0xB419FC", VA = "0xB419FC")]
		public static AdCompletePayload CreateInstance(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xB41A94", Offset = "0xB41A94", VA = "0xB41A94")]
		public static AdCompletePayload CreateInstance(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xB41B2C", Offset = "0xB41B2C", VA = "0xB41B2C")]
		public AdCompletePayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCC24", Offset = "0x7CCC24")]
	public class AdOfferPayload : AdPayload
	{
		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000C2")]
		public override string eventName
		{
			[Token(Token = "0x6001433")]
			[Address(RVA = "0xB41C50", Offset = "0xB41C50", VA = "0xB41C50", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xB41CB8", Offset = "0xB41CB8", VA = "0xB41CB8")]
		public static AdOfferPayload CreateInstance(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xB41D50", Offset = "0xB41D50", VA = "0xB41D50")]
		public static AdOfferPayload CreateInstance(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xB41DE8", Offset = "0xB41DE8", VA = "0xB41DE8")]
		public AdOfferPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCC84", Offset = "0x7CCC84")]
	public class AdSkipPayload : AdPayload
	{
		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000C3")]
		public override string eventName
		{
			[Token(Token = "0x6001438")]
			[Address(RVA = "0xB42400", Offset = "0xB42400", VA = "0xB42400", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xB42468", Offset = "0xB42468", VA = "0xB42468")]
		public static AdSkipPayload CreateInstance(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xB42500", Offset = "0xB42500", VA = "0xB42500")]
		public static AdSkipPayload CreateInstance(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xB42598", Offset = "0xB42598", VA = "0xB42598")]
		public AdSkipPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCCE4", Offset = "0x7CCCE4")]
	public class AdStartPayload : AdPayload
	{
		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000C4")]
		public override string eventName
		{
			[Token(Token = "0x600143D")]
			[Address(RVA = "0xB42658", Offset = "0xB42658", VA = "0xB42658", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xB426C0", Offset = "0xB426C0", VA = "0xB426C0")]
		public static AdStartPayload CreateInstance(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xB42758", Offset = "0xB42758", VA = "0xB42758")]
		public static AdStartPayload CreateInstance(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xB427F0", Offset = "0xB427F0", VA = "0xB427F0")]
		public AdStartPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCD44", Offset = "0x7CCD44")]
	public class ChatMessageSentPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000C5")]
		public override string eventName
		{
			[Token(Token = "0x6001442")]
			[Address(RVA = "0xB4A7EC", Offset = "0xB4A7EC", VA = "0xB4A7EC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xB4A854", Offset = "0xB4A854", VA = "0xB4A854")]
		public ChatMessageSentPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCDA4", Offset = "0x7CCDA4")]
	public class ConsumableAcquiredPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_Type;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_Source;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string k_ParamKey_Name;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string k_ParamKey_Amount;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string k_ParamKey_Balance;

		[Token(Token = "0x170000C6")]
		public override string eventName
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0xB4A914", Offset = "0xB4A914", VA = "0xB4A914", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		public AcquisitionType type
		{
			[Token(Token = "0x6001446")]
			[Address(RVA = "0xB4A97C", Offset = "0xB4A97C", VA = "0xB4A97C")]
			get
			{
				return default(AcquisitionType);
			}
			[Token(Token = "0x6001447")]
			[Address(RVA = "0xB4A9F8", Offset = "0xB4A9F8", VA = "0xB4A9F8")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public string source
		{
			[Token(Token = "0x6001448")]
			[Address(RVA = "0xB4AA98", Offset = "0xB4AA98", VA = "0xB4AA98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001449")]
			[Address(RVA = "0xB4AB14", Offset = "0xB4AB14", VA = "0xB4AB14")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public new string name
		{
			[Token(Token = "0x600144A")]
			[Address(RVA = "0xB4AB94", Offset = "0xB4AB94", VA = "0xB4AB94")]
			get
			{
				return null;
			}
			[Token(Token = "0x600144B")]
			[Address(RVA = "0xB4AC10", Offset = "0xB4AC10", VA = "0xB4AC10")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public object amount
		{
			[Token(Token = "0x600144C")]
			[Address(RVA = "0xB4AC90", Offset = "0xB4AC90", VA = "0xB4AC90")]
			get
			{
				return null;
			}
			[Token(Token = "0x600144D")]
			[Address(RVA = "0xB4AD0C", Offset = "0xB4AD0C", VA = "0xB4AD0C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public object balance
		{
			[Token(Token = "0x600144E")]
			[Address(RVA = "0xB4AD8C", Offset = "0xB4AD8C", VA = "0xB4AD8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600144F")]
			[Address(RVA = "0xB4AE08", Offset = "0xB4AE08", VA = "0xB4AE08")]
			set
			{
			}
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xB4AE88", Offset = "0xB4AE88", VA = "0xB4AE88", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xB4B070", Offset = "0xB4B070", VA = "0xB4B070", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xB44488", Offset = "0xB44488", VA = "0xB44488")]
		public static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, int amount, int balance, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xB44618", Offset = "0xB44618", VA = "0xB44618")]
		public static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, int amount, int balance, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xB447A4", Offset = "0xB447A4", VA = "0xB447A4")]
		public static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, float amount, float balance, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xB44934", Offset = "0xB44934", VA = "0xB44934")]
		public static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, float amount, float balance, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xB44AE8", Offset = "0xB44AE8", VA = "0xB44AE8")]
		public static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, decimal amount, decimal balance, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xB44CB0", Offset = "0xB44CB0", VA = "0xB44CB0")]
		public static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, decimal amount, decimal balance, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xB4B298", Offset = "0xB4B298", VA = "0xB4B298")]
		private static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, object amount, object balance, IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xB4B3FC", Offset = "0xB4B3FC", VA = "0xB4B3FC")]
		public ConsumableAcquiredPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCE04", Offset = "0x7CCE04")]
	public class ConsumableSpentPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_Name;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_Amount;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string k_ParamKey_Balance;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string k_ParamKey_Purchase;

		[Token(Token = "0x170000CC")]
		public override string eventName
		{
			[Token(Token = "0x600145B")]
			[Address(RVA = "0xB4B548", Offset = "0xB4B548", VA = "0xB4B548", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		public new string name
		{
			[Token(Token = "0x600145C")]
			[Address(RVA = "0xB4B5B0", Offset = "0xB4B5B0", VA = "0xB4B5B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600145D")]
			[Address(RVA = "0xB4B62C", Offset = "0xB4B62C", VA = "0xB4B62C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public object amount
		{
			[Token(Token = "0x600145E")]
			[Address(RVA = "0xB4B6AC", Offset = "0xB4B6AC", VA = "0xB4B6AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600145F")]
			[Address(RVA = "0xB4B728", Offset = "0xB4B728", VA = "0xB4B728")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public object balance
		{
			[Token(Token = "0x6001460")]
			[Address(RVA = "0xB4B7A8", Offset = "0xB4B7A8", VA = "0xB4B7A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001461")]
			[Address(RVA = "0xB4B824", Offset = "0xB4B824", VA = "0xB4B824")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public string itemPurchased
		{
			[Token(Token = "0x6001462")]
			[Address(RVA = "0xB4B8A4", Offset = "0xB4B8A4", VA = "0xB4B8A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001463")]
			[Address(RVA = "0xB4B920", Offset = "0xB4B920", VA = "0xB4B920")]
			set
			{
			}
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xB4B9A0", Offset = "0xB4B9A0", VA = "0xB4B9A0", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xB4BB08", Offset = "0xB4BB08", VA = "0xB4BB08", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xB44E44", Offset = "0xB44E44", VA = "0xB44E44")]
		public static ConsumableSpentPayload CreateInstance(string name, int amount, int balance, [Optional] string itemPurchased, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xB44FB8", Offset = "0xB44FB8", VA = "0xB44FB8")]
		public static ConsumableSpentPayload CreateInstance(string name, float amount, float balance, [Optional] string itemPurchased, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xB45144", Offset = "0xB45144", VA = "0xB45144")]
		public static ConsumableSpentPayload CreateInstance(string name, decimal amount, decimal balance, [Optional] string itemPurchased, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xB4BC74", Offset = "0xB4BC74", VA = "0xB4BC74")]
		private static ConsumableSpentPayload CreateInstance(string name, object amount, object balance, string itemPurchased, IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xB4BD9C", Offset = "0xB4BD9C", VA = "0xB4BD9C")]
		public ConsumableSpentPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCE64", Offset = "0x7CCE64")]
	public class CurrencyAcquiredPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_Type;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_Source;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string k_ParamKey_Name;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string k_ParamKey_Amount;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string k_ParamKey_Balance;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly string k_ParamKey_PurchaseId;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly string k_ParamKey_PurchaseName;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string k_ParamKey_PurchaseQty;

		[Token(Token = "0x170000D1")]
		public override string eventName
		{
			[Token(Token = "0x600146C")]
			[Address(RVA = "0xB4BECC", Offset = "0xB4BECC", VA = "0xB4BECC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		public AcquisitionType type
		{
			[Token(Token = "0x600146D")]
			[Address(RVA = "0xB4BF34", Offset = "0xB4BF34", VA = "0xB4BF34")]
			get
			{
				return default(AcquisitionType);
			}
			[Token(Token = "0x600146E")]
			[Address(RVA = "0xB4BFB0", Offset = "0xB4BFB0", VA = "0xB4BFB0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public string source
		{
			[Token(Token = "0x600146F")]
			[Address(RVA = "0xB4C050", Offset = "0xB4C050", VA = "0xB4C050")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001470")]
			[Address(RVA = "0xB4C0CC", Offset = "0xB4C0CC", VA = "0xB4C0CC")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public new string name
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0xB4C14C", Offset = "0xB4C14C", VA = "0xB4C14C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001472")]
			[Address(RVA = "0xB4C1C8", Offset = "0xB4C1C8", VA = "0xB4C1C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public object amount
		{
			[Token(Token = "0x6001473")]
			[Address(RVA = "0xB4C248", Offset = "0xB4C248", VA = "0xB4C248")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001474")]
			[Address(RVA = "0xB4C2C4", Offset = "0xB4C2C4", VA = "0xB4C2C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public object balance
		{
			[Token(Token = "0x6001475")]
			[Address(RVA = "0xB4C344", Offset = "0xB4C344", VA = "0xB4C344")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001476")]
			[Address(RVA = "0xB4C3C0", Offset = "0xB4C3C0", VA = "0xB4C3C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public string purchaseId
		{
			[Token(Token = "0x6001477")]
			[Address(RVA = "0xB4C440", Offset = "0xB4C440", VA = "0xB4C440")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001478")]
			[Address(RVA = "0xB4C4BC", Offset = "0xB4C4BC", VA = "0xB4C4BC")]
			set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public string purchaseName
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0xB4C53C", Offset = "0xB4C53C", VA = "0xB4C53C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600147A")]
			[Address(RVA = "0xB4C5B8", Offset = "0xB4C5B8", VA = "0xB4C5B8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public int purchaseQty
		{
			[Token(Token = "0x600147B")]
			[Address(RVA = "0xB4C638", Offset = "0xB4C638", VA = "0xB4C638")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600147C")]
			[Address(RVA = "0xB4C6B4", Offset = "0xB4C6B4", VA = "0xB4C6B4")]
			set
			{
			}
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xB4C754", Offset = "0xB4C754", VA = "0xB4C754", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xB4C93C", Offset = "0xB4C93C", VA = "0xB4C93C", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xB4CC00", Offset = "0xB4CC00", VA = "0xB4CC00")]
		public void SetSource(AcquisitionSource source)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xB45300", Offset = "0xB45300", VA = "0xB45300")]
		public static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, int amount, int balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xB454D8", Offset = "0xB454D8", VA = "0xB454D8")]
		public static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, int amount, int balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xB456AC", Offset = "0xB456AC", VA = "0xB456AC")]
		public static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, float amount, float balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xB4587C", Offset = "0xB4587C", VA = "0xB4587C")]
		public static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, float amount, float balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xB45AC0", Offset = "0xB45AC0", VA = "0xB45AC0")]
		public static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, decimal amount, decimal balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xB45D08", Offset = "0xB45D08", VA = "0xB45D08")]
		public static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, decimal amount, decimal balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xB4CCBC", Offset = "0xB4CCBC", VA = "0xB4CCBC")]
		private static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, object amount, object balance, string purchaseId, string purchaseName, int purchaseQty, IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xB4CEEC", Offset = "0xB4CEEC", VA = "0xB4CEEC")]
		public CurrencyAcquiredPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCEC4", Offset = "0x7CCEC4")]
	public class CutsceneSkipPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_CutsceneName;

		[Token(Token = "0x170000DA")]
		public override string eventName
		{
			[Token(Token = "0x6001489")]
			[Address(RVA = "0xB4D08C", Offset = "0xB4D08C", VA = "0xB4D08C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		public string CutsceneName
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0xB4D0F4", Offset = "0xB4D0F4", VA = "0xB4D0F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600148B")]
			[Address(RVA = "0xB4D170", Offset = "0xB4D170", VA = "0xB4D170")]
			set
			{
			}
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xB4D1F0", Offset = "0xB4D1F0", VA = "0xB4D1F0", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xB4D260", Offset = "0xB4D260", VA = "0xB4D260", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xB45E98", Offset = "0xB45E98", VA = "0xB45E98")]
		public new static CutsceneSkipPayload CreateInstance(string cutsceneName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xB4D314", Offset = "0xB4D314", VA = "0xB4D314")]
		public CutsceneSkipPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCF24", Offset = "0x7CCF24")]
	public class GameOverPayload : GamePayload
	{
		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000DC")]
		public override string eventName
		{
			[Token(Token = "0x6001491")]
			[Address(RVA = "0xB4D3F0", Offset = "0xB4D3F0", VA = "0xB4D3F0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xB45FE4", Offset = "0xB45FE4", VA = "0xB45FE4")]
		public new static GameOverPayload CreateInstance(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xB460EC", Offset = "0xB460EC", VA = "0xB460EC")]
		public static GameOverPayload CreateInstance(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xB4D458", Offset = "0xB4D458", VA = "0xB4D458")]
		public GameOverPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCF84", Offset = "0x7CCF84")]
	public class GameStartPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000DD")]
		public override string eventName
		{
			[Token(Token = "0x6001496")]
			[Address(RVA = "0xB4D91C", Offset = "0xB4D91C", VA = "0xB4D91C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xB4D984", Offset = "0xB4D984", VA = "0xB4D984")]
		public GameStartPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CCFE4", Offset = "0x7CCFE4")]
	public class ItemAcquiredPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_Type;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_Source;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string k_ParamKey_Name;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string k_ParamKey_ResourceType;

		[Token(Token = "0x170000DE")]
		public override string eventName
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0xB4DA44", Offset = "0xB4DA44", VA = "0xB4DA44", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		public AcquisitionType type
		{
			[Token(Token = "0x600149A")]
			[Address(RVA = "0xB4DAAC", Offset = "0xB4DAAC", VA = "0xB4DAAC")]
			get
			{
				return default(AcquisitionType);
			}
			[Token(Token = "0x600149B")]
			[Address(RVA = "0xB4DB28", Offset = "0xB4DB28", VA = "0xB4DB28")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public string source
		{
			[Token(Token = "0x600149C")]
			[Address(RVA = "0xB4DBC8", Offset = "0xB4DBC8", VA = "0xB4DBC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600149D")]
			[Address(RVA = "0xB4DC44", Offset = "0xB4DC44", VA = "0xB4DC44")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public new string name
		{
			[Token(Token = "0x600149E")]
			[Address(RVA = "0xB4DCC4", Offset = "0xB4DCC4", VA = "0xB4DCC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600149F")]
			[Address(RVA = "0xB4DD40", Offset = "0xB4DD40", VA = "0xB4DD40")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public string resourceType
		{
			[Token(Token = "0x60014A0")]
			[Address(RVA = "0xB4DDC0", Offset = "0xB4DDC0", VA = "0xB4DDC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0xB4DE3C", Offset = "0xB4DE3C", VA = "0xB4DE3C")]
			set
			{
			}
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xB4DEBC", Offset = "0xB4DEBC", VA = "0xB4DEBC", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xB4E024", Offset = "0xB4E024", VA = "0xB4E024", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xB46290", Offset = "0xB46290", VA = "0xB46290")]
		public static ItemAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, [Optional] string resourceType, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xB46400", Offset = "0xB46400", VA = "0xB46400")]
		public static ItemAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, [Optional] string resourceType, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xB4E1FC", Offset = "0xB4E1FC", VA = "0xB4E1FC")]
		public ItemAcquiredPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD044", Offset = "0x7CD044")]
	public class LevelCompletePayload : LevelPayload
	{
		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000E3")]
		public override string eventName
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xB4E32C", Offset = "0xB4E32C", VA = "0xB4E32C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xB465C8", Offset = "0xB465C8", VA = "0xB465C8")]
		public new static LevelCompletePayload CreateInstance(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xB466D0", Offset = "0xB466D0", VA = "0xB466D0")]
		public static LevelCompletePayload CreateInstance(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xB4E394", Offset = "0xB4E394", VA = "0xB4E394")]
		public LevelCompletePayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD0A4", Offset = "0x7CD0A4")]
	public class LevelFailPayload : LevelPayload
	{
		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000E4")]
		public override string eventName
		{
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0xB4E4B8", Offset = "0xB4E4B8", VA = "0xB4E4B8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xB467D8", Offset = "0xB467D8", VA = "0xB467D8")]
		public new static LevelFailPayload CreateInstance(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xB468E0", Offset = "0xB468E0", VA = "0xB468E0")]
		public static LevelFailPayload CreateInstance(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xB4E520", Offset = "0xB4E520", VA = "0xB4E520")]
		public LevelFailPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD104", Offset = "0x7CD104")]
	public class LevelQuitPayload : LevelPayload
	{
		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000E5")]
		public override string eventName
		{
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xB4EAA8", Offset = "0xB4EAA8", VA = "0xB4EAA8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xB469E8", Offset = "0xB469E8", VA = "0xB469E8")]
		public new static LevelQuitPayload CreateInstance(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xB46AF0", Offset = "0xB46AF0", VA = "0xB46AF0")]
		public static LevelQuitPayload CreateInstance(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xB4EB10", Offset = "0xB4EB10", VA = "0xB4EB10")]
		public LevelQuitPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD164", Offset = "0x7CD164")]
	public class LevelSkipPayload : LevelPayload
	{
		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000E6")]
		public override string eventName
		{
			[Token(Token = "0x60014B7")]
			[Address(RVA = "0xB4EBD0", Offset = "0xB4EBD0", VA = "0xB4EBD0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xB46BF8", Offset = "0xB46BF8", VA = "0xB46BF8")]
		public new static LevelSkipPayload CreateInstance(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xB46D00", Offset = "0xB46D00", VA = "0xB46D00")]
		public static LevelSkipPayload CreateInstance(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xB4EC38", Offset = "0xB4EC38", VA = "0xB4EC38")]
		public LevelSkipPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD1C4", Offset = "0x7CD1C4")]
	public class LevelStartPayload : LevelPayload
	{
		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000E7")]
		public override string eventName
		{
			[Token(Token = "0x60014BC")]
			[Address(RVA = "0xB4ECF8", Offset = "0xB4ECF8", VA = "0xB4ECF8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xB46E08", Offset = "0xB46E08", VA = "0xB46E08")]
		public new static LevelStartPayload CreateInstance(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xB46F10", Offset = "0xB46F10", VA = "0xB46F10")]
		public static LevelStartPayload CreateInstance(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xB4ED60", Offset = "0xB4ED60", VA = "0xB4ED60")]
		public LevelStartPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD224", Offset = "0x7CD224")]
	public class LevelUpPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string k_ParamKey_OldLevelIndex;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string k_ParamKey_NewLevelIndex;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string k_ParamKey_OldLevelName;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string k_ParamKey_NewLevelName;

		[Token(Token = "0x170000E8")]
		public override string eventName
		{
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0xB4EE20", Offset = "0xB4EE20", VA = "0xB4EE20", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		public int oldLevelIndex
		{
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0xB4EE88", Offset = "0xB4EE88", VA = "0xB4EE88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0xB4EF04", Offset = "0xB4EF04", VA = "0xB4EF04")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public int newLevelIndex
		{
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0xB4EFA4", Offset = "0xB4EFA4", VA = "0xB4EFA4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014C5")]
			[Address(RVA = "0xB4F020", Offset = "0xB4F020", VA = "0xB4F020")]
			set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public string oldLevelName
		{
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0xB4F0C0", Offset = "0xB4F0C0", VA = "0xB4F0C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0xB4F13C", Offset = "0xB4F13C", VA = "0xB4F13C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public string newLevelName
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0xB4F1BC", Offset = "0xB4F1BC", VA = "0xB4F1BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0xB4F238", Offset = "0xB4F238", VA = "0xB4F238")]
			set
			{
			}
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xB4F2B8", Offset = "0xB4F2B8", VA = "0xB4F2B8", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xB4F620", Offset = "0xB4F620", VA = "0xB4F620", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xB47020", Offset = "0xB47020", VA = "0xB47020")]
		public static LevelUpPayload CreateInstance(string oldLevelName, string newLevelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xB47190", Offset = "0xB47190", VA = "0xB47190")]
		public static LevelUpPayload CreateInstance(int oldLevelIndex, int newLevelIndex, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xB472B4", Offset = "0xB472B4", VA = "0xB472B4")]
		public static LevelUpPayload CreateInstance(int oldLevelIndex, int newLevelIndex, string oldLevelName, string newLevelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xB4F798", Offset = "0xB4F798", VA = "0xB4F798")]
		public LevelUpPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000289")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD284", Offset = "0x7CD284")]
	public class PostAdActionPayload : AdPayload
	{
		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000ED")]
		public override string eventName
		{
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0xB4F8C8", Offset = "0xB4F8C8", VA = "0xB4F8C8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xB474B4", Offset = "0xB474B4", VA = "0xB474B4")]
		public static PostAdActionPayload CreateInstance(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xB475E4", Offset = "0xB475E4", VA = "0xB475E4")]
		public static PostAdActionPayload CreateInstance(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xB4F930", Offset = "0xB4F930", VA = "0xB4F930")]
		public PostAdActionPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD2E4", Offset = "0x7CD2E4")]
	public class PostInstallActionPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_ActionId;

		[Token(Token = "0x170000EE")]
		public override string eventName
		{
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0xB4F9F0", Offset = "0xB4F9F0", VA = "0xB4F9F0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		public string actionId
		{
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0xB4FA58", Offset = "0xB4FA58", VA = "0xB4FA58")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0xB4FAD4", Offset = "0xB4FAD4", VA = "0xB4FAD4")]
			set
			{
			}
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xB4FB54", Offset = "0xB4FB54", VA = "0xB4FB54", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xB476FC", Offset = "0xB476FC", VA = "0xB476FC")]
		public new static PostInstallActionPayload CreateInstance([Optional] string actionId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xB4FC08", Offset = "0xB4FC08", VA = "0xB4FC08")]
		public PostInstallActionPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD344", Offset = "0x7CD344")]
	public class PushNotificationClickPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string k_ParamKey_MessageId;

		[Token(Token = "0x170000F0")]
		public override string eventName
		{
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0xB4FCE4", Offset = "0xB4FCE4", VA = "0xB4FCE4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		public string messageId
		{
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0xB4FD4C", Offset = "0xB4FD4C", VA = "0xB4FD4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0xB4FDC8", Offset = "0xB4FDC8", VA = "0xB4FDC8")]
			set
			{
			}
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xB4FE48", Offset = "0xB4FE48", VA = "0xB4FE48", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xB4FEB8", Offset = "0xB4FEB8", VA = "0xB4FEB8", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xB47848", Offset = "0xB47848", VA = "0xB47848")]
		public new static PushNotificationClickPayload CreateInstance(string messageId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xB4FF6C", Offset = "0xB4FF6C", VA = "0xB4FF6C")]
		public PushNotificationClickPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD3A4", Offset = "0x7CD3A4")]
	public class PushNotificationEnablePayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000F2")]
		public override string eventName
		{
			[Token(Token = "0x60014E5")]
			[Address(RVA = "0xB50048", Offset = "0xB50048", VA = "0xB50048", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xB500B0", Offset = "0xB500B0", VA = "0xB500B0")]
		public PushNotificationEnablePayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD404", Offset = "0x7CD404")]
	public class ScreenVisitPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_ScreenName;

		[Token(Token = "0x170000F3")]
		public override string eventName
		{
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0xB50178", Offset = "0xB50178", VA = "0xB50178", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		public string screenType
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0xB501E0", Offset = "0xB501E0", VA = "0xB501E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0xB5025C", Offset = "0xB5025C", VA = "0xB5025C")]
			set
			{
			}
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xB502DC", Offset = "0xB502DC", VA = "0xB502DC")]
		public void SetScreenType(ScreenName screenType)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xB5037C", Offset = "0xB5037C", VA = "0xB5037C", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xB503EC", Offset = "0xB503EC", VA = "0xB503EC", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xB47A10", Offset = "0xB47A10", VA = "0xB47A10")]
		public static ScreenVisitPayload CreateInstance(ScreenName screenName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xB47B40", Offset = "0xB47B40", VA = "0xB47B40")]
		public new static ScreenVisitPayload CreateInstance(string screenName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xB504BC", Offset = "0xB504BC", VA = "0xB504BC")]
		public ScreenVisitPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD464", Offset = "0x7CD464")]
	public class SocialSharePayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_ShareType;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_SocialNetwork;

		[Token(Token = "0x170000F5")]
		public override string eventName
		{
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0xB50598", Offset = "0xB50598", VA = "0xB50598", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		public string shareType
		{
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0xB50600", Offset = "0xB50600", VA = "0xB50600")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0xB5067C", Offset = "0xB5067C", VA = "0xB5067C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public string socialNetwork
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0xB506FC", Offset = "0xB506FC", VA = "0xB506FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0xB50778", Offset = "0xB50778", VA = "0xB50778")]
			set
			{
			}
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xB507F8", Offset = "0xB507F8", VA = "0xB507F8")]
		public void SetShareType(ShareType shareType)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xB508B4", Offset = "0xB508B4", VA = "0xB508B4")]
		public void SetSocialNetwork(SocialNetwork socialNetwork)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xB50970", Offset = "0xB50970", VA = "0xB50970", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xB50A98", Offset = "0xB50A98", VA = "0xB50A98", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xB47C94", Offset = "0xB47C94", VA = "0xB47C94")]
		public static SocialSharePayload CreateInstance(ShareType shareType, SocialNetwork socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xB47DEC", Offset = "0xB47DEC", VA = "0xB47DEC")]
		public static SocialSharePayload CreateInstance(ShareType shareType, string socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xB47F2C", Offset = "0xB47F2C", VA = "0xB47F2C")]
		public static SocialSharePayload CreateInstance(string shareType, SocialNetwork socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xB4806C", Offset = "0xB4806C", VA = "0xB4806C")]
		public static SocialSharePayload CreateInstance(string shareType, string socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xB50BB8", Offset = "0xB50BB8", VA = "0xB50BB8")]
		public SocialSharePayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD4C4", Offset = "0x7CD4C4")]
	public class StoreItemClickPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_StoreType;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_ItemId;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string k_ParamKey_ItemName;

		[Token(Token = "0x170000F8")]
		public override string eventName
		{
			[Token(Token = "0x6001501")]
			[Address(RVA = "0xB50CB0", Offset = "0xB50CB0", VA = "0xB50CB0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		public string itemId
		{
			[Token(Token = "0x6001502")]
			[Address(RVA = "0xB50D18", Offset = "0xB50D18", VA = "0xB50D18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001503")]
			[Address(RVA = "0xB50D94", Offset = "0xB50D94", VA = "0xB50D94")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public string itemName
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0xB50E14", Offset = "0xB50E14", VA = "0xB50E14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001505")]
			[Address(RVA = "0xB50E90", Offset = "0xB50E90", VA = "0xB50E90")]
			set
			{
			}
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xB50F10", Offset = "0xB50F10", VA = "0xB50F10", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xB51048", Offset = "0xB51048", VA = "0xB51048", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xB481EC", Offset = "0xB481EC", VA = "0xB481EC")]
		public static StoreItemClickPayload CreateInstance(StoreType storeType, string itemId, [Optional] string itemName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xB511F4", Offset = "0xB511F4", VA = "0xB511F4")]
		public StoreItemClickPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD524", Offset = "0x7CD524")]
	public class StoreOpenedPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_StoreType;

		[Token(Token = "0x170000FB")]
		public override string eventName
		{
			[Token(Token = "0x600150B")]
			[Address(RVA = "0xB51308", Offset = "0xB51308", VA = "0xB51308", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		public StoreType type
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0xB51370", Offset = "0xB51370", VA = "0xB51370")]
			get
			{
				return default(StoreType);
			}
			[Token(Token = "0x600150D")]
			[Address(RVA = "0xB513EC", Offset = "0xB513EC", VA = "0xB513EC")]
			set
			{
			}
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xB5148C", Offset = "0xB5148C", VA = "0xB5148C", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xB514FC", Offset = "0xB514FC", VA = "0xB514FC", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xB48390", Offset = "0xB48390", VA = "0xB48390")]
		public static StoreOpenedPayload CreateInstance(StoreType storeType, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xB5160C", Offset = "0xB5160C", VA = "0xB5160C")]
		public StoreOpenedPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD584", Offset = "0x7CD584")]
	public class TutorialCompletePayload : TutorialPayload
	{
		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000FD")]
		public override string eventName
		{
			[Token(Token = "0x6001513")]
			[Address(RVA = "0xB516E8", Offset = "0xB516E8", VA = "0xB516E8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xB484F4", Offset = "0xB484F4", VA = "0xB484F4")]
		public new static TutorialCompletePayload CreateInstance([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xB51750", Offset = "0xB51750", VA = "0xB51750")]
		public TutorialCompletePayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD5E4", Offset = "0x7CD5E4")]
	public class TutorialSkipPayload : TutorialPayload
	{
		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000FE")]
		public override string eventName
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0xB51A80", Offset = "0xB51A80", VA = "0xB51A80", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xB485F4", Offset = "0xB485F4", VA = "0xB485F4")]
		public new static TutorialSkipPayload CreateInstance([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xB51AE8", Offset = "0xB51AE8", VA = "0xB51AE8")]
		public TutorialSkipPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD644", Offset = "0x7CD644")]
	public class TutorialStartPayload : TutorialPayload
	{
		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000FF")]
		public override string eventName
		{
			[Token(Token = "0x600151B")]
			[Address(RVA = "0xB51BA8", Offset = "0xB51BA8", VA = "0xB51BA8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xB486F4", Offset = "0xB486F4", VA = "0xB486F4")]
		public new static TutorialStartPayload CreateInstance([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xB51C10", Offset = "0xB51C10", VA = "0xB51C10")]
		public TutorialStartPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD6A4", Offset = "0x7CD6A4")]
	public class TutorialStepPayload : TutorialPayload
	{
		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_StepIndex;

		[Token(Token = "0x17000100")]
		public override string eventName
		{
			[Token(Token = "0x600151F")]
			[Address(RVA = "0xB51CD0", Offset = "0xB51CD0", VA = "0xB51CD0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		public int stepIndex
		{
			[Token(Token = "0x6001520")]
			[Address(RVA = "0xB51D38", Offset = "0xB51D38", VA = "0xB51D38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001521")]
			[Address(RVA = "0xB51DB4", Offset = "0xB51DB4", VA = "0xB51DB4")]
			set
			{
			}
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xB51E54", Offset = "0xB51E54", VA = "0xB51E54", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xB51EC4", Offset = "0xB51EC4", VA = "0xB51EC4", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xB487FC", Offset = "0xB487FC", VA = "0xB487FC")]
		public static TutorialStepPayload CreateInstance(int stepIndex, [Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xB51F88", Offset = "0xB51F88", VA = "0xB51F88")]
		public TutorialStepPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7CD704", Offset = "0x7CD704")]
	public class UserSignupPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_AuthorizationNetwork;

		[Token(Token = "0x17000102")]
		public override string eventName
		{
			[Token(Token = "0x6001527")]
			[Address(RVA = "0xB52064", Offset = "0xB52064", VA = "0xB52064", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		public string authorizationNetwork
		{
			[Token(Token = "0x6001528")]
			[Address(RVA = "0xB520CC", Offset = "0xB520CC", VA = "0xB520CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001529")]
			[Address(RVA = "0xB52148", Offset = "0xB52148", VA = "0xB52148")]
			set
			{
			}
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xB521C8", Offset = "0xB521C8", VA = "0xB521C8")]
		public void SetAuthorizationNetwork(AuthorizationNetwork authorizationNetwork)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xB52284", Offset = "0xB52284", VA = "0xB52284", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xB522F4", Offset = "0xB522F4", VA = "0xB522F4", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xB48AC0", Offset = "0xB48AC0", VA = "0xB48AC0")]
		public static UserSignupPayload CreateInstance(AuthorizationNetwork authorizationNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xB48974", Offset = "0xB48974", VA = "0xB48974")]
		public new static UserSignupPayload CreateInstance(string authorizationNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xB523C4", Offset = "0xB523C4", VA = "0xB523C4")]
		public UserSignupPayload()
		{
		}
	}
}
namespace UnityEngine.Experiemntal.Rendering.Universal
{
	[Token(Token = "0x2000296")]
	public class Blit : ScriptableRendererFeature
	{
		[Serializable]
		[Token(Token = "0x20003A3")]
		public class BlitSettings
		{
			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderPassEvent Event;

			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material blitMaterial;

			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int blitMaterialPassIndex;

			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Target destination;

			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string textureId;

			[Token(Token = "0x6001999")]
			[Address(RVA = "0xB5294C", Offset = "0xB5294C", VA = "0xB5294C")]
			public BlitSettings()
			{
			}
		}

		[Token(Token = "0x20003A4")]
		public enum Target
		{
			[Token(Token = "0x400148F")]
			Color,
			[Token(Token = "0x4001490")]
			Texture
		}

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlitSettings settings;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTargetHandle m_RenderTextureHandle;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BlitPass blitPass;

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xB524A0", Offset = "0xB524A0", VA = "0xB524A0", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xB526B8", Offset = "0xB526B8", VA = "0xB526B8", Slot = "5")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xB528DC", Offset = "0xB528DC", VA = "0xB528DC")]
		public Blit()
		{
		}
	}
	[Token(Token = "0x2000297")]
	internal class BlitPass : ScriptableRenderPass
	{
		[Token(Token = "0x20003A5")]
		public enum RenderTarget
		{
			[Token(Token = "0x4001492")]
			Color,
			[Token(Token = "0x4001493")]
			RenderTexture
		}

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material blitMaterial;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int blitShaderPassIndex;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D56E0", Offset = "0x7D56E0")]
		private FilterMode <filterMode>k__BackingField;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D56F0", Offset = "0x7D56F0")]
		private RenderTargetIdentifier <source>k__BackingField;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D5700", Offset = "0x7D5700")]
		private RenderTargetHandle <destination>k__BackingField;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private RenderTargetHandle m_TemporaryColorTexture;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string m_ProfilerTag;

		[Token(Token = "0x17000104")]
		public FilterMode filterMode
		{
			[Token(Token = "0x6001534")]
			[Address(RVA = "0xB529BC", Offset = "0xB529BC", VA = "0xB529BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8E80", Offset = "0x7D8E80")]
			get
			{
				return default(FilterMode);
			}
			[Token(Token = "0x6001535")]
			[Address(RVA = "0xB529C4", Offset = "0xB529C4", VA = "0xB529C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8E90", Offset = "0x7D8E90")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		private RenderTargetIdentifier source
		{
			[Token(Token = "0x6001536")]
			[Address(RVA = "0xB529CC", Offset = "0xB529CC", VA = "0xB529CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8EA0", Offset = "0x7D8EA0")]
			get
			{
				return default(RenderTargetIdentifier);
			}
			[Token(Token = "0x6001537")]
			[Address(RVA = "0xB529E4", Offset = "0xB529E4", VA = "0xB529E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8EB0", Offset = "0x7D8EB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		private RenderTargetHandle destination
		{
			[Token(Token = "0x6001538")]
			[Address(RVA = "0xB529FC", Offset = "0xB529FC", VA = "0xB529FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8EC0", Offset = "0x7D8EC0")]
			get
			{
				return default(RenderTargetHandle);
			}
			[Token(Token = "0x6001539")]
			[Address(RVA = "0xB52A04", Offset = "0xB52A04", VA = "0xB52A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8ED0", Offset = "0x7D8ED0")]
			set
			{
			}
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xB52610", Offset = "0xB52610", VA = "0xB52610")]
		public BlitPass(RenderPassEvent renderPassEvent, Material blitMaterial, int blitShaderPassIndex, string tag)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xB528C0", Offset = "0xB528C0", VA = "0xB528C0")]
		public void Setup(RenderTargetIdentifier source, RenderTargetHandle destination)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xB52A0C", Offset = "0xB52A0C", VA = "0xB52A0C", Slot = "7")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xB52C0C", Offset = "0xB52C0C", VA = "0xB52C0C", Slot = "5")]
		public override void FrameCleanup(CommandBuffer cmd)
		{
		}
	}
}
namespace UnityEngine.UI.Extensions
{
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7CD764", Offset = "0x7CD764")]
	public sealed class NicerOutline : BaseMeshEffect
	{
		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_EffectColor;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2 m_EffectDistance;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_UseGraphicAlpha;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool m_UseFixedDistance;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<UIVertex> verts;

		[Token(Token = "0x17000107")]
		public Color effectColor
		{
			[Token(Token = "0x600153E")]
			[Address(RVA = "0xB55094", Offset = "0xB55094", VA = "0xB55094")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600153F")]
			[Address(RVA = "0xB550A0", Offset = "0xB550A0", VA = "0xB550A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public Vector2 effectDistance
		{
			[Token(Token = "0x6001540")]
			[Address(RVA = "0xB55184", Offset = "0xB55184", VA = "0xB55184")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001541")]
			[Address(RVA = "0xB5518C", Offset = "0xB5518C", VA = "0xB5518C")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public bool useFixedDistance
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0xB552CC", Offset = "0xB552CC", VA = "0xB552CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001543")]
			[Address(RVA = "0xB552D4", Offset = "0xB552D4", VA = "0xB552D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public bool useGraphicAlpha
		{
			[Token(Token = "0x6001544")]
			[Address(RVA = "0xB552E0", Offset = "0xB552E0", VA = "0xB552E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001545")]
			[Address(RVA = "0xB552E8", Offset = "0xB552E8", VA = "0xB552E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xB553B4", Offset = "0xB553B4", VA = "0xB553B4")]
		private void ApplyShadowZeroAlloc(List<UIVertex> verts, Color32 color, int start, int end, float x, float y)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xB55614", Offset = "0xB55614", VA = "0xB55614")]
		private void ApplyShadow(List<UIVertex> verts, Color32 color, int start, int end, float x, float y)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xB556E8", Offset = "0xB556E8", VA = "0xB556E8", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xB55A94", Offset = "0xB55A94", VA = "0xB55A94")]
		public NicerOutline()
		{
		}
	}
}
namespace UnityEngine.Rendering.Universal
{
	[Serializable]
	[Token(Token = "0x2000299")]
	[ReloadGroup]
	[ExcludeFromPreset]
	[AttributeAttribute(Name = "MovedFromAttribute", RVA = "0x7CD79C", Offset = "0x7CD79C")]
	public class DelMarRendererData : ScriptableRendererData
	{
		[Serializable]
		[Token(Token = "0x20003A6")]
		[ReloadGroup]
		public sealed class ShaderResources
		{
			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "ReloadAttribute", RVA = "0x7D61AC", Offset = "0x7D61AC")]
			public Shader blitPS;

			[Token(Token = "0x600199A")]
			[Address(RVA = "0xB53B10", Offset = "0xB53B10", VA = "0xB53B10")]
			public ShaderResources()
			{
			}
		}

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ShaderResources shaders;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ReloadAttribute", RVA = "0x7D5750", Offset = "0x7D5750")]
		public PostProcessData postProcessData;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material uberMaterial;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material bloomMaterial;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LayerMask m_OpaqueLayerMask;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private LayerMask m_TransparentLayerMask;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StencilStateData m_DefaultStencilState;

		[Token(Token = "0x1700010B")]
		public Material materialToBlit_Uber
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0xB53894", Offset = "0xB53894", VA = "0xB53894")]
			get
			{
				return null;
			}
			[Token(Token = "0x600154C")]
			[Address(RVA = "0xB5389C", Offset = "0xB5389C", VA = "0xB5389C")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public Material materialToBlit_Bloom
		{
			[Token(Token = "0x600154D")]
			[Address(RVA = "0xB538D0", Offset = "0xB538D0", VA = "0xB538D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600154E")]
			[Address(RVA = "0xB538D8", Offset = "0xB538D8", VA = "0xB538D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public LayerMask opaqueLayerMask
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0xB5390C", Offset = "0xB5390C", VA = "0xB5390C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001550")]
			[Address(RVA = "0xB53914", Offset = "0xB53914", VA = "0xB53914")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public LayerMask transparentLayerMask
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0xB53940", Offset = "0xB53940", VA = "0xB53940")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001552")]
			[Address(RVA = "0xB53948", Offset = "0xB53948", VA = "0xB53948")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public StencilStateData defaultStencilState
		{
			[Token(Token = "0x6001553")]
			[Address(RVA = "0xB53974", Offset = "0xB53974", VA = "0xB53974")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001554")]
			[Address(RVA = "0xB5397C", Offset = "0xB5397C", VA = "0xB5397C")]
			set
			{
			}
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xB53834", Offset = "0xB53834", VA = "0xB53834", Slot = "4")]
		protected override ScriptableRenderer Create()
		{
			return null;
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xB539B0", Offset = "0xB539B0", VA = "0xB539B0", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xB539B8", Offset = "0xB539B8", VA = "0xB539B8")]
		private float ValidateRenderScale(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xB53A7C", Offset = "0xB53A7C", VA = "0xB53A7C")]
		public DelMarRendererData()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public sealed class DelMarRenderer : ScriptableRenderer
	{
		[Token(Token = "0x4001074")]
		private const int k_DepthStencilBufferBits = 32;

		[Token(Token = "0x4001075")]
		private const string k_CreateCameraTextures = "Create Camera Texture";

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private DrawObjectsPass m_RenderOpaqueForwardPass;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private DrawSkyboxPass m_DrawSkyboxPass;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private DrawObjectsPass m_RenderTransparentForwardPass;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTargetHandle m_ActiveCameraColorAttachment;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private RenderTargetHandle m_ActiveCameraDepthAttachment;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTargetHandle m_CameraColorAttachment;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private RenderTargetHandle m_ColorGradingLut;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public DelMarPostProcessingPass m_DelMarPostProcessingPass;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private StencilState m_DefaultStencilState;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material m_UberMaterial;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material m_BloomMaterial;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ForwardLights m_ForwardLights;

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xB52CBC", Offset = "0xB52CBC", VA = "0xB52CBC")]
		public DelMarRenderer(DelMarRendererData data)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xB531C0", Offset = "0xB531C0", VA = "0xB531C0", Slot = "6")]
		public override void Setup(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xB536D4", Offset = "0xB536D4", VA = "0xB536D4", Slot = "7")]
		public override void SetupLights(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xB536F0", Offset = "0xB536F0", VA = "0xB536F0", Slot = "9")]
		public override void FinishRendering(CommandBuffer cmd)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xB534A8", Offset = "0xB534A8", VA = "0xB534A8")]
		private void CreateCameraRenderTarget(ScriptableRenderContext context, RenderTextureDescriptor descriptor)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xB5367C", Offset = "0xB5367C", VA = "0xB5367C")]
		private void SetupBackbufferFormat(int msaaSamples, bool stereo)
		{
		}
	}
}
namespace UnityEngine.Rendering.Universal.Internal
{
	[Token(Token = "0x200029B")]
	public class DelMarPostProcessingPass : ScriptableRenderPass
	{
		[Token(Token = "0x20003A7")]
		private static class ShaderConstants
		{
			[Token(Token = "0x4001495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int _MainTexLowMip;

			[Token(Token = "0x4001496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static readonly int _Bloom_Params;

			[Token(Token = "0x4001497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly int _Bloom_Intenisty;

			[Token(Token = "0x4001498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static readonly int _Bloom_RGBM;

			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static readonly int _Bloom_Texture;

			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static readonly int _TempNoMSAATex;

			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static readonly int _FullscreenProjMat;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public static readonly int _MSAACopyString;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static readonly int _BloomFilter;

			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static int[] _BloomMipUp;

			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static int[] _BloomMipDown;
		}

		[StructLayout(3)]
		[Token(Token = "0x20003A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE560", Offset = "0x7CE560")]
		private struct <>c__DisplayClass31_0
		{
			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int source;
		}

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private RenderTextureDescriptor m_Descriptor;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTextureDescriptor m_FinalDescriptor;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private RenderTargetHandle m_Source;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private RenderTargetHandle m_Destination;

		[Token(Token = "0x4001086")]
		private const string k_RenderPostProcessingTag = "Render PostProcessing Effects";

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private PostProcessData m_Data;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Bloom m_Bloom;

		[Token(Token = "0x4001089")]
		private const int k_MaxPyramidSize = 8;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly GraphicsFormat m_DefaultHDRFormat;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool m_ResetHistory;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		private bool m_IsStereo;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Material m_BloomMaterial;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material m_BlitMaterial;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int tw;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int th;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int maxSize;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int iterations;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int mipCount;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float threshold;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float thresholdKnee;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float thresholdNumerator;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float scatter;

		[Token(Token = "0x4001098")]
		private const float bloomRenderSizeScalar = 0.5f;

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xB52FA0", Offset = "0xB52FA0", VA = "0xB52FA0")]
		public DelMarPostProcessingPass(RenderPassEvent evt, PostProcessData data, [Optional] Material blitMaterial, [Optional] Material bloomMaterial)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xB53688", Offset = "0xB53688", VA = "0xB53688")]
		public void Setup(in RenderTextureDescriptor baseDescriptor, in RenderTargetHandle source, in RenderTargetHandle destination)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xB53B18", Offset = "0xB53B18", VA = "0xB53B18", Slot = "4")]
		public override void Configure(CommandBuffer cmd, RenderTextureDescriptor cameraTextureDescriptor)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xB53C48", Offset = "0xB53C48", VA = "0xB53C48")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xB53C54", Offset = "0xB53C54", VA = "0xB53C54")]
		public bool CanRunOnTile()
		{
			return default(bool);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xB53C5C", Offset = "0xB53C5C", VA = "0xB53C5C", Slot = "7")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xB54354", Offset = "0xB54354", VA = "0xB54354")]
		private RenderTextureDescriptor GetStereoCompatibleDescriptor()
		{
			return default(RenderTextureDescriptor);
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xB54400", Offset = "0xB54400", VA = "0xB54400")]
		private RenderTextureDescriptor GetStereoCompatibleDescriptor(int width, int height, GraphicsFormat format, int depthBufferBits = 0)
		{
			return default(RenderTextureDescriptor);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xB53D6C", Offset = "0xB53D6C", VA = "0xB53D6C")]
		private void Render(CommandBuffer cmd, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xB54C80", Offset = "0xB54C80", VA = "0xB54C80")]
		private BuiltinRenderTextureType BlitDstDiscardContent(CommandBuffer cmd, RenderTargetIdentifier rt)
		{
			return default(BuiltinRenderTextureType);
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xB54D20", Offset = "0xB54D20", VA = "0xB54D20")]
		private void ConfigureBloom()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xB54498", Offset = "0xB54498", VA = "0xB54498")]
		private void SetupBloom(CommandBuffer cmd, int source)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xB54F28", Offset = "0xB54F28", VA = "0xB54F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D8EE0", Offset = "0x7D8EE0")]
		internal static int <Render>g__GetSource|31_0(ref <>c__DisplayClass31_0 P_0)
		{
			return default(int);
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x200029C")]
	public enum FaceType : uint
	{
		[Token(Token = "0x400109A")]
		TRIANGLES,
		[Token(Token = "0x400109B")]
		QUADS
	}
	[Token(Token = "0x200029D")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x400109D")]
		ABSORPTION,
		[Token(Token = "0x400109E")]
		TRANSMISSION,
		[Token(Token = "0x400109F")]
		SCATTERING
	}
	[Token(Token = "0x200029E")]
	public struct MeshGroup
	{
		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace OVR
{
	[Token(Token = "0x200029F")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x7D57DC", Offset = "0x7D57DC")]
		public SoundFXRef testSound1;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xAF3F80", Offset = "0xAF3F80", VA = "0xAF3F80")]
		private void Start()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xAF3F84", Offset = "0xAF3F84", VA = "0xAF3F84")]
		private void Update()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xAF4044", Offset = "0xAF4044", VA = "0xAF4044")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5828", Offset = "0x7D5828")]
		public bool autoRetrigger;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7D5860", Offset = "0x7D5860")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5884", Offset = "0x7D5884")]
		public Transform[] playPositions;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x1169068", Offset = "0x1169068", VA = "0x1169068")]
		private void Awake()
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x1169218", Offset = "0x1169218", VA = "0x1169218")]
		private void Update()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x11693F8", Offset = "0x11693F8", VA = "0x11693F8")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x1169278", Offset = "0x1169278", VA = "0x1169278")]
		public void Play()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x11694BC", Offset = "0x11694BC", VA = "0x11694BC")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x1169634", Offset = "0x1169634", VA = "0x1169634")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public enum PreloadSounds
	{
		[Token(Token = "0x40010B1")]
		Default,
		[Token(Token = "0x40010B2")]
		Preload,
		[Token(Token = "0x40010B3")]
		ManualPreload
	}
	[Token(Token = "0x20002A2")]
	public enum Fade
	{
		[Token(Token = "0x40010B5")]
		In,
		[Token(Token = "0x40010B6")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20002A3")]
	public class SoundGroup
	{
		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D58BC", Offset = "0x7D58BC")]
		public int maxPlayingSounds;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xAF3E10", Offset = "0xAF3E10", VA = "0xAF3E10")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xAF3EC4", Offset = "0xAF3EC4", VA = "0xAF3EC4")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xAF1960", Offset = "0xAF1960", VA = "0xAF1960")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xAF1CFC", Offset = "0xAF1CFC", VA = "0xAF1CFC")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xAF337C", Offset = "0xAF337C", VA = "0xAF337C")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002A4")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20003A9")]
		public enum Fade
		{
			[Token(Token = "0x40014A2")]
			In,
			[Token(Token = "0x40014A3")]
			Out
		}

		[Token(Token = "0x20003AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE570", Offset = "0x7CE570")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x40014A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x600199C")]
			[Address(RVA = "0xAF1368", Offset = "0xAF1368", VA = "0xAF1368")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x600199D")]
			[Address(RVA = "0xAF1370", Offset = "0xAF1370", VA = "0xAF1370")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE580", Offset = "0x7CE580")]
		private sealed class <>c
		{
			[Token(Token = "0x40014A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x600199F")]
			[Address(RVA = "0xAF12D0", Offset = "0xAF12D0", VA = "0xAF12D0")]
			public <>c()
			{
			}

			[Token(Token = "0x60019A0")]
			[Address(RVA = "0xAF12D8", Offset = "0xAF12D8", VA = "0xAF12D8")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D58E8", Offset = "0x7D58E8")]
		public bool makePersistent;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5920", Offset = "0x7D5920")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5958", Offset = "0x7D5958")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5990", Offset = "0x7D5990")]
		public AudioMixer audioMixer;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D59C8", Offset = "0x7D59C8")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5A00", Offset = "0x7D5A00")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5A38", Offset = "0x7D5A38")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5A70", Offset = "0x7D5A70")]
		public bool verboseLogging;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5AA8", Offset = "0x7D5AA8")]
		public int maxSoundEmitters;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5AE0", Offset = "0x7D5AE0")]
		public float volumeSoundFX;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5B18", Offset = "0x7D5B18")]
		public float soundFxFadeSecs;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000110")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x116970C", Offset = "0x116970C", VA = "0x116970C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000111")]
		public static AudioManager Instance
		{
			[Token(Token = "0x600157A")]
			[Address(RVA = "0x11697EC", Offset = "0x11697EC", VA = "0x11697EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		public static float NearFallOff
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0x1169854", Offset = "0x1169854", VA = "0x1169854")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000113")]
		public static float FarFallOff
		{
			[Token(Token = "0x600157C")]
			[Address(RVA = "0x11698C8", Offset = "0x11698C8", VA = "0x11698C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000114")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0x116993C", Offset = "0x116993C", VA = "0x116993C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x600157E")]
			[Address(RVA = "0x11699B0", Offset = "0x11699B0", VA = "0x11699B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x600157F")]
			[Address(RVA = "0x1169A24", Offset = "0x1169A24", VA = "0x1169A24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x600158A")]
			[Address(RVA = "0x116B8D4", Offset = "0x116B8D4", VA = "0x116B8D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x1169A98", Offset = "0x1169A98", VA = "0x1169A98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x1169CCC", Offset = "0x1169CCC", VA = "0x1169CCC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x1169A9C", Offset = "0x1169A9C", VA = "0x1169A9C")]
		private void Init()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x116A9F0", Offset = "0x116A9F0", VA = "0x116A9F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x1169E24", Offset = "0x1169E24", VA = "0x1169E24")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x116B070", Offset = "0x116B070", VA = "0x116B070")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x116B1F0", Offset = "0x116B1F0", VA = "0x116B1F0")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x116B38C", Offset = "0x116B38C", VA = "0x116B38C")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x116B48C", Offset = "0x116B48C", VA = "0x116B48C")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x116B51C", Offset = "0x116B51C", VA = "0x116B51C")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x116A2D8", Offset = "0x116A2D8", VA = "0x116A2D8")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x116A9F4", Offset = "0x116A9F4", VA = "0x116A9F4")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x116BA08", Offset = "0x116BA08", VA = "0x116BA08")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x116BB0C", Offset = "0x116BB0C", VA = "0x116BB0C")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x116BC14", Offset = "0x116BC14", VA = "0x116BC14")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x116B93C", Offset = "0x116B93C", VA = "0x116B93C")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x116BD48", Offset = "0x116BD48", VA = "0x116BD48")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x116BE04", Offset = "0x116BE04", VA = "0x116BE04")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x116BF24", Offset = "0x116BF24", VA = "0x116BF24")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x1169408", Offset = "0x1169408", VA = "0x1169408")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x1169580", Offset = "0x1169580", VA = "0x1169580")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x116BFE0", Offset = "0x116BFE0", VA = "0x116BFE0")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x116C0AC", Offset = "0x116C0AC", VA = "0x116C0AC")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x116C140", Offset = "0x116C140", VA = "0x116C140")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x116C204", Offset = "0x116C204", VA = "0x116C204")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x116C2A8", Offset = "0x116C2A8", VA = "0x116C2A8")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x116C364", Offset = "0x116C364", VA = "0x116C364")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x116CEFC", Offset = "0x116CEFC", VA = "0x116CEFC")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x116D5F8", Offset = "0x116D5F8", VA = "0x116D5F8")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x116D7D8", Offset = "0x116D7D8", VA = "0x116D7D8")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x116E3BC", Offset = "0x116E3BC", VA = "0x116E3BC")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x116C56C", Offset = "0x116C56C", VA = "0x116C56C")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x116E4DC", Offset = "0x116E4DC", VA = "0x116E4DC")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x116E5D4", Offset = "0x116E5D4", VA = "0x116E5D4")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x116E6D4", Offset = "0x116E6D4", VA = "0x116E6D4")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x116E9CC", Offset = "0x116E9CC", VA = "0x116E9CC")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x116EB14", Offset = "0x116EB14", VA = "0x116EB14")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x116EC3C", Offset = "0x116EC3C", VA = "0x116EC3C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x116ED60", Offset = "0x116ED60", VA = "0x116ED60")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x116EE38", Offset = "0x116EE38", VA = "0x116EE38")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x116EF80", Offset = "0x116EF80", VA = "0x116EF80")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x116F384", Offset = "0x116F384", VA = "0x116F384")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public enum EmitterChannel
	{
		[Token(Token = "0x40010DE")]
		None = -1,
		[Token(Token = "0x40010DF")]
		Reserved,
		[Token(Token = "0x40010E0")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20002A6")]
	public class MixerSnapshot
	{
		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xAF146C", Offset = "0xAF146C", VA = "0xAF146C")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xAF1410", Offset = "0xAF1410", VA = "0xAF1410")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20003AC")]
		public enum FadeState
		{
			[Token(Token = "0x40014A8")]
			Null,
			[Token(Token = "0x40014A9")]
			FadingIn,
			[Token(Token = "0x40014AA")]
			FadingOut,
			[Token(Token = "0x40014AB")]
			Ducking
		}

		[Token(Token = "0x20003AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE590", Offset = "0x7CE590")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x40014B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170001B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019A4")]
				[Address(RVA = "0xAF264C", Offset = "0xAF264C", VA = "0xAF264C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019A6")]
				[Address(RVA = "0xAF26B4", Offset = "0xAF26B4", VA = "0xAF26B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019A1")]
			[Address(RVA = "0xAF20E0", Offset = "0xAF20E0", VA = "0xAF20E0")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60019A2")]
			[Address(RVA = "0xAF2550", Offset = "0xAF2550", VA = "0xAF2550", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019A3")]
			[Address(RVA = "0xAF2554", Offset = "0xAF2554", VA = "0xAF2554", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019A5")]
			[Address(RVA = "0xAF2654", Offset = "0xAF2654", VA = "0xAF2654", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE5A0", Offset = "0x7CE5A0")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x40014B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x40014B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x40014B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40014BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170001B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019AA")]
				[Address(RVA = "0xAF2B24", Offset = "0xAF2B24", VA = "0xAF2B24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019AC")]
				[Address(RVA = "0xAF2B8C", Offset = "0xAF2B8C", VA = "0xAF2B8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019A7")]
			[Address(RVA = "0xAF24E0", Offset = "0xAF24E0", VA = "0xAF24E0")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60019A8")]
			[Address(RVA = "0xAF29AC", Offset = "0xAF29AC", VA = "0xAF29AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019A9")]
			[Address(RVA = "0xAF29B0", Offset = "0xAF29B0", VA = "0xAF29B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019AB")]
			[Address(RVA = "0xAF2B2C", Offset = "0xAF2B2C", VA = "0xAF2B2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE5B0", Offset = "0x7CE5B0")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170001B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019B0")]
				[Address(RVA = "0xAF293C", Offset = "0xAF293C", VA = "0xAF293C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019B2")]
				[Address(RVA = "0xAF29A4", Offset = "0xAF29A4", VA = "0xAF29A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019AD")]
			[Address(RVA = "0xAF250C", Offset = "0xAF250C", VA = "0xAF250C")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xAF26BC", Offset = "0xAF26BC", VA = "0xAF26BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xAF26C0", Offset = "0xAF26C0", VA = "0xAF26C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019B1")]
			[Address(RVA = "0xAF2944", Offset = "0xAF2944", VA = "0xAF2944", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000118")]
		public float volume
		{
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0xAF150C", Offset = "0xAF150C", VA = "0xAF150C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0xAF1528", Offset = "0xAF1528", VA = "0xAF1528")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public float pitch
		{
			[Token(Token = "0x60015B0")]
			[Address(RVA = "0xAF1544", Offset = "0xAF1544", VA = "0xAF1544")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B1")]
			[Address(RVA = "0xAF1560", Offset = "0xAF1560", VA = "0xAF1560")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public AudioClip clip
		{
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0xAF157C", Offset = "0xAF157C", VA = "0xAF157C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0xAF1598", Offset = "0xAF1598", VA = "0xAF1598")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public float time
		{
			[Token(Token = "0x60015B4")]
			[Address(RVA = "0xAF15B4", Offset = "0xAF15B4", VA = "0xAF15B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0xAF15D0", Offset = "0xAF15D0", VA = "0xAF15D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public float length
		{
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0xAF15EC", Offset = "0xAF15EC", VA = "0xAF15EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700011D")]
		public bool loop
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0xAF16A4", Offset = "0xAF16A4", VA = "0xAF16A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0xAF16C0", Offset = "0xAF16C0", VA = "0xAF16C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public bool mute
		{
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0xAF16E0", Offset = "0xAF16E0", VA = "0xAF16E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0xAF16FC", Offset = "0xAF16FC", VA = "0xAF16FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0xAF171C", Offset = "0xAF171C", VA = "0xAF171C")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x60015BC")]
			[Address(RVA = "0xAF1738", Offset = "0xAF1738", VA = "0xAF1738")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public bool isPlaying
		{
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0xAF1754", Offset = "0xAF1754", VA = "0xAF1754")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xAF1770", Offset = "0xAF1770", VA = "0xAF1770")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xAF1928", Offset = "0xAF1928", VA = "0xAF1928")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xAF19F0", Offset = "0xAF19F0", VA = "0xAF19F0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xAF19F8", Offset = "0xAF19F8", VA = "0xAF19F8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xAF1A2C", Offset = "0xAF1A2C", VA = "0xAF1A2C")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xAF1A34", Offset = "0xAF1A34", VA = "0xAF1A34")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xAF1A3C", Offset = "0xAF1A3C", VA = "0xAF1A3C")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xAF1AE4", Offset = "0xAF1AE4", VA = "0xAF1AE4")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xAF1B50", Offset = "0xAF1B50", VA = "0xAF1B50")]
		public void Play()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xAF1BB0", Offset = "0xAF1BB0", VA = "0xAF1BB0")]
		public void Pause()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xAF1BE8", Offset = "0xAF1BE8", VA = "0xAF1BE8")]
		public void Stop()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xAF1D8C", Offset = "0xAF1D8C", VA = "0xAF1D8C")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xAF1DE4", Offset = "0xAF1DE4", VA = "0xAF1DE4")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xAF1EF0", Offset = "0xAF1EF0", VA = "0xAF1EF0")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xAF1FC0", Offset = "0xAF1FC0", VA = "0xAF1FC0")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xAF2008", Offset = "0xAF2008", VA = "0xAF2008")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xAF2034", Offset = "0xAF2034", VA = "0xAF2034")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D8EF0", Offset = "0x7D8EF0")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xAF210C", Offset = "0xAF210C", VA = "0xAF210C")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xAF2204", Offset = "0xAF2204", VA = "0xAF2204")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xAF2334", Offset = "0xAF2334", VA = "0xAF2334")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xAF23AC", Offset = "0xAF23AC", VA = "0xAF23AC")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xAF2444", Offset = "0xAF2444", VA = "0xAF2444")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xAF2174", Offset = "0xAF2174", VA = "0xAF2174")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D8F54", Offset = "0x7D8F54")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xAF2280", Offset = "0xAF2280", VA = "0xAF2280")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D8FB8", Offset = "0x7D8FB8")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xAF2538", Offset = "0xAF2538", VA = "0xAF2538")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40010F7")]
		Random,
		[Token(Token = "0x40010F8")]
		Sequential
	}
	[Token(Token = "0x20002AA")]
	public enum FreqHint
	{
		[Token(Token = "0x40010FA")]
		None,
		[Token(Token = "0x40010FB")]
		Wide,
		[Token(Token = "0x40010FC")]
		Narrow
	}
	[Token(Token = "0x20002AB")]
	public enum SoundPriority
	{
		[Token(Token = "0x40010FE")]
		VeryLow = -2,
		[Token(Token = "0x40010FF")]
		Low,
		[Token(Token = "0x4001100")]
		Default,
		[Token(Token = "0x4001101")]
		High,
		[Token(Token = "0x4001102")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20002AC")]
	public class OSPProps
	{
		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5C00", Offset = "0x7D5C00")]
		public bool enableSpatialization;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5C38", Offset = "0x7D5C38")]
		public bool useFastOverride;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5C70", Offset = "0x7D5C70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D5C70", Offset = "0x7D5C70")]
		public float gain;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5CC4", Offset = "0x7D5CC4")]
		public bool enableInvSquare;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5CFC", Offset = "0x7D5CFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D5CFC", Offset = "0x7D5CFC")]
		public float volumetric;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5D54", Offset = "0x7D5D54")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7D5D54", Offset = "0x7D5D54")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xAF147C", Offset = "0xAF147C", VA = "0xAF147C")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AD")]
	public class SoundFX
	{
		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5DB4", Offset = "0x7D5DB4")]
		public string name;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5DEC", Offset = "0x7D5DEC")]
		public SoundFXNext playback;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5E24", Offset = "0x7D5E24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D5E24", Offset = "0x7D5E24")]
		public float volume;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5E78", Offset = "0x7D5E78")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7D5E78", Offset = "0x7D5E78")]
		public Vector2 pitchVariance;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5ED4", Offset = "0x7D5ED4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7D5ED4", Offset = "0x7D5ED4")]
		public Vector2 falloffDistance;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5F34", Offset = "0x7D5F34")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5F6C", Offset = "0x7D5F6C")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5FA4", Offset = "0x7D5FA4")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D5FDC", Offset = "0x7D5FDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D5FDC", Offset = "0x7D5FDC")]
		public float spread;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6034", Offset = "0x7D6034")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7D6034", Offset = "0x7D6034")]
		public float pctChanceToPlay;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6088", Offset = "0x7D6088")]
		public SoundPriority priority;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D60C0", Offset = "0x7D60C0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7D60C0", Offset = "0x7D60C0")]
		public Vector2 delay;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D611C", Offset = "0x7D611C")]
		public bool looping;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7D6154", Offset = "0x7D6154")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000121")]
		public int Length
		{
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0xAF30F0", Offset = "0xAF30F0", VA = "0xAF30F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000122")]
		public bool IsValid
		{
			[Token(Token = "0x60015DA")]
			[Address(RVA = "0xAF310C", Offset = "0xAF310C", VA = "0xAF310C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000123")]
		public SoundGroup Group
		{
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0xAF31B0", Offset = "0xAF31B0", VA = "0xAF31B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015DC")]
			[Address(RVA = "0xAF31B8", Offset = "0xAF31B8", VA = "0xAF31B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0xAF31C0", Offset = "0xAF31C0", VA = "0xAF31C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000125")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x60015DE")]
			[Address(RVA = "0xAF31CC", Offset = "0xAF31CC", VA = "0xAF31CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xAF2B94", Offset = "0xAF2B94", VA = "0xAF2B94")]
		public SoundFX()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xAF31E4", Offset = "0xAF31E4", VA = "0xAF31E4")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xAF32B4", Offset = "0xAF32B4", VA = "0xAF32B4")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xAF3354", Offset = "0xAF3354", VA = "0xAF3354")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xAF339C", Offset = "0xAF339C", VA = "0xAF339C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xAF3498", Offset = "0xAF3498", VA = "0xAF3498")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xAF34A4", Offset = "0xAF34A4", VA = "0xAF34A4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xAF3584", Offset = "0xAF3584", VA = "0xAF3584")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xAF369C", Offset = "0xAF369C", VA = "0xAF369C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xAF372C", Offset = "0xAF372C", VA = "0xAF372C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xAF37C4", Offset = "0xAF37C4", VA = "0xAF37C4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xAF3854", Offset = "0xAF3854", VA = "0xAF3854")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xAF38E4", Offset = "0xAF38E4", VA = "0xAF38E4")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AE")]
	public class SoundFXRef
	{
		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000126")]
		public SoundFX soundFX
		{
			[Token(Token = "0x60015EB")]
			[Address(RVA = "0xAF3960", Offset = "0xAF3960", VA = "0xAF3960")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		public string name
		{
			[Token(Token = "0x60015EC")]
			[Address(RVA = "0xAF3A7C", Offset = "0xAF3A7C", VA = "0xAF3A7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015ED")]
			[Address(RVA = "0xAF3A84", Offset = "0xAF3A84", VA = "0xAF3A84")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public int Length
		{
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0xAF3AAC", Offset = "0xAF3AAC", VA = "0xAF3AAC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000129")]
		public bool IsValid
		{
			[Token(Token = "0x60015F0")]
			[Address(RVA = "0xAF3AF0", Offset = "0xAF3AF0", VA = "0xAF3AF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xAF3990", Offset = "0xAF3990", VA = "0xAF3990")]
		private void Init()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xAF3B28", Offset = "0xAF3B28", VA = "0xAF3B28")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xAF3B60", Offset = "0xAF3B60", VA = "0xAF3B60")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xAF3BA0", Offset = "0xAF3BA0", VA = "0xAF3BA0")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xAF3BE8", Offset = "0xAF3BE8", VA = "0xAF3BE8")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xAF3C68", Offset = "0xAF3C68", VA = "0xAF3C68")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xAF3CA8", Offset = "0xAF3CA8", VA = "0xAF3CA8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xAF3CF8", Offset = "0xAF3CF8", VA = "0xAF3CF8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xAF3D30", Offset = "0xAF3D30", VA = "0xAF3D30")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xAF3D70", Offset = "0xAF3D70", VA = "0xAF3D70")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xAF3DA8", Offset = "0xAF3DA8", VA = "0xAF3DA8")]
		public SoundFXRef()
		{
		}
	}
}
