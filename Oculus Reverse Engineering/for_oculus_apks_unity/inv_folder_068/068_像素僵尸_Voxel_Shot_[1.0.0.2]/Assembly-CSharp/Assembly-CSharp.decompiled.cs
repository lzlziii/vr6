using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using DigitalOpus.MB.Core;
using Il2CppDummyDll;
using LitJson;
using Oculus.Platform;
using Oculus.Spatializer.Propagation;
using Steamworks;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.Video;
using VRTK;
using VRTK.Highlighters;
using Valve.VR;
using uTools;

[assembly: AssemblyVersion("9.0.0.0")]
[Token(Token = "0x2000002")]
public class AddDebugSystems : MonoBehaviour
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0x7142C4", Offset = "0x7142C4", VA = "0x7142C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x714314", Offset = "0x714314", VA = "0x714314")]
	public AddDebugSystems()
	{
	}
}
[Token(Token = "0x2000003")]
public class DebugMenu : MonoBehaviour
{
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570528", Offset = "0x570528")]
	private sealed class <FrameRate>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugMenu <>4__this;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <refresh>5__2;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FPSMeasure <fps>5__3;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0x71C924", Offset = "0x71C924", VA = "0x71C924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0x71C98C", Offset = "0x71C98C", VA = "0x71C98C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x71C680", Offset = "0x71C680", VA = "0x71C680")]
		[DebuggerHidden]
		public <FrameRate>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x71C7EC", Offset = "0x71C7EC", VA = "0x71C7EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x71C7F0", Offset = "0x71C7F0", VA = "0x71C7F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x71C92C", Offset = "0x71C92C", VA = "0x71C92C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570538", Offset = "0x570538")]
	private sealed class <VertexCount>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugMenu <>4__this;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <refresh>5__2;

		[Token(Token = "0x1700018C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600153F")]
			[Address(RVA = "0x71CBC8", Offset = "0x71CBC8", VA = "0x71CBC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0x71CC30", Offset = "0x71CC30", VA = "0x71CC30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x71C7A8", Offset = "0x71C7A8", VA = "0x71C7A8")]
		[DebuggerHidden]
		public <VertexCount>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x71C994", Offset = "0x71C994", VA = "0x71C994", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x71C998", Offset = "0x71C998", VA = "0x71C998", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x71CBD0", Offset = "0x71CBD0", VA = "0x71CBD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool unityVer;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool sysInfo;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool frameRate;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool console;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool vertexCount;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text unityVerText;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text sysInfoText;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text frameRateText;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text debugLogText;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text vertexCountText;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x71C174", Offset = "0x71C174", VA = "0x71C174")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x71C1F8", Offset = "0x71C1F8", VA = "0x71C1F8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x71C2E0", Offset = "0x71C2E0", VA = "0x71C2E0")]
	private void UnityVer()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x71C364", Offset = "0x71C364", VA = "0x71C364")]
	private void SysInfo()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x71C5A0", Offset = "0x71C5A0", VA = "0x71C5A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57E5E8", Offset = "0x57E5E8")]
	private IEnumerator FrameRate()
	{
		return null;
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x71C6AC", Offset = "0x71C6AC", VA = "0x71C6AC")]
	private void Console(string condition, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x71C610", Offset = "0x71C610", VA = "0x71C610")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57E64C", Offset = "0x57E64C")]
	private IEnumerator VertexCount()
	{
		return null;
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x71C7D4", Offset = "0x71C7D4", VA = "0x71C7D4")]
	public DebugMenu()
	{
	}
}
[Token(Token = "0x2000004")]
public class FPSMeasure : MonoBehaviour
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Interval;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int mFrame;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mOldTime;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mFrameRate;

	[Token(Token = "0x17000001")]
	public float FrameRate
	{
		[Token(Token = "0x600000B")]
		[Address(RVA = "0xBC0B0C", Offset = "0xBC0B0C", VA = "0xBC0B0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600000C")]
		[Address(RVA = "0xBC0B14", Offset = "0xBC0B14", VA = "0xBC0B14")]
		private set
		{
		}
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xBC0B1C", Offset = "0xBC0B1C", VA = "0xBC0B1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xBC0B44", Offset = "0xBC0B44", VA = "0xBC0B44")]
	private void Update()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xBC0BA8", Offset = "0xBC0BA8", VA = "0xBC0BA8")]
	public FPSMeasure()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56EBA0", Offset = "0x56EBA0")]
public class LightProbeGenerator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200030B")]
	public class LightProbeArea
	{
		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bounds ProbeVolume;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 Subdivisions;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int RandomCount;

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x870B38", Offset = "0x870B38", VA = "0x870B38")]
		public LightProbeArea()
		{
		}
	}

	[Token(Token = "0x200030C")]
	public enum LightProbePlacementType
	{
		[Token(Token = "0x40015AD")]
		Grid,
		[Token(Token = "0x40015AE")]
		Random
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x870B30", Offset = "0x870B30", VA = "0x870B30")]
	public LightProbeGenerator()
	{
	}
}
[Token(Token = "0x2000006")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x56EBD8", Offset = "0x56EBD8")]
public class LightShafts : MonoBehaviour
{
	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightShaftsShadowmapMode m_ShadowmapMode;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private LightShaftsShadowmapMode m_ShadowmapModeOld;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera[] m_Cameras;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera m_CurrentCamera;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_ShadowmapDirty;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 m_Size;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_SpotNear;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_SpotFar;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask m_CullingMask;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public LayerMask m_ColorFilterMask;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_Brightness;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_BrightnessColored;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_Extinction;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_MinDistFromCamera;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int m_ShadowmapRes;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Camera m_ShadowmapCamera;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderTexture m_Shadowmap;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader m_DepthShader;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RenderTexture m_ColorFilter;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader m_ColorFilterShader;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool m_Colored;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float m_ColorBalance;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int m_EpipolarLines;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int m_EpipolarSamples;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RenderTexture m_CoordEpi;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RenderTexture m_DepthEpi;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader m_CoordShader;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material m_CoordMaterial;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Camera m_CoordsCamera;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RenderTexture m_InterpolationEpi;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Shader m_DepthBreaksShader;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Material m_DepthBreaksMaterial;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private RenderTexture m_RaymarchedLightEpi;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Material m_RaymarchMaterial;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Shader m_RaymarchShader;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private RenderTexture m_InterpolateAlongRaysEpi;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Shader m_InterpolateAlongRaysShader;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Material m_InterpolateAlongRaysMaterial;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private RenderTexture m_SamplePositions;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Shader m_SamplePositionsShader;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Material m_SamplePositionsMaterial;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool m_SamplePositionsShaderCompiles;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Shader m_FinalInterpolationShader;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Material m_FinalInterpolationMaterial;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float m_DepthThreshold;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public int m_InterpolationStep;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool m_ShowSamples;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	public bool m_ShowInterpolatedSamples;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float m_ShowSamplesBackgroundFade;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool m_AttenuationCurveOn;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AnimationCurve m_AttenuationCurve;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Texture2D m_AttenuationCurveTex;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Light m_Light;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private LightType m_LightType;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private bool m_DX11Support;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
	private bool m_MinRequirements;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Mesh m_SpotMesh;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float m_SpotMeshNear;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float m_SpotMeshFar;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float m_SpotMeshAngle;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float m_SpotMeshRange;

	[Token(Token = "0x17000002")]
	public bool directional
	{
		[Token(Token = "0x600001F")]
		[Address(RVA = "0x871E28", Offset = "0x871E28", VA = "0x871E28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000003")]
	public bool spot
	{
		[Token(Token = "0x6000020")]
		[Address(RVA = "0x871E38", Offset = "0x871E38", VA = "0x871E38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x870BBC", Offset = "0x870BBC", VA = "0x870BBC")]
	private void InitLUTs()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x870DC8", Offset = "0x870DC8", VA = "0x870DC8")]
	public void UpdateLUTs()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x870EFC", Offset = "0x870EFC", VA = "0x870EFC")]
	private void InitRenderTexture(ref RenderTexture rt, int width, int height, int depth, RenderTextureFormat format, bool temp = true)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x8710BC", Offset = "0x8710BC", VA = "0x8710BC")]
	private void InitShadowmap()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x871218", Offset = "0x871218", VA = "0x871218")]
	private void ReleaseShadowmap()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x871258", Offset = "0x871258", VA = "0x871258")]
	private void InitEpipolarTextures()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x87144C", Offset = "0x87144C", VA = "0x87144C")]
	private void InitMaterial(ref Material material, Shader shader)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x87153C", Offset = "0x87153C", VA = "0x87153C")]
	private void InitMaterials()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x87159C", Offset = "0x87159C", VA = "0x87159C")]
	private void InitSpotFrustumMesh()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x871A74", Offset = "0x871A74", VA = "0x871A74")]
	public void UpdateLightType()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x871B24", Offset = "0x871B24", VA = "0x871B24")]
	private bool ShaderCompiles(Shader shader)
	{
		return default(bool);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x871BF0", Offset = "0x871BF0", VA = "0x871BF0")]
	public bool CheckMinRequirements()
	{
		return default(bool);
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x871D94", Offset = "0x871D94", VA = "0x871D94")]
	private void InitResources()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x871DD0", Offset = "0x871DD0", VA = "0x871DD0")]
	private void ReleaseResources()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x871E48", Offset = "0x871E48", VA = "0x871E48")]
	private Bounds GetBoundsLocal()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x871FF8", Offset = "0x871FF8", VA = "0x871FF8")]
	private Matrix4x4 GetBoundsMatrix()
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x8721C4", Offset = "0x8721C4", VA = "0x8721C4")]
	private float GetFrustumApex()
	{
		return default(float);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x8721DC", Offset = "0x8721DC", VA = "0x8721DC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x872454", Offset = "0x872454", VA = "0x872454")]
	private void RenderQuadSections(Vector4 lightPos)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x872574", Offset = "0x872574", VA = "0x872574")]
	private void RenderQuad()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x872634", Offset = "0x872634", VA = "0x872634")]
	private void RenderSpotFrustum()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x87272C", Offset = "0x87272C", VA = "0x87272C")]
	private Vector4 GetLightViewportPos()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x872890", Offset = "0x872890", VA = "0x872890")]
	private bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x872A00", Offset = "0x872A00", VA = "0x872A00")]
	private bool IntersectsNearPlane()
	{
		return default(bool);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x872B04", Offset = "0x872B04", VA = "0x872B04")]
	private void SetKeyword(bool firstOn, string firstKeyword, string secondKeyword)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x872B38", Offset = "0x872B38", VA = "0x872B38")]
	public void SetShadowmapDirty()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x872B44", Offset = "0x872B44", VA = "0x872B44")]
	private void GetFrustumRays(out Matrix4x4 frustumRays, out Vector3 cameraPosLocal)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x872E68", Offset = "0x872E68", VA = "0x872E68")]
	private void SetFrustumRays(Material material)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x872FA4", Offset = "0x872FA4", VA = "0x872FA4")]
	private float GetDepthThresholdAdjusted()
	{
		return default(float);
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x872FDC", Offset = "0x872FDC", VA = "0x872FDC")]
	private bool CheckCamera()
	{
		return default(bool);
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x8730C0", Offset = "0x8730C0", VA = "0x8730C0")]
	public void UpdateCameraDepthMode()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x8731AC", Offset = "0x8731AC", VA = "0x8731AC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x87327C", Offset = "0x87327C", VA = "0x87327C")]
	private void UpdateShadowmap()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x873688", Offset = "0x873688", VA = "0x873688")]
	private void RenderCoords(int width, int height, Vector4 lightPos)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x87391C", Offset = "0x87391C", VA = "0x87391C")]
	private void RenderInterpolationTexture(Vector4 lightPos)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x873BD4", Offset = "0x873BD4", VA = "0x873BD4")]
	private void InterpolateAlongRays(Vector4 lightPos)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x873DC8", Offset = "0x873DC8", VA = "0x873DC8")]
	private void RenderSamplePositions(int width, int height, Vector4 lightPos)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x874164", Offset = "0x874164", VA = "0x874164")]
	private void ShowSamples(int width, int height, Vector4 lightPos)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x874298", Offset = "0x874298", VA = "0x874298")]
	private void Raymarch(int width, int height, Vector4 lightPos)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x874780", Offset = "0x874780", VA = "0x874780")]
	public void OnRenderObject()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x874D34", Offset = "0x874D34", VA = "0x874D34")]
	public LightShafts()
	{
	}
}
[Token(Token = "0x2000007")]
public enum LightShaftsShadowmapMode
{
	[Token(Token = "0x400004D")]
	Dynamic,
	[Token(Token = "0x400004E")]
	Static
}
[Token(Token = "0x2000008")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureBaker.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x714EFC", Offset = "0x714EFC", VA = "0x714EFC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x715450", Offset = "0x715450", VA = "0x715450")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x715628", Offset = "0x715628", VA = "0x715628")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x2000009")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x600003F")]
	[Address(RVA = "0x929BD0", Offset = "0x929BD0", VA = "0x929BD0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x929CA8", Offset = "0x929CA8", VA = "0x929CA8")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x200000A")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x92B874", Offset = "0x92B874", VA = "0x92B874")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x92BAC8", Offset = "0x92BAC8", VA = "0x92BAC8")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x92BF54", Offset = "0x92BF54", VA = "0x92BF54")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x200000B")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000044")]
	[Address(RVA = "0x92A84C", Offset = "0x92A84C", VA = "0x92A84C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x92A924", Offset = "0x92A924", VA = "0x92A924")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x200000C")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570548", Offset = "0x570548")]
	private sealed class <largeNumber>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x1700018E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001546")]
			[Address(RVA = "0x92A2A4", Offset = "0x92A2A4", VA = "0x92A2A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001548")]
			[Address(RVA = "0x92A30C", Offset = "0x92A30C", VA = "0x92A30C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x929FC8", Offset = "0x929FC8", VA = "0x929FC8")]
		[DebuggerHidden]
		public <largeNumber>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x92A13C", Offset = "0x92A13C", VA = "0x92A13C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x92A140", Offset = "0x92A140", VA = "0x92A140", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x92A2AC", Offset = "0x92A2AC", VA = "0x92A2AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MeshBaker mbd;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x929CB0", Offset = "0x929CB0", VA = "0x929CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x929F58", Offset = "0x929F58", VA = "0x929F58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57E6B0", Offset = "0x57E6B0")]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x929FF4", Offset = "0x929FF4", VA = "0x929FF4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x92A0CC", Offset = "0x92A0CC", VA = "0x92A0CC")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x200000D")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x92A314", Offset = "0x92A314", VA = "0x92A314")]
	private void Start()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x92A370", Offset = "0x92A370", VA = "0x92A370")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x92A424", Offset = "0x92A424", VA = "0x92A424")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x92A4FC", Offset = "0x92A4FC", VA = "0x92A4FC")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x200000E")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x92A504", Offset = "0x92A504", VA = "0x92A504")]
	private void Update()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x92A5F8", Offset = "0x92A5F8", VA = "0x92A5F8")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x200000F")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x6000050")]
	[Address(RVA = "0x92A600", Offset = "0x92A600", VA = "0x92A600")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x92A6D8", Offset = "0x92A6D8", VA = "0x92A6D8")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x2000010")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x92A92C", Offset = "0x92A92C", VA = "0x92A92C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x92AB18", Offset = "0x92AB18", VA = "0x92AB18")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x92B750", Offset = "0x92B750", VA = "0x92B750")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x92B86C", Offset = "0x92B86C", VA = "0x92B86C")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000011")]
public class MB_AtlasesAndRects
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D[] atlases;

	[NonSerialized]
	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MB_MaterialAndUVRect> mat2rect_map;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] texPropertyNames;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x9296B0", Offset = "0x9296B0", VA = "0x9296B0")]
	public MB_AtlasesAndRects()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class MB_MultiMaterial
{
	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material combinedMaterial;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> sourceMaterials;

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x91FC9C", Offset = "0x91FC9C", VA = "0x91FC9C")]
	public MB_MultiMaterial()
	{
	}
}
[Serializable]
[Token(Token = "0x2000013")]
public class MB_MaterialAndUVRect
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material material;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect atlasRect;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string srcObjName;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rect samplingRectMatAndUVTiling;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rect sourceMaterialTiling;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Rect samplingEncapsulatinRect;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x91FBE8", Offset = "0x91FBE8", VA = "0x91FBE8")]
	public MB_MaterialAndUVRect(Material m, Rect destRect, Rect samplingRectMatAndUVTiling, Rect sourceMaterialTiling, Rect samplingEncapsulatinRect, string objName)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x92A6E0", Offset = "0x92A6E0", VA = "0x92A6E0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x92A724", Offset = "0x92A724", VA = "0x92A724", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000014")]
public class MB2_TextureBakeResults : ScriptableObject
{
	[Token(Token = "0x200030E")]
	public class Material2AtlasRectangleMapper
	{
		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MB2_TextureBakeResults tbr;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] numTimesMatAppearsInAtlas;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MB_MaterialAndUVRect[] matsAndSrcUVRect;

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x920350", Offset = "0x920350", VA = "0x920350")]
		public Material2AtlasRectangleMapper(MB2_TextureBakeResults res)
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x920780", Offset = "0x920780", VA = "0x920780")]
		public bool TryMapMaterialToUVRect(Material mat, Mesh m, int submeshIdx, MB3_MeshCombinerSingle.MeshChannelsCache meshChannelCache, Dictionary<int, MB_Utility.MeshAnalysisResult[]> meshAnalysisCache, out Rect rectInAtlas, out Rect encapsulatingRect, out Rect sourceMaterialTilingOut, ref string errorMsg, MB2_LogLevel logLevel)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB_AtlasesAndRects[] combinedMaterialInfo;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rect[] prefabUVRects;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MB_MaterialAndUVRect[] materialsAndUVRects;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material resultMaterial;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB_MultiMaterial[] resultMaterials;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool doMultiMaterial;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool fixOutOfBoundsUVs;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x91F33C", Offset = "0x91F33C", VA = "0x91F33C")]
	public static MB2_TextureBakeResults CreateForMaterialsOnRenderer(GameObject[] gos, List<Material> matsOnTargetRenderer)
	{
		return null;
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x91FD0C", Offset = "0x91FD0C", VA = "0x91FD0C")]
	public bool ContainsMaterial(Material m)
	{
		return default(bool);
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x91FFB4", Offset = "0x91FFB4", VA = "0x91FFB4")]
	public string GetDescription()
	{
		return null;
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x920348", Offset = "0x920348", VA = "0x920348")]
	public MB2_TextureBakeResults()
	{
	}
}
[Token(Token = "0x2000015")]
public class MB2_UpdateSkinnedMeshBoundsFromBones : MonoBehaviour
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform[] bones;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x92129C", Offset = "0x92129C", VA = "0x92129C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x9213C0", Offset = "0x9213C0", VA = "0x9213C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x92144C", Offset = "0x92144C", VA = "0x92144C")]
	public MB2_UpdateSkinnedMeshBoundsFromBones()
	{
	}
}
[Token(Token = "0x2000016")]
public class MB2_UpdateSkinnedMeshBoundsFromBounds : MonoBehaviour
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> objects;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x921454", Offset = "0x921454", VA = "0x921454")]
	private void Start()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x921730", Offset = "0x921730", VA = "0x921730")]
	private void Update()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x9217C4", Offset = "0x9217C4", VA = "0x9217C4")]
	public MB2_UpdateSkinnedMeshBoundsFromBounds()
	{
	}
}
[Token(Token = "0x2000017")]
public class MB3_BatchPrefabBaker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200030F")]
	public class MB3_PrefabBakerRow
	{
		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject sourcePrefab;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject resultPrefab;

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x9228D8", Offset = "0x9228D8", VA = "0x9228D8")]
		public MB3_PrefabBakerRow()
		{
		}
	}

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_PrefabBakerRow[] prefabRows;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string outputPrefabFolder;

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x9228D0", Offset = "0x9228D0", VA = "0x9228D0")]
	public MB3_BatchPrefabBaker()
	{
	}
}
[Token(Token = "0x2000018")]
public class MB3_BoneWeightCopier : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject inputGameObject;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject outputPrefab;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer seamMesh;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string outputFolder;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x9228E0", Offset = "0x9228E0", VA = "0x9228E0")]
	public MB3_BoneWeightCopier()
	{
	}
}
[Token(Token = "0x2000019")]
public class MB3_DisableHiddenAnimations : MonoBehaviour
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Animation> animationsToCull;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x9228F4", Offset = "0x9228F4", VA = "0x9228F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x9229F4", Offset = "0x9229F4", VA = "0x9229F4")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x922AF4", Offset = "0x922AF4", VA = "0x922AF4")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x922BF4", Offset = "0x922BF4", VA = "0x922BF4")]
	public MB3_DisableHiddenAnimations()
	{
	}
}
[Token(Token = "0x200001A")]
public class MB3_MeshBaker : MB3_MeshBakerCommon
{
	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected MB3_MeshCombinerSingle _meshCombiner;

	[Token(Token = "0x17000004")]
	public override MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x600006B")]
		[Address(RVA = "0x923B9C", Offset = "0x923B9C", VA = "0x923B9C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x923BA4", Offset = "0x923BA4", VA = "0x923BA4")]
	public void BuildSceneMeshObject()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x923BC8", Offset = "0x923BC8", VA = "0x923BC8", Slot = "23")]
	public virtual bool ShowHide(GameObject[] gos, GameObject[] deleteGOs)
	{
		return default(bool);
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x923BE4", Offset = "0x923BE4", VA = "0x923BE4", Slot = "24")]
	public virtual void ApplyShowHide()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x923C08", Offset = "0x923C08", VA = "0x923C08", Slot = "13")]
	public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x923CB4", Offset = "0x923CB4", VA = "0x923CB4", Slot = "14")]
	public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x923D60", Offset = "0x923D60", VA = "0x923D60")]
	public MB3_MeshBaker()
	{
	}
}
[Token(Token = "0x200001B")]
public abstract class MB3_MeshBakerCommon : MB3_MeshBakerRoot
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> objsToMesh;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useObjsToMeshFromTexBaker;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool clearBuffersAfterBake;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string bakeAssetsInPlaceFolderPath;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject resultPrefab;

	[Token(Token = "0x17000005")]
	public abstract MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x6000072")]
		get;
	}

	[Token(Token = "0x17000006")]
	public override MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x6000073")]
		[Address(RVA = "0x923DE0", Offset = "0x923DE0", VA = "0x923DE0", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000074")]
		[Address(RVA = "0x923E0C", Offset = "0x923E0C", VA = "0x923E0C", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x923E4C", Offset = "0x923E4C", VA = "0x923E4C", Slot = "6")]
	public override List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x924014", Offset = "0x924014", VA = "0x924014")]
	public void EnableDisableSourceObjectRenderers(bool show)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x92416C", Offset = "0x92416C", VA = "0x92416C", Slot = "8")]
	public virtual void ClearMesh()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x92419C", Offset = "0x92419C", VA = "0x92419C", Slot = "9")]
	public virtual void DestroyMesh()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x9241CC", Offset = "0x9241CC", VA = "0x9241CC", Slot = "10")]
	public virtual void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x924210", Offset = "0x924210", VA = "0x924210", Slot = "11")]
	public virtual int GetNumObjectsInCombined()
	{
		return default(int);
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x924240", Offset = "0x924240", VA = "0x924240", Slot = "12")]
	public virtual int GetNumVerticesFor(GameObject go)
	{
		return default(int);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x924284", Offset = "0x924284", VA = "0x924284")]
	public MB3_TextureBaker GetTextureBaker()
	{
		return null;
	}

	[Token(Token = "0x600007D")]
	public abstract bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true);

	[Token(Token = "0x600007E")]
	public abstract bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource = true);

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x92439C", Offset = "0x92439C", VA = "0x92439C", Slot = "15")]
	public virtual void Apply([Optional] MB3_MeshCombiner.GenerateUV2Delegate uv2GenerationMethod)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x92444C", Offset = "0x92444C", VA = "0x92444C", Slot = "16")]
	public virtual void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] MB3_MeshCombiner.GenerateUV2Delegate uv2GenerationMethod)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x924594", Offset = "0x924594", VA = "0x924594", Slot = "17")]
	public virtual bool CombinedMeshContains(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x9245D8", Offset = "0x9245D8", VA = "0x9245D8", Slot = "18")]
	public virtual void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV1 = false, bool updateUV2 = false, bool updateColors = false, bool updateSkinningInfo = false)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x924708", Offset = "0x924708", VA = "0x924708", Slot = "19")]
	public virtual void UpdateSkinnedMeshApproximateBounds()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x924768", Offset = "0x924768", VA = "0x924768", Slot = "20")]
	public virtual void UpdateSkinnedMeshApproximateBoundsFromBones()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x9247C8", Offset = "0x9247C8", VA = "0x9247C8", Slot = "21")]
	public virtual void UpdateSkinnedMeshApproximateBoundsFromBounds()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x924828", Offset = "0x924828", VA = "0x924828", Slot = "22")]
	protected virtual bool _ValidateForUpdateSkinnedMeshBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x923DD0", Offset = "0x923DD0", VA = "0x923DD0")]
	protected MB3_MeshBakerCommon()
	{
	}
}
[Token(Token = "0x200001C")]
public class MB3_MeshBakerGrouper : MonoBehaviour
{
	[Token(Token = "0x2000310")]
	public enum ClusterType
	{
		[Token(Token = "0x40015B8")]
		none,
		[Token(Token = "0x40015B9")]
		grid,
		[Token(Token = "0x40015BA")]
		pie,
		[Token(Token = "0x40015BB")]
		agglomerative
	}

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBakerGrouperCore grouper;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ClusterType clusterType;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrouperData data;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Bounds sourceObjectBounds;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x924A04", Offset = "0x924A04", VA = "0x924A04")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x924AB4", Offset = "0x924AB4", VA = "0x924AB4")]
	public MB3_MeshBakerGrouperCore CreateGrouper(ClusterType t, GrouperData data)
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x924C58", Offset = "0x924C58", VA = "0x924C58")]
	public MB3_MeshBakerGrouper()
	{
	}
}
[Token(Token = "0x200001D")]
public abstract class MB3_MeshBakerRoot : MonoBehaviour
{
	[Token(Token = "0x2000311")]
	public class ZSortObjects
	{
		[Token(Token = "0x2000594")]
		public class Item
		{
			[Token(Token = "0x4001B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4001B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 point;

			[Token(Token = "0x6001E21")]
			[Address(RVA = "0x925A6C", Offset = "0x925A6C", VA = "0x925A6C")]
			public Item()
			{
			}
		}

		[Token(Token = "0x2000595")]
		public class ItemComparer : IComparer<Item>
		{
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x925A84", Offset = "0x925A84", VA = "0x925A84", Slot = "4")]
			public int Compare(Item a, Item b)
			{
				return default(int);
			}

			[Token(Token = "0x6001E23")]
			[Address(RVA = "0x925A74", Offset = "0x925A74", VA = "0x925A74")]
			public ItemComparer()
			{
			}
		}

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 sortAxis;

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x925614", Offset = "0x925614", VA = "0x925614")]
		public void SortByDistanceAlongAxis(List<GameObject> gos)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x925A7C", Offset = "0x925A7C", VA = "0x925A7C")]
		public ZSortObjects()
		{
		}
	}

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 sortAxis;

	[Token(Token = "0x17000007")]
	[HideInInspector]
	public abstract MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x600008B")]
		get;
		[Token(Token = "0x600008C")]
		set;
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x924D54", Offset = "0x924D54", VA = "0x924D54", Slot = "6")]
	public virtual List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x924D5C", Offset = "0x924D5C", VA = "0x924D5C")]
	public static bool DoCombinedValidate(MB3_MeshBakerRoot mom, MB_ObjsToCombineTypes objToCombineType, MB2_EditorMethodsInterface editorMethods, MB2_ValidationLevel validationLevel)
	{
		return default(bool);
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x9249FC", Offset = "0x9249FC", VA = "0x9249FC")]
	protected MB3_MeshBakerRoot()
	{
	}
}
[Token(Token = "0x200001E")]
public class MB3_MultiMeshBaker : MB3_MeshBakerCommon
{
	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected MB3_MultiMeshCombiner _meshCombiner;

	[Token(Token = "0x17000008")]
	public override MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0x925B1C", Offset = "0x925B1C", VA = "0x925B1C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x925B24", Offset = "0x925B24", VA = "0x925B24", Slot = "13")]
	public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x925CA4", Offset = "0x925CA4", VA = "0x925CA4", Slot = "14")]
	public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x925E24", Offset = "0x925E24", VA = "0x925E24")]
	public MB3_MultiMeshBaker()
	{
	}
}
[Token(Token = "0x200001F")]
public class MB3_TextureBaker : MB3_MeshBakerRoot
{
	[Token(Token = "0x2000312")]
	public delegate void OnCombinedTexturesCoroutineSuccess();

	[Token(Token = "0x2000313")]
	public delegate void OnCombinedTexturesCoroutineFail();

	[Token(Token = "0x2000314")]
	public class CreateAtlasesCoroutineResult
	{
		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool success;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isFinished;

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x927CF8", Offset = "0x927CF8", VA = "0x927CF8")]
		public CreateAtlasesCoroutineResult()
		{
		}
	}

	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570558", Offset = "0x570558")]
	private sealed class <CreateAtlasesCoroutine>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB3_TextureBaker <>4__this;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxTimePerFrame;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CreateAtlasesCoroutineResult coroutineResult;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool saveAtlasesAsAssets;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ProgressUpdateDelegate progressInfo;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MB2_EditorMethodsInterface editorMethods;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MB3_TextureCombiner <combiner>5__2;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <i>5__3;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult <coroutineResult2>5__4;

		[Token(Token = "0x17000190")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600155A")]
			[Address(RVA = "0x929AD0", Offset = "0x929AD0", VA = "0x929AD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600155C")]
			[Address(RVA = "0x929B38", Offset = "0x929B38", VA = "0x929B38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x927CCC", Offset = "0x927CCC", VA = "0x927CCC")]
		[DebuggerHidden]
		public <CreateAtlasesCoroutine>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x928BB4", Offset = "0x928BB4", VA = "0x928BB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x928BB8", Offset = "0x928BB8", VA = "0x928BB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x929AD8", Offset = "0x929AD8", VA = "0x929AD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected MB2_TextureBakeResults _textureBakeResults;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected int _atlasPadding;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected int _maxAtlasSize;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected bool _resizePowerOfTwoTextures;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	protected bool _fixOutOfBoundsUVs;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected int _maxTilingBakeSize;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected MB2_PackingAlgorithmEnum _packingAlgorithm;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected bool _meshBakerTexturePackerForcePowerOfTwo;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected List<ShaderTextureProperty> _customShaderProperties;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected List<string> _customShaderPropNames_Depricated;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected bool _doMultiMaterial;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected Material _resultMaterial;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected bool _considerNonTextureProperties;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[SerializeField]
	protected bool _doSuggestTreatment;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MB_MultiMaterial[] resultMaterials;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<GameObject> objsToMesh;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public OnCombinedTexturesCoroutineSuccess onBuiltAtlasesSuccess;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public OnCombinedTexturesCoroutineFail onBuiltAtlasesFail;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MB_AtlasesAndRects[] OnCombinedTexturesCoroutineAtlasesAndRects;

	[Token(Token = "0x17000009")]
	public override MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0x927724", Offset = "0x927724", VA = "0x927724", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x92772C", Offset = "0x92772C", VA = "0x92772C", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public virtual int atlasPadding
	{
		[Token(Token = "0x6000096")]
		[Address(RVA = "0x927734", Offset = "0x927734", VA = "0x927734", Slot = "7")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000097")]
		[Address(RVA = "0x92773C", Offset = "0x92773C", VA = "0x92773C", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public virtual int maxAtlasSize
	{
		[Token(Token = "0x6000098")]
		[Address(RVA = "0x927744", Offset = "0x927744", VA = "0x927744", Slot = "9")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000099")]
		[Address(RVA = "0x92774C", Offset = "0x92774C", VA = "0x92774C", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public virtual bool resizePowerOfTwoTextures
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x927754", Offset = "0x927754", VA = "0x927754", Slot = "11")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600009B")]
		[Address(RVA = "0x92775C", Offset = "0x92775C", VA = "0x92775C", Slot = "12")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public virtual bool fixOutOfBoundsUVs
	{
		[Token(Token = "0x600009C")]
		[Address(RVA = "0x927768", Offset = "0x927768", VA = "0x927768", Slot = "13")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600009D")]
		[Address(RVA = "0x927770", Offset = "0x927770", VA = "0x927770", Slot = "14")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public virtual int maxTilingBakeSize
	{
		[Token(Token = "0x600009E")]
		[Address(RVA = "0x92777C", Offset = "0x92777C", VA = "0x92777C", Slot = "15")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600009F")]
		[Address(RVA = "0x927784", Offset = "0x927784", VA = "0x927784", Slot = "16")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public virtual MB2_PackingAlgorithmEnum packingAlgorithm
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x92778C", Offset = "0x92778C", VA = "0x92778C", Slot = "17")]
		get
		{
			return default(MB2_PackingAlgorithmEnum);
		}
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x927794", Offset = "0x927794", VA = "0x927794", Slot = "18")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public bool meshBakerTexturePackerForcePowerOfTwo
	{
		[Token(Token = "0x60000A2")]
		[Address(RVA = "0x92779C", Offset = "0x92779C", VA = "0x92779C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x9277A4", Offset = "0x9277A4", VA = "0x9277A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public virtual List<ShaderTextureProperty> customShaderProperties
	{
		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x9277B0", Offset = "0x9277B0", VA = "0x9277B0", Slot = "19")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x9277B8", Offset = "0x9277B8", VA = "0x9277B8", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public virtual List<string> customShaderPropNames
	{
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x9277C0", Offset = "0x9277C0", VA = "0x9277C0", Slot = "21")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0x9277C8", Offset = "0x9277C8", VA = "0x9277C8", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public virtual bool doMultiMaterial
	{
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x9277D0", Offset = "0x9277D0", VA = "0x9277D0", Slot = "23")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x9277D8", Offset = "0x9277D8", VA = "0x9277D8", Slot = "24")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public virtual Material resultMaterial
	{
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x9277E4", Offset = "0x9277E4", VA = "0x9277E4", Slot = "25")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x9277EC", Offset = "0x9277EC", VA = "0x9277EC", Slot = "26")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public bool considerNonTextureProperties
	{
		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x9277F4", Offset = "0x9277F4", VA = "0x9277F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x9277FC", Offset = "0x9277FC", VA = "0x9277FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public bool doSuggestTreatment
	{
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x927808", Offset = "0x927808", VA = "0x927808")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x927810", Offset = "0x927810", VA = "0x927810")]
		set
		{
		}
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x92781C", Offset = "0x92781C", VA = "0x92781C", Slot = "6")]
	public override List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x927890", Offset = "0x927890", VA = "0x927890")]
	public MB_AtlasesAndRects[] CreateAtlases()
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x927C1C", Offset = "0x927C1C", VA = "0x927C1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57E714", Offset = "0x57E714")]
	public IEnumerator CreateAtlasesCoroutine(ProgressUpdateDelegate progressInfo, CreateAtlasesCoroutineResult coroutineResult, bool saveAtlasesAsAssets = false, [Optional] MB2_EditorMethodsInterface editorMethods, float maxTimePerFrame = 0.01f)
	{
		return null;
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x9278A0", Offset = "0x9278A0", VA = "0x9278A0")]
	public MB_AtlasesAndRects[] CreateAtlases(ProgressUpdateDelegate progressInfo, bool saveAtlasesAsAssets = false, [Optional] MB2_EditorMethodsInterface editorMethods)
	{
		return null;
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x927D08", Offset = "0x927D08", VA = "0x927D08")]
	private void unpackMat2RectMap(MB2_TextureBakeResults tbr)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x927F4C", Offset = "0x927F4C", VA = "0x927F4C")]
	public static void ConfigureNewMaterialToMatchOld(Material newMat, Material original)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x928284", Offset = "0x928284", VA = "0x928284")]
	private string PrintSet(HashSet<Material> s)
	{
		return null;
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x9283D0", Offset = "0x9283D0", VA = "0x9283D0")]
	private bool _ValidateResultMaterials()
	{
		return default(bool);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x928AD4", Offset = "0x928AD4", VA = "0x928AD4")]
	public MB3_TextureBaker()
	{
	}
}
[Token(Token = "0x2000020")]
public class MB2_TestShowHide : MonoBehaviour
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker mb;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objs;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x91EB34", Offset = "0x91EB34", VA = "0x91EB34")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x91EC78", Offset = "0x91EC78", VA = "0x91EC78")]
	public MB2_TestShowHide()
	{
	}
}
[Token(Token = "0x2000021")]
public class MB2_TestUpdate : MonoBehaviour
{
	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MB3_MultiMeshBaker multiMeshBaker;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] objsToMove;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objWithChangingUVs;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2[] uvs;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Mesh m;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x91EC80", Offset = "0x91EC80", VA = "0x91EC80")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x91EEA8", Offset = "0x91EEA8", VA = "0x91EEA8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x91F334", Offset = "0x91F334", VA = "0x91F334")]
	public MB2_TestUpdate()
	{
	}
}
[Token(Token = "0x2000022")]
public class MB3_TestAddingRemovingSkinnedMeshes : MonoBehaviour
{
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570568", Offset = "0x570568")]
	private sealed class <TestScript>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB3_TestAddingRemovingSkinnedMeshes <>4__this;

		[Token(Token = "0x17000192")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0x926860", Offset = "0x926860", VA = "0x926860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0x9268C8", Offset = "0x9268C8", VA = "0x9268C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x925F30", Offset = "0x925F30", VA = "0x925F30")]
		[DebuggerHidden]
		public <TestScript>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x925F64", Offset = "0x925F64", VA = "0x925F64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x925F68", Offset = "0x925F68", VA = "0x925F68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x926868", Offset = "0x926868", VA = "0x926868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] g;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x925E94", Offset = "0x925E94", VA = "0x925E94")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x925EC0", Offset = "0x925EC0", VA = "0x925EC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57E778", Offset = "0x57E778")]
	private IEnumerator TestScript()
	{
		return null;
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x925F5C", Offset = "0x925F5C", VA = "0x925F5C")]
	public MB3_TestAddingRemovingSkinnedMeshes()
	{
	}
}
[Token(Token = "0x2000023")]
public class MB3_TestBakeAllWithSameMaterial : MonoBehaviour
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] listOfObjsToCombineGood;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] listOfObjsToCombineBad;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x9268D0", Offset = "0x9268D0", VA = "0x9268D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x9268D4", Offset = "0x9268D4", VA = "0x9268D4")]
	private void testCombine()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x926C18", Offset = "0x926C18", VA = "0x926C18")]
	public MB3_TestBakeAllWithSameMaterial()
	{
	}
}
[Token(Token = "0x2000024")]
public class MB3_TestRenderTextureTestHarness : MonoBehaviour
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D input;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool doColor;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color32 color;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x926C20", Offset = "0x926C20", VA = "0x926C20")]
	public Texture2D Create3x3Tex()
	{
		return null;
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x926D40", Offset = "0x926D40", VA = "0x926D40")]
	public Texture2D Create3x3Clone()
	{
		return null;
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x926FD0", Offset = "0x926FD0", VA = "0x926FD0")]
	public static void TestRender(Texture2D input, Texture2D output)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x92771C", Offset = "0x92771C", VA = "0x92771C")]
	public MB3_TestRenderTextureTestHarness()
	{
	}
}
[Token(Token = "0x2000025")]
public class MB_TextureCombinerRenderTexture
{
	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material mat;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture _destinationTexture;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera myCamera;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _padding;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _isNormalMap;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool _fixOutOfBoundsUVs;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool _doRenderAtlas;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rect[] rs;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<MB3_TextureCombiner.MB_TexSet> textureSets;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int indexOfTexSetToRender;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ShaderTextureProperty _texPropertyName;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TextureBlender _resultMaterialTextureBlender;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D targTex;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MB3_TextureCombiner combiner;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x9218C0", Offset = "0x9218C0", VA = "0x9218C0")]
	public Texture2D DoRenderAtlas(GameObject gameObject, int width, int height, int padding, Rect[] rss, List<MB3_TextureCombiner.MB_TexSet> textureSetss, int indexOfTexSetToRenders, ShaderTextureProperty texPropertyname, TextureBlender resultMaterialTextureBlender, bool isNormalMap, bool fixOutOfBoundsUVs, bool considerNonTextureProperties, MB3_TextureCombiner texCombiner, MB2_LogLevel LOG_LEV)
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x921D30", Offset = "0x921D30", VA = "0x921D30")]
	public void OnRenderObject()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x92D394", Offset = "0x92D394", VA = "0x92D394")]
	private Color32 ConvertNormalFormatFromUnity_ToStandard(Color32 c)
	{
		return default(Color32);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x92D338", Offset = "0x92D338", VA = "0x92D338")]
	private bool IsOpenGL()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x92C244", Offset = "0x92C244", VA = "0x92C244")]
	private void CopyScaledAndTiledToAtlas(MB3_TextureCombiner.MB_TexSet texSet, MB3_TextureCombiner.MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, Rect rec, ShaderTextureProperty texturePropertyName, TextureBlender resultMatTexBlender)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x92BF5C", Offset = "0x92BF5C", VA = "0x92BF5C")]
	private void _printTexture(Texture2D t)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x9218B0", Offset = "0x9218B0", VA = "0x9218B0")]
	public MB_TextureCombinerRenderTexture()
	{
	}
}
[Token(Token = "0x2000026")]
[ExecuteInEditMode]
public class MB3_AtlasPackerRenderTexture : MonoBehaviour
{
	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MB_TextureCombinerRenderTexture fastRenderer;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _doRenderAtlas;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int width;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int height;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int padding;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isNormalMap;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool fixOutOfBoundsUVs;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool considerNonTextureProperties;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextureBlender resultMaterialTextureBlender;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rect[] rects;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D tex1;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<MB3_TextureCombiner.MB_TexSet> textureSets;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int indexOfTexSetToRender;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ShaderTextureProperty texPropertyName;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D testTex;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material testMat;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x9217CC", Offset = "0x9217CC", VA = "0x9217CC")]
	public Texture2D OnRenderAtlas(MB3_TextureCombiner combiner)
	{
		return null;
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x921CF8", Offset = "0x921CF8", VA = "0x921CF8")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x9228C0", Offset = "0x9228C0", VA = "0x9228C0")]
	public MB3_AtlasPackerRenderTexture()
	{
	}
}
[Token(Token = "0x2000027")]
public class MB3_KMeansClustering
{
	[Token(Token = "0x2000317")]
	private class DataPoint
	{
		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Cluster;

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x922F18", Offset = "0x922F18", VA = "0x922F18")]
		public DataPoint(GameObject go)
		{
		}
	}

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<DataPoint> _normalizedDataToCluster;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] _clusters;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _numberOfClusters;

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x922C64", Offset = "0x922C64", VA = "0x922C64")]
	public MB3_KMeansClustering(List<GameObject> gos, int numClusters)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x923044", Offset = "0x923044", VA = "0x923044")]
	private void InitializeCentroids()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x92313C", Offset = "0x92313C", VA = "0x92313C")]
	private bool UpdateDataPointMeans(bool force)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x9233E0", Offset = "0x9233E0", VA = "0x9233E0")]
	private bool AnyAreEmpty(List<DataPoint> data)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x9234F8", Offset = "0x9234F8", VA = "0x9234F8")]
	private bool UpdateClusterMembership()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x9236C0", Offset = "0x9236C0", VA = "0x9236C0")]
	private float ElucidanDistance(DataPoint dataPoint, Vector3 mean)
	{
		return default(float);
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x923770", Offset = "0x923770", VA = "0x923770")]
	private int MinIndex(float[] distances)
	{
		return default(int);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x9237E0", Offset = "0x9237E0", VA = "0x9237E0")]
	public List<Renderer> GetCluster(int idx, out Vector3 mean, out float size)
	{
		return null;
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x923AFC", Offset = "0x923AFC", VA = "0x923AFC")]
	public void Cluster()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x56EC5C", Offset = "0x56EC5C")]
public class FastList<T>
{
	[Token(Token = "0x2000318")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570578", Offset = "0x570578")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000194")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x600156B")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000195")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600156D")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001568")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001569")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600156A")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600156C")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000017")]
	public int Count
	{
		[Token(Token = "0x60000DD")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000DE")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public T Item
	{
		[Token(Token = "0x60000DF")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60000E0")]
		set
		{
		}
	}

	[Token(Token = "0x60000DB")]
	public FastList()
	{
	}

	[Token(Token = "0x60000DC")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60000E1")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60000E2")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x60000E3")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x60000E4")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60000E5")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E6")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60000E7")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E8")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x60000E9")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EA")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60000EB")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60000EC")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000EE")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000EF")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57E7DC", Offset = "0x57E7DC")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x60000F1")]
	private void Allocate()
	{
	}

	[Token(Token = "0x60000F2")]
	private void Trim()
	{
	}

	[Token(Token = "0x60000F3")]
	public void Clear()
	{
	}

	[Token(Token = "0x60000F4")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000029")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string header;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly string message;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x86D860", Offset = "0x86D860", VA = "0x86D860")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200002A")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x86D834", Offset = "0x86D834", VA = "0x86D834")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200002B")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200031A")]
	public delegate void OnClick();

	[Token(Token = "0x200031B")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200031C")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200031D")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570588", Offset = "0x570588")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x71DC8C", Offset = "0x71DC8C", VA = "0x71DC8C")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x71E62C", Offset = "0x71E62C", VA = "0x71E62C")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570598", Offset = "0x570598")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x71DF00", Offset = "0x71DF00", VA = "0x71DF00")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x71E850", Offset = "0x71E850", VA = "0x71E850")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5705A8", Offset = "0x5705A8")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x71E118", Offset = "0x71E118", VA = "0x71E118")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x71EAC8", Offset = "0x71EAC8", VA = "0x71EAC8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5705B8", Offset = "0x5705B8")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x71E2AC", Offset = "0x71E2AC", VA = "0x71E2AC")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x71EE7C", Offset = "0x71EE7C", VA = "0x71EE7C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5705C8", Offset = "0x5705C8")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x71E504", Offset = "0x71E504", VA = "0x71E504")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x71EE9C", Offset = "0x71EE9C", VA = "0x71EE9C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40000DC")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40000DD")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40000DE")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40000EB")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40000EC")]
	private const float marginH = 16f;

	[Token(Token = "0x40000ED")]
	private const float marginV = 16f;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x71CC38", Offset = "0x71CC38", VA = "0x71CC38")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x71D03C", Offset = "0x71D03C", VA = "0x71D03C")]
	public void Show()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x71D608", Offset = "0x71D608", VA = "0x71D608")]
	public void Hide()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x71D3B4", Offset = "0x71D3B4", VA = "0x71D3B4")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x71D7B0", Offset = "0x71D7B0", VA = "0x71D7B0")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x71DA64", Offset = "0x71DA64", VA = "0x71DA64")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x71DC94", Offset = "0x71DC94", VA = "0x71DC94")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x71DD78", Offset = "0x71DD78", VA = "0x71DD78")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x71DF08", Offset = "0x71DF08", VA = "0x71DF08")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x71DFA4", Offset = "0x71DFA4", VA = "0x71DFA4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x71E120", Offset = "0x71E120", VA = "0x71E120")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x71E2B4", Offset = "0x71E2B4", VA = "0x71E2B4")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x71E50C", Offset = "0x71E50C", VA = "0x71E50C")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x71E5BC", Offset = "0x71E5BC", VA = "0x71E5BC")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200002C")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x86BA64", Offset = "0x86BA64", VA = "0x86BA64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x86BAEC", Offset = "0x86BAEC", VA = "0x86BAEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x86BBB4", Offset = "0x86BBB4", VA = "0x86BBB4")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x86BBF0", Offset = "0x86BBF0", VA = "0x86BBF0")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200002D")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000323")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40015DD")]
		On,
		[Token(Token = "0x40015DE")]
		Off,
		[Token(Token = "0x40015DF")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000019")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x86DE38", Offset = "0x86DE38", VA = "0x86DE38")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x86DDF4", Offset = "0x86DDF4", VA = "0x86DDF4")]
		set
		{
		}
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x86DE40", Offset = "0x86DE40", VA = "0x86DE40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x86DE98", Offset = "0x86DE98", VA = "0x86DE98")]
	private void Start()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x86DFB0", Offset = "0x86DFB0", VA = "0x86DFB0", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x86DFCC", Offset = "0x86DFCC", VA = "0x86DFCC", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x86E020", Offset = "0x86E020", VA = "0x86E020")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x86E27C", Offset = "0x86E27C", VA = "0x86E27C")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x86E390", Offset = "0x86E390", VA = "0x86E390")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x86E424", Offset = "0x86E424", VA = "0x86E424")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x86E4F4", Offset = "0x86E4F4", VA = "0x86E4F4")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x86E5AC", Offset = "0x86E5AC", VA = "0x86E5AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x86E678", Offset = "0x86E678", VA = "0x86E678")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200002E")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000101")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000102")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000103")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572578", Offset = "0x572578")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5725B0", Offset = "0x5725B0")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5725E8", Offset = "0x5725E8")]
	public float HeightOffset;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572620", Offset = "0x572620")]
	public float MinimumHeight;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572658", Offset = "0x572658")]
	public float MaximumHeight;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x7195C8", Offset = "0x7195C8", VA = "0x7195C8")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x7195D0", Offset = "0x7195D0", VA = "0x7195D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x719640", Offset = "0x719640", VA = "0x719640")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x7196CC", Offset = "0x7196CC", VA = "0x7196CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x719758", Offset = "0x719758", VA = "0x719758")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x719B60", Offset = "0x719B60", VA = "0x719B60")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x719E08", Offset = "0x719E08", VA = "0x719E08")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200002F")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x874F24", Offset = "0x874F24", VA = "0x874F24")]
	private void Start()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x874FD0", Offset = "0x874FD0", VA = "0x874FD0")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000030")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000324")]
	public enum States
	{
		[Token(Token = "0x40015E1")]
		Ready,
		[Token(Token = "0x40015E2")]
		Aim,
		[Token(Token = "0x40015E3")]
		CancelAim,
		[Token(Token = "0x40015E4")]
		PreTeleport,
		[Token(Token = "0x40015E5")]
		CancelTeleport,
		[Token(Token = "0x40015E6")]
		Teleporting,
		[Token(Token = "0x40015E7")]
		PostTeleport
	}

	[Token(Token = "0x2000325")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40015E9")]
		None,
		[Token(Token = "0x40015EA")]
		Aim,
		[Token(Token = "0x40015EB")]
		PreTeleport,
		[Token(Token = "0x40015EC")]
		Teleport
	}

	[Token(Token = "0x2000326")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40015EE")]
		Point,
		[Token(Token = "0x40015EF")]
		Sphere,
		[Token(Token = "0x40015F0")]
		Capsule
	}

	[Token(Token = "0x2000327")]
	public class AimData
	{
		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E568", Offset = "0x57E568")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000196")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x91E93C", Offset = "0x91E93C", VA = "0x91E93C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582BE8", Offset = "0x582BE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600158A")]
			[Address(RVA = "0x91E944", Offset = "0x91E944", VA = "0x91E944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582BF8", Offset = "0x582BF8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x91E8C8", Offset = "0x91E8C8", VA = "0x91E8C8")]
		public AimData()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x91E94C", Offset = "0x91E94C", VA = "0x91E94C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5705D8", Offset = "0x5705D8")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000197")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x91E6E0", Offset = "0x91E6E0", VA = "0x91E6E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x91E748", Offset = "0x91E748", VA = "0x91E748", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x91E5C4", Offset = "0x91E5C4", VA = "0x91E5C4")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x91E5F0", Offset = "0x91E5F0", VA = "0x91E5F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x91E5F4", Offset = "0x91E5F4", VA = "0x91E5F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x91E6E8", Offset = "0x91E6E8", VA = "0x91E6E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5705E8", Offset = "0x5705E8")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000199")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x91DFCC", Offset = "0x91DFCC", VA = "0x91DFCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0x91E034", Offset = "0x91E034", VA = "0x91E034", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x91DE5C", Offset = "0x91DE5C", VA = "0x91DE5C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x91DE88", Offset = "0x91DE88", VA = "0x91DE88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x91DE8C", Offset = "0x91DE8C", VA = "0x91DE8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x91DFD4", Offset = "0x91DFD4", VA = "0x91DFD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5705F8", Offset = "0x5705F8")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700019B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600159B")]
			[Address(RVA = "0x91E10C", Offset = "0x91E10C", VA = "0x91E10C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600159D")]
			[Address(RVA = "0x91E174", Offset = "0x91E174", VA = "0x91E174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x91E03C", Offset = "0x91E03C", VA = "0x91E03C")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x91E068", Offset = "0x91E068", VA = "0x91E068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x91E06C", Offset = "0x91E06C", VA = "0x91E06C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x91E114", Offset = "0x91E114", VA = "0x91E114", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570608", Offset = "0x570608")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700019D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x91E554", Offset = "0x91E554", VA = "0x91E554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x91E5BC", Offset = "0x91E5BC", VA = "0x91E5BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x91E444", Offset = "0x91E444", VA = "0x91E444")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x91E470", Offset = "0x91E470", VA = "0x91E470", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x91E474", Offset = "0x91E474", VA = "0x91E474", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x91E55C", Offset = "0x91E55C", VA = "0x91E55C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570618", Offset = "0x570618")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700019F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x91E24C", Offset = "0x91E24C", VA = "0x91E24C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x91E2B4", Offset = "0x91E2B4", VA = "0x91E2B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x91E17C", Offset = "0x91E17C", VA = "0x91E17C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x91E1A8", Offset = "0x91E1A8", VA = "0x91E1A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x91E1AC", Offset = "0x91E1AC", VA = "0x91E1AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x91E254", Offset = "0x91E254", VA = "0x91E254", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570628", Offset = "0x570628")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x91E858", Offset = "0x91E858", VA = "0x91E858", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0x91E8C0", Offset = "0x91E8C0", VA = "0x91E8C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x91E750", Offset = "0x91E750", VA = "0x91E750")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x91E77C", Offset = "0x91E77C", VA = "0x91E77C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x91E780", Offset = "0x91E780", VA = "0x91E780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x91E860", Offset = "0x91E860", VA = "0x91E860", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570638", Offset = "0x570638")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x91E3D4", Offset = "0x91E3D4", VA = "0x91E3D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x91E43C", Offset = "0x91E43C", VA = "0x91E43C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x91E2BC", Offset = "0x91E2BC", VA = "0x91E2BC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x91E2E8", Offset = "0x91E2E8", VA = "0x91E2E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x91E2EC", Offset = "0x91E2EC", VA = "0x91E2EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x91E3DC", Offset = "0x91E3DC", VA = "0x91E3DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572690", Offset = "0x572690")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5726C8", Offset = "0x5726C8")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572700", Offset = "0x572700")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572738", Offset = "0x572738")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572770", Offset = "0x572770")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5727A8", Offset = "0x5727A8")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5727E0", Offset = "0x5727E0")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572818", Offset = "0x572818")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572850", Offset = "0x572850")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572860", Offset = "0x572860")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572898", Offset = "0x572898")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5728E0", Offset = "0x5728E0")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5728F0", Offset = "0x5728F0")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572928", Offset = "0x572928")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572960", Offset = "0x572960")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572998", Offset = "0x572998")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700001A")]
	public States CurrentState
	{
		[Token(Token = "0x6000121")]
		[Address(RVA = "0x8759B4", Offset = "0x8759B4", VA = "0x8759B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E840", Offset = "0x57E840")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000122")]
		[Address(RVA = "0x8759BC", Offset = "0x8759BC", VA = "0x8759BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E850", Offset = "0x57E850")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000126")]
		[Address(RVA = "0x875BEC", Offset = "0x875BEC", VA = "0x875BEC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700001C")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000127")]
		[Address(RVA = "0x875C14", Offset = "0x875C14", VA = "0x875C14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E880", Offset = "0x57E880")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x875C1C", Offset = "0x875C1C", VA = "0x875C1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E890", Offset = "0x57E890")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0x8759C4", Offset = "0x8759C4", VA = "0x8759C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E860", Offset = "0x57E860")]
		add
		{
		}
		[Token(Token = "0x6000124")]
		[Address(RVA = "0x875A68", Offset = "0x875A68", VA = "0x875A68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E870", Offset = "0x57E870")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000132")]
		[Address(RVA = "0x876328", Offset = "0x876328", VA = "0x876328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E8D8", Offset = "0x57E8D8")]
		add
		{
		}
		[Token(Token = "0x6000133")]
		[Address(RVA = "0x8763CC", Offset = "0x8763CC", VA = "0x8763CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E8E8", Offset = "0x57E8E8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000135")]
		[Address(RVA = "0x876470", Offset = "0x876470", VA = "0x876470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E95C", Offset = "0x57E95C")]
		add
		{
		}
		[Token(Token = "0x6000136")]
		[Address(RVA = "0x876514", Offset = "0x876514", VA = "0x876514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E96C", Offset = "0x57E96C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000137")]
		[Address(RVA = "0x8765B8", Offset = "0x8765B8", VA = "0x8765B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E97C", Offset = "0x57E97C")]
		add
		{
		}
		[Token(Token = "0x6000138")]
		[Address(RVA = "0x87665C", Offset = "0x87665C", VA = "0x87665C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E98C", Offset = "0x57E98C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600013A")]
		[Address(RVA = "0x876774", Offset = "0x876774", VA = "0x876774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E99C", Offset = "0x57E99C")]
		add
		{
		}
		[Token(Token = "0x600013B")]
		[Address(RVA = "0x876818", Offset = "0x876818", VA = "0x876818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E9AC", Offset = "0x57E9AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x600013D")]
		[Address(RVA = "0x87692C", Offset = "0x87692C", VA = "0x87692C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EA20", Offset = "0x57EA20")]
		add
		{
		}
		[Token(Token = "0x600013E")]
		[Address(RVA = "0x8769D0", Offset = "0x8769D0", VA = "0x8769D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EA30", Offset = "0x57EA30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000140")]
		[Address(RVA = "0x876AE4", Offset = "0x876AE4", VA = "0x876AE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EAA4", Offset = "0x57EAA4")]
		add
		{
		}
		[Token(Token = "0x6000141")]
		[Address(RVA = "0x876B88", Offset = "0x876B88", VA = "0x876B88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EAB4", Offset = "0x57EAB4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000143")]
		[Address(RVA = "0x876C9C", Offset = "0x876C9C", VA = "0x876C9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB28", Offset = "0x57EB28")]
		add
		{
		}
		[Token(Token = "0x6000144")]
		[Address(RVA = "0x876D40", Offset = "0x876D40", VA = "0x876D40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EB38", Offset = "0x57EB38")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000146")]
		[Address(RVA = "0x876E54", Offset = "0x876E54", VA = "0x876E54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EBAC", Offset = "0x57EBAC")]
		add
		{
		}
		[Token(Token = "0x6000147")]
		[Address(RVA = "0x876EF8", Offset = "0x876EF8", VA = "0x876EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EBBC", Offset = "0x57EBBC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000149")]
		[Address(RVA = "0x87700C", Offset = "0x87700C", VA = "0x87700C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EC30", Offset = "0x57EC30")]
		add
		{
		}
		[Token(Token = "0x600014A")]
		[Address(RVA = "0x8770B0", Offset = "0x8770B0", VA = "0x8770B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EC40", Offset = "0x57EC40")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600014C")]
		[Address(RVA = "0x8771C4", Offset = "0x8771C4", VA = "0x8771C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ECB4", Offset = "0x57ECB4")]
		add
		{
		}
		[Token(Token = "0x600014D")]
		[Address(RVA = "0x877268", Offset = "0x877268", VA = "0x877268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ECC4", Offset = "0x57ECC4")]
		remove
		{
		}
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x875684", Offset = "0x875684", VA = "0x875684")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x8756A8", Offset = "0x8756A8", VA = "0x8756A8")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x875B0C", Offset = "0x875B0C", VA = "0x875B0C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x875C24", Offset = "0x875C24", VA = "0x875C24")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x875F7C", Offset = "0x875F7C", VA = "0x875F7C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x57E8A0", Offset = "0x57E8A0")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x876034", Offset = "0x876034", VA = "0x876034")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x8760FC", Offset = "0x8760FC", VA = "0x8760FC")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x876118", Offset = "0x876118", VA = "0x876118")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x8761E0", Offset = "0x8761E0", VA = "0x8761E0")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x876224", Offset = "0x876224", VA = "0x876224")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x876280", Offset = "0x876280", VA = "0x876280", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x876320", Offset = "0x876320", VA = "0x876320", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x8762B0", Offset = "0x8762B0", VA = "0x8762B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57E8F8", Offset = "0x57E8F8")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x876700", Offset = "0x876700", VA = "0x876700")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x8768BC", Offset = "0x8768BC", VA = "0x8768BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57E9BC", Offset = "0x57E9BC")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x876A74", Offset = "0x876A74", VA = "0x876A74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57EA40", Offset = "0x57EA40")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x876C2C", Offset = "0x876C2C", VA = "0x876C2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57EAC4", Offset = "0x57EAC4")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x876DE4", Offset = "0x876DE4", VA = "0x876DE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57EB48", Offset = "0x57EB48")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x876F9C", Offset = "0x876F9C", VA = "0x876F9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57EBCC", Offset = "0x57EBCC")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x877154", Offset = "0x877154", VA = "0x877154")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57EC50", Offset = "0x57EC50")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x87730C", Offset = "0x87730C", VA = "0x87730C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x877450", Offset = "0x877450", VA = "0x877450")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x877484", Offset = "0x877484", VA = "0x877484")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x8775A4", Offset = "0x8775A4", VA = "0x8775A4")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x8776D0", Offset = "0x8776D0", VA = "0x8776D0")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000031")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x7486C0", Offset = "0x7486C0", VA = "0x7486C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ECD4", Offset = "0x57ECD4")]
		add
		{
		}
		[Token(Token = "0x6000154")]
		[Address(RVA = "0x748764", Offset = "0x748764", VA = "0x748764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ECE4", Offset = "0x57ECE4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000155")]
		[Address(RVA = "0x748808", Offset = "0x748808", VA = "0x748808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ECF4", Offset = "0x57ECF4")]
		add
		{
		}
		[Token(Token = "0x6000156")]
		[Address(RVA = "0x7488AC", Offset = "0x7488AC", VA = "0x7488AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ED04", Offset = "0x57ED04")]
		remove
		{
		}
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x748950", Offset = "0x748950", VA = "0x748950")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x7489F8", Offset = "0x7489F8", VA = "0x7489F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x7489FC", Offset = "0x7489FC", VA = "0x7489FC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x748A70", Offset = "0x748A70", VA = "0x748A70")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x748BE0", Offset = "0x748BE0", VA = "0x748BE0")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x748EC4", Offset = "0x748EC4", VA = "0x748EC4")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x7490B4", Offset = "0x7490B4", VA = "0x7490B4")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000032")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x600015E")]
	[Address(RVA = "0x96FBD4", Offset = "0x96FBD4", VA = "0x96FBD4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x96FC68", Offset = "0x96FC68", VA = "0x96FC68", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000160")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x96FD38", Offset = "0x96FD38", VA = "0x96FD38")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000033")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572A90", Offset = "0x572A90")]
	public float Range;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x96FD48", Offset = "0x96FD48", VA = "0x96FD48", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x96FEA4", Offset = "0x96FEA4", VA = "0x96FEA4")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000034")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572AC8", Offset = "0x572AC8")]
	public float Range;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572B00", Offset = "0x572B00")]
	public float MinimumElevation;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572B38", Offset = "0x572B38")]
	public float Gravity;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572B70", Offset = "0x572B70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x572B70", Offset = "0x572B70")]
	public float AimVelocity;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572BCC", Offset = "0x572BCC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x572BCC", Offset = "0x572BCC")]
	public float AimStep;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x96FEB4", Offset = "0x96FEB4", VA = "0x96FEB4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x970100", Offset = "0x970100", VA = "0x970100")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000035")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572C24", Offset = "0x572C24")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x970114", Offset = "0x970114", VA = "0x970114")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x9701F8", Offset = "0x9701F8", VA = "0x9701F8")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x970228", Offset = "0x970228", VA = "0x970228")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x970258", Offset = "0x970258", VA = "0x970258")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x9702F8", Offset = "0x9702F8", VA = "0x9702F8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x970364", Offset = "0x970364", VA = "0x970364", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x9703CC", Offset = "0x9703CC", VA = "0x9703CC")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000036")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572C5C", Offset = "0x572C5C")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572C6C", Offset = "0x572C6C")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572CA4", Offset = "0x572CA4")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572CDC", Offset = "0x572CDC")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700001D")]
	public bool IsValidDestination
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x9704E8", Offset = "0x9704E8", VA = "0x9704E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ED14", Offset = "0x57ED14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x9704F0", Offset = "0x9704F0", VA = "0x9704F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ED24", Offset = "0x57ED24")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000173")]
		[Address(RVA = "0x9706A0", Offset = "0x9706A0", VA = "0x9706A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ED34", Offset = "0x57ED34")]
		add
		{
		}
		[Token(Token = "0x6000174")]
		[Address(RVA = "0x970744", Offset = "0x970744", VA = "0x970744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57ED44", Offset = "0x57ED44")]
		remove
		{
		}
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x9704FC", Offset = "0x9704FC", VA = "0x9704FC")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x970584", Offset = "0x970584", VA = "0x970584")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x97065C", Offset = "0x97065C", VA = "0x97065C")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x97069C", Offset = "0x97069C", VA = "0x97069C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x9707E8", Offset = "0x9707E8", VA = "0x9707E8")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x970850", Offset = "0x970850", VA = "0x970850")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x970870", Offset = "0x970870", VA = "0x970870", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000037")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570648", Offset = "0x570648")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170001A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0x970F34", Offset = "0x970F34", VA = "0x970F34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x970F9C", Offset = "0x970F9C", VA = "0x970F9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x970C80", Offset = "0x970C80", VA = "0x970C80")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x970EA4", Offset = "0x970EA4", VA = "0x970EA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x970EA8", Offset = "0x970EA8", VA = "0x970EA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x970F3C", Offset = "0x970F3C", VA = "0x970F3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570658", Offset = "0x570658")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170001A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015BF")]
			[Address(RVA = "0x970E34", Offset = "0x970E34", VA = "0x970E34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x970E9C", Offset = "0x970E9C", VA = "0x970E9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x970D1C", Offset = "0x970D1C", VA = "0x970D1C")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x970DA0", Offset = "0x970DA0", VA = "0x970DA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x970DA4", Offset = "0x970DA4", VA = "0x970DA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x970E3C", Offset = "0x970E3C", VA = "0x970E3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x970A50", Offset = "0x970A50", VA = "0x970A50")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x970AFC", Offset = "0x970AFC", VA = "0x970AFC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x970B54", Offset = "0x970B54", VA = "0x970B54", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x970C10", Offset = "0x970C10", VA = "0x970C10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57ED54", Offset = "0x57ED54")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x970CAC", Offset = "0x970CAC", VA = "0x970CAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57EDB8", Offset = "0x57EDB8")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x600017E")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x970D48", Offset = "0x970D48", VA = "0x970D48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EE1C", Offset = "0x57EE1C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x970D74", Offset = "0x970D74", VA = "0x970D74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EE2C", Offset = "0x57EE2C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000038")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572D24", Offset = "0x572D24")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572D34", Offset = "0x572D34")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572D6C", Offset = "0x572D6C")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572DA4", Offset = "0x572DA4")]
	public bool FastTeleport;

	[Token(Token = "0x1700001E")]
	public Transform Pointer
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x970FA4", Offset = "0x970FA4", VA = "0x970FA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EE3C", Offset = "0x57EE3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x970FAC", Offset = "0x970FAC", VA = "0x970FAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EE4C", Offset = "0x57EE4C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x970FB4", Offset = "0x970FB4", VA = "0x970FB4", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x971110", Offset = "0x971110", VA = "0x971110", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x9711C8", Offset = "0x9711C8", VA = "0x9711C8")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000039")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000331")]
	public enum InputModes
	{
		[Token(Token = "0x4001612")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001613")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001614")]
		ThumbstickTeleport,
		[Token(Token = "0x4001615")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000332")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001617")]
		A,
		[Token(Token = "0x4001618")]
		B,
		[Token(Token = "0x4001619")]
		LeftTrigger,
		[Token(Token = "0x400161A")]
		LeftThumbstick,
		[Token(Token = "0x400161B")]
		RightTrigger,
		[Token(Token = "0x400161C")]
		RightThumbstick,
		[Token(Token = "0x400161D")]
		X,
		[Token(Token = "0x400161E")]
		Y
	}

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572DDC", Offset = "0x572DDC")]
	public InputModes InputMode;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572E14", Offset = "0x572E14")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572E4C", Offset = "0x572E4C")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572E84", Offset = "0x572E84")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x9711CC", Offset = "0x9711CC", VA = "0x9711CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x9711D0", Offset = "0x9711D0", VA = "0x9711D0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x971618", Offset = "0x971618", VA = "0x971618", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x9716D8", Offset = "0x9716D8", VA = "0x9716D8")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200003A")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000333")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001620")]
		HeadRelative,
		[Token(Token = "0x4001621")]
		ForwardFacing
	}

	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570668", Offset = "0x570668")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170001A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015C5")]
			[Address(RVA = "0x971B68", Offset = "0x971B68", VA = "0x971B68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x971BD0", Offset = "0x971BD0", VA = "0x971BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x971944", Offset = "0x971944", VA = "0x971944")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x971AC0", Offset = "0x971AC0", VA = "0x971AC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x971AC4", Offset = "0x971AC4", VA = "0x971AC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x971B70", Offset = "0x971B70", VA = "0x971B70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x971784", Offset = "0x971784", VA = "0x971784")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x971838", Offset = "0x971838", VA = "0x971838")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x971840", Offset = "0x971840", VA = "0x971840", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x97188C", Offset = "0x97188C", VA = "0x97188C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x9718D4", Offset = "0x9718D4", VA = "0x9718D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57EE5C", Offset = "0x57EE5C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600018F")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000190")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x971970", Offset = "0x971970", VA = "0x971970")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x971A94", Offset = "0x971A94", VA = "0x971A94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EEC0", Offset = "0x57EEC0")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200003B")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000193")]
	[Address(RVA = "0x971BD8", Offset = "0x971BD8", VA = "0x971BD8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x971BDC", Offset = "0x971BDC", VA = "0x971BDC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x971C58", Offset = "0x971C58", VA = "0x971C58")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200003C")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572EBC", Offset = "0x572EBC")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572EF4", Offset = "0x572EF4")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572F2C", Offset = "0x572F2C")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572F64", Offset = "0x572F64")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x971C5C", Offset = "0x971C5C", VA = "0x971C5C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x971CCC", Offset = "0x971CCC", VA = "0x971CCC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x972144", Offset = "0x972144", VA = "0x972144")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200003D")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572F9C", Offset = "0x572F9C")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x572FD4", Offset = "0x572FD4")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57300C", Offset = "0x57300C")]
	public float RotateStickThreshold;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x972148", Offset = "0x972148", VA = "0x972148", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x97218C", Offset = "0x97218C", VA = "0x97218C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x9725FC", Offset = "0x9725FC", VA = "0x9725FC")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200003E")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x97260C", Offset = "0x97260C", VA = "0x97260C")]
	private void Start()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x972610", Offset = "0x972610", VA = "0x972610")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x972618", Offset = "0x972618", VA = "0x972618")]
	private void Update()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x972700", Offset = "0x972700", VA = "0x972700")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x972728", Offset = "0x972728", VA = "0x972728")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200003F")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573044", Offset = "0x573044")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700001F")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x972740", Offset = "0x972740", VA = "0x972740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EED0", Offset = "0x57EED0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x972748", Offset = "0x972748", VA = "0x972748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EEE0", Offset = "0x57EEE0")]
		private set
		{
		}
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x96FC04", Offset = "0x96FC04", VA = "0x96FC04", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x96FD0C", Offset = "0x96FD0C", VA = "0x96FD0C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x972750", Offset = "0x972750", VA = "0x972750")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x57EEF0", Offset = "0x57EEF0")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x970358", Offset = "0x970358", VA = "0x970358", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x9703C4", Offset = "0x9703C4", VA = "0x9703C4", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x96FD40", Offset = "0x96FD40", VA = "0x96FD40")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000040")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000335")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570678", Offset = "0x570678")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170001AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x972DA4", Offset = "0x972DA4", VA = "0x972DA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x972E0C", Offset = "0x972E0C", VA = "0x972E0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x9729A0", Offset = "0x9729A0", VA = "0x9729A0")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x972B38", Offset = "0x972B38", VA = "0x972B38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x972B3C", Offset = "0x972B3C", VA = "0x972B3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x972DAC", Offset = "0x972DAC", VA = "0x972DAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x573054", Offset = "0x573054")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000178")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x972818", Offset = "0x972818", VA = "0x972818")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x9728DC", Offset = "0x9728DC", VA = "0x9728DC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x972908", Offset = "0x972908", VA = "0x972908", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x972930", Offset = "0x972930", VA = "0x972930")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57EF28", Offset = "0x57EF28")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x9729CC", Offset = "0x9729CC", VA = "0x9729CC", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60001AE")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x9729E8", Offset = "0x9729E8", VA = "0x9729E8", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x972B0C", Offset = "0x972B0C", VA = "0x972B0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57EF8C", Offset = "0x57EF8C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000041")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x972E14", Offset = "0x972E14", VA = "0x972E14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x972E74", Offset = "0x972E74", VA = "0x972E74", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x972FF8", Offset = "0x972FF8", VA = "0x972FF8", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x9730E8", Offset = "0x9730E8", VA = "0x9730E8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x57EF9C", Offset = "0x57EF9C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x9730EC", Offset = "0x9730EC", VA = "0x9730EC")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000042")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57308C", Offset = "0x57308C")]
	public float LOSOffset;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5730C4", Offset = "0x5730C4")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x9730F8", Offset = "0x9730F8", VA = "0x9730F8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x973328", Offset = "0x973328", VA = "0x973328")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000043")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x973334", Offset = "0x973334", VA = "0x973334", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x9734B8", Offset = "0x9734B8", VA = "0x9734B8")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000044")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x9734BC", Offset = "0x9734BC", VA = "0x9734BC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x973554", Offset = "0x973554", VA = "0x973554", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001BC")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x9735E8", Offset = "0x9735E8", VA = "0x9735E8")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000045")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570688", Offset = "0x570688")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170001AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0x973950", Offset = "0x973950", VA = "0x973950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0x9739B8", Offset = "0x9739B8", VA = "0x9739B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x97368C", Offset = "0x97368C", VA = "0x97368C")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x973850", Offset = "0x973850", VA = "0x973850", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x973854", Offset = "0x973854", VA = "0x973854", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x973958", Offset = "0x973958", VA = "0x973958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5730FC", Offset = "0x5730FC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5730FC", Offset = "0x5730FC")]
	public float TransitionDuration;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x573154", Offset = "0x573154")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x573154", Offset = "0x573154")]
	public float TeleportDelay;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5731A8", Offset = "0x5731A8")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x9735F0", Offset = "0x9735F0", VA = "0x9735F0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x97361C", Offset = "0x97361C", VA = "0x97361C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57EFD4", Offset = "0x57EFD4")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x9736B8", Offset = "0x9736B8", VA = "0x9736B8")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000046")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x9739C0", Offset = "0x9739C0", VA = "0x9739C0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x9739DC", Offset = "0x9739DC", VA = "0x9739DC")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000047")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570698", Offset = "0x570698")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170001AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0x973C28", Offset = "0x973C28", VA = "0x973C28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0x973C90", Offset = "0x973C90", VA = "0x973C90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x973A80", Offset = "0x973A80", VA = "0x973A80")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x973AF4", Offset = "0x973AF4", VA = "0x973AF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x973AF8", Offset = "0x973AF8", VA = "0x973AF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x973C30", Offset = "0x973C30", VA = "0x973C30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5731E0", Offset = "0x5731E0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5731E0", Offset = "0x5731E0")]
	public float TransitionDuration;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x9739E4", Offset = "0x9739E4", VA = "0x9739E4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x973A10", Offset = "0x973A10", VA = "0x973A10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57F038", Offset = "0x57F038")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x973AAC", Offset = "0x973AAC", VA = "0x973AAC")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000048")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000338")]
	public enum PlabackState
	{
		[Token(Token = "0x4001634")]
		Idle = 1,
		[Token(Token = "0x4001635")]
		Preparing,
		[Token(Token = "0x4001636")]
		Buffering,
		[Token(Token = "0x4001637")]
		Ready,
		[Token(Token = "0x4001638")]
		Ended
	}

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000020")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x933E1C", Offset = "0x933E1C", VA = "0x933E1C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000021")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x9340D8", Offset = "0x9340D8", VA = "0x9340D8")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000022")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x9312C4", Offset = "0x9312C4", VA = "0x9312C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000023")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x93252C", Offset = "0x93252C", VA = "0x93252C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000024")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x93431C", Offset = "0x93431C", VA = "0x93431C")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000025")]
	public static long Duration
	{
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x932710", Offset = "0x932710", VA = "0x932710")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000026")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x93261C", Offset = "0x93261C", VA = "0x93261C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x931CF0", Offset = "0x931CF0", VA = "0x931CF0")]
		set
		{
		}
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x932D70", Offset = "0x932D70", VA = "0x932D70")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x932AB4", Offset = "0x932AB4", VA = "0x932AB4")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x931980", Offset = "0x931980", VA = "0x931980")]
	public static void Play()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x931B04", Offset = "0x931B04", VA = "0x931B04")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x9328DC", Offset = "0x9328DC", VA = "0x9328DC")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x932F64", Offset = "0x932F64", VA = "0x932F64")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x932370", Offset = "0x932370", VA = "0x932370")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000049")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x7162D4", Offset = "0x7162D4", VA = "0x7162D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F09C", Offset = "0x57F09C")]
		add
		{
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x716378", Offset = "0x716378", VA = "0x716378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F0AC", Offset = "0x57F0AC")]
		remove
		{
		}
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x71641C", Offset = "0x71641C", VA = "0x71641C", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x716430", Offset = "0x716430", VA = "0x716430")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x200004A")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000339")]
	public enum ButtonType
	{
		[Token(Token = "0x400163A")]
		Play,
		[Token(Token = "0x400163B")]
		Pause,
		[Token(Token = "0x400163C")]
		FastForward,
		[Token(Token = "0x400163D")]
		Rewind,
		[Token(Token = "0x400163E")]
		SkipForward,
		[Token(Token = "0x400163F")]
		SkipBack,
		[Token(Token = "0x4001640")]
		Stop
	}

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000027")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x92DAF8", Offset = "0x92DAF8", VA = "0x92DAF8")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x92DB00", Offset = "0x92DB00", VA = "0x92DB00")]
		set
		{
		}
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x92DB24", Offset = "0x92DB24", VA = "0x92DB24", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x92EFF0", Offset = "0x92EFF0", VA = "0x92EFF0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200004B")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200033A")]
	public enum VideoShape
	{
		[Token(Token = "0x4001642")]
		_360,
		[Token(Token = "0x4001643")]
		_180,
		[Token(Token = "0x4001644")]
		Quad
	}

	[Token(Token = "0x200033B")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001646")]
		Mono,
		[Token(Token = "0x4001647")]
		TopBottom,
		[Token(Token = "0x4001648")]
		LeftRight,
		[Token(Token = "0x4001649")]
		BottomTop
	}

	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5706A8", Offset = "0x5706A8")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170001B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0x93322C", Offset = "0x93322C", VA = "0x93322C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015DF")]
			[Address(RVA = "0x933294", Offset = "0x933294", VA = "0x933294", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x93167C", Offset = "0x93167C", VA = "0x93167C")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x9330A8", Offset = "0x9330A8", VA = "0x9330A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x9330AC", Offset = "0x9330AC", VA = "0x9330AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x933234", Offset = "0x933234", VA = "0x933234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5706B8", Offset = "0x5706B8")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x9318E4", Offset = "0x9318E4", VA = "0x9318E4")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x932C9C", Offset = "0x932C9C", VA = "0x932C9C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573268", Offset = "0x573268")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573278", Offset = "0x573278")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x573288", Offset = "0x573288")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000028")]
	public bool IsPlaying
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x931078", Offset = "0x931078", VA = "0x931078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F0BC", Offset = "0x57F0BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x931080", Offset = "0x931080", VA = "0x931080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F0CC", Offset = "0x57F0CC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public long Duration
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x93108C", Offset = "0x93108C", VA = "0x93108C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F0DC", Offset = "0x57F0DC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x931094", Offset = "0x931094", VA = "0x931094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F0EC", Offset = "0x57F0EC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x93109C", Offset = "0x93109C", VA = "0x93109C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F0FC", Offset = "0x57F0FC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x9310A4", Offset = "0x9310A4", VA = "0x9310A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F10C", Offset = "0x57F10C")]
		private set
		{
		}
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x9310AC", Offset = "0x9310AC", VA = "0x9310AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x93132C", Offset = "0x93132C", VA = "0x93132C")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x931394", Offset = "0x931394", VA = "0x931394")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x93160C", Offset = "0x93160C", VA = "0x93160C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57F11C", Offset = "0x57F11C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x9316A8", Offset = "0x9316A8", VA = "0x9316A8")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x9318EC", Offset = "0x9318EC", VA = "0x9318EC")]
	public void Play()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x931A74", Offset = "0x931A74", VA = "0x931A74")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x931BF8", Offset = "0x931BF8", VA = "0x931BF8")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x931E30", Offset = "0x931E30", VA = "0x931E30")]
	private void Update()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x932804", Offset = "0x932804", VA = "0x932804")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x932A24", Offset = "0x932A24", VA = "0x932A24")]
	public void Stop()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x932BA8", Offset = "0x932BA8", VA = "0x932BA8")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x932C8C", Offset = "0x932C8C", VA = "0x932C8C")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200004C")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200033E")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001651")]
		Playing,
		[Token(Token = "0x4001652")]
		Paused,
		[Token(Token = "0x4001653")]
		Rewinding,
		[Token(Token = "0x4001654")]
		FastForwarding
	}

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x93329C", Offset = "0x93329C", VA = "0x93329C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x933598", Offset = "0x933598", VA = "0x933598")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x933774", Offset = "0x933774", VA = "0x933774")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x9338A8", Offset = "0x9338A8", VA = "0x9338A8")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x9339B0", Offset = "0x9339B0", VA = "0x9339B0")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x93387C", Offset = "0x93387C", VA = "0x93387C")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x933A78", Offset = "0x933A78", VA = "0x933A78")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x93348C", Offset = "0x93348C", VA = "0x93348C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x933E0C", Offset = "0x933E0C", VA = "0x933E0C")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200004D")]
public static class VectorUtil
{
	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x824C00", Offset = "0x824C00", VA = "0x824C00")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200004E")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x71F26C", Offset = "0x71F26C", VA = "0x71F26C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x71F63C", Offset = "0x71F63C", VA = "0x71F63C")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x71F6F4", Offset = "0x71F6F4", VA = "0x71F6F4")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x71F8F4", Offset = "0x71F8F4", VA = "0x71F8F4")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x71F9DC", Offset = "0x71F9DC", VA = "0x71F9DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x71FAB8", Offset = "0x71FAB8", VA = "0x71FAB8")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x71FB24", Offset = "0x71FB24", VA = "0x71FB24")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x71FB2C", Offset = "0x71FB2C", VA = "0x71FB2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F190", Offset = "0x57F190")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x71FB88", Offset = "0x71FB88", VA = "0x71FB88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F1A0", Offset = "0x57F1A0")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x71FBE4", Offset = "0x71FBE4", VA = "0x71FBE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F1B0", Offset = "0x57F1B0")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x71FC40", Offset = "0x71FC40", VA = "0x71FC40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F1C0", Offset = "0x57F1C0")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200004F")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5706C8", Offset = "0x5706C8")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170001B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015E5")]
			[Address(RVA = "0x86C044", Offset = "0x86C044", VA = "0x86C044", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0x86C0AC", Offset = "0x86C0AC", VA = "0x86C0AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x86BEF4", Offset = "0x86BEF4", VA = "0x86BEF4")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x86BF28", Offset = "0x86BF28", VA = "0x86BF28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x86BF2C", Offset = "0x86BF2C", VA = "0x86BF2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x86C04C", Offset = "0x86C04C", VA = "0x86C04C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x86BBF8", Offset = "0x86BBF8", VA = "0x86BBF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x86BCF8", Offset = "0x86BCF8", VA = "0x86BCF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x86BC88", Offset = "0x86BC88", VA = "0x86BC88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57F1D0", Offset = "0x57F1D0")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x86BF20", Offset = "0x86BF20", VA = "0x86BF20")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000050")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5732A8", Offset = "0x5732A8")]
	public int SubdivisionsU;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5732C4", Offset = "0x5732C4")]
	public int SubdivisionsV;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x71A3B8", Offset = "0x71A3B8", VA = "0x71A3B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x71AE70", Offset = "0x71AE70", VA = "0x71AE70")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000051")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700002B")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x874FD8", Offset = "0x874FD8", VA = "0x874FD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x875030", Offset = "0x875030", VA = "0x875030")]
	public void Start()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x875374", Offset = "0x875374", VA = "0x875374")]
	public void Update()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x875458", Offset = "0x875458", VA = "0x875458")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x57F234", Offset = "0x57F234")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000210")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000212")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000213")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000214")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000215")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000216")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000217")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x8754C0", Offset = "0x8754C0", VA = "0x8754C0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x8754FC", Offset = "0x8754FC", VA = "0x8754FC")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x875570", Offset = "0x875570", VA = "0x875570")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x8756CC", Offset = "0x8756CC", VA = "0x8756CC")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x8757A0", Offset = "0x8757A0", VA = "0x8757A0")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x875280", Offset = "0x875280", VA = "0x875280")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x875860", Offset = "0x875860", VA = "0x875860")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x8758C8", Offset = "0x8758C8", VA = "0x8758C8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x8759AC", Offset = "0x8759AC", VA = "0x8759AC")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000052")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x56ECB4", Offset = "0x56ECB4")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000340")]
	public enum DrawMode
	{
		[Token(Token = "0x4001659")]
		Opaque,
		[Token(Token = "0x400165A")]
		OpaqueWithClip,
		[Token(Token = "0x400165B")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400165C")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700002C")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x87B8BC", Offset = "0x87B8BC", VA = "0x87B8BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x87B950", Offset = "0x87B950", VA = "0x87B950")]
		set
		{
		}
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x87A24C", Offset = "0x87A24C", VA = "0x87A24C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x87AEBC", Offset = "0x87AEBC", VA = "0x87AEBC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x87AF40", Offset = "0x87AF40", VA = "0x87AF40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x87B034", Offset = "0x87B034", VA = "0x87B034")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x87B128", Offset = "0x87B128", VA = "0x87B128", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x87B32C", Offset = "0x87B32C", VA = "0x87B32C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x87BA20", Offset = "0x87BA20", VA = "0x87BA20")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000053")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5706D8", Offset = "0x5706D8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x74A110", Offset = "0x74A110", VA = "0x74A110")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x74A200", Offset = "0x74A200", VA = "0x74A200")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x749F70", Offset = "0x749F70", VA = "0x749F70")]
	private void Start()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x74A118", Offset = "0x74A118", VA = "0x74A118")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x74A1F8", Offset = "0x74A1F8", VA = "0x74A1F8")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000054")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56ED18", Offset = "0x56ED18")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000342")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001660")]
		MouseXAndY,
		[Token(Token = "0x4001661")]
		MouseX,
		[Token(Token = "0x4001662")]
		MouseY
	}

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x930D28", Offset = "0x930D28", VA = "0x930D28")]
	private void Update()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x930F88", Offset = "0x930F88", VA = "0x930F88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x931048", Offset = "0x931048", VA = "0x931048")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000055")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000343")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001664")]
		Uninitialized = -1,
		[Token(Token = "0x4001665")]
		NotEnabled,
		[Token(Token = "0x4001666")]
		Success,
		[Token(Token = "0x4001667")]
		StreamError,
		[Token(Token = "0x4001668")]
		ProcessError,
		[Token(Token = "0x4001669")]
		MaxStatValue
	}

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700002D")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000231")]
		[Address(RVA = "0xDD28E8", Offset = "0xDD28E8", VA = "0xDD28E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000232")]
		[Address(RVA = "0xDD28F0", Offset = "0xDD28F0", VA = "0xDD28F0")]
		set
		{
		}
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xDD28FC", Offset = "0xDD28FC", VA = "0xDD28FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xDD2B30", Offset = "0xDD2B30", VA = "0xDD2B30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xDD2D80", Offset = "0xDD2D80", VA = "0xDD2D80")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000056")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000344")]
	private enum Parameters
	{
		[Token(Token = "0x400166B")]
		P_GAIN,
		[Token(Token = "0x400166C")]
		P_USEINVSQR,
		[Token(Token = "0x400166D")]
		P_NEAR,
		[Token(Token = "0x400166E")]
		P_FAR,
		[Token(Token = "0x400166F")]
		P_RADIUS,
		[Token(Token = "0x4001670")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001671")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4001672")]
		P_AMBISTAT,
		[Token(Token = "0x4001673")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001674")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001675")]
		P_SENDLEVEL,
		[Token(Token = "0x4001676")]
		P_NUM
	}

	[Token(Token = "0x40001F6")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700002E")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000239")]
		[Address(RVA = "0xDD30EC", Offset = "0xDD30EC", VA = "0xDD30EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600023A")]
		[Address(RVA = "0xDD30F4", Offset = "0xDD30F4", VA = "0xDD30F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public float Gain
	{
		[Token(Token = "0x600023B")]
		[Address(RVA = "0xDD3100", Offset = "0xDD3100", VA = "0xDD3100")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600023C")]
		[Address(RVA = "0xDD3108", Offset = "0xDD3108", VA = "0xDD3108")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600023D")]
		[Address(RVA = "0xDD318C", Offset = "0xDD318C", VA = "0xDD318C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600023E")]
		[Address(RVA = "0xDD3194", Offset = "0xDD3194", VA = "0xDD3194")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public float Near
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0xDD31A0", Offset = "0xDD31A0", VA = "0xDD31A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000240")]
		[Address(RVA = "0xDD31A8", Offset = "0xDD31A8", VA = "0xDD31A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public float Far
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xDD3230", Offset = "0xDD3230", VA = "0xDD3230")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000242")]
		[Address(RVA = "0xDD3238", Offset = "0xDD3238", VA = "0xDD3238")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0xDD32C0", Offset = "0xDD32C0", VA = "0xDD32C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000244")]
		[Address(RVA = "0xDD32C8", Offset = "0xDD32C8", VA = "0xDD32C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public float ReverbSend
	{
		[Token(Token = "0x6000245")]
		[Address(RVA = "0xDD3350", Offset = "0xDD3350", VA = "0xDD3350")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000246")]
		[Address(RVA = "0xDD3358", Offset = "0xDD3358", VA = "0xDD3358")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000247")]
		[Address(RVA = "0xDD33E0", Offset = "0xDD33E0", VA = "0xDD33E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xDD33E8", Offset = "0xDD33E8", VA = "0xDD33E8")]
		set
		{
		}
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xDD2E04", Offset = "0xDD2E04", VA = "0xDD2E04")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x57F26C", Offset = "0x57F26C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000238")]
	[Address(RVA = "0xDD300C", Offset = "0xDD300C", VA = "0xDD300C")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xDD33F4", Offset = "0xDD33F4", VA = "0xDD33F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xDD3568", Offset = "0xDD3568", VA = "0xDD3568")]
	private void Start()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xDD356C", Offset = "0xDD356C", VA = "0xDD356C")]
	private void Update()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xDD3460", Offset = "0xDD3460", VA = "0xDD3460")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xDD3634", Offset = "0xDD3634", VA = "0xDD3634")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xDD3A94", Offset = "0xDD3A94", VA = "0xDD3A94")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600024F")]
	[Address(RVA = "0xDD2F8C", Offset = "0xDD2F8C", VA = "0xDD2F8C")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xDD3B64", Offset = "0xDD3B64", VA = "0xDD3B64")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000057")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000201")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000203")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xDD3B84", Offset = "0xDD3B84", VA = "0xDD3B84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xDD3B90", Offset = "0xDD3B90", VA = "0xDD3B90")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000254")]
	[Address(RVA = "0xDD3C48", Offset = "0xDD3C48", VA = "0xDD3C48")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000255")]
	[Address(RVA = "0xDD3BC8", Offset = "0xDD3BC8", VA = "0xDD3BC8")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xDD3CC8", Offset = "0xDD3CC8", VA = "0xDD3CC8")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000058")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000345")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000346")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x400020A")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000036")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000257")]
		[Address(RVA = "0xDD6744", Offset = "0xDD6744", VA = "0xDD6744")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000037")]
	public string filePath
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0xDD67D0", Offset = "0xDD67D0", VA = "0xDD67D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xDD6848", Offset = "0xDD6848", VA = "0xDD6848")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xDD6990", Offset = "0xDD6990", VA = "0xDD6990")]
	private void Awake()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xDD6994", Offset = "0xDD6994", VA = "0xDD6994")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xDD6EF4", Offset = "0xDD6EF4", VA = "0xDD6EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xDD728C", Offset = "0xDD728C", VA = "0xDD728C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xDD73E8", Offset = "0xDD73E8", VA = "0xDD73E8")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xDD7AD0", Offset = "0xDD7AD0", VA = "0xDD7AD0")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xDD7B0C", Offset = "0xDD7B0C", VA = "0xDD7B0C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xDD9328", Offset = "0xDD9328", VA = "0xDD9328")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xDD9200", Offset = "0xDD9200", VA = "0xDD9200")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xDD6D2C", Offset = "0xDD6D2C", VA = "0xDD6D2C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xDD6B60", Offset = "0xDD6B60", VA = "0xDD6B60")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xDD993C", Offset = "0xDD993C", VA = "0xDD993C")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xDD9D78", Offset = "0xDD9D78", VA = "0xDD9D78")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000059")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000347")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400167D")]
		Int8,
		[Token(Token = "0x400167E")]
		UInt8,
		[Token(Token = "0x400167F")]
		Int16,
		[Token(Token = "0x4001680")]
		UInt16,
		[Token(Token = "0x4001681")]
		Int32,
		[Token(Token = "0x4001682")]
		UInt32,
		[Token(Token = "0x4001683")]
		Int64,
		[Token(Token = "0x4001684")]
		UInt64,
		[Token(Token = "0x4001685")]
		Float16,
		[Token(Token = "0x4001686")]
		Float32,
		[Token(Token = "0x4001687")]
		Float64
	}

	[Token(Token = "0x2000348")]
	public class ClientType
	{
		[Token(Token = "0x4001688")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001689")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x400168A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x400168B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x400168C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x400168D")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x400168E")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x400168F")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4001690")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001691")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001692")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001693")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001694")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4001695")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4001696")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xDD417C", Offset = "0xDD417C", VA = "0xDD417C")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000349")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60015EB")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60015EC")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60015ED")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60015EE")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60015EF")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60015F0")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60015F1")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60015F2")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60015F3")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60015F4")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60015F5")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60015F6")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x60015F7")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60015F8")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60015F9")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200034A")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001697")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170001B5")]
		private IntPtr context
		{
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0xDD4DEC", Offset = "0xDD4DEC", VA = "0xDD4DEC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xDD4E50", Offset = "0xDD4E50", VA = "0xDD4E50")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xDD4EE0", Offset = "0xDD4EE0", VA = "0xDD4EE0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xDD4F70", Offset = "0xDD4F70", VA = "0xDD4F70", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xDD4F94", Offset = "0xDD4F94", VA = "0xDD4F94")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xDD5024", Offset = "0xDD5024", VA = "0xDD5024", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001600")]
		[Address(RVA = "0xDD5048", Offset = "0xDD5048", VA = "0xDD5048")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xDD50D4", Offset = "0xDD50D4", VA = "0xDD50D4", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001602")]
		[Address(RVA = "0xDD50F8", Offset = "0xDD50F8", VA = "0xDD50F8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xDD5178", Offset = "0xDD5178", VA = "0xDD5178", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001604")]
		[Address(RVA = "0xDD5180", Offset = "0xDD5180", VA = "0xDD5180")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xDD52A0", Offset = "0xDD52A0", VA = "0xDD52A0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001606")]
		[Address(RVA = "0xDD5398", Offset = "0xDD5398", VA = "0xDD5398")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xDD5430", Offset = "0xDD5430", VA = "0xDD5430", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001608")]
		[Address(RVA = "0xDD543C", Offset = "0xDD543C", VA = "0xDD543C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xDD5568", Offset = "0xDD5568", VA = "0xDD5568", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600160A")]
		[Address(RVA = "0xDD5574", Offset = "0xDD5574", VA = "0xDD5574")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xDD5620", Offset = "0xDD5620", VA = "0xDD5620", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600160C")]
		[Address(RVA = "0xDD562C", Offset = "0xDD562C", VA = "0xDD562C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xDD56D8", Offset = "0xDD56D8", VA = "0xDD56D8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600160E")]
		[Address(RVA = "0xDD56E4", Offset = "0xDD56E4", VA = "0xDD56E4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xDD5790", Offset = "0xDD5790", VA = "0xDD5790", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001610")]
		[Address(RVA = "0xDD579C", Offset = "0xDD579C", VA = "0xDD579C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xDD5828", Offset = "0xDD5828", VA = "0xDD5828", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001612")]
		[Address(RVA = "0xDD584C", Offset = "0xDD584C", VA = "0xDD584C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xDD58CC", Offset = "0xDD58CC", VA = "0xDD58CC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001614")]
		[Address(RVA = "0xDD58D4", Offset = "0xDD58D4", VA = "0xDD58D4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xDD597C", Offset = "0xDD597C", VA = "0xDD597C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001616")]
		[Address(RVA = "0xDD5988", Offset = "0xDD5988", VA = "0xDD5988")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xDD5A30", Offset = "0xDD5A30", VA = "0xDD5A30", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001618")]
		[Address(RVA = "0xDD5A40", Offset = "0xDD5A40", VA = "0xDD5A40")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xDD5AD0", Offset = "0xDD5AD0", VA = "0xDD5AD0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xDD4128", Offset = "0xDD4128", VA = "0xDD4128")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x200034B")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001699")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170001B6")]
		private IntPtr context
		{
			[Token(Token = "0x600161B")]
			[Address(RVA = "0xDD5ADC", Offset = "0xDD5ADC", VA = "0xDD5ADC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600161C")]
		[Address(RVA = "0xDD3F70", Offset = "0xDD3F70", VA = "0xDD3F70")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600161D")]
		[Address(RVA = "0xDD5B40", Offset = "0xDD5B40", VA = "0xDD5B40")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xDD5BD0", Offset = "0xDD5BD0", VA = "0xDD5BD0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600161F")]
		[Address(RVA = "0xDD5BF4", Offset = "0xDD5BF4", VA = "0xDD5BF4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xDD5C84", Offset = "0xDD5C84", VA = "0xDD5C84", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001621")]
		[Address(RVA = "0xDD5CA8", Offset = "0xDD5CA8", VA = "0xDD5CA8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xDD5D38", Offset = "0xDD5D38", VA = "0xDD5D38", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001623")]
		[Address(RVA = "0xDD5D5C", Offset = "0xDD5D5C", VA = "0xDD5D5C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xDD5DDC", Offset = "0xDD5DDC", VA = "0xDD5DDC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001625")]
		[Address(RVA = "0xDD5DE4", Offset = "0xDD5DE4", VA = "0xDD5DE4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xDD5F04", Offset = "0xDD5F04", VA = "0xDD5F04", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001627")]
		[Address(RVA = "0xDD5FFC", Offset = "0xDD5FFC", VA = "0xDD5FFC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xDD6094", Offset = "0xDD6094", VA = "0xDD6094", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001629")]
		[Address(RVA = "0xDD60A0", Offset = "0xDD60A0", VA = "0xDD60A0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xDD61CC", Offset = "0xDD61CC", VA = "0xDD61CC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600162B")]
		[Address(RVA = "0xDD61D8", Offset = "0xDD61D8", VA = "0xDD61D8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xDD6284", Offset = "0xDD6284", VA = "0xDD6284", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600162D")]
		[Address(RVA = "0xDD6290", Offset = "0xDD6290", VA = "0xDD6290")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xDD633C", Offset = "0xDD633C", VA = "0xDD633C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600162F")]
		[Address(RVA = "0xDD6348", Offset = "0xDD6348", VA = "0xDD6348")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xDD63F4", Offset = "0xDD63F4", VA = "0xDD63F4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001631")]
		[Address(RVA = "0xDD6400", Offset = "0xDD6400", VA = "0xDD6400")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xDD6490", Offset = "0xDD6490", VA = "0xDD6490", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001633")]
		[Address(RVA = "0xDD64B4", Offset = "0xDD64B4", VA = "0xDD64B4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xDD6534", Offset = "0xDD6534", VA = "0xDD6534", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001635")]
		[Address(RVA = "0xDD653C", Offset = "0xDD653C", VA = "0xDD653C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xDD65E4", Offset = "0xDD65E4", VA = "0xDD65E4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001637")]
		[Address(RVA = "0xDD65F0", Offset = "0xDD65F0", VA = "0xDD65F0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xDD6698", Offset = "0xDD6698", VA = "0xDD6698", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001639")]
		[Address(RVA = "0xDD66A8", Offset = "0xDD66A8", VA = "0xDD66A8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xDD6738", Offset = "0xDD6738", VA = "0xDD6738", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xDD4000", Offset = "0xDD4000", VA = "0xDD4000")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x200034C")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x400169B")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170001B7")]
		private IntPtr context
		{
			[Token(Token = "0x600163C")]
			[Address(RVA = "0xDD4184", Offset = "0xDD4184", VA = "0xDD4184")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600163D")]
		[Address(RVA = "0xDD404C", Offset = "0xDD404C", VA = "0xDD404C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600163E")]
		[Address(RVA = "0xDD41E8", Offset = "0xDD41E8", VA = "0xDD41E8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xDD4278", Offset = "0xDD4278", VA = "0xDD4278", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001640")]
		[Address(RVA = "0xDD429C", Offset = "0xDD429C", VA = "0xDD429C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xDD432C", Offset = "0xDD432C", VA = "0xDD432C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001642")]
		[Address(RVA = "0xDD4350", Offset = "0xDD4350", VA = "0xDD4350")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xDD43E0", Offset = "0xDD43E0", VA = "0xDD43E0", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001644")]
		[Address(RVA = "0xDD4404", Offset = "0xDD4404", VA = "0xDD4404")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xDD4484", Offset = "0xDD4484", VA = "0xDD4484", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001646")]
		[Address(RVA = "0xDD448C", Offset = "0xDD448C", VA = "0xDD448C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xDD45AC", Offset = "0xDD45AC", VA = "0xDD45AC", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001648")]
		[Address(RVA = "0xDD46A4", Offset = "0xDD46A4", VA = "0xDD46A4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xDD473C", Offset = "0xDD473C", VA = "0xDD473C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600164A")]
		[Address(RVA = "0xDD4748", Offset = "0xDD4748", VA = "0xDD4748")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xDD4874", Offset = "0xDD4874", VA = "0xDD4874", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600164C")]
		[Address(RVA = "0xDD4880", Offset = "0xDD4880", VA = "0xDD4880")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xDD492C", Offset = "0xDD492C", VA = "0xDD492C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600164E")]
		[Address(RVA = "0xDD4938", Offset = "0xDD4938", VA = "0xDD4938")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xDD49E4", Offset = "0xDD49E4", VA = "0xDD49E4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001650")]
		[Address(RVA = "0xDD49F0", Offset = "0xDD49F0", VA = "0xDD49F0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xDD4A9C", Offset = "0xDD4A9C", VA = "0xDD4A9C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001652")]
		[Address(RVA = "0xDD4AA8", Offset = "0xDD4AA8", VA = "0xDD4AA8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xDD4B38", Offset = "0xDD4B38", VA = "0xDD4B38", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001654")]
		[Address(RVA = "0xDD4B5C", Offset = "0xDD4B5C", VA = "0xDD4B5C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xDD4BDC", Offset = "0xDD4BDC", VA = "0xDD4BDC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001656")]
		[Address(RVA = "0xDD4BE4", Offset = "0xDD4BE4", VA = "0xDD4BE4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xDD4C8C", Offset = "0xDD4C8C", VA = "0xDD4C8C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001658")]
		[Address(RVA = "0xDD4C98", Offset = "0xDD4C98", VA = "0xDD4C98")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xDD4D40", Offset = "0xDD4D40", VA = "0xDD4D40", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600165A")]
		[Address(RVA = "0xDD4D50", Offset = "0xDD4D50", VA = "0xDD4D50")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xDD4DE0", Offset = "0xDD4DE0", VA = "0xDD4DE0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xDD40DC", Offset = "0xDD40DC", VA = "0xDD40DC")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000038")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0xDD3CD8", Offset = "0xDD3CD8", VA = "0xDD3CD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xDD3D48", Offset = "0xDD3D48", VA = "0xDD3D48")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xDD4174", Offset = "0xDD4174", VA = "0xDD4174")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x200005A")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200034D")]
	public enum Preset
	{
		[Token(Token = "0x400169E")]
		Custom,
		[Token(Token = "0x400169F")]
		AcousticTile,
		[Token(Token = "0x40016A0")]
		Brick,
		[Token(Token = "0x40016A1")]
		BrickPainted,
		[Token(Token = "0x40016A2")]
		Carpet,
		[Token(Token = "0x40016A3")]
		CarpetHeavy,
		[Token(Token = "0x40016A4")]
		CarpetHeavyPadded,
		[Token(Token = "0x40016A5")]
		CeramicTile,
		[Token(Token = "0x40016A6")]
		Concrete,
		[Token(Token = "0x40016A7")]
		ConcreteRough,
		[Token(Token = "0x40016A8")]
		ConcreteBlock,
		[Token(Token = "0x40016A9")]
		ConcreteBlockPainted,
		[Token(Token = "0x40016AA")]
		Curtain,
		[Token(Token = "0x40016AB")]
		Foliage,
		[Token(Token = "0x40016AC")]
		Glass,
		[Token(Token = "0x40016AD")]
		GlassHeavy,
		[Token(Token = "0x40016AE")]
		Grass,
		[Token(Token = "0x40016AF")]
		Gravel,
		[Token(Token = "0x40016B0")]
		GypsumBoard,
		[Token(Token = "0x40016B1")]
		PlasterOnBrick,
		[Token(Token = "0x40016B2")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x40016B3")]
		Soil,
		[Token(Token = "0x40016B4")]
		SoundProof,
		[Token(Token = "0x40016B5")]
		Snow,
		[Token(Token = "0x40016B6")]
		Steel,
		[Token(Token = "0x40016B7")]
		Water,
		[Token(Token = "0x40016B8")]
		WoodThin,
		[Token(Token = "0x40016B9")]
		WoodThick,
		[Token(Token = "0x40016BA")]
		WoodFloor,
		[Token(Token = "0x40016BB")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200034E")]
	public sealed class Point
	{
		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xDE1C80", Offset = "0xDE1C80", VA = "0xDE1C80")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xDE1DC8", Offset = "0xDE1DC8", VA = "0xDE1DC8")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xDE1E38", Offset = "0xDE1E38", VA = "0xDE1E38")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5706E8", Offset = "0x5706E8")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5723A8", Offset = "0x5723A8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4001B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6001E25")]
			[Address(RVA = "0xDE2290", Offset = "0xDE2290", VA = "0xDE2290")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E26")]
			[Address(RVA = "0xDE2298", Offset = "0xDE2298", VA = "0xDE2298")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6001E27")]
			[Address(RVA = "0xDE22B0", Offset = "0xDE22B0", VA = "0xDE22B0")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170001B8")]
		public float Item
		{
			[Token(Token = "0x6001660")]
			[Address(RVA = "0xDE1E70", Offset = "0xDE1E70", VA = "0xDE1E70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xDE1D50", Offset = "0xDE1D50", VA = "0xDE1D50")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5733E0", Offset = "0x5733E0")]
	public Spectrum absorption;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x573418", Offset = "0x573418")]
	public Spectrum transmission;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x573450", Offset = "0x573450")]
	public Spectrum scattering;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000039")]
	public Preset preset
	{
		[Token(Token = "0x600026B")]
		[Address(RVA = "0xDD9E50", Offset = "0xDD9E50", VA = "0xDD9E50")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600026C")]
		[Address(RVA = "0xDD9E58", Offset = "0xDD9E58", VA = "0xDD9E58")]
		set
		{
		}
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xDD9E80", Offset = "0xDD9E80", VA = "0xDD9E80")]
	private void Start()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xDD97D0", Offset = "0xDD97D0", VA = "0xDD97D0")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xDDA464", Offset = "0xDDA464", VA = "0xDDA464")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xDDA468", Offset = "0xDDA468", VA = "0xDDA468")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xDD9E84", Offset = "0xDD9E84", VA = "0xDD9E84")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xDD906C", Offset = "0xDD906C", VA = "0xDD906C")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xDDA54C", Offset = "0xDDA54C", VA = "0xDDA54C")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xDDA9AC", Offset = "0xDDA9AC", VA = "0xDDA9AC")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xDDAE0C", Offset = "0xDDAE0C", VA = "0xDDAE0C")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xDDB26C", Offset = "0xDDB26C", VA = "0xDDB26C")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xDDB6CC", Offset = "0xDDB6CC", VA = "0xDDB6CC")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xDDBB2C", Offset = "0xDDBB2C", VA = "0xDDBB2C")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xDDBF8C", Offset = "0xDDBF8C", VA = "0xDDBF8C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xDDC3EC", Offset = "0xDDC3EC", VA = "0xDDC3EC")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xDDC84C", Offset = "0xDDC84C", VA = "0xDDC84C")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xDDCCAC", Offset = "0xDDCCAC", VA = "0xDDCCAC")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xDDD10C", Offset = "0xDDD10C", VA = "0xDDD10C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xDDD56C", Offset = "0xDDD56C", VA = "0xDDD56C")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xDDD9CC", Offset = "0xDDD9CC", VA = "0xDDD9CC")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xDDDE2C", Offset = "0xDDDE2C", VA = "0xDDDE2C")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xDDE284", Offset = "0xDDE284", VA = "0xDDE284")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xDDE6E4", Offset = "0xDDE6E4", VA = "0xDDE6E4")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xDDEA20", Offset = "0xDDEA20", VA = "0xDDEA20")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xDDED5C", Offset = "0xDDED5C", VA = "0xDDED5C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xDDF1BC", Offset = "0xDDF1BC", VA = "0xDDF1BC")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xDDF61C", Offset = "0xDDF61C", VA = "0xDDF61C")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xDDFA7C", Offset = "0xDDFA7C", VA = "0xDDFA7C")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xDDFDB8", Offset = "0xDDFDB8", VA = "0xDDFDB8")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xDDFF14", Offset = "0xDDFF14", VA = "0xDDFF14")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xDE0250", Offset = "0xDE0250", VA = "0xDE0250")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xDE06A8", Offset = "0xDE06A8", VA = "0xDE06A8")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xDE0B08", Offset = "0xDE0B08", VA = "0xDE0B08")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xDE0F60", Offset = "0xDE0F60", VA = "0xDE0F60")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xDE13C0", Offset = "0xDE13C0", VA = "0xDE13C0")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xDE1820", Offset = "0xDE1820", VA = "0xDE1820")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xDE1CB8", Offset = "0xDE1CB8", VA = "0xDE1CB8")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x200005B")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xDE22C8", Offset = "0xDE22C8", VA = "0xDE22C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xDE2398", Offset = "0xDE2398", VA = "0xDE2398")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x200005C")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700003A")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xDD2E78", Offset = "0xDD2E78", VA = "0xDD2E78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xDE2954", Offset = "0xDE2954", VA = "0xDE2954")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x200005D")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000215")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000295")]
	[Address(RVA = "0xDE2964", Offset = "0xDE2964", VA = "0xDE2964")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xDE29FC", Offset = "0xDE29FC", VA = "0xDE29FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xDE2B08", Offset = "0xDE2B08", VA = "0xDE2B08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xDE2B0C", Offset = "0xDE2B0C", VA = "0xDE2B0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xDE2B10", Offset = "0xDE2B10", VA = "0xDE2B10")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x200005E")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000350")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000224")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400022A")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x738A70", Offset = "0x738A70", VA = "0x738A70")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x7388A0", Offset = "0x7388A0", VA = "0x7388A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x57F280", Offset = "0x57F280")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x738AA8", Offset = "0x738AA8", VA = "0x738AA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x738BDC", Offset = "0x738BDC", VA = "0x738BDC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x738CD0", Offset = "0x738CD0", VA = "0x738CD0")]
	private void Update()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x739688", Offset = "0x739688", VA = "0x739688")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x738B48", Offset = "0x738B48", VA = "0x738B48")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x738C40", Offset = "0x738C40", VA = "0x738C40")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x7393F0", Offset = "0x7393F0", VA = "0x7393F0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x739470", Offset = "0x739470", VA = "0x739470")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x7394F8", Offset = "0x7394F8", VA = "0x7394F8")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x739580", Offset = "0x739580", VA = "0x739580")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x739600", Offset = "0x739600", VA = "0x739600")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x73A4C0", Offset = "0x73A4C0", VA = "0x73A4C0")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x73A568", Offset = "0x73A568", VA = "0x73A568")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x73A610", Offset = "0x73A610", VA = "0x73A610")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x200005F")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000060")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xDE23A8", Offset = "0xDE23A8", VA = "0xDE23A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xDE23AC", Offset = "0xDE23AC", VA = "0xDE23AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xDE23B0", Offset = "0xDE23B0", VA = "0xDE23B0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xDE2518", Offset = "0xDE2518", VA = "0xDE2518")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xDE23FC", Offset = "0xDE23FC", VA = "0xDE23FC")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xDE248C", Offset = "0xDE248C", VA = "0xDE248C")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xDE2564", Offset = "0xDE2564", VA = "0xDE2564")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xDE25FC", Offset = "0xDE25FC", VA = "0xDE25FC")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xDE2764", Offset = "0xDE2764", VA = "0xDE2764")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xDE28CC", Offset = "0xDE28CC", VA = "0xDE28CC")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x56ED50", Offset = "0x56ED50")]
public class iTweenPath : MonoBehaviour
{
	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string pathName;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color pathColor;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> nodes;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int nodeCount;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, iTweenPath> paths;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool initialized;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string initialName;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool pathVisible;

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x82B6FC", Offset = "0x82B6FC", VA = "0x82B6FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x82B7E8", Offset = "0x82B7E8", VA = "0x82B7E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x82B884", Offset = "0x82B884", VA = "0x82B884")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x82B960", Offset = "0x82B960", VA = "0x82B960")]
	public static Vector3[] GetPath(string requestedName)
	{
		return null;
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x82BAC0", Offset = "0x82BAC0", VA = "0x82BAC0")]
	public static Vector3[] GetPathReversed(string requestedName)
	{
		return null;
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x82BC90", Offset = "0x82BC90", VA = "0x82BC90")]
	public iTweenPath()
	{
	}
}
[Token(Token = "0x2000062")]
public class SABoneColliderCommon
{
	[Token(Token = "0x2000351")]
	public enum BoneWeightType
	{
		[Token(Token = "0x40016C1")]
		Bone2,
		[Token(Token = "0x40016C2")]
		Bone4
	}

	[Token(Token = "0x2000352")]
	public enum BoneTriangleExtent
	{
		[Token(Token = "0x40016C4")]
		Disable,
		[Token(Token = "0x40016C5")]
		Vertex2,
		[Token(Token = "0x40016C6")]
		Vertex1
	}

	[Serializable]
	[Token(Token = "0x2000353")]
	public class BoneProperty
	{
		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool recursivery;

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x743F6C", Offset = "0x743F6C", VA = "0x743F6C")]
		public BoneProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x743FF4", Offset = "0x743FF4", VA = "0x743FF4")]
		public BoneProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000354")]
	public class SplitProperty
	{
		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BoneWeightType boneWeightType;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int boneWeight2;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int boneWeight3;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int boneWeight4;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool greaterBoneWeight;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public BoneTriangleExtent boneTriangleExtent;

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x7440BC", Offset = "0x7440BC", VA = "0x7440BC")]
		public SplitProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x74439C", Offset = "0x74439C", VA = "0x74439C")]
		public SplitProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000355")]
	public class SABoneColliderProperty
	{
		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BoneProperty boneProperty;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SplitProperty splitProperty;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAColliderBuilderCommon.ReducerProperty reducerProperty;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SAColliderBuilderCommon.ColliderProperty colliderProperty;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool modifyNameEnabled;

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x744508", Offset = "0x744508", VA = "0x744508")]
		public SABoneColliderProperty Copy()
		{
			return null;
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x743C60", Offset = "0x743C60", VA = "0x743C60")]
		public SABoneColliderProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000356")]
	public class SABoneColliderBuilderProperty
	{
		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplitProperty splitProperty;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SAColliderBuilderCommon.ReducerProperty reducerProperty;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAColliderBuilderCommon.ColliderProperty colliderProperty;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool modifyNameEnabled;

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x743FFC", Offset = "0x743FFC", VA = "0x743FFC")]
		public SABoneColliderBuilderProperty Copy()
		{
			return null;
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x7442DC", Offset = "0x7442DC", VA = "0x7442DC")]
		public SABoneColliderProperty ToSABoneColliderProperty()
		{
			return null;
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x743E50", Offset = "0x743E50", VA = "0x743E50")]
		public SABoneColliderBuilderProperty()
		{
		}
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x743F64", Offset = "0x743F64", VA = "0x743F64")]
	public SABoneColliderCommon()
	{
	}
}
[Token(Token = "0x2000063")]
public class SAColliderBuilderCommon
{
	[Token(Token = "0x2000357")]
	public enum ShapeType
	{
		[Token(Token = "0x40016DA")]
		None,
		[Token(Token = "0x40016DB")]
		Mesh,
		[Token(Token = "0x40016DC")]
		Box,
		[Token(Token = "0x40016DD")]
		Capsule,
		[Token(Token = "0x40016DE")]
		Sphere
	}

	[Token(Token = "0x2000358")]
	public enum FitType
	{
		[Token(Token = "0x40016E0")]
		Outer,
		[Token(Token = "0x40016E1")]
		Inner
	}

	[Token(Token = "0x2000359")]
	public enum MeshType
	{
		[Token(Token = "0x40016E3")]
		Raw,
		[Token(Token = "0x40016E4")]
		ConvexBoxes,
		[Token(Token = "0x40016E5")]
		ConvexHull,
		[Token(Token = "0x40016E6")]
		Box
	}

	[Token(Token = "0x200035A")]
	public enum SliceMode
	{
		[Token(Token = "0x40016E8")]
		Auto,
		[Token(Token = "0x40016E9")]
		X,
		[Token(Token = "0x40016EA")]
		Y,
		[Token(Token = "0x40016EB")]
		Z
	}

	[Token(Token = "0x200035B")]
	public enum ElementType
	{
		[Token(Token = "0x40016ED")]
		X,
		[Token(Token = "0x40016EE")]
		XYZ
	}

	[Serializable]
	[Token(Token = "0x200035C")]
	public struct Bool3
	{
		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool x;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool y;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool z;

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x5ECA8C", Offset = "0x5ECA8C", VA = "0x5ECA8C")]
		public Bool3(bool x, bool y, bool z)
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x5ECAA8", Offset = "0x5ECAA8", VA = "0x5ECAA8")]
		public void SetValue(bool x, bool y, bool z)
		{
		}
	}

	[Token(Token = "0x200035D")]
	public enum ColliderToChild
	{
		[Token(Token = "0x40016F3")]
		Auto,
		[Token(Token = "0x40016F4")]
		On,
		[Token(Token = "0x40016F5")]
		Off
	}

	[Serializable]
	[Token(Token = "0x200035E")]
	public class ReducerProperty
	{
		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShapeType shapeType;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FitType fitType;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshType meshType;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxTriangles;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SliceMode sliceMode;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 scale;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ElementType scaleElementType;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 minThickness;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ElementType minThicknessElementType;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Bool3 optimizeRotation;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ElementType optimizeRotationElementType;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ColliderToChild colliderToChild;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 offset;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 thicknessA;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 thicknessB;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool viewAdvanced;

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x744144", Offset = "0x744144", VA = "0x744144")]
		public ReducerProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x7443C4", Offset = "0x7443C4", VA = "0x7443C4")]
		public ReducerProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200035F")]
	public class ColliderProperty
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool convex;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isTrigger;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PhysicMaterial material;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isCreateAsset;

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x7441CC", Offset = "0x7441CC", VA = "0x7441CC")]
		public ColliderProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x7444D0", Offset = "0x7444D0", VA = "0x7444D0")]
		public ColliderProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000360")]
	public class RigidbodyProperty
	{
		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float mass;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float drag;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angularDrag;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isKinematic;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool useGravity;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RigidbodyInterpolation interpolation;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public CollisionDetectionMode collisionDetectionMode;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isCreate;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool viewAdvanced;

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x744254", Offset = "0x744254", VA = "0x744254")]
		public RigidbodyProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x7444E0", Offset = "0x7444E0", VA = "0x7444E0")]
		public RigidbodyProperty()
		{
		}
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x7445DC", Offset = "0x7445DC", VA = "0x7445DC")]
	public SAColliderBuilderCommon()
	{
	}
}
[Token(Token = "0x2000064")]
public class SAMeshColliderCommon
{
	[Token(Token = "0x2000361")]
	public enum SplitMode
	{
		[Token(Token = "0x4001714")]
		None,
		[Token(Token = "0x4001715")]
		Material,
		[Token(Token = "0x4001716")]
		Primitive,
		[Token(Token = "0x4001717")]
		Polygon
	}

	[Serializable]
	[Token(Token = "0x2000362")]
	public class SplitMesh
	{
		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int subMeshCount;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int subMesh;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int triangle;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 triangleVertex;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] polygonTriangles;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] polygonVertices;

		[NonSerialized]
		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] triangles;

		[NonSerialized]
		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3[] vertices;

		[NonSerialized]
		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3[] triangleNormals;

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x745228", Offset = "0x745228", VA = "0x745228")]
		public void PurgeTemporary()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x744BD0", Offset = "0x744BD0", VA = "0x744BD0")]
		public SplitMesh()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000363")]
	public class SplitProperty
	{
		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool splitMaterialEnabled;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool splitPrimitiveEnabled;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool splitPolygonNormalEnabled;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float splitPolygonNormalAngle;

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x745008", Offset = "0x745008", VA = "0x745008")]
		public SplitProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x745150", Offset = "0x745150", VA = "0x745150")]
		public SplitProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000364")]
	public class SAMeshColliderProperty
	{
		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplitProperty splitProperty;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SAColliderBuilderCommon.ReducerProperty reducerProperty;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAColliderBuilderCommon.ColliderProperty colliderProperty;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool modifyNameEnabled;

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x745168", Offset = "0x745168", VA = "0x745168")]
		public SAMeshColliderProperty Copy()
		{
			return null;
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x744BE0", Offset = "0x744BE0", VA = "0x744BE0")]
		public SAMeshColliderProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000365")]
	public class SAMeshColliderBuilderProperty
	{
		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplitProperty splitProperty;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SAColliderBuilderCommon.ReducerProperty reducerProperty;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAColliderBuilderCommon.ColliderProperty colliderProperty;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool modifyNameEnabled;

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x744F48", Offset = "0x744F48", VA = "0x744F48")]
		public SAMeshColliderBuilderProperty Copy()
		{
			return null;
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x745090", Offset = "0x745090", VA = "0x745090")]
		public SAMeshColliderProperty ToSAMeshColliderProperty()
		{
			return null;
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x744E3C", Offset = "0x744E3C", VA = "0x744E3C")]
		public SAMeshColliderBuilderProperty()
		{
		}
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x744F40", Offset = "0x744F40", VA = "0x744F40")]
	public SAMeshColliderCommon()
	{
	}
}
[Token(Token = "0x2000065")]
public class SABoneCollider : MonoBehaviour
{
	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SABoneColliderCommon.SABoneColliderProperty boneColliderProperty;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string defaultName;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SABoneColliderCommon.SABoneColliderProperty defaultBoneColliderProperty;

	[NonSerialized]
	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SABoneColliderCommon.SABoneColliderProperty edittingBoneColliderProperty;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool modified;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool modifiedChildren;

	[NonSerialized]
	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool cleanupModified;

	[NonSerialized]
	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool isDebug;

	[Token(Token = "0x1700003B")]
	public SABoneColliderCommon.BoneProperty boneProperty
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x743728", Offset = "0x743728", VA = "0x743728")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003C")]
	public SABoneColliderCommon.SplitProperty splitProperty
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x743740", Offset = "0x743740", VA = "0x743740")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003D")]
	public SAColliderBuilderCommon.ReducerProperty reducerProperty
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x743758", Offset = "0x743758", VA = "0x743758")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003E")]
	public SAColliderBuilderCommon.ColliderProperty colliderProperty
	{
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x743770", Offset = "0x743770", VA = "0x743770")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x743788", Offset = "0x743788", VA = "0x743788")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000040")]
	public bool recursivery
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x7437A0", Offset = "0x7437A0", VA = "0x7437A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000041")]
	public bool modifyNameEnalbed
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x7437C8", Offset = "0x7437C8", VA = "0x7437C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x7437E8", Offset = "0x7437E8", VA = "0x7437E8")]
	public void ChangeDefaultName(string defaultName)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x7439F8", Offset = "0x7439F8", VA = "0x7439F8")]
	public void ChangeModified(bool modified)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x743A78", Offset = "0x743A78", VA = "0x743A78")]
	public void ChangeModifiedChildren(bool modifiedChildren)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x743AF8", Offset = "0x743AF8", VA = "0x743AF8")]
	public void ResetModified()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x743B70", Offset = "0x743B70", VA = "0x743B70")]
	public void ResetModifyName()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x74390C", Offset = "0x74390C", VA = "0x74390C")]
	public string _ComputeModifyName()
	{
		return null;
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x743864", Offset = "0x743864", VA = "0x743864")]
	public bool _IsModifyName()
	{
		return default(bool);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x743BD0", Offset = "0x743BD0", VA = "0x743BD0")]
	public SABoneCollider()
	{
	}
}
[Token(Token = "0x2000066")]
public class SABoneColliderBuilder : MonoBehaviour
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SABoneColliderCommon.SABoneColliderBuilderProperty boneColliderBuilderProperty;

	[NonSerialized]
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SABoneColliderCommon.SABoneColliderBuilderProperty edittingBoneColliderBuilderProperty;

	[NonSerialized]
	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool cleanupModified;

	[NonSerialized]
	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isDebug;

	[Token(Token = "0x17000042")]
	public SABoneColliderCommon.SplitProperty splitProperty
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x743D8C", Offset = "0x743D8C", VA = "0x743D8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000043")]
	public SAColliderBuilderCommon.ReducerProperty reducerProperty
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x743DA4", Offset = "0x743DA4", VA = "0x743DA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000044")]
	public SAColliderBuilderCommon.ColliderProperty colliderProperty
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x743DBC", Offset = "0x743DBC", VA = "0x743DBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000045")]
	public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty
	{
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x743DD4", Offset = "0x743DD4", VA = "0x743DD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x743DEC", Offset = "0x743DEC", VA = "0x743DEC")]
	public SABoneColliderBuilder()
	{
	}
}
[Token(Token = "0x2000067")]
public class SABoneColliderChild : MonoBehaviour
{
	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x743F5C", Offset = "0x743F5C", VA = "0x743F5C")]
	public SABoneColliderChild()
	{
	}
}
[Token(Token = "0x2000068")]
public class SAMeshCollider : MonoBehaviour
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SAMeshColliderCommon.SplitMesh splitMesh;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SAMeshColliderCommon.SplitMode splitMode;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SAMeshColliderCommon.SAMeshColliderProperty meshColliderProperty;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string defaultName;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SAMeshColliderCommon.SAMeshColliderProperty defaultMeshColliderProperty;

	[NonSerialized]
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SAMeshColliderCommon.SAMeshColliderProperty edittingMeshCollidertProperty;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool modified;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool modifiedChildren;

	[NonSerialized]
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool cleanupModified;

	[NonSerialized]
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool isDebug;

	[Token(Token = "0x17000046")]
	public SAMeshColliderCommon.SplitProperty splitProperty
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x74461C", Offset = "0x74461C", VA = "0x74461C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000047")]
	public SAColliderBuilderCommon.ReducerProperty reducerProperty
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x744634", Offset = "0x744634", VA = "0x744634")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000048")]
	public SAColliderBuilderCommon.ColliderProperty colliderProperty
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x74464C", Offset = "0x74464C", VA = "0x74464C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000049")]
	public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x744664", Offset = "0x744664", VA = "0x744664")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004A")]
	public bool splitMaterialEnabled
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x74467C", Offset = "0x74467C", VA = "0x74467C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004B")]
	public bool splitPrimitiveEnabled
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x7446A4", Offset = "0x7446A4", VA = "0x7446A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004C")]
	public bool splitPolygonNormalEnabled
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x7446CC", Offset = "0x7446CC", VA = "0x7446CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004D")]
	public float splitPolygonNormalAngle
	{
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x7446F4", Offset = "0x7446F4", VA = "0x7446F4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700004E")]
	public bool modifyNameEnalbed
	{
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x744710", Offset = "0x744710", VA = "0x744710")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x744730", Offset = "0x744730", VA = "0x744730")]
	public void ChangeDefaultName(string defaultName)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x744940", Offset = "0x744940", VA = "0x744940")]
	public void ChangeModified(bool modified)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x7449C0", Offset = "0x7449C0", VA = "0x7449C0")]
	public void ChangeModifiedChildren(bool modifiedChildren)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x744A40", Offset = "0x744A40", VA = "0x744A40")]
	public void ResetModified()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x744AB8", Offset = "0x744AB8", VA = "0x744AB8")]
	public void ResetModifyName()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x744854", Offset = "0x744854", VA = "0x744854")]
	public string _ComputeModifyName()
	{
		return null;
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x7447AC", Offset = "0x7447AC", VA = "0x7447AC")]
	public bool _IsModifyName()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x744B18", Offset = "0x744B18", VA = "0x744B18")]
	public SAMeshCollider()
	{
	}
}
[Token(Token = "0x2000069")]
public class SAMeshColliderBuilder : MonoBehaviour
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SAMeshColliderCommon.SAMeshColliderBuilderProperty meshColliderBuilderProperty;

	[NonSerialized]
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SAMeshColliderCommon.SAMeshColliderBuilderProperty edittingMeshColliderBuilderProperty;

	[NonSerialized]
	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool cleanupModified;

	[NonSerialized]
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isDebug;

	[Token(Token = "0x1700004F")]
	public SAMeshColliderCommon.SplitProperty splitProperty
	{
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x744CE4", Offset = "0x744CE4", VA = "0x744CE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000050")]
	public SAColliderBuilderCommon.ReducerProperty reducerProperty
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x744CFC", Offset = "0x744CFC", VA = "0x744CFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000051")]
	public SAColliderBuilderCommon.ColliderProperty colliderProperty
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x744D14", Offset = "0x744D14", VA = "0x744D14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000052")]
	public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty
	{
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x744D2C", Offset = "0x744D2C", VA = "0x744D2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	public bool splitMaterialEnabled
	{
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x744D44", Offset = "0x744D44", VA = "0x744D44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000054")]
	public bool splitPrimitiveEnabled
	{
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x744D6C", Offset = "0x744D6C", VA = "0x744D6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000055")]
	public bool splitPolygonNormalEnabled
	{
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x744D94", Offset = "0x744D94", VA = "0x744D94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000056")]
	public float splitPolygonNormalAngle
	{
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x744DBC", Offset = "0x744DBC", VA = "0x744DBC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x744DD8", Offset = "0x744DD8", VA = "0x744DD8")]
	public SAMeshColliderBuilder()
	{
	}
}
[Token(Token = "0x200006A")]
public class ThirdControllerAttach : MonoBehaviour
{
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject thirdControllelr;

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x974F6C", Offset = "0x974F6C", VA = "0x974F6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x974FD4", Offset = "0x974FD4", VA = "0x974FD4")]
	public ThirdControllerAttach()
	{
	}
}
[Token(Token = "0x200006B")]
public class BiasSetting : MonoBehaviour
{
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5734A8", Offset = "0x5734A8")]
	private float settingNum;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5734F4", Offset = "0x5734F4")]
	private bool isChildSet;

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x715690", Offset = "0x715690", VA = "0x715690")]
	public void Start()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x715B7C", Offset = "0x715B7C", VA = "0x715B7C")]
	public BiasSetting()
	{
	}
}
[Token(Token = "0x200006C")]
public class CalcManager : MonoBehaviour
{
	[Token(Token = "0x2000366")]
	public enum AXIS
	{
		[Token(Token = "0x4001730")]
		X,
		[Token(Token = "0x4001731")]
		Y,
		[Token(Token = "0x4001732")]
		Z,
		[Token(Token = "0x4001733")]
		NONE
	}

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 mCalcVector3;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Vector2 mCalcVector2;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int mCalcInt;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float mCalcFloat;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static Vector3 mVector3Zero;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Vector3 mCalcVector3Buf;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static Vector2 mCalcVector2Buf;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static Quaternion mCalcQuaternion;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static GameObject mCalcGameObject;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static List<Vector3> mCalcVector3List;

	[Token(Token = "0x4000260")]
	private const float GRAVITY_SCALE = -9.80665f;

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x716438", Offset = "0x716438", VA = "0x716438")]
	public static bool GetHalfProbability()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x716460", Offset = "0x716460", VA = "0x716460")]
	public static Vector2 DirVec2(GameObject obj, GameObject target)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x7165C8", Offset = "0x7165C8", VA = "0x7165C8")]
	public static Vector2 DirVec2(Vector3 obj, Vector3 target)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x7166B4", Offset = "0x7166B4", VA = "0x7166B4")]
	public static float Length(GameObject obj, GameObject target)
	{
		return default(float);
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x716928", Offset = "0x716928", VA = "0x716928")]
	public static float Length(Vector3 obj, Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x7169FC", Offset = "0x7169FC", VA = "0x7169FC")]
	public static float Length(Vector2 obj, Vector2 target)
	{
		return default(float);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x716AB0", Offset = "0x716AB0", VA = "0x716AB0")]
	public static float Vec2Length(Vector3 _obj, Vector3 _target)
	{
		return default(float);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x716B6C", Offset = "0x716B6C", VA = "0x716B6C")]
	public static Vector3 Vec3Center(Vector3 _obj, Vector3 _target)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x716C20", Offset = "0x716C20", VA = "0x716C20")]
	public static Vector2 Vec2Center(Vector2 _obj, Vector2 _target)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x716CBC", Offset = "0x716CBC", VA = "0x716CBC")]
	public static float Vec2Cross(Vector2 lhs, Vector2 rhs)
	{
		return default(float);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x716CCC", Offset = "0x716CCC", VA = "0x716CCC")]
	public static bool ChackRange(float _data, float _standard, float _range)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x716CEC", Offset = "0x716CEC", VA = "0x716CEC")]
	public static bool CheckRotArea(Vector3 _center, Vector3 _traget, float _start, float _end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x716DF0", Offset = "0x716DF0", VA = "0x716DF0")]
	public static float AngleUsingVec(Vector3 _center, Vector3 _target)
	{
		return default(float);
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x716E90", Offset = "0x716E90", VA = "0x716E90")]
	public static Vector3 PosRotation2D(Vector3 _pos, Vector3 _center, float _rot, AXIS _axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x7171A0", Offset = "0x7171A0", VA = "0x7171A0")]
	public Vector3[] GetGridPos(int _row, int _column, float _wGap, float _hGap)
	{
		return null;
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x71730C", Offset = "0x71730C", VA = "0x71730C")]
	public static float GetVelocityTopTime(float _velocity, float _g = -9.80665f, bool _direct = true)
	{
		return default(float);
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x717320", Offset = "0x717320", VA = "0x717320")]
	public static float GetVelocityTopPos(float _velocity, float _startHeight, float _g = -9.80665f, bool _direct = true)
	{
		return default(float);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x7173B8", Offset = "0x7173B8", VA = "0x7173B8")]
	public static Vector3 GetVelocityTopPos(Vector3 _velocity, Vector3 _startPos, float _g = -9.80665f, bool _direct = true)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x717608", Offset = "0x717608", VA = "0x717608")]
	public static float GetVelocityFallGroundTime(Vector3 _velocity, Vector3 _startPos, float _groundHeight, float _g = -9.80665f, bool _direct = true)
	{
		return default(float);
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x7174B0", Offset = "0x7174B0", VA = "0x7174B0")]
	public static Vector3 GetVelocityFallPositionY(Vector3 _velocity, Vector3 _startPos, float _y, float _g = -9.80665f, bool _direct = true)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x7176F4", Offset = "0x7176F4", VA = "0x7176F4")]
	public static Vector3 GetVelocityFallPositionX(Vector3 _velocity, Vector3 _startPos, float _x, float _g = -9.80665f, bool _direct = true)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x7178F4", Offset = "0x7178F4", VA = "0x7178F4")]
	public static Vector3 GetVelocityFallPositionZ(Vector3 _velocity, Vector3 _startPos, float _z, float _g = -9.80665f, bool _direct = true)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x7177CC", Offset = "0x7177CC", VA = "0x7177CC")]
	public static Vector3 GetVelocityTimeToPosition(Vector3 _velocity, Vector3 _startPos, float _time, float _g = -9.80665f, bool _direct = true)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x7179CC", Offset = "0x7179CC", VA = "0x7179CC")]
	public static Vector3 GetVelocityPositionVec(Vector3 _startPos, Vector3 _targetPos, float _time, float _g = -9.80665f, bool _direct = true)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x717A38", Offset = "0x717A38", VA = "0x717A38")]
	public static float GetVelocityTopVec(float _targetHeight, float _g = -9.80665f, bool _direct = true)
	{
		return default(float);
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x717ADC", Offset = "0x717ADC", VA = "0x717ADC")]
	public static DateTime RandomDateTime(DateTime _startDateTime, DateTime _endDatetime)
	{
		return default(DateTime);
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x717C00", Offset = "0x717C00", VA = "0x717C00")]
	public static int ArraySum(params int[] _array)
	{
		return default(int);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x717C6C", Offset = "0x717C6C", VA = "0x717C6C")]
	public static float ArraySum(params float[] _array)
	{
		return default(float);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x717CD4", Offset = "0x717CD4", VA = "0x717CD4")]
	public static int GetRandomIndex(params int[] _weightTable)
	{
		return default(int);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x717D6C", Offset = "0x717D6C", VA = "0x717D6C")]
	public static int GetRandomIndex(params float[] _weightTable)
	{
		return default(int);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x717E3C", Offset = "0x717E3C", VA = "0x717E3C")]
	public static int GetListContentCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x717E44", Offset = "0x717E44", VA = "0x717E44")]
	public static bool CheckInSight(Vector3 _basePos, Vector3 _targetPos, Vector3 _sightVec, float _sightAngle, float _sightLength, AXIS _axis = AXIS.NONE)
	{
		return default(bool);
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x718030", Offset = "0x718030", VA = "0x718030")]
	public CalcManager()
	{
	}
}
[Token(Token = "0x200006D")]
public class Fader : SingletonMonoBehaviour<Fader>
{
	[Token(Token = "0x2000367")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570720", Offset = "0x570720")]
	private sealed class <_FadeOut>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fader <>4__this;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _fadeSpeed;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color>5__2;

		[Token(Token = "0x170001B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001683")]
			[Address(RVA = "0xBC1278", Offset = "0xBC1278", VA = "0xBC1278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001685")]
			[Address(RVA = "0xBC12E0", Offset = "0xBC12E0", VA = "0xBC12E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xBC0D9C", Offset = "0xBC0D9C", VA = "0xBC0D9C")]
		[DebuggerHidden]
		public <_FadeOut>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xBC1104", Offset = "0xBC1104", VA = "0xBC1104", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xBC1108", Offset = "0xBC1108", VA = "0xBC1108", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xBC1280", Offset = "0xBC1280", VA = "0xBC1280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000368")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570730", Offset = "0x570730")]
	private sealed class <_FadeIn>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fader <>4__this;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _fadeSpeed;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color>5__2;

		[Token(Token = "0x170001BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001689")]
			[Address(RVA = "0xBC1094", Offset = "0xBC1094", VA = "0xBC1094", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600168B")]
			[Address(RVA = "0xBC10FC", Offset = "0xBC10FC", VA = "0xBC10FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xBC0DC8", Offset = "0xBC0DC8", VA = "0xBC0DC8")]
		[DebuggerHidden]
		public <_FadeIn>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xBC0F1C", Offset = "0xBC0F1C", VA = "0xBC0F1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xBC0F20", Offset = "0xBC0F20", VA = "0xBC0F20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xBC109C", Offset = "0xBC109C", VA = "0xBC109C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Color fadeInColor;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Color fadeOutColor;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573540", Offset = "0x573540")]
	private SpriteRenderer spFade;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isFading;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xBC0BB8", Offset = "0xBC0BB8", VA = "0xBC0BB8")]
	public void FadeOut(float _fadeSpeed)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xBC0C70", Offset = "0xBC0C70", VA = "0xBC0C70")]
	public void FadeIn(float _fadeSpeed)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xBC0BF0", Offset = "0xBC0BF0", VA = "0xBC0BF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57F2E4", Offset = "0x57F2E4")]
	private IEnumerator _FadeOut(float _fadeSpeed)
	{
		return null;
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xBC0D1C", Offset = "0xBC0D1C", VA = "0xBC0D1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57F348", Offset = "0x57F348")]
	private IEnumerator _FadeIn(float _fadeSpeed)
	{
		return null;
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xBC0DF4", Offset = "0xBC0DF4", VA = "0xBC0DF4")]
	public Fader()
	{
	}
}
[Token(Token = "0x200006E")]
internal interface IAttackable<T>
{
	[Token(Token = "0x600031B")]
	int GetAttackValue();
}
[Token(Token = "0x200006F")]
internal interface ICollisionCallable
{
	[Token(Token = "0x600031C")]
	void CallCollisionEnter(Collision _col);
}
[Token(Token = "0x2000070")]
public interface IDamageable<T>
{
	[Token(Token = "0x600031D")]
	void Damage(T _damageValue, string _tag);

	[Token(Token = "0x600031E")]
	void SetDamagePos(Vector3 _posGen, Vector3 _posHit, float _power);

	[Token(Token = "0x600031F")]
	void BlowingOff(Vector3 _pos, float _power);
}
[Token(Token = "0x2000071")]
public interface IRegionSettable
{
	[Token(Token = "0x6000320")]
	void SetRegionType(Region.TYPE _type);
}
[Token(Token = "0x2000072")]
public class InitializationAtStartup : MonoBehaviour
{
	[Token(Token = "0x6000321")]
	[Address(RVA = "0x86D6C4", Offset = "0x86D6C4", VA = "0x86D6C4")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x57F3AC", Offset = "0x57F3AC")]
	private static void OnStart()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x86D82C", Offset = "0x86D82C", VA = "0x86D82C")]
	public InitializationAtStartup()
	{
	}
}
[Token(Token = "0x2000073")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x56ED88", Offset = "0x56ED88")]
public class LaserPointer_2 : MonoBehaviour
{
	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer line;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RaycastHit hit;

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x86E688", Offset = "0x86E688", VA = "0x86E688")]
	private void Start()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x86E6E0", Offset = "0x86E6E0", VA = "0x86E6E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x86E934", Offset = "0x86E934", VA = "0x86E934")]
	public LaserPointer_2()
	{
	}
}
[Token(Token = "0x2000074")]
public class LookAt : MonoBehaviour
{
	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform this_t_;

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x91E9B0", Offset = "0x91E9B0", VA = "0x91E9B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x91E9D8", Offset = "0x91E9D8", VA = "0x91E9D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x91EB2C", Offset = "0x91EB2C", VA = "0x91EB2C")]
	public LookAt()
	{
	}
}
[Token(Token = "0x2000075")]
public class Ranking : MonoBehaviour
{
	[Token(Token = "0x2000369")]
	public class Data
	{
		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int NAME_MAX_LEN;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int SCORE_COUNT_STOP;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int rank;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string playerName;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int score;

		[Token(Token = "0x170001BD")]
		public int Rank
		{
			[Token(Token = "0x600168D")]
			[Address(RVA = "0x73FD38", Offset = "0x73FD38", VA = "0x73FD38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600168C")]
			[Address(RVA = "0x73FD30", Offset = "0x73FD30", VA = "0x73FD30")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public string PlayerName
		{
			[Token(Token = "0x600168F")]
			[Address(RVA = "0x73FD90", Offset = "0x73FD90", VA = "0x73FD90")]
			get
			{
				return null;
			}
			[Token(Token = "0x600168E")]
			[Address(RVA = "0x73FD40", Offset = "0x73FD40", VA = "0x73FD40")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public int Score
		{
			[Token(Token = "0x6001691")]
			[Address(RVA = "0x73FE20", Offset = "0x73FE20", VA = "0x73FE20")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001690")]
			[Address(RVA = "0x73FD98", Offset = "0x73FD98", VA = "0x73FD98")]
			set
			{
			}
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x73FCCC", Offset = "0x73FCCC", VA = "0x73FCCC")]
		public Data(int _rank, string _playerName, int _score)
		{
		}
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x73FBC4", Offset = "0x73FBC4", VA = "0x73FBC4")]
	public Data[] GetRankingData(int _startNum, int _contentLengh)
	{
		return null;
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x73FD28", Offset = "0x73FD28", VA = "0x73FD28")]
	public Ranking()
	{
	}
}
[Token(Token = "0x2000076")]
public static class Region
{
	[Token(Token = "0x200036A")]
	public enum TYPE
	{
		[Token(Token = "0x4001744")]
		NONE,
		[Token(Token = "0x4001745")]
		HEAD,
		[Token(Token = "0x4001746")]
		BODY,
		[Token(Token = "0x4001747")]
		ARM,
		[Token(Token = "0x4001748")]
		FOOT
	}
}
[Token(Token = "0x2000077")]
public abstract class SavableSingleton<T> where T : SavableSingleton<T>, new()
{
	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T instance;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string folderPath;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string filePath;

	[Token(Token = "0x17000057")]
	public static T Instance
	{
		[Token(Token = "0x600032B")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600032C")]
	public static void Save()
	{
	}

	[Token(Token = "0x600032D")]
	public void _Save()
	{
	}

	[Token(Token = "0x600032E")]
	public static void Load()
	{
	}

	[Token(Token = "0x600032F")]
	private void writeFile(string filePath)
	{
	}

	[Token(Token = "0x6000330")]
	public static void Reset()
	{
	}

	[Token(Token = "0x6000331")]
	protected SavableSingleton()
	{
	}
}
[Token(Token = "0x2000078")]
public class SaveDataManager : SingletonMonoBehaviour<SaveDataManager>
{
	[Token(Token = "0x200036B")]
	public enum AreaIdx
	{
		[Token(Token = "0x400174A")]
		CITY,
		[Token(Token = "0x400174B")]
		CAMP,
		[Token(Token = "0x400174C")]
		BASE,
		[Token(Token = "0x400174D")]
		AIRPORT,
		[Token(Token = "0x400174E")]
		ENDLESS
	}

	[Token(Token = "0x200036C")]
	public class SaveData : SavableSingleton<SaveData>
	{
		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string userID;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, List<int>> dicScoreList;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, int> m_steamEntrieScore;

		[Token(Token = "0x170001C0")]
		public Dictionary<string, int> SteamEntrieScore
		{
			[Token(Token = "0x6001693")]
			[Address(RVA = "0x74575C", Offset = "0x74575C", VA = "0x74575C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001694")]
			[Address(RVA = "0x745764", Offset = "0x745764", VA = "0x745764")]
			private set
			{
			}
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x74576C", Offset = "0x74576C", VA = "0x74576C")]
		public SaveData()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x745314", Offset = "0x745314", VA = "0x745314")]
		public void ResetLocalScore()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570740", Offset = "0x570740")]
	private sealed class <>c
	{
		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<int> <>9__8_0;

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x74574C", Offset = "0x74574C", VA = "0x74574C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x745754", Offset = "0x745754", VA = "0x745754")]
		internal int <SetLocalScore>b__8_0(int a, int b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string KEY_LOCAL_SCORE;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string KEY_AREA_SCORE;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string TAG_AREA_IDX;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int SCORE_MAX;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly int LOCAL_SCORE_LOW_NUM;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly int STAGE_AREA_NUM;

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x742A08", Offset = "0x742A08", VA = "0x742A08")]
	public void SetLocalScore(int _areaIdx, int _score)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x742C34", Offset = "0x742C34", VA = "0x742C34")]
	public List<int> GetLocalScore(int _areaIdx)
	{
		return null;
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x74529C", Offset = "0x74529C", VA = "0x74529C")]
	public void ResetLocalScore()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x7454D4", Offset = "0x7454D4", VA = "0x7454D4")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x745564", Offset = "0x745564", VA = "0x745564")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x745234", Offset = "0x745234", VA = "0x745234")]
	public void Save()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x7455CC", Offset = "0x7455CC", VA = "0x7455CC")]
	public SaveDataManager()
	{
	}
}
[Token(Token = "0x2000079")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x56EDEC", Offset = "0x56EDEC")]
public class SortingLayer : MonoBehaviour
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[SortingLayer]
	private string layerName;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int orderInLayer;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer _renderer;

	[Token(Token = "0x17000058")]
	public string LayerName
	{
		[Token(Token = "0x600033D")]
		[Address(RVA = "0x749F00", Offset = "0x749F00", VA = "0x749F00")]
		get
		{
			return null;
		}
		[Token(Token = "0x600033E")]
		[Address(RVA = "0x749D5C", Offset = "0x749D5C", VA = "0x749D5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public int OrderInLayer
	{
		[Token(Token = "0x600033F")]
		[Address(RVA = "0x749F08", Offset = "0x749F08", VA = "0x749F08")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000340")]
		[Address(RVA = "0x749E18", Offset = "0x749E18", VA = "0x749E18")]
		set
		{
		}
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x749D30", Offset = "0x749D30", VA = "0x749D30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x749ED4", Offset = "0x749ED4", VA = "0x749ED4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x749F10", Offset = "0x749F10", VA = "0x749F10")]
	public SortingLayer()
	{
	}
}
[Token(Token = "0x200007A")]
internal class SortingLayerAttribute : PropertyAttribute
{
	[Token(Token = "0x6000342")]
	[Address(RVA = "0x749F68", Offset = "0x749F68", VA = "0x749F68")]
	public SortingLayerAttribute()
	{
	}
}
[Token(Token = "0x200007B")]
public class SystemSettingManager : SingletonMonoBehaviour<SystemSettingManager>
{
	[Token(Token = "0x200036E")]
	public enum Language
	{
		[Token(Token = "0x4001755")]
		ENGLISH,
		[Token(Token = "0x4001756")]
		JAPANESE,
		[Token(Token = "0x4001757")]
		CHINESE_SIMPLIFIED,
		[Token(Token = "0x4001758")]
		CHINESE_TRADITIONAL,
		[Token(Token = "0x4001759")]
		MAX
	}

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5735D4", Offset = "0x5735D4")]
	private Language <LanguageSetting>k__BackingField;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string pathSettingINI;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private INIFile settingINI;

	[Token(Token = "0x1700005A")]
	public Language LanguageSetting
	{
		[Token(Token = "0x6000343")]
		[Address(RVA = "0x96FA40", Offset = "0x96FA40", VA = "0x96FA40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F3BC", Offset = "0x57F3BC")]
		get
		{
			return default(Language);
		}
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x96FA48", Offset = "0x96FA48", VA = "0x96FA48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F3CC", Offset = "0x57F3CC")]
		set
		{
		}
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x96FA50", Offset = "0x96FA50", VA = "0x96FA50")]
	private void Init()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x96FABC", Offset = "0x96FABC", VA = "0x96FABC")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x96FB54", Offset = "0x96FB54", VA = "0x96FB54")]
	public SystemSettingManager()
	{
	}
}
[Token(Token = "0x200007C")]
public class TextSwitcher : SingletonMonoBehaviour<TextSwitcher>
{
	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5735E4", Offset = "0x5735E4")]
	private GameObject[] arrayTextUI;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int textIdx;

	[Token(Token = "0x1700005B")]
	public int TextIdx
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x973C98", Offset = "0x973C98", VA = "0x973C98")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x973CA0", Offset = "0x973CA0", VA = "0x973CA0")]
	public void Next()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x974068", Offset = "0x974068", VA = "0x974068")]
	public void Back()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x97441C", Offset = "0x97441C", VA = "0x97441C")]
	private void Start()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x974834", Offset = "0x974834", VA = "0x974834")]
	public TextSwitcher()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x9748A4", Offset = "0x9748A4", VA = "0x9748A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F3DC", Offset = "0x57F3DC")]
	private void <Next>b__4_0()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x974C08", Offset = "0x974C08", VA = "0x974C08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F3EC", Offset = "0x57F3EC")]
	private void <Back>b__5_0()
	{
	}
}
[Token(Token = "0x200007D")]
public static class TransformExtension
{
	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 mCalcVector3;

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x975D60", Offset = "0x975D60", VA = "0x975D60")]
	public static void SetPosition(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x975E00", Offset = "0x975E00", VA = "0x975E00")]
	public static void SetPositionX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x975EA8", Offset = "0x975EA8", VA = "0x975EA8")]
	public static void SetPositionY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x975F50", Offset = "0x975F50", VA = "0x975F50")]
	public static void SetPositionZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x975FF8", Offset = "0x975FF8", VA = "0x975FF8")]
	public static void AddPosition(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x9760CC", Offset = "0x9760CC", VA = "0x9760CC")]
	public static void AddPositionX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x97618C", Offset = "0x97618C", VA = "0x97618C")]
	public static void AddPositionY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x97624C", Offset = "0x97624C", VA = "0x97624C")]
	public static void AddPositionZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x976310", Offset = "0x976310", VA = "0x976310")]
	public static void SetLocalPosition(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x975A70", Offset = "0x975A70", VA = "0x975A70")]
	public static void SetLocalPositionX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x9763B0", Offset = "0x9763B0", VA = "0x9763B0")]
	public static void SetLocalPositionY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x976458", Offset = "0x976458", VA = "0x976458")]
	public static void SetLocalPositionZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x976500", Offset = "0x976500", VA = "0x976500")]
	public static void AddLocalPosition(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x9765D4", Offset = "0x9765D4", VA = "0x9765D4")]
	public static void AddLocalPositionX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x976694", Offset = "0x976694", VA = "0x976694")]
	public static void AddLocalPositionY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x976754", Offset = "0x976754", VA = "0x976754")]
	public static void AddLocalPositionZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x974794", Offset = "0x974794", VA = "0x974794")]
	public static void SetLocalScale(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x976818", Offset = "0x976818", VA = "0x976818")]
	public static void SetLocalScaleX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x9768C0", Offset = "0x9768C0", VA = "0x9768C0")]
	public static void SetLocalScaleY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x976968", Offset = "0x976968", VA = "0x976968")]
	public static void SetLocalScaleZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x976A10", Offset = "0x976A10", VA = "0x976A10")]
	public static void AddLocalScale(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x976AE4", Offset = "0x976AE4", VA = "0x976AE4")]
	public static void AddLocalScaleX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x976BA4", Offset = "0x976BA4", VA = "0x976BA4")]
	public static void AddLocalScaleY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x976C64", Offset = "0x976C64", VA = "0x976C64")]
	public static void AddLocalScaleZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x976D28", Offset = "0x976D28", VA = "0x976D28")]
	public static void SetEulerAngles(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x976DC8", Offset = "0x976DC8", VA = "0x976DC8")]
	public static void SetEulerAnglesX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x976E70", Offset = "0x976E70", VA = "0x976E70")]
	public static void SetEulerAnglesY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x976F18", Offset = "0x976F18", VA = "0x976F18")]
	public static void SetEulerAnglesZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x976FC0", Offset = "0x976FC0", VA = "0x976FC0")]
	public static void AddEulerAngles(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x977094", Offset = "0x977094", VA = "0x977094")]
	public static void AddEulerAnglesX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x977154", Offset = "0x977154", VA = "0x977154")]
	public static void AddEulerAnglesY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x977214", Offset = "0x977214", VA = "0x977214")]
	public static void AddEulerAnglesZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x9772D8", Offset = "0x9772D8", VA = "0x9772D8")]
	public static void SetLocalEulerAngles(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x977378", Offset = "0x977378", VA = "0x977378")]
	public static void SetLocalEulerAnglesX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x977420", Offset = "0x977420", VA = "0x977420")]
	public static void SetLocalEulerAnglesY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x9774C8", Offset = "0x9774C8", VA = "0x9774C8")]
	public static void SetLocalEulerAnglesZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x977570", Offset = "0x977570", VA = "0x977570")]
	public static void AddLocalEulerAngles(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x977644", Offset = "0x977644", VA = "0x977644")]
	public static void AddLocalEulerAnglesX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x977704", Offset = "0x977704", VA = "0x977704")]
	public static void AddLocalEulerAnglesY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x9777C4", Offset = "0x9777C4", VA = "0x9777C4")]
	public static void AddLocalEulerAnglesZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x977888", Offset = "0x977888", VA = "0x977888")]
	public static Vector3 GetNegativeNumberRotation(this Transform transform)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200007E")]
public class VR_SceneChangeManager : SingletonMonoBehaviour<VR_SceneChangeManager>
{
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570750", Offset = "0x570750")]
	private sealed class <WaitforOVROverlay>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VR_SceneChangeManager <>4__this;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _isViewLoadingScreen;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _sceneName;

		[Token(Token = "0x170001C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600169D")]
			[Address(RVA = "0x791578", Offset = "0x791578", VA = "0x791578", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600169F")]
			[Address(RVA = "0x7915E0", Offset = "0x7915E0", VA = "0x7915E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x7910F8", Offset = "0x7910F8", VA = "0x7910F8")]
		[DebuggerHidden]
		public <WaitforOVROverlay>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x7911D8", Offset = "0x7911D8", VA = "0x7911D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x7911DC", Offset = "0x7911DC", VA = "0x7911DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x791580", Offset = "0x791580", VA = "0x791580", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isShowGuid;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float defaultTime;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color defaultColor;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573630", Offset = "0x573630")]
	private OVRScreenFade screenFade;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57367C", Offset = "0x57367C")]
	private GameObject loadingScreenObj;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OVROverlay cubemapOverlay;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OVROverlay loadingTextQuadOverlay;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float distanceFromCamToLoadText;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool loadAsync;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AsyncOperation async;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isCanSceneChange;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isFirstTitleLoad;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool isFirstTutorialLoad;

	[Token(Token = "0x1700005C")]
	public bool IsFirstTitleLoad
	{
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x790DE4", Offset = "0x790DE4", VA = "0x790DE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x790DEC", Offset = "0x790DEC", VA = "0x790DEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public bool IsFirstTutorialLoad
	{
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x790DF8", Offset = "0x790DF8", VA = "0x790DF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037B")]
		[Address(RVA = "0x790E00", Offset = "0x790E00", VA = "0x790E00")]
		set
		{
		}
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x790E0C", Offset = "0x790E0C", VA = "0x790E0C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x790F1C", Offset = "0x790F1C", VA = "0x790F1C")]
	public void LoadLevel(string _sceneName, bool _isViewLoadingScreen = false)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x790F24", Offset = "0x790F24", VA = "0x790F24")]
	public void LoadLevel(string _sceneName, float _time, Color _color, bool _isViewLoadingScreen)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x79106C", Offset = "0x79106C", VA = "0x79106C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57F68C", Offset = "0x57F68C")]
	private IEnumerator WaitforOVROverlay(string _sceneName, bool _isViewLoadingScreen)
	{
		return null;
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x791124", Offset = "0x791124", VA = "0x791124")]
	public void SetLoadingScreenObj(bool _isEnable)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x791144", Offset = "0x791144", VA = "0x791144")]
	public VR_SceneChangeManager()
	{
	}
}
[Token(Token = "0x200007F")]
public class EffectDefeatScore : MonoBehaviorExpansion
{
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570760", Offset = "0x570760")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EffectDefeatScore <>4__this;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string numStr;

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xBB87C8", Offset = "0xBB87C8", VA = "0xBB87C8")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xBB8C38", Offset = "0xBB8C38", VA = "0xBB8C38")]
		internal void <SetNumImg>b__0()
		{
		}
	}

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float NUM_SPRITE_OFFSET;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform rootSprite;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject headShotRootObj;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5736F8", Offset = "0x5736F8")]
	private SpriteRenderer headShotSprite;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite[] arrayNumSprite;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SpriteRenderer[] arraySpriteRenderer;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float defRootX;

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xBB7D74", Offset = "0xBB7D74", VA = "0xBB7D74")]
	public void Set(int _score, bool _isHeadShot)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xBB8254", Offset = "0xBB8254", VA = "0xBB8254")]
	private void SetNumImg(int _score)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xBB87D0", Offset = "0xBB87D0", VA = "0xBB87D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xBB88B0", Offset = "0xBB88B0", VA = "0xBB88B0")]
	public EffectDefeatScore()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xBB890C", Offset = "0xBB890C", VA = "0xBB890C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F6F0", Offset = "0x57F6F0")]
	private void <Set>b__7_0()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xBB8988", Offset = "0xBB8988", VA = "0xBB8988")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F700", Offset = "0x57F700")]
	private void <Set>b__7_1()
	{
	}
}
[Token(Token = "0x2000080")]
public class EffectGameEnd : SimpleEffect
{
	[Token(Token = "0x6000389")]
	[Address(RVA = "0xBB8FDC", Offset = "0xBB8FDC", VA = "0xBB8FDC")]
	public void OnCall_CountDownSE()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xBB90D0", Offset = "0xBB90D0", VA = "0xBB90D0")]
	public void OnCall_EndSE()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xBB91D8", Offset = "0xBB91D8", VA = "0xBB91D8")]
	public EffectGameEnd()
	{
	}
}
[Token(Token = "0x2000081")]
public class EffectGameOver : SimpleEffect
{
	[Token(Token = "0x600038C")]
	[Address(RVA = "0xBB91E0", Offset = "0xBB91E0", VA = "0xBB91E0")]
	public EffectGameOver()
	{
	}
}
[Token(Token = "0x2000082")]
public class EffectGameStart : SimpleEffect
{
	[Token(Token = "0x600038D")]
	[Address(RVA = "0xBB91E8", Offset = "0xBB91E8", VA = "0xBB91E8")]
	public void OnCall_CountDownSE()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xBB92A4", Offset = "0xBB92A4", VA = "0xBB92A4")]
	public void OnCall_StartSE()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xBB9360", Offset = "0xBB9360", VA = "0xBB9360")]
	public EffectGameStart()
	{
	}
}
[Token(Token = "0x2000083")]
public static class AUDIO_NAME
{
	[Token(Token = "0x400028F")]
	public const string BGM_AIRPORT = "airport";

	[Token(Token = "0x4000290")]
	public const string BGM_BASE = "base";

	[Token(Token = "0x4000291")]
	public const string BGM_CAMP = "camp";

	[Token(Token = "0x4000292")]
	public const string BGM_MAIN = "main";

	[Token(Token = "0x4000293")]
	public const string BGM_RESULT = "result";

	[Token(Token = "0x4000294")]
	public const string BGM_TITLE = "title";

	[Token(Token = "0x4000295")]
	public const string BGM_TUTORIAL = "tutorial";

	[Token(Token = "0x4000296")]
	public const string SE_AIRPLANE = "airplane";

	[Token(Token = "0x4000297")]
	public const string SE_AIRPLANE_A = "airplane_a";

	[Token(Token = "0x4000298")]
	public const string SE_ALERT = "alert";

	[Token(Token = "0x4000299")]
	public const string SE_AX_DAMAGE = "ax_damage";

	[Token(Token = "0x400029A")]
	public const string SE_BLANK_TRIGGER = "blank_trigger";

	[Token(Token = "0x400029B")]
	public const string SE_BOMB1 = "bomb1";

	[Token(Token = "0x400029C")]
	public const string SE_BREAK_AX = "break_ax";

	[Token(Token = "0x400029D")]
	public const string SE_BREAK_BOMB = "break_bomb";

	[Token(Token = "0x400029E")]
	public const string SE_BREAKBOX = "breakbox";

	[Token(Token = "0x400029F")]
	public const string SE_CAR_BRAKE = "car_brake";

	[Token(Token = "0x40002A0")]
	public const string SE_CAR_ENGINE = "car_engine";

	[Token(Token = "0x40002A1")]
	public const string SE_CAR_ENGINE_START = "car_engine_start";

	[Token(Token = "0x40002A2")]
	public const string SE_CAR_ROCKET_START = "car_rocket_start";

	[Token(Token = "0x40002A3")]
	public const string SE_CHAINSAW_LOOP = "chainsaw_loop";

	[Token(Token = "0x40002A4")]
	public const string SE_COUNT_DOWN = "count_down";

	[Token(Token = "0x40002A5")]
	public const string SE_DOWN = "down";

	[Token(Token = "0x40002A6")]
	public const string SE_DRIVING = "driving";

	[Token(Token = "0x40002A7")]
	public const string SE_ENGINE_OFF = "engine_off";

	[Token(Token = "0x40002A8")]
	public const string SE_EXPLOSION = "explosion";

	[Token(Token = "0x40002A9")]
	public const string SE_FREIGHT_MOVE = "freight_move";

	[Token(Token = "0x40002AA")]
	public const string SE_GAME_END = "game_end";

	[Token(Token = "0x40002AB")]
	public const string SE_GAME_START = "game_start";

	[Token(Token = "0x40002AC")]
	public const string SE_GAMEOVER = "gameover";

	[Token(Token = "0x40002AD")]
	public const string SE_GATLING = "gatling";

	[Token(Token = "0x40002AE")]
	public const string SE_GATLING_END = "gatling_end";

	[Token(Token = "0x40002AF")]
	public const string SE_GATLING_LOOP = "gatling_loop";

	[Token(Token = "0x40002B0")]
	public const string SE_GATLING_START = "gatling_start";

	[Token(Token = "0x40002B1")]
	public const string SE_GIMMICK_WARNING = "Gimmick_Warning";

	[Token(Token = "0x40002B2")]
	public const string SE_GLASS_BREAK = "glass_break";

	[Token(Token = "0x40002B3")]
	public const string SE_GRENADE_GRAB = "grenade_grab";

	[Token(Token = "0x40002B4")]
	public const string SE_GUN1 = "gun1";

	[Token(Token = "0x40002B5")]
	public const string SE_GUN_GRAB = "gun_grab";

	[Token(Token = "0x40002B6")]
	public const string SE_GUN_RELOAD = "gun_reload";

	[Token(Token = "0x40002B7")]
	public const string SE_GUN_RPG = "gun_RPG";

	[Token(Token = "0x40002B8")]
	public const string SE_GUN_SILENCER = "gun_silencer";

	[Token(Token = "0x40002B9")]
	public const string SE_HELICOPTER = "helicopter";

	[Token(Token = "0x40002BA")]
	public const string SE_HELICOPTER_DOWN = "helicopter_down";

	[Token(Token = "0x40002BB")]
	public const string SE_LOGOSATBOX = "LogoSatbox";

	[Token(Token = "0x40002BC")]
	public const string SE_LOGOSATBOXBEFORE = "LogoSatboxBefore";

	[Token(Token = "0x40002BD")]
	public const string SE_MISSILE = "missile";

	[Token(Token = "0x40002BE")]
	public const string SE_PLAYER_DAMAGE = "player_damage";

	[Token(Token = "0x40002BF")]
	public const string SE_RESIDENT_HELP_0 = "resident_help_0";

	[Token(Token = "0x40002C0")]
	public const string SE_RESIDENT_HELP_1 = "resident_help_1";

	[Token(Token = "0x40002C1")]
	public const string SE_RESIDENT_HELP_2 = "resident_help_2";

	[Token(Token = "0x40002C2")]
	public const string SE_RESIDENT_HELP_3 = "resident_help_3";

	[Token(Token = "0x40002C3")]
	public const string SE_RESULT_START = "result_start";

	[Token(Token = "0x40002C4")]
	public const string SE_SCORE_BONUS = "score_bonus";

	[Token(Token = "0x40002C5")]
	public const string SE_SCORE_RANK = "score_rank";

	[Token(Token = "0x40002C6")]
	public const string SE_SCORE_UP = "score_up";

	[Token(Token = "0x40002C7")]
	public const string SE_SPARK = "spark";

	[Token(Token = "0x40002C8")]
	public const string SE_SPLASH = "splash";

	[Token(Token = "0x40002C9")]
	public const string SE_TANK_CANNON = "tank_cannon";

	[Token(Token = "0x40002CA")]
	public const string SE_TANK_MOVE = "tank_move";

	[Token(Token = "0x40002CB")]
	public const string SE_TARGET = "target";

	[Token(Token = "0x40002CC")]
	public const string SE_THROWING = "throwing";

	[Token(Token = "0x40002CD")]
	public const string SE_TRAIN_DOOR = "train_door";

	[Token(Token = "0x40002CE")]
	public const string SE_TRAIN_START = "train_start";

	[Token(Token = "0x40002CF")]
	public const string SE_TRAIN_STOP = "train_stop";

	[Token(Token = "0x40002D0")]
	public const string SE_TRUCK_BRAKE = "truck_brake";

	[Token(Token = "0x40002D1")]
	public const string SE_TRUCK_GLASS_BREAK = "truck_glass_break";

	[Token(Token = "0x40002D2")]
	public const string SE_TUTORIAL_NEXT = "tutorial_next";

	[Token(Token = "0x40002D3")]
	public const string SE_ZOMBI_DEAD_0 = "zombi_dead_0";

	[Token(Token = "0x40002D4")]
	public const string SE_ZOMBI_DEAD_1 = "zombi_dead_1";

	[Token(Token = "0x40002D5")]
	public const string SE_ZOMBI_DEAD_2 = "zombi_dead_2";

	[Token(Token = "0x40002D6")]
	public const string SE_ZOMBI_DEAD_3 = "zombi_dead_3";

	[Token(Token = "0x40002D7")]
	public const string SE_ZOMBI_WALK_0 = "zombi_walk_0";

	[Token(Token = "0x40002D8")]
	public const string SE_ZOMBI_WALK_1 = "zombi_walk_1";

	[Token(Token = "0x40002D9")]
	public const string SE_ZOMBI_WALK_2 = "zombi_walk_2";

	[Token(Token = "0x40002DA")]
	public const string SE_ZOMBI_WALK_3 = "zombi_walk_3";

	[Token(Token = "0x40002DB")]
	public const string SE_ZOMBI_WALK_4 = "zombi_walk_4";

	[Token(Token = "0x40002DC")]
	public const string SE_ZOMBI_WALK_5 = "zombi_walk_5";

	[Token(Token = "0x40002DD")]
	public const string SE_ZOMBI_WALK_6 = "zombi_walk_6";
}
[Token(Token = "0x2000084")]
public static class EFFECT_NAME
{
}
[Token(Token = "0x2000085")]
public static class LAYER_NAME
{
	[Token(Token = "0x40002DE")]
	public const int LAYER_DEFAULT = 0;

	[Token(Token = "0x40002DF")]
	public const int LAYER_TRANSPARENTFX = 1;

	[Token(Token = "0x40002E0")]
	public const int LAYER_IGNORERAYCAST = 2;

	[Token(Token = "0x40002E1")]
	public const int LAYER_WATER = 4;

	[Token(Token = "0x40002E2")]
	public const int LAYER_UI = 5;

	[Token(Token = "0x40002E3")]
	public const int LAYER_GUN = 8;

	[Token(Token = "0x40002E4")]
	public const int LAYER_BULLET = 9;

	[Token(Token = "0x40002E5")]
	public const int LAYER_THROW = 10;

	[Token(Token = "0x40002E6")]
	public const int LAYER_MISSILE = 11;

	[Token(Token = "0x40002E7")]
	public const int LAYER_PLAYERHEAD = 12;

	[Token(Token = "0x40002E8")]
	public const int LAYER_NONEHIT = 13;

	[Token(Token = "0x40002E9")]
	public const int LAYER_LAUNCHPAD = 14;

	[Token(Token = "0x40002EA")]
	public const int LAYER_INTHEVEHICLE = 15;

	[Token(Token = "0x40002EB")]
	public const int LAYER_TARGETEFFECT = 16;

	[Token(Token = "0x40002EC")]
	public const int LAYER_ENEMY = 18;

	[Token(Token = "0x40002ED")]
	public const int DEFAULTMask = 1;

	[Token(Token = "0x40002EE")]
	public const int TRANSPARENTFXMask = 2;

	[Token(Token = "0x40002EF")]
	public const int IGNORERAYCASTMask = 4;

	[Token(Token = "0x40002F0")]
	public const int WATERMask = 16;

	[Token(Token = "0x40002F1")]
	public const int UIMask = 32;

	[Token(Token = "0x40002F2")]
	public const int GUNMask = 256;

	[Token(Token = "0x40002F3")]
	public const int BULLETMask = 512;

	[Token(Token = "0x40002F4")]
	public const int THROWMask = 1024;

	[Token(Token = "0x40002F5")]
	public const int MISSILEMask = 2048;

	[Token(Token = "0x40002F6")]
	public const int PLAYERHEADMask = 4096;

	[Token(Token = "0x40002F7")]
	public const int NONEHITMask = 8192;

	[Token(Token = "0x40002F8")]
	public const int LAUNCHPADMask = 16384;

	[Token(Token = "0x40002F9")]
	public const int INTHEVEHICLEMask = 32768;

	[Token(Token = "0x40002FA")]
	public const int TARGETEFFECTMask = 65536;

	[Token(Token = "0x40002FB")]
	public const int ENEMYMask = 262144;
}
[Token(Token = "0x2000086")]
public static class SCENE_NAME
{
	[Token(Token = "0x40002FC")]
	public const string SCENE_LOGO_OCULUS = "Logo_Oculus";

	[Token(Token = "0x40002FD")]
	public const string SCENE_TITLE_OCULUS = "Title_Oculus";

	[Token(Token = "0x40002FE")]
	public const string SCENE_CITY_OCULUS = "City_Oculus";

	[Token(Token = "0x40002FF")]
	public const string SCENE_CAMP_OCULUS = "Camp_Oculus";

	[Token(Token = "0x4000300")]
	public const string SCENE_BASE_OCULUS = "Base_Oculus";

	[Token(Token = "0x4000301")]
	public const string SCENE_AIRPORT_OCULUS = "Airport_Oculus";

	[Token(Token = "0x4000302")]
	public const string SCENE_ENDLESS_OCULUS = "Endless_Oculus";

	[Token(Token = "0x4000303")]
	public const string SCENE_TUTORIAL_OCULUS = "Tutorial_Oculus";

	[Token(Token = "0x4000304")]
	public const string SCENE_SCENEPAUSE_OCULUS = "ScenePause_Oculus";
}
[Token(Token = "0x2000087")]
public static class TAG_NAME
{
	[Token(Token = "0x4000305")]
	public const string TAG_UNTAGGED = "Untagged";

	[Token(Token = "0x4000306")]
	public const string TAG_RESPAWN = "Respawn";

	[Token(Token = "0x4000307")]
	public const string TAG_FINISH = "Finish";

	[Token(Token = "0x4000308")]
	public const string TAG_EDITORONLY = "EditorOnly";

	[Token(Token = "0x4000309")]
	public const string TAG_MAINCAMERA = "MainCamera";

	[Token(Token = "0x400030A")]
	public const string TAG_PLAYER = "Player";

	[Token(Token = "0x400030B")]
	public const string TAG_GAMECONTROLLER = "GameController";

	[Token(Token = "0x400030C")]
	public const string TAG_BULLET = "Bullet";

	[Token(Token = "0x400030D")]
	public const string TAG_GUN = "Gun";

	[Token(Token = "0x400030E")]
	public const string TAG_ENEMY = "Enemy";

	[Token(Token = "0x400030F")]
	public const string TAG_THROW = "Throw";

	[Token(Token = "0x4000310")]
	public const string TAG_NONETARGET = "NoneTarget";

	[Token(Token = "0x4000311")]
	public const string TAG_GIMMICK = "Gimmick";

	[Token(Token = "0x4000312")]
	public const string TAG_DAMAGEGIMMICK = "DamageGimmick";

	[Token(Token = "0x4000313")]
	public const string TAG_FIRE = "Fire";

	[Token(Token = "0x4000314")]
	public const string TAG_MAP = "Map";

	[Token(Token = "0x4000315")]
	public const string TAG_PLAYERHEAD = "PlayerHead";

	[Token(Token = "0x4000316")]
	public const string TAG_ESCORT = "Escort";

	[Token(Token = "0x4000317")]
	public const string TAG_MOVESPEEDCHANGEAREA = "MoveSpeedChangeArea";

	[Token(Token = "0x4000318")]
	public const string TAG_ENEMYTHROW = "EnemyThrow";

	[Token(Token = "0x4000319")]
	public const string TAG_VRCONTROLLER = "VRController";

	[Token(Token = "0x400031A")]
	public const string TAG_PAUSECONTROLLER = "PauseController";
}
[Token(Token = "0x2000088")]
public class HandHold : MonoBehaviour
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRTK_ControllerEvents controllerEve;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator handAnim;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573784", Offset = "0x573784")]
	private Transform[] arrayFinger;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] defPos;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] defRot;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] defScale;

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x86B70C", Offset = "0x86B70C", VA = "0x86B70C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x86B8B0", Offset = "0x86B8B0", VA = "0x86B8B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x86B8F0", Offset = "0x86B8F0", VA = "0x86B8F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x86BA1C", Offset = "0x86BA1C", VA = "0x86BA1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x86BA5C", Offset = "0x86BA5C", VA = "0x86BA5C")]
	public HandHold()
	{
	}
}
[Token(Token = "0x2000089")]
public class Crypt
{
	[Token(Token = "0x4000321")]
	private const string AesIV = "jCddaOybW3zEh0Kl";

	[Token(Token = "0x4000322")]
	private const string AesKey = "giVJrbHRlWBDIggF";

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x71B700", Offset = "0x71B700", VA = "0x71B700")]
	public static string Encrypt(string text)
	{
		return null;
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x71B938", Offset = "0x71B938", VA = "0x71B938")]
	public static string Decrypt(string cryptText)
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x71BBA0", Offset = "0x71BBA0", VA = "0x71BBA0")]
	public Crypt()
	{
	}
}
[Token(Token = "0x200008A")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x56EE70", Offset = "0x56EE70")]
public class INIFile
{
	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string path;

	[Token(Token = "0x1700005E")]
	public string Item
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0x86D40C", Offset = "0x86D40C", VA = "0x86D40C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000399")]
		[Address(RVA = "0x86D2F4", Offset = "0x86D2F4", VA = "0x86D2F4")]
		set
		{
		}
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x86D2C8", Offset = "0x86D2C8", VA = "0x86D2C8")]
	public INIFile(string path)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x86D60C", Offset = "0x86D60C", VA = "0x86D60C")]
	public string GetValue(string section, string key, string defaultvalue)
	{
		return null;
	}

	[PreserveSig]
	[Token(Token = "0x600039C")]
	[Address(RVA = "0x86D4D4", Offset = "0x86D4D4", VA = "0x86D4D4")]
	private static extern int GetPrivateProfileString(string lpAppName, string lpKeyName, string lpDefault, StringBuilder lpReturnedString, int nSize, string lpFileName);

	[PreserveSig]
	[Token(Token = "0x600039D")]
	[Address(RVA = "0x86D30C", Offset = "0x86D30C", VA = "0x86D30C")]
	private static extern int WritePrivateProfileString(string lpAppName, string lpKeyName, string lpString, string lpFileName);
}
[Token(Token = "0x200008B")]
public class JsonMapper
{
	[Serializable]
	[Token(Token = "0x2000371")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570770", Offset = "0x570770")]
	private sealed class <>c
	{
		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x86DB90", Offset = "0x86DB90", VA = "0x86DB90")]
		public <>c()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x86DB98", Offset = "0x86DB98", VA = "0x86DB98")]
		internal void <.cctor>b__0_0(float obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x86DC20", Offset = "0x86DC20", VA = "0x86DC20")]
		internal void <.cctor>b__0_1(decimal obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x86DCB4", Offset = "0x86DCB4", VA = "0x86DCB4")]
		internal float <.cctor>b__0_2(double input)
		{
			return default(float);
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x86DD24", Offset = "0x86DD24", VA = "0x86DD24")]
		internal long <.cctor>b__0_3(int input)
		{
			return default(long);
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x86DD8C", Offset = "0x86DD8C", VA = "0x86DD8C")]
		internal decimal <.cctor>b__0_4(string input)
		{
			return default(decimal);
		}
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x86D898", Offset = "0x86D898", VA = "0x86D898")]
	static JsonMapper()
	{
	}

	[Token(Token = "0x600039F")]
	public static T ToObject<T>(string json)
	{
		return (T)null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x86DABC", Offset = "0x86DABC", VA = "0x86DABC")]
	public static string ToJson(object obj)
	{
		return null;
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x86DB24", Offset = "0x86DB24", VA = "0x86DB24")]
	public JsonMapper()
	{
	}
}
[Token(Token = "0x200008C")]
public class SceneLogo : SingletonMonoBehaviour<SceneLogo>
{
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570780", Offset = "0x570780")]
	private sealed class <LogoSound>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLogo <>4__this;

		[Token(Token = "0x170001C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0x7463D8", Offset = "0x7463D8", VA = "0x7463D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0x746440", Offset = "0x746440", VA = "0x746440", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x746074", Offset = "0x746074", VA = "0x746074")]
		[DebuggerHidden]
		public <LogoSound>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x746194", Offset = "0x746194", VA = "0x746194", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x746198", Offset = "0x746198", VA = "0x746198", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x7463E0", Offset = "0x7463E0", VA = "0x7463E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image logoImage;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OVRScreenFade screenFade;

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x745EEC", Offset = "0x745EEC", VA = "0x745EEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x746004", Offset = "0x746004", VA = "0x746004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57F710", Offset = "0x57F710")]
	private IEnumerator LogoSound()
	{
		return null;
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x7460A0", Offset = "0x7460A0", VA = "0x7460A0")]
	private void LoadTitle()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x746124", Offset = "0x746124", VA = "0x746124")]
	public SceneLogo()
	{
	}
}
[Token(Token = "0x200008D")]
public class BulletCall : MonoBehaviour, IDamageable<int>
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent events;

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x716120", Offset = "0x716120", VA = "0x716120")]
	public void OnThrowEnter()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x71613C", Offset = "0x71613C", VA = "0x71613C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x7161DC", Offset = "0x7161DC", VA = "0x7161DC", Slot = "4")]
	public void Damage(int _damageValue, string _tag)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x716264", Offset = "0x716264", VA = "0x716264", Slot = "5")]
	public void SetDamagePos(Vector3 _posGen, Vector3 _posHit, float _power)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x716268", Offset = "0x716268", VA = "0x716268", Slot = "6")]
	public void BlowingOff(Vector3 _pos, float _power)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x71626C", Offset = "0x71626C", VA = "0x71626C")]
	public BulletCall()
	{
	}
}
[Token(Token = "0x200008E")]
public class CollisionCall : MonoBehaviour
{
	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public GameObject callTarget;

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x71B350", Offset = "0x71B350", VA = "0x71B350")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x71B438", Offset = "0x71B438", VA = "0x71B438")]
	public CollisionCall()
	{
	}
}
[Token(Token = "0x200008F")]
public class HitCall : MonoBehaviour, IDamageable<int>
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject callTarget;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573810", Offset = "0x573810")]
	private Region.TYPE regionType;

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x86CA9C", Offset = "0x86CA9C", VA = "0x86CA9C", Slot = "4")]
	public void Damage(int _damageValue, string _tag)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x86CC28", Offset = "0x86CC28", VA = "0x86CC28", Slot = "5")]
	public void SetDamagePos(Vector3 _posGen, Vector3 _posHit, float _power)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x86CD68", Offset = "0x86CD68", VA = "0x86CD68", Slot = "6")]
	public void BlowingOff(Vector3 _pos, float _power)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x86CE78", Offset = "0x86CE78", VA = "0x86CE78")]
	public HitCall()
	{
	}
}
[Token(Token = "0x2000090")]
public class Cartridge : MonoBehaviorExpansion
{
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57385C", Offset = "0x57385C")]
	private Vector3 vecMaxRandom;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5738A8", Offset = "0x5738A8")]
	private Vector3 vecMinRandom;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Rigidbody rigid;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float LIFE_TIME;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x71822C", Offset = "0x71822C", VA = "0x71822C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x7183A8", Offset = "0x7183A8", VA = "0x7183A8")]
	public Cartridge()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x718484", Offset = "0x718484", VA = "0x718484")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F774", Offset = "0x57F774")]
	private void <Start>b__4_0()
	{
	}
}
[Token(Token = "0x2000091")]
public class CationDialog : MonoBehaviorExpansion
{
	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x718E74", Offset = "0x718E74", VA = "0x718E74")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x719284", Offset = "0x719284", VA = "0x719284")]
	public CationDialog()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x71928C", Offset = "0x71928C", VA = "0x71928C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F784", Offset = "0x57F784")]
	private void <Start>b__0_0()
	{
	}
}
[Token(Token = "0x2000092")]
public class ControllerManager : SingletonMonoBehaviour<ControllerManager>
{
	[Token(Token = "0x2000373")]
	public enum HandType
	{
		[Token(Token = "0x4001766")]
		RIGHT,
		[Token(Token = "0x4001767")]
		LEFT
	}

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Color CONTROLLER_ENABLE_COLOR;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Color CONTROLLER_DISABLE_COLOR;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject eyeCamera;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SkinnedMeshRenderer rightModelMesh;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SkinnedMeshRenderer leftModelMesh;

	[Token(Token = "0x1700005F")]
	public GameObject EyeCameraObj
	{
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x71B440", Offset = "0x71B440", VA = "0x71B440")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000060")]
	public Camera EyeCamera
	{
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x71B448", Offset = "0x71B448", VA = "0x71B448")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x71B4A0", Offset = "0x71B4A0", VA = "0x71B4A0")]
	public void SetVisible(GameObject _usingObject, bool _isVisible)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x71B5CC", Offset = "0x71B5CC", VA = "0x71B5CC")]
	public ControllerManager()
	{
	}
}
[Token(Token = "0x2000093")]
public class DangerDisp : SingletonMonoBehaviour<DangerDisp>
{
	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpriteRenderer dangerIcon;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SpriteRenderer arrowRight;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SpriteRenderer arrowLeft;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject lookTarget;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lookTime;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float LOOK_FOCUS_IN_ANGLE;

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x71BBA8", Offset = "0x71BBA8", VA = "0x71BBA8")]
	public void Set(GameObject _target, float _time)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x71BCD4", Offset = "0x71BCD4", VA = "0x71BCD4")]
	public float GetAim(Vector3 p1, Vector3 p2)
	{
		return default(float);
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x71BD6C", Offset = "0x71BD6C", VA = "0x71BD6C")]
	private bool _checkClockwise(float current, float target)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x71BD98", Offset = "0x71BD98", VA = "0x71BD98")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x71C0B0", Offset = "0x71C0B0", VA = "0x71C0B0")]
	public DangerDisp()
	{
	}
}
[Token(Token = "0x2000094")]
public class CallMoveSpeedChange : MonoBehaviour
{
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyZombie callTarget;

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x7180B4", Offset = "0x7180B4", VA = "0x7180B4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x718180", Offset = "0x718180", VA = "0x718180")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x718224", Offset = "0x718224", VA = "0x718224")]
	public CallMoveSpeedChange()
	{
	}
}
[Token(Token = "0x2000095")]
public class EnemyBase : MonoBehaviorExpansion, IDamageable<int>, IRegionSettable
{
	[Token(Token = "0x2000374")]
	public enum InitType
	{
		[Token(Token = "0x4001769")]
		NORMAL,
		[Token(Token = "0x400176A")]
		SCALE_Y
	}

	[Token(Token = "0x2000375")]
	public enum ResistanceKind
	{
		[Token(Token = "0x400176C")]
		NONE,
		[Token(Token = "0x400176D")]
		BLOWING
	}

	[Token(Token = "0x2000376")]
	public enum SoundType
	{
		[Token(Token = "0x400176F")]
		NONE,
		[Token(Token = "0x4001770")]
		CHAINSAW
	}

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly float ATTACK_INTERVAL;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static readonly int SCORE_HEAD_SHOT;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573974", Offset = "0x573974")]
	private InitType initType;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5739C0", Offset = "0x5739C0")]
	private SoundType soundType;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573A0C", Offset = "0x573A0C")]
	private ResistanceKind resistanceKind;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573A58", Offset = "0x573A58")]
	protected int hp;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573AA4", Offset = "0x573AA4")]
	protected int baseScore;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573AF0", Offset = "0x573AF0")]
	protected bool isScoreScaleUp;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573B3C", Offset = "0x573B3C")]
	protected bool isAttacker;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573B88", Offset = "0x573B88")]
	protected bool isEscortTarget;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573BD4", Offset = "0x573BD4")]
	protected HitpointGauge hitpointGauge;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Transform moveTarget;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int bonusScore;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected int headShotBonusScore;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Region.TYPE regionType;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Vector3 damageGenPos;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Vector3 damageHitPos;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected float damageGenPower;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected string damageTag;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected bool isDead;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	protected bool isBlowing;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected float attackInterval;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xBB9368", Offset = "0xBB9368", VA = "0xBB9368")]
	public void SetPopData(Transform _moveTarget, int _bonusScore, int _headShotBonusScore, bool _isAttacker, bool _isEscortTarget)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xBB9384", Offset = "0xBB9384", VA = "0xBB9384")]
	public void SetInitType(InitType _initType)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xBB938C", Offset = "0xBB938C", VA = "0xBB938C")]
	public void SetResistanceKind(ResistanceKind _kind)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xBB9394", Offset = "0xBB9394", VA = "0xBB9394", Slot = "8")]
	public virtual void Damage(int _damageValue, string _tag)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xBB9480", Offset = "0xBB9480", VA = "0xBB9480", Slot = "7")]
	public void SetRegionType(Region.TYPE _type)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xBB9488", Offset = "0xBB9488", VA = "0xBB9488", Slot = "5")]
	public void SetDamagePos(Vector3 _posGen, Vector3 _posHit, float _power)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xBB949C", Offset = "0xBB949C", VA = "0xBB949C")]
	public void SetGenPos(Vector3 _pos, float _power)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xBB94A0", Offset = "0xBB94A0", VA = "0xBB94A0", Slot = "6")]
	public void BlowingOff(Vector3 _pos, float _power)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xBB94D0", Offset = "0xBB94D0", VA = "0xBB94D0")]
	private int CalcScore()
	{
		return default(int);
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xBB9588", Offset = "0xBB9588", VA = "0xBB9588", Slot = "9")]
	protected virtual void Dead()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xBB992C", Offset = "0xBB992C", VA = "0xBB992C", Slot = "10")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xBB9DF8", Offset = "0xBB9DF8", VA = "0xBB9DF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xBB9E98", Offset = "0xBB9E98", VA = "0xBB9E98", Slot = "11")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xBB9E9C", Offset = "0xBB9E9C", VA = "0xBB9E9C")]
	public EnemyBase()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xBB9F60", Offset = "0xBB9F60", VA = "0xBB9F60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F794", Offset = "0x57F794")]
	private void <Dead>b__34_0()
	{
	}
}
[Token(Token = "0x2000096")]
public class EnemyDrone : EnemyBase
{
	[Token(Token = "0x2000377")]
	private enum State
	{
		[Token(Token = "0x4001772")]
		TAKE_OFF,
		[Token(Token = "0x4001773")]
		MOVE,
		[Token(Token = "0x4001774")]
		ATTACK_WAIT,
		[Token(Token = "0x4001775")]
		ESCAPE
	}

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform modelRoot;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform[] arrayPropeller;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573C40", Offset = "0x573C40")]
	private int settingMass;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573C8C", Offset = "0x573C8C")]
	private ParticleSystem psBreakExplosion;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573CD8", Offset = "0x573CD8")]
	private ParticleSystem psBreakSmoke;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573D24", Offset = "0x573D24")]
	private ParticleSystem psSpark;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573D70", Offset = "0x573D70")]
	private GimmickDroneMissile missile;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float ROT_SPEED_MAX;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float ROTATE_SPEED;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float moveAngle;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool isDownEffect;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool isShotMissile;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private State state;

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xBB9FDC", Offset = "0xBB9FDC", VA = "0xBB9FDC")]
	private void FireMissile()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xBBA114", Offset = "0xBBA114", VA = "0xBBA114", Slot = "9")]
	protected override void Dead()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xBBA374", Offset = "0xBBA374", VA = "0xBBA374", Slot = "10")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xBBA5A8", Offset = "0xBBA5A8", VA = "0xBBA5A8", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xBBA960", Offset = "0xBBA960", VA = "0xBBA960")]
	private void OnTakeOff()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xBBACA4", Offset = "0xBBACA4", VA = "0xBBACA4")]
	private void OnMoveEnd()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xBBAD68", Offset = "0xBBAD68", VA = "0xBBAD68")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xBBAE58", Offset = "0xBBAE58", VA = "0xBBAE58")]
	public EnemyDrone()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xBBAF2C", Offset = "0xBBAF2C", VA = "0xBBAF2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F7A4", Offset = "0x57F7A4")]
	private void <OnMoveEnd>b__19_0()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xBBB034", Offset = "0xBBB034", VA = "0xBBB034")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F7B4", Offset = "0x57F7B4")]
	private void <OnMoveEnd>b__19_1()
	{
	}
}
[Token(Token = "0x2000097")]
public class EnemyParachute : EnemyZombie, ICollisionCallable
{
	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573DBC", Offset = "0x573DBC")]
	private GameObject parachuteRoot;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573E08", Offset = "0x573E08")]
	private GameObject parachuteModel;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573E54", Offset = "0x573E54")]
	private Transform jointHip;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float gravityScale;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool isParachuteOpen;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	private bool isFall;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xBBB038", Offset = "0xBBB038", VA = "0xBBB038", Slot = "9")]
	protected override void Dead()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xBBB5B0", Offset = "0xBBB5B0", VA = "0xBBB5B0", Slot = "10")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xBBBA14", Offset = "0xBBBA14", VA = "0xBBBA14", Slot = "12")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xBBBD48", Offset = "0xBBBD48", VA = "0xBBBD48")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xBBBDA8", Offset = "0xBBBDA8", VA = "0xBBBDA8", Slot = "13")]
	public void CallCollisionEnter(Collision _col)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xBBC83C", Offset = "0xBBC83C", VA = "0xBBC83C")]
	public EnemyParachute()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xBBCBA4", Offset = "0xBBCBA4", VA = "0xBBCBA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F7C4", Offset = "0x57F7C4")]
	private void <Start>b__7_0()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xBBCE5C", Offset = "0xBBCE5C", VA = "0xBBCE5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F7D4", Offset = "0x57F7D4")]
	private void <CallCollisionEnter>b__10_0()
	{
	}
}
[Token(Token = "0x2000098")]
public class EnemyThrowItem : GimmickBase
{
	[Token(Token = "0x2000378")]
	public enum Kind
	{
		[Token(Token = "0x4001777")]
		BOTTLE = 1,
		[Token(Token = "0x4001778")]
		AX
	}

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573EA0", Offset = "0x573EA0")]
	private Kind kind;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected ParticleSystem prefabExplosion;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573EFC", Offset = "0x573EFC")]
	private BoxCollider boxCol;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isThrow;

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xBBCE80", Offset = "0xBBCE80", VA = "0xBBCE80")]
	public void StartThrow()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xBBCF04", Offset = "0xBBCF04", VA = "0xBBCF04", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xBBCFB8", Offset = "0xBBCFB8", VA = "0xBBCFB8", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xBBD50C", Offset = "0xBBD50C", VA = "0xBBD50C")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xBBD938", Offset = "0xBBD938", VA = "0xBBD938")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xBBDDA0", Offset = "0xBBDDA0", VA = "0xBBDDA0")]
	public EnemyThrowItem()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xBBDE20", Offset = "0xBBDE20", VA = "0xBBDE20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F7E4", Offset = "0x57F7E4")]
	private void <StartThrow>b__5_0()
	{
	}
}
[Token(Token = "0x2000099")]
public class EnemyZombie : EnemyBase
{
	[Token(Token = "0x2000379")]
	public enum Kind
	{
		[Token(Token = "0x400177A")]
		NORMAL,
		[Token(Token = "0x400177B")]
		THROW
	}

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float VOICE_INTERVAL_WALK;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float VOICE_CHECK_DISTANCE;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float PATH_CHANGE_WAIT_TIME;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int THROW_ITEM_MAX;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573F48", Offset = "0x573F48")]
	protected Kind kind;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573F94", Offset = "0x573F94")]
	private Transform rootRightHand;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x573FE0", Offset = "0x573FE0")]
	private Transform rootLeftHand;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57402C", Offset = "0x57402C")]
	private GameObject[] arrayThrowItem;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected NavMeshAgent agent;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	protected Animator animator;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected Transform modelRoot;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	protected Material[] arrayChangeMat;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private SkinnedMeshRenderer thisRenderer;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5740C8", Offset = "0x5740C8")]
	private bool isDontMove;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	protected bool isDeadForce;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool isPathChangeWait;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] VOICE_WALK_LIST;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] VOICE_DEAD_LIST;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float voiceCheckTime;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool isDamageAnim;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	private bool isIdle;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject objThrowItem;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float settingMoveSpeed;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Camera playerEyeCamera;

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xBBDE40", Offset = "0xBBDE40", VA = "0xBBDE40")]
	public void SetMoveTarget(Transform _moveTarget)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xBBDF58", Offset = "0xBBDF58", VA = "0xBBDF58")]
	public void SetKind(Kind _kind)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xBBDF60", Offset = "0xBBDF60", VA = "0xBBDF60")]
	public void ChangeMoveSpeed(float _multiValue)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xBBC480", Offset = "0xBBC480", VA = "0xBBC480", Slot = "10")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xBBE1FC", Offset = "0xBBE1FC", VA = "0xBBE1FC", Slot = "8")]
	public override void Damage(int _damageValue, string _tag)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xBBB1A4", Offset = "0xBBB1A4", VA = "0xBBB1A4", Slot = "9")]
	protected override void Dead()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xBBE4B8", Offset = "0xBBE4B8", VA = "0xBBE4B8", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xBBE734", Offset = "0xBBE734", VA = "0xBBE734")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xBBE8F0", Offset = "0xBBE8F0", VA = "0xBBE8F0")]
	private void CheckEnemyAttack()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xBBE020", Offset = "0xBBE020", VA = "0xBBE020")]
	private void CreateThrowItem()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xBBE4BC", Offset = "0xBBE4BC", VA = "0xBBE4BC")]
	private void CheckWalkVoice()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xBBECC0", Offset = "0xBBECC0", VA = "0xBBECC0", Slot = "12")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xBBEBE0", Offset = "0xBBEBE0", VA = "0xBBEBE0")]
	private bool CheckScreenOut(Vector3 _pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xBBC8B0", Offset = "0xBBC8B0", VA = "0xBBC8B0")]
	public EnemyZombie()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xBBEF20", Offset = "0xBBEF20", VA = "0xBBEF20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F7F4", Offset = "0x57F7F4")]
	private void <SetMoveTarget>b__25_0()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xBBEF28", Offset = "0xBBEF28", VA = "0xBBEF28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F804", Offset = "0x57F804")]
	private void <Damage>b__29_0()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xBBEF30", Offset = "0xBBEF30", VA = "0xBBEF30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F814", Offset = "0x57F814")]
	private void <Damage>b__29_1()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xBBEF7C", Offset = "0xBBEF7C", VA = "0xBBEF7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F824", Offset = "0x57F824")]
	private void <CheckEnemyAttack>b__33_0()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xBBF228", Offset = "0xBBF228", VA = "0xBBF228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F834", Offset = "0x57F834")]
	private void <CheckEnemyAttack>b__33_1()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xBBF22C", Offset = "0xBBF22C", VA = "0xBBF22C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F844", Offset = "0x57F844")]
	private void <CheckEnemyAttack>b__33_2()
	{
	}
}
[Token(Token = "0x200009A")]
public class MoveSpeedChangeArea : MonoBehaviour
{
	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574114", Offset = "0x574114")]
	private float speed;

	[Token(Token = "0x17000061")]
	public float Speed
	{
		[Token(Token = "0x6000406")]
		[Address(RVA = "0x931068", Offset = "0x931068", VA = "0x931068")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x931070", Offset = "0x931070", VA = "0x931070")]
	public MoveSpeedChangeArea()
	{
	}
}
[Token(Token = "0x200009B")]
public class SetAnimStartTime : MonoBehaviorExpansion
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator anim;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574170", Offset = "0x574170")]
	private float waitTime;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeCnt;

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x747580", Offset = "0x747580", VA = "0x747580")]
	private void Start()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x7475E4", Offset = "0x7475E4", VA = "0x7475E4")]
	public SetAnimStartTime()
	{
	}
}
[Token(Token = "0x200009C")]
public class EscortHuman : MonoBehaviorExpansion, IDamageable<int>
{
	[Token(Token = "0x200037A")]
	public enum State
	{
		[Token(Token = "0x400177D")]
		IDLE,
		[Token(Token = "0x400177E")]
		MOVE,
		[Token(Token = "0x400177F")]
		DEAD
	}

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly float ROTATE_SPEED;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5741BC", Offset = "0x5741BC")]
	protected Animator animator;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574208", Offset = "0x574208")]
	protected int hp;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574254", Offset = "0x574254")]
	protected GameObject modelRootObj;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5742A0", Offset = "0x5742A0")]
	protected GameObject lifeObj;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 damageGenPos;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 damageHitPos;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float damageGenPower;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isDeadForce;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Vector3 lookEnemyPos;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected bool isLookEnemy;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	protected bool isEnemyNear;

	[Token(Token = "0x17000062")]
	public bool IsLifeDisp
	{
		[Token(Token = "0x600040A")]
		[Address(RVA = "0xBBF558", Offset = "0xBBF558", VA = "0xBBF558")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000063")]
	public bool IsDead
	{
		[Token(Token = "0x600040B")]
		[Address(RVA = "0xBBF574", Offset = "0xBBF574", VA = "0xBBF574")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xBBF584", Offset = "0xBBF584", VA = "0xBBF584")]
	public void DisableLife()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xBBF5A4", Offset = "0xBBF5A4", VA = "0xBBF5A4", Slot = "7")]
	public virtual void Damage(int _damageValue, string _tag)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xBBF7F4", Offset = "0xBBF7F4", VA = "0xBBF7F4", Slot = "5")]
	public void SetDamagePos(Vector3 _posGen, Vector3 _posHit, float _power)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xBBF808", Offset = "0xBBF808", VA = "0xBBF808")]
	public void SetGenPos(Vector3 _pos, float _power)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xBBF80C", Offset = "0xBBF80C", VA = "0xBBF80C", Slot = "6")]
	public void BlowingOff(Vector3 _pos, float _power)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xBBF664", Offset = "0xBBF664", VA = "0xBBF664")]
	private void Dead()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xBBF97C", Offset = "0xBBF97C", VA = "0xBBF97C", Slot = "8")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xBBFA34", Offset = "0xBBFA34", VA = "0xBBFA34", Slot = "9")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xBBFC50", Offset = "0xBBFC50", VA = "0xBBFC50", Slot = "10")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xBBFEB8", Offset = "0xBBFEB8", VA = "0xBBFEB8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xBC0098", Offset = "0xBC0098", VA = "0xBC0098")]
	public EscortHuman()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xBC00F4", Offset = "0xBC00F4", VA = "0xBC00F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F854", Offset = "0x57F854")]
	private void <Dead>b__22_0()
	{
	}
}
[Token(Token = "0x200009D")]
public class EscortPolice : EscortHuman
{
	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float FIRE_WAITING;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5742EC", Offset = "0x5742EC")]
	private HandGun handgun;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int bulletNum;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float fireWaitingTime;

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xBC0114", Offset = "0xBC0114", VA = "0xBC0114", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xBC0118", Offset = "0xBC0118", VA = "0xBC0118", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xBC03D4", Offset = "0xBC03D4", VA = "0xBC03D4", Slot = "10")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xBC06C8", Offset = "0xBC06C8", VA = "0xBC06C8")]
	public EscortPolice()
	{
	}
}
[Token(Token = "0x200009E")]
public class EscortTarget : SingletonMonoBehaviour<EscortTarget>
{
	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574338", Offset = "0x574338")]
	private EscortHuman[] arrayTarget;

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xBC078C", Offset = "0xBC078C", VA = "0xBC078C")]
	public void DisableLife()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xBC0838", Offset = "0xBC0838", VA = "0xBC0838")]
	public int GetLifeTargetNum()
	{
		return default(int);
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xBC08A8", Offset = "0xBC08A8", VA = "0xBC08A8")]
	public EscortHuman GetNearTarget(Vector3 _pos)
	{
		return null;
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xBC0A9C", Offset = "0xBC0A9C", VA = "0xBC0A9C")]
	public EscortTarget()
	{
	}
}
[Token(Token = "0x200009F")]
public class GameManager : SingletonMonoBehaviour<GameManager>
{
	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570790", Offset = "0x570790")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject obj;

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xBC2478", Offset = "0xBC2478", VA = "0xBC2478")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xBC2CBC", Offset = "0xBC2CBC", VA = "0xBC2CBC")]
		internal void <TimeUp>b__0()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xBC2DB8", Offset = "0xBC2DB8", VA = "0xBC2DB8")]
		internal void <TimeUp>b__1()
		{
		}
	}

	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5707A0", Offset = "0x5707A0")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameManager <>4__this;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject obj;

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xBC2480", Offset = "0xBC2480", VA = "0xBC2480")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xBC2DD0", Offset = "0xBC2DD0", VA = "0xBC2DD0")]
		internal void <GameOver>b__0()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xBC2E6C", Offset = "0xBC2E6C", VA = "0xBC2E6C")]
		internal void <GameOver>b__1()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5707B0", Offset = "0x5707B0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__26_0;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__26_1;

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xBC2A70", Offset = "0xBC2A70", VA = "0xBC2A70")]
		public <>c()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xBC2A78", Offset = "0xBC2A78", VA = "0xBC2A78")]
		internal void <Start>b__26_0()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xBC2C44", Offset = "0xBC2C44", VA = "0xBC2C44")]
		internal void <Start>b__26_1()
		{
		}
	}

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574384", Offset = "0x574384")]
	private bool isTutorial;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5743D0", Offset = "0x5743D0")]
	private OVRScreenFade screenFade;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57441C", Offset = "0x57441C")]
	private int escortCnt;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574468", Offset = "0x574468")]
	private float startWaitTime;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject infoBoard;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject resultObj;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5744D4", Offset = "0x5744D4")]
	private int <CurrentScore>k__BackingField;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isResult;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool isGameEnd;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GunBase grabLeftGunBase;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GunBase grabRightGunBase;

	[Token(Token = "0x17000064")]
	public int CurrentScore
	{
		[Token(Token = "0x6000422")]
		[Address(RVA = "0xBC1A20", Offset = "0xBC1A20", VA = "0xBC1A20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F864", Offset = "0x57F864")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000423")]
		[Address(RVA = "0xBC1A28", Offset = "0xBC1A28", VA = "0xBC1A28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F874", Offset = "0x57F874")]
		private set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public bool IsResult
	{
		[Token(Token = "0x6000424")]
		[Address(RVA = "0xBC1A30", Offset = "0xBC1A30", VA = "0xBC1A30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000066")]
	public bool IsGameEnd
	{
		[Token(Token = "0x6000425")]
		[Address(RVA = "0xBC1A38", Offset = "0xBC1A38", VA = "0xBC1A38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xBC1A40", Offset = "0xBC1A40", VA = "0xBC1A40")]
	public void SelectRetry()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xBC1DD0", Offset = "0xBC1DD0", VA = "0xBC1DD0")]
	public void SelectTitle()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xBBF81C", Offset = "0xBBF81C", VA = "0xBBF81C")]
	public void SubEscortTarget()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xBB987C", Offset = "0xBB987C", VA = "0xBB987C")]
	public void AddScore(int _add_score)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xBC1B00", Offset = "0xBC1B00", VA = "0xBC1B00")]
	private void SetEnableObject(bool _isActive)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xBC21CC", Offset = "0xBC21CC", VA = "0xBC21CC")]
	public void TimeUp()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xBC1E68", Offset = "0xBC1E68", VA = "0xBC1E68")]
	public void GameOver()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xBC2488", Offset = "0xBC2488", VA = "0xBC2488")]
	public void ToResult()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xBC27E4", Offset = "0xBC27E4", VA = "0xBC27E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xBC298C", Offset = "0xBC298C", VA = "0xBC298C")]
	public GameManager()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xBC2A04", Offset = "0xBC2A04", VA = "0xBC2A04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F884", Offset = "0x57F884")]
	private void <ToResult>b__25_0()
	{
	}
}
[Token(Token = "0x20000A0")]
public class GimmickAirplane : GimmickBase
{
	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public string movePathName;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public float movePathTime;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] nodeData;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float currentMoveTime;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool isLanding;

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xBC4778", Offset = "0xBC4778", VA = "0xBC4778", Slot = "10")]
	protected override void GimmickStart()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xBC4BD4", Offset = "0xBC4BD4", VA = "0xBC4BD4")]
	private void OnChangeValue(float _value)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xBC4BDC", Offset = "0xBC4BDC", VA = "0xBC4BDC", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xBC4E6C", Offset = "0xBC4E6C", VA = "0xBC4E6C")]
	private void OnLanding()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xBC4F20", Offset = "0xBC4F20", VA = "0xBC4F20", Slot = "12")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xBC4FBC", Offset = "0xBC4FBC", VA = "0xBC4FBC")]
	public GimmickAirplane()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xBC5044", Offset = "0xBC5044", VA = "0xBC5044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F894", Offset = "0x57F894")]
	private void <GimmickStart>b__5_0()
	{
	}
}
[Token(Token = "0x20000A1")]
public class GimmickAirportRadar : GimmickBase
{
	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574504", Offset = "0x574504")]
	private int settingMass;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574550", Offset = "0x574550")]
	private GameObject[] arrayBreakEffect;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57459C", Offset = "0x57459C")]
	private Vector3 vecRotate;

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xBC5138", Offset = "0xBC5138", VA = "0xBC5138", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xBC5304", Offset = "0xBC5304", VA = "0xBC5304", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xBC53DC", Offset = "0xBC53DC", VA = "0xBC53DC")]
	public GimmickAirportRadar()
	{
	}
}
[Token(Token = "0x20000A2")]
public class GimmickAttackHeli : GimmickBase
{
	[Token(Token = "0x200037E")]
	private enum State
	{
		[Token(Token = "0x4001788")]
		STANDBY,
		[Token(Token = "0x4001789")]
		APPEAR_MOVE,
		[Token(Token = "0x400178A")]
		LOOP_MOVE,
		[Token(Token = "0x400178B")]
		BREAK,
		[Token(Token = "0x400178C")]
		LEAVE
	}

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5745E8", Offset = "0x5745E8")]
	private GameObject rotorMain;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574634", Offset = "0x574634")]
	private GameObject rotorTail;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574680", Offset = "0x574680")]
	private GimmickHeliMissile[] arrayMissile;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5746CC", Offset = "0x5746CC")]
	private float missileShotTime;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574718", Offset = "0x574718")]
	private float stopLookTime;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574764", Offset = "0x574764")]
	private float leaveTime;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5747B0", Offset = "0x5747B0")]
	private GameObject prefabDamageEffect;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5747FC", Offset = "0x5747FC")]
	private ParticleSystem psBreak;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574848", Offset = "0x574848")]
	private ParticleSystem psSmoke;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574894", Offset = "0x574894")]
	private ParticleSystem psFire;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	public string AppearMovePathName;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	public float AppearMovePathTime;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	public string LoopMovePathName;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	public float LoopMovePathTime;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float ROT_SPEED_MAX;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float ROTATE_SPEED;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private State currentState;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 moveStartPos;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float moveStartTime;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float circleMoveAngle;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xBC5454", Offset = "0xBC5454", VA = "0xBC5454", Slot = "8")]
	public override void Damage(int _damageValue, string _tag)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xBC5650", Offset = "0xBC5650", VA = "0xBC5650", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xBC5C34", Offset = "0xBC5C34", VA = "0xBC5C34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xBC5D0C", Offset = "0xBC5D0C", VA = "0xBC5D0C", Slot = "10")]
	protected override void GimmickStart()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xBC6280", Offset = "0xBC6280", VA = "0xBC6280")]
	private void OnTakeOff()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xBC6660", Offset = "0xBC6660", VA = "0xBC6660")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xBC69D4", Offset = "0xBC69D4", VA = "0xBC69D4")]
	public GimmickAttackHeli()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xBC6AD0", Offset = "0xBC6AD0", VA = "0xBC6AD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F8A4", Offset = "0x57F8A4")]
	private void <ToBreak>b__22_0()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xBC6B8C", Offset = "0xBC6B8C", VA = "0xBC6B8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F8B4", Offset = "0x57F8B4")]
	private void <ToBreak>b__22_1()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xBC6C08", Offset = "0xBC6C08", VA = "0xBC6C08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F8C4", Offset = "0x57F8C4")]
	private void <GimmickStart>b__24_0()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xBC6E08", Offset = "0xBC6E08", VA = "0xBC6E08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F8D4", Offset = "0x57F8D4")]
	private void <GimmickStart>b__24_1()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xBC6E98", Offset = "0xBC6E98", VA = "0xBC6E98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F8E4", Offset = "0x57F8E4")]
	private void <GimmickStart>b__24_2()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xBC6EB0", Offset = "0xBC6EB0", VA = "0xBC6EB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F8F4", Offset = "0x57F8F4")]
	private void <GimmickStart>b__24_3()
	{
	}
}
[Token(Token = "0x20000A3")]
public class GimmickBase : MonoBehaviorExpansion, IDamageable<int>
{
	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float MIN_DOWN_SE_POW;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574920", Offset = "0x574920")]
	protected float delay;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57496C", Offset = "0x57496C")]
	protected int breakScore;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5749B8", Offset = "0x5749B8")]
	protected bool isScoreScaleUp;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574A04", Offset = "0x574A04")]
	protected Transform rootSocreDisp;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574A50", Offset = "0x574A50")]
	protected int hp;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574A9C", Offset = "0x574A9C")]
	protected HitpointGauge hitpointGauge;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 enterPos;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected bool isBreak;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	protected bool isStarted;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector3 posGenDamage;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected Vector3 posHitDamage;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float powerGenDamage;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected Vector2 posBulletLanding;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Rigidbody fallRigid;

	[Token(Token = "0x17000067")]
	public bool IsBreak
	{
		[Token(Token = "0x6000449")]
		[Address(RVA = "0xBC6F40", Offset = "0xBC6F40", VA = "0xBC6F40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xBC6F48", Offset = "0xBC6F48", VA = "0xBC6F48")]
	public void OnManualDamage()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xBC6F4C", Offset = "0xBC6F4C", VA = "0xBC6F4C")]
	public void SetBreakDamage()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xBBD1F0", Offset = "0xBBD1F0", VA = "0xBBD1F0", Slot = "7")]
	protected virtual void ToBreak()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xBC557C", Offset = "0xBC557C", VA = "0xBC557C", Slot = "8")]
	public virtual void Damage(int _damageValue, string _tag)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xBC6F68", Offset = "0xBC6F68", VA = "0xBC6F68", Slot = "5")]
	public void SetDamagePos(Vector3 _posGen, Vector3 _posHit, float _power)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xBC6F7C", Offset = "0xBC6F7C", VA = "0xBC6F7C", Slot = "6")]
	public void BlowingOff(Vector3 _pos, float _power)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xBC6F80", Offset = "0xBC6F80", VA = "0xBC6F80")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xBC70BC", Offset = "0xBC70BC", VA = "0xBC70BC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xBC7354", Offset = "0xBC7354", VA = "0xBC7354")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xBC745C", Offset = "0xBC745C", VA = "0xBC745C", Slot = "9")]
	protected virtual void InitStatus()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xBC4BC8", Offset = "0xBC4BC8", VA = "0xBC4BC8", Slot = "10")]
	protected virtual void GimmickStart()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xBBCFB4", Offset = "0xBBCFB4", VA = "0xBBCFB4", Slot = "11")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xBC4FB8", Offset = "0xBC4FB8", VA = "0xBC4FB8", Slot = "12")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xBBDE10", Offset = "0xBBDE10", VA = "0xBBDE10")]
	public GimmickBase()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xBC74B4", Offset = "0xBC74B4", VA = "0xBC74B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F904", Offset = "0x57F904")]
	private void <Start>b__25_0()
	{
	}
}
[Token(Token = "0x20000A4")]
public class GimmickBreakBox : GimmickBase
{
	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574AE8", Offset = "0x574AE8")]
	private int settingMass;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574B34", Offset = "0x574B34")]
	private GameObject prefabBreakEffect;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574B80", Offset = "0x574B80")]
	private string seName;

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xBC7550", Offset = "0xBC7550", VA = "0xBC7550", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xBC7774", Offset = "0xBC7774", VA = "0xBC7774")]
	public GimmickBreakBox()
	{
	}
}
[Token(Token = "0x20000A5")]
public class GimmickBreakCar : GimmickBase
{
	[Token(Token = "0x600045C")]
	[Address(RVA = "0xBC77EC", Offset = "0xBC77EC", VA = "0xBC77EC")]
	private new void Start()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xBC77F0", Offset = "0xBC77F0", VA = "0xBC77F0")]
	private new void Update()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xBC77F4", Offset = "0xBC77F4", VA = "0xBC77F4")]
	public GimmickBreakCar()
	{
	}
}
[Token(Token = "0x20000A6")]
public class GimmickBreakWheel : GimmickBase
{
	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private BoxCollider supportCollider;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private MeshCollider meshCollider;

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xBC7864", Offset = "0xBC7864", VA = "0xBC7864", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xBC7970", Offset = "0xBC7970", VA = "0xBC7970")]
	public GimmickBreakWheel()
	{
	}
}
[Token(Token = "0x20000A7")]
public class GimmickChargeCar : GimmickBase
{
	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Animator carAnimator;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform carTransform;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Rigidbody rigid;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject[] arrayHeadLight;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private ParticleSystem[] arrayTireSmoke;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private NavMeshObstacle navMeshObstacle;

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xBC79E0", Offset = "0xBC79E0", VA = "0xBC79E0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xBC7A44", Offset = "0xBC7A44", VA = "0xBC7A44", Slot = "10")]
	protected override void GimmickStart()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xBC7C10", Offset = "0xBC7C10", VA = "0xBC7C10")]
	public GimmickChargeCar()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xBC7C80", Offset = "0xBC7C80", VA = "0xBC7C80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F914", Offset = "0x57F914")]
	private void <GimmickStart>b__7_0()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xBC7CF0", Offset = "0xBC7CF0", VA = "0xBC7CF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F924", Offset = "0x57F924")]
	private void <GimmickStart>b__7_1()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xBC7E08", Offset = "0xBC7E08", VA = "0xBC7E08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F934", Offset = "0x57F934")]
	private void <GimmickStart>b__7_2()
	{
	}
}
[Token(Token = "0x20000A8")]
public class GimmickChargeTruck : GimmickBase
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Animator truckAnimator;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform truckTransform;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Rigidbody rigid;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject popPoint;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject effectExplosion;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject[] arrayFire;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject[] arrayHeadLight;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574CBC", Offset = "0x574CBC")]
	private NavMeshObstacle navmeshObs;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574D08", Offset = "0x574D08")]
	private GimmickDamage gimmickDamage;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isMoveEnd;

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xBC7E84", Offset = "0xBC7E84", VA = "0xBC7E84")]
	public void OnCall_PlayBrakeSE()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xBC8020", Offset = "0xBC8020", VA = "0xBC8020")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xBC8098", Offset = "0xBC8098", VA = "0xBC8098", Slot = "10")]
	protected override void GimmickStart()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xBC82F0", Offset = "0xBC82F0", VA = "0xBC82F0")]
	public GimmickChargeTruck()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xBC8360", Offset = "0xBC8360", VA = "0xBC8360")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F944", Offset = "0x57F944")]
	private void <OnCall_PlayBrakeSE>b__10_0()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xBC841C", Offset = "0xBC841C", VA = "0xBC841C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F954", Offset = "0x57F954")]
	private void <OnCall_PlayBrakeSE>b__10_1()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xBC84D8", Offset = "0xBC84D8", VA = "0xBC84D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F964", Offset = "0x57F964")]
	private void <GimmickStart>b__12_0()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xBC85FC", Offset = "0xBC85FC", VA = "0xBC85FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F974", Offset = "0x57F974")]
	private void <GimmickStart>b__12_1()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xBC866C", Offset = "0xBC866C", VA = "0xBC866C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F984", Offset = "0x57F984")]
	private void <GimmickStart>b__12_2()
	{
	}
}
[Token(Token = "0x20000A9")]
public class GimmickDamage : GimmickBase
{
	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float BOMB_FORCE;

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xBC877C", Offset = "0xBC877C", VA = "0xBC877C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xBC88E8", Offset = "0xBC88E8", VA = "0xBC88E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xBC8A54", Offset = "0xBC8A54", VA = "0xBC8A54")]
	public GimmickDamage()
	{
	}
}
[Token(Token = "0x20000AA")]
public class GimmickDroneMissile : GimmickBase
{
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly float EFFECTIVE_RANGE;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ParticleSystem psFire;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected ParticleSystem prefabExplosion;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isShot;

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x85DF64", Offset = "0x85DF64", VA = "0x85DF64", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x85E020", Offset = "0x85E020", VA = "0x85E020")]
	public void Shot(Transform _transform, float _delay)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x85E520", Offset = "0x85E520", VA = "0x85E520", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x85E6D8", Offset = "0x85E6D8", VA = "0x85E6D8")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x85EFF4", Offset = "0x85EFF4", VA = "0x85EFF4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x85F28C", Offset = "0x85F28C", VA = "0x85F28C")]
	public GimmickDroneMissile()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x85F348", Offset = "0x85F348", VA = "0x85F348")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F994", Offset = "0x57F994")]
	private void <Shot>b__5_0()
	{
	}
}
[Token(Token = "0x20000AB")]
public class GimmickDrumCan : GimmickBase, IAttackable<int>
{
	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int ATTACK_POWER;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float DAMAGE_AREA_RADUIUS;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float BOMB_FORCE;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	protected ParticleSystem prefabExplosion;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected int basePower;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x85F354", Offset = "0x85F354", VA = "0x85F354", Slot = "13")]
	public int GetAttackValue()
	{
		return default(int);
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x85F35C", Offset = "0x85F35C", VA = "0x85F35C", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x85F960", Offset = "0x85F960", VA = "0x85F960", Slot = "9")]
	protected override void InitStatus()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x85F968", Offset = "0x85F968", VA = "0x85F968")]
	public GimmickDrumCan()
	{
	}
}
[Token(Token = "0x20000AC")]
public class GimmickFireHydrant : GimmickBase
{
	[Token(Token = "0x200037F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5707C0", Offset = "0x5707C0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem psWater;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject obj;

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x85FE08", Offset = "0x85FE08", VA = "0x85FE08")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x85FECC", Offset = "0x85FECC", VA = "0x85FECC")]
		internal void <ToBreak>b__0()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x85FEE8", Offset = "0x85FEE8", VA = "0x85FEE8")]
		internal void <ToBreak>b__1()
		{
		}
	}

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float BREAK_DIR_POWER;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform root;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject prefabEffectWater;

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x85FA70", Offset = "0x85FA70", VA = "0x85FA70", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x85FE10", Offset = "0x85FE10", VA = "0x85FE10")]
	public GimmickFireHydrant()
	{
	}
}
[Token(Token = "0x20000AD")]
public class GimmickFluorescentLamp : GimmickBase
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574DB4", Offset = "0x574DB4")]
	private bool isBreakAfterDestroy;

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x85FF54", Offset = "0x85FF54", VA = "0x85FF54", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x8602A8", Offset = "0x8602A8", VA = "0x8602A8")]
	public GimmickFluorescentLamp()
	{
	}
}
[Token(Token = "0x20000AE")]
public class GimmickFreight : GimmickBase
{
	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int METRO_APPEARANCE;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574E00", Offset = "0x574E00")]
	private float CREATE_TIME;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574E4C", Offset = "0x574E4C")]
	private float ADD_RANDOM_DELAY;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574E98", Offset = "0x574E98")]
	private GameObject prefabFreight;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574EE4", Offset = "0x574EE4")]
	private GameObject prefabMetro;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574F30", Offset = "0x574F30")]
	private PopPoint[] arrayStationPopPoint;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isCreate;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float createTime;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int createCnt;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject instance;

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x860310", Offset = "0x860310", VA = "0x860310", Slot = "10")]
	protected override void GimmickStart()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x860344", Offset = "0x860344", VA = "0x860344")]
	private void CreateVehicle()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x86087C", Offset = "0x86087C", VA = "0x86087C", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x8608E0", Offset = "0x8608E0", VA = "0x8608E0", Slot = "12")]
	public override void Stop()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x860A40", Offset = "0x860A40", VA = "0x860A40")]
	public GimmickFreight()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x860B08", Offset = "0x860B08", VA = "0x860B08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F9A4", Offset = "0x57F9A4")]
	private void <CreateVehicle>b__11_0()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x860BE4", Offset = "0x860BE4", VA = "0x860BE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F9B4", Offset = "0x57F9B4")]
	private void <CreateVehicle>b__11_1()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x860D00", Offset = "0x860D00", VA = "0x860D00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F9C4", Offset = "0x57F9C4")]
	private void <CreateVehicle>b__11_2()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x860DD8", Offset = "0x860DD8", VA = "0x860DD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F9D4", Offset = "0x57F9D4")]
	private void <CreateVehicle>b__11_3()
	{
	}
}
[Token(Token = "0x20000AF")]
public class GimmickFreightMove : MonoBehaviorExpansion
{
	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float ROTATE_SPEED;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574F8C", Offset = "0x574F8C")]
	private float stopLookTime;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform anchor;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float length;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x574FF8", Offset = "0x574FF8")]
	private bool isReverse;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool isLook;

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x860EB4", Offset = "0x860EB4", VA = "0x860EB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x860F54", Offset = "0x860F54", VA = "0x860F54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x861274", Offset = "0x861274", VA = "0x861274")]
	public GimmickFreightMove()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x86128C", Offset = "0x86128C", VA = "0x86128C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F9E4", Offset = "0x57F9E4")]
	private void <Start>b__6_0()
	{
	}
}
[Token(Token = "0x20000B0")]
public class GimmickFuelCar : GimmickBase
{
	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575044", Offset = "0x575044")]
	private int settingMass;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575090", Offset = "0x575090")]
	private GimmickBreakWheel[] arrayWheel;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5750DC", Offset = "0x5750DC")]
	private GameObject[] arrayBreakEffect;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575128", Offset = "0x575128")]
	private GameObject[] arrayAfterEffect;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575174", Offset = "0x575174")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x861294", Offset = "0x861294", VA = "0x861294", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x8614D4", Offset = "0x8614D4", VA = "0x8614D4")]
	public GimmickFuelCar()
	{
	}
}
[Token(Token = "0x20000B1")]
public class GimmickHeli : GimmickBase
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5751C0", Offset = "0x5751C0")]
	private float CREATE_TIME;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57520C", Offset = "0x57520C")]
	private float ADD_RANDOM_DELAY;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575258", Offset = "0x575258")]
	private GameObject[] arrayPrefabHeli;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isCreate;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float createTime;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject instance;

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x861544", Offset = "0x861544", VA = "0x861544", Slot = "10")]
	protected override void GimmickStart()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x861578", Offset = "0x861578", VA = "0x861578")]
	private void CreateHeli()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x8617B8", Offset = "0x8617B8", VA = "0x8617B8", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x86181C", Offset = "0x86181C", VA = "0x86181C", Slot = "12")]
	public override void Stop()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x8618E0", Offset = "0x8618E0", VA = "0x8618E0")]
	public GimmickHeli()
	{
	}
}
[Token(Token = "0x20000B2")]
public class GimmickHeliMissile : GimmickBase
{
	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly float EFFECTIVE_RANGE;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ParticleSystem psFire;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform centerAnchor;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	protected ParticleSystem prefabExplosion;

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x861954", Offset = "0x861954", VA = "0x861954")]
	public void Shot(Transform _transform, float _delay)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x861EF8", Offset = "0x861EF8", VA = "0x861EF8", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x861FB4", Offset = "0x861FB4", VA = "0x861FB4", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x86216C", Offset = "0x86216C", VA = "0x86216C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x862404", Offset = "0x862404", VA = "0x862404")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x8626CC", Offset = "0x8626CC", VA = "0x8626CC")]
	public GimmickHeliMissile()
	{
	}
}
[Token(Token = "0x20000B3")]
public class GimmickMetro : GimmickBase
{
	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int BOSS_APPEARANCE;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5752D4", Offset = "0x5752D4")]
	private float CREATE_TIME;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575320", Offset = "0x575320")]
	private float ADD_RANDOM_DELAY;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57536C", Offset = "0x57536C")]
	private GameObject prefabMetro;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5753B8", Offset = "0x5753B8")]
	private PopPoint[] arrayStationPopPoint;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575404", Offset = "0x575404")]
	private PopPoint bossPopPoint;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isCreate;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float createTime;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int createCnt;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject instance;

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x862788", Offset = "0x862788", VA = "0x862788", Slot = "10")]
	protected override void GimmickStart()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x8627BC", Offset = "0x8627BC", VA = "0x8627BC")]
	private void CreateVehicle()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x862AC8", Offset = "0x862AC8", VA = "0x862AC8", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x862B74", Offset = "0x862B74", VA = "0x862B74", Slot = "12")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x862CB4", Offset = "0x862CB4", VA = "0x862CB4")]
	public GimmickMetro()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x862D7C", Offset = "0x862D7C", VA = "0x862D7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57F9F4", Offset = "0x57F9F4")]
	private void <CreateVehicle>b__11_0()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x862F04", Offset = "0x862F04", VA = "0x862F04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FA04", Offset = "0x57FA04")]
	private void <CreateVehicle>b__11_1()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x862FDC", Offset = "0x862FDC", VA = "0x862FDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FA14", Offset = "0x57FA14")]
	private void <CreateVehicle>b__11_2()
	{
	}
}
[Token(Token = "0x20000B4")]
public class GimmickScaffoldTruck : GimmickBase
{
	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Animator truckAnimator;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform truckTransform;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform engineRoom;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575480", Offset = "0x575480")]
	private Transform afterTarget;

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x8630B4", Offset = "0x8630B4", VA = "0x8630B4")]
	public void OnCall_MoveEnd()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x863190", Offset = "0x863190", VA = "0x863190")]
	public void OnCall_MoveStart()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x8633EC", Offset = "0x8633EC", VA = "0x8633EC", Slot = "10")]
	protected override void GimmickStart()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x8634C4", Offset = "0x8634C4", VA = "0x8634C4", Slot = "12")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x8634FC", Offset = "0x8634FC", VA = "0x8634FC")]
	public GimmickScaffoldTruck()
	{
	}
}
[Token(Token = "0x20000B5")]
public class GimmickShatteredBox : GimmickBase
{
	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5754CC", Offset = "0x5754CC")]
	private BoxCollider boxCol;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575518", Offset = "0x575518")]
	private MeshRenderer mesh;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575564", Offset = "0x575564")]
	private Rigidbody[] arrayDebris;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5755B0", Offset = "0x5755B0")]
	private GameObject breakEffect;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x863564", Offset = "0x863564", VA = "0x863564", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x8638D4", Offset = "0x8638D4", VA = "0x8638D4")]
	public GimmickShatteredBox()
	{
	}
}
[Token(Token = "0x20000B6")]
public class GimmickTank : GimmickBase
{
	[Token(Token = "0x2000380")]
	private enum CrewIdx
	{
		[Token(Token = "0x4001790")]
		RIGHT,
		[Token(Token = "0x4001791")]
		LEFT,
		[Token(Token = "0x4001792")]
		MAX
	}

	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5707D0", Offset = "0x5707D0")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform t;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GimmickTank <>4__this;

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x8640C4", Offset = "0x8640C4", VA = "0x8640C4")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x8660F8", Offset = "0x8660F8", VA = "0x8660F8")]
		internal void <ToBreak>b__0()
		{
		}
	}

	[Token(Token = "0x2000382")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5707E0", Offset = "0x5707E0")]
	private sealed class <WaitOnCollider>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject _bullet;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider <collider>5__2;

		[Token(Token = "0x170001C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0x8662D4", Offset = "0x8662D4", VA = "0x8662D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x86633C", Offset = "0x86633C", VA = "0x86633C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x865220", Offset = "0x865220", VA = "0x865220")]
		[DebuggerHidden]
		public <WaitOnCollider>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x866204", Offset = "0x866204", VA = "0x866204", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x866208", Offset = "0x866208", VA = "0x866208", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x8662DC", Offset = "0x8662DC", VA = "0x8662DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int DEAD_BOMB_POWER;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float DAMAGE_AREA_RADUIUS;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float BOMB_FORCE;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly float ROTATE_SPEED;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly float CREATE_INTERVAL;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly float MOVE_CREW_UP;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject prefabCrewZombi;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform[] arrayBombPoint;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private BoxCollider[] arrayAfterCol;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject[] arrayFire;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform[] arrayLid;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform[] arrayPopCrewPoint;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Transform tankTransform;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform turret;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Rigidbody rigidTank;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Rigidbody rigidTurret;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject rootTurretColider;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private ParticleSystem[] arrayEffectSmoke;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private ParticleSystem effectBulletFire;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private float pathMoveTime;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	public string PathName;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private NavMeshObstacle navMeshObstacle;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	protected ParticleSystem prefabExplosion;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	protected GameObject bullet;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObject[] arrayCrewInstance;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float[] arrayCreateCnt;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool[] arrayOpenLid;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool isPathMoveEnd;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x86393C", Offset = "0x86393C", VA = "0x86393C", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x8640CC", Offset = "0x8640CC", VA = "0x8640CC")]
	private void OnPathMoveEnd()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x8641CC", Offset = "0x8641CC", VA = "0x8641CC", Slot = "10")]
	protected override void GimmickStart()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x8648CC", Offset = "0x8648CC", VA = "0x8648CC")]
	private GameObject CreateCrew(int _idx)
	{
		return null;
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x864E88", Offset = "0x864E88", VA = "0x864E88")]
	private void ShotBullet()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x8651B0", Offset = "0x8651B0", VA = "0x8651B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57FA24", Offset = "0x57FA24")]
	private IEnumerator WaitOnCollider(GameObject _bullet)
	{
		return null;
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x86524C", Offset = "0x86524C", VA = "0x86524C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x8652F8", Offset = "0x8652F8", VA = "0x8652F8")]
	private new void Update()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x865BF4", Offset = "0x865BF4", VA = "0x865BF4", Slot = "12")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x865CD8", Offset = "0x865CD8", VA = "0x865CD8")]
	public GimmickTank()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x865E38", Offset = "0x865E38", VA = "0x865E38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FA88", Offset = "0x57FA88")]
	private void <GimmickStart>b__31_0()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x865EE4", Offset = "0x865EE4", VA = "0x865EE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FA98", Offset = "0x57FA98")]
	private void <GimmickStart>b__31_1()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x865EE8", Offset = "0x865EE8", VA = "0x865EE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FAA8", Offset = "0x57FAA8")]
	private void <GimmickStart>b__31_2()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x865F94", Offset = "0x865F94", VA = "0x865F94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FAB8", Offset = "0x57FAB8")]
	private void <GimmickStart>b__31_3()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x865F98", Offset = "0x865F98", VA = "0x865F98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FAC8", Offset = "0x57FAC8")]
	private void <GimmickStart>b__31_4()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x866044", Offset = "0x866044", VA = "0x866044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FAD8", Offset = "0x57FAD8")]
	private void <GimmickStart>b__31_5()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x866048", Offset = "0x866048", VA = "0x866048")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FAE8", Offset = "0x57FAE8")]
	private void <GimmickStart>b__31_6()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x8660F4", Offset = "0x8660F4", VA = "0x8660F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FAF8", Offset = "0x57FAF8")]
	private void <GimmickStart>b__31_7()
	{
	}
}
[Token(Token = "0x20000B7")]
public class GimmickTankBullet : GimmickBase, IAttackable<int>, IDamageable<int>
{
	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float DAMAGE_AREA_RADUIUS;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float BOMB_FORCE;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int DAMAGE_POWER;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly float ROTATE_SPEED;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly float FIX_POSITION_RATE;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject prefabExplosion;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ParticleSystem effectFollow;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Rigidbody rigid;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isCollision;

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x866344", Offset = "0x866344", VA = "0x866344", Slot = "13")]
	public int GetAttackValue()
	{
		return default(int);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x8663AC", Offset = "0x8663AC", VA = "0x8663AC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x8663B0", Offset = "0x8663B0", VA = "0x8663B0", Slot = "7")]
	protected override void ToBreak()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x866720", Offset = "0x866720", VA = "0x866720")]
	private void OnCollisionEnter(Collision c)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x866C54", Offset = "0x866C54", VA = "0x866C54")]
	public GimmickTankBullet()
	{
	}
}
[Token(Token = "0x20000B8")]
public class GimmickTransportHeli : GimmickBase
{
	[Token(Token = "0x2000383")]
	private enum State
	{
		[Token(Token = "0x400179A")]
		STANDBY,
		[Token(Token = "0x400179B")]
		APPEAR_MOVE,
		[Token(Token = "0x400179C")]
		LANDING
	}

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57574C", Offset = "0x57574C")]
	private GameObject rotorFront;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575798", Offset = "0x575798")]
	private GameObject rotorBack;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5757E4", Offset = "0x5757E4")]
	private GameObject door;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575830", Offset = "0x575830")]
	private GameObject[] arrayPopPoint;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	public string appearMovePathName;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	public float appearMovePathTime;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float ROT_SPEED_MAX;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float rotSpeed;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isMoveEnd;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool isLanding;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private State currentState;

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x866D44", Offset = "0x866D44", VA = "0x866D44", Slot = "10")]
	protected override void GimmickStart()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x867238", Offset = "0x867238", VA = "0x867238")]
	private void OnLanding()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x8677DC", Offset = "0x8677DC", VA = "0x8677DC")]
	private void OnEndLanding()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x867948", Offset = "0x867948", VA = "0x867948")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x867A20", Offset = "0x867A20", VA = "0x867A20")]
	private new void Update()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x867BC8", Offset = "0x867BC8", VA = "0x867BC8")]
	public GimmickTransportHeli()
	{
	}
}
[Token(Token = "0x20000B9")]
public class HealthDisp : SingletonMonoBehaviour<HealthDisp>
{
	[Serializable]
	[Token(Token = "0x2000384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5707F0", Offset = "0x5707F0")]
	private sealed class <>c
	{
		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__13_0;

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x86CA1C", Offset = "0x86CA1C", VA = "0x86CA1C")]
		public <>c()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x86CA24", Offset = "0x86CA24", VA = "0x86CA24")]
		internal void <Sub>b__13_0()
		{
		}
	}

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57589C", Offset = "0x57589C")]
	private SpriteRenderer lifeTextSp;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5758E8", Offset = "0x5758E8")]
	private SpriteRenderer[] arrayHealthIcon;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575934", Offset = "0x575934")]
	private Sprite spBlank;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575980", Offset = "0x575980")]
	private SpriteRenderer eyeEffect;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5759CC", Offset = "0x5759CC")]
	private bool isTutorial;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int currentHelth;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isGameOver;

	[Token(Token = "0x17000068")]
	public int CurrentHelth
	{
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x86C0B4", Offset = "0x86C0B4", VA = "0x86C0B4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x86C0BC", Offset = "0x86C0BC", VA = "0x86C0BC")]
	public void HideLife()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x86C13C", Offset = "0x86C13C", VA = "0x86C13C")]
	public void SetEnbaleLifeOnly()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x86C1B4", Offset = "0x86C1B4", VA = "0x86C1B4")]
	public void LifeToBonus()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x86C288", Offset = "0x86C288", VA = "0x86C288")]
	public void ShowEyeEffect()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x85E970", Offset = "0x85E970", VA = "0x85E970")]
	public void Sub()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x86C5D0", Offset = "0x86C5D0", VA = "0x86C5D0")]
	private void OnEyeEffectValue(float _value)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x86C61C", Offset = "0x86C61C", VA = "0x86C61C")]
	private void OnEyeEffectSub()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x86C920", Offset = "0x86C920", VA = "0x86C920")]
	private void OnEyeEffectEnd()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x86C940", Offset = "0x86C940", VA = "0x86C940")]
	public HealthDisp()
	{
	}
}
[Token(Token = "0x20000BA")]
public class HitpointGauge : MonoBehaviorExpansion
{
	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575A18", Offset = "0x575A18")]
	private Transform gaugeSprite;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float ROTATE_SPEED;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float gaugeMax;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int defHpNum;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform target;

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x86CE80", Offset = "0x86CE80", VA = "0x86CE80")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x86CF20", Offset = "0x86CF20", VA = "0x86CF20")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x86D174", Offset = "0x86D174", VA = "0x86D174")]
	public void SetDefValue(int _defHp)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x86D17C", Offset = "0x86D17C", VA = "0x86D17C")]
	public void UpdateValue(int _currentHp)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x86D23C", Offset = "0x86D23C", VA = "0x86D23C")]
	public HitpointGauge()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x86D24C", Offset = "0x86D24C", VA = "0x86D24C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FB08", Offset = "0x57FB08")]
	private void <UpdateValue>b__8_0()
	{
	}
}
[Token(Token = "0x20000BB")]
public class LineTracer : MonoBehaviour
{
	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image imgLine;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float totalMove;

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x874E18", Offset = "0x874E18", VA = "0x874E18")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x874F1C", Offset = "0x874F1C", VA = "0x874F1C")]
	public LineTracer()
	{
	}
}
[Token(Token = "0x20000BC")]
public class MonoBehaviorExpansion : MonoBehaviour
{
	[Token(Token = "0x2000385")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570800", Offset = "0x570800")]
	private sealed class <_WaitAfter>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _wait;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action _act;

		[Token(Token = "0x170001C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x930CB8", Offset = "0x930CB8", VA = "0x930CB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0x930D20", Offset = "0x930D20", VA = "0x930D20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x930BD4", Offset = "0x930BD4", VA = "0x930BD4")]
		[DebuggerHidden]
		public <_WaitAfter>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x930C00", Offset = "0x930C00", VA = "0x930C00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x930C04", Offset = "0x930C04", VA = "0x930C04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x930CC0", Offset = "0x930CC0", VA = "0x930CC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x930B20", Offset = "0x930B20", VA = "0x930B20")]
	protected void WaitAfter(float _wait, Action _act)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x930B54", Offset = "0x930B54", VA = "0x930B54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57FB18", Offset = "0x57FB18")]
	private IEnumerator _WaitAfter(float _wait, Action _act)
	{
		return null;
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x92DA9C", Offset = "0x92DA9C", VA = "0x92DA9C")]
	public MonoBehaviorExpansion()
	{
	}
}
[Token(Token = "0x20000BD")]
public class PlayerEyeUI : SingletonMonoBehaviour<PlayerEyeUI>
{
	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x575A74", Offset = "0x575A74")]
	private bool <IsEasing>k__BackingField;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float MOVE_SPEED;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float ROTATE_SPEED;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575A84", Offset = "0x575A84")]
	private Camera eyeCamera;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575AD0", Offset = "0x575AD0")]
	private Transform directRoot;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575B1C", Offset = "0x575B1C")]
	private Transform easeRoot;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isEasing;

	[Token(Token = "0x17000069")]
	public Transform RootEase
	{
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x73CCB4", Offset = "0x73CCB4", VA = "0x73CCB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006A")]
	public bool IsEasing
	{
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x73CCBC", Offset = "0x73CCBC", VA = "0x73CCBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FB7C", Offset = "0x57FB7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x73CCC4", Offset = "0x73CCC4", VA = "0x73CCC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FB8C", Offset = "0x57FB8C")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public Camera EyeCamera
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x73CCD0", Offset = "0x73CCD0", VA = "0x73CCD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x73CCD8", Offset = "0x73CCD8", VA = "0x73CCD8")]
		set
		{
		}
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x73CCE0", Offset = "0x73CCE0", VA = "0x73CCE0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x73CF6C", Offset = "0x73CF6C", VA = "0x73CF6C")]
	public PlayerEyeUI()
	{
	}
}
[Token(Token = "0x20000BE")]
public class PopPoint : MonoBehaviorExpansion
{
	[Token(Token = "0x2000386")]
	public enum SelectType
	{
		[Token(Token = "0x40017A4")]
		RANDOM,
		[Token(Token = "0x40017A5")]
		CLOSEST
	}

	[Token(Token = "0x2000387")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570810", Offset = "0x570810")]
	private sealed class <_Pop>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PopPoint <>4__this;

		[Token(Token = "0x170001C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x73E608", Offset = "0x73E608", VA = "0x73E608", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x73E670", Offset = "0x73E670", VA = "0x73E670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x73DC64", Offset = "0x73DC64", VA = "0x73DC64")]
		[DebuggerHidden]
		public <_Pop>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x73DE38", Offset = "0x73DE38", VA = "0x73DE38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x73DE3C", Offset = "0x73DE3C", VA = "0x73DE3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x73E610", Offset = "0x73E610", VA = "0x73E610", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575B68", Offset = "0x575B68")]
	private bool isCreate;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575BB4", Offset = "0x575BB4")]
	private SelectType selectType;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575C00", Offset = "0x575C00")]
	private bool isSettingInitType;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575C4C", Offset = "0x575C4C")]
	private EnemyBase.InitType initType;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575C98", Offset = "0x575C98")]
	private EnemyBase.ResistanceKind resistanceKind;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575CE4", Offset = "0x575CE4")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575CE4", Offset = "0x575CE4")]
	private EnemyZombie.Kind zombieKind;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575D54", Offset = "0x575D54")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575D54", Offset = "0x575D54")]
	private float startWaitTime;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575DC4", Offset = "0x575DC4")]
	private float endTime;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575E10", Offset = "0x575E10")]
	private float stopTime;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575E5C", Offset = "0x575E5C")]
	private bool isAttacker;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575EA8", Offset = "0x575EA8")]
	private bool isEscortTarget;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575EF4", Offset = "0x575EF4")]
	private EscortHuman escortTarget;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575F40", Offset = "0x575F40")]
	private float popInterval;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575F8C", Offset = "0x575F8C")]
	private float randomInterval;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x575FD8", Offset = "0x575FD8")]
	private int maxEnemy;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576024", Offset = "0x576024")]
	private int bonusScore;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576070", Offset = "0x576070")]
	private int headshotBonusScore;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject[] arrayMoveTarget;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5760CC", Offset = "0x5760CC")]
	private GameObject[] arrayEnemyPrefab;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576118", Offset = "0x576118")]
	private GameObject[] arrayOverlapCheckEnemyPrefab;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> listEnemys;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isStop;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isLimit;

	[Token(Token = "0x1700006C")]
	public List<GameObject> ListEnemys
	{
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x73D66C", Offset = "0x73D66C", VA = "0x73D66C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x73D674", Offset = "0x73D674", VA = "0x73D674")]
	public void CallManualPop()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x73D6F0", Offset = "0x73D6F0", VA = "0x73D6F0")]
	private void CallRepop()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x73D7EC", Offset = "0x73D7EC", VA = "0x73D7EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x73D958", Offset = "0x73D958", VA = "0x73D958")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x73D77C", Offset = "0x73D77C", VA = "0x73D77C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57FB9C", Offset = "0x57FB9C")]
	private IEnumerator _Pop()
	{
		return null;
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x73DC90", Offset = "0x73DC90", VA = "0x73DC90")]
	public PopPoint()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x73DCB0", Offset = "0x73DCB0", VA = "0x73DCB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FC00", Offset = "0x57FC00")]
	private void <Start>b__28_0()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x73DCDC", Offset = "0x73DCDC", VA = "0x73DCDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FC10", Offset = "0x57FC10")]
	private void <Start>b__28_1()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x73DCE4", Offset = "0x73DCE4", VA = "0x73DCE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FC20", Offset = "0x57FC20")]
	private void <Start>b__28_2()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x73DCF0", Offset = "0x73DCF0", VA = "0x73DCF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FC30", Offset = "0x57FC30")]
	private void <Start>b__28_3()
	{
	}
}
[Token(Token = "0x20000BF")]
public class PopPointManager : SingletonMonoBehaviour<PopPointManager>
{
	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576164", Offset = "0x576164")]
	private PopPoint[] arrayPopPoint;

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x73E498", Offset = "0x73E498", VA = "0x73E498")]
	public bool IsCheckOverlapEnemy(string _prefabName)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x73E678", Offset = "0x73E678", VA = "0x73E678")]
	public PopPointManager()
	{
	}
}
[Token(Token = "0x20000C0")]
public class ResultBoard : SingletonMonoBehaviour<ResultBoard>
{
	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570820", Offset = "0x570820")]
	private sealed class <ScoreProduction>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ResultBoard <>4__this;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <vecCalc>5__2;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <helthNum>5__3;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x170001CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x742D28", Offset = "0x742D28", VA = "0x742D28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x742D90", Offset = "0x742D90", VA = "0x742D90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x7400F0", Offset = "0x7400F0", VA = "0x7400F0")]
		[DebuggerHidden]
		public <ScoreProduction>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x741298", Offset = "0x741298", VA = "0x741298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x74129C", Offset = "0x74129C", VA = "0x74129C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x742D30", Offset = "0x742D30", VA = "0x742D30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570830", Offset = "0x570830")]
	private sealed class <>c
	{
		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__35_3;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__35_1;

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x741288", Offset = "0x741288", VA = "0x741288")]
		public <>c()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x741290", Offset = "0x741290", VA = "0x741290")]
		internal void <_LoadScore>b__35_3()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x741294", Offset = "0x741294", VA = "0x741294")]
		internal void <_LoadScore>b__35_1()
		{
		}
	}

	[Token(Token = "0x200038A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570840", Offset = "0x570840")]
	private sealed class <_LoadScore>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ResultBoard <>4__this;

		[Token(Token = "0x170001CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0x742F5C", Offset = "0x742F5C", VA = "0x742F5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x742FC4", Offset = "0x742FC4", VA = "0x742FC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x7404CC", Offset = "0x7404CC", VA = "0x7404CC")]
		[DebuggerHidden]
		public <_LoadScore>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x742D98", Offset = "0x742D98", VA = "0x742D98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x742D9C", Offset = "0x742D9C", VA = "0x742D9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x742F64", Offset = "0x742F64", VA = "0x742F64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int RANKING_NUM;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int LIFE_SCORE;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int[] SCORE_RANK_BOARDER;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5761B0", Offset = "0x5761B0")]
	private SaveDataManager.AreaIdx areaIdx;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5761FC", Offset = "0x5761FC")]
	private GameObject objRankingSwitch;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576248", Offset = "0x576248")]
	private GameObject objRankingSwitchLocal;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576294", Offset = "0x576294")]
	private GameObject objRankingSwitchOnline;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5762E0", Offset = "0x5762E0")]
	private ScoreRow currentScoreRow;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57632C", Offset = "0x57632C")]
	private ScoreRow[] arrayScoreRow;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576378", Offset = "0x576378")]
	private GameObject objLocalRanking;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5763C4", Offset = "0x5763C4")]
	private GameObject objOnlineRanking;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576410", Offset = "0x576410")]
	private GameObject objLoading;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57645C", Offset = "0x57645C")]
	private GameObject objOnlineScore;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5764A8", Offset = "0x5764A8")]
	private ScoreRow[] arrayScoreRowOnline;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5764F4", Offset = "0x5764F4")]
	private ScoreRow scoreRowMine;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576540", Offset = "0x576540")]
	private ScoreRow rankRowMine;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57658C", Offset = "0x57658C")]
	private GameObject resultRoot;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5765D8", Offset = "0x5765D8")]
	private GameObject currentScoreRoot;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576624", Offset = "0x576624")]
	private GameObject localScoreRoot;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576670", Offset = "0x576670")]
	private TextMeshPro textLife;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5766BC", Offset = "0x5766BC")]
	private SpriteRenderer[] arrayLocalScoreSp;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576708", Offset = "0x576708")]
	private SpriteRenderer scoreRankSp;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576754", Offset = "0x576754")]
	private Sprite[] arrayScoreRankSprite;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool isScoreRegister;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool isRankingSwitch;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool isDownloadData;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
	private bool isSendScore;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int currentScore;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private IEnumerator coroutineScoreProduction;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool waitScoreProduction;

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x73FE28", Offset = "0x73FE28", VA = "0x73FE28")]
	public void Set(int _setScore)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x740080", Offset = "0x740080", VA = "0x740080")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57FC40", Offset = "0x57FC40")]
	private IEnumerator ScoreProduction()
	{
		return null;
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x74011C", Offset = "0x74011C", VA = "0x74011C")]
	private void OnValue(float _value)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x7401D4", Offset = "0x7401D4", VA = "0x7401D4")]
	private void OnValueRank(float _value)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x740234", Offset = "0x740234", VA = "0x740234")]
	public void SwitchRanking()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x74045C", Offset = "0x74045C", VA = "0x74045C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57FCA4", Offset = "0x57FCA4")]
	private IEnumerator _LoadScore()
	{
		return null;
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x7404F8", Offset = "0x7404F8", VA = "0x7404F8")]
	public ResultBoard()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x740604", Offset = "0x740604", VA = "0x740604")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FD08", Offset = "0x57FD08")]
	private void <SwitchRanking>b__34_0()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x7408A8", Offset = "0x7408A8", VA = "0x7408A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FD18", Offset = "0x57FD18")]
	private void <_LoadScore>b__35_0(Ranking.Data[] data)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x740BB8", Offset = "0x740BB8", VA = "0x740BB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FD28", Offset = "0x57FD28")]
	private void <_LoadScore>b__35_2(Ranking.Data[] _userData)
	{
	}
}
[Token(Token = "0x20000C1")]
public class ResultDrone : MonoBehaviorExpansion
{
	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform modelRoot;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform[] arrayPropeller;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject signBoard;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float ROT_SPEED_MAX;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float moveAngle;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isAppear;

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x742FCC", Offset = "0x742FCC", VA = "0x742FCC")]
	public void Select()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x743168", Offset = "0x743168", VA = "0x743168")]
	private void Start()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x7434DC", Offset = "0x7434DC", VA = "0x7434DC")]
	private void OnAppearEnd()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x7434E8", Offset = "0x7434E8", VA = "0x7434E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x7436C8", Offset = "0x7436C8", VA = "0x7436C8")]
	public ResultDrone()
	{
	}
}
[Token(Token = "0x20000C2")]
public class ScoreRow : MonoBehaviour
{
	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5767D0", Offset = "0x5767D0")]
	private SpriteRenderer[] arraySpScore;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57681C", Offset = "0x57681C")]
	private Sprite[] arrayNumSprite;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576868", Offset = "0x576868")]
	private Sprite[] arrayHilightNumSprite;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5768B4", Offset = "0x5768B4")]
	private SpriteRenderer[] arrayRankSp;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576900", Offset = "0x576900")]
	private Sprite[] arrayHilightRankSprite;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57694C", Offset = "0x57694C")]
	private TextMeshPro text;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576998", Offset = "0x576998")]
	private bool isCenter;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5769E4", Offset = "0x5769E4")]
	private float digOffset;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isInit;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float defRootX;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int currentScore;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float countUpTime;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x740CC4", Offset = "0x740CC4", VA = "0x740CC4")]
	public void Set(int _score, bool _isHilight = false, float _countUpTime = 0f)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x746F10", Offset = "0x746F10", VA = "0x746F10")]
	private void OnValue(float _value)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x740B74", Offset = "0x740B74", VA = "0x740B74")]
	public void Set(int _score, string _text, bool _isHilight = false)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x746F20", Offset = "0x746F20", VA = "0x746F20")]
	public ScoreRow()
	{
	}
}
[Token(Token = "0x20000C3")]
public class SceneAirport : MonoBehaviour
{
	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRScreenFade screenFade;

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x74587C", Offset = "0x74587C", VA = "0x74587C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x745A10", Offset = "0x745A10", VA = "0x745A10")]
	public SceneAirport()
	{
	}
}
[Token(Token = "0x20000C4")]
public class SceneBase : MonoBehaviour
{
	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRScreenFade screenFade;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x745A18", Offset = "0x745A18", VA = "0x745A18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x745BAC", Offset = "0x745BAC", VA = "0x745BAC")]
	public SceneBase()
	{
	}
}
[Token(Token = "0x20000C5")]
public class SceneCamp : MonoBehaviour
{
	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRScreenFade screenFade;

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x745BB4", Offset = "0x745BB4", VA = "0x745BB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x745D48", Offset = "0x745D48", VA = "0x745D48")]
	public SceneCamp()
	{
	}
}
[Token(Token = "0x20000C6")]
public class SceneEndless : MonoBehaviour
{
	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRScreenFade screenFade;

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x745D50", Offset = "0x745D50", VA = "0x745D50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x745EE4", Offset = "0x745EE4", VA = "0x745EE4")]
	public SceneEndless()
	{
	}
}
[Token(Token = "0x20000C7")]
public class SceneTitle : MonoBehaviorExpansion
{
	[Serializable]
	[Token(Token = "0x200038B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570850", Offset = "0x570850")]
	private sealed class <>c
	{
		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__1_0;

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x746760", Offset = "0x746760", VA = "0x746760")]
		public <>c()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x746768", Offset = "0x746768", VA = "0x746768")]
		internal void <Start>b__1_0()
		{
		}
	}

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRScreenFade screenFade;

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x746450", Offset = "0x746450", VA = "0x746450")]
	private void Start()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x7466F4", Offset = "0x7466F4", VA = "0x7466F4")]
	public SceneTitle()
	{
	}
}
[Token(Token = "0x20000C8")]
public class SceneTown : MonoBehaviour
{
	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570860", Offset = "0x570860")]
	private sealed class <loadTest>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x746AFC", Offset = "0x746AFC", VA = "0x746AFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x746B64", Offset = "0x746B64", VA = "0x746B64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x7469E8", Offset = "0x7469E8", VA = "0x7469E8")]
		[DebuggerHidden]
		public <loadTest>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x746A1C", Offset = "0x746A1C", VA = "0x746A1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x746A20", Offset = "0x746A20", VA = "0x746A20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x746B04", Offset = "0x746B04", VA = "0x746B04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRScreenFade screenFade;

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x7467F4", Offset = "0x7467F4", VA = "0x7467F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x746988", Offset = "0x746988", VA = "0x746988")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57FD38", Offset = "0x57FD38")]
	private IEnumerator loadTest()
	{
		return null;
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x746A14", Offset = "0x746A14", VA = "0x746A14")]
	public SceneTown()
	{
	}
}
[Token(Token = "0x20000C9")]
public class SceneTutorial : MonoBehaviorExpansion
{
	[Serializable]
	[Token(Token = "0x200038D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570870", Offset = "0x570870")]
	private sealed class <>c
	{
		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__1_0;

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x746E7C", Offset = "0x746E7C", VA = "0x746E7C")]
		public <>c()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x746E84", Offset = "0x746E84", VA = "0x746E84")]
		internal void <Start>b__1_0()
		{
		}
	}

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRScreenFade screenFade;

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x746B6C", Offset = "0x746B6C", VA = "0x746B6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x746E10", Offset = "0x746E10", VA = "0x746E10")]
	public SceneTutorial()
	{
	}
}
[Token(Token = "0x20000CA")]
public class Scoreboard : SingletonMonoBehaviour<Scoreboard>
{
	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float NUM_IMG_OFFSET;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform rootNum;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] arrayNumSprite;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image[] arrayNumImg;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float defRootX;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currentScore;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int localScore;

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x746F28", Offset = "0x746F28", VA = "0x746F28")]
	public void Set(int _setScore)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x747120", Offset = "0x747120", VA = "0x747120")]
	public void Add(int _addScore)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x746F30", Offset = "0x746F30", VA = "0x746F30")]
	private void SetNumImg()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x74747C", Offset = "0x74747C", VA = "0x74747C")]
	private void SetValue(float _score)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x747488", Offset = "0x747488", VA = "0x747488")]
	private void Start()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x7474BC", Offset = "0x7474BC", VA = "0x7474BC")]
	public Scoreboard()
	{
	}
}
[Token(Token = "0x20000CB")]
public class SimpleEffect : MonoBehaviorExpansion
{
	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float waitTime;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float waitCnt;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x7490D4", Offset = "0x7490D4", VA = "0x7490D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x749188", Offset = "0x749188", VA = "0x749188")]
	public SimpleEffect()
	{
	}
}
[Token(Token = "0x20000CC")]
public abstract class SingletonMonoBehaviour<T> : MonoBehaviorExpansion where T : SingletonMonoBehaviour<T>
{
	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly string[] findTags;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T instance;

	[Token(Token = "0x1700006D")]
	public static T Instance
	{
		[Token(Token = "0x6000529")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600052A")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600052B")]
	protected bool CheckInstance()
	{
		return default(bool);
	}

	[Token(Token = "0x600052C")]
	protected SingletonMonoBehaviour()
	{
	}
}
[Token(Token = "0x20000CD")]
public class Timeboard : SingletonMonoBehaviour<Timeboard>
{
	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float START_TIME;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x576AE0", Offset = "0x576AE0")]
	private int <CurrentDispTime>k__BackingField;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float NUM_IMG_OFFSET;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rootNum;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite[] arrayNumSprite;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image[] arrayNumImg;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float remainingTime;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576B30", Offset = "0x576B30")]
	private bool isEndless;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float defRootX;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int startTime;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isClockUpdate;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool isTimeCount;

	[Token(Token = "0x1700006E")]
	public int CurrentDispTime
	{
		[Token(Token = "0x600052E")]
		[Address(RVA = "0x9756CC", Offset = "0x9756CC", VA = "0x9756CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FD9C", Offset = "0x57FD9C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600052F")]
		[Address(RVA = "0x9756D4", Offset = "0x9756D4", VA = "0x9756D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FDAC", Offset = "0x57FDAC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x9756DC", Offset = "0x9756DC", VA = "0x9756DC")]
	public void StartClock()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x9756E8", Offset = "0x9756E8", VA = "0x9756E8")]
	public void StopClock()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x9756F0", Offset = "0x9756F0", VA = "0x9756F0")]
	public bool CheckClockCnt()
	{
		return default(bool);
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x975710", Offset = "0x975710", VA = "0x975710")]
	private void Start()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x975948", Offset = "0x975948", VA = "0x975948")]
	private void Update()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x975758", Offset = "0x975758", VA = "0x975758")]
	private void SetNumImg(int _time)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x975B18", Offset = "0x975B18", VA = "0x975B18")]
	public Timeboard()
	{
	}
}
[Token(Token = "0x20000CE")]
public class TranslationText : MonoBehaviour
{
	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576B7C", Offset = "0x576B7C")]
	private Text[] arrayTextMesh;

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x9779CC", Offset = "0x9779CC", VA = "0x9779CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x977AC4", Offset = "0x977AC4", VA = "0x977AC4")]
	public TranslationText()
	{
	}
}
[Token(Token = "0x20000CF")]
public class TutorialManager : SingletonMonoBehaviour<TutorialManager>
{
	[Token(Token = "0x200038E")]
	private enum WEAPON_IDX
	{
		[Token(Token = "0x40017BC")]
		HANDGUN,
		[Token(Token = "0x40017BD")]
		SUB_MACHINE_GUN,
		[Token(Token = "0x40017BE")]
		GRENADE,
		[Token(Token = "0x40017BF")]
		SHOT_GUN,
		[Token(Token = "0x40017C0")]
		LASER_SITE_RIFLE,
		[Token(Token = "0x40017C1")]
		RPG
	}

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int progressIdx;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int renderCheckerIdx;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576BC8", Offset = "0x576BC8")]
	private GameObject[] arrayWeapon;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576C14", Offset = "0x576C14")]
	private TutorialRenderChecker[] arrayRenderChecker;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576C60", Offset = "0x576C60")]
	private GameObject effectPlace;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576CAC", Offset = "0x576CAC")]
	private GameObject playerLifeObj;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isOneGunRelease;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isOneGunRePlace;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TutorialViewController tutorialViewController;

	[Token(Token = "0x1700006F")]
	public bool IsGunReload
	{
		[Token(Token = "0x600053A")]
		[Address(RVA = "0x978744", Offset = "0x978744", VA = "0x978744")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000070")]
	public bool IsGunRelease
	{
		[Token(Token = "0x600053B")]
		[Address(RVA = "0x977C1C", Offset = "0x977C1C", VA = "0x977C1C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000071")]
	public bool IsOneGunRelease
	{
		[Token(Token = "0x600053C")]
		[Address(RVA = "0x978D0C", Offset = "0x978D0C", VA = "0x978D0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600053D")]
		[Address(RVA = "0x978D14", Offset = "0x978D14", VA = "0x978D14")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public bool IsOneGunRePlace
	{
		[Token(Token = "0x600053E")]
		[Address(RVA = "0x978D20", Offset = "0x978D20", VA = "0x978D20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600053F")]
		[Address(RVA = "0x978D28", Offset = "0x978D28", VA = "0x978D28")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public bool IsViewControllerModel
	{
		[Token(Token = "0x6000540")]
		[Address(RVA = "0x978D34", Offset = "0x978D34", VA = "0x978D34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x977C2C", Offset = "0x977C2C", VA = "0x977C2C")]
	public void Next()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x978D60", Offset = "0x978D60", VA = "0x978D60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x978E20", Offset = "0x978E20", VA = "0x978E20")]
	public TutorialManager()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x978E90", Offset = "0x978E90", VA = "0x978E90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FDBC", Offset = "0x57FDBC")]
	private void <Next>b__22_0()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x978F4C", Offset = "0x978F4C", VA = "0x978F4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FDCC", Offset = "0x57FDCC")]
	private void <Next>b__22_1()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x979CC4", Offset = "0x979CC4", VA = "0x979CC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FDDC", Offset = "0x57FDDC")]
	private void <Next>b__22_2()
	{
	}
}
[Token(Token = "0x20000D0")]
public class VR_AudioManager : SingletonMonoBehaviour<VR_AudioManager>
{
	[Token(Token = "0x200038F")]
	public class AudioSourceInfo
	{
		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource seSource;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject parentObj;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject sourceObj;

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x78FFB0", Offset = "0x78FFB0", VA = "0x78FFB0")]
		public AudioSourceInfo()
		{
		}
	}

	[Token(Token = "0x40004D4")]
	private const string BGM_PATH = "Sounds/BGM";

	[Token(Token = "0x40004D5")]
	private const string SE_PATH = "Sounds/SE";

	[Token(Token = "0x40004D6")]
	private const float BGM_VOLUME_DEFULT = 0.3f;

	[Token(Token = "0x40004D7")]
	private const float SE_VOLUME_DEFULT = 1f;

	[Token(Token = "0x40004D8")]
	public const float BGM_FADE_SPEED_RATE_HIGH = 0.9f;

	[Token(Token = "0x40004D9")]
	public const float BGM_FADE_SPEED_RATE_LOW = 0.3f;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _bgmFadeSpeedRate;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float bgmVolume;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float seVolume;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _nextBGMName;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _nextSEName;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isFadeOut;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource _bgmSource;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<AudioSourceInfo> audioSourceInfoList;

	[Token(Token = "0x40004E2")]
	private const int SE_SOURCE_NUM = 50;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, AudioClip> _bgmDic;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<string, AudioClip> _seDic;

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x78FBD0", Offset = "0x78FBD0", VA = "0x78FBD0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x78FFD8", Offset = "0x78FFD8", VA = "0x78FFD8")]
	public void PlayBGM(string bgmName, float fadeSpeedRate = 0.9f)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x79018C", Offset = "0x79018C", VA = "0x79018C")]
	public void StopBGM()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x79017C", Offset = "0x79017C", VA = "0x79017C")]
	public void FadeOutBGM(float fadeSpeedRate = 0.3f)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x7901A8", Offset = "0x7901A8", VA = "0x7901A8")]
	public void PlaySEAtLimit(int limitNum, string seName, Vector3 playPosition, float _minDistance = 1f, float _seVolume = 1f, [Optional] GameObject parentObj, bool _is3dSound = true, bool _isLoop = false)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x79039C", Offset = "0x79039C", VA = "0x79039C")]
	public void PlaySE(string seName, Vector3 playPosition, float _minDistance = 1f, float _seVolume = 1f, [Optional] GameObject parentObj, bool _is3dSound = true, bool _isLoop = false)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x790684", Offset = "0x790684", VA = "0x790684")]
	public void StopSE()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x79078C", Offset = "0x79078C", VA = "0x79078C")]
	public void StopSE(string _audioName)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x7909A0", Offset = "0x7909A0", VA = "0x7909A0")]
	public void ChangeVolume(float BGMVolume, float SEVolume)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x790AD4", Offset = "0x790AD4", VA = "0x790AD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x790D38", Offset = "0x790D38", VA = "0x790D38")]
	public VR_AudioManager()
	{
	}
}
[Token(Token = "0x20000D1")]
public class BulletBase : MonoBehaviorExpansion
{
	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int BASE_POWER;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float CLOSE_RANGLE;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int bulletPower;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x715B8C", Offset = "0x715B8C", VA = "0x715B8C")]
	public void Set(Vector3 _endPos)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x715FC8", Offset = "0x715FC8", VA = "0x715FC8")]
	public BulletBase()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x7160A4", Offset = "0x7160A4", VA = "0x7160A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FDEC", Offset = "0x57FDEC")]
	private void <Set>b__3_0()
	{
	}
}
[Token(Token = "0x20000D2")]
public class FuelCan : ThrowBase, IDamageable<int>
{
	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float DAMAGE_AREA_RADUIUS;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float BOMB_FORCE;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	protected ParticleSystem prefabExplosion;

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xBC12E8", Offset = "0xBC12E8", VA = "0xBC12E8", Slot = "28")]
	public void Damage(int _damageValue, string _tag)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xBC18E0", Offset = "0xBC18E0", VA = "0xBC18E0", Slot = "13")]
	public override void Ungrabbed(GameObject previousGrabbingObject)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xBC1920", Offset = "0xBC1920", VA = "0xBC1920", Slot = "29")]
	public void SetDamagePos(Vector3 _posGen, Vector3 _posHit, float _power)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xBC1924", Offset = "0xBC1924", VA = "0xBC1924", Slot = "30")]
	public void BlowingOff(Vector3 _pos, float _power)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xBC1928", Offset = "0xBC1928", VA = "0xBC1928", Slot = "19")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xBC1954", Offset = "0xBC1954", VA = "0xBC1954")]
	public FuelCan()
	{
	}
}
[Token(Token = "0x20000D3")]
public class GatlingGun : GunBase
{
	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576D18", Offset = "0x576D18")]
	private float replaceTime;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int BULLET_NUM;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private new static readonly float RELOAD_TIME;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float RAPPID_INTERVAL;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly float ROT_ADD_SPEED;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly float ROT_SUB_SPEED;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly float ROT_SPEED_MAX;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	private GameObject barrelParts;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private bool isTrigger;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private float barrelAngle;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private float addAngle;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private float rappidTime;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private MeshRenderer partsMeshRenderer;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private MeshCollider partsMeshCollider;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool isLoopSe;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
	private bool isGatlingSe;

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xBC3290", Offset = "0xBC3290", VA = "0xBC3290", Slot = "23")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xBC3400", Offset = "0xBC3400", VA = "0xBC3400", Slot = "10")]
	public override void StartTouching(GameObject currentTouchingObject)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xBC34D0", Offset = "0xBC34D0", VA = "0xBC34D0", Slot = "11")]
	public override void StopTouching(GameObject previousTouchingObject)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xBC3584", Offset = "0xBC3584", VA = "0xBC3584", Slot = "12")]
	public override void Grabbed(GameObject currentGrabbingObject)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xBC3638", Offset = "0xBC3638", VA = "0xBC3638", Slot = "15")]
	public override void StopUsing(GameObject previousUsingObject)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xBC36EC", Offset = "0xBC36EC", VA = "0xBC36EC", Slot = "19")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xBC37A4", Offset = "0xBC37A4", VA = "0xBC37A4", Slot = "20")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xBC3C84", Offset = "0xBC3C84", VA = "0xBC3C84", Slot = "33")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xBC3D70", Offset = "0xBC3D70", VA = "0xBC3D70", Slot = "36")]
	protected override void EndTrigger()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xBC3EFC", Offset = "0xBC3EFC", VA = "0xBC3EFC", Slot = "30")]
	protected override void SetData()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xBC3F94", Offset = "0xBC3F94", VA = "0xBC3F94", Slot = "31")]
	protected override void OnControllerSetting()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xBC3FF4", Offset = "0xBC3FF4", VA = "0xBC3FF4", Slot = "34")]
	protected override void OnUnGrabbed()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xBC40E8", Offset = "0xBC40E8", VA = "0xBC40E8", Slot = "37")]
	protected override void OnReplace()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xBC41B4", Offset = "0xBC41B4", VA = "0xBC41B4")]
	public GatlingGun()
	{
	}
}
[Token(Token = "0x20000D4")]
public class Grenade : ThrowBase
{
	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570880", Offset = "0x570880")]
	private sealed class <_WaitAfter>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _wait;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action _act;

		[Token(Token = "0x170001D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x868BD4", Offset = "0x868BD4", VA = "0x868BD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0x868C3C", Offset = "0x868C3C", VA = "0x868C3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x868738", Offset = "0x868738", VA = "0x868738")]
		[DebuggerHidden]
		public <_WaitAfter>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x868B1C", Offset = "0x868B1C", VA = "0x868B1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x868B20", Offset = "0x868B20", VA = "0x868B20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x868BDC", Offset = "0x868BDC", VA = "0x868BDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int DAMAGE;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float DAMAGE_AREA_RADUIUS;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float BOMB_FORCE;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected static readonly float FALL_RETURN_TIME;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool isReady;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	protected Vector3 startLocalPos;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected Quaternion startRotation;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	protected Transform startParent;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	protected ParticleSystem prefabExplosion;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	protected bool isMapFall;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	protected float fallReturnTime;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool isCollision;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x867CCC", Offset = "0x867CCC", VA = "0x867CCC")]
	private void OnCollisionEnter(Collision c)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x8685A4", Offset = "0x8685A4", VA = "0x8685A4", Slot = "20")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x868524", Offset = "0x868524", VA = "0x868524")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57FDFC", Offset = "0x57FDFC")]
	private IEnumerator _WaitAfter(float _wait, Action _act)
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x868764", Offset = "0x868764", VA = "0x868764", Slot = "13")]
	public override void Ungrabbed(GameObject previousGrabbingObject)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x86881C", Offset = "0x86881C", VA = "0x86881C", Slot = "19")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x868904", Offset = "0x868904", VA = "0x868904")]
	public Grenade()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x8689E8", Offset = "0x8689E8", VA = "0x8689E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FE60", Offset = "0x57FE60")]
	private void <OnCollisionEnter>b__12_0()
	{
	}
}
[Token(Token = "0x20000D5")]
public class GunBase : VRTK_InteractableObject, IAttackable<int>
{
	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570890", Offset = "0x570890")]
	private sealed class <SetLightFire>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GunBase <>4__this;

		[Token(Token = "0x170001D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0x86B4CC", Offset = "0x86B4CC", VA = "0x86B4CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0x86B534", Offset = "0x86B534", VA = "0x86B534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x86B29C", Offset = "0x86B29C", VA = "0x86B29C")]
		[DebuggerHidden]
		public <SetLightFire>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x86B410", Offset = "0x86B410", VA = "0x86B410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x86B414", Offset = "0x86B414", VA = "0x86B414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x86B4D4", Offset = "0x86B4D4", VA = "0x86B4D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly float EFFECTIVE_RANGE;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static readonly float BULLET_FORCE;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	protected float REPLACE_TIME;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected float FALL_RETURN_TIME;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static readonly int RELOAD_QUEUE_MAX;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected static readonly float RELOAD_MAG;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static readonly float RELOAD_TIME;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected static readonly float RELOAD_COOL_TIME;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	protected GameObject lightFire;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	protected VRTK_ControllerEvents.ButtonAlias unGrabButton;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	protected GameObject bullet;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	protected GameObject cartridge;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	protected ParticleSystem effectFire;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	protected MagazineInfo magazineInfo;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576DE4", Offset = "0x576DE4")]
	protected bool isRecoil;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected Transform rootInstance;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	protected Rigidbody rigid;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	protected MeshRenderer meshRenderer;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	protected MeshCollider meshCollider;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	protected int bulletPower;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	protected float bulletForce;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	protected VRTK_ControllerActions controllerActions;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected VRTK_ControllerEvents controllerEvents;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	protected GameObject currentUsingObject;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	protected int bulletNum;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	protected int currentBulletNum;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	protected float reloadTime;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	protected float coolTime;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	protected bool isReloading;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	protected Queue<float> queueReloadMag;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	protected bool isReload;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
	protected bool isReloadable;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	protected string gunSeName;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	protected Vector3 startLocalPos;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	protected Quaternion startRotation;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	protected Transform startParent;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected bool isMapFall;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	protected float fallReturnTime;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float grabTime;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private OVRCameraRig currentSceneCameraRig;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Vector3 parentDefLocalPos;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public Vector3 prevPos;

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x868C44", Offset = "0x868C44", VA = "0x868C44", Slot = "27")]
	public int GetAttackValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x868C4C", Offset = "0x868C4C", VA = "0x868C4C")]
	public void CallFire()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x868C5C", Offset = "0x868C5C", VA = "0x868C5C", Slot = "19")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x868E04", Offset = "0x868E04", VA = "0x868E04", Slot = "10")]
	public override void StartTouching(GameObject currentTouchingObject)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x868ED4", Offset = "0x868ED4", VA = "0x868ED4", Slot = "11")]
	public override void StopTouching(GameObject previousTouchingObject)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x868F88", Offset = "0x868F88", VA = "0x868F88", Slot = "12")]
	public override void Grabbed(GameObject currentGrabbingObject)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x869308", Offset = "0x869308", VA = "0x869308", Slot = "13")]
	public override void Ungrabbed(GameObject previousGrabbingObject)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x8693A8", Offset = "0x8693A8", VA = "0x8693A8", Slot = "14")]
	public override void StartUsing(GameObject usingObject)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x86955C", Offset = "0x86955C", VA = "0x86955C", Slot = "15")]
	public override void StopUsing(GameObject previousUsingObject)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x869604", Offset = "0x869604", VA = "0x869604", Slot = "20")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x869A20", Offset = "0x869A20", VA = "0x869A20")]
	public void MagazineInfoSetDispEnable(bool _isActive)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x869A40", Offset = "0x869A40", VA = "0x869A40", Slot = "21")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x869FA4", Offset = "0x869FA4", VA = "0x869FA4", Slot = "28")]
	protected virtual void Release()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x86A1F0", Offset = "0x86A1F0", VA = "0x86A1F0")]
	private void OnSetAlpha(float _value)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x86A2F8", Offset = "0x86A2F8", VA = "0x86A2F8")]
	private void OnAlphaFadeEnd()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x86A2FC", Offset = "0x86A2FC", VA = "0x86A2FC", Slot = "29")]
	protected virtual void FireBullet()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x86B1C8", Offset = "0x86B1C8", VA = "0x86B1C8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x86B158", Offset = "0x86B158", VA = "0x86B158")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57FE70", Offset = "0x57FE70")]
	protected IEnumerator SetLightFire()
	{
		return null;
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x86B2C8", Offset = "0x86B2C8", VA = "0x86B2C8", Slot = "30")]
	protected virtual void SetData()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x86B2CC", Offset = "0x86B2CC", VA = "0x86B2CC", Slot = "31")]
	protected virtual void OnControllerSetting()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x86B2D0", Offset = "0x86B2D0", VA = "0x86B2D0", Slot = "32")]
	protected virtual void OnReloadComplete()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x86B2D4", Offset = "0x86B2D4", VA = "0x86B2D4", Slot = "33")]
	protected virtual void OnTrigger()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x86B2D8", Offset = "0x86B2D8", VA = "0x86B2D8", Slot = "34")]
	protected virtual void OnUnGrabbed()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x86B2DC", Offset = "0x86B2DC", VA = "0x86B2DC", Slot = "35")]
	protected virtual void OnEmpty()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x86B2E0", Offset = "0x86B2E0", VA = "0x86B2E0", Slot = "36")]
	protected virtual void EndTrigger()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x86B2E4", Offset = "0x86B2E4", VA = "0x86B2E4", Slot = "37")]
	protected virtual void OnReplace()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x86B2E8", Offset = "0x86B2E8", VA = "0x86B2E8")]
	public GunBase()
	{
	}
}
[Token(Token = "0x20000D6")]
public class HandGun : GunBase
{
	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int BULLET_NUM;

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x86B53C", Offset = "0x86B53C", VA = "0x86B53C", Slot = "33")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x86B590", Offset = "0x86B590", VA = "0x86B590", Slot = "36")]
	protected override void EndTrigger()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x86B5B4", Offset = "0x86B5B4", VA = "0x86B5B4", Slot = "30")]
	protected override void SetData()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x86B654", Offset = "0x86B654", VA = "0x86B654")]
	public HandGun()
	{
	}
}
[Token(Token = "0x20000D7")]
public class LaserSiteRifle : GunBase
{
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int BULLET_NUM;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private new static readonly float RELOAD_TIME;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float RAPPID_INTERVAL;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private bool isTrigger;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private float rappidTime;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576E30", Offset = "0x576E30")]
	private GameObject parts;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576E7C", Offset = "0x576E7C")]
	private Transform siteTransform;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576EC8", Offset = "0x576EC8")]
	private LineRenderer lineRanderer;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private MeshRenderer partsMeshRenderer;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private MeshCollider partsMeshCollider;

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x86E93C", Offset = "0x86E93C", VA = "0x86E93C", Slot = "23")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x86E964", Offset = "0x86E964", VA = "0x86E964", Slot = "10")]
	public override void StartTouching(GameObject currentTouchingObject)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x86EA30", Offset = "0x86EA30", VA = "0x86EA30", Slot = "11")]
	public override void StopTouching(GameObject previousTouchingObject)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x86EAE0", Offset = "0x86EAE0", VA = "0x86EAE0", Slot = "12")]
	public override void Grabbed(GameObject currentGrabbingObject)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x86EB90", Offset = "0x86EB90", VA = "0x86EB90", Slot = "15")]
	public override void StopUsing(GameObject previousUsingObject)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x86EC2C", Offset = "0x86EC2C", VA = "0x86EC2C", Slot = "19")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x86ECB4", Offset = "0x86ECB4", VA = "0x86ECB4", Slot = "20")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x86EF50", Offset = "0x86EF50", VA = "0x86EF50", Slot = "33")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x86EF94", Offset = "0x86EF94", VA = "0x86EF94", Slot = "36")]
	protected override void EndTrigger()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x86EFD0", Offset = "0x86EFD0", VA = "0x86EFD0", Slot = "34")]
	protected override void OnUnGrabbed()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x86F0CC", Offset = "0x86F0CC", VA = "0x86F0CC", Slot = "30")]
	protected override void SetData()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x86F14C", Offset = "0x86F14C", VA = "0x86F14C", Slot = "31")]
	protected override void OnControllerSetting()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x86F1B4", Offset = "0x86F1B4", VA = "0x86F1B4", Slot = "37")]
	protected override void OnReplace()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x86F274", Offset = "0x86F274", VA = "0x86F274")]
	public LaserSiteRifle()
	{
	}
}
[Token(Token = "0x20000D8")]
public class MagazineInfo : MonoBehaviorExpansion
{
	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float NUM_IMG_OFFSET;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x576F14", Offset = "0x576F14")]
	private bool <IsReloading>k__BackingField;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject objCanvas;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576F34", Offset = "0x576F34")]
	private ScoreRow bulletSp;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576F80", Offset = "0x576F80")]
	private Transform bulletGauge;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x576FCC", Offset = "0x576FCC")]
	private float bulletGaugeMax;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform reloadCation;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float defRootX;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int bulletNum;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int currentBulletNum;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float reloadTime;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float currentTime;

	[Token(Token = "0x17000074")]
	public bool IsReloading
	{
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x92D4D0", Offset = "0x92D4D0", VA = "0x92D4D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FED4", Offset = "0x57FED4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x92D4D8", Offset = "0x92D4D8", VA = "0x92D4D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FEE4", Offset = "0x57FEE4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public bool IsBulletFull
	{
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x92D4E4", Offset = "0x92D4E4", VA = "0x92D4E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000076")]
	public bool IsEmpty
	{
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x92D4F4", Offset = "0x92D4F4", VA = "0x92D4F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x92D504", Offset = "0x92D504", VA = "0x92D504")]
	public void SetDispEnable(bool _enable)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x92D524", Offset = "0x92D524", VA = "0x92D524")]
	public void Set(int _bulletNum, float _reloadTime)
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x92D588", Offset = "0x92D588", VA = "0x92D588")]
	public void Sub()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x92D668", Offset = "0x92D668", VA = "0x92D668")]
	public void SetReload()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x92D6D8", Offset = "0x92D6D8", VA = "0x92D6D8")]
	public void ShowReloadCation(bool _isShow)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x92DA90", Offset = "0x92DA90", VA = "0x92DA90")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x92DA94", Offset = "0x92DA94", VA = "0x92DA94")]
	public MagazineInfo()
	{
	}
}
[Token(Token = "0x20000D9")]
public class RPG : GunBase
{
	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5708A0", Offset = "0x5708A0")]
	private sealed class <WaitOnCollider>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject _bullet;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider <collider>5__2;

		[Token(Token = "0x170001D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0x73FB54", Offset = "0x73FB54", VA = "0x73FB54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001701")]
			[Address(RVA = "0x73FBBC", Offset = "0x73FBBC", VA = "0x73FBBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x73F5A0", Offset = "0x73F5A0", VA = "0x73F5A0")]
		[DebuggerHidden]
		public <WaitOnCollider>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x73FA84", Offset = "0x73FA84", VA = "0x73FA84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x73FA88", Offset = "0x73FA88", VA = "0x73FA88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x73FB5C", Offset = "0x73FB5C", VA = "0x73FB5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577028", Offset = "0x577028")]
	private float replaceTime;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int BULLET_NUM;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float CHAGE_TIME;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577074", Offset = "0x577074")]
	private MeshRenderer dummyRenderer;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5770C0", Offset = "0x5770C0")]
	private GameObject warheadParts;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private MeshRenderer partsMeshRenderer;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private MeshCollider partsMeshCollider;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float bulletSpeed;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private float bulletLife;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private float chargeTime;

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x73E6E8", Offset = "0x73E6E8", VA = "0x73E6E8", Slot = "10")]
	public override void StartTouching(GameObject currentTouchingObject)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x73E7B8", Offset = "0x73E7B8", VA = "0x73E7B8", Slot = "11")]
	public override void StopTouching(GameObject previousTouchingObject)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x73E86C", Offset = "0x73E86C", VA = "0x73E86C", Slot = "12")]
	public override void Grabbed(GameObject currentGrabbingObject)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x73E920", Offset = "0x73E920", VA = "0x73E920", Slot = "15")]
	public override void StopUsing(GameObject previousUsingObject)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x73E9D4", Offset = "0x73E9D4", VA = "0x73E9D4", Slot = "32")]
	protected override void OnReloadComplete()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x73EA94", Offset = "0x73EA94", VA = "0x73EA94", Slot = "20")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x73EB98", Offset = "0x73EB98", VA = "0x73EB98", Slot = "19")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x73EC4C", Offset = "0x73EC4C", VA = "0x73EC4C", Slot = "33")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x73ECB4", Offset = "0x73ECB4", VA = "0x73ECB4", Slot = "36")]
	protected override void EndTrigger()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x73ED00", Offset = "0x73ED00", VA = "0x73ED00", Slot = "29")]
	protected override void FireBullet()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x73F530", Offset = "0x73F530", VA = "0x73F530")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57FEF4", Offset = "0x57FEF4")]
	private IEnumerator WaitOnCollider(GameObject _bullet)
	{
		return null;
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x73F5CC", Offset = "0x73F5CC", VA = "0x73F5CC", Slot = "30")]
	protected override void SetData()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x73F678", Offset = "0x73F678", VA = "0x73F678", Slot = "31")]
	protected override void OnControllerSetting()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x73F714", Offset = "0x73F714", VA = "0x73F714", Slot = "34")]
	protected override void OnUnGrabbed()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x73F8A8", Offset = "0x73F8A8", VA = "0x73F8A8", Slot = "37")]
	protected override void OnReplace()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x73F974", Offset = "0x73F974", VA = "0x73F974")]
	public RPG()
	{
	}
}
[Token(Token = "0x20000DA")]
public class ShotGun : GunBase
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int BULLET_NUM;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private new static readonly float RELOAD_TIME;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	private Transform[] arrayBulletPoint;

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x7475EC", Offset = "0x7475EC", VA = "0x7475EC", Slot = "33")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x747640", Offset = "0x747640", VA = "0x747640", Slot = "36")]
	protected override void EndTrigger()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x74768C", Offset = "0x74768C", VA = "0x74768C", Slot = "29")]
	protected override void FireBullet()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x748574", Offset = "0x748574", VA = "0x748574", Slot = "30")]
	protected override void SetData()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x7485F4", Offset = "0x7485F4", VA = "0x7485F4")]
	public ShotGun()
	{
	}
}
[Token(Token = "0x20000DB")]
public class SniperRifle : GunBase
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int BULLET_NUM;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float SCOPE_MOVE_SPEED;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57711C", Offset = "0x57711C")]
	private GameObject scopeParts;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577168", Offset = "0x577168")]
	private Transform scopeDefPos;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5771B4", Offset = "0x5771B4")]
	private Transform scopeCamera;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private Vector3 scopeTargetPos;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private MeshRenderer partsMeshRenderer;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private MeshCollider partsMeshCollider;

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x749190", Offset = "0x749190", VA = "0x749190", Slot = "10")]
	public override void StartTouching(GameObject currentTouchingObject)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x749260", Offset = "0x749260", VA = "0x749260", Slot = "11")]
	public override void StopTouching(GameObject previousTouchingObject)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x749314", Offset = "0x749314", VA = "0x749314", Slot = "12")]
	public override void Grabbed(GameObject currentGrabbingObject)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x7493C8", Offset = "0x7493C8", VA = "0x7493C8", Slot = "15")]
	public override void StopUsing(GameObject previousUsingObject)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x74947C", Offset = "0x74947C", VA = "0x74947C", Slot = "19")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x749538", Offset = "0x749538", VA = "0x749538", Slot = "20")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x749694", Offset = "0x749694", VA = "0x749694")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x7498EC", Offset = "0x7498EC", VA = "0x7498EC", Slot = "33")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x749940", Offset = "0x749940", VA = "0x749940", Slot = "36")]
	protected override void EndTrigger()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x74998C", Offset = "0x74998C", VA = "0x74998C", Slot = "30")]
	protected override void SetData()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x749A44", Offset = "0x749A44", VA = "0x749A44", Slot = "31")]
	protected override void OnControllerSetting()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x749AA4", Offset = "0x749AA4", VA = "0x749AA4", Slot = "34")]
	protected override void OnUnGrabbed()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x749B98", Offset = "0x749B98", VA = "0x749B98", Slot = "37")]
	protected override void OnReplace()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x749C64", Offset = "0x749C64", VA = "0x749C64")]
	public SniperRifle()
	{
	}
}
[Token(Token = "0x20000DC")]
public class SubMachineGun : GunBase
{
	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int BULLET_NUM;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static readonly float RAPPID_INTERVAL;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	protected bool isTrigger;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	protected float rappidTime;

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x96F3E4", Offset = "0x96F3E4", VA = "0x96F3E4", Slot = "23")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x96F418", Offset = "0x96F418", VA = "0x96F418", Slot = "20")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x96F590", Offset = "0x96F590", VA = "0x96F590", Slot = "33")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x96F5D4", Offset = "0x96F5D4", VA = "0x96F5D4", Slot = "36")]
	protected override void EndTrigger()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x96F61C", Offset = "0x96F61C", VA = "0x96F61C", Slot = "30")]
	protected override void SetData()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x96F6C0", Offset = "0x96F6C0", VA = "0x96F6C0")]
	public SubMachineGun()
	{
	}
}
[Token(Token = "0x20000DD")]
public class ThrowBase : VRTK_InteractableObject, IAttackable<int>
{
	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int BASE_POWER;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected Rigidbody rigid;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected MeshRenderer meshRenderer;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected VRTK_ControllerEvents controllerEvents;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected GameObject currentUsingObject;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected bool isRelease;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	protected int basePower;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected MeshCollider meshCollider;

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x974FDC", Offset = "0x974FDC", VA = "0x974FDC", Slot = "27")]
	public int GetAttackValue()
	{
		return default(int);
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x974FE4", Offset = "0x974FE4", VA = "0x974FE4", Slot = "19")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x9750A4", Offset = "0x9750A4", VA = "0x9750A4", Slot = "10")]
	public override void StartTouching(GameObject currentTouchingObject)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x975160", Offset = "0x975160", VA = "0x975160", Slot = "11")]
	public override void StopTouching(GameObject previousTouchingObject)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x975214", Offset = "0x975214", VA = "0x975214", Slot = "12")]
	public override void Grabbed(GameObject currentGrabbingObject)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x975464", Offset = "0x975464", VA = "0x975464", Slot = "13")]
	public override void Ungrabbed(GameObject previousGrabbingObject)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x975600", Offset = "0x975600", VA = "0x975600")]
	public ThrowBase()
	{
	}
}
[Token(Token = "0x20000DE")]
public class WarheadRPG : BulletBase, IAttackable<int>
{
	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float DAMAGE_AREA_RADUIUS;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float BOMB_FORCE;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int DAMAGE_POWER;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject prefabExplosion;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem effectFollow;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isCollision;

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x82AD18", Offset = "0x82AD18", VA = "0x82AD18", Slot = "4")]
	public int GetAttackValue()
	{
		return default(int);
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x82AD20", Offset = "0x82AD20", VA = "0x82AD20")]
	private void OnCollisionEnter(Collision c)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x82B5B0", Offset = "0x82B5B0", VA = "0x82B5B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x82B620", Offset = "0x82B620", VA = "0x82B620")]
	public WarheadRPG()
	{
	}
}
[Token(Token = "0x20000DF")]
public class AppEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x71431C", Offset = "0x71431C", VA = "0x71431C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x7144A8", Offset = "0x7144A8", VA = "0x7144A8")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x71456C", Offset = "0x71456C", VA = "0x71456C")]
	public AppEntitlementCheck()
	{
	}
}
[Token(Token = "0x20000E0")]
public class CatchLog : MonoBehaviour
{
	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private StringBuilder builder;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool autoScroll;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577220", Offset = "0x577220")]
	private bool useTimeStamp;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57726C", Offset = "0x57726C")]
	private bool coloredByLogType;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5772B8", Offset = "0x5772B8")]
	private string[] ignore;

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x718500", Offset = "0x718500", VA = "0x718500")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x718640", Offset = "0x718640", VA = "0x718640")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x7186D8", Offset = "0x7186D8", VA = "0x7186D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x718754", Offset = "0x718754", VA = "0x718754")]
	private void HandleLog(string logText, string stackTrace, LogType logType)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x718AB4", Offset = "0x718AB4", VA = "0x718AB4")]
	private string GetColoredString(string src, string color)
	{
		return null;
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x718B18", Offset = "0x718B18", VA = "0x718B18")]
	private void AdjustText(Text t)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x718D88", Offset = "0x718D88", VA = "0x718D88")]
	public CatchLog()
	{
	}
}
[Token(Token = "0x20000E1")]
public class PauseUI : MonoBehaviour
{
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float MOVE_SPEED;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float ROTATE_SPEED;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig currentSceneCameraRig;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577304", Offset = "0x577304")]
	private Transform directRoot;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577350", Offset = "0x577350")]
	private Transform easeRoot;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isEasing;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57739C", Offset = "0x57739C")]
	private Vector3 diffPos;

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x73C5FC", Offset = "0x73C5FC", VA = "0x73C5FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x73C888", Offset = "0x73C888", VA = "0x73C888")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x73CC40", Offset = "0x73CC40", VA = "0x73CC40")]
	public PauseUI()
	{
	}
}
[Token(Token = "0x20000E2")]
public class SwtichResultObj : MonoBehaviour
{
	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5773E8", Offset = "0x5773E8")]
	private GameObject[] arrayResultSignFolding;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577434", Offset = "0x577434")]
	private GameObject[] arrayResultDrone;

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x96F790", Offset = "0x96F790", VA = "0x96F790")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x96FA38", Offset = "0x96FA38", VA = "0x96FA38")]
	public SwtichResultObj()
	{
	}
}
[Token(Token = "0x20000E3")]
public class TutorialViewController : MonoBehaviorExpansion
{
	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5708B0", Offset = "0x5708B0")]
	private sealed class <ContollerAnimation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialViewController <>4__this;

		[Token(Token = "0x170001D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001705")]
			[Address(RVA = "0x97C1C0", Offset = "0x97C1C0", VA = "0x97C1C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001707")]
			[Address(RVA = "0x97C228", Offset = "0x97C228", VA = "0x97C228", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x97B0DC", Offset = "0x97B0DC", VA = "0x97B0DC")]
		[DebuggerHidden]
		public <ContollerAnimation>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x97B978", Offset = "0x97B978", VA = "0x97B978", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x97B97C", Offset = "0x97B97C", VA = "0x97B97C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x97C1C8", Offset = "0x97C1C8", VA = "0x97C1C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject backFrame;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject controllerCenter;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SkinnedMeshRenderer controllerMesh;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Texture gripTex;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Texture triggerTex;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 defControllerRot;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 defBackFrameScale;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 defControllerScale;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isAnimation;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int progressIdx;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly int[] VIEW_CONTROLLER_PROGRESS_IDX;

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x97AF1C", Offset = "0x97AF1C", VA = "0x97AF1C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x97963C", Offset = "0x97963C", VA = "0x97963C")]
	public void Next(int _progressIdx)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x97B06C", Offset = "0x97B06C", VA = "0x97B06C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57FF58", Offset = "0x57FF58")]
	private IEnumerator ContollerAnimation()
	{
		return null;
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x97B108", Offset = "0x97B108", VA = "0x97B108")]
	public TutorialViewController()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x97B180", Offset = "0x97B180", VA = "0x97B180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FFBC", Offset = "0x57FFBC")]
	private void <Next>b__13_0()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x97B280", Offset = "0x97B280", VA = "0x97B280")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57FFCC", Offset = "0x57FFCC")]
	private void <Next>b__13_1()
	{
	}
}
[Token(Token = "0x20000E4")]
public class GamePauseUIMove : MonoBehaviour
{
	[Token(Token = "0x2000394")]
	public enum IconType
	{
		[Token(Token = "0x40017D4")]
		Home,
		[Token(Token = "0x40017D5")]
		Retry,
		[Token(Token = "0x40017D6")]
		Ranking,
		[Token(Token = "0x40017D7")]
		BGM,
		[Token(Token = "0x40017D8")]
		SE
	}

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject eyeObj;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveSpeed;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float height;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offset;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotSpeed;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public uTweenAlpha tweenAlpha;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityAction rankingAct;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityAction applicationAct;

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xBC2E84", Offset = "0xBC2E84", VA = "0xBC2E84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xBC2F98", Offset = "0xBC2F98", VA = "0xBC2F98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xBC3280", Offset = "0xBC3280", VA = "0xBC3280")]
	public GamePauseUIMove()
	{
	}
}
[Token(Token = "0x20000E5")]
public class PauseButton : VRTK_InteractableObject
{
	[Token(Token = "0x2000395")]
	public enum Type
	{
		[Token(Token = "0x40017DA")]
		TITLE,
		[Token(Token = "0x40017DB")]
		RETRY
	}

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5774F0", Offset = "0x5774F0")]
	private Type type;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private VRTK_ControllerActions leftControllerAction;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private VRTK_ControllerActions rightControllerAction;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private VRTK_ControllerEvents leftControllerEve;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private VRTK_ControllerEvents rightControllerEve;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private SteamVR_TrackedObject.EIndex isFocusControllerIdx;

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x73AC14", Offset = "0x73AC14", VA = "0x73AC14", Slot = "19")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x73ADF0", Offset = "0x73ADF0", VA = "0x73ADF0", Slot = "23")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x73AEC4", Offset = "0x73AEC4", VA = "0x73AEC4", Slot = "20")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x73B14C", Offset = "0x73B14C", VA = "0x73B14C")]
	private void DoGrabObject(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x73B7E4", Offset = "0x73B7E4", VA = "0x73B7E4")]
	public PauseButton()
	{
	}
}
[Token(Token = "0x20000E6")]
public class PauseLoader : MonoBehaviour
{
	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tes;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x73B7EC", Offset = "0x73B7EC", VA = "0x73B7EC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x57FFDC", Offset = "0x57FFDC")]
	private static void CreateManager()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x73B86C", Offset = "0x73B86C", VA = "0x73B86C")]
	public PauseLoader()
	{
	}
}
[Token(Token = "0x20000E7")]
public class PauseManager : SingletonMonoBehaviour<PauseManager>
{
	[Token(Token = "0x2000396")]
	private enum State
	{
		[Token(Token = "0x40017DD")]
		STANDBY,
		[Token(Token = "0x40017DE")]
		LOADING,
		[Token(Token = "0x40017DF")]
		PAUSE,
		[Token(Token = "0x40017E0")]
		WAIT
	}

	[Token(Token = "0x2000397")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5708C0", Offset = "0x5708C0")]
	private sealed class <_Pause>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PauseManager <>4__this;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x170001D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600170B")]
			[Address(RVA = "0x73C35C", Offset = "0x73C35C", VA = "0x73C35C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600170D")]
			[Address(RVA = "0x73C3C4", Offset = "0x73C3C4", VA = "0x73C3C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x73BF28", Offset = "0x73BF28", VA = "0x73BF28")]
		[DebuggerHidden]
		public <_Pause>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x73BFF8", Offset = "0x73BFF8", VA = "0x73BFF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x73BFFC", Offset = "0x73BFFC", VA = "0x73BFFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x73C364", Offset = "0x73C364", VA = "0x73C364", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5708D0", Offset = "0x5708D0")]
	private sealed class <_PauseRelease>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PauseManager <>4__this;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x170001DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001711")]
			[Address(RVA = "0x73C58C", Offset = "0x73C58C", VA = "0x73C58C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001713")]
			[Address(RVA = "0x73C5F4", Offset = "0x73C5F4", VA = "0x73C5F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x73BF54", Offset = "0x73BF54", VA = "0x73BF54")]
		[DebuggerHidden]
		public <_PauseRelease>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x73C3CC", Offset = "0x73C3CC", VA = "0x73C3CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x73C3D0", Offset = "0x73C3D0", VA = "0x73C3D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x73C594", Offset = "0x73C594", VA = "0x73C594", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig currentSceneCameraRig;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject leftControlerObj;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject leftControlerObj_Pause;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject rightControlerObj;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject rightControlerObj_Pause;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private State currentState;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isCanPause;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool isLoadWait;

	[Token(Token = "0x17000077")]
	public bool IsCanPause
	{
		[Token(Token = "0x600060A")]
		[Address(RVA = "0x73B874", Offset = "0x73B874", VA = "0x73B874")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public bool IsPause
	{
		[Token(Token = "0x600060B")]
		[Address(RVA = "0x73B880", Offset = "0x73B880", VA = "0x73B880")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000079")]
	public bool IsWait
	{
		[Token(Token = "0x600060C")]
		[Address(RVA = "0x73B890", Offset = "0x73B890", VA = "0x73B890")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x73B8A0", Offset = "0x73B8A0", VA = "0x73B8A0")]
	public void OnUISceneLoad()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x73B8AC", Offset = "0x73B8AC", VA = "0x73B8AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x73BA00", Offset = "0x73BA00", VA = "0x73BA00")]
	private void OnLevelWasLoaded()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x73B934", Offset = "0x73B934", VA = "0x73B934")]
	private void SettingEvents()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x73BA90", Offset = "0x73BA90", VA = "0x73BA90", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x73BB20", Offset = "0x73BB20", VA = "0x73BB20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x73BD48", Offset = "0x73BD48", VA = "0x73BD48")]
	private void DoApplicationMenuPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x73BF24", Offset = "0x73BF24", VA = "0x73BF24")]
	private void DoApplicationMenuReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x73BC68", Offset = "0x73BC68", VA = "0x73BC68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x57FFEC", Offset = "0x57FFEC")]
	private IEnumerator _Pause()
	{
		return null;
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x73BCD8", Offset = "0x73BCD8", VA = "0x73BCD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x580050", Offset = "0x580050")]
	private IEnumerator _PauseRelease()
	{
		return null;
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x73BF80", Offset = "0x73BF80", VA = "0x73BF80")]
	public PauseManager()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x73BFF0", Offset = "0x73BFF0", VA = "0x73BFF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5800B4", Offset = "0x5800B4")]
	private void <OnLevelWasLoaded>b__17_0()
	{
	}
}
[Token(Token = "0x20000E8")]
public class ScenePause : MonoBehaviour
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57753C", Offset = "0x57753C")]
	private GameObject cameraRig;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577588", Offset = "0x577588")]
	private Transform controllerRoot;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5775D4", Offset = "0x5775D4")]
	private Transform[] arrayControllerObj;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577620", Offset = "0x577620")]
	private GameObject eyeObj;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57766C", Offset = "0x57766C")]
	private GameObject subCamera;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5776B8", Offset = "0x5776B8")]
	private GameObject pauseUI;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577704", Offset = "0x577704")]
	private Transform jointObj;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isJointUpdate;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform prevJoint;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isEndFrame;

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x746448", Offset = "0x746448", VA = "0x746448")]
	public ScenePause()
	{
	}
}
[Token(Token = "0x20000E9")]
public class AreaSelectPanel : MonoBehaviorExpansion
{
	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5708E0", Offset = "0x5708E0")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _sceneName;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isViewLoadingScreen;

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x714D74", Offset = "0x714D74", VA = "0x714D74")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x714D84", Offset = "0x714D84", VA = "0x714D84")]
		internal void <IconScale>b__0()
		{
		}
	}

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577750", Offset = "0x577750")]
	private Image selectCenterFrame;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57779C", Offset = "0x57779C")]
	private Image selectRightFrame;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5777E8", Offset = "0x5777E8")]
	private Image selectLeftFrame;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isSelected;

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x714574", Offset = "0x714574", VA = "0x714574")]
	public void SelectCity(GameObject _obj)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x714B94", Offset = "0x714B94", VA = "0x714B94")]
	public void SelectCamp(GameObject _obj)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x714BF4", Offset = "0x714BF4", VA = "0x714BF4")]
	public void SelectBase(GameObject _obj)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x714C54", Offset = "0x714C54", VA = "0x714C54")]
	public void SelectAirport(GameObject _obj)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x714CB4", Offset = "0x714CB4", VA = "0x714CB4")]
	public void SelectEndless(GameObject _obj)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x714D14", Offset = "0x714D14", VA = "0x714D14")]
	public void SelectTutorial(GameObject _obj)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x7145D4", Offset = "0x7145D4", VA = "0x7145D4")]
	private void IconScale(GameObject _obj, string _sceneName)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x714D7C", Offset = "0x714D7C", VA = "0x714D7C")]
	public AreaSelectPanel()
	{
	}
}
[Token(Token = "0x20000EA")]
public class TitleHandGun : HandGun
{
	[Token(Token = "0x200039A")]
	private enum TEXT_TRIGGER
	{
		[Token(Token = "0x40017EC")]
		START_USING = 1
	}

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577834", Offset = "0x577834")]
	private TutorialRenderChecker renderChecker;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private int textIdx;

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x975C1C", Offset = "0x975C1C", VA = "0x975C1C", Slot = "12")]
	public override void Grabbed(GameObject currentGrabbingObject)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x975CF8", Offset = "0x975CF8", VA = "0x975CF8")]
	public TitleHandGun()
	{
	}
}
[Token(Token = "0x20000EB")]
public class TutorialGrenade : Grenade
{
	[Token(Token = "0x200039B")]
	private enum TUTORIAL_TRIGGER
	{
		[Token(Token = "0x40017EE")]
		START_GRAB,
		[Token(Token = "0x40017EF")]
		START_USING,
		[Token(Token = "0x40017F0")]
		UNGRABBED
	}

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private int tutorialIdx;

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x977B24", Offset = "0x977B24", VA = "0x977B24", Slot = "12")]
	public override void Grabbed(GameObject currentGrabbingObject)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x977CF0", Offset = "0x977CF0", VA = "0x977CF0", Slot = "13")]
	public override void Ungrabbed(GameObject previousGrabbingObject)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x977DB8", Offset = "0x977DB8", VA = "0x977DB8")]
	public TutorialGrenade()
	{
	}
}
[Token(Token = "0x20000EC")]
public class TutorialHandGun : HandGun
{
	[Token(Token = "0x200039C")]
	private enum TUTORIAL_TRIGGER
	{
		[Token(Token = "0x40017F2")]
		START_GRAB,
		[Token(Token = "0x40017F3")]
		START_USING,
		[Token(Token = "0x40017F4")]
		FIRE,
		[Token(Token = "0x40017F5")]
		EMPTY,
		[Token(Token = "0x40017F6")]
		RELOAD,
		[Token(Token = "0x40017F7")]
		FALL
	}

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private int tutorialIdx;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private bool isStartTrigger;

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x977E20", Offset = "0x977E20", VA = "0x977E20", Slot = "12")]
	public override void Grabbed(GameObject currentGrabbingObject)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x977F1C", Offset = "0x977F1C", VA = "0x977F1C", Slot = "13")]
	public override void Ungrabbed(GameObject previousGrabbingObject)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x978080", Offset = "0x978080", VA = "0x978080", Slot = "33")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x978140", Offset = "0x978140", VA = "0x978140", Slot = "35")]
	protected override void OnEmpty()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x9781F8", Offset = "0x9781F8", VA = "0x9781F8")]
	protected new void FixedUpdate()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x978754", Offset = "0x978754", VA = "0x978754", Slot = "20")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x978B58", Offset = "0x978B58", VA = "0x978B58")]
	public TutorialHandGun()
	{
	}
}
[Token(Token = "0x20000ED")]
public class TutorialImageChange : MonoBehaviorExpansion
{
	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577880", Offset = "0x577880")]
	private Image[] tutorialImage;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5778CC", Offset = "0x5778CC")]
	private float changeTime;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int imgIdx;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timeCnt;

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x978BC0", Offset = "0x978BC0", VA = "0x978BC0")]
	private void Start()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x978C40", Offset = "0x978C40", VA = "0x978C40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x978CFC", Offset = "0x978CFC", VA = "0x978CFC")]
	public TutorialImageChange()
	{
	}
}
[Token(Token = "0x20000EE")]
public class TutorialRenderChecker : MonoBehaviour
{
	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577918", Offset = "0x577918")]
	private Camera targetCamera;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x577964", Offset = "0x577964")]
	private float lookOverTime;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent events;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lookTime;

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x979E28", Offset = "0x979E28", VA = "0x979E28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x979F00", Offset = "0x979F00", VA = "0x979F00")]
	private bool CheckScreenOut(Vector3 _pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x979F54", Offset = "0x979F54", VA = "0x979F54")]
	public TutorialRenderChecker()
	{
	}
}
[Token(Token = "0x20000EF")]
public class TutorialSubMachineGun : SubMachineGun
{
	[Token(Token = "0x200039D")]
	private enum TUTORIAL_TRIGGER
	{
		[Token(Token = "0x40017F9")]
		START_GRAB,
		[Token(Token = "0x40017FA")]
		START_USING,
		[Token(Token = "0x40017FB")]
		EMPTY,
		[Token(Token = "0x40017FC")]
		RELEASE,
		[Token(Token = "0x40017FD")]
		FALL
	}

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private int tutorialIdx;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private new static readonly float FALL_RETURN_TIME;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x979FC4", Offset = "0x979FC4", VA = "0x979FC4", Slot = "12")]
	public override void Grabbed(GameObject currentGrabbingObject)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x97A0C0", Offset = "0x97A0C0", VA = "0x97A0C0", Slot = "13")]
	public override void Ungrabbed(GameObject previousGrabbingObject)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x97A224", Offset = "0x97A224", VA = "0x97A224", Slot = "35")]
	protected override void OnEmpty()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x97A2DC", Offset = "0x97A2DC", VA = "0x97A2DC", Slot = "20")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x97A824", Offset = "0x97A824", VA = "0x97A824")]
	public TutorialSubMachineGun()
	{
	}
}
[Token(Token = "0x20000F0")]
public class TutorialTarget : MonoBehaviorExpansion, IDamageable<int>
{
	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isDamageMove;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x97A8DC", Offset = "0x97A8DC", VA = "0x97A8DC", Slot = "7")]
	public virtual void Damage(int _damageValue, string _tag)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x97AC0C", Offset = "0x97AC0C", VA = "0x97AC0C", Slot = "5")]
	public void SetDamagePos(Vector3 _posGen, Vector3 _posHit, float _power)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x97AC10", Offset = "0x97AC10", VA = "0x97AC10")]
	public void SetGenPos(Vector3 _pos, float _power)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x97AC14", Offset = "0x97AC14", VA = "0x97AC14", Slot = "6")]
	public void BlowingOff(Vector3 _pos, float _power)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x97AC18", Offset = "0x97AC18", VA = "0x97AC18")]
	public TutorialTarget()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x97AC20", Offset = "0x97AC20", VA = "0x97AC20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5800C4", Offset = "0x5800C4")]
	private void <Damage>b__1_0()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x97ACDC", Offset = "0x97ACDC", VA = "0x97ACDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5800D4", Offset = "0x5800D4")]
	private void <Damage>b__1_1()
	{
	}
}
[Token(Token = "0x20000F1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x56EEA8", Offset = "0x56EEA8")]
public class VolumetricLight : MonoBehaviour
{
	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light _light;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _material;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CommandBuffer _commandBuffer;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer _cascadeShadowCommandBuffer;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5779D0", Offset = "0x5779D0")]
	public int SampleCount;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5779EC", Offset = "0x5779EC")]
	public float ScatteringCoef;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577A04", Offset = "0x577A04")]
	public float ExtinctionCoef;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577A20", Offset = "0x577A20")]
	public float SkyboxExtinctionCoef;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577A38", Offset = "0x577A38")]
	public float MieG;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool HeightFog;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x577A54", Offset = "0x577A54")]
	public float HeightScale;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float GroundLevel;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool Noise;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float NoiseScale;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float NoiseIntensity;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float NoiseIntensityOffset;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector2 NoiseVelocity;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577A6C", Offset = "0x577A6C")]
	public float MaxRayLength;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector4[] _frustumCorners;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _reversedZ;

	[Token(Token = "0x1700007A")]
	public Light Light
	{
		[Token(Token = "0x6000643")]
		[Address(RVA = "0x824DDC", Offset = "0x824DDC", VA = "0x824DDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007B")]
	public Material VolumetricMaterial
	{
		[Token(Token = "0x6000644")]
		[Address(RVA = "0x824DE4", Offset = "0x824DE4", VA = "0x824DE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000010")]
	public event Action<VolumetricLightRenderer, VolumetricLight, CommandBuffer, Matrix4x4> CustomRenderEvent
	{
		[Token(Token = "0x6000641")]
		[Address(RVA = "0x824C94", Offset = "0x824C94", VA = "0x824C94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5800E4", Offset = "0x5800E4")]
		add
		{
		}
		[Token(Token = "0x6000642")]
		[Address(RVA = "0x824D38", Offset = "0x824D38", VA = "0x824D38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5800F4", Offset = "0x5800F4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x824DEC", Offset = "0x824DEC", VA = "0x824DEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x82508C", Offset = "0x82508C", VA = "0x82508C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x8251B8", Offset = "0x8251B8", VA = "0x8251B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x8252E4", Offset = "0x8252E4", VA = "0x8252E4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x825350", Offset = "0x825350", VA = "0x825350")]
	private void VolumetricLightRenderer_PreRenderEvent(VolumetricLightRenderer renderer, Matrix4x4 viewProj)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x8279A8", Offset = "0x8279A8", VA = "0x8279A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x825844", Offset = "0x825844", VA = "0x825844")]
	private void SetupPointLight(VolumetricLightRenderer renderer, Matrix4x4 viewProj)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x826180", Offset = "0x826180", VA = "0x826180")]
	private void SetupSpotLight(VolumetricLightRenderer renderer, Matrix4x4 viewProj)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x8272AC", Offset = "0x8272AC", VA = "0x8272AC")]
	private void SetupDirectionalLight(VolumetricLightRenderer renderer, Matrix4x4 viewProj)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x8279C4", Offset = "0x8279C4", VA = "0x8279C4")]
	private bool IsCameraInPointLightBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x827B30", Offset = "0x827B30", VA = "0x827B30")]
	private bool IsCameraInSpotLightBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x827DFC", Offset = "0x827DFC", VA = "0x827DFC")]
	public VolumetricLight()
	{
	}
}
[Token(Token = "0x20000F2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x56EF0C", Offset = "0x56EF0C")]
public class VolumetricLightRenderer : MonoBehaviour
{
	[Token(Token = "0x200039E")]
	public enum VolumtericResolution
	{
		[Token(Token = "0x40017FF")]
		Full,
		[Token(Token = "0x4001800")]
		Half,
		[Token(Token = "0x4001801")]
		Quarter
	}

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Mesh _pointLightMesh;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Mesh _spotLightMesh;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Material _lightMaterial;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera _camera;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CommandBuffer _preLightPass;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4 _viewProj;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material _blitAddMaterial;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material _bilateralBlurMaterial;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderTexture _volumeLightTexture;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RenderTexture _halfVolumeLightTexture;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderTexture _quarterVolumeLightTexture;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Texture _defaultSpotCookie;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RenderTexture _halfDepthBuffer;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RenderTexture _quarterDepthBuffer;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private VolumtericResolution _currentResolution;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Texture2D _ditheringTexture;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Texture3D _noiseTexture;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public VolumtericResolution Resolution;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Texture DefaultSpotCookie;

	[Token(Token = "0x1700007C")]
	public CommandBuffer GlobalCommandBuffer
	{
		[Token(Token = "0x6000653")]
		[Address(RVA = "0x827EC8", Offset = "0x827EC8", VA = "0x827EC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000011")]
	public static event Action<VolumetricLightRenderer, Matrix4x4> PreRenderEvent
	{
		[Token(Token = "0x6000651")]
		[Address(RVA = "0x825104", Offset = "0x825104", VA = "0x825104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580104", Offset = "0x580104")]
		add
		{
		}
		[Token(Token = "0x6000652")]
		[Address(RVA = "0x825230", Offset = "0x825230", VA = "0x825230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580114", Offset = "0x580114")]
		remove
		{
		}
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x827ED0", Offset = "0x827ED0", VA = "0x827ED0")]
	public static Material GetLightMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x827F20", Offset = "0x827F20", VA = "0x827F20")]
	public static Mesh GetPointLightMesh()
	{
		return null;
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x827F70", Offset = "0x827F70", VA = "0x827F70")]
	public static Mesh GetSpotLightMesh()
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x827B00", Offset = "0x827B00", VA = "0x827B00")]
	public RenderTexture GetVolumeLightBuffer()
	{
		return null;
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x825814", Offset = "0x825814", VA = "0x825814")]
	public RenderTexture GetVolumeLightDepthBuffer()
	{
		return null;
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x827FC0", Offset = "0x827FC0", VA = "0x827FC0")]
	public static Texture GetDefaultSpotCookie()
	{
		return null;
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x828010", Offset = "0x828010", VA = "0x828010")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x82A2E8", Offset = "0x82A2E8", VA = "0x82A2E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x82A340", Offset = "0x82A340", VA = "0x82A340")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x82842C", Offset = "0x82842C", VA = "0x82842C")]
	private void ChangeResolution()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x82A398", Offset = "0x82A398", VA = "0x82A398")]
	public void OnPreRender()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x82A944", Offset = "0x82A944", VA = "0x82A944")]
	[ImageEffectOpaque]
	public void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x82A854", Offset = "0x82A854", VA = "0x82A854")]
	private void UpdateMaterialParameters()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x82AC50", Offset = "0x82AC50", VA = "0x82AC50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x829008", Offset = "0x829008", VA = "0x829008")]
	private void LoadNoise3dTexture()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x8294CC", Offset = "0x8294CC", VA = "0x8294CC")]
	private void GenerateDitherTexture()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x8288C0", Offset = "0x8288C0", VA = "0x8288C0")]
	private Mesh CreateSpotLightMesh()
	{
		return null;
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x82AD04", Offset = "0x82AD04", VA = "0x82AD04")]
	public VolumetricLightRenderer()
	{
	}
}
[Token(Token = "0x20000F3")]
public class LeaderboardManager : SingletonMonoBehaviour<LeaderboardManager>
{
	[Token(Token = "0x200039F")]
	public enum GetRankingType
	{
		[Token(Token = "0x4001803")]
		USER_CURRENT,
		[Token(Token = "0x4001804")]
		GLOBAL
	}

	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5708F0", Offset = "0x5708F0")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GetRankingType _type;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool retFind;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SteamLeaderboard.CallBackDownload <>9__2;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamLeaderboard.CallBackDownload <>9__1;

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x87001C", Offset = "0x87001C", VA = "0x87001C")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x870024", Offset = "0x870024", VA = "0x870024")]
		internal void <_DownloadEntry>b__0(LeaderboardFindResult_t _find)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x8701D8", Offset = "0x8701D8", VA = "0x8701D8")]
		internal void <_DownloadEntry>b__2(LeaderboardScoresDownloaded_t _data)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x8701E4", Offset = "0x8701E4", VA = "0x8701E4")]
		internal void <_DownloadEntry>b__1(LeaderboardScoresDownloaded_t _data)
		{
		}
	}

	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570900", Offset = "0x570900")]
	private sealed class <_DownloadEntry>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetRankingType _type;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int _areaNo;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass9_0 <>8__1;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<Ranking.Data[]> _success;

		[Token(Token = "0x170001DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600171D")]
			[Address(RVA = "0x870AC0", Offset = "0x870AC0", VA = "0x870AC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600171F")]
			[Address(RVA = "0x870B28", Offset = "0x870B28", VA = "0x870B28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x86F480", Offset = "0x86F480", VA = "0x86F480")]
		[DebuggerHidden]
		public <_DownloadEntry>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x8707DC", Offset = "0x8707DC", VA = "0x8707DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x8707E0", Offset = "0x8707E0", VA = "0x8707E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x870AC8", Offset = "0x870AC8", VA = "0x870AC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570910", Offset = "0x570910")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<SteamLeaderboard.ERROR_TYPE> _failure;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _score;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string leaderboard_name;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action _sucess;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SteamLeaderboard.CallBackUpload <>9__1;

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x86F720", Offset = "0x86F720", VA = "0x86F720")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x86FE04", Offset = "0x86FE04", VA = "0x86FE04")]
		internal void <UploadScore>b__0(LeaderboardFindResult_t _find)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x86FEF4", Offset = "0x86FEF4", VA = "0x86FEF4")]
		internal void <UploadScore>b__1(LeaderboardScoreUploaded_t _upload)
		{
		}
	}

	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570920", Offset = "0x570920")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool retFind;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SteamLeaderboard.CallBackFind <>9__0;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamLeaderboard.CallBackDownload <>9__1;

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x86FFFC", Offset = "0x86FFFC", VA = "0x86FFFC")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x870004", Offset = "0x870004", VA = "0x870004")]
		internal void <_CheckEntrie>b__0(LeaderboardFindResult_t _find)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x870010", Offset = "0x870010", VA = "0x870010")]
		internal void <_CheckEntrie>b__1(LeaderboardScoresDownloaded_t _download)
		{
		}
	}

	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570930", Offset = "0x570930")]
	private sealed class <_CheckEntrie>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass11_0 <>8__1;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeaderboardManager <>4__this;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CSteamID[] <Ids>5__2;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <leaderboard_name>5__4;

		[Token(Token = "0x170001DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001729")]
			[Address(RVA = "0x87076C", Offset = "0x87076C", VA = "0x87076C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600172B")]
			[Address(RVA = "0x8707D4", Offset = "0x8707D4", VA = "0x8707D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x86F798", Offset = "0x86F798", VA = "0x86F798")]
		[DebuggerHidden]
		public <_CheckEntrie>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x8701F0", Offset = "0x8701F0", VA = "0x8701F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x8701F4", Offset = "0x8701F4", VA = "0x8701F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x870774", Offset = "0x870774", VA = "0x870774", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int GLOBAL_RANKING_START_NUM;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int GLOBAL_RANKING_GET_NUM;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LEADERBOARD_NANE;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577AB4", Offset = "0x577AB4")]
	private bool <IsEntrieInit>k__BackingField;

	[Token(Token = "0x1700007D")]
	public bool IsEntrieInit
	{
		[Token(Token = "0x6000666")]
		[Address(RVA = "0x86F350", Offset = "0x86F350", VA = "0x86F350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580134", Offset = "0x580134")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000667")]
		[Address(RVA = "0x86F358", Offset = "0x86F358", VA = "0x86F358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580144", Offset = "0x580144")]
		set
		{
		}
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x86F364", Offset = "0x86F364", VA = "0x86F364")]
	public void GetRankingData(int _areaNo, GetRankingType _type, Action<Ranking.Data[]> _success, Action _failure)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x86F3FC", Offset = "0x86F3FC", VA = "0x86F3FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x580154", Offset = "0x580154")]
	private IEnumerator _DownloadEntry(int _areaNo, GetRankingType _type, Action<Ranking.Data[]> _success, Action _failure)
	{
		return null;
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x86F4AC", Offset = "0x86F4AC", VA = "0x86F4AC")]
	public void UploadScore(int _areaNo, int _score, Action _sucess, Action<SteamLeaderboard.ERROR_TYPE> _failure)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x86F728", Offset = "0x86F728", VA = "0x86F728")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5801B8", Offset = "0x5801B8")]
	private IEnumerator _CheckEntrie(int _idx)
	{
		return null;
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x86F7C4", Offset = "0x86F7C4", VA = "0x86F7C4")]
	private void CheckSteamId()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x86F96C", Offset = "0x86F96C", VA = "0x86F96C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x86F9FC", Offset = "0x86F9FC", VA = "0x86F9FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x86FBE8", Offset = "0x86FBE8", VA = "0x86FBE8")]
	public LeaderboardManager()
	{
	}
}
[Token(Token = "0x20000F4")]
public class SteamLeaderboard
{
	[Token(Token = "0x20003A5")]
	public delegate void CallBackFind(LeaderboardFindResult_t _find);

	[Token(Token = "0x20003A6")]
	public delegate void CallBackUpload(LeaderboardScoreUploaded_t _upload);

	[Token(Token = "0x20003A7")]
	public delegate void CallBackDownload(LeaderboardScoresDownloaded_t _download);

	[Token(Token = "0x20003A8")]
	public enum ERROR_TYPE
	{
		[Token(Token = "0x400181F")]
		NOT_INITIALIZED,
		[Token(Token = "0x4001820")]
		NOT_SCORE_INIT,
		[Token(Token = "0x4001821")]
		CONTAINS_KEY,
		[Token(Token = "0x4001822")]
		SCORE_CHECK,
		[Token(Token = "0x4001823")]
		NOT_FIND_LEADERBOARD,
		[Token(Token = "0x4001824")]
		TIME_OUT,
		[Token(Token = "0x4001825")]
		USE_DISABLE
	}

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577AC4", Offset = "0x577AC4")]
	private int <CurrentDownloadEntryCnt>k__BackingField;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577AD4", Offset = "0x577AD4")]
	private SteamLeaderboardEntries_t <SteamLeaderboardEntries>k__BackingField;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SteamLeaderboard_t? steamLeaderboard;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CallResult<LeaderboardFindResult_t> leaderboardFindResult;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CallResult<LeaderboardScoreUploaded_t> leaderboardScoreUploaded;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CallResult<LeaderboardScoresDownloaded_t> leaderboardScoresDownloaded;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CallBackFind callBackFind;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CallBackUpload callBackUpload;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CallBackDownload callBackDownload;

	[Token(Token = "0x1700007E")]
	public bool IsFind
	{
		[Token(Token = "0x6000671")]
		[Address(RVA = "0x74A21C", Offset = "0x74A21C", VA = "0x74A21C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007F")]
	public int CurrentDownloadEntryCnt
	{
		[Token(Token = "0x6000672")]
		[Address(RVA = "0x74A260", Offset = "0x74A260", VA = "0x74A260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58021C", Offset = "0x58021C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000673")]
		[Address(RVA = "0x74A268", Offset = "0x74A268", VA = "0x74A268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58022C", Offset = "0x58022C")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public string CurrentLeaderboardName
	{
		[Token(Token = "0x6000674")]
		[Address(RVA = "0x74A270", Offset = "0x74A270", VA = "0x74A270")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000081")]
	public SteamLeaderboardEntries_t SteamLeaderboardEntries
	{
		[Token(Token = "0x6000675")]
		[Address(RVA = "0x74A2C8", Offset = "0x74A2C8", VA = "0x74A2C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58023C", Offset = "0x58023C")]
		get
		{
			return default(SteamLeaderboardEntries_t);
		}
		[Token(Token = "0x6000676")]
		[Address(RVA = "0x74A2D0", Offset = "0x74A2D0", VA = "0x74A2D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58024C", Offset = "0x58024C")]
		set
		{
		}
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x74A2D8", Offset = "0x74A2D8", VA = "0x74A2D8")]
	public void FindLeaderboard(string _leaderBoardName, [Optional] CallBackFind _callback)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x74A368", Offset = "0x74A368", VA = "0x74A368")]
	public bool UploadScore(int _score, [Optional] CallBackUpload _callback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x74A424", Offset = "0x74A424", VA = "0x74A424")]
	public bool DownloadScoreUsers(CSteamID[] _arrayIDs, [Optional] CallBackDownload _callback)
	{
		return default(bool);
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x74A4E0", Offset = "0x74A4E0", VA = "0x74A4E0")]
	public bool DownloadScoreGlobal(int _rangeStart, int _rangeEnd, [Optional] CallBackDownload _callback)
	{
		return default(bool);
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x74A5A8", Offset = "0x74A5A8", VA = "0x74A5A8")]
	public bool DownloadScoreGlobalAroundUser(int _rangeStart, int _rangeEnd, [Optional] CallBackDownload _callback)
	{
		return default(bool);
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x74A670", Offset = "0x74A670", VA = "0x74A670")]
	public void Init()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x74A794", Offset = "0x74A794", VA = "0x74A794")]
	public SteamLeaderboard()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x74A7BC", Offset = "0x74A7BC", VA = "0x74A7BC")]
	private void OnLeaderboardFindResult(LeaderboardFindResult_t pCallback, bool bIOFailure)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x74AAD4", Offset = "0x74AAD4", VA = "0x74AAD4")]
	private void OnLeaderboardScoreUploaded(LeaderboardScoreUploaded_t pCallback, bool bIOFailure)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x74B1B0", Offset = "0x74B1B0", VA = "0x74B1B0")]
	private void OnLeaderboardScoresDownloaded(LeaderboardScoresDownloaded_t pCallback, bool bIOFailure)
	{
	}
}
[Token(Token = "0x20000F5")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577AE4", Offset = "0x577AE4")]
	private SteamLeaderboard <Leaderboard>k__BackingField;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamManager s_instance;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool s_EverInialized;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_bInitialized;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SteamAPIWarningMessageHook_t m_SteamAPIWarningMessageHook;

	[Token(Token = "0x17000082")]
	public SteamLeaderboard Leaderboard
	{
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x74B9B4", Offset = "0x74B9B4", VA = "0x74B9B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58025C", Offset = "0x58025C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x74B9BC", Offset = "0x74B9BC", VA = "0x74B9BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58026C", Offset = "0x58026C")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public static SteamManager Instance
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x74B9C4", Offset = "0x74B9C4", VA = "0x74B9C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000084")]
	public static bool Initialized
	{
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x74BA5C", Offset = "0x74BA5C", VA = "0x74BA5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x74BA7C", Offset = "0x74BA7C", VA = "0x74BA7C")]
	private static void SteamAPIDebugTextHook(int nSeverity, StringBuilder pchDebugText)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x74BAE4", Offset = "0x74BAE4", VA = "0x74BAE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x74BE78", Offset = "0x74BE78", VA = "0x74BE78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x74BF6C", Offset = "0x74BF6C", VA = "0x74BF6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x74C028", Offset = "0x74C028", VA = "0x74C028")]
	private void Update()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x74C03C", Offset = "0x74C03C", VA = "0x74C03C")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20000F6")]
public struct GazeEventArgs
{
	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distance;
}
[Token(Token = "0x20000F7")]
public delegate void GazeEventHandler(object sender, GazeEventArgs e);
[Token(Token = "0x20000F8")]
public class SteamVR_GazeTracker : MonoBehaviour
{
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isInGaze;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float gazeInCutoff;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float gazeOutCutoff;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform hmdTrackedObject;

	[Token(Token = "0x14000012")]
	public event GazeEventHandler GazeOn
	{
		[Token(Token = "0x600068F")]
		[Address(RVA = "0x8CC7F0", Offset = "0x8CC7F0", VA = "0x8CC7F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58027C", Offset = "0x58027C")]
		add
		{
		}
		[Token(Token = "0x6000690")]
		[Address(RVA = "0x8CC894", Offset = "0x8CC894", VA = "0x8CC894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58028C", Offset = "0x58028C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event GazeEventHandler GazeOff
	{
		[Token(Token = "0x6000691")]
		[Address(RVA = "0x8CC938", Offset = "0x8CC938", VA = "0x8CC938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58029C", Offset = "0x58029C")]
		add
		{
		}
		[Token(Token = "0x6000692")]
		[Address(RVA = "0x8CC9DC", Offset = "0x8CC9DC", VA = "0x8CC9DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5802AC", Offset = "0x5802AC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x8CCA80", Offset = "0x8CCA80", VA = "0x8CCA80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x8CCA84", Offset = "0x8CCA84", VA = "0x8CCA84", Slot = "4")]
	public virtual void OnGazeOn(GazeEventArgs e)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x8CCA9C", Offset = "0x8CCA9C", VA = "0x8CCA9C", Slot = "5")]
	public virtual void OnGazeOff(GazeEventArgs e)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x8CCAB4", Offset = "0x8CCAB4", VA = "0x8CCAB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x8CCE1C", Offset = "0x8CCE1C", VA = "0x8CCE1C")]
	public SteamVR_GazeTracker()
	{
	}
}
[Token(Token = "0x20000F9")]
public struct PointerEventArgs
{
	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint controllerIndex;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint flags;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float distance;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform target;
}
[Token(Token = "0x20000FA")]
public delegate void PointerEventHandler(object sender, PointerEventArgs e);
[Token(Token = "0x20000FB")]
public class SteamVR_LaserPointer : MonoBehaviour
{
	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool active;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thickness;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject holder;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pointer;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isActive;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool addRigidBody;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform reference;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform previousContact;

	[Token(Token = "0x14000014")]
	public event PointerEventHandler PointerIn
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0x8CDD00", Offset = "0x8CDD00", VA = "0x8CDD00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5802BC", Offset = "0x5802BC")]
		add
		{
		}
		[Token(Token = "0x600069D")]
		[Address(RVA = "0x8CDDA4", Offset = "0x8CDDA4", VA = "0x8CDDA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5802CC", Offset = "0x5802CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event PointerEventHandler PointerOut
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0x8CDE48", Offset = "0x8CDE48", VA = "0x8CDE48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5802DC", Offset = "0x5802DC")]
		add
		{
		}
		[Token(Token = "0x600069F")]
		[Address(RVA = "0x8CDEEC", Offset = "0x8CDEEC", VA = "0x8CDEEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5802EC", Offset = "0x5802EC")]
		remove
		{
		}
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x8CDF90", Offset = "0x8CDF90", VA = "0x8CDF90")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x8CE354", Offset = "0x8CE354", VA = "0x8CE354", Slot = "4")]
	public virtual void OnPointerIn(PointerEventArgs e)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x8CE398", Offset = "0x8CE398", VA = "0x8CE398", Slot = "5")]
	public virtual void OnPointerOut(PointerEventArgs e)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x8CE3DC", Offset = "0x8CE3DC", VA = "0x8CE3DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x8CE854", Offset = "0x8CE854", VA = "0x8CE854")]
	public SteamVR_LaserPointer()
	{
	}
}
[Token(Token = "0x20000FC")]
public class SteamVR_Teleporter : MonoBehaviour
{
	[Token(Token = "0x20003A9")]
	public enum TeleportType
	{
		[Token(Token = "0x4001827")]
		TeleportTypeUseTerrain,
		[Token(Token = "0x4001828")]
		TeleportTypeUseCollider,
		[Token(Token = "0x4001829")]
		TeleportTypeUseZeroY
	}

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool teleportOnClick;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TeleportType teleportType;

	[Token(Token = "0x17000085")]
	private Transform reference
	{
		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x8DA4D0", Offset = "0x8DA4D0", VA = "0x8DA4D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x8DA56C", Offset = "0x8DA56C", VA = "0x8DA56C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x8DA738", Offset = "0x8DA738", VA = "0x8DA738")]
	private void DoClick(object sender, ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x8DAAD4", Offset = "0x8DAAD4", VA = "0x8DAAD4")]
	public SteamVR_Teleporter()
	{
	}
}
[Token(Token = "0x20000FD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x56EF80", Offset = "0x56EF80")]
public class SteamVR_TestThrow : MonoBehaviour
{
	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody attachPoint;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SteamVR_TrackedObject trackedObj;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FixedJoint joint;

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x8DBCAC", Offset = "0x8DBCAC", VA = "0x8DBCAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x8DBD04", Offset = "0x8DBD04", VA = "0x8DBD04")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x8DC030", Offset = "0x8DC030", VA = "0x8DC030")]
	public SteamVR_TestThrow()
	{
	}
}
[Token(Token = "0x20000FE")]
public class SteamVR_TestTrackedCamera : MonoBehaviour
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool undistorted;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool cropped;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x8DC038", Offset = "0x8DC038", VA = "0x8DC038")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x8DC0F8", Offset = "0x8DC0F8", VA = "0x8DC0F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x8DC1F0", Offset = "0x8DC1F0", VA = "0x8DC1F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x8DC584", Offset = "0x8DC584", VA = "0x8DC584")]
	public SteamVR_TestTrackedCamera()
	{
	}
}
[Token(Token = "0x20000FF")]
public struct ClickedEventArgs
{
	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint controllerIndex;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint flags;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float padX;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float padY;
}
[Token(Token = "0x2000100")]
public delegate void ClickedEventHandler(object sender, ClickedEventArgs e);
[Token(Token = "0x2000101")]
public class SteamVR_TrackedController : MonoBehaviour
{
	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint controllerIndex;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRControllerState_t controllerState;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool triggerPressed;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool steamPressed;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool menuPressed;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool padPressed;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool padTouched;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool gripped;

	[Token(Token = "0x14000016")]
	public event ClickedEventHandler MenuButtonClicked
	{
		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x96A168", Offset = "0x96A168", VA = "0x96A168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5802FC", Offset = "0x5802FC")]
		add
		{
		}
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x96A20C", Offset = "0x96A20C", VA = "0x96A20C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58030C", Offset = "0x58030C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event ClickedEventHandler MenuButtonUnclicked
	{
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x96A2B0", Offset = "0x96A2B0", VA = "0x96A2B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58031C", Offset = "0x58031C")]
		add
		{
		}
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x96A354", Offset = "0x96A354", VA = "0x96A354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58032C", Offset = "0x58032C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event ClickedEventHandler TriggerClicked
	{
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x96A3F8", Offset = "0x96A3F8", VA = "0x96A3F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58033C", Offset = "0x58033C")]
		add
		{
		}
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x96A49C", Offset = "0x96A49C", VA = "0x96A49C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58034C", Offset = "0x58034C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event ClickedEventHandler TriggerUnclicked
	{
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x96A540", Offset = "0x96A540", VA = "0x96A540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58035C", Offset = "0x58035C")]
		add
		{
		}
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x96A5E4", Offset = "0x96A5E4", VA = "0x96A5E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58036C", Offset = "0x58036C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event ClickedEventHandler SteamClicked
	{
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x96A688", Offset = "0x96A688", VA = "0x96A688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58037C", Offset = "0x58037C")]
		add
		{
		}
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x96A72C", Offset = "0x96A72C", VA = "0x96A72C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58038C", Offset = "0x58038C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event ClickedEventHandler PadClicked
	{
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x96A7D0", Offset = "0x96A7D0", VA = "0x96A7D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58039C", Offset = "0x58039C")]
		add
		{
		}
		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x96A874", Offset = "0x96A874", VA = "0x96A874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5803AC", Offset = "0x5803AC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event ClickedEventHandler PadUnclicked
	{
		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x96A918", Offset = "0x96A918", VA = "0x96A918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5803BC", Offset = "0x5803BC")]
		add
		{
		}
		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x96A9BC", Offset = "0x96A9BC", VA = "0x96A9BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5803CC", Offset = "0x5803CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event ClickedEventHandler PadTouched
	{
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x96AA60", Offset = "0x96AA60", VA = "0x96AA60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5803DC", Offset = "0x5803DC")]
		add
		{
		}
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x96AB04", Offset = "0x96AB04", VA = "0x96AB04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5803EC", Offset = "0x5803EC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event ClickedEventHandler PadUntouched
	{
		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x96ABA8", Offset = "0x96ABA8", VA = "0x96ABA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5803FC", Offset = "0x5803FC")]
		add
		{
		}
		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x96AC4C", Offset = "0x96AC4C", VA = "0x96AC4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58040C", Offset = "0x58040C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event ClickedEventHandler Gripped
	{
		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x96ACF0", Offset = "0x96ACF0", VA = "0x96ACF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58041C", Offset = "0x58041C")]
		add
		{
		}
		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x96AD94", Offset = "0x96AD94", VA = "0x96AD94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58042C", Offset = "0x58042C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event ClickedEventHandler Ungripped
	{
		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x96AE38", Offset = "0x96AE38", VA = "0x96AE38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58043C", Offset = "0x58043C")]
		add
		{
		}
		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x96AEDC", Offset = "0x96AEDC", VA = "0x96AEDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58044C", Offset = "0x58044C")]
		remove
		{
		}
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x96AF80", Offset = "0x96AF80", VA = "0x96AF80")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x96B0CC", Offset = "0x96B0CC", VA = "0x96B0CC")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x96B0D4", Offset = "0x96B0D4", VA = "0x96B0D4", Slot = "4")]
	public virtual void OnTriggerClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x96B0F8", Offset = "0x96B0F8", VA = "0x96B0F8", Slot = "5")]
	public virtual void OnTriggerUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x96B11C", Offset = "0x96B11C", VA = "0x96B11C", Slot = "6")]
	public virtual void OnMenuClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x96B140", Offset = "0x96B140", VA = "0x96B140", Slot = "7")]
	public virtual void OnMenuUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x96B164", Offset = "0x96B164", VA = "0x96B164", Slot = "8")]
	public virtual void OnSteamClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x96B188", Offset = "0x96B188", VA = "0x96B188", Slot = "9")]
	public virtual void OnPadClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x96B1AC", Offset = "0x96B1AC", VA = "0x96B1AC", Slot = "10")]
	public virtual void OnPadUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x96B1D0", Offset = "0x96B1D0", VA = "0x96B1D0", Slot = "11")]
	public virtual void OnPadTouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x96B1F4", Offset = "0x96B1F4", VA = "0x96B1F4", Slot = "12")]
	public virtual void OnPadUntouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x96B218", Offset = "0x96B218", VA = "0x96B218", Slot = "13")]
	public virtual void OnGripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x96B23C", Offset = "0x96B23C", VA = "0x96B23C", Slot = "14")]
	public virtual void OnUngripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x96B260", Offset = "0x96B260", VA = "0x96B260")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x96B554", Offset = "0x96B554", VA = "0x96B554")]
	public SteamVR_TrackedController()
	{
	}
}
[Token(Token = "0x2000102")]
public class SteamVR : IDisposable
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _enabled;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR _instance;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577BE4", Offset = "0x577BE4")]
	private CVRSystem <hmd>k__BackingField;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577BF4", Offset = "0x577BF4")]
	private CVRCompositor <compositor>k__BackingField;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577C04", Offset = "0x577C04")]
	private CVROverlay <overlay>k__BackingField;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577C14", Offset = "0x577C14")]
	private static bool <initializing>k__BackingField;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577C24", Offset = "0x577C24")]
	private static bool <calibrating>k__BackingField;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577C34", Offset = "0x577C34")]
	private static bool <outOfRange>k__BackingField;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool[] connected;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577C44", Offset = "0x577C44")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577C54", Offset = "0x577C54")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577C64", Offset = "0x577C64")]
	private float <aspect>k__BackingField;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577C74", Offset = "0x577C74")]
	private float <fieldOfView>k__BackingField;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577C84", Offset = "0x577C84")]
	private Vector2 <tanHalfFov>k__BackingField;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577C94", Offset = "0x577C94")]
	private VRTextureBounds_t[] <textureBounds>k__BackingField;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577CA4", Offset = "0x577CA4")]
	private SteamVR_Utils.RigidTransform[] <eyes>k__BackingField;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ETextureType textureType;

	[Token(Token = "0x17000086")]
	public static bool active
	{
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x74C044", Offset = "0x74C044", VA = "0x74C044")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000087")]
	public static bool enabled
	{
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x74C0B4", Offset = "0x74C0B4", VA = "0x74C0B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x74C150", Offset = "0x74C150", VA = "0x74C150")]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public static SteamVR instance
	{
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x74C294", Offset = "0x74C294", VA = "0x74C294")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000089")]
	public static bool usingNativeSupport
	{
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x74C5D4", Offset = "0x74C5D4", VA = "0x74C5D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008A")]
	public CVRSystem hmd
	{
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x74CF9C", Offset = "0x74CF9C", VA = "0x74CF9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58045C", Offset = "0x58045C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x74CFA4", Offset = "0x74CFA4", VA = "0x74CFA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58046C", Offset = "0x58046C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public CVRCompositor compositor
	{
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x74CFAC", Offset = "0x74CFAC", VA = "0x74CFAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58047C", Offset = "0x58047C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x74CFB4", Offset = "0x74CFB4", VA = "0x74CFB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58048C", Offset = "0x58048C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public CVROverlay overlay
	{
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x74CFBC", Offset = "0x74CFBC", VA = "0x74CFBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58049C", Offset = "0x58049C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x74CFC4", Offset = "0x74CFC4", VA = "0x74CFC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5804AC", Offset = "0x5804AC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public static bool initializing
	{
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x74CFCC", Offset = "0x74CFCC", VA = "0x74CFCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5804BC", Offset = "0x5804BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x74D034", Offset = "0x74D034", VA = "0x74D034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5804CC", Offset = "0x5804CC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public static bool calibrating
	{
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x74D0A4", Offset = "0x74D0A4", VA = "0x74D0A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5804DC", Offset = "0x5804DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x74D10C", Offset = "0x74D10C", VA = "0x74D10C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5804EC", Offset = "0x5804EC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public static bool outOfRange
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x74D17C", Offset = "0x74D17C", VA = "0x74D17C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5804FC", Offset = "0x5804FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x74D1E4", Offset = "0x74D1E4", VA = "0x74D1E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58050C", Offset = "0x58050C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public float sceneWidth
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x74D254", Offset = "0x74D254", VA = "0x74D254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58051C", Offset = "0x58051C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x74D25C", Offset = "0x74D25C", VA = "0x74D25C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58052C", Offset = "0x58052C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public float sceneHeight
	{
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x74D264", Offset = "0x74D264", VA = "0x74D264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58053C", Offset = "0x58053C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x74D26C", Offset = "0x74D26C", VA = "0x74D26C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58054C", Offset = "0x58054C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public float aspect
	{
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x74D274", Offset = "0x74D274", VA = "0x74D274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58055C", Offset = "0x58055C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x74D27C", Offset = "0x74D27C", VA = "0x74D27C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58056C", Offset = "0x58056C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public float fieldOfView
	{
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x74D284", Offset = "0x74D284", VA = "0x74D284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58057C", Offset = "0x58057C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x74D28C", Offset = "0x74D28C", VA = "0x74D28C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58058C", Offset = "0x58058C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public Vector2 tanHalfFov
	{
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x74D294", Offset = "0x74D294", VA = "0x74D294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58059C", Offset = "0x58059C")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x74D29C", Offset = "0x74D29C", VA = "0x74D29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5805AC", Offset = "0x5805AC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public VRTextureBounds_t[] textureBounds
	{
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x74D2A4", Offset = "0x74D2A4", VA = "0x74D2A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5805BC", Offset = "0x5805BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x74D2AC", Offset = "0x74D2AC", VA = "0x74D2AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5805CC", Offset = "0x5805CC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public SteamVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x74D2B4", Offset = "0x74D2B4", VA = "0x74D2B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5805DC", Offset = "0x5805DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x74D2BC", Offset = "0x74D2BC", VA = "0x74D2BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5805EC", Offset = "0x5805EC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public string hmd_TrackingSystemName
	{
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x74D2C4", Offset = "0x74D2C4", VA = "0x74D2C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000098")]
	public string hmd_ModelNumber
	{
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x74D410", Offset = "0x74D410", VA = "0x74D410")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000099")]
	public string hmd_SerialNumber
	{
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x74D418", Offset = "0x74D418", VA = "0x74D418")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009A")]
	public float hmd_SecondsFromVsyncToPhotons
	{
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x74D420", Offset = "0x74D420", VA = "0x74D420")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009B")]
	public float hmd_DisplayFrequency
	{
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x74D464", Offset = "0x74D464", VA = "0x74D464")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x74C3AC", Offset = "0x74C3AC", VA = "0x74C3AC")]
	private static SteamVR CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x74C640", Offset = "0x74C640", VA = "0x74C640")]
	private static void ReportError(EVRInitError error)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x74D46C", Offset = "0x74D46C", VA = "0x74D46C")]
	public string GetTrackedDeviceString(uint deviceId)
	{
		return null;
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x74D2CC", Offset = "0x74D2CC", VA = "0x74D2CC")]
	private string GetStringProperty(ETrackedDeviceProperty prop)
	{
		return null;
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x74D428", Offset = "0x74D428", VA = "0x74D428")]
	private float GetFloatProperty(ETrackedDeviceProperty prop)
	{
		return default(float);
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x74D554", Offset = "0x74D554", VA = "0x74D554")]
	private void OnInitializing(bool initializing)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x74D608", Offset = "0x74D608", VA = "0x74D608")]
	private void OnCalibrating(bool calibrating)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x74D6BC", Offset = "0x74D6BC", VA = "0x74D6BC")]
	private void OnOutOfRange(bool outOfRange)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x74D770", Offset = "0x74D770", VA = "0x74D770")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x74D814", Offset = "0x74D814", VA = "0x74D814")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x74C794", Offset = "0x74C794", VA = "0x74C794")]
	private SteamVR()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x74DCC0", Offset = "0x74DCC0", VA = "0x74DCC0", Slot = "1")]
	~SteamVR()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x74DF70", Offset = "0x74DF70", VA = "0x74DF70", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x74DD2C", Offset = "0x74DD2C", VA = "0x74DD2C")]
	private void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x74C1F0", Offset = "0x74C1F0", VA = "0x74C1F0")]
	public static void SafeDispose()
	{
	}
}
[Token(Token = "0x2000103")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x56EFE4", Offset = "0x56EFE4")]
public class SteamVR_Camera : MonoBehaviour
{
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577CC4", Offset = "0x577CC4")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _ears;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool wireframe;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Hashtable values;

	[Token(Token = "0x4000648")]
	private const string eyeSuffix = " (eye)";

	[Token(Token = "0x4000649")]
	private const string earsSuffix = " (ears)";

	[Token(Token = "0x400064A")]
	private const string headSuffix = " (head)";

	[Token(Token = "0x400064B")]
	private const string originSuffix = " (origin)";

	[Token(Token = "0x1700009C")]
	public Transform head
	{
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x74E058", Offset = "0x74E058", VA = "0x74E058")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009D")]
	public Transform offset
	{
		[Token(Token = "0x600070E")]
		[Address(RVA = "0x74E060", Offset = "0x74E060", VA = "0x74E060")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009E")]
	public Transform origin
	{
		[Token(Token = "0x600070F")]
		[Address(RVA = "0x74E068", Offset = "0x74E068", VA = "0x74E068")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009F")]
	public Camera camera
	{
		[Token(Token = "0x6000710")]
		[Address(RVA = "0x74E084", Offset = "0x74E084", VA = "0x74E084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5805FC", Offset = "0x5805FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000711")]
		[Address(RVA = "0x74E08C", Offset = "0x74E08C", VA = "0x74E08C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58060C", Offset = "0x58060C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public Transform ears
	{
		[Token(Token = "0x6000712")]
		[Address(RVA = "0x74E094", Offset = "0x74E094", VA = "0x74E094")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A1")]
	public static float sceneResolutionScale
	{
		[Token(Token = "0x6000714")]
		[Address(RVA = "0x74E124", Offset = "0x74E124", VA = "0x74E124")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000715")]
		[Address(RVA = "0x74E12C", Offset = "0x74E12C", VA = "0x74E12C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public string baseName
	{
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x74F230", Offset = "0x74F230", VA = "0x74F230")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x74E09C", Offset = "0x74E09C", VA = "0x74E09C")]
	public Ray GetRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x74E134", Offset = "0x74E134", VA = "0x74E134")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x74E13C", Offset = "0x74E13C", VA = "0x74E13C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x74EBC4", Offset = "0x74EBC4", VA = "0x74EBC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x74EC20", Offset = "0x74EC20", VA = "0x74EC20")]
	public void ForceLast()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x74E498", Offset = "0x74E498", VA = "0x74E498")]
	public void Expand()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x74F300", Offset = "0x74F300", VA = "0x74F300")]
	public void Collapse()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x74F700", Offset = "0x74F700", VA = "0x74F700")]
	public SteamVR_Camera()
	{
	}
}
[Token(Token = "0x2000104")]
[ExecuteInEditMode]
public class SteamVR_CameraFlip : MonoBehaviour
{
	[Token(Token = "0x600071E")]
	[Address(RVA = "0x8C6284", Offset = "0x8C6284", VA = "0x8C6284")]
	private void Awake()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x8C6320", Offset = "0x8C6320", VA = "0x8C6320")]
	public SteamVR_CameraFlip()
	{
	}
}
[Token(Token = "0x2000105")]
[ExecuteInEditMode]
public class SteamVR_CameraMask : MonoBehaviour
{
	[Token(Token = "0x6000720")]
	[Address(RVA = "0x8C6328", Offset = "0x8C6328", VA = "0x8C6328")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x8C63C4", Offset = "0x8C63C4", VA = "0x8C63C4")]
	public SteamVR_CameraMask()
	{
	}
}
[Token(Token = "0x2000106")]
public class SteamVR_Controller
{
	[Token(Token = "0x20003AA")]
	public class ButtonMask
	{
		[Token(Token = "0x400182A")]
		public const ulong System = 1uL;

		[Token(Token = "0x400182B")]
		public const ulong ApplicationMenu = 2uL;

		[Token(Token = "0x400182C")]
		public const ulong Grip = 4uL;

		[Token(Token = "0x400182D")]
		public const ulong Axis0 = 4294967296uL;

		[Token(Token = "0x400182E")]
		public const ulong Axis1 = 8589934592uL;

		[Token(Token = "0x400182F")]
		public const ulong Axis2 = 17179869184uL;

		[Token(Token = "0x4001830")]
		public const ulong Axis3 = 34359738368uL;

		[Token(Token = "0x4001831")]
		public const ulong Axis4 = 68719476736uL;

		[Token(Token = "0x4001832")]
		public const ulong Touchpad = 4294967296uL;

		[Token(Token = "0x4001833")]
		public const ulong Trigger = 8589934592uL;

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x8C6AF8", Offset = "0x8C6AF8", VA = "0x8C6AF8")]
		public ButtonMask()
		{
		}
	}

	[Token(Token = "0x20003AB")]
	public class Device
	{
		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E578", Offset = "0x57E578")]
		private uint <index>k__BackingField;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E588", Offset = "0x57E588")]
		private bool <valid>k__BackingField;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRControllerState_t state;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRControllerState_t prevState;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TrackedDevicePose_t pose;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int prevFrameCount;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float hairTriggerDelta;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float hairTriggerLimit;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool hairTriggerState;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool hairTriggerPrevState;

		[Token(Token = "0x170001E1")]
		public uint index
		{
			[Token(Token = "0x600173A")]
			[Address(RVA = "0x8C6B00", Offset = "0x8C6B00", VA = "0x8C6B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583658", Offset = "0x583658")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600173B")]
			[Address(RVA = "0x8C6B08", Offset = "0x8C6B08", VA = "0x8C6B08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583668", Offset = "0x583668")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public bool valid
		{
			[Token(Token = "0x600173C")]
			[Address(RVA = "0x8C6B10", Offset = "0x8C6B10", VA = "0x8C6B10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583678", Offset = "0x583678")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600173D")]
			[Address(RVA = "0x8C6B18", Offset = "0x8C6B18", VA = "0x8C6B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583688", Offset = "0x583688")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public bool connected
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0x8C6ACC", Offset = "0x8C6ACC", VA = "0x8C6ACC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E4")]
		public bool hasTracking
		{
			[Token(Token = "0x600173F")]
			[Address(RVA = "0x8C6B24", Offset = "0x8C6B24", VA = "0x8C6B24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E5")]
		public bool outOfRange
		{
			[Token(Token = "0x6001740")]
			[Address(RVA = "0x8C6B48", Offset = "0x8C6B48", VA = "0x8C6B48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E6")]
		public bool calibrating
		{
			[Token(Token = "0x6001741")]
			[Address(RVA = "0x8C6B80", Offset = "0x8C6B80", VA = "0x8C6B80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E7")]
		public bool uninitialized
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0x8C6BB0", Offset = "0x8C6BB0", VA = "0x8C6BB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E8")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6001743")]
			[Address(RVA = "0x8C6A70", Offset = "0x8C6A70", VA = "0x8C6A70")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x170001E9")]
		public Vector3 velocity
		{
			[Token(Token = "0x6001744")]
			[Address(RVA = "0x8C6BDC", Offset = "0x8C6BDC", VA = "0x8C6BDC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001EA")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6001745")]
			[Address(RVA = "0x8C6C2C", Offset = "0x8C6C2C", VA = "0x8C6C2C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x8C6518", Offset = "0x8C6518", VA = "0x8C6518")]
		public Device(uint i)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x8C6C80", Offset = "0x8C6C80", VA = "0x8C6C80")]
		public VRControllerState_t GetState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x8C6CBC", Offset = "0x8C6CBC", VA = "0x8C6CBC")]
		public VRControllerState_t GetPrevState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x8C6CF8", Offset = "0x8C6CF8", VA = "0x8C6CF8")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x8C658C", Offset = "0x8C658C", VA = "0x8C658C")]
		public void Update()
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x8C6F90", Offset = "0x8C6F90", VA = "0x8C6F90")]
		public bool GetPress(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x8C6FC0", Offset = "0x8C6FC0", VA = "0x8C6FC0")]
		public bool GetPressDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x8C7004", Offset = "0x8C7004", VA = "0x8C7004")]
		public bool GetPressUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x8C7048", Offset = "0x8C7048", VA = "0x8C7048")]
		public bool GetPress(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x8C707C", Offset = "0x8C707C", VA = "0x8C707C")]
		public bool GetPressDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x8C70C4", Offset = "0x8C70C4", VA = "0x8C70C4")]
		public bool GetPressUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x8C710C", Offset = "0x8C710C", VA = "0x8C710C")]
		public bool GetTouch(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x8C713C", Offset = "0x8C713C", VA = "0x8C713C")]
		public bool GetTouchDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x8C7180", Offset = "0x8C7180", VA = "0x8C7180")]
		public bool GetTouchUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x8C71C4", Offset = "0x8C71C4", VA = "0x8C71C4")]
		public bool GetTouch(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x8C71F8", Offset = "0x8C71F8", VA = "0x8C71F8")]
		public bool GetTouchDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x8C7240", Offset = "0x8C7240", VA = "0x8C7240")]
		public bool GetTouchUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x8C7288", Offset = "0x8C7288", VA = "0x8C7288")]
		public Vector2 GetAxis(EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x8C7364", Offset = "0x8C7364", VA = "0x8C7364")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x8C6E90", Offset = "0x8C6E90", VA = "0x8C6E90")]
		private void UpdateHairTrigger()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x8C7400", Offset = "0x8C7400", VA = "0x8C7400")]
		public bool GetHairTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x8C7424", Offset = "0x8C7424", VA = "0x8C7424")]
		public bool GetHairTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x8C7460", Offset = "0x8C7460", VA = "0x8C7460")]
		public bool GetHairTriggerUp()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003AC")]
	public enum DeviceRelation
	{
		[Token(Token = "0x400183F")]
		First,
		[Token(Token = "0x4001840")]
		Leftmost,
		[Token(Token = "0x4001841")]
		Rightmost,
		[Token(Token = "0x4001842")]
		FarthestLeft,
		[Token(Token = "0x4001843")]
		FarthestRight
	}

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Device[] devices;

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x8C63CC", Offset = "0x8C63CC", VA = "0x8C63CC")]
	public static Device Input(int deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x8C6550", Offset = "0x8C6550", VA = "0x8C6550")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x8C6714", Offset = "0x8C6714", VA = "0x8C6714")]
	public static int GetDeviceIndex(DeviceRelation relation, ETrackedDeviceClass deviceClass = ETrackedDeviceClass.Controller, int relativeTo = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x8C6AF0", Offset = "0x8C6AF0", VA = "0x8C6AF0")]
	public SteamVR_Controller()
	{
	}
}
[Token(Token = "0x2000107")]
public class SteamVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] objects;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool assignAllBeforeIdentified;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint[] indices;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] connected;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint leftIndex;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private uint rightIndex;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action inputFocusAction;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SteamVR_Events.Action trackedDeviceRoleChangedAction;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] labels;

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x8C749C", Offset = "0x8C749C", VA = "0x8C749C")]
	public void UpdateTargets()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x8C7680", Offset = "0x8C7680", VA = "0x8C7680")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x8C7998", Offset = "0x8C7998", VA = "0x8C7998")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x8C7C20", Offset = "0x8C7C20", VA = "0x8C7C20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x8C7C84", Offset = "0x8C7C84", VA = "0x8C7C84")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x8C8024", Offset = "0x8C8024", VA = "0x8C8024")]
	private void HideObject(Transform t, string name)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x8C7F30", Offset = "0x8C7F30", VA = "0x8C7F30")]
	private void ShowObject(Transform t, string name)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x8C8128", Offset = "0x8C8128", VA = "0x8C8128")]
	private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x8C842C", Offset = "0x8C842C", VA = "0x8C842C")]
	private void OnTrackedDeviceRoleChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x8C7AC8", Offset = "0x8C7AC8", VA = "0x8C7AC8")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x8C8430", Offset = "0x8C8430", VA = "0x8C8430")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x8C86CC", Offset = "0x8C86CC", VA = "0x8C86CC")]
	public SteamVR_ControllerManager()
	{
	}
}
[Token(Token = "0x2000108")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F068", Offset = "0x56F068")]
public class SteamVR_Ears : MonoBehaviour
{
	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Camera vrcam;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool usingSpeakers;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion offset;

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x8C8820", Offset = "0x8C8820", VA = "0x8C8820")]
	private void OnNewPosesApplied()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x8C898C", Offset = "0x8C898C", VA = "0x8C898C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x8C8B30", Offset = "0x8C8B30", VA = "0x8C8B30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x8C8C04", Offset = "0x8C8C04", VA = "0x8C8C04")]
	public SteamVR_Ears()
	{
	}
}
[Token(Token = "0x2000109")]
public static class SteamVR_Events
{
	[Token(Token = "0x20003AD")]
	public abstract class Action
	{
		[Token(Token = "0x170001EB")]
		public bool enabled
		{
			[Token(Token = "0x600175D")]
			[Address(RVA = "0x8C7C10", Offset = "0x8C7C10", VA = "0x8C7C10")]
			set
			{
			}
		}

		[Token(Token = "0x600175C")]
		public abstract void Enable(bool enabled);

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x8C97A0", Offset = "0x8C97A0", VA = "0x8C97A0")]
		protected Action()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003AE")]
	public class ActionNoArgs : Action
	{
		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Event _event;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityAction action;

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x8C8DEC", Offset = "0x8C8DEC", VA = "0x8C8DEC")]
		public ActionNoArgs(Event _event, UnityAction action)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x8C97A8", Offset = "0x8C97A8", VA = "0x8C97A8", Slot = "4")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003AF")]
	public class Action<T> : Action
	{
		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T> _event;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T> action;

		[Token(Token = "0x6001761")]
		public Action(Event<T> _event, UnityAction<T> action)
		{
		}

		[Token(Token = "0x6001762")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003B0")]
	public class Action<T0, T1> : Action
	{
		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1> _event;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1> action;

		[Token(Token = "0x6001763")]
		public Action(Event<T0, T1> _event, UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6001764")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003B1")]
	public class Action<T0, T1, T2> : Action
	{
		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1, T2> _event;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1, T2> action;

		[Token(Token = "0x6001765")]
		public Action(Event<T0, T1, T2> _event, UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6001766")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Token(Token = "0x20003B2")]
	public class Event : UnityEvent
	{
		[Token(Token = "0x6001767")]
		[Address(RVA = "0x8C8B28", Offset = "0x8C8B28", VA = "0x8C8B28")]
		public void Listen(UnityAction action)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x8C8BFC", Offset = "0x8C8BFC", VA = "0x8C8BFC")]
		public void Remove(UnityAction action)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x8C97D8", Offset = "0x8C97D8", VA = "0x8C97D8")]
		public void Send()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x8C9798", Offset = "0x8C9798", VA = "0x8C9798")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20003B3")]
	public class Event<T> : UnityEvent<T>
	{
		[Token(Token = "0x600176B")]
		public void Listen(UnityAction<T> action)
		{
		}

		[Token(Token = "0x600176C")]
		public void Remove(UnityAction<T> action)
		{
		}

		[Token(Token = "0x600176D")]
		public void Send(T arg0)
		{
		}

		[Token(Token = "0x600176E")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20003B4")]
	public class Event<T0, T1> : UnityEvent<T0, T1>
	{
		[Token(Token = "0x600176F")]
		public void Listen(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6001770")]
		public void Remove(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6001771")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x6001772")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20003B5")]
	public class Event<T0, T1, T2> : UnityEvent<T0, T1, T2>
	{
		[Token(Token = "0x6001773")]
		public void Listen(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6001774")]
		public void Remove(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6001775")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6001776")]
		public Event()
		{
		}
	}

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<bool> Calibrating;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Event<int, bool> DeviceConnected;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Event<Color, float, bool> Fade;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Event FadeReady;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Event<bool> HideRenderModels;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Event<bool> Initializing;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Event<bool> InputFocus;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Event<bool> Loading;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Event<float> LoadingFadeIn;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Event<float> LoadingFadeOut;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Event<TrackedDevicePose_t[]> NewPoses;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Event NewPosesApplied;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Event<bool> OutOfRange;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Event<SteamVR_RenderModel, bool> RenderModelLoaded;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Dictionary<EVREventType, Event<VREvent_t>> systemEvents;

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x8C8C0C", Offset = "0x8C8C0C", VA = "0x8C8C0C")]
	public static Action CalibratingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x8C7848", Offset = "0x8C7848", VA = "0x8C7848")]
	public static Action DeviceConnectedAction(UnityAction<int, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x8C8CB0", Offset = "0x8C8CB0", VA = "0x8C8CB0")]
	public static Action FadeAction(UnityAction<Color, float, bool> action)
	{
		return null;
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x8C8D54", Offset = "0x8C8D54", VA = "0x8C8D54")]
	public static Action FadeReadyAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x8C8E24", Offset = "0x8C8E24", VA = "0x8C8E24")]
	public static Action HideRenderModelsAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x8C8EC8", Offset = "0x8C8EC8", VA = "0x8C8EC8")]
	public static Action InitializingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x8C77A4", Offset = "0x8C77A4", VA = "0x8C77A4")]
	public static Action InputFocusAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x8C8F6C", Offset = "0x8C8F6C", VA = "0x8C8F6C")]
	public static Action LoadingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x8C9010", Offset = "0x8C9010", VA = "0x8C9010")]
	public static Action LoadingFadeInAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x8C90B4", Offset = "0x8C90B4", VA = "0x8C90B4")]
	public static Action LoadingFadeOutAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x8C9158", Offset = "0x8C9158", VA = "0x8C9158")]
	public static Action NewPosesAction(UnityAction<TrackedDevicePose_t[]> action)
	{
		return null;
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x8C91FC", Offset = "0x8C91FC", VA = "0x8C91FC")]
	public static Action NewPosesAppliedAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x8C9294", Offset = "0x8C9294", VA = "0x8C9294")]
	public static Action OutOfRangeAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x8C9338", Offset = "0x8C9338", VA = "0x8C9338")]
	public static Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x8C93DC", Offset = "0x8C93DC", VA = "0x8C93DC")]
	public static Event<VREvent_t> System(EVREventType eventType)
	{
		return null;
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x8C78EC", Offset = "0x8C78EC", VA = "0x8C78EC")]
	public static Action SystemAction(EVREventType eventType, UnityAction<VREvent_t> action)
	{
		return null;
	}
}
[Token(Token = "0x200010A")]
public class SteamVR_ExternalCamera : MonoBehaviour
{
	[Token(Token = "0x20003B6")]
	public struct Config
	{
		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rx;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ry;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rz;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fov;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float near;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float far;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sceneResolutionScale;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frameSkip;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float nearOffset;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float farOffset;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float hmdOffset;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool disableStandardAssets;
	}

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Config config;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string configPath;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera cam;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform target;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject clipQuad;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material clipMaterial;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material colorMat;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material alphaMat;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Camera[] cameras;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Rect[] cameraRects;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float sceneResolutionScale;

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x8C97E0", Offset = "0x8C97E0", VA = "0x8C97E0")]
	public void ReadConfig()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x8C9FF8", Offset = "0x8C9FF8", VA = "0x8C9FF8")]
	public void AttachToCamera(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x8CA578", Offset = "0x8CA578", VA = "0x8CA578")]
	public float GetTargetDistance()
	{
		return default(float);
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x8CA824", Offset = "0x8CA824", VA = "0x8CA824")]
	public void RenderNear()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x8CAE58", Offset = "0x8CAE58", VA = "0x8CAE58")]
	public void RenderFar()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x8CAF78", Offset = "0x8CAF78", VA = "0x8CAF78")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x8CAF7C", Offset = "0x8CAF7C", VA = "0x8CAF7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x8CB1CC", Offset = "0x8CB1CC", VA = "0x8CB1CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x8CB308", Offset = "0x8CB308", VA = "0x8CB308")]
	public SteamVR_ExternalCamera()
	{
	}
}
[Token(Token = "0x200010B")]
public class SteamVR_Fade : MonoBehaviour
{
	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color currentColor;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color targetColor;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color deltaColor;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool fadeOverlay;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material fadeMaterial;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x8CB310", Offset = "0x8CB310", VA = "0x8CB310")]
	public static void Start(Color newColor, float duration, bool fadeOverlay = false)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x8CB3D4", Offset = "0x8CB3D4", VA = "0x8CB3D4")]
	public static void View(Color newColor, float duration)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x8CB49C", Offset = "0x8CB49C", VA = "0x8CB49C")]
	public void OnStartFade(Color newColor, float duration, bool fadeOverlay)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x8CB504", Offset = "0x8CB504", VA = "0x8CB504")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x8CB6C4", Offset = "0x8CB6C4", VA = "0x8CB6C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x8CB788", Offset = "0x8CB788", VA = "0x8CB788")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x8CBAB0", Offset = "0x8CBAB0", VA = "0x8CBAB0")]
	public SteamVR_Fade()
	{
	}
}
[Token(Token = "0x200010C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F0CC", Offset = "0x56F0CC")]
public class SteamVR_Frustum : MonoBehaviour
{
	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fovLeft;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fovRight;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fovTop;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fovBottom;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float nearZ;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float farZ;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x8CBBB8", Offset = "0x8CBBB8", VA = "0x8CBBB8")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x8CC3A0", Offset = "0x8CC3A0", VA = "0x8CC3A0")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x8CC55C", Offset = "0x8CC55C", VA = "0x8CC55C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x8CC644", Offset = "0x8CC644", VA = "0x8CC644")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x8CC72C", Offset = "0x8CC72C", VA = "0x8CC72C")]
	public SteamVR_Frustum()
	{
	}
}
[Token(Token = "0x200010D")]
[ExecuteInEditMode]
public class SteamVR_GameView : MonoBehaviour
{
	[Token(Token = "0x600075E")]
	[Address(RVA = "0x8CC74C", Offset = "0x8CC74C", VA = "0x8CC74C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x8CC7E8", Offset = "0x8CC7E8", VA = "0x8CC7E8")]
	public SteamVR_GameView()
	{
	}
}
[Token(Token = "0x200010E")]
public class SteamVR_IK : MonoBehaviour
{
	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform joint;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform end;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform poleVector;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform upVector;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float blendPct;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Transform startXform;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Transform jointXform;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Transform endXform;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x8CCE30", Offset = "0x8CCE30", VA = "0x8CCE30")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x8CD7D8", Offset = "0x8CD7D8", VA = "0x8CD7D8")]
	public static bool Solve(Vector3 start, Vector3 end, Vector3 poleVector, float jointDist, float targetDist, ref Vector3 result, out Vector3 forward, out Vector3 up)
	{
		return default(bool);
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x8CDCF0", Offset = "0x8CDCF0", VA = "0x8CDCF0")]
	public SteamVR_IK()
	{
	}
}
[Token(Token = "0x200010F")]
public class SteamVR_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570940", Offset = "0x570940")]
	private sealed class <LoadLevel>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_LoadLevel <>4__this;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVROverlay <overlay>5__2;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <fadedForeground>5__3;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRCompositor <compositor>5__4;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0x8D0B44", Offset = "0x8D0B44", VA = "0x8D0B44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0x8D0BAC", Offset = "0x8D0BAC", VA = "0x8D0BAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x8CF6B4", Offset = "0x8CF6B4", VA = "0x8CF6B4")]
		[DebuggerHidden]
		public <LoadLevel>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x8CF830", Offset = "0x8CF830", VA = "0x8CF830", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x8CF834", Offset = "0x8CF834", VA = "0x8CF834", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x8D0B4C", Offset = "0x8D0B4C", VA = "0x8D0B4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamVR_LoadLevel _active;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string internalProcessPath;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string internalProcessArgs;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadAdditive;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool loadAsync;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture loadingScreen;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture progressBarEmpty;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture progressBarFull;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float loadingScreenWidthInMeters;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float progressBarWidthInMeters;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float loadingScreenDistance;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform loadingScreenTransform;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform progressBarTransform;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture front;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture back;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture left;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture right;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture top;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture bottom;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color backgroundColor;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool showGrid;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float fadeOutTime;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float fadeInTime;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float postLoadSettleTime;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float loadingScreenFadeInTime;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float loadingScreenFadeOutTime;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float fadeRate;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float alpha;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AsyncOperation async;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RenderTexture renderTexture;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ulong loadingScreenOverlayHandle;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ulong progressBarOverlayHandle;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x170000A3")]
	public static bool loading
	{
		[Token(Token = "0x6000763")]
		[Address(RVA = "0x8CE870", Offset = "0x8CE870", VA = "0x8CE870")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A4")]
	public static float progress
	{
		[Token(Token = "0x6000764")]
		[Address(RVA = "0x8CE908", Offset = "0x8CE908", VA = "0x8CE908")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A5")]
	public static Texture progressTexture
	{
		[Token(Token = "0x6000765")]
		[Address(RVA = "0x8CEA1C", Offset = "0x8CEA1C", VA = "0x8CEA1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x8CEAF4", Offset = "0x8CEAF4", VA = "0x8CEAF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x8CEB04", Offset = "0x8CEB04", VA = "0x8CEB04")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x8CEC6C", Offset = "0x8CEC6C", VA = "0x8CEC6C")]
	public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x8CED78", Offset = "0x8CED78", VA = "0x8CED78")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x8CF54C", Offset = "0x8CF54C", VA = "0x8CF54C")]
	private void Update()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x8CEBFC", Offset = "0x8CEBFC", VA = "0x8CEBFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58061C", Offset = "0x58061C")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x8CF1C0", Offset = "0x8CF1C0", VA = "0x8CF1C0")]
	private ulong GetOverlayHandle(string overlayName, Transform transform, float widthInMeters = 1f)
	{
		return default(ulong);
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x8CF7C8", Offset = "0x8CF7C8", VA = "0x8CF7C8")]
	public SteamVR_LoadLevel()
	{
	}
}
[Token(Token = "0x2000110")]
public class SteamVR_Menu : MonoBehaviour
{
	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture cursor;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture background;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture logo;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float logoHeight;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float menuOffset;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 scaleLimits;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleRate;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Overlay overlay;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera overlayCam;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 uvOffset;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float distance;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577D14", Offset = "0x577D14")]
	private float <scale>k__BackingField;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string scaleLimitX;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string scaleLimitY;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string scaleRateText;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CursorLockMode savedCursorLockState;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool savedCursorVisible;

	[Token(Token = "0x170000A6")]
	public RenderTexture texture
	{
		[Token(Token = "0x600076F")]
		[Address(RVA = "0x8D0BB4", Offset = "0x8D0BB4", VA = "0x8D0BB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A7")]
	public float scale
	{
		[Token(Token = "0x6000770")]
		[Address(RVA = "0x8D0C80", Offset = "0x8D0C80", VA = "0x8D0C80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580680", Offset = "0x580680")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000771")]
		[Address(RVA = "0x8D0C88", Offset = "0x8D0C88", VA = "0x8D0C88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580690", Offset = "0x580690")]
		private set
		{
		}
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x8D0C90", Offset = "0x8D0C90", VA = "0x8D0C90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x8D0DF8", Offset = "0x8D0DF8", VA = "0x8D0DF8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x8D2980", Offset = "0x8D2980", VA = "0x8D2980")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x8D287C", Offset = "0x8D287C", VA = "0x8D287C")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x8D2D34", Offset = "0x8D2D34", VA = "0x8D2D34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x8D2794", Offset = "0x8D2794", VA = "0x8D2794")]
	private void SetScale(float scale)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x8D2CCC", Offset = "0x8D2CCC", VA = "0x8D2CCC")]
	private void SaveCursorState()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x8D2D04", Offset = "0x8D2D04", VA = "0x8D2D04")]
	private void RestoreCursorState()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x8D2F04", Offset = "0x8D2F04", VA = "0x8D2F04")]
	public SteamVR_Menu()
	{
	}
}
[Token(Token = "0x2000111")]
public class SteamVR_Overlay : MonoBehaviour
{
	[Token(Token = "0x20003B8")]
	public struct IntersectionResults
	{
		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 point;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 normal;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 UVs;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;
	}

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool curved;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool antialias;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool highquality;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float scale;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float alpha;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 uvOffset;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 mouseScale;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 curvedRange;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VROverlayInputMethod inputMethod;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577D24", Offset = "0x577D24")]
	private static SteamVR_Overlay <instance>k__BackingField;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ulong handle;

	[Token(Token = "0x170000A8")]
	public static SteamVR_Overlay instance
	{
		[Token(Token = "0x600077B")]
		[Address(RVA = "0x8D2F58", Offset = "0x8D2F58", VA = "0x8D2F58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5806A0", Offset = "0x5806A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600077C")]
		[Address(RVA = "0x8D2FA8", Offset = "0x8D2FA8", VA = "0x8D2FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5806B0", Offset = "0x5806B0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public static string key
	{
		[Token(Token = "0x600077D")]
		[Address(RVA = "0x8CF6E0", Offset = "0x8CF6E0", VA = "0x8CF6E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x8D2FFC", Offset = "0x8D2FFC", VA = "0x8D2FFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x8D314C", Offset = "0x8D314C", VA = "0x8D314C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x8D3208", Offset = "0x8D3208", VA = "0x8D3208")]
	public void UpdateOverlay()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x8D3634", Offset = "0x8D3634", VA = "0x8D3634")]
	public bool PollNextEvent(ref VREvent_t pEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x8D3740", Offset = "0x8D3740", VA = "0x8D3740")]
	public bool ComputeIntersection(Vector3 source, Vector3 direction, ref IntersectionResults results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x8D38FC", Offset = "0x8D38FC", VA = "0x8D38FC")]
	public SteamVR_Overlay()
	{
	}
}
[Token(Token = "0x2000112")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F16C", Offset = "0x56F16C")]
public class SteamVR_PlayArea : MonoBehaviour
{
	[Token(Token = "0x20003B9")]
	public enum Size
	{
		[Token(Token = "0x4001866")]
		Calibrated,
		[Token(Token = "0x4001867")]
		_400x300,
		[Token(Token = "0x4001868")]
		_300x225,
		[Token(Token = "0x4001869")]
		_200x150
	}

	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570950", Offset = "0x570950")]
	private sealed class <UpdateBounds>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_PlayArea <>4__this;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVRChaperone <chaperone>5__2;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001780")]
			[Address(RVA = "0x8D4AD4", Offset = "0x8D4AD4", VA = "0x8D4AD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0x8D4B3C", Offset = "0x8D4B3C", VA = "0x8D4B3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x8D4960", Offset = "0x8D4960", VA = "0x8D4960")]
		[DebuggerHidden]
		public <UpdateBounds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x8D49D4", Offset = "0x8D49D4", VA = "0x8D49D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x8D49D8", Offset = "0x8D49D8", VA = "0x8D49D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x8D4ADC", Offset = "0x8D4ADC", VA = "0x8D4ADC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float borderThickness;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float wireframeHeight;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool drawWireframeWhenSelectedOnly;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool drawInGame;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Size size;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3[] vertices;

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x8D39C4", Offset = "0x8D39C4", VA = "0x8D39C4")]
	public static bool GetBounds(Size size, ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x8D3D50", Offset = "0x8D3D50", VA = "0x8D3D50")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x8D4598", Offset = "0x8D4598", VA = "0x8D4598")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x8D482C", Offset = "0x8D482C", VA = "0x8D482C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x8D45A8", Offset = "0x8D45A8", VA = "0x8D45A8")]
	public void DrawWireframe()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x8D483C", Offset = "0x8D483C", VA = "0x8D483C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x8D48F0", Offset = "0x8D48F0", VA = "0x8D48F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5806C0", Offset = "0x5806C0")]
	private IEnumerator UpdateBounds()
	{
		return null;
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x8D498C", Offset = "0x8D498C", VA = "0x8D498C")]
	public SteamVR_PlayArea()
	{
	}
}
[Token(Token = "0x2000113")]
public class SteamVR_Render : MonoBehaviour
{
	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570960", Offset = "0x570960")]
	private sealed class <RenderLoop>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_Render <>4__this;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001786")]
			[Address(RVA = "0x8D640C", Offset = "0x8D640C", VA = "0x8D640C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001788")]
			[Address(RVA = "0x8D6474", Offset = "0x8D6474", VA = "0x8D6474", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x8D5294", Offset = "0x8D5294", VA = "0x8D5294")]
		[DebuggerHidden]
		public <RenderLoop>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x8D625C", Offset = "0x8D625C", VA = "0x8D625C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x8D6260", Offset = "0x8D6260", VA = "0x8D6260", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x8D6414", Offset = "0x8D6414", VA = "0x8D6414", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pauseGameWhenDashboardIsVisible;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lockPhysicsUpdateRateToRenderFrequency;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SteamVR_ExternalCamera externalCamera;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string externalCameraConfigPath;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ETrackingUniverseOrigin trackingSpace;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577D44", Offset = "0x577D44")]
	private static EVREye <eye>k__BackingField;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR_Render _instance;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isQuitting;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SteamVR_Camera[] cameras;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedDevicePose_t[] poses;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedDevicePose_t[] gamePoses;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool _pauseRendering;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sceneResolutionScale;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeScale;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SteamVR_UpdatePoses poseUpdater;

	[Token(Token = "0x170000AA")]
	public static EVREye eye
	{
		[Token(Token = "0x600078C")]
		[Address(RVA = "0x8D4B44", Offset = "0x8D4B44", VA = "0x8D4B44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580724", Offset = "0x580724")]
		get
		{
			return default(EVREye);
		}
		[Token(Token = "0x600078D")]
		[Address(RVA = "0x8D4B94", Offset = "0x8D4B94", VA = "0x8D4B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580734", Offset = "0x580734")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public static SteamVR_Render instance
	{
		[Token(Token = "0x600078E")]
		[Address(RVA = "0x8C6D28", Offset = "0x8C6D28", VA = "0x8C6D28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AC")]
	public static bool pauseRendering
	{
		[Token(Token = "0x6000797")]
		[Address(RVA = "0x8D51D4", Offset = "0x8D51D4", VA = "0x8D51D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000798")]
		[Address(RVA = "0x8D0A34", Offset = "0x8D0A34", VA = "0x8D0A34")]
		set
		{
		}
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x8D4BE8", Offset = "0x8D4BE8", VA = "0x8D4BE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x8D4C38", Offset = "0x8D4C38", VA = "0x8D4C38")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x8D4CB0", Offset = "0x8D4CB0", VA = "0x8D4CB0")]
	public static void Add(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x8D4F28", Offset = "0x8D4F28", VA = "0x8D4F28")]
	public static void Remove(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x8CF758", Offset = "0x8CF758", VA = "0x8CF758")]
	public static SteamVR_Camera Top()
	{
		return null;
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x8D4D24", Offset = "0x8D4D24", VA = "0x8D4D24")]
	private void AddInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x8D4FD4", Offset = "0x8D4FD4", VA = "0x8D4FD4")]
	private void RemoveInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x8D5188", Offset = "0x8D5188", VA = "0x8D5188")]
	private SteamVR_Camera TopInternal()
	{
		return null;
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x8D5224", Offset = "0x8D5224", VA = "0x8D5224")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x580744", Offset = "0x580744")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x8D52C0", Offset = "0x8D52C0", VA = "0x8D52C0")]
	private void RenderExternalCamera()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x8D53FC", Offset = "0x8D53FC", VA = "0x8D53FC")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x8D546C", Offset = "0x8D546C", VA = "0x8D546C")]
	private void OnQuit(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x8D5474", Offset = "0x8D5474", VA = "0x8D5474")]
	private string GetScreenshotFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames screenshotPropertyFilename)
	{
		return null;
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x8D55C0", Offset = "0x8D55C0", VA = "0x8D55C0")]
	private void OnRequestScreenshot(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x8D57A0", Offset = "0x8D57A0", VA = "0x8D57A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x8D59E8", Offset = "0x8D59E8", VA = "0x8D59E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x8D5B68", Offset = "0x8D5B68", VA = "0x8D5B68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x8D5CD8", Offset = "0x8D5CD8", VA = "0x8D5CD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x8D618C", Offset = "0x8D618C", VA = "0x8D618C")]
	public SteamVR_Render()
	{
	}
}
[Token(Token = "0x2000114")]
[ExecuteInEditMode]
public class SteamVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x20003BC")]
	public class RenderModel
	{
		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E598", Offset = "0x57E598")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E5A8", Offset = "0x57E5A8")]
		private Material <material>k__BackingField;

		[Token(Token = "0x170001F2")]
		public Mesh mesh
		{
			[Token(Token = "0x600178A")]
			[Address(RVA = "0x8D9B68", Offset = "0x8D9B68", VA = "0x8D9B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583788", Offset = "0x583788")]
			get
			{
				return null;
			}
			[Token(Token = "0x600178B")]
			[Address(RVA = "0x8D9B70", Offset = "0x8D9B70", VA = "0x8D9B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583798", Offset = "0x583798")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public Material material
		{
			[Token(Token = "0x600178C")]
			[Address(RVA = "0x8D9B78", Offset = "0x8D9B78", VA = "0x8D9B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5837A8", Offset = "0x5837A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600178D")]
			[Address(RVA = "0x8D9B80", Offset = "0x8D9B80", VA = "0x8D9B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5837B8", Offset = "0x5837B8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x8D8A10", Offset = "0x8D8A10", VA = "0x8D8A10")]
		public RenderModel(Mesh mesh, Material material)
		{
		}
	}

	[Token(Token = "0x20003BD")]
	public sealed class RenderModelInterfaceHolder : IDisposable
	{
		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool needsShutdown;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool failedLoadInterface;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CVRRenderModels _instance;

		[Token(Token = "0x170001F4")]
		public CVRRenderModels instance
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x8D756C", Offset = "0x8D756C", VA = "0x8D756C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x8D9B88", Offset = "0x8D9B88", VA = "0x8D9B88", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x8D6EA8", Offset = "0x8D6EA8", VA = "0x8D6EA8")]
		public RenderModelInterfaceHolder()
		{
		}
	}

	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570970", Offset = "0x570970")]
	private sealed class <SetModelAsync>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string renderModelName;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVR_RenderModel <>4__this;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderModelInterfaceHolder <holder>5__2;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRRenderModels <renderModels>5__3;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <renderModelNames>5__4;

		[Token(Token = "0x170001F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001795")]
			[Address(RVA = "0x8D9AF8", Offset = "0x8D9AF8", VA = "0x8D9AF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001797")]
			[Address(RVA = "0x8D9B60", Offset = "0x8D9B60", VA = "0x8D9B60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x8D6878", Offset = "0x8D6878", VA = "0x8D6878")]
		[DebuggerHidden]
		public <SetModelAsync>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x8D9178", Offset = "0x8D9178", VA = "0x8D9178", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x8D9254", Offset = "0x8D9254", VA = "0x8D9254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x8D9194", Offset = "0x8D9194", VA = "0x8D9194")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x8D9B00", Offset = "0x8D9B00", VA = "0x8D9B00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570980", Offset = "0x570980")]
	private sealed class <FreeRenderModel>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr pRenderModel;

		[Token(Token = "0x170001F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600179B")]
			[Address(RVA = "0x8D9108", Offset = "0x8D9108", VA = "0x8D9108", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600179D")]
			[Address(RVA = "0x8D9170", Offset = "0x8D9170", VA = "0x8D9170", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x8D8A48", Offset = "0x8D8A48", VA = "0x8D8A48")]
		[DebuggerHidden]
		public <FreeRenderModel>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x8D8F74", Offset = "0x8D8F74", VA = "0x8D8F74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x8D8F78", Offset = "0x8D8F78", VA = "0x8D8F78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x8D9110", Offset = "0x8D9110", VA = "0x8D9110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string modelOverride;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader shader;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool verbose;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool createComponents;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool updateDynamically;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public RenderModel_ControllerMode_State_t controllerModeState;

	[Token(Token = "0x40006EB")]
	public const string k_localTransformName = "attach";

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x577D54", Offset = "0x577D54")]
	private string <renderModelName>k__BackingField;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Hashtable models;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Hashtable materials;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Events.Action hideRenderModelsAction;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action modelSkinSettingsHaveChangedAction;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, string> nameCache;

	[Token(Token = "0x170000AD")]
	public string renderModelName
	{
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x8D647C", Offset = "0x8D647C", VA = "0x8D647C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5807A8", Offset = "0x5807A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x8D6484", Offset = "0x8D6484", VA = "0x8D6484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5807B8", Offset = "0x5807B8")]
		private set
		{
		}
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x8D648C", Offset = "0x8D648C", VA = "0x8D648C")]
	private void OnModelSkinSettingsHaveChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x8D66B0", Offset = "0x8D66B0", VA = "0x8D66B0")]
	private void OnHideRenderModels(bool hidden)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x8D67E4", Offset = "0x8D67E4", VA = "0x8D67E4")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x8D64FC", Offset = "0x8D64FC", VA = "0x8D64FC")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x8D67FC", Offset = "0x8D67FC", VA = "0x8D67FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5807C8", Offset = "0x5807C8")]
	private IEnumerator SetModelAsync(string renderModelName)
	{
		return null;
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x8D68A4", Offset = "0x8D68A4", VA = "0x8D68A4")]
	private bool SetModel(string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x8D7B10", Offset = "0x8D7B10", VA = "0x8D7B10")]
	private RenderModel LoadRenderModel(CVRRenderModels renderModels, string renderModelName, string baseName)
	{
		return null;
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x8D89A0", Offset = "0x8D89A0", VA = "0x8D89A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58082C", Offset = "0x58082C")]
	private IEnumerator FreeRenderModel(IntPtr pRenderModel)
	{
		return null;
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x8D8A74", Offset = "0x8D8A74", VA = "0x8D8A74")]
	public Transform FindComponent(string componentName)
	{
		return null;
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x8D6D6C", Offset = "0x8D6D6C", VA = "0x8D6D6C")]
	private void StripMesh(GameObject go)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x8D6EB0", Offset = "0x8D6EB0", VA = "0x8D6EB0")]
	private bool LoadComponents(RenderModelInterfaceHolder holder, string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x8D8B10", Offset = "0x8D8B10", VA = "0x8D8B10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x8D8C34", Offset = "0x8D8C34", VA = "0x8D8C34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x8D8D5C", Offset = "0x8D8D5C", VA = "0x8D8D5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x8D8DC0", Offset = "0x8D8DC0", VA = "0x8D8DC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x8D76CC", Offset = "0x8D76CC", VA = "0x8D76CC")]
	public void UpdateComponents(CVRRenderModels renderModels)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x8D8E44", Offset = "0x8D8E44", VA = "0x8D8E44")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x8D85A8", Offset = "0x8D85A8", VA = "0x8D85A8")]
	private RenderModel_t MarshalRenderModel(IntPtr pRenderModel)
	{
		return default(RenderModel_t);
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x8D87B0", Offset = "0x8D87B0", VA = "0x8D87B0")]
	private RenderModel_TextureMap_t MarshalRenderModel_TextureMap(IntPtr pRenderModel)
	{
		return default(RenderModel_TextureMap_t);
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x8D8EC8", Offset = "0x8D8EC8", VA = "0x8D8EC8")]
	public SteamVR_RenderModel()
	{
	}
}
[Token(Token = "0x2000115")]
public class SteamVR_Skybox : MonoBehaviour
{
	[Token(Token = "0x20003C0")]
	public enum CellSize
	{
		[Token(Token = "0x4001881")]
		x1024,
		[Token(Token = "0x4001882")]
		x64,
		[Token(Token = "0x4001883")]
		x32,
		[Token(Token = "0x4001884")]
		x16,
		[Token(Token = "0x4001885")]
		x8
	}

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture front;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture back;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture left;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture right;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture top;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture bottom;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellSize StereoCellSize;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float StereoIpdMm;

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x8D9C00", Offset = "0x8D9C00", VA = "0x8D9C00")]
	public void SetTextureByIndex(int i, Texture t)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x8D9C54", Offset = "0x8D9C54", VA = "0x8D9C54")]
	public Texture GetTextureByIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x8D069C", Offset = "0x8D069C", VA = "0x8D069C")]
	public static void SetOverride([Optional] Texture front, [Optional] Texture back, [Optional] Texture left, [Optional] Texture right, [Optional] Texture top, [Optional] Texture bottom)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x8D0ACC", Offset = "0x8D0ACC", VA = "0x8D0ACC")]
	public static void ClearOverride()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x8D9CB0", Offset = "0x8D9CB0", VA = "0x8D9CB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x8D9CC4", Offset = "0x8D9CC4", VA = "0x8D9CC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x8D9CC8", Offset = "0x8D9CC8", VA = "0x8D9CC8")]
	public SteamVR_Skybox()
	{
	}
}
[Token(Token = "0x2000116")]
[ExecuteInEditMode]
public class SteamVR_SphericalProjection : MonoBehaviour
{
	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material material;

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x8D9CDC", Offset = "0x8D9CDC", VA = "0x8D9CDC")]
	public void Set(Vector3 N, float phi0, float phi1, float theta0, float theta1, Vector3 uAxis, Vector3 uOrigin, float uScale, Vector3 vAxis, Vector3 vOrigin, float vScale)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x8DA07C", Offset = "0x8DA07C", VA = "0x8DA07C")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x8DA10C", Offset = "0x8DA10C", VA = "0x8DA10C")]
	public SteamVR_SphericalProjection()
	{
	}
}
[Token(Token = "0x2000117")]
public class SteamVR_Stats : MonoBehaviour
{
	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color fadeColor;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeDuration;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private double lastUpdate;

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x8DA114", Offset = "0x8DA114", VA = "0x8DA114")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x8DA23C", Offset = "0x8DA23C", VA = "0x8DA23C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x8DA494", Offset = "0x8DA494", VA = "0x8DA494")]
	public SteamVR_Stats()
	{
	}
}
[Token(Token = "0x2000118")]
public class SteamVR_TestController : MonoBehaviour
{
	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> controllerIndices;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EVRButtonId[] buttonIds;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EVRButtonId[] axisIds;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform point;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pointer;

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x8DAAE4", Offset = "0x8DAAE4", VA = "0x8DAAE4")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x8DB0E8", Offset = "0x8DB0E8", VA = "0x8DB0E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x8DB1AC", Offset = "0x8DB1AC", VA = "0x8DB1AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x8DAC98", Offset = "0x8DAC98", VA = "0x8DAC98")]
	private void PrintControllerStatus(int index)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x8DB270", Offset = "0x8DB270", VA = "0x8DB270")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x8DBBC0", Offset = "0x8DBBC0", VA = "0x8DBBC0")]
	public SteamVR_TestController()
	{
	}
}
[Token(Token = "0x2000119")]
public class SteamVR_TrackedCamera
{
	[Token(Token = "0x20003C1")]
	public class VideoStreamTexture
	{
		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E5B8", Offset = "0x57E5B8")]
		private bool <undistorted>k__BackingField;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E5C8", Offset = "0x57E5C8")]
		private VRTextureBounds_t <frameBounds>k__BackingField;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _texture;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int prevFrameCount;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint glTextureId;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VideoStream videostream;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraVideoStreamFrameHeader_t header;

		[Token(Token = "0x170001F9")]
		public bool undistorted
		{
			[Token(Token = "0x600179F")]
			[Address(RVA = "0x8DCBC8", Offset = "0x8DCBC8", VA = "0x8DCBC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583868", Offset = "0x583868")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0x8DCBD0", Offset = "0x8DCBD0", VA = "0x8DCBD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583878", Offset = "0x583878")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public uint deviceIndex
		{
			[Token(Token = "0x60017A1")]
			[Address(RVA = "0x8DCBDC", Offset = "0x8DCBDC", VA = "0x8DCBDC")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001FB")]
		public bool hasCamera
		{
			[Token(Token = "0x60017A2")]
			[Address(RVA = "0x8DC0DC", Offset = "0x8DC0DC", VA = "0x8DC0DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FC")]
		public bool hasTracking
		{
			[Token(Token = "0x60017A3")]
			[Address(RVA = "0x8DC504", Offset = "0x8DC504", VA = "0x8DC504")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FD")]
		public uint frameId
		{
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0x8DCF54", Offset = "0x8DCF54", VA = "0x8DCF54")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001FE")]
		public VRTextureBounds_t frameBounds
		{
			[Token(Token = "0x60017A5")]
			[Address(RVA = "0x8DCF78", Offset = "0x8DCF78", VA = "0x8DCF78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583888", Offset = "0x583888")]
			get
			{
				return default(VRTextureBounds_t);
			}
			[Token(Token = "0x60017A6")]
			[Address(RVA = "0x8DCF84", Offset = "0x8DCF84", VA = "0x8DCF84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x583898", Offset = "0x583898")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public EVRTrackedCameraFrameType frameType
		{
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x8DCF90", Offset = "0x8DCF90", VA = "0x8DCF90")]
			get
			{
				return default(EVRTrackedCameraFrameType);
			}
		}

		[Token(Token = "0x17000200")]
		public Texture2D texture
		{
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x8DC4E0", Offset = "0x8DC4E0", VA = "0x8DC4E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x60017A9")]
			[Address(RVA = "0x8DC528", Offset = "0x8DC528", VA = "0x8DC528")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x17000202")]
		public Vector3 velocity
		{
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x8DCF98", Offset = "0x8DCF98", VA = "0x8DCF98")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000203")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x60017AB")]
			[Address(RVA = "0x8DCFE8", Offset = "0x8DCFE8", VA = "0x8DCFE8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x8DC6E4", Offset = "0x8DC6E4", VA = "0x8DC6E4")]
		public VideoStreamTexture(uint deviceIndex, bool undistorted)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x8DD03C", Offset = "0x8DD03C", VA = "0x8DD03C")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x8DC0C4", Offset = "0x8DC0C4", VA = "0x8DC0C4")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x8DC14C", Offset = "0x8DC14C", VA = "0x8DC14C")]
		public ulong Release()
		{
			return default(ulong);
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x8DCBF8", Offset = "0x8DCBF8", VA = "0x8DCBF8")]
		private void Update()
		{
		}
	}

	[Token(Token = "0x20003C2")]
	private class VideoStream
	{
		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57E5D8", Offset = "0x57E5D8")]
		private uint <deviceIndex>k__BackingField;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong _handle;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _hasCamera;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong refCount;

		[Token(Token = "0x17000204")]
		public uint deviceIndex
		{
			[Token(Token = "0x60017B1")]
			[Address(RVA = "0x8DCA64", Offset = "0x8DCA64", VA = "0x8DCA64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5838A8", Offset = "0x5838A8")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60017B2")]
			[Address(RVA = "0x8DCA6C", Offset = "0x8DCA6C", VA = "0x8DCA6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5838B8", Offset = "0x5838B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public ulong handle
		{
			[Token(Token = "0x60017B3")]
			[Address(RVA = "0x8DCA74", Offset = "0x8DCA74", VA = "0x8DCA74")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000206")]
		public bool hasCamera
		{
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x8DCA7C", Offset = "0x8DCA7C", VA = "0x8DCA7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x8DC9B8", Offset = "0x8DC9B8", VA = "0x8DC9B8")]
		public VideoStream(uint deviceIndex)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x8DCA84", Offset = "0x8DCA84", VA = "0x8DCA84")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x8DCB24", Offset = "0x8DCB24", VA = "0x8DCB24")]
		public ulong Release()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VideoStreamTexture[] distorted;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VideoStreamTexture[] undistorted;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static VideoStream[] videostreams;

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x8DC594", Offset = "0x8DC594", VA = "0x8DC594")]
	public static VideoStreamTexture Distorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x8DC734", Offset = "0x8DC734", VA = "0x8DC734")]
	public static VideoStreamTexture Undistorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x8DC0B0", Offset = "0x8DC0B0", VA = "0x8DC0B0")]
	public static VideoStreamTexture Source(bool undistorted, int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x8DC884", Offset = "0x8DC884", VA = "0x8DC884")]
	private static VideoStream Stream(uint deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x8DCA5C", Offset = "0x8DCA5C", VA = "0x8DCA5C")]
	public SteamVR_TrackedCamera()
	{
	}
}
[Token(Token = "0x200011A")]
public class SteamVR_TrackedObject : MonoBehaviour
{
	[Token(Token = "0x20003C3")]
	public enum EIndex
	{
		[Token(Token = "0x4001892")]
		None = -1,
		[Token(Token = "0x4001893")]
		Hmd,
		[Token(Token = "0x4001894")]
		Device1,
		[Token(Token = "0x4001895")]
		Device2,
		[Token(Token = "0x4001896")]
		Device3,
		[Token(Token = "0x4001897")]
		Device4,
		[Token(Token = "0x4001898")]
		Device5,
		[Token(Token = "0x4001899")]
		Device6,
		[Token(Token = "0x400189A")]
		Device7,
		[Token(Token = "0x400189B")]
		Device8,
		[Token(Token = "0x400189C")]
		Device9,
		[Token(Token = "0x400189D")]
		Device10,
		[Token(Token = "0x400189E")]
		Device11,
		[Token(Token = "0x400189F")]
		Device12,
		[Token(Token = "0x40018A0")]
		Device13,
		[Token(Token = "0x40018A1")]
		Device14,
		[Token(Token = "0x40018A2")]
		Device15
	}

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EIndex index;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform origin;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isValid;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SteamVR_Events.Action newPosesAction;

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x96B55C", Offset = "0x96B55C", VA = "0x96B55C")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x96B9D4", Offset = "0x96B9D4", VA = "0x96B9D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x96BA78", Offset = "0x96BA78", VA = "0x96BA78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x96BA98", Offset = "0x96BA98", VA = "0x96BA98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x96BAD0", Offset = "0x96BAD0", VA = "0x96BAD0")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x96BBB8", Offset = "0x96BBB8", VA = "0x96BBB8")]
	public SteamVR_TrackedObject()
	{
	}
}
[Token(Token = "0x200011B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F21C", Offset = "0x56F21C")]
public class SteamVR_UpdatePoses : MonoBehaviour
{
	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x96BBC0", Offset = "0x96BBC0", VA = "0x96BBC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x96BC6C", Offset = "0x96BC6C", VA = "0x96BC6C")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x96BD60", Offset = "0x96BD60", VA = "0x96BD60")]
	public SteamVR_UpdatePoses()
	{
	}
}
[Token(Token = "0x200011C")]
public static class SteamVR_Utils
{
	[Serializable]
	[Token(Token = "0x20003C4")]
	public struct RigidTransform
	{
		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x17000207")]
		public static RigidTransform identity
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0x96DC60", Offset = "0x96DC60", VA = "0x96DC60")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x96DD30", Offset = "0x96DD30", VA = "0x96DD30")]
		public static RigidTransform FromLocal(Transform t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x5F2D88", Offset = "0x5F2D88", VA = "0x5F2D88")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x5F2D9C", Offset = "0x5F2D9C", VA = "0x5F2D9C")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x5F2DA4", Offset = "0x5F2DA4", VA = "0x5F2DA4")]
		public RigidTransform(Transform from, Transform to)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x5F2DAC", Offset = "0x5F2DAC", VA = "0x5F2DAC")]
		public RigidTransform(HmdMatrix34_t pose)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x5F2DE0", Offset = "0x5F2DE0", VA = "0x5F2DE0")]
		public RigidTransform(HmdMatrix44_t pose)
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x5F2E14", Offset = "0x5F2E14", VA = "0x5F2E14")]
		public HmdMatrix44_t ToHmdMatrix44()
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x5F2E1C", Offset = "0x5F2E1C", VA = "0x5F2E1C")]
		public HmdMatrix34_t ToHmdMatrix34()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x5F2E24", Offset = "0x5F2E24", VA = "0x5F2E24", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x5F2E2C", Offset = "0x5F2E2C", VA = "0x5F2E2C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x96E92C", Offset = "0x96E92C", VA = "0x96E92C")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x96EA64", Offset = "0x96EA64", VA = "0x96EA64")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x96EB9C", Offset = "0x96EB9C", VA = "0x96EB9C")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x5F2E68", Offset = "0x5F2E68", VA = "0x5F2E68")]
		public void Inverse()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x5F2E70", Offset = "0x5F2E70", VA = "0x5F2E70")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x5F2E78", Offset = "0x5F2E78", VA = "0x5F2E78")]
		public void Multiply(RigidTransform a, RigidTransform b)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x5F2EC0", Offset = "0x5F2EC0", VA = "0x5F2EC0")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x5F2EC8", Offset = "0x5F2EC8", VA = "0x5F2EC8")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x96F1C0", Offset = "0x96F1C0", VA = "0x96F1C0")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x96F1C4", Offset = "0x96F1C4", VA = "0x96F1C4")]
		public static RigidTransform Interpolate(RigidTransform a, RigidTransform b, float t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x5F2ED0", Offset = "0x5F2ED0", VA = "0x5F2ED0")]
		public void Interpolate(RigidTransform to, float t)
		{
		}
	}

	[Token(Token = "0x20003C5")]
	public delegate object SystemFn(CVRSystem system, params object[] args);

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x96BD68", Offset = "0x96BD68", VA = "0x96BD68")]
	public static Quaternion Slerp(Quaternion A, Quaternion B, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x96BF30", Offset = "0x96BF30", VA = "0x96BF30")]
	public static Vector3 Lerp(Vector3 A, Vector3 B, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x96BF88", Offset = "0x96BF88", VA = "0x96BF88")]
	public static float Lerp(float A, float B, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x96BF98", Offset = "0x96BF98", VA = "0x96BF98")]
	public static double Lerp(double A, double B, double t)
	{
		return default(double);
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x96BFA8", Offset = "0x96BFA8", VA = "0x96BFA8")]
	public static float InverseLerp(Vector3 A, Vector3 B, Vector3 result)
	{
		return default(float);
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x96C0AC", Offset = "0x96C0AC", VA = "0x96C0AC")]
	public static float InverseLerp(float A, float B, float result)
	{
		return default(float);
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x96C0BC", Offset = "0x96C0BC", VA = "0x96C0BC")]
	public static double InverseLerp(double A, double B, double result)
	{
		return default(double);
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x96C0CC", Offset = "0x96C0CC", VA = "0x96C0CC")]
	public static float Saturate(float A)
	{
		return default(float);
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x96C0E8", Offset = "0x96C0E8", VA = "0x96C0E8")]
	public static Vector2 Saturate(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x96C134", Offset = "0x96C134", VA = "0x96C134")]
	public static float Abs(float A)
	{
		return default(float);
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x96C144", Offset = "0x96C144", VA = "0x96C144")]
	public static Vector2 Abs(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x96C188", Offset = "0x96C188", VA = "0x96C188")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x96C244", Offset = "0x96C244", VA = "0x96C244")]
	public static Quaternion GetRotation(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x96C410", Offset = "0x96C410", VA = "0x96C410")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x96C44C", Offset = "0x96C44C", VA = "0x96C44C")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x96C584", Offset = "0x96C584", VA = "0x96C584")]
	public static object CallSystemFn(SystemFn fn, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x96CAD8", Offset = "0x96CAD8", VA = "0x96CAD8")]
	public static void TakeStereoScreenshot(uint screenshotHandle, GameObject target, int cellSize, float ipd, ref string previewFilename, ref string VRFilename)
	{
	}
}
namespace VRTK
{
	[Token(Token = "0x200011D")]
	public class VRTK_ConsoleViewer : MonoBehaviour
	{
		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577D64", Offset = "0x577D64")]
		public int fontSize;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577D9C", Offset = "0x577D9C")]
		public Color infoMessage;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577DD4", Offset = "0x577DD4")]
		public Color assertMessage;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577E0C", Offset = "0x577E0C")]
		public Color warningMessage;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577E44", Offset = "0x577E44")]
		public Color errorMessage;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577E7C", Offset = "0x577E7C")]
		public Color exceptionMessage;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<LogType, Color> logTypeColors;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ScrollRect scrollWindow;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RectTransform consoleRect;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Text consoleOutput;

		[Token(Token = "0x4000716")]
		private const string NEWLINE = "\n";

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int lineBuffer;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int currentBuffer;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string lastMessage;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool collapseLog;

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xA53F98", Offset = "0xA53F98", VA = "0xA53F98")]
		public void SetCollapse(bool state)
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xA53FA4", Offset = "0xA53FA4", VA = "0xA53FA4")]
		public void ClearLog()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xA54018", Offset = "0xA54018", VA = "0xA54018")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xA541D8", Offset = "0xA541D8", VA = "0xA541D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xA5424C", Offset = "0xA5424C", VA = "0xA5424C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xA54300", Offset = "0xA54300", VA = "0xA54300")]
		private string GetMessage(string message, LogType type)
		{
			return null;
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xA544A4", Offset = "0xA544A4", VA = "0xA544A4")]
		private void HandleLog(string message, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xA546DC", Offset = "0xA546DC", VA = "0xA546DC")]
		public VRTK_ConsoleViewer()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public class VRTK_ControllerTooltips : MonoBehaviour
	{
		[Token(Token = "0x20003C6")]
		public enum TooltipButtons
		{
			[Token(Token = "0x40018A6")]
			TriggerTooltip,
			[Token(Token = "0x40018A7")]
			GripTooltip,
			[Token(Token = "0x40018A8")]
			TouchpadTooltip,
			[Token(Token = "0x40018A9")]
			AppMenuTooltip,
			[Token(Token = "0x40018AA")]
			None
		}

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577EB4", Offset = "0x577EB4")]
		public string triggerText;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577EEC", Offset = "0x577EEC")]
		public string gripText;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577F24", Offset = "0x577F24")]
		public string touchpadText;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577F5C", Offset = "0x577F5C")]
		public string appMenuText;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577F94", Offset = "0x577F94")]
		public Color tipBackgroundColor;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x577FCC", Offset = "0x577FCC")]
		public Color tipTextColor;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578004", Offset = "0x578004")]
		public Color tipLineColor;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57803C", Offset = "0x57803C")]
		public Transform trigger;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578074", Offset = "0x578074")]
		public Transform grip;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5780AC", Offset = "0x5780AC")]
		public Transform touchpad;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5780E4", Offset = "0x5780E4")]
		public Transform appMenu;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool triggerInitialised;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool gripInitialised;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool touchpadInitialised;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		private bool appMenuInitialised;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TooltipButtons[] availableButtons;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject[] buttonTooltips;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private VRTK_ControllerActions controllerActions;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool[] tooltipStates;

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xA5BD98", Offset = "0xA5BD98", VA = "0xA5BD98")]
		public void ToggleTips(bool state, TooltipButtons element = TooltipButtons.None)
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xA5BE50", Offset = "0xA5BE50", VA = "0xA5BE50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xA5C3B0", Offset = "0xA5C3B0", VA = "0xA5C3B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xA5C4B4", Offset = "0xA5C4B4", VA = "0xA5C4B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xA5C5B8", Offset = "0xA5C5B8", VA = "0xA5C5B8")]
		private void DoControllerVisible(object sender, ControllerActionsEventArgs e)
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xA5C63C", Offset = "0xA5C63C", VA = "0xA5C63C")]
		private void DoControllerInvisible(object sender, ControllerActionsEventArgs e)
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xA5C068", Offset = "0xA5C068", VA = "0xA5C068")]
		private void InitialiseTips()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xA5C7C8", Offset = "0xA5C7C8", VA = "0xA5C7C8")]
		private bool TipsInitialised()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xA5C6DC", Offset = "0xA5C6DC", VA = "0xA5C6DC")]
		private Transform GetTransform(Transform setTransform, string findTransform)
		{
			return null;
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xA5C7F8", Offset = "0xA5C7F8", VA = "0xA5C7F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xA5C820", Offset = "0xA5C820", VA = "0xA5C820")]
		public VRTK_ControllerTooltips()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class VRTK_FramesPerSecondViewer : MonoBehaviour
	{
		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57811C", Offset = "0x57811C")]
		public bool displayFPS;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578154", Offset = "0x578154")]
		public int targetFPS;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57818C", Offset = "0x57818C")]
		public int fontSize;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5781C4", Offset = "0x5781C4")]
		public Vector3 position;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5781FC", Offset = "0x5781FC")]
		public Color goodColor;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578234", Offset = "0x578234")]
		public Color warnColor;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57826C", Offset = "0x57826C")]
		public Color badColor;

		[Token(Token = "0x4000735")]
		private const float updateInterval = 0.5f;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int framesCount;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float framesTime;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Text text;

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xAB15A4", Offset = "0xAB15A4", VA = "0xAB15A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xAB1630", Offset = "0xAB1630", VA = "0xAB1630")]
		private void Update()
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xAB17FC", Offset = "0xAB17FC", VA = "0xAB17FC")]
		public VRTK_FramesPerSecondViewer()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class VRTK_ObjectTooltip : MonoBehaviour
	{
		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5782A4", Offset = "0x5782A4")]
		public string displayText;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5782DC", Offset = "0x5782DC")]
		public int fontSize;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578314", Offset = "0x578314")]
		public Vector2 containerSize;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57834C", Offset = "0x57834C")]
		public Transform drawLineFrom;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578384", Offset = "0x578384")]
		public Transform drawLineTo;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5783BC", Offset = "0x5783BC")]
		public float lineWidth;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5783F4", Offset = "0x5783F4")]
		public Color fontColor;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57842C", Offset = "0x57842C")]
		public Color containerColor;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578464", Offset = "0x578464")]
		public Color lineColor;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LineRenderer line;

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xAC00F0", Offset = "0xAC00F0", VA = "0xAC00F0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xAC062C", Offset = "0xAC062C", VA = "0xAC062C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xAC0214", Offset = "0xAC0214", VA = "0xAC0214")]
		private void SetContainer()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xAC0318", Offset = "0xAC0318", VA = "0xAC0318")]
		private void SetText(string name)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xAC0498", Offset = "0xAC0498", VA = "0xAC0498")]
		private void SetLine()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xAC0630", Offset = "0xAC0630", VA = "0xAC0630")]
		private void DrawLine()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xAC0700", Offset = "0xAC0700", VA = "0xAC0700")]
		private void Update()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xAC0704", Offset = "0xAC0704", VA = "0xAC0704")]
		public VRTK_ObjectTooltip()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class VRTK_SDK_Bridge : MonoBehaviour
	{
		[Token(Token = "0x20003C7")]
		private enum ButtonPressTypes
		{
			[Token(Token = "0x40018AC")]
			Press,
			[Token(Token = "0x40018AD")]
			PressDown,
			[Token(Token = "0x40018AE")]
			PressUp,
			[Token(Token = "0x40018AF")]
			Touch,
			[Token(Token = "0x40018B0")]
			TouchDown,
			[Token(Token = "0x40018B1")]
			TouchUp
		}

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SteamVR_ControllerManager cachedControllerManager;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Transform cachedHeadset;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Transform cachedHeadsetCamera;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Transform cachedPlayArea;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string defaultAttachPointPath;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string defaultTriggerModelPath;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string defaultGripLeftModelPath;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string defaultGripRightModelPath;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string defaultTouchpadModelPath;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string defaultApplicationMenuModelPath;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string defaultSystemModelPath;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string defaultBodyModelPath;

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xAC3F68", Offset = "0xAC3F68", VA = "0xAC3F68")]
		public static GameObject GetTrackedObject(GameObject obj, out uint index)
		{
			return null;
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xAC4034", Offset = "0xAC4034", VA = "0xAC4034")]
		public static GameObject GetTrackedObjectByIndex(uint index)
		{
			return null;
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xAC4194", Offset = "0xAC4194", VA = "0xAC4194")]
		public static uint GetIndexOfTrackedObject(GameObject trackedObject)
		{
			return default(uint);
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xAC4210", Offset = "0xAC4210", VA = "0xAC4210")]
		public static Transform GetTrackedObjectOrigin(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xAC4300", Offset = "0xAC4300", VA = "0xAC4300")]
		public static bool TrackedIndexIsController(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xAC438C", Offset = "0xAC438C", VA = "0xAC438C")]
		public static GameObject GetControllerLeftHand()
		{
			return null;
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xAC4558", Offset = "0xAC4558", VA = "0xAC4558")]
		public static GameObject GetControllerRightHand()
		{
			return null;
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xAC4604", Offset = "0xAC4604", VA = "0xAC4604")]
		public static bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xAC46EC", Offset = "0xAC46EC", VA = "0xAC46EC")]
		public static bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xAC47D4", Offset = "0xAC47D4", VA = "0xAC47D4")]
		public static Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xAC490C", Offset = "0xAC490C", VA = "0xAC490C")]
		public static Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xAC4A44", Offset = "0xAC4A44", VA = "0xAC4A44")]
		public static Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xAC3E88", Offset = "0xAC3E88", VA = "0xAC3E88")]
		public static Vector3[] GetPlayAreaVertices(GameObject playArea)
		{
			return null;
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xAC4B7C", Offset = "0xAC4B7C", VA = "0xAC4B7C")]
		public static float GetPlayAreaBorderThickness(GameObject playArea)
		{
			return default(float);
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xAC4C1C", Offset = "0xAC4C1C", VA = "0xAC4C1C")]
		public static bool IsPlayAreaSizeCalibrated(GameObject playArea)
		{
			return default(bool);
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xAC4C88", Offset = "0xAC4C88", VA = "0xAC4C88")]
		public static bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xAC4D2C", Offset = "0xAC4D2C", VA = "0xAC4D2C")]
		public static bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xAC4DCC", Offset = "0xAC4DCC", VA = "0xAC4DCC")]
		public static void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xAC4E74", Offset = "0xAC4E74", VA = "0xAC4E74")]
		public static GameObject GetControllerRenderModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xAC4F84", Offset = "0xAC4F84", VA = "0xAC4F84")]
		public static void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xAB29DC", Offset = "0xAB29DC", VA = "0xAB29DC")]
		public static void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xAB2C60", Offset = "0xAB2C60", VA = "0xAB2C60")]
		public static bool HasHeadsetFade(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xAC5030", Offset = "0xAC5030", VA = "0xAC5030")]
		public static void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xAC5120", Offset = "0xAC5120", VA = "0xAC5120")]
		public static void HapticPulseOnIndex(uint index, ushort durationMicroSec = 500)
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xAC516C", Offset = "0xAC516C", VA = "0xAC516C")]
		public static Vector3 GetVelocityOnIndex(uint index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xAC527C", Offset = "0xAC527C", VA = "0xAC527C")]
		public static Vector3 GetAngularVelocityOnIndex(uint index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xAC538C", Offset = "0xAC538C", VA = "0xAC538C")]
		public static Vector2 GetStickAxisOnIndex(uint index)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xAC5464", Offset = "0xAC5464", VA = "0xAC5464")]
		public static Vector2 GetHandTriggerAxisOnIndex(uint index)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xAC5560", Offset = "0xAC5560", VA = "0xAC5560")]
		public static Vector2 GetIndexTriggerAxisOnIndex(uint index)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xAC565C", Offset = "0xAC565C", VA = "0xAC565C")]
		public static float GetTriggerHairlineDeltaOnIndex(uint index)
		{
			return default(float);
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xAC5710", Offset = "0xAC5710", VA = "0xAC5710")]
		public static bool IsTriggerPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xAC5D14", Offset = "0xAC5D14", VA = "0xAC5D14")]
		public static bool IsTriggerPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0xAC5D80", Offset = "0xAC5D80", VA = "0xAC5D80")]
		public static bool IsTriggerPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xAC5DEC", Offset = "0xAC5DEC", VA = "0xAC5DEC")]
		public static bool IsTriggerTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xAC5E70", Offset = "0xAC5E70", VA = "0xAC5E70")]
		public static bool IsTriggerTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xAC5EF4", Offset = "0xAC5EF4", VA = "0xAC5EF4")]
		public static bool IsTriggerTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xAC5F78", Offset = "0xAC5F78", VA = "0xAC5F78")]
		public static bool IsHairTriggerDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0xAC602C", Offset = "0xAC602C", VA = "0xAC602C")]
		public static bool IsHairTriggerUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xAC60E0", Offset = "0xAC60E0", VA = "0xAC60E0")]
		public static bool IsGripPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xAC614C", Offset = "0xAC614C", VA = "0xAC614C")]
		public static bool IsGripPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xAC61B8", Offset = "0xAC61B8", VA = "0xAC61B8")]
		public static bool IsGripPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xAC6224", Offset = "0xAC6224", VA = "0xAC6224")]
		public static bool IsGripTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xAC62A8", Offset = "0xAC62A8", VA = "0xAC62A8")]
		public static bool IsGripTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xAC632C", Offset = "0xAC632C", VA = "0xAC632C")]
		public static bool IsGripTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xAC63B0", Offset = "0xAC63B0", VA = "0xAC63B0")]
		public static bool IsTouchpadPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xAC641C", Offset = "0xAC641C", VA = "0xAC641C")]
		public static bool IsTouchpadPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xAC6488", Offset = "0xAC6488", VA = "0xAC6488")]
		public static bool IsTouchpadPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xAC64F4", Offset = "0xAC64F4", VA = "0xAC64F4")]
		public static bool IsTouchpadTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xAC6560", Offset = "0xAC6560", VA = "0xAC6560")]
		public static bool IsTouchpadTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xAC65E4", Offset = "0xAC65E4", VA = "0xAC65E4")]
		public static bool IsTouchpadTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xAC6668", Offset = "0xAC6668", VA = "0xAC6668")]
		public static bool IsApplicationMenuPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xAC66D4", Offset = "0xAC66D4", VA = "0xAC66D4")]
		public static bool IsApplicationMenuPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xAC6740", Offset = "0xAC6740", VA = "0xAC6740")]
		public static bool IsApplicationMenuPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xAC67AC", Offset = "0xAC67AC", VA = "0xAC67AC")]
		public static bool IsApplicationMenuTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xAC6830", Offset = "0xAC6830", VA = "0xAC6830")]
		public static bool IsApplicationMenuTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xAC68B4", Offset = "0xAC68B4", VA = "0xAC68B4")]
		public static bool IsApplicationMenuTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xAC4438", Offset = "0xAC4438", VA = "0xAC4438")]
		private static SteamVR_ControllerManager GetControllerManager()
		{
			return null;
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xAC577C", Offset = "0xAC577C", VA = "0xAC577C")]
		private static bool IsButtonPressed(uint index, ButtonPressTypes type, ulong button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xAC6938", Offset = "0xAC6938", VA = "0xAC6938")]
		public VRTK_SDK_Bridge()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public struct DestinationMarkerEventArgs
	{
		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform target;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 destinationPosition;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool enableTeleport;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint controllerIndex;
	}
	[Token(Token = "0x2000123")]
	public delegate void DestinationMarkerEventHandler(object sender, DestinationMarkerEventArgs e);
	[Token(Token = "0x2000124")]
	public abstract class VRTK_DestinationMarker : MonoBehaviour
	{
		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57849C", Offset = "0x57849C")]
		public bool enableTeleport;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected string invalidTargetWithTagOrClass;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_TagOrScriptPolicyList invalidTagOrScriptListPolicy;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float navMeshCheckDistance;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x14000021")]
		public event DestinationMarkerEventHandler DestinationMarkerEnter
		{
			[Token(Token = "0x600084B")]
			[Address(RVA = "0xA5D3D0", Offset = "0xA5D3D0", VA = "0xA5D3D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5808C0", Offset = "0x5808C0")]
			add
			{
			}
			[Token(Token = "0x600084C")]
			[Address(RVA = "0xA5D474", Offset = "0xA5D474", VA = "0xA5D474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5808D0", Offset = "0x5808D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event DestinationMarkerEventHandler DestinationMarkerExit
		{
			[Token(Token = "0x600084D")]
			[Address(RVA = "0xA5D518", Offset = "0xA5D518", VA = "0xA5D518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5808E0", Offset = "0x5808E0")]
			add
			{
			}
			[Token(Token = "0x600084E")]
			[Address(RVA = "0xA5D5BC", Offset = "0xA5D5BC", VA = "0xA5D5BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5808F0", Offset = "0x5808F0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event DestinationMarkerEventHandler DestinationMarkerSet
		{
			[Token(Token = "0x600084F")]
			[Address(RVA = "0xA4E21C", Offset = "0xA4E21C", VA = "0xA4E21C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580900", Offset = "0x580900")]
			add
			{
			}
			[Token(Token = "0x6000850")]
			[Address(RVA = "0xA4E2C0", Offset = "0xA4E2C0", VA = "0xA4E2C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580910", Offset = "0x580910")]
			remove
			{
			}
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xA5D660", Offset = "0xA5D660", VA = "0xA5D660", Slot = "4")]
		public virtual void OnDestinationMarkerEnter(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xA5D6A4", Offset = "0xA5D6A4", VA = "0xA5D6A4", Slot = "5")]
		public virtual void OnDestinationMarkerExit(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xA5D6E8", Offset = "0xA5D6E8", VA = "0xA5D6E8", Slot = "6")]
		public virtual void OnDestinationMarkerSet(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xA5D72C", Offset = "0xA5D72C", VA = "0xA5D72C", Slot = "7")]
		public virtual void SetInvalidTarget(string name, [Optional] VRTK_TagOrScriptPolicyList list)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xA5D734", Offset = "0xA5D734", VA = "0xA5D734", Slot = "8")]
		public virtual void SetNavMeshCheckDistance(float distance)
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xA5D73C", Offset = "0xA5D73C", VA = "0xA5D73C", Slot = "9")]
		public virtual void SetHeadsetPositionCompensation(bool state)
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xA5D748", Offset = "0xA5D748", VA = "0xA5D748", Slot = "10")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xA5D7CC", Offset = "0xA5D7CC", VA = "0xA5D7CC", Slot = "11")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xA5D850", Offset = "0xA5D850", VA = "0xA5D850")]
		protected DestinationMarkerEventArgs SetDestinationMarkerEvent(float distance, Transform target, Vector3 position, uint controllerIndex)
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xA5D87C", Offset = "0xA5D87C", VA = "0xA5D87C")]
		protected VRTK_DestinationMarker()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public abstract class VRTK_WorldPointer : VRTK_DestinationMarker
	{
		[Token(Token = "0x20003C8")]
		public enum pointerVisibilityStates
		{
			[Token(Token = "0x40018B3")]
			On_When_Active,
			[Token(Token = "0x40018B4")]
			Always_On,
			[Token(Token = "0x40018B5")]
			Always_Off
		}

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578504", Offset = "0x578504")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57853C", Offset = "0x57853C")]
		public Material pointerMaterial;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578574", Offset = "0x578574")]
		public Color pointerHitColor;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5785AC", Offset = "0x5785AC")]
		public Color pointerMissColor;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5785E4", Offset = "0x5785E4")]
		public bool showPlayAreaCursor;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57861C", Offset = "0x57861C")]
		public Vector2 playAreaCursorDimensions;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578654", Offset = "0x578654")]
		public bool handlePlayAreaCursorCollisions;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57868C", Offset = "0x57868C")]
		public string ignoreTargetWithTagOrClass;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5786C4", Offset = "0x5786C4")]
		public VRTK_TagOrScriptPolicyList targetTagOrScriptListPolicy;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5786FC", Offset = "0x5786FC")]
		public pointerVisibilityStates pointerVisibility;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578734", Offset = "0x578734")]
		public bool holdButtonToActivate;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57876C", Offset = "0x57876C")]
		public float activateDelay;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected Vector3 destinationPosition;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected float pointerContactDistance;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Transform pointerContactTarget;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected uint controllerIndex;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected bool playAreaCursorCollided;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform playArea;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject playAreaCursor;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameObject[] playAreaCursorBoundaries;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private BoxCollider playAreaCursorCollider;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Transform headset;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool isActive;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		private bool destinationSetActive;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float activateDelayTimer;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int beamEnabledState;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private VRTK_InteractableObject interactableObject;

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x78E61C", Offset = "0x78E61C", VA = "0x78E61C", Slot = "12")]
		public virtual void setPlayAreaCursorCollision(bool state)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x78E630", Offset = "0x78E630", VA = "0x78E630", Slot = "13")]
		public virtual bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x78E638", Offset = "0x78E638", VA = "0x78E638", Slot = "14")]
		public virtual bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x78E668", Offset = "0x78E668", VA = "0x78E668", Slot = "15")]
		public virtual void ToggleBeam(bool state)
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x78E7AC", Offset = "0x78E7AC", VA = "0x78E7AC", Slot = "16")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x787F9C", Offset = "0x787F9C", VA = "0x787F9C", Slot = "10")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x788224", Offset = "0x788224", VA = "0x788224", Slot = "11")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x788528", Offset = "0x788528", VA = "0x788528", Slot = "17")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x788F08", Offset = "0x788F08", VA = "0x788F08", Slot = "18")]
		protected virtual void InitPointer()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x789318", Offset = "0x789318", VA = "0x789318", Slot = "19")]
		protected virtual void SetPlayAreaCursorTransform(Vector3 destination)
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x78F254", Offset = "0x78F254", VA = "0x78F254", Slot = "20")]
		protected virtual void EnablePointerBeam(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x78F25C", Offset = "0x78F25C", VA = "0x78F25C", Slot = "21")]
		protected virtual void DisablePointerBeam(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x78F264", Offset = "0x78F264", VA = "0x78F264", Slot = "22")]
		protected virtual void SetPointerDestination(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x78968C", Offset = "0x78968C", VA = "0x78968C", Slot = "23")]
		protected virtual void PointerIn()
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x7894F8", Offset = "0x7894F8", VA = "0x7894F8", Slot = "24")]
		protected virtual void PointerOut()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x78F3FC", Offset = "0x78F3FC", VA = "0x78F3FC")]
		private bool InvalidConstantBeam()
		{
			return default(bool);
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x78F44C", Offset = "0x78F44C", VA = "0x78F44C", Slot = "25")]
		protected virtual void PointerSet()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x789200", Offset = "0x789200", VA = "0x789200", Slot = "26")]
		protected virtual void TogglePointer(bool state)
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x78900C", Offset = "0x78900C", VA = "0x78900C", Slot = "27")]
		protected virtual void SetPointerMaterial()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x7895E8", Offset = "0x7895E8", VA = "0x7895E8")]
		protected void UpdatePointerMaterial(Color color)
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x78F6E4", Offset = "0x78F6E4", VA = "0x78F6E4", Slot = "28")]
		protected virtual bool ValidDestination(Transform target, Vector3 destinationPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x78F624", Offset = "0x78F624", VA = "0x78F624")]
		private bool PointerActivatesUseAction(VRTK_InteractableObject io)
		{
			return default(bool);
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x78F274", Offset = "0x78F274", VA = "0x78F274")]
		private void StartUseAction(Transform target)
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x78F394", Offset = "0x78F394", VA = "0x78F394")]
		private void StopUseAction()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x78E6B0", Offset = "0x78E6B0", VA = "0x78E6B0")]
		private void TurnOnBeam(uint index)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x78E740", Offset = "0x78E740", VA = "0x78E740")]
		private void TurnOffBeam(uint index)
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x78E904", Offset = "0x78E904", VA = "0x78E904")]
		private void DisableBeam()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x78F82C", Offset = "0x78F82C", VA = "0x78F82C")]
		private void DrawPlayAreaCursorBoundary(int index, float left, float right, float top, float bottom, float thickness, Vector3 localPosition)
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x78EA8C", Offset = "0x78EA8C", VA = "0x78EA8C")]
		private void InitPlayAreaCursor()
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x78FAD0", Offset = "0x78FAD0", VA = "0x78FAD0")]
		private void CreateCursorCollider(GameObject cursor)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x78E93C", Offset = "0x78E93C", VA = "0x78E93C")]
		private void UpdateCollider()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x789804", Offset = "0x789804", VA = "0x789804")]
		protected VRTK_WorldPointer()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class VRTK_PlayAreaCollider : MonoBehaviour
	{
		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject parent;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string ignoreTargetWithTagOrClass;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_TagOrScriptPolicyList targetTagOrScriptListPolicy;

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xAC0798", Offset = "0xAC0798", VA = "0xAC0798")]
		public void SetParent(GameObject setParent)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xAC07A0", Offset = "0xAC07A0", VA = "0xAC07A0")]
		public void SetIgnoreTarget(string ignore, [Optional] VRTK_TagOrScriptPolicyList list)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xAC07A8", Offset = "0xAC07A8", VA = "0xAC07A8")]
		private bool ValidTarget(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xAC0870", Offset = "0xAC0870", VA = "0xAC0870")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xAC0930", Offset = "0xAC0930", VA = "0xAC0930")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xAC09C8", Offset = "0xAC09C8", VA = "0xAC09C8")]
		public VRTK_PlayAreaCollider()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class RadialButtonIcon : MonoBehaviour
	{
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x850F84", Offset = "0x850F84", VA = "0x850F84")]
		public RadialButtonIcon()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public delegate void HapticPulseEventHandler(ushort strength);
	[Token(Token = "0x2000129")]
	[ExecuteInEditMode]
	public class RadialMenu : MonoBehaviour
	{
		[Token(Token = "0x20003C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570990", Offset = "0x570990")]
		private sealed class <TweenMenuScale>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool show;

			[Token(Token = "0x40018B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RadialMenu <>4__this;

			[Token(Token = "0x40018BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetScale>5__2;

			[Token(Token = "0x40018BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <Dir>5__3;

			[Token(Token = "0x40018BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__4;

			[Token(Token = "0x17000208")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017D4")]
				[Address(RVA = "0x852ADC", Offset = "0x852ADC", VA = "0x852ADC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000209")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017D6")]
				[Address(RVA = "0x852B44", Offset = "0x852B44", VA = "0x852B44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017D1")]
			[Address(RVA = "0x8525D8", Offset = "0x8525D8", VA = "0x8525D8")]
			[DebuggerHidden]
			public <TweenMenuScale>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60017D2")]
			[Address(RVA = "0x8527D0", Offset = "0x8527D0", VA = "0x8527D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017D3")]
			[Address(RVA = "0x8527D4", Offset = "0x8527D4", VA = "0x8527D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017D5")]
			[Address(RVA = "0x852AE4", Offset = "0x852AE4", VA = "0x852AE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5787A4", Offset = "0x5787A4")]
		public List<RadialMenuButton> buttons;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5787DC", Offset = "0x5787DC")]
		public GameObject buttonPrefab;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578814", Offset = "0x578814")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578814", Offset = "0x578814")]
		public float buttonThickness;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578868", Offset = "0x578868")]
		public Color buttonColor;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5788A0", Offset = "0x5788A0")]
		public float offsetDistance;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5788D8", Offset = "0x5788D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5788D8", Offset = "0x5788D8")]
		public float offsetRotation;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578930", Offset = "0x578930")]
		public bool rotateIcons;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578968", Offset = "0x578968")]
		public float iconMargin;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5789A0", Offset = "0x5789A0")]
		public bool isShown;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5789D8", Offset = "0x5789D8")]
		public bool hideOnRelease;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578A10", Offset = "0x578A10")]
		public bool executeOnUnclick;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578A48", Offset = "0x578A48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578A48", Offset = "0x578A48")]
		public ushort baseHapticStrength;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578AB0", Offset = "0x578AB0")]
		public List<GameObject> menuButtons;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int currentHover;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int currentPress;

		[Token(Token = "0x14000024")]
		public event HapticPulseEventHandler FireHapticPulse
		{
			[Token(Token = "0x6000886")]
			[Address(RVA = "0x850F8C", Offset = "0x850F8C", VA = "0x850F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580920", Offset = "0x580920")]
			add
			{
			}
			[Token(Token = "0x6000887")]
			[Address(RVA = "0x851030", Offset = "0x851030", VA = "0x851030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580930", Offset = "0x580930")]
			remove
			{
			}
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x8510D4", Offset = "0x8510D4", VA = "0x8510D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x8519BC", Offset = "0x8519BC", VA = "0x8519BC")]
		private void Update()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x851A50", Offset = "0x851A50", VA = "0x851A50")]
		private void InteractButton(float angle, ButtonEvent evt)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x8521B4", Offset = "0x8521B4", VA = "0x8521B4")]
		public void HoverButton(float angle)
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x8521BC", Offset = "0x8521BC", VA = "0x8521BC")]
		public void ClickButton(float angle)
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x8521C4", Offset = "0x8521C4", VA = "0x8521C4")]
		public void UnClickButton(float angle)
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x8521CC", Offset = "0x8521CC", VA = "0x8521CC")]
		public void ToggleMenu()
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x85232C", Offset = "0x85232C", VA = "0x85232C")]
		public void StopTouching()
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x85228C", Offset = "0x85228C", VA = "0x85228C")]
		public void ShowMenu()
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x8524D0", Offset = "0x8524D0", VA = "0x8524D0")]
		public RadialMenuButton GetButton(int id)
		{
			return null;
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x8521E0", Offset = "0x8521E0", VA = "0x8521E0")]
		public void HideMenu(bool force)
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x852554", Offset = "0x852554", VA = "0x852554")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x580940", Offset = "0x580940")]
		private IEnumerator TweenMenuScale(bool show)
		{
			return null;
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x85219C", Offset = "0x85219C", VA = "0x85219C")]
		private void AttempHapticPulse(ushort strength)
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x851188", Offset = "0x851188", VA = "0x851188")]
		public void RegenerateButtons()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x852714", Offset = "0x852714", VA = "0x852714")]
		public void AddButton(RadialMenuButton newButton)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x852604", Offset = "0x852604", VA = "0x852604")]
		private void RemoveAllButtons()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x852120", Offset = "0x852120", VA = "0x852120")]
		private float mod(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x852784", Offset = "0x852784", VA = "0x852784")]
		public RadialMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012A")]
	public class RadialMenuButton
	{
		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite ButtonIcon;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnClick;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnHold;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnHoverEnter;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnHoverExit;

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x852B4C", Offset = "0x852B4C", VA = "0x852B4C")]
		public RadialMenuButton()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public enum ButtonEvent
	{
		[Token(Token = "0x4000790")]
		hoverOn,
		[Token(Token = "0x4000791")]
		hoverOff,
		[Token(Token = "0x4000792")]
		click,
		[Token(Token = "0x4000793")]
		unclick
	}
	[Token(Token = "0x200012C")]
	[ExecuteInEditMode]
	public class UICircle : Graphic
	{
		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578AE8", Offset = "0x578AE8")]
		public int fillPercent;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool fill;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int thickness;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578B04", Offset = "0x578B04")]
		public int segments;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Texture m_Texture;

		[Token(Token = "0x170000AE")]
		public override Texture mainTexture
		{
			[Token(Token = "0x600089B")]
			[Address(RVA = "0x853844", Offset = "0x853844", VA = "0x853844", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		public Texture texture
		{
			[Token(Token = "0x600089C")]
			[Address(RVA = "0x8538F0", Offset = "0x8538F0", VA = "0x8538F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600089D")]
			[Address(RVA = "0x8538F8", Offset = "0x8538F8", VA = "0x8538F8")]
			set
			{
			}
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x8539B4", Offset = "0x8539B4", VA = "0x8539B4")]
		protected UIVertex[] SetVbo(Vector2[] vertices, Vector2[] uvs)
		{
			return null;
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x853BE8", Offset = "0x853BE8", VA = "0x853BE8", Slot = "43")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5809A4", Offset = "0x5809A4")]
		protected override void OnPopulateMesh(Mesh toFill)
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x8540B0", Offset = "0x8540B0", VA = "0x8540B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x85417C", Offset = "0x85417C", VA = "0x85417C")]
		public UICircle()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class VRTK_IndependentRadialMenuController : RadialMenuController
	{
		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5709A0", Offset = "0x5709A0")]
		private sealed class <DelayedSetColliderEnabled>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40018C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_IndependentRadialMenuController <>4__this;

			[Token(Token = "0x40018C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool enabled;

			[Token(Token = "0x40018C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public InteractableObjectEventArgs e;

			[Token(Token = "0x1700020A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017DA")]
				[Address(RVA = "0xAB63A4", Offset = "0xAB63A4", VA = "0xAB63A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017DC")]
				[Address(RVA = "0xAB640C", Offset = "0xAB640C", VA = "0xAB640C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017D7")]
			[Address(RVA = "0xAB5EE0", Offset = "0xAB5EE0", VA = "0xAB5EE0")]
			[DebuggerHidden]
			public <DelayedSetColliderEnabled>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60017D8")]
			[Address(RVA = "0xAB62CC", Offset = "0xAB62CC", VA = "0xAB62CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017D9")]
			[Address(RVA = "0xAB62D0", Offset = "0xAB62D0", VA = "0xAB62D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017DB")]
			[Address(RVA = "0xAB63AC", Offset = "0xAB63AC", VA = "0xAB63AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578B30", Offset = "0x578B30")]
		public VRTK_InteractableObject eventsManager;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578B68", Offset = "0x578B68")]
		public bool addMenuCollider;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578BA0", Offset = "0x578BA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578BA0", Offset = "0x578BA0")]
		public float colliderRadiusMultiplier;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578BF4", Offset = "0x578BF4")]
		public bool hideAfterExecution;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578C2C", Offset = "0x578C2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x578C2C", Offset = "0x578C2C")]
		public float offsetMultiplier;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578C80", Offset = "0x578C80")]
		public GameObject rotateTowards;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GameObject> interactingObjects;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> collidingObjects;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SphereCollider menuCollider;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine disableCoroutine;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 desiredColliderCenter;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion initialRotation;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool isClicked;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool waitingToDisableCollider;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int counter;

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xAB4438", Offset = "0xAB4438", VA = "0xAB4438")]
		public void UpdateEventsManager()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xAB45E8", Offset = "0xAB45E8", VA = "0xAB45E8", Slot = "4")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xAB4B4C", Offset = "0xAB4B4C", VA = "0xAB4B4C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xAB4F90", Offset = "0xAB4F90", VA = "0xAB4F90", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xAB53C8", Offset = "0xAB53C8", VA = "0xAB53C8", Slot = "8")]
		protected virtual void ObjectClicked(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xAB547C", Offset = "0xAB547C", VA = "0xAB547C", Slot = "9")]
		protected virtual void ObjectUnClicked(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xAB5538", Offset = "0xAB5538", VA = "0xAB5538", Slot = "10")]
		protected virtual void ObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xAB5B3C", Offset = "0xAB5B3C", VA = "0xAB5B3C", Slot = "11")]
		protected virtual void ObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xAB5D78", Offset = "0xAB5D78", VA = "0xAB5D78", Slot = "7")]
		protected override void AttemptHapticPulse(ushort strength)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xAB5648", Offset = "0xAB5648", VA = "0xAB5648")]
		protected float CalculateAngle(GameObject interactingObject)
		{
			return default(float);
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xAB5428", Offset = "0xAB5428", VA = "0xAB5428")]
		private void ImmediatelyHideMenu(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xAB58A0", Offset = "0xAB58A0", VA = "0xAB58A0")]
		private void SetColliderState(bool state, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xAB5CDC", Offset = "0xAB5CDC", VA = "0xAB5CDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5809DC", Offset = "0x5809DC")]
		private IEnumerator DelayedSetColliderEnabled(bool enabled, float delay, InteractableObjectEventArgs e)
		{
			return null;
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xAB5F0C", Offset = "0xAB5F0C", VA = "0xAB5F0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xAB5F64", Offset = "0xAB5F64", VA = "0xAB5F64")]
		private void Start()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xAB5F70", Offset = "0xAB5F70", VA = "0xAB5F70")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xAB6240", Offset = "0xAB6240", VA = "0xAB6240")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xAB6298", Offset = "0xAB6298", VA = "0xAB6298")]
		public VRTK_IndependentRadialMenuController()
		{
		}
	}
	[Token(Token = "0x200012E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F2B0", Offset = "0x56F2B0")]
	public class RadialMenuController : MonoBehaviour
	{
		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRTK_ControllerEvents events;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected RadialMenu menu;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentAngle;

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x852B54", Offset = "0x852B54", VA = "0x852B54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x852BB8", Offset = "0x852BB8", VA = "0x852BB8", Slot = "4")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x852C48", Offset = "0x852C48", VA = "0x852C48", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x852E74", Offset = "0x852E74", VA = "0x852E74", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x853028", Offset = "0x853028", VA = "0x853028")]
		protected void DoClickButton([Optional] object sender)
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x85304C", Offset = "0x85304C", VA = "0x85304C")]
		protected void DoUnClickButton([Optional] object sender)
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x853070", Offset = "0x853070", VA = "0x853070")]
		protected void DoShowMenu(float initialAngle, [Optional] object sender)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x8530D4", Offset = "0x8530D4", VA = "0x8530D4")]
		protected void DoHideMenu(bool force, [Optional] object sender)
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x8530B0", Offset = "0x8530B0", VA = "0x8530B0")]
		protected void DoChangeAngle(float angle, [Optional] object sender)
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x853110", Offset = "0x853110", VA = "0x853110", Slot = "7")]
		protected virtual void AttemptHapticPulse(ushort strength)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x8531CC", Offset = "0x8531CC", VA = "0x8531CC")]
		private void DoTouchpadClicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x8531D0", Offset = "0x8531D0", VA = "0x8531D0")]
		private void DoTouchpadUnclicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x8531D4", Offset = "0x8531D4", VA = "0x8531D4")]
		private void DoTouchpadTouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x8531FC", Offset = "0x8531FC", VA = "0x8531FC")]
		private void DoTouchpadUntouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x853204", Offset = "0x853204", VA = "0x853204")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x8531E8", Offset = "0x8531E8", VA = "0x8531E8")]
		private float CalculateAngle(ControllerInteractionEventArgs e)
		{
			return default(float);
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x853218", Offset = "0x853218", VA = "0x853218")]
		public RadialMenuController()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class VRTK_ContentHandler : MonoBehaviour
	{
		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578CB8", Offset = "0x578CB8")]
		public VRTK_Control control;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578CF0", Offset = "0x578CF0")]
		public Transform inside;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578D28", Offset = "0x578D28")]
		public Transform outside;

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xA54760", Offset = "0xA54760", VA = "0xA54760")]
		private void Start()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xA548EC", Offset = "0xA548EC", VA = "0xA548EC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xA54A10", Offset = "0xA54A10", VA = "0xA54A10")]
		public VRTK_ContentHandler()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class VRTK_Button : VRTK_Control
	{
		[Token(Token = "0x20003CB")]
		public enum ButtonDirection
		{
			[Token(Token = "0x40018C4")]
			autodetect,
			[Token(Token = "0x40018C5")]
			x,
			[Token(Token = "0x40018C6")]
			y,
			[Token(Token = "0x40018C7")]
			z,
			[Token(Token = "0x40018C8")]
			negX,
			[Token(Token = "0x40018C9")]
			negY,
			[Token(Token = "0x40018CA")]
			negZ
		}

		[Serializable]
		[Token(Token = "0x20003CC")]
		public class ButtonEvents
		{
			[Token(Token = "0x40018CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEvent OnPush;

			[Token(Token = "0x60017DD")]
			[Address(RVA = "0xA52B1C", Offset = "0xA52B1C", VA = "0xA52B1C")]
			public ButtonEvents()
			{
			}
		}

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578D60", Offset = "0x578D60")]
		public GameObject connectedTo;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578D98", Offset = "0x578D98")]
		public ButtonDirection direction;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578DD0", Offset = "0x578DD0")]
		public float activationDistance;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578E08", Offset = "0x578E08")]
		public float buttonStrength;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ButtonEvents events;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float MAX_AUTODETECT_ACTIVATION_LENGTH;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ButtonDirection finalDirection;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 restingPosition;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 activationDir;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Rigidbody rb;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ConfigurableJoint cj;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ConstantForce cf;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int forceCount;

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xA50918", Offset = "0xA50918", VA = "0xA50918", Slot = "10")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xA50C3C", Offset = "0xA50C3C", VA = "0xA50C3C", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xA50ED0", Offset = "0xA50ED0", VA = "0xA50ED0", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xA5281C", Offset = "0xA5281C", VA = "0xA5281C", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xA52828", Offset = "0xA52828", VA = "0xA52828", Slot = "7")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xA52968", Offset = "0xA52968", VA = "0xA52968")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xA516A4", Offset = "0xA516A4", VA = "0xA516A4")]
		private ButtonDirection DetectDirection()
		{
			return default(ButtonDirection);
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xA52148", Offset = "0xA52148", VA = "0xA52148")]
		private Vector3 CalculateActivationDir()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xA52894", Offset = "0xA52894", VA = "0xA52894")]
		private bool ReachedActivationDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xA52778", Offset = "0xA52778", VA = "0xA52778")]
		private Vector3 GetForceVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xA52A1C", Offset = "0xA52A1C", VA = "0xA52A1C")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xA52A2C", Offset = "0xA52A2C", VA = "0xA52A2C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xA52A3C", Offset = "0xA52A3C", VA = "0xA52A3C")]
		public VRTK_Button()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class VRTK_Chest : VRTK_Control
	{
		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578E40", Offset = "0x578E40")]
		public Direction direction;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578E78", Offset = "0x578E78")]
		public GameObject lid;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578EB0", Offset = "0x578EB0")]
		public GameObject body;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578EE8", Offset = "0x578EE8")]
		public GameObject handle;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578F20", Offset = "0x578F20")]
		public GameObject content;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578F58", Offset = "0x578F58")]
		public bool hideContent;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578F90", Offset = "0x578F90")]
		public float maxAngle;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float minAngle;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float stepSize;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody handleRb;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FixedJoint handleFj;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private VRTK_InteractableObject io;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody lidRb;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private HingeJoint lidHj;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Rigidbody bodyRb;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Direction finalDirection;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float subDirection;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool lidHjCreated;

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xA52B24", Offset = "0xA52B24", VA = "0xA52B24", Slot = "10")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xA52E90", Offset = "0xA52E90", VA = "0xA52E90", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xA532E0", Offset = "0xA532E0", VA = "0xA532E0", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xA53B98", Offset = "0xA53B98", VA = "0xA53B98", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xA53C40", Offset = "0xA53C40", VA = "0xA53C40", Slot = "7")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xA53808", Offset = "0xA53808", VA = "0xA53808")]
		private Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xA52ED0", Offset = "0xA52ED0", VA = "0xA52ED0")]
		private void InitBody()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xA52F9C", Offset = "0xA52F9C", VA = "0xA52F9C")]
		private void InitLid()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xA53128", Offset = "0xA53128", VA = "0xA53128")]
		private void InitHandle()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xA53E14", Offset = "0xA53E14", VA = "0xA53E14")]
		private void CreateIO(GameObject go)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xA53C64", Offset = "0xA53C64", VA = "0xA53C64")]
		private float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xA53F10", Offset = "0xA53F10", VA = "0xA53F10")]
		public VRTK_Chest()
		{
		}
	}
	[Token(Token = "0x2000132")]
	[ExecuteInEditMode]
	public abstract class VRTK_Control : MonoBehaviour
	{
		[Token(Token = "0x20003CD")]
		public enum Direction
		{
			[Token(Token = "0x40018CD")]
			autodetect,
			[Token(Token = "0x40018CE")]
			x,
			[Token(Token = "0x40018CF")]
			y,
			[Token(Token = "0x40018D0")]
			z
		}

		[Serializable]
		[Token(Token = "0x20003CE")]
		public class ValueChangedEvent : UnityEvent<float, float>
		{
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0xA54FEC", Offset = "0xA54FEC", VA = "0xA54FEC")]
			public ValueChangedEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003CF")]
		public class DefaultControlEvents
		{
			[Token(Token = "0x40018D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueChangedEvent OnValueChanged;

			[Token(Token = "0x60017DF")]
			[Address(RVA = "0xA54FE4", Offset = "0xA54FE4", VA = "0xA54FE4")]
			public DefaultControlEvents()
			{
			}
		}

		[Token(Token = "0x20003D0")]
		public struct ControlValueRange
		{
			[Token(Token = "0x40018D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float controlMin;

			[Token(Token = "0x40018D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float controlMax;
		}

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color COLOR_OK;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Color COLOR_ERROR;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float MIN_OPENING_DISTANCE;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DefaultControlEvents defaultEvents;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Bounds bounds;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool setupSuccessful;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float value;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ControlValueRange cvr;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject controlContent;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool hideControlContent;

		[Token(Token = "0x60008E2")]
		protected abstract void InitRequiredComponents();

		[Token(Token = "0x60008E3")]
		protected abstract bool DetectSetup();

		[Token(Token = "0x60008E4")]
		protected abstract ControlValueRange RegisterValueRange();

		[Token(Token = "0x60008E5")]
		protected abstract void HandleUpdate();

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xA54A18", Offset = "0xA54A18", VA = "0xA54A18")]
		public float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xA54A20", Offset = "0xA54A20", VA = "0xA54A20")]
		public float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xA532D0", Offset = "0xA532D0", VA = "0xA532D0")]
		public void SetContent(GameObject content, bool hideContent)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xA54B28", Offset = "0xA54B28", VA = "0xA54B28")]
		public GameObject GetContent()
		{
			return null;
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xA54B30", Offset = "0xA54B30", VA = "0xA54B30", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xA54D10", Offset = "0xA54D10", VA = "0xA54D10", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xA50A58", Offset = "0xA50A58", VA = "0xA50A58", Slot = "10")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xA54DF4", Offset = "0xA54DF4", VA = "0xA54DF4")]
		protected Vector3 getThirdDirection(Vector3 axis1, Vector3 axis2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xA54BB0", Offset = "0xA54BB0", VA = "0xA54BB0")]
		private void HandleInteractables()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xA52AB8", Offset = "0xA52AB8", VA = "0xA52AB8")]
		protected VRTK_Control()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class VRTK_Door : VRTK_Control
	{
		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x578FC8", Offset = "0x578FC8")]
		public Direction direction;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579000", Offset = "0x579000")]
		public GameObject door;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579038", Offset = "0x579038")]
		public GameObject handles;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579070", Offset = "0x579070")]
		public GameObject frame;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5790A8", Offset = "0x5790A8")]
		public GameObject content;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5790E0", Offset = "0x5790E0")]
		public bool hideContent;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579118", Offset = "0x579118")]
		public float maxAngle;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579150", Offset = "0x579150")]
		public bool openInward;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579188", Offset = "0x579188")]
		public bool openOutward;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5791C0", Offset = "0x5791C0")]
		public bool snapping;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float DOOR_ANGULAR_DRAG;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float stepSize;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody handleRb;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FixedJoint handleFj;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private VRTK_InteractableObject handleIo;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody doorRb;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private HingeJoint doorHj;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ConstantForce doorCf;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Rigidbody frameRb;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Direction finalDirection;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float subDirection;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 secondaryDirection;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool doorHjCreated;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		private bool doorCfCreated;

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xA5DD48", Offset = "0xA5DD48", VA = "0xA5DD48", Slot = "10")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xA5E774", Offset = "0xA5E774", VA = "0xA5E774", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xA5EDE8", Offset = "0xA5EDE8", VA = "0xA5EDE8", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xA5FC2C", Offset = "0xA5FC2C", VA = "0xA5FC2C", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xA5FCD4", Offset = "0xA5FCD4", VA = "0xA5FCD4", Slot = "7")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xA5E698", Offset = "0xA5E698", VA = "0xA5E698")]
		private Vector3 Direction2Axis(Direction direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xA5F8BC", Offset = "0xA5F8BC", VA = "0xA5F8BC")]
		private Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xA5E7B4", Offset = "0xA5E7B4", VA = "0xA5E7B4")]
		private void InitFrame()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xA5E8FC", Offset = "0xA5E8FC", VA = "0xA5E8FC")]
		private void InitDoor()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xA5EB54", Offset = "0xA5EB54", VA = "0xA5EB54")]
		private void InitHandle()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xA5FDA4", Offset = "0xA5FDA4", VA = "0xA5FDA4")]
		private float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xA5E60C", Offset = "0xA5E60C", VA = "0xA5E60C")]
		private GameObject getDoor()
		{
			return null;
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xA5FEB0", Offset = "0xA5FEB0", VA = "0xA5FEB0")]
		public VRTK_Door()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class VRTK_Drawer : VRTK_Control
	{
		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5791F8", Offset = "0x5791F8")]
		public Direction direction;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579230", Offset = "0x579230")]
		public GameObject body;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579268", Offset = "0x579268")]
		public GameObject handle;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5792A0", Offset = "0x5792A0")]
		public GameObject content;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5792D8", Offset = "0x5792D8")]
		public bool hideContent;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579310", Offset = "0x579310")]
		public bool snapping;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody rb;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody handleRb;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FixedJoint handleFj;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ConfigurableJoint cj;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private VRTK_InteractableObject io;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ConstantForce cf;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Direction finalDirection;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float subDirection;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float pullDistance;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 initialPosition;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool cjCreated;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool cfCreated;

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xA5FF94", Offset = "0xA5FF94", VA = "0xA5FF94", Slot = "10")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xA602B4", Offset = "0xA602B4", VA = "0xA602B4", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xA60718", Offset = "0xA60718", VA = "0xA60718", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xA612B4", Offset = "0xA612B4", VA = "0xA612B4", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xA612C4", Offset = "0xA612C4", VA = "0xA612C4", Slot = "7")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xA60310", Offset = "0xA60310", VA = "0xA60310")]
		private void InitBody()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xA60598", Offset = "0xA60598", VA = "0xA60598")]
		private void InitHandle()
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xA60D0C", Offset = "0xA60D0C", VA = "0xA60D0C")]
		private Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xA61370", Offset = "0xA61370", VA = "0xA61370")]
		private float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xA61228", Offset = "0xA61228", VA = "0xA61228")]
		private GameObject getBody()
		{
			return null;
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xA60228", Offset = "0xA60228", VA = "0xA60228")]
		private GameObject getHandle()
		{
			return null;
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xA61508", Offset = "0xA61508", VA = "0xA61508")]
		public VRTK_Drawer()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class VRTK_Knob : VRTK_Control
	{
		[Token(Token = "0x20003D1")]
		public enum KnobDirection
		{
			[Token(Token = "0x40018D5")]
			x,
			[Token(Token = "0x40018D6")]
			y,
			[Token(Token = "0x40018D7")]
			z
		}

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579348", Offset = "0x579348")]
		public KnobDirection direction;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579380", Offset = "0x579380")]
		public float min;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5793B8", Offset = "0x5793B8")]
		public float max;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5793F0", Offset = "0x5793F0")]
		public float stepSize;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float MAX_AUTODETECT_KNOB_WIDTH;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private KnobDirection finalDirection;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion initialRotation;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 initialLocalRotation;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody rb;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private VRTK_InteractableObject io;

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xABE09C", Offset = "0xABE09C", VA = "0xABE09C", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xABE318", Offset = "0xABE318", VA = "0xABE318", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xABE44C", Offset = "0xABE44C", VA = "0xABE44C", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xABE454", Offset = "0xABE454", VA = "0xABE454", Slot = "7")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xABE128", Offset = "0xABE128", VA = "0xABE128")]
		private void InitRigidBody()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xABE338", Offset = "0xABE338", VA = "0xABE338")]
		private void SetConstraints(KnobDirection direction)
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xABE220", Offset = "0xABE220", VA = "0xABE220")]
		private void InitInteractable()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xABE820", Offset = "0xABE820", VA = "0xABE820")]
		private KnobDirection DetectDirection()
		{
			return default(KnobDirection);
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xABE478", Offset = "0xABE478", VA = "0xABE478")]
		private float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xABF088", Offset = "0xABF088", VA = "0xABF088")]
		public VRTK_Knob()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class VRTK_Lever : VRTK_Control
	{
		[Token(Token = "0x20003D2")]
		public enum LeverDirection
		{
			[Token(Token = "0x40018D9")]
			x,
			[Token(Token = "0x40018DA")]
			y,
			[Token(Token = "0x40018DB")]
			z
		}

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579428", Offset = "0x579428")]
		public LeverDirection direction;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579460", Offset = "0x579460")]
		public float minAngle;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579498", Offset = "0x579498")]
		public float maxAngle;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5794D0", Offset = "0x5794D0")]
		public float stepSize;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected HingeJoint hj;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rb;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private VRTK_InteractableObject io;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool hjCreated;

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xABF150", Offset = "0xABF150", VA = "0xABF150", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xABF3D8", Offset = "0xABF3D8", VA = "0xABF3D8", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xABF82C", Offset = "0xABF82C", VA = "0xABF82C", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xABF834", Offset = "0xABF834", VA = "0xABF834", Slot = "7")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xABF85C", Offset = "0xABF85C", VA = "0xABF85C")]
		private float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xABF968", Offset = "0xABF968", VA = "0xABF968")]
		private void SnapToValue(float value)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xABFB2C", Offset = "0xABFB2C", VA = "0xABFB2C")]
		public VRTK_Lever()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class VRTK_Slider : VRTK_Control
	{
		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579508", Offset = "0x579508")]
		public Direction direction;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579540", Offset = "0x579540")]
		public float min;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579578", Offset = "0x579578")]
		public float max;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5795B0", Offset = "0x5795B0")]
		public float stepSize;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5795E8", Offset = "0x5795E8")]
		public bool detectMinMax;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579620", Offset = "0x579620")]
		public Vector3 minPoint;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579658", Offset = "0x579658")]
		public Vector3 maxPoint;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float MAX_AUTODETECT_SLIDER_LENGTH;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Direction finalDirection;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 finalMinPoint;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 finalMaxPoint;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody rb;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private VRTK_InteractableObject io;

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x789E8C", Offset = "0x789E8C", VA = "0x789E8C", Slot = "10")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x789F54", Offset = "0x789F54", VA = "0x789F54", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x78A168", Offset = "0x78A168", VA = "0x78A168", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x78AFC0", Offset = "0x78AFC0", VA = "0x78AFC0", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x78AFC8", Offset = "0x78AFC8", VA = "0x78AFC8", Slot = "7")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x789F78", Offset = "0x789F78", VA = "0x789F78")]
		private void InitRigidBody()
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x78AEA8", Offset = "0x78AEA8", VA = "0x78AEA8")]
		private void SetConstraints(Direction direction)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x78A070", Offset = "0x78A070", VA = "0x78A070")]
		private void InitInteractable()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x78A2AC", Offset = "0x78A2AC", VA = "0x78A2AC")]
		private Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x78A9C8", Offset = "0x78A9C8", VA = "0x78A9C8")]
		private bool DoDetectMinMax(Direction direction)
		{
			return default(bool);
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x78AFF8", Offset = "0x78AFF8", VA = "0x78AFF8")]
		private void EnsureSliderInRange()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x78B160", Offset = "0x78B160", VA = "0x78B160")]
		private float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x78B360", Offset = "0x78B360", VA = "0x78B360")]
		private void SnapToValue(float value)
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x78B4EC", Offset = "0x78B4EC", VA = "0x78B4EC")]
		public VRTK_Slider()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class VRTK_Spring_Lever : VRTK_Lever
	{
		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579690", Offset = "0x579690")]
		public float springStrength;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool wasTowardZero;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool towardZero;

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x78B5BC", Offset = "0x78B5BC", VA = "0x78B5BC", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x78B650", Offset = "0x78B650", VA = "0x78B650", Slot = "7")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x78B678", Offset = "0x78B678", VA = "0x78B678")]
		private void ApplySpringForce()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x78B708", Offset = "0x78B708", VA = "0x78B708")]
		public VRTK_Spring_Lever()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public static class Bezier
	{
		[Token(Token = "0x6000930")]
		[Address(RVA = "0x97C230", Offset = "0x97C230", VA = "0x97C230")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x97C3BC", Offset = "0x97C3BC", VA = "0x97C3BC")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x97C518", Offset = "0x97C518", VA = "0x97C518")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x97C710", Offset = "0x97C710", VA = "0x97C710")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200013A")]
	public class CurveGenerator : MonoBehaviour
	{
		[Token(Token = "0x20003D3")]
		private enum BezierControlPointMode
		{
			[Token(Token = "0x40018DD")]
			Free,
			[Token(Token = "0x40018DE")]
			Aligned,
			[Token(Token = "0x40018DF")]
			Mirrored
		}

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3[] points;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject[] items;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BezierControlPointMode[] modes;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool loop;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int frequency;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool customTracer;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool rescalePointerTracer;

		[Token(Token = "0x170000B0")]
		private bool Loop
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0x97DBB8", Offset = "0x97DBB8", VA = "0x97DBB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000939")]
			[Address(RVA = "0x97DBC0", Offset = "0x97DBC0", VA = "0x97DBC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		private int ControlPointCount
		{
			[Token(Token = "0x600093A")]
			[Address(RVA = "0x97E0F0", Offset = "0x97E0F0", VA = "0x97E0F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B2")]
		private int CurveCount
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0x97E448", Offset = "0x97E448", VA = "0x97E448")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x97D434", Offset = "0x97D434", VA = "0x97D434")]
		public void Create(int setFrequency, float radius, GameObject tracer, bool rescaleTracer = false)
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x97D790", Offset = "0x97D790", VA = "0x97D790")]
		public void SetPoints(Vector3[] controlPoints, Material material)
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x97DB84", Offset = "0x97DB84", VA = "0x97DB84")]
		public void TogglePoints(bool state)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x97D6AC", Offset = "0x97D6AC", VA = "0x97D6AC")]
		private GameObject CreateSphere()
		{
			return null;
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x97E10C", Offset = "0x97E10C", VA = "0x97E10C")]
		private Vector3 GetControlPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x97DC34", Offset = "0x97DC34", VA = "0x97DC34")]
		private void SetControlPoint(int index, Vector3 point)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x97E154", Offset = "0x97E154", VA = "0x97E154")]
		private void EnforceMode(int index)
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x97E480", Offset = "0x97E480", VA = "0x97E480")]
		private Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x97D804", Offset = "0x97D804", VA = "0x97D804")]
		private void SetObjects(Material material)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x97E62C", Offset = "0x97E62C", VA = "0x97E62C")]
		private void setMeshMaterial(GameObject item, Material material)
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x97E6E8", Offset = "0x97E6E8", VA = "0x97E6E8")]
		private void setSkinnedMeshMaterial(GameObject item, Material material)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x97E7A4", Offset = "0x97E7A4", VA = "0x97E7A4")]
		public CurveGenerator()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class Utilities : MonoBehaviour
	{
		[Token(Token = "0x6000944")]
		[Address(RVA = "0x85A914", Offset = "0x85A914", VA = "0x85A914")]
		public static Bounds GetBounds(Transform transform, [Optional] Transform excludeRotation, [Optional] Transform excludeTransform)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x85AE10", Offset = "0x85AE10", VA = "0x85AE10")]
		public static bool IsLowest(float value, float[] others)
		{
			return default(bool);
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x85AE7C", Offset = "0x85AE7C", VA = "0x85AE7C")]
		public static void SetPlayerObject(GameObject obj, VRTK_PlayerObject.ObjectTypes objType)
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x85AF38", Offset = "0x85AF38", VA = "0x85AF38")]
		public static Transform AddCameraFade()
		{
			return null;
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x85AFB4", Offset = "0x85AFB4", VA = "0x85AFB4")]
		public static void CreateColliders(GameObject obj)
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x85B0E8", Offset = "0x85B0E8", VA = "0x85B0E8")]
		public static float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x85B22C", Offset = "0x85B22C", VA = "0x85B22C")]
		public static bool TagOrScriptCheck(GameObject obj, VRTK_TagOrScriptPolicyList tagOrScriptList, string ignoreString)
		{
			return default(bool);
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x84FA64", Offset = "0x84FA64", VA = "0x84FA64")]
		public static Component CloneComponent(Component source, GameObject destination)
		{
			return null;
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x85B340", Offset = "0x85B340", VA = "0x85B340")]
		public static VRTK_BaseHighlighter GetActiveHighlighter(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x85B3EC", Offset = "0x85B3EC", VA = "0x85B3EC")]
		public Utilities()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class VRTK_EventSystemVRInput : PointerInputModule
	{
		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<VRTK_UIPointer> pointers;

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xA61584", Offset = "0xA61584", VA = "0xA61584")]
		public void Initialise()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xA615EC", Offset = "0xA615EC", VA = "0xA615EC", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xA617D4", Offset = "0xA617D4", VA = "0xA617D4")]
		private List<RaycastResult> CheckRaycasts(VRTK_UIPointer pointer)
		{
			return null;
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xA62D00", Offset = "0xA62D00", VA = "0xA62D00")]
		private bool CheckTransformTree(Transform target, Transform source)
		{
			return default(bool);
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xA62DD8", Offset = "0xA62DD8", VA = "0xA62DD8")]
		private bool NoValidCollision(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
			return default(bool);
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xA62E8C", Offset = "0xA62E8C", VA = "0xA62E8C")]
		private bool IsHovering(VRTK_UIPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xA63088", Offset = "0xA63088", VA = "0xA63088")]
		private bool ShouldIgnoreElement(GameObject obj, string ignoreCanvasWithTagOrClass, VRTK_TagOrScriptPolicyList canvasTagOrScriptListPolicy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xA61930", Offset = "0xA61930", VA = "0xA61930")]
		private void Hover(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xA61F10", Offset = "0xA61F10", VA = "0xA61F10")]
		private void Click(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xA6237C", Offset = "0xA6237C", VA = "0xA6237C")]
		private void Drag(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xA62A10", Offset = "0xA62A10", VA = "0xA62A10")]
		private void Scroll(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xA6315C", Offset = "0xA6315C", VA = "0xA6315C")]
		public VRTK_EventSystemVRInput()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class VRTK_ObjectCache : MonoBehaviour
	{
		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<VRTK_BasicTeleport> registeredTeleporters;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<VRTK_DestinationMarker> registeredDestinationMarkers;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static VRTK_HeadsetCollision registeredHeadsetCollider;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Dictionary<uint, GameObject> trackedControllers;

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xAC000C", Offset = "0xAC000C", VA = "0xAC000C")]
		public VRTK_ObjectCache()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class VRTK_PlayerObject : MonoBehaviour
	{
		[Token(Token = "0x20003D4")]
		public enum ObjectTypes
		{
			[Token(Token = "0x40018E1")]
			CameraRig,
			[Token(Token = "0x40018E2")]
			Headset,
			[Token(Token = "0x40018E3")]
			Controller,
			[Token(Token = "0x40018E4")]
			Pointer
		}

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ObjectTypes objectType;

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xAC1B94", Offset = "0xAC1B94", VA = "0xAC1B94")]
		public VRTK_PlayerObject()
		{
		}
	}
	[Token(Token = "0x200013F")]
	[ExecuteInEditMode]
	public class VRTK_RoomExtender_PlayAreaGizmo : MonoBehaviour
	{
		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float wireframeHeight;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool drawWireframeWhenSelectedOnly;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform playArea;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VRTK_RoomExtender vrtk_RoomExtender;

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xAC35A0", Offset = "0xAC35A0", VA = "0xAC35A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xAC36A4", Offset = "0xAC36A4", VA = "0xAC36A4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xAC3E78", Offset = "0xAC3E78", VA = "0xAC3E78")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xAC36B4", Offset = "0xAC36B4", VA = "0xAC36B4")]
		private void DrawWireframe()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xAC3F2C", Offset = "0xAC3F2C", VA = "0xAC3F2C")]
		public VRTK_RoomExtender_PlayAreaGizmo()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class VRTK_UIGraphicRaycaster : GraphicRaycaster
	{
		[Token(Token = "0x20003D5")]
		private struct VRGraphic
		{
			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic graphic;

			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float distance;

			[Token(Token = "0x40018E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 position;

			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 pointerPosition;
		}

		[Serializable]
		[Token(Token = "0x20003D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5709B0", Offset = "0x5709B0")]
		private sealed class <>c
		{
			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<VRGraphic> <>9__10_0;

			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x78D96C", Offset = "0x78D96C", VA = "0x78D96C")]
			public <>c()
			{
			}

			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x78D974", Offset = "0x78D974", VA = "0x78D974")]
			internal int <Raycast>b__10_0(VRGraphic g1, VRGraphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject raycastSource;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 lastKnownPosition;

		[Token(Token = "0x4000838")]
		private const float UI_CONTROL_OFFSET = 1E-05f;

		[NonSerialized]
		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<VRGraphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<VRGraphic> s_SortedGraphics;

		[Token(Token = "0x170000B3")]
		private Canvas canvas
		{
			[Token(Token = "0x6000966")]
			[Address(RVA = "0x78C9FC", Offset = "0x78C9FC", VA = "0x78C9FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x78C8C4", Offset = "0x78C8C4", VA = "0x78C8C4", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x78D0B8", Offset = "0x78D0B8", VA = "0x78D0B8")]
		private void SetNearestRaycast(ref PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x78D460", Offset = "0x78D460", VA = "0x78D460")]
		private float GetHitDistance(Ray ray)
		{
			return default(float);
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x78CAA4", Offset = "0x78CAA4", VA = "0x78CAA4")]
		private void Raycast(Canvas canvas, Camera eventCamera, Ray ray, List<VRGraphic> results)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x78D804", Offset = "0x78D804", VA = "0x78D804")]
		public VRTK_UIGraphicRaycaster()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public sealed class VRTK_AdaptiveQuality : MonoBehaviour
	{
		[Token(Token = "0x20003D7")]
		private static class CommandLineArguments
		{
			[Token(Token = "0x40018EB")]
			public const string Disable = "-noaq";

			[Token(Token = "0x40018EC")]
			public const string MinimumRenderScale = "-aqminscale";

			[Token(Token = "0x40018ED")]
			public const string MaximumRenderScale = "-aqmaxscale";

			[Token(Token = "0x40018EE")]
			public const string MaximumRenderTargetDimension = "-aqmaxres";

			[Token(Token = "0x40018EF")]
			public const string RenderScaleFillRateStepSizeInPercent = "-aqfillratestep";

			[Token(Token = "0x40018F0")]
			public const string OverrideRenderScaleLevel = "-aqoverride";

			[Token(Token = "0x40018F1")]
			public const string DrawDebugVisualization = "-vrdebug";

			[Token(Token = "0x40018F2")]
			public const string MSAALevel = "-msaa";
		}

		[Token(Token = "0x20003D8")]
		private static class ShaderPropertyIDs
		{
			[Token(Token = "0x40018F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int LevelsCount;

			[Token(Token = "0x40018F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static readonly int DefaultLevel;

			[Token(Token = "0x40018F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly int CurrentLevel;

			[Token(Token = "0x40018F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static readonly int LastFrameIsInBudget;
		}

		[Serializable]
		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5709C0", Offset = "0x5709C0")]
		private sealed class <>c
		{
			[Token(Token = "0x40018F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<float> <>9__46_0;

			[Token(Token = "0x60017E5")]
			[Address(RVA = "0xA4DD34", Offset = "0xA4DD34", VA = "0xA4DD34")]
			public <>c()
			{
			}

			[Token(Token = "0x60017E6")]
			[Address(RVA = "0xA4DD3C", Offset = "0xA4DD3C", VA = "0xA4DD3C")]
			internal bool <UpdateRenderScaleLevels>b__46_0(float renderScale)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5796C8", Offset = "0x5796C8")]
		public bool active;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579700", Offset = "0x579700")]
		public bool drawDebugVisualization;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579738", Offset = "0x579738")]
		public bool respondsToKeyboardShortcuts;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579770", Offset = "0x579770")]
		public bool respondsToCommandLineArguments;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5797A8", Offset = "0x5797A8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5797A8", Offset = "0x5797A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5797A8", Offset = "0x5797A8")]
		public int msaaLevel;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579820", Offset = "0x579820")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579820", Offset = "0x579820")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579820", Offset = "0x579820")]
		public float minimumRenderScale;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57989C", Offset = "0x57989C")]
		public float maximumRenderScale;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5798D4", Offset = "0x5798D4")]
		public int maximumRenderTargetDimension;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57990C", Offset = "0x57990C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57990C", Offset = "0x57990C")]
		public int renderScaleFillRateStepSizeInPercent;

		[NonSerialized]
		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579964", Offset = "0x579964")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x579964", Offset = "0x579964")]
		public bool overrideRenderScale;

		[NonSerialized]
		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5799C4", Offset = "0x5799C4")]
		public int overrideRenderScaleLevel;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ReadOnlyCollection<float> renderScales;

		[Token(Token = "0x4000847")]
		private const float DefaultFrameDurationInMilliseconds = 11.111111f;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<float> allRenderScales;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int defaultRenderScaleLevel;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int currentRenderScaleLevel;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float previousMinimumRenderScale;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float previousMaximumRenderScale;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float previousRenderScaleFillRateStepSizeInPercent;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int lastRenderScaleChangeFrameCount;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly float[] frameTimeRingBuffer;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int frameTimeRingBufferIndex;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool interleavedReprojectionEnabled;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool hmdDisplayIsOnDesktop;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float singleFrameDurationInMilliseconds;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject debugVisualizationQuad;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material debugVisualizationQuadMaterial;

		[Token(Token = "0x170000B4")]
		public float currentRenderScale
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x85B3F4", Offset = "0x85B3F4", VA = "0x85B3F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B5")]
		public Vector2 defaultRenderTargetResolution
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x85B424", Offset = "0x85B424", VA = "0x85B424")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170000B6")]
		public Vector2 currentRenderTargetResolution
		{
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x85B528", Offset = "0x85B528", VA = "0x85B528")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x85B558", Offset = "0x85B558", VA = "0x85B558")]
		public VRTK_AdaptiveQuality()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x85B494", Offset = "0x85B494", VA = "0x85B494")]
		public static Vector2 RenderTargetResolutionForRenderScale(float renderScale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x85B630", Offset = "0x85B630", VA = "0x85B630")]
		public float BiggestAllowedMaximumRenderScale()
		{
			return default(float);
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x85B730", Offset = "0x85B730", VA = "0x85B730", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x85B938", Offset = "0x85B938", VA = "0x85B938")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x85C368", Offset = "0x85C368", VA = "0x85C368")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x85BD38", Offset = "0x85BD38", VA = "0x85BD38")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x85C470", Offset = "0x85C470", VA = "0x85C470")]
		private void Update()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x85CAB0", Offset = "0x85CAB0", VA = "0x85CAB0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x85CF1C", Offset = "0x85CF1C", VA = "0x85CF1C")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x85BA34", Offset = "0x85BA34", VA = "0x85BA34")]
		private void HandleCommandLineArguments()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x85C49C", Offset = "0x85C49C", VA = "0x85C49C")]
		private void HandleKeyPresses()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x85CF20", Offset = "0x85CF20", VA = "0x85CF20")]
		private void UpdateMSAALevel()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x85C600", Offset = "0x85C600", VA = "0x85C600")]
		private void UpdateRenderScaleLevels()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x85CAB4", Offset = "0x85CAB4", VA = "0x85CAB4")]
		private void UpdateRenderScale()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x85C384", Offset = "0x85C384", VA = "0x85C384")]
		private static void SetRenderScale(float renderScale, float renderViewportScale)
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x85BE4C", Offset = "0x85BE4C", VA = "0x85BE4C")]
		private void CreateOrDestroyDebugVisualization()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x85C944", Offset = "0x85C944", VA = "0x85C944")]
		private void UpdateDebugVisualization()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public delegate void TeleportEventHandler(object sender, DestinationMarkerEventArgs e);
	[Token(Token = "0x2000143")]
	public class VRTK_BasicTeleport : MonoBehaviour
	{
		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5709D0", Offset = "0x5709D0")]
		private sealed class <InitListenersAtEndOfFrame>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_BasicTeleport <>4__this;

			[Token(Token = "0x1700020C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017EA")]
				[Address(RVA = "0xA4F208", Offset = "0xA4F208", VA = "0xA4F208", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017EC")]
				[Address(RVA = "0xA4F270", Offset = "0xA4F270", VA = "0xA4F270", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017E7")]
			[Address(RVA = "0xA4F048", Offset = "0xA4F048", VA = "0xA4F048")]
			[DebuggerHidden]
			public <InitListenersAtEndOfFrame>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60017E8")]
			[Address(RVA = "0xA4F160", Offset = "0xA4F160", VA = "0xA4F160", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017E9")]
			[Address(RVA = "0xA4F164", Offset = "0xA4F164", VA = "0xA4F164", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017EB")]
			[Address(RVA = "0xA4F210", Offset = "0xA4F210", VA = "0xA4F210", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5799FC", Offset = "0x5799FC")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579A34", Offset = "0x579A34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579A34", Offset = "0x579A34")]
		public float distanceBlinkDelay;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579A8C", Offset = "0x579A8C")]
		public bool headsetPositionCompensation;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579AC4", Offset = "0x579AC4")]
		public string ignoreTargetWithTagOrClass;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579AFC", Offset = "0x579AFC")]
		public VRTK_TagOrScriptPolicyList targetTagOrScriptListPolicy;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579B34", Offset = "0x579B34")]
		public float navMeshLimitDistance;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform eyeCamera;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool adjustYForTerrain;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		protected bool enableTeleport;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float blinkPause;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float fadeInTime;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float maxBlinkTransitionSpeed;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float maxBlinkDistance;

		[Token(Token = "0x14000025")]
		public event TeleportEventHandler Teleporting
		{
			[Token(Token = "0x6000982")]
			[Address(RVA = "0xA4DE10", Offset = "0xA4DE10", VA = "0xA4DE10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580A40", Offset = "0x580A40")]
			add
			{
			}
			[Token(Token = "0x6000983")]
			[Address(RVA = "0xA4DEB4", Offset = "0xA4DEB4", VA = "0xA4DEB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580A50", Offset = "0x580A50")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event TeleportEventHandler Teleported
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0xA4DF58", Offset = "0xA4DF58", VA = "0xA4DF58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580A60", Offset = "0x580A60")]
			add
			{
			}
			[Token(Token = "0x6000985")]
			[Address(RVA = "0xA4DFFC", Offset = "0xA4DFFC", VA = "0xA4DFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580A70", Offset = "0x580A70")]
			remove
			{
			}
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xA4E0A0", Offset = "0xA4E0A0", VA = "0xA4E0A0")]
		public void InitDestinationSetListener(GameObject markerMaker, bool register)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xA4E364", Offset = "0xA4E364", VA = "0xA4E364")]
		public void ToggleTeleportEnabled(bool state)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0xA4E370", Offset = "0xA4E370", VA = "0xA4E370", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xA4E3AC", Offset = "0xA4E3AC", VA = "0xA4E3AC", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xA4E4C0", Offset = "0xA4E4C0", VA = "0xA4E4C0", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xA4E780", Offset = "0xA4E780", VA = "0xA4E780")]
		protected void OnTeleporting(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xA4E7C0", Offset = "0xA4E7C0", VA = "0xA4E7C0")]
		protected void OnTeleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xA4E800", Offset = "0xA4E800", VA = "0xA4E800", Slot = "7")]
		protected virtual void Blink(float transitionSpeed)
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0xA4E8C8", Offset = "0xA4E8C8", VA = "0xA4E8C8", Slot = "8")]
		protected virtual bool ValidLocation(Transform target, Vector3 destinationPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xA4EA98", Offset = "0xA4EA98", VA = "0xA4EA98", Slot = "9")]
		protected virtual void DoTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xA4ED24", Offset = "0xA4ED24", VA = "0xA4ED24", Slot = "10")]
		protected virtual void SetNewPosition(Vector3 position, Transform target)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0xA4EE94", Offset = "0xA4EE94", VA = "0xA4EE94", Slot = "11")]
		protected virtual Vector3 GetNewPosition(Vector3 tipPosition, Transform target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0xA4ED9C", Offset = "0xA4ED9C", VA = "0xA4ED9C")]
		protected Vector3 CheckTerrainCollision(Vector3 position, Transform target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xA4EBE0", Offset = "0xA4EBE0", VA = "0xA4EBE0")]
		private void CalculateBlinkDelay(float blinkSpeed, Vector3 newPosition)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0xA4EF90", Offset = "0xA4EF90", VA = "0xA4EF90")]
		private void ReleaseBlink()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xA4E450", Offset = "0xA4E450", VA = "0xA4E450")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x580A80", Offset = "0x580A80")]
		private IEnumerator InitListenersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xA4E550", Offset = "0xA4E550", VA = "0xA4E550")]
		private void InitDestinationMarkerListeners(bool state)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0xA4F134", Offset = "0xA4F134", VA = "0xA4F134")]
		public VRTK_BasicTeleport()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class VRTK_BezierPointer : VRTK_WorldPointer
	{
		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579B8C", Offset = "0x579B8C")]
		public float pointerLength;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579BC4", Offset = "0x579BC4")]
		public int pointerDensity;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579BFC", Offset = "0x579BFC")]
		public bool showPointerCursor;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579C34", Offset = "0x579C34")]
		public float pointerCursorRadius;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579C6C", Offset = "0x579C6C")]
		public bool pointerCursorMatchTargetRotation;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579CA4", Offset = "0x579CA4")]
		public float beamCurveOffset;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579CDC", Offset = "0x579CDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x579CDC", Offset = "0x579CDC")]
		public float beamHeightLimitAngle;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579D34", Offset = "0x579D34")]
		public GameObject customPointerTracer;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579D6C", Offset = "0x579D6C")]
		public GameObject customPointerCursor;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579DA4", Offset = "0x579DA4")]
		public LayerMask layersToIgnore;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579DDC", Offset = "0x579DDC")]
		public GameObject validTeleportLocationObject;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579E14", Offset = "0x579E14")]
		public bool rescalePointerTracer;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private GameObject pointerCursor;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private GameObject curvedBeamContainer;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private CurveGenerator curvedBeam;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private GameObject validTeleportLocationInstance;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Material customPointerMaterial;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Material beamTraceMaterial;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool beamActive;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 fixedForwardBeamForward;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Vector3 contactNormal;

		[Token(Token = "0x400087A")]
		private const float BEAM_ADJUST_OFFSET = 1E-05f;

		[Token(Token = "0x6000998")]
		[Address(RVA = "0xA4F278", Offset = "0xA4F278", VA = "0xA4F278", Slot = "10")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0xA4F2C8", Offset = "0xA4F2C8", VA = "0xA4F2C8", Slot = "11")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0xA4F43C", Offset = "0xA4F43C", VA = "0xA4F43C", Slot = "17")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0xA4FF5C", Offset = "0xA4FF5C", VA = "0xA4FF5C", Slot = "18")]
		protected override void InitPointer()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xA505DC", Offset = "0xA505DC", VA = "0xA505DC", Slot = "27")]
		protected override void SetPointerMaterial()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0xA507C4", Offset = "0xA507C4", VA = "0xA507C4", Slot = "26")]
		protected override void TogglePointer(bool state)
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0xA507E0", Offset = "0xA507E0", VA = "0xA507E0", Slot = "21")]
		protected override void DisablePointerBeam(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xA504A0", Offset = "0xA504A0", VA = "0xA504A0")]
		private GameObject CreateCursor()
		{
			return null;
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xA50844", Offset = "0xA50844", VA = "0xA50844")]
		private void TogglePointerCursor(bool state)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xA4F4F0", Offset = "0xA4F4F0", VA = "0xA4F4F0")]
		private Vector3 ProjectForwardBeam()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xA4F86C", Offset = "0xA4F86C", VA = "0xA4F86C")]
		private Vector3 ProjectDownBeam(Vector3 jointPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xA4FCDC", Offset = "0xA4FCDC", VA = "0xA4FCDC")]
		private void SetPointerCursor(Vector3 downPosition)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xA4FB40", Offset = "0xA4FB40", VA = "0xA4FB40")]
		private void DisplayCurvedBeam(Vector3 jointPosition, Vector3 downPosition)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xA508B8", Offset = "0xA508B8", VA = "0xA508B8")]
		public VRTK_BezierPointer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000145")]
	public class VRTK_ControllerModelElementPaths
	{
		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string bodyModelPath;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string triggerModelPath;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string leftGripModelPath;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string rightGripModelPath;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string touchpadModelPath;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string appMenuModelPath;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string systemMenuModelPath;

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xA5BCD8", Offset = "0xA5BCD8", VA = "0xA5BCD8")]
		public VRTK_ControllerModelElementPaths()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000146")]
	public struct VRTK_ControllerElementHighlighers
	{
		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_BaseHighlighter body;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VRTK_BaseHighlighter trigger;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VRTK_BaseHighlighter gripLeft;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRTK_BaseHighlighter gripRight;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRTK_BaseHighlighter touchpad;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRTK_BaseHighlighter appMenu;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRTK_BaseHighlighter systemMenu;
	}
	[Token(Token = "0x2000147")]
	public struct ControllerActionsEventArgs
	{
		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;
	}
	[Token(Token = "0x2000148")]
	public delegate void ControllerActionsEventHandler(object sender, ControllerActionsEventArgs e);
	[Token(Token = "0x2000149")]
	public class VRTK_ControllerActions : MonoBehaviour
	{
		[Token(Token = "0x20003DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5709E0", Offset = "0x5709E0")]
		private sealed class <WaitForModel>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ControllerActions <>4__this;

			[Token(Token = "0x1700020E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017F0")]
				[Address(RVA = "0xA56F4C", Offset = "0xA56F4C", VA = "0xA56F4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017F2")]
				[Address(RVA = "0xA56FB4", Offset = "0xA56FB4", VA = "0xA56FB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017ED")]
			[Address(RVA = "0xA569E0", Offset = "0xA569E0", VA = "0xA569E0")]
			[DebuggerHidden]
			public <WaitForModel>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60017EE")]
			[Address(RVA = "0xA56E74", Offset = "0xA56E74", VA = "0xA56E74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017EF")]
			[Address(RVA = "0xA56E78", Offset = "0xA56E78", VA = "0xA56E78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xA56F54", Offset = "0xA56F54", VA = "0xA56F54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5709F0", Offset = "0x5709F0")]
		private sealed class <HapticPulse>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ControllerActions <>4__this;

			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ushort hapticPulseStrength;

			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float pulseInterval;

			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private OVRInput.Controller <controller>5__2;

			[Token(Token = "0x17000210")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017F6")]
				[Address(RVA = "0xA56E04", Offset = "0xA56E04", VA = "0xA56E04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000211")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017F8")]
				[Address(RVA = "0xA56E6C", Offset = "0xA56E6C", VA = "0xA56E6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017F3")]
			[Address(RVA = "0xA56A0C", Offset = "0xA56A0C", VA = "0xA56A0C")]
			[DebuggerHidden]
			public <HapticPulse>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x60017F4")]
			[Address(RVA = "0xA56CC4", Offset = "0xA56CC4", VA = "0xA56CC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017F5")]
			[Address(RVA = "0xA56CC8", Offset = "0xA56CC8", VA = "0xA56CC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F7")]
			[Address(RVA = "0xA56E0C", Offset = "0xA56E0C", VA = "0xA56E0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570A00", Offset = "0x570A00")]
		private sealed class <CycleColor>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material material;

			[Token(Token = "0x4001909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startColor;

			[Token(Token = "0x400190A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endColor;

			[Token(Token = "0x400190B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x400190C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000212")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017FC")]
				[Address(RVA = "0xA56C54", Offset = "0xA56C54", VA = "0xA56C54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000213")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017FE")]
				[Address(RVA = "0xA56CBC", Offset = "0xA56CBC", VA = "0xA56CBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017F9")]
			[Address(RVA = "0xA56B00", Offset = "0xA56B00", VA = "0xA56B00")]
			[DebuggerHidden]
			public <CycleColor>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60017FA")]
			[Address(RVA = "0xA56B44", Offset = "0xA56B44", VA = "0xA56B44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017FB")]
			[Address(RVA = "0xA56B48", Offset = "0xA56B48", VA = "0xA56B48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017FD")]
			[Address(RVA = "0xA56C5C", Offset = "0xA56C5C", VA = "0xA56C5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579E4C", Offset = "0x579E4C")]
		public VRTK_ControllerModelElementPaths modelElementPaths;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579E84", Offset = "0x579E84")]
		public VRTK_ControllerElementHighlighers elementHighlighterOverrides;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool controllerVisible;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private ushort hapticPulseStrength;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private uint controllerIndex;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ushort maxHapticVibration;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool controllerHighlighted;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<string, Transform> cachedElements;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VRTK_BaseHighlighter objectHighlighter;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<string, object> highlighterOptions;

		[Token(Token = "0x14000027")]
		public event ControllerActionsEventHandler ControllerModelVisible
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0xA5503C", Offset = "0xA5503C", VA = "0xA5503C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580AE4", Offset = "0x580AE4")]
			add
			{
			}
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0xA550E0", Offset = "0xA550E0", VA = "0xA550E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580AF4", Offset = "0x580AF4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event ControllerActionsEventHandler ControllerModelInvisible
		{
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0xA55184", Offset = "0xA55184", VA = "0xA55184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580B04", Offset = "0x580B04")]
			add
			{
			}
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0xA55228", Offset = "0xA55228", VA = "0xA55228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580B14", Offset = "0x580B14")]
			remove
			{
			}
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xA552CC", Offset = "0xA552CC", VA = "0xA552CC", Slot = "4")]
		public virtual void OnControllerModelVisible(ControllerActionsEventArgs e)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xA552EC", Offset = "0xA552EC", VA = "0xA552EC", Slot = "5")]
		public virtual void OnControllerModelInvisible(ControllerActionsEventArgs e)
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xA5530C", Offset = "0xA5530C", VA = "0xA5530C")]
		public bool IsControllerVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xA55314", Offset = "0xA55314", VA = "0xA55314")]
		public void ToggleControllerModel(bool state, GameObject grabbedChildObject)
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xA555F0", Offset = "0xA555F0", VA = "0xA555F0")]
		public void SetControllerOpacity(float alpha)
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xA559C0", Offset = "0xA559C0", VA = "0xA559C0")]
		public void HighlightControllerElement(GameObject element, Color? highlight, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xA55B00", Offset = "0xA55B00", VA = "0xA55B00")]
		public void UnhighlightControllerElement(GameObject element)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xA55BF0", Offset = "0xA55BF0", VA = "0xA55BF0")]
		public void ToggleHighlightControllerElement(bool state, GameObject element, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xA55D30", Offset = "0xA55D30", VA = "0xA55D30")]
		public void ToggleHighlightTrigger(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xA55E70", Offset = "0xA55E70", VA = "0xA55E70")]
		public void ToggleHighlightGrip(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xA55F20", Offset = "0xA55F20", VA = "0xA55F20")]
		public void ToggleHighlightTouchpad(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xA55F70", Offset = "0xA55F70", VA = "0xA55F70")]
		public void ToggleHighlightApplicationMenu(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xA55FC0", Offset = "0xA55FC0", VA = "0xA55FC0")]
		public void ToggleHighlighBody(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xA56010", Offset = "0xA56010", VA = "0xA56010")]
		public void ToggleHighlightController(bool state, [Optional] Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xA56148", Offset = "0xA56148", VA = "0xA56148")]
		public void TriggerHapticPulse(ushort strength)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xA5624C", Offset = "0xA5624C", VA = "0xA5624C")]
		public void TriggerHapticPulse(ushort strength, float duration, float pulseInterval)
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xA562CC", Offset = "0xA562CC", VA = "0xA562CC")]
		public void InitaliseHighlighters()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xA56808", Offset = "0xA56808", VA = "0xA56808")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xA568B0", Offset = "0xA568B0", VA = "0xA568B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xA5694C", Offset = "0xA5694C", VA = "0xA5694C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xA568DC", Offset = "0xA568DC", VA = "0xA568DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x580B24", Offset = "0x580B24")]
		private IEnumerator WaitForModel()
		{
			return null;
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xA56690", Offset = "0xA56690", VA = "0xA56690")]
		private void AddHighlighterToElement(Transform element, VRTK_BaseHighlighter parentHighlighter, VRTK_BaseHighlighter overrideHighlighter)
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xA561B8", Offset = "0xA561B8", VA = "0xA561B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x580B88", Offset = "0x580B88")]
		private IEnumerator HapticPulse(float duration, ushort hapticPulseStrength, float pulseInterval)
		{
			return null;
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xA56A38", Offset = "0xA56A38", VA = "0xA56A38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x580BEC", Offset = "0x580BEC")]
		private IEnumerator CycleColor(Material material, Color startColor, Color endColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xA56570", Offset = "0xA56570", VA = "0xA56570")]
		private Transform GetElementTransform(string path)
		{
			return null;
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xA55D80", Offset = "0xA55D80", VA = "0xA55D80")]
		private void ToggleHighlightAlias(bool state, string transformPath, Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xA555E8", Offset = "0xA555E8", VA = "0xA555E8")]
		private ControllerActionsEventArgs SetActionEvent(uint index)
		{
			return default(ControllerActionsEventArgs);
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xA56B2C", Offset = "0xA56B2C", VA = "0xA56B2C")]
		public VRTK_ControllerActions()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public struct ControllerInteractionEventArgs
	{
		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float touchpadAngle;
	}
	[Token(Token = "0x200014B")]
	public delegate void ControllerInteractionEventHandler(object sender, ControllerInteractionEventArgs e);
	[Token(Token = "0x200014C")]
	public class VRTK_ControllerEvents : MonoBehaviour
	{
		[Token(Token = "0x20003DE")]
		public enum ButtonAlias
		{
			[Token(Token = "0x400190E")]
			Trigger_Hairline,
			[Token(Token = "0x400190F")]
			Trigger_Touch,
			[Token(Token = "0x4001910")]
			Trigger_Press,
			[Token(Token = "0x4001911")]
			Trigger_Click,
			[Token(Token = "0x4001912")]
			Grip,
			[Token(Token = "0x4001913")]
			Touchpad_Touch,
			[Token(Token = "0x4001914")]
			Touchpad_Press,
			[Token(Token = "0x4001915")]
			Application_Menu,
			[Token(Token = "0x4001916")]
			Undefined
		}

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579EDC", Offset = "0x579EDC")]
		public ButtonAlias triggerPressButton;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579F14", Offset = "0x579F14")]
		public ButtonAlias pointerToggleButton;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579F4C", Offset = "0x579F4C")]
		public ButtonAlias pointerSetButton;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579F84", Offset = "0x579F84")]
		public ButtonAlias grabToggleButton;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579FBC", Offset = "0x579FBC")]
		public ButtonAlias useToggleButton;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x579FF4", Offset = "0x579FF4")]
		public ButtonAlias uiClickButton;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A02C", Offset = "0x57A02C")]
		public ButtonAlias menuToggleButton;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A064", Offset = "0x57A064")]
		public int axisFidelity;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A09C", Offset = "0x57A09C")]
		private float triggerClickThreshold;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool triggerPressed;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[HideInInspector]
		public bool triggerTouched;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[HideInInspector]
		public bool triggerHairlinePressed;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		[HideInInspector]
		public bool triggerClicked;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool handTriggerAxisChanged;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[HideInInspector]
		public bool indexTriggerAxisChanged;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[HideInInspector]
		public bool applicationMenuPressed;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[HideInInspector]
		public bool touchpadPressed;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public bool touchpadTouched;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[HideInInspector]
		public bool touchpadAxisChanged;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[HideInInspector]
		public bool gripPressed;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[HideInInspector]
		public bool pointerPressed;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool grabPressed;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[HideInInspector]
		public bool usePressed;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[HideInInspector]
		public bool uiClickPressed;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[HideInInspector]
		public bool menuPressed;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private uint controllerIndex;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector2 stickAxis;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector2 handTriggerAxis;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private Vector2 indexTriggerAxis;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float hairTriggerDelta;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector3 controllerVelocity;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private Vector3 controllerAngularVelocity;

		[Token(Token = "0x14000029")]
		public event ControllerInteractionEventHandler TriggerPressed
		{
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0xA56FBC", Offset = "0xA56FBC", VA = "0xA56FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580C50", Offset = "0x580C50")]
			add
			{
			}
			[Token(Token = "0x60009D0")]
			[Address(RVA = "0xA57060", Offset = "0xA57060", VA = "0xA57060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580C60", Offset = "0x580C60")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event ControllerInteractionEventHandler TriggerReleased
		{
			[Token(Token = "0x60009D1")]
			[Address(RVA = "0xA57104", Offset = "0xA57104", VA = "0xA57104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580C70", Offset = "0x580C70")]
			add
			{
			}
			[Token(Token = "0x60009D2")]
			[Address(RVA = "0xA571A8", Offset = "0xA571A8", VA = "0xA571A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580C80", Offset = "0x580C80")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event ControllerInteractionEventHandler TriggerTouchStart
		{
			[Token(Token = "0x60009D3")]
			[Address(RVA = "0xA5724C", Offset = "0xA5724C", VA = "0xA5724C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580C90", Offset = "0x580C90")]
			add
			{
			}
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0xA572F0", Offset = "0xA572F0", VA = "0xA572F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580CA0", Offset = "0x580CA0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event ControllerInteractionEventHandler TriggerTouchEnd
		{
			[Token(Token = "0x60009D5")]
			[Address(RVA = "0xA57394", Offset = "0xA57394", VA = "0xA57394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580CB0", Offset = "0x580CB0")]
			add
			{
			}
			[Token(Token = "0x60009D6")]
			[Address(RVA = "0xA57438", Offset = "0xA57438", VA = "0xA57438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580CC0", Offset = "0x580CC0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event ControllerInteractionEventHandler TriggerHairlineStart
		{
			[Token(Token = "0x60009D7")]
			[Address(RVA = "0xA574DC", Offset = "0xA574DC", VA = "0xA574DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580CD0", Offset = "0x580CD0")]
			add
			{
			}
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0xA57580", Offset = "0xA57580", VA = "0xA57580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580CE0", Offset = "0x580CE0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event ControllerInteractionEventHandler TriggerHairlineEnd
		{
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0xA57624", Offset = "0xA57624", VA = "0xA57624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580CF0", Offset = "0x580CF0")]
			add
			{
			}
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0xA576C8", Offset = "0xA576C8", VA = "0xA576C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580D00", Offset = "0x580D00")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event ControllerInteractionEventHandler TriggerClicked
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0xA5776C", Offset = "0xA5776C", VA = "0xA5776C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580D10", Offset = "0x580D10")]
			add
			{
			}
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0xA57810", Offset = "0xA57810", VA = "0xA57810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580D20", Offset = "0x580D20")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event ControllerInteractionEventHandler TriggerUnclicked
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0xA578B4", Offset = "0xA578B4", VA = "0xA578B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580D30", Offset = "0x580D30")]
			add
			{
			}
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0xA57958", Offset = "0xA57958", VA = "0xA57958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580D40", Offset = "0x580D40")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event ControllerInteractionEventHandler TriggerAxisChanged
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0xA579FC", Offset = "0xA579FC", VA = "0xA579FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580D50", Offset = "0x580D50")]
			add
			{
			}
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0xA57AA0", Offset = "0xA57AA0", VA = "0xA57AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580D60", Offset = "0x580D60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event ControllerInteractionEventHandler ApplicationMenuPressed
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0xA57B44", Offset = "0xA57B44", VA = "0xA57B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580D70", Offset = "0x580D70")]
			add
			{
			}
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0xA57BE8", Offset = "0xA57BE8", VA = "0xA57BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580D80", Offset = "0x580D80")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event ControllerInteractionEventHandler ApplicationMenuReleased
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0xA57C8C", Offset = "0xA57C8C", VA = "0xA57C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580D90", Offset = "0x580D90")]
			add
			{
			}
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0xA57D30", Offset = "0xA57D30", VA = "0xA57D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580DA0", Offset = "0x580DA0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event ControllerInteractionEventHandler GripPressed
		{
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0xA57DD4", Offset = "0xA57DD4", VA = "0xA57DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580DB0", Offset = "0x580DB0")]
			add
			{
			}
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0xA57E78", Offset = "0xA57E78", VA = "0xA57E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580DC0", Offset = "0x580DC0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event ControllerInteractionEventHandler GripReleased
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0xA57F1C", Offset = "0xA57F1C", VA = "0xA57F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580DD0", Offset = "0x580DD0")]
			add
			{
			}
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0xA57FC0", Offset = "0xA57FC0", VA = "0xA57FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580DE0", Offset = "0x580DE0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event ControllerInteractionEventHandler TouchpadPressed
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0xA58064", Offset = "0xA58064", VA = "0xA58064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580DF0", Offset = "0x580DF0")]
			add
			{
			}
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0xA58108", Offset = "0xA58108", VA = "0xA58108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580E00", Offset = "0x580E00")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event ControllerInteractionEventHandler TouchpadReleased
		{
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0xA581AC", Offset = "0xA581AC", VA = "0xA581AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580E10", Offset = "0x580E10")]
			add
			{
			}
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0xA58250", Offset = "0xA58250", VA = "0xA58250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580E20", Offset = "0x580E20")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event ControllerInteractionEventHandler TouchpadTouchStart
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0xA582F4", Offset = "0xA582F4", VA = "0xA582F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580E30", Offset = "0x580E30")]
			add
			{
			}
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0xA58398", Offset = "0xA58398", VA = "0xA58398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580E40", Offset = "0x580E40")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event ControllerInteractionEventHandler TouchpadTouchEnd
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0xA5843C", Offset = "0xA5843C", VA = "0xA5843C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580E50", Offset = "0x580E50")]
			add
			{
			}
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0xA584E0", Offset = "0xA584E0", VA = "0xA584E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580E60", Offset = "0x580E60")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event ControllerInteractionEventHandler TouchpadAxisChanged
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0xA58584", Offset = "0xA58584", VA = "0xA58584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580E70", Offset = "0x580E70")]
			add
			{
			}
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0xA58628", Offset = "0xA58628", VA = "0xA58628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580E80", Offset = "0x580E80")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event ControllerInteractionEventHandler AliasPointerOn
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0xA586CC", Offset = "0xA586CC", VA = "0xA586CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580E90", Offset = "0x580E90")]
			add
			{
			}
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0xA58770", Offset = "0xA58770", VA = "0xA58770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580EA0", Offset = "0x580EA0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event ControllerInteractionEventHandler AliasPointerOff
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0xA58814", Offset = "0xA58814", VA = "0xA58814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580EB0", Offset = "0x580EB0")]
			add
			{
			}
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0xA588B8", Offset = "0xA588B8", VA = "0xA588B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580EC0", Offset = "0x580EC0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event ControllerInteractionEventHandler AliasPointerSet
		{
			[Token(Token = "0x60009F7")]
			[Address(RVA = "0xA5895C", Offset = "0xA5895C", VA = "0xA5895C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580ED0", Offset = "0x580ED0")]
			add
			{
			}
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0xA58A00", Offset = "0xA58A00", VA = "0xA58A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580EE0", Offset = "0x580EE0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event ControllerInteractionEventHandler AliasGrabOn
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0xA58AA4", Offset = "0xA58AA4", VA = "0xA58AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580EF0", Offset = "0x580EF0")]
			add
			{
			}
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0xA58B48", Offset = "0xA58B48", VA = "0xA58B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580F00", Offset = "0x580F00")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event ControllerInteractionEventHandler AliasGrabOff
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0xA58BEC", Offset = "0xA58BEC", VA = "0xA58BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580F10", Offset = "0x580F10")]
			add
			{
			}
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0xA58C94", Offset = "0xA58C94", VA = "0xA58C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580F20", Offset = "0x580F20")]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public event ControllerInteractionEventHandler AliasUseOn
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0xA58D3C", Offset = "0xA58D3C", VA = "0xA58D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580F30", Offset = "0x580F30")]
			add
			{
			}
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0xA58DE4", Offset = "0xA58DE4", VA = "0xA58DE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580F40", Offset = "0x580F40")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event ControllerInteractionEventHandler AliasUseOff
		{
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0xA58E8C", Offset = "0xA58E8C", VA = "0xA58E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580F50", Offset = "0x580F50")]
			add
			{
			}
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0xA58F34", Offset = "0xA58F34", VA = "0xA58F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580F60", Offset = "0x580F60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event ControllerInteractionEventHandler AliasMenuOn
		{
			[Token(Token = "0x6000A01")]
			[Address(RVA = "0xA58FDC", Offset = "0xA58FDC", VA = "0xA58FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580F70", Offset = "0x580F70")]
			add
			{
			}
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0xA59084", Offset = "0xA59084", VA = "0xA59084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580F80", Offset = "0x580F80")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event ControllerInteractionEventHandler AliasMenuOff
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0xA5912C", Offset = "0xA5912C", VA = "0xA5912C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580F90", Offset = "0x580F90")]
			add
			{
			}
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0xA591D4", Offset = "0xA591D4", VA = "0xA591D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580FA0", Offset = "0x580FA0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event ControllerInteractionEventHandler AliasUIClickOn
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0xA5927C", Offset = "0xA5927C", VA = "0xA5927C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580FB0", Offset = "0x580FB0")]
			add
			{
			}
			[Token(Token = "0x6000A06")]
			[Address(RVA = "0xA59324", Offset = "0xA59324", VA = "0xA59324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580FC0", Offset = "0x580FC0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event ControllerInteractionEventHandler AliasUIClickOff
		{
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0xA593CC", Offset = "0xA593CC", VA = "0xA593CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580FD0", Offset = "0x580FD0")]
			add
			{
			}
			[Token(Token = "0x6000A08")]
			[Address(RVA = "0xA59474", Offset = "0xA59474", VA = "0xA59474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580FE0", Offset = "0x580FE0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event ControllerInteractionEventHandler ControllerEnabled
		{
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0xA5951C", Offset = "0xA5951C", VA = "0xA5951C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x580FF0", Offset = "0x580FF0")]
			add
			{
			}
			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0xA595C4", Offset = "0xA595C4", VA = "0xA595C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581000", Offset = "0x581000")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event ControllerInteractionEventHandler ControllerDisabled
		{
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0xA5966C", Offset = "0xA5966C", VA = "0xA5966C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581010", Offset = "0x581010")]
			add
			{
			}
			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0xA59714", Offset = "0xA59714", VA = "0xA59714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581020", Offset = "0x581020")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xA597BC", Offset = "0xA597BC", VA = "0xA597BC", Slot = "4")]
		public virtual void OnTriggerPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xA59800", Offset = "0xA59800", VA = "0xA59800", Slot = "5")]
		public virtual void OnTriggerReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xA59844", Offset = "0xA59844", VA = "0xA59844", Slot = "6")]
		public virtual void OnTriggerTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xA59888", Offset = "0xA59888", VA = "0xA59888", Slot = "7")]
		public virtual void OnTriggerTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xA598CC", Offset = "0xA598CC", VA = "0xA598CC", Slot = "8")]
		public virtual void OnTriggerHairlineStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xA59910", Offset = "0xA59910", VA = "0xA59910", Slot = "9")]
		public virtual void OnTriggerHairlineEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xA59954", Offset = "0xA59954", VA = "0xA59954", Slot = "10")]
		public virtual void OnTriggerClicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xA59998", Offset = "0xA59998", VA = "0xA59998", Slot = "11")]
		public virtual void OnTriggerUnclicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xA599DC", Offset = "0xA599DC", VA = "0xA599DC", Slot = "12")]
		public virtual void OnTriggerAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xA59A20", Offset = "0xA59A20", VA = "0xA59A20", Slot = "13")]
		public virtual void OnApplicationMenuPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xA59A64", Offset = "0xA59A64", VA = "0xA59A64", Slot = "14")]
		public virtual void OnApplicationMenuReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xA59AA8", Offset = "0xA59AA8", VA = "0xA59AA8", Slot = "15")]
		public virtual void OnGripPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xA59AEC", Offset = "0xA59AEC", VA = "0xA59AEC", Slot = "16")]
		public virtual void OnGripReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xA59B30", Offset = "0xA59B30", VA = "0xA59B30", Slot = "17")]
		public virtual void OnTouchpadPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xA59B74", Offset = "0xA59B74", VA = "0xA59B74", Slot = "18")]
		public virtual void OnTouchpadReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xA59BB8", Offset = "0xA59BB8", VA = "0xA59BB8", Slot = "19")]
		public virtual void OnTouchpadTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xA59BFC", Offset = "0xA59BFC", VA = "0xA59BFC", Slot = "20")]
		public virtual void OnTouchpadTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xA59C40", Offset = "0xA59C40", VA = "0xA59C40", Slot = "21")]
		public virtual void OnTouchpadAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xA59C84", Offset = "0xA59C84", VA = "0xA59C84", Slot = "22")]
		public virtual void OnAliasPointerOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xA59CC8", Offset = "0xA59CC8", VA = "0xA59CC8", Slot = "23")]
		public virtual void OnAliasPointerOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xA59D0C", Offset = "0xA59D0C", VA = "0xA59D0C", Slot = "24")]
		public virtual void OnAliasPointerSet(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xA59D50", Offset = "0xA59D50", VA = "0xA59D50", Slot = "25")]
		public virtual void OnAliasGrabOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xA59D94", Offset = "0xA59D94", VA = "0xA59D94", Slot = "26")]
		public virtual void OnAliasGrabOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xA59DD8", Offset = "0xA59DD8", VA = "0xA59DD8", Slot = "27")]
		public virtual void OnAliasUseOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xA59E1C", Offset = "0xA59E1C", VA = "0xA59E1C", Slot = "28")]
		public virtual void OnAliasUseOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xA59E60", Offset = "0xA59E60", VA = "0xA59E60", Slot = "29")]
		public virtual void OnAliasUIClickOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xA59EA4", Offset = "0xA59EA4", VA = "0xA59EA4", Slot = "30")]
		public virtual void OnAliasUIClickOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xA59EE8", Offset = "0xA59EE8", VA = "0xA59EE8", Slot = "31")]
		public virtual void OnAliasMenuOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xA59F2C", Offset = "0xA59F2C", VA = "0xA59F2C", Slot = "32")]
		public virtual void OnAliasMenuOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xA59F70", Offset = "0xA59F70", VA = "0xA59F70", Slot = "33")]
		public virtual void OnControllerEnabled(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xA59FB4", Offset = "0xA59FB4", VA = "0xA59FB4", Slot = "34")]
		public virtual void OnControllerDisabled(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xA59FF8", Offset = "0xA59FF8", VA = "0xA59FF8")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xA5A0B8", Offset = "0xA5A0B8", VA = "0xA5A0B8")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xA5A0E4", Offset = "0xA5A0E4", VA = "0xA5A0E4")]
		public Vector2 GetTouchpadAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xA5A0F0", Offset = "0xA5A0F0", VA = "0xA5A0F0")]
		public float GetTouchpadAxisAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xA5A1A0", Offset = "0xA5A1A0", VA = "0xA5A1A0")]
		public float GetHandTriggerAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xA5A1A8", Offset = "0xA5A1A8", VA = "0xA5A1A8")]
		public float GetIndexTriggerAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xA5A1B0", Offset = "0xA5A1B0", VA = "0xA5A1B0")]
		public float GetHairTriggerDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xA5A1B8", Offset = "0xA5A1B8", VA = "0xA5A1B8")]
		public bool AnyButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xA5A1E8", Offset = "0xA5A1E8", VA = "0xA5A1E8")]
		public bool IsButtonPressed(ButtonAlias button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xA5A258", Offset = "0xA5A258", VA = "0xA5A258")]
		private ControllerInteractionEventArgs SetButtonEvent(ref bool buttonBool, bool value, float buttonPressure)
		{
			return default(ControllerInteractionEventArgs);
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xA5A314", Offset = "0xA5A314", VA = "0xA5A314")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xA5A390", Offset = "0xA5A390", VA = "0xA5A390")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xA5A3E8", Offset = "0xA5A3E8", VA = "0xA5A3E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xA5A0FC", Offset = "0xA5A0FC", VA = "0xA5A0FC")]
		private float CalculateTouchpadAxisAngle(Vector2 axis)
		{
			return default(float);
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xA5A440", Offset = "0xA5A440", VA = "0xA5A440")]
		private void EmitAlias(ButtonAlias type, bool touchDown, float buttonPressure, ref bool buttonBool)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xA5A7C4", Offset = "0xA5A7C4", VA = "0xA5A7C4")]
		private bool Vector2ShallowEquals(Vector2 vectorA, Vector2 vectorB)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xA5A95C", Offset = "0xA5A95C", VA = "0xA5A95C")]
		private void CacheControllerIndex()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xA5AAF4", Offset = "0xA5AAF4", VA = "0xA5AAF4")]
		private void RemoveControllerIndexFromCache()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xA5ABC4", Offset = "0xA5ABC4", VA = "0xA5ABC4")]
		private void EnableEvents()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xA5AC30", Offset = "0xA5AC30", VA = "0xA5AC30")]
		private void DisableEvents()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xA5B0E4", Offset = "0xA5B0E4", VA = "0xA5B0E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xA5A024", Offset = "0xA5A024", VA = "0xA5A024")]
		private void SetVelocity()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xA5BBD4", Offset = "0xA5BBD4", VA = "0xA5BBD4")]
		public VRTK_ControllerEvents()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public struct DashTeleportEventArgs
	{
		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RaycastHit[] hits;
	}
	[Token(Token = "0x200014E")]
	public delegate void DashTeleportEventHandler(object sender, DashTeleportEventArgs e);
	[Token(Token = "0x200014F")]
	public class VRTK_DashTeleport : VRTK_HeightAdjustTeleport
	{
		[Token(Token = "0x20003DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570A10", Offset = "0x570A10")]
		private sealed class <lerpToPosition>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_DashTeleport <>4__this;

			[Token(Token = "0x400191A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 targetPosition;

			[Token(Token = "0x400191B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform target;

			[Token(Token = "0x400191C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <gameObjectInTheWay>5__2;

			[Token(Token = "0x400191D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private RaycastHit[] <allHits>5__3;

			[Token(Token = "0x400191E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3 <startPosition>5__4;

			[Token(Token = "0x400191F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x4001920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <t>5__6;

			[Token(Token = "0x17000214")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001802")]
				[Address(RVA = "0xA5D360", Offset = "0xA5D360", VA = "0xA5D360", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000215")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001804")]
				[Address(RVA = "0xA5D3C8", Offset = "0xA5D3C8", VA = "0xA5D3C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xA5CC54", Offset = "0xA5CC54", VA = "0xA5CC54")]
			[DebuggerHidden]
			public <lerpToPosition>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001800")]
			[Address(RVA = "0xA5CCB0", Offset = "0xA5CCB0", VA = "0xA5CCB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001801")]
			[Address(RVA = "0xA5CCB4", Offset = "0xA5CCB4", VA = "0xA5CCB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001803")]
			[Address(RVA = "0xA5D368", Offset = "0xA5D368", VA = "0xA5D368", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A3C4", Offset = "0x57A3C4")]
		public float normalLerpTime;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A3FC", Offset = "0x57A3FC")]
		public float minSpeedMps;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A434", Offset = "0x57A434")]
		public float capsuleTopOffset;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A46C", Offset = "0x57A46C")]
		public float capsuleBottomOffset;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A4A4", Offset = "0x57A4A4")]
		public float capsuleRadius;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float minDistanceForNormalLerp;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float lerpTime;

		[Token(Token = "0x14000048")]
		public event DashTeleportEventHandler WillDashThruObjects
		{
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0xA5C874", Offset = "0xA5C874", VA = "0xA5C874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581030", Offset = "0x581030")]
			add
			{
			}
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0xA5C918", Offset = "0xA5C918", VA = "0xA5C918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581040", Offset = "0x581040")]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event DashTeleportEventHandler DashedThruObjects
		{
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0xA5C9BC", Offset = "0xA5C9BC", VA = "0xA5C9BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581050", Offset = "0x581050")]
			add
			{
			}
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0xA5CA60", Offset = "0xA5CA60", VA = "0xA5CA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581060", Offset = "0x581060")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xA5CB04", Offset = "0xA5CB04", VA = "0xA5CB04", Slot = "12")]
		public virtual void OnWillDashThruObjects(DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xA5CB24", Offset = "0xA5CB24", VA = "0xA5CB24", Slot = "13")]
		public virtual void OnDashedThruObjects(DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xA5CB44", Offset = "0xA5CB44", VA = "0xA5CB44", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xA5CB74", Offset = "0xA5CB74", VA = "0xA5CB74", Slot = "10")]
		protected override void SetNewPosition(Vector3 position, Transform target)
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xA5CBB0", Offset = "0xA5CBB0", VA = "0xA5CBB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581070", Offset = "0x581070")]
		private IEnumerator lerpToPosition(Vector3 targetPosition, Transform target)
		{
			return null;
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xA5CC80", Offset = "0xA5CC80", VA = "0xA5CC80")]
		private DashTeleportEventArgs SetDashTeleportEvent(RaycastHit[] hits)
		{
			return default(DashTeleportEventArgs);
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xA5CC88", Offset = "0xA5CC88", VA = "0xA5CC88")]
		public VRTK_DashTeleport()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class VRTK_DeviceFinder : MonoBehaviour
	{
		[Token(Token = "0x20003E0")]
		public enum Devices
		{
			[Token(Token = "0x4001922")]
			Headset,
			[Token(Token = "0x4001923")]
			Left_Controller,
			[Token(Token = "0x4001924")]
			Right_Controller
		}

		[Token(Token = "0x20003E1")]
		public enum ControllerHand
		{
			[Token(Token = "0x4001926")]
			None,
			[Token(Token = "0x4001927")]
			Left,
			[Token(Token = "0x4001928")]
			Right
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xA5D88C", Offset = "0xA5D88C", VA = "0xA5D88C")]
		public static bool TrackedIndexIsController(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xA56978", Offset = "0xA56978", VA = "0xA56978")]
		public static uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xA5D8F4", Offset = "0xA5D8F4", VA = "0xA5D8F4")]
		public static GameObject TrackedObjectByIndex(uint index)
		{
			return null;
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xA5D95C", Offset = "0xA5D95C", VA = "0xA5D95C")]
		public static Transform TrackedObjectOrigin(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xA5AA7C", Offset = "0xA5AA7C", VA = "0xA5AA7C")]
		public static GameObject TrackedObjectOfGameObject(GameObject obj, out uint index)
		{
			return null;
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xA5D9C4", Offset = "0xA5D9C4", VA = "0xA5D9C4")]
		public static Transform DeviceTransform(Devices device)
		{
			return null;
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xA5DA74", Offset = "0xA5DA74", VA = "0xA5DA74")]
		public static ControllerHand GetControllerHandType(string hand)
		{
			return default(ControllerHand);
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xA5DB10", Offset = "0xA5DB10", VA = "0xA5DB10")]
		public static ControllerHand GetControllerHand(GameObject controller)
		{
			return default(ControllerHand);
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xA4F074", Offset = "0xA4F074", VA = "0xA4F074")]
		public static GameObject GetControllerLeftHand()
		{
			return null;
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xA4F0D4", Offset = "0xA4F0D4", VA = "0xA4F0D4")]
		public static GameObject GetControllerRightHand()
		{
			return null;
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xA5DBB8", Offset = "0xA5DBB8", VA = "0xA5DBB8")]
		public static bool IsControllerOfHand(GameObject checkController, ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xA5DA14", Offset = "0xA5DA14", VA = "0xA5DA14")]
		public static Transform HeadsetTransform()
		{
			return null;
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xA5DC80", Offset = "0xA5DC80", VA = "0xA5DC80")]
		public static Transform HeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xA5DCE0", Offset = "0xA5DCE0", VA = "0xA5DCE0")]
		public static Transform PlayAreaTransform()
		{
			return null;
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xA5DD40", Offset = "0xA5DD40", VA = "0xA5DD40")]
		public VRTK_DeviceFinder()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public struct HeadsetCollisionEventArgs
	{
		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider collider;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform currentTransform;
	}
	[Token(Token = "0x2000152")]
	public delegate void HeadsetCollisionEventHandler(object sender, HeadsetCollisionEventArgs e);
	[Token(Token = "0x2000153")]
	public class VRTK_HeadsetCollision : MonoBehaviour
	{
		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A4FC", Offset = "0x57A4FC")]
		public string ignoreTargetWithTagOrClass;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A534", Offset = "0x57A534")]
		public VRTK_TagOrScriptPolicyList targetTagOrScriptListPolicy;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool headsetColliding;

		[Token(Token = "0x1400004A")]
		public event HeadsetCollisionEventHandler HeadsetCollisionDetect
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0xAB18B8", Offset = "0xAB18B8", VA = "0xAB18B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5810D4", Offset = "0x5810D4")]
			add
			{
			}
			[Token(Token = "0x6000A66")]
			[Address(RVA = "0xAB195C", Offset = "0xAB195C", VA = "0xAB195C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5810E4", Offset = "0x5810E4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event HeadsetCollisionEventHandler HeadsetCollisionEnded
		{
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0xAB1A00", Offset = "0xAB1A00", VA = "0xAB1A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5810F4", Offset = "0x5810F4")]
			add
			{
			}
			[Token(Token = "0x6000A68")]
			[Address(RVA = "0xAB1AA4", Offset = "0xAB1AA4", VA = "0xAB1AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581104", Offset = "0x581104")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xAB1B48", Offset = "0xAB1B48", VA = "0xAB1B48", Slot = "4")]
		public virtual void OnHeadsetCollisionDetect(HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xAB1B6C", Offset = "0xAB1B6C", VA = "0xAB1B6C", Slot = "5")]
		public virtual void OnHeadsetCollisionEnded(HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xAB1B90", Offset = "0xAB1B90", VA = "0xAB1B90", Slot = "6")]
		public virtual bool IsColliding()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xAB1B98", Offset = "0xAB1B98", VA = "0xAB1B98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xAB1CDC", Offset = "0xAB1CDC", VA = "0xAB1CDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xAB1DC8", Offset = "0xAB1DC8", VA = "0xAB1DC8")]
		private HeadsetCollisionEventArgs SetHeadsetCollisionEvent(Collider collider, Transform currentTransform)
		{
			return default(HeadsetCollisionEventArgs);
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xAB1DD4", Offset = "0xAB1DD4", VA = "0xAB1DD4")]
		private bool ValidTarget(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xAB1E80", Offset = "0xAB1E80", VA = "0xAB1E80")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xAB1F84", Offset = "0xAB1F84", VA = "0xAB1F84")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xAB2058", Offset = "0xAB2058", VA = "0xAB2058")]
		public VRTK_HeadsetCollision()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class VRTK_HeadsetCollisionFade : MonoBehaviour
	{
		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A58C", Offset = "0x57A58C")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A5C4", Offset = "0x57A5C4")]
		public Color fadeColor;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A5FC", Offset = "0x57A5FC")]
		public string ignoreTargetWithTagOrClass;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A634", Offset = "0x57A634")]
		public VRTK_TagOrScriptPolicyList targetTagOrScriptListPolicy;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VRTK_HeadsetFade headsetFade;

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xAB2060", Offset = "0xAB2060", VA = "0xAB2060")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xAB2184", Offset = "0xAB2184", VA = "0xAB2184")]
		private void OnHeadsetCollisionDetect(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xAB21B4", Offset = "0xAB21B4", VA = "0xAB21B4")]
		private void OnHeadsetCollisionEnded(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xAB21DC", Offset = "0xAB21DC", VA = "0xAB21DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xAB22D8", Offset = "0xAB22D8", VA = "0xAB22D8")]
		public VRTK_HeadsetCollisionFade()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public struct HeadsetFadeEventArgs
	{
		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float timeTillComplete;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform currentTransform;
	}
	[Token(Token = "0x2000156")]
	public delegate void HeadsetFadeEventHandler(object sender, HeadsetFadeEventArgs e);
	[Token(Token = "0x2000157")]
	public class VRTK_HeadsetFade : MonoBehaviour
	{
		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isTransitioning;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool isFaded;

		[Token(Token = "0x1400004C")]
		public event HeadsetFadeEventHandler HeadsetFadeStart
		{
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0xAB2318", Offset = "0xAB2318", VA = "0xAB2318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581114", Offset = "0x581114")]
			add
			{
			}
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0xAB23BC", Offset = "0xAB23BC", VA = "0xAB23BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581124", Offset = "0x581124")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public event HeadsetFadeEventHandler HeadsetFadeComplete
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0xAB2460", Offset = "0xAB2460", VA = "0xAB2460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581134", Offset = "0x581134")]
			add
			{
			}
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0xAB2504", Offset = "0xAB2504", VA = "0xAB2504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581144", Offset = "0x581144")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event HeadsetFadeEventHandler HeadsetUnfadeStart
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0xAB25A8", Offset = "0xAB25A8", VA = "0xAB25A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581154", Offset = "0x581154")]
			add
			{
			}
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0xAB264C", Offset = "0xAB264C", VA = "0xAB264C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581164", Offset = "0x581164")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event HeadsetFadeEventHandler HeadsetUnfadeComplete
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0xAB26F0", Offset = "0xAB26F0", VA = "0xAB26F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581174", Offset = "0x581174")]
			add
			{
			}
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0xAB2794", Offset = "0xAB2794", VA = "0xAB2794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581184", Offset = "0x581184")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xAB2838", Offset = "0xAB2838", VA = "0xAB2838", Slot = "4")]
		public virtual void OnHeadsetFadeStart(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xAB285C", Offset = "0xAB285C", VA = "0xAB285C", Slot = "5")]
		public virtual void OnHeadsetFadeComplete(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xAB2880", Offset = "0xAB2880", VA = "0xAB2880", Slot = "6")]
		public virtual void OnHeadsetUnfadeStart(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xAB28A4", Offset = "0xAB28A4", VA = "0xAB28A4", Slot = "7")]
		public virtual void OnHeadsetUnfadeComplete(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xAB28C8", Offset = "0xAB28C8", VA = "0xAB28C8", Slot = "8")]
		public virtual bool IsFaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xAB28D0", Offset = "0xAB28D0", VA = "0xAB28D0", Slot = "9")]
		public virtual bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xAB28D8", Offset = "0xAB28D8", VA = "0xAB28D8", Slot = "10")]
		public virtual void Fade(Color color, float duration)
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xAB2A8C", Offset = "0xAB2A8C", VA = "0xAB2A8C", Slot = "11")]
		public virtual void Unfade(float duration)
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xAB2B98", Offset = "0xAB2B98", VA = "0xAB2B98")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xAB2A84", Offset = "0xAB2A84", VA = "0xAB2A84")]
		private HeadsetFadeEventArgs SetHeadsetFadeEvent(Transform currentTransform, float duration)
		{
			return default(HeadsetFadeEventArgs);
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xAB2CEC", Offset = "0xAB2CEC", VA = "0xAB2CEC")]
		private void FadeComplete()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xAB2D2C", Offset = "0xAB2D2C", VA = "0xAB2D2C")]
		private void UnfadeComplete()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xAB2D68", Offset = "0xAB2D68", VA = "0xAB2D68")]
		public VRTK_HeadsetFade()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class VRTK_HeightAdjustTeleport : VRTK_BasicTeleport
	{
		[Token(Token = "0x20003E2")]
		public enum FallingRestrictors
		{
			[Token(Token = "0x400192A")]
			No_Restriction,
			[Token(Token = "0x400192B")]
			Left_Controller,
			[Token(Token = "0x400192C")]
			Right_Controller,
			[Token(Token = "0x400192D")]
			Either_Controller,
			[Token(Token = "0x400192E")]
			Both_Controllers
		}

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A6AC", Offset = "0x57A6AC")]
		public bool playSpaceFalling;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A6E4", Offset = "0x57A6E4")]
		public FallingRestrictors playSpaceFallRestriction;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A71C", Offset = "0x57A71C")]
		public bool useGravity;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A754", Offset = "0x57A754")]
		public float gravityFallHeight;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A78C", Offset = "0x57A78C")]
		public float blinkYThreshold;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A7C4", Offset = "0x57A7C4")]
		public float floorHeightTolerance;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float currentRayDownY;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject currentFloor;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool originalPlaySpaceFalling;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool isClimbing;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float previousFloorY;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool initialFloorDrop;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private VRTK_PlayerPresence playerPresence;

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xAB2D70", Offset = "0xAB2D70", VA = "0xAB2D70", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xAB2E7C", Offset = "0xAB2E7C", VA = "0xAB2E7C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xAB3024", Offset = "0xAB3024", VA = "0xAB3024", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xAB3050", Offset = "0xAB3050", VA = "0xAB3050", Slot = "9")]
		protected override void DoTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xAB3350", Offset = "0xAB3350", VA = "0xAB3350")]
		protected void OnClimbStarted(object sender, PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xAB3360", Offset = "0xAB3360", VA = "0xAB3360")]
		protected void OnClimbEnded(object sender, PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xAB3368", Offset = "0xAB3368", VA = "0xAB3368", Slot = "11")]
		protected override Vector3 GetNewPosition(Vector3 tipPosition, Transform target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xAB2EBC", Offset = "0xAB2EBC", VA = "0xAB2EBC")]
		private void InitClimbEvents(bool state)
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xAB33E0", Offset = "0xAB33E0", VA = "0xAB33E0")]
		private float GetTeleportY(Transform target, Vector3 tipPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xAB383C", Offset = "0xAB383C", VA = "0xAB383C")]
		private bool CurrentFloorChanged(RaycastHit collidedObj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xAB38DC", Offset = "0xAB38DC", VA = "0xAB38DC")]
		private bool FloorIsGrabbedObject(RaycastHit collidedObj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xAB3A20", Offset = "0xAB3A20", VA = "0xAB3A20")]
		private bool FloorHeightChanged(float currentY)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xAB3AB0", Offset = "0xAB3AB0", VA = "0xAB3AB0")]
		private bool ValidDrop(bool rayHit, RaycastHit rayCollidedWith, float floorY)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xAB3B58", Offset = "0xAB3B58", VA = "0xAB3B58")]
		private bool UsePhysicsFall(bool useGravityFall, float floorY)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xAB3BF8", Offset = "0xAB3BF8", VA = "0xAB3BF8")]
		private void TeleportFall(bool withBlink, float floorY, RaycastHit rayCollidedWith)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xAB3E3C", Offset = "0xAB3E3C", VA = "0xAB3E3C")]
		private float ControllerHeightCheck(GameObject controllerObj)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xAB4084", Offset = "0xAB4084", VA = "0xAB4084")]
		private bool ControllersStillOverPreviousFloor()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xAB30AC", Offset = "0xAB30AC", VA = "0xAB30AC")]
		private void DropToNearestFloor(bool withBlink, bool useGravityFall)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xAB4378", Offset = "0xAB4378", VA = "0xAB4378")]
		private bool IsExternalSystemManipulatingPlaySpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xAB43B4", Offset = "0xAB43B4", VA = "0xAB43B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xAB440C", Offset = "0xAB440C", VA = "0xAB440C")]
		public VRTK_HeightAdjustTeleport()
		{
		}
	}
	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F334", Offset = "0x56F334")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F334", Offset = "0x56F334")]
	public class VRTK_InteractGrab : MonoBehaviour
	{
		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A7FC", Offset = "0x57A7FC")]
		public Rigidbody controllerAttachPoint;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A834", Offset = "0x57A834")]
		public bool hideControllerOnGrab;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A86C", Offset = "0x57A86C")]
		public float hideControllerDelay;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A8A4", Offset = "0x57A8A4")]
		public float grabPrecognition;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A8DC", Offset = "0x57A8DC")]
		public float throwMultiplier;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A914", Offset = "0x57A914")]
		public bool createRigidBodyWhenNotTouching;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Joint controllerAttachJoint;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject grabbedObject;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool updatedHideControllerOnGrab;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VRTK_ControllerActions controllerActions;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int grabEnabledState;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float grabPrecognitionTimer;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject undroppableGrabbedObject;

		[Token(Token = "0x14000050")]
		public event ObjectInteractEventHandler ControllerGrabInteractableObject
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0xAB6414", Offset = "0xAB6414", VA = "0xAB6414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581194", Offset = "0x581194")]
			add
			{
			}
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0xAB64B8", Offset = "0xAB64B8", VA = "0xAB64B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5811A4", Offset = "0x5811A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event ObjectInteractEventHandler ControllerUngrabInteractableObject
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0xAB655C", Offset = "0xAB655C", VA = "0xAB655C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5811B4", Offset = "0x5811B4")]
			add
			{
			}
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0xAB6600", Offset = "0xAB6600", VA = "0xAB6600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5811C4", Offset = "0x5811C4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xAB66A4", Offset = "0xAB66A4", VA = "0xAB66A4", Slot = "4")]
		public virtual void OnControllerGrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xAB66C8", Offset = "0xAB66C8", VA = "0xAB66C8", Slot = "5")]
		public virtual void OnControllerUngrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xAB66EC", Offset = "0xAB66EC", VA = "0xAB66EC")]
		public void ForceRelease()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xAB6894", Offset = "0xAB6894", VA = "0xAB6894")]
		public void AttemptGrab()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xAB6B08", Offset = "0xAB6B08", VA = "0xAB6B08")]
		public GameObject GetGrabbedObject()
		{
			return null;
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xAB6B10", Offset = "0xAB6B10", VA = "0xAB6B10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xAB6C28", Offset = "0xAB6C28", VA = "0xAB6C28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xAB6F40", Offset = "0xAB6F40", VA = "0xAB6F40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xAB6DB4", Offset = "0xAB6DB4", VA = "0xAB6DB4")]
		private void SetControllerAttachPoint()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xAB7038", Offset = "0xAB7038", VA = "0xAB7038")]
		private bool IsObjectGrabbable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xAB7200", Offset = "0xAB7200", VA = "0xAB7200")]
		private bool IsObjectHoldOnGrab(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xAB72E8", Offset = "0xAB72E8", VA = "0xAB72E8")]
		private Transform GetSnapHandle(VRTK_InteractableObject objectScript)
		{
			return null;
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xAB746C", Offset = "0xAB746C", VA = "0xAB746C")]
		private void SetSnappedObjectPosition(GameObject obj)
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xAB7784", Offset = "0xAB7784", VA = "0xAB7784")]
		private void SnapObjectToGrabToController(GameObject obj)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xAB7860", Offset = "0xAB7860", VA = "0xAB7860")]
		private void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xAB79D4", Offset = "0xAB79D4", VA = "0xAB79D4")]
		private Rigidbody ReleaseGrabbedObjectFromController(bool withThrow)
		{
			return null;
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xAB7A74", Offset = "0xAB7A74", VA = "0xAB7A74")]
		private Rigidbody ReleaseAttachedObjectFromController(bool withThrow)
		{
			return null;
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xAB7B50", Offset = "0xAB7B50", VA = "0xAB7B50")]
		private Rigidbody ReleaseParentedObjectFromController()
		{
			return null;
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xAB7BA8", Offset = "0xAB7BA8", VA = "0xAB7BA8")]
		private void ThrowReleasedObject(Rigidbody rb, float objectThrowMultiplier)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xAB7D98", Offset = "0xAB7D98", VA = "0xAB7D98")]
		private bool GrabInteractedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xAB8098", Offset = "0xAB8098", VA = "0xAB8098")]
		private bool GrabTrackedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xAB81A4", Offset = "0xAB81A4", VA = "0xAB81A4")]
		private bool GrabClimbObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xAB7EB0", Offset = "0xAB7EB0", VA = "0xAB7EB0")]
		private void InitGrabbedObject()
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xAB8788", Offset = "0xAB8788", VA = "0xAB8788")]
		private void HideController()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xAB8824", Offset = "0xAB8824", VA = "0xAB8824")]
		private void UngrabInteractedObject(bool withThrow)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xAB6804", Offset = "0xAB6804", VA = "0xAB6804")]
		private void UngrabTrackedObject()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xAB8A44", Offset = "0xAB8A44", VA = "0xAB8A44")]
		private void UngrabClimbObject()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xAB88F0", Offset = "0xAB88F0", VA = "0xAB88F0")]
		private void InitUngrabbedObject()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xAB688C", Offset = "0xAB688C", VA = "0xAB688C")]
		private void ReleaseObject(bool withThrow)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xAB8ACC", Offset = "0xAB8ACC", VA = "0xAB8ACC")]
		private GameObject GetGrabbableObject()
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xAB8B6C", Offset = "0xAB8B6C", VA = "0xAB8B6C")]
		private void IncrementGrabState()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xAB6898", Offset = "0xAB6898", VA = "0xAB6898")]
		private void AttemptGrabObject()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xAB8BD0", Offset = "0xAB8BD0", VA = "0xAB8BD0")]
		private bool CanRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xAB8C78", Offset = "0xAB8C78", VA = "0xAB8C78")]
		private void AttemptReleaseObject()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xAB8D5C", Offset = "0xAB8D5C", VA = "0xAB8D5C")]
		private void DoGrabObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xAB8D60", Offset = "0xAB8D60", VA = "0xAB8D60")]
		private void DoReleaseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xAB8D64", Offset = "0xAB8D64", VA = "0xAB8D64")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xAB905C", Offset = "0xAB905C", VA = "0xAB905C")]
		public VRTK_InteractGrab()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public struct ObjectInteractEventArgs
	{
		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject target;
	}
	[Token(Token = "0x200015B")]
	public delegate void ObjectInteractEventHandler(object sender, ObjectInteractEventArgs e);
	[Token(Token = "0x200015C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F3C0", Offset = "0x56F3C0")]
	public class VRTK_InteractTouch : MonoBehaviour
	{
		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A96C", Offset = "0x57A96C")]
		public bool hideControllerOnTouch;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A9A4", Offset = "0x57A9A4")]
		public float hideControllerDelay;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57A9DC", Offset = "0x57A9DC")]
		public Color globalTouchHighlightColor;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AA14", Offset = "0x57AA14")]
		public GameObject customRigidbodyObject;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject touchedObject;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject lastTouchedObject;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool updatedHideControllerOnTouch;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VRTK_ControllerActions controllerActions;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject controllerCollisionDetector;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool triggerRumble;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool destroyColliderOnDisable;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody touchRigidBody;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UnityEngine.Object defaultColliderPrefab;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private VRTK_ControllerEvents.ButtonAlias originalGrabAlias;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private VRTK_ControllerEvents.ButtonAlias originalUseAlias;

		[Token(Token = "0x14000052")]
		public event ObjectInteractEventHandler ControllerTouchInteractableObject
		{
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0xAB906C", Offset = "0xAB906C", VA = "0xAB906C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5811D4", Offset = "0x5811D4")]
			add
			{
			}
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0xAB9110", Offset = "0xAB9110", VA = "0xAB9110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5811E4", Offset = "0x5811E4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event ObjectInteractEventHandler ControllerUntouchInteractableObject
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0xAB91B4", Offset = "0xAB91B4", VA = "0xAB91B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5811F4", Offset = "0x5811F4")]
			add
			{
			}
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0xAB9258", Offset = "0xAB9258", VA = "0xAB9258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581204", Offset = "0x581204")]
			remove
			{
			}
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xAB92FC", Offset = "0xAB92FC", VA = "0xAB92FC", Slot = "4")]
		public virtual void OnControllerTouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xAB9320", Offset = "0xAB9320", VA = "0xAB9320", Slot = "5")]
		public virtual void OnControllerUntouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xAB83EC", Offset = "0xAB83EC", VA = "0xAB83EC")]
		public ObjectInteractEventArgs SetControllerInteractEvent(GameObject target)
		{
			return default(ObjectInteractEventArgs);
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xAB9344", Offset = "0xAB9344", VA = "0xAB9344")]
		public void ForceTouch(GameObject obj)
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xAB97D0", Offset = "0xAB97D0", VA = "0xAB97D0")]
		public GameObject GetTouchedObject()
		{
			return null;
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xAB97D8", Offset = "0xAB97D8", VA = "0xAB97D8")]
		public void SetTouchedObject(GameObject _touchedObject)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xAB70CC", Offset = "0xAB70CC", VA = "0xAB70CC")]
		public bool IsObjectInteractable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xAB8F24", Offset = "0xAB8F24", VA = "0xAB8F24")]
		public void ToggleControllerRigidBody(bool state)
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xAB8EF8", Offset = "0xAB8EF8", VA = "0xAB8EF8")]
		public bool IsRigidBodyActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xAB8360", Offset = "0xAB8360", VA = "0xAB8360")]
		public void ForceStopTouching()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xAB5E50", Offset = "0xAB5E50", VA = "0xAB5E50")]
		public Collider[] ControllerColliders()
		{
			return null;
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xAB997C", Offset = "0xAB997C", VA = "0xAB997C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xAB9A20", Offset = "0xAB9A20", VA = "0xAB9A20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xAB9E78", Offset = "0xAB9E78", VA = "0xAB9E78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xAB9F1C", Offset = "0xAB9F1C", VA = "0xAB9F1C")]
		private GameObject GetColliderInteractableObject(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xAB9FF4", Offset = "0xAB9FF4", VA = "0xAB9FF4")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xAB9468", Offset = "0xAB9468", VA = "0xAB9468")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xABA0D0", Offset = "0xABA0D0", VA = "0xABA0D0")]
		private void CheckButtonOverrides(VRTK_InteractableObject touchedObjectScript)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xABA130", Offset = "0xABA130", VA = "0xABA130")]
		private void ResetButtonOverrides()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xABA0C8", Offset = "0xABA0C8", VA = "0xABA0C8")]
		private void ResetTriggerRumble()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xABA184", Offset = "0xABA184", VA = "0xABA184")]
		private bool IsColliderChildOfTouchedObject(GameObject collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xABA2B8", Offset = "0xABA2B8", VA = "0xABA2B8")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xAB97E0", Offset = "0xAB97E0", VA = "0xAB97E0")]
		private void StopTouching(GameObject obj)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xAB9E9C", Offset = "0xAB9E9C", VA = "0xAB9E9C")]
		private void DestroyTouchCollider()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xABA420", Offset = "0xABA420", VA = "0xABA420")]
		private bool CustomRigidBodyIsChild()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xAB9A54", Offset = "0xAB9A54", VA = "0xAB9A54")]
		private void CreateTouchCollider()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xAB9D60", Offset = "0xAB9D60", VA = "0xAB9D60")]
		private void CreateTouchRigidBody()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xABA570", Offset = "0xABA570", VA = "0xABA570")]
		private void HideController()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xABA60C", Offset = "0xABA60C", VA = "0xABA60C")]
		public VRTK_InteractTouch()
		{
		}
	}
	[Token(Token = "0x200015D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F424", Offset = "0x56F424")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F424", Offset = "0x56F424")]
	public class VRTK_InteractUse : MonoBehaviour
	{
		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AA6C", Offset = "0x57AA6C")]
		public bool hideControllerOnUse;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AAA4", Offset = "0x57AAA4")]
		public float hideControllerDelay;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject usingObject;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VRTK_InteractTouch interactTouch;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRTK_ControllerActions controllerActions;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool updatedHideControllerOnUse;

		[Token(Token = "0x14000054")]
		public event ObjectInteractEventHandler ControllerUseInteractableObject
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0xABA640", Offset = "0xABA640", VA = "0xABA640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581214", Offset = "0x581214")]
			add
			{
			}
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0xABA6E4", Offset = "0xABA6E4", VA = "0xABA6E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581224", Offset = "0x581224")]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event ObjectInteractEventHandler ControllerUnuseInteractableObject
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0xABA788", Offset = "0xABA788", VA = "0xABA788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581234", Offset = "0x581234")]
			add
			{
			}
			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0xABA82C", Offset = "0xABA82C", VA = "0xABA82C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581244", Offset = "0x581244")]
			remove
			{
			}
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xABA8D0", Offset = "0xABA8D0", VA = "0xABA8D0", Slot = "4")]
		public virtual void OnControllerUseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xABA8F4", Offset = "0xABA8F4", VA = "0xABA8F4", Slot = "5")]
		public virtual void OnControllerUnuseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xABA918", Offset = "0xABA918", VA = "0xABA918")]
		public GameObject GetUsingObject()
		{
			return null;
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xABA920", Offset = "0xABA920", VA = "0xABA920")]
		public void ForceStopUsing()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xABA9E8", Offset = "0xABA9E8", VA = "0xABA9E8")]
		public void ForceResetUsing()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xABABD0", Offset = "0xABABD0", VA = "0xABABD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xABACD0", Offset = "0xABACD0", VA = "0xABACD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xABAE54", Offset = "0xABAE54", VA = "0xABAE54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xABAF54", Offset = "0xABAF54", VA = "0xABAF54")]
		private bool IsObjectUsable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xABB098", Offset = "0xABB098", VA = "0xABB098")]
		private bool IsObjectHoldOnUse(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xABB180", Offset = "0xABB180", VA = "0xABB180")]
		private int GetObjectUsingState(GameObject obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xABB260", Offset = "0xABB260", VA = "0xABB260")]
		private void SetObjectUsingState(GameObject obj, int value)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xABB33C", Offset = "0xABB33C", VA = "0xABB33C")]
		private void UseInteractedObject(GameObject touchedObject)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xABB6A8", Offset = "0xABB6A8", VA = "0xABB6A8")]
		private void HideController()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xABAA74", Offset = "0xABAA74", VA = "0xABAA74")]
		private void UnuseInteractedObject(bool completeStop)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xABB744", Offset = "0xABB744", VA = "0xABB744")]
		private GameObject GetFromGrab()
		{
			return null;
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xABA9B8", Offset = "0xABA9B8", VA = "0xABA9B8")]
		private void StopUsing()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xABB7F8", Offset = "0xABB7F8", VA = "0xABB7F8")]
		private void DoStartUseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xABB964", Offset = "0xABB964", VA = "0xABB964")]
		private void DoStopUseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xABB9BC", Offset = "0xABB9BC", VA = "0xABB9BC")]
		public VRTK_InteractUse()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public struct InteractableObjectEventArgs
	{
		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;
	}
	[Token(Token = "0x200015F")]
	public delegate void InteractableObjectEventHandler(object sender, InteractableObjectEventArgs e);
	[Token(Token = "0x2000160")]
	public class VRTK_InteractableObject : MonoBehaviour
	{
		[Token(Token = "0x20003E3")]
		public enum GrabAttachType
		{
			[Token(Token = "0x4001930")]
			Fixed_Joint,
			[Token(Token = "0x4001931")]
			Spring_Joint,
			[Token(Token = "0x4001932")]
			Track_Object,
			[Token(Token = "0x4001933")]
			Rotator_Track,
			[Token(Token = "0x4001934")]
			Child_Of_Controller,
			[Token(Token = "0x4001935")]
			Climbable
		}

		[Token(Token = "0x20003E4")]
		public enum AllowedController
		{
			[Token(Token = "0x4001937")]
			Both,
			[Token(Token = "0x4001938")]
			Left_Only,
			[Token(Token = "0x4001939")]
			Right_Only
		}

		[Token(Token = "0x20003E5")]
		public enum ControllerHideMode
		{
			[Token(Token = "0x400193B")]
			Default,
			[Token(Token = "0x400193C")]
			OverrideHide,
			[Token(Token = "0x400193D")]
			OverrideDontHide
		}

		[Token(Token = "0x20003E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570A20", Offset = "0x570A20")]
		private sealed class <RegisterTeleportersAtEndOfFrame>d__120 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400193E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400193F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject <>4__this;

			[Token(Token = "0x17000216")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001808")]
				[Address(RVA = "0xABDEB0", Offset = "0xABDEB0", VA = "0xABDEB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000217")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600180A")]
				[Address(RVA = "0xABDF18", Offset = "0xABDF18", VA = "0xABDF18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001805")]
			[Address(RVA = "0xABDA20", Offset = "0xABDA20", VA = "0xABDA20")]
			[DebuggerHidden]
			public <RegisterTeleportersAtEndOfFrame>d__120(int <>1__state)
			{
			}

			[Token(Token = "0x6001806")]
			[Address(RVA = "0xABDCB4", Offset = "0xABDCB4", VA = "0xABDCB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001807")]
			[Address(RVA = "0xABDCB8", Offset = "0xABDCB8", VA = "0xABDCB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001809")]
			[Address(RVA = "0xABDEB8", Offset = "0xABDEB8", VA = "0xABDEB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570A30", Offset = "0x570A30")]
		private sealed class <StopUsingOnControllerChange>d__121 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject previousController;

			[Token(Token = "0x4001944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_InteractableObject <>4__this;

			[Token(Token = "0x17000218")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600180E")]
				[Address(RVA = "0xABE02C", Offset = "0xABE02C", VA = "0xABE02C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000219")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001810")]
				[Address(RVA = "0xABE094", Offset = "0xABE094", VA = "0xABE094", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600180B")]
			[Address(RVA = "0xABDA4C", Offset = "0xABDA4C", VA = "0xABDA4C")]
			[DebuggerHidden]
			public <StopUsingOnControllerChange>d__121(int <>1__state)
			{
			}

			[Token(Token = "0x600180C")]
			[Address(RVA = "0xABDF20", Offset = "0xABDF20", VA = "0xABDF20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600180D")]
			[Address(RVA = "0xABDF24", Offset = "0xABDF24", VA = "0xABDF24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600180F")]
			[Address(RVA = "0xABE034", Offset = "0xABE034", VA = "0xABE034", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570A40", Offset = "0x570A40")]
		private sealed class <ForceStopInteractingAtEndOfFrame>d__122 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject <>4__this;

			[Token(Token = "0x1700021A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001814")]
				[Address(RVA = "0xABDC44", Offset = "0xABDC44", VA = "0xABDC44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001816")]
				[Address(RVA = "0xABDCAC", Offset = "0xABDCAC", VA = "0xABDCAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001811")]
			[Address(RVA = "0xABDA78", Offset = "0xABDA78", VA = "0xABDA78")]
			[DebuggerHidden]
			public <ForceStopInteractingAtEndOfFrame>d__122(int <>1__state)
			{
			}

			[Token(Token = "0x6001812")]
			[Address(RVA = "0xABDBA0", Offset = "0xABDBA0", VA = "0xABDBA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001813")]
			[Address(RVA = "0xABDBA4", Offset = "0xABDBA4", VA = "0xABDBA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001815")]
			[Address(RVA = "0xABDC4C", Offset = "0xABDC4C", VA = "0xABDC4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AAFC", Offset = "0x57AAFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AAFC", Offset = "0x57AAFC")]
		public bool highlightOnTouch;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AB64", Offset = "0x57AB64")]
		public Color touchHighlightColor;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AB9C", Offset = "0x57AB9C")]
		public Vector2 rumbleOnTouch;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57ABD4", Offset = "0x57ABD4")]
		public AllowedController allowedTouchControllers;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AC0C", Offset = "0x57AC0C")]
		public ControllerHideMode hideControllerOnTouch;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AC44", Offset = "0x57AC44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AC44", Offset = "0x57AC44")]
		public bool isGrabbable;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57ACAC", Offset = "0x57ACAC")]
		public bool isDroppable;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57ACE4", Offset = "0x57ACE4")]
		public bool isSwappable;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AD1C", Offset = "0x57AD1C")]
		public bool holdButtonToGrab;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AD54", Offset = "0x57AD54")]
		public VRTK_ControllerEvents.ButtonAlias grabOverrideButton;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AD8C", Offset = "0x57AD8C")]
		public Vector2 rumbleOnGrab;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57ADC4", Offset = "0x57ADC4")]
		public AllowedController allowedGrabControllers;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57ADFC", Offset = "0x57ADFC")]
		public bool precisionSnap;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AE34", Offset = "0x57AE34")]
		public Transform rightSnapHandle;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AE6C", Offset = "0x57AE6C")]
		public Transform leftSnapHandle;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AEA4", Offset = "0x57AEA4")]
		public ControllerHideMode hideControllerOnGrab;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AEDC", Offset = "0x57AEDC")]
		public bool stayGrabbedOnTeleport;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57AF14", Offset = "0x57AF14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AF14", Offset = "0x57AF14")]
		public GrabAttachType grabAttachMechanic;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AF7C", Offset = "0x57AF7C")]
		public float detachThreshold;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AFB4", Offset = "0x57AFB4")]
		public float springJointStrength;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57AFEC", Offset = "0x57AFEC")]
		public float springJointDamper;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B024", Offset = "0x57B024")]
		public float throwMultiplier;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B05C", Offset = "0x57B05C")]
		public float onGrabCollisionDelay;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57B094", Offset = "0x57B094")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B094", Offset = "0x57B094")]
		public bool isUsable;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B0FC", Offset = "0x57B0FC")]
		public bool useOnlyIfGrabbed;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B134", Offset = "0x57B134")]
		public bool holdButtonToUse;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B16C", Offset = "0x57B16C")]
		public VRTK_ControllerEvents.ButtonAlias useOverrideButton;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B1A4", Offset = "0x57B1A4")]
		public bool pointerActivatesUseAction;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B1DC", Offset = "0x57B1DC")]
		public Vector2 rumbleOnUse;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B214", Offset = "0x57B214")]
		public AllowedController allowedUseControllers;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B24C", Offset = "0x57B24C")]
		public ControllerHideMode hideControllerOnUse;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public int usingState;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Rigidbody rb;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool autoRigidbody;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected List<GameObject> touchingObjects;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected GameObject grabbingObject;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected GameObject usingObject;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Transform grabbedSnapHandle;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected Transform trackPoint;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected bool customTrackPoint;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Transform originalControllerAttachPoint;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform previousParent;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected bool previousKinematicState;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		protected bool previousIsGrabbable;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
		protected bool forcedDropped;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
		protected bool forceDisabled;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected VRTK_BaseHighlighter objectHighlighter;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected bool autoHighlighter;

		[Token(Token = "0x14000056")]
		public event InteractableObjectEventHandler InteractableObjectTouched
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0xAB4E48", Offset = "0xAB4E48", VA = "0xAB4E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581254", Offset = "0x581254")]
			add
			{
			}
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0xAB5280", Offset = "0xAB5280", VA = "0xAB5280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581264", Offset = "0x581264")]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event InteractableObjectEventHandler InteractableObjectUntouched
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0xAB4EEC", Offset = "0xAB4EEC", VA = "0xAB4EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581274", Offset = "0x581274")]
			add
			{
			}
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0xAB5324", Offset = "0xAB5324", VA = "0xAB5324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581284", Offset = "0x581284")]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public event InteractableObjectEventHandler InteractableObjectGrabbed
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0xABB9C4", Offset = "0xABB9C4", VA = "0xABB9C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581294", Offset = "0x581294")]
			add
			{
			}
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0xABBA68", Offset = "0xABBA68", VA = "0xABBA68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5812A4", Offset = "0x5812A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public event InteractableObjectEventHandler InteractableObjectUngrabbed
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0xABBB0C", Offset = "0xABBB0C", VA = "0xABBB0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5812B4", Offset = "0x5812B4")]
			add
			{
			}
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0xABBBB0", Offset = "0xABBBB0", VA = "0xABBBB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5812C4", Offset = "0x5812C4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005A")]
		public event InteractableObjectEventHandler InteractableObjectUsed
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0xAB4D00", Offset = "0xAB4D00", VA = "0xAB4D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5812D4", Offset = "0x5812D4")]
			add
			{
			}
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0xAB5138", Offset = "0xAB5138", VA = "0xAB5138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5812E4", Offset = "0x5812E4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public event InteractableObjectEventHandler InteractableObjectUnused
		{
			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0xAB4DA4", Offset = "0xAB4DA4", VA = "0xAB4DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5812F4", Offset = "0x5812F4")]
			add
			{
			}
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0xAB51DC", Offset = "0xAB51DC", VA = "0xAB51DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581304", Offset = "0x581304")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xABBC54", Offset = "0xABBC54", VA = "0xABBC54", Slot = "4")]
		public virtual void OnInteractableObjectTouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xABBC74", Offset = "0xABBC74", VA = "0xABBC74", Slot = "5")]
		public virtual void OnInteractableObjectUntouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xABBC94", Offset = "0xABBC94", VA = "0xABBC94", Slot = "6")]
		public virtual void OnInteractableObjectGrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xABBCB4", Offset = "0xABBCB4", VA = "0xABBCB4", Slot = "7")]
		public virtual void OnInteractableObjectUngrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xABBCD4", Offset = "0xABBCD4", VA = "0xABBCD4", Slot = "8")]
		public virtual void OnInteractableObjectUsed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xABBCF4", Offset = "0xABBCF4", VA = "0xABBCF4", Slot = "9")]
		public virtual void OnInteractableObjectUnused(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xABBD14", Offset = "0xABBD14", VA = "0xABBD14")]
		public InteractableObjectEventArgs SetInteractableObjectEvent(GameObject interactingObject)
		{
			return default(InteractableObjectEventArgs);
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xAB8768", Offset = "0xAB8768", VA = "0xAB8768")]
		public bool CheckHideMode(bool defaultMode, ControllerHideMode overrideMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xABA3C8", Offset = "0xABA3C8", VA = "0xABA3C8")]
		public bool IsTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xAB39B0", Offset = "0xAB39B0", VA = "0xAB39B0")]
		public bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xABBD1C", Offset = "0xABBD1C", VA = "0xABBD1C")]
		public bool IsUsing()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xABBD8C", Offset = "0xABBD8C", VA = "0xABBD8C", Slot = "10")]
		public virtual void StartTouching(GameObject currentTouchingObject)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xABBE38", Offset = "0xABBE38", VA = "0xABBE38", Slot = "11")]
		public virtual void StopTouching(GameObject previousTouchingObject)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xABBF98", Offset = "0xABBF98", VA = "0xABBF98", Slot = "12")]
		public virtual void Grabbed(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xABC50C", Offset = "0xABC50C", VA = "0xABC50C", Slot = "13")]
		public virtual void Ungrabbed(GameObject previousGrabbingObject)
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xABC5A0", Offset = "0xABC5A0", VA = "0xABC5A0", Slot = "14")]
		public virtual void StartUsing(GameObject currentUsingObject)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xABC5D0", Offset = "0xABC5D0", VA = "0xABC5D0", Slot = "15")]
		public virtual void StopUsing(GameObject previousUsingObject)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xABC5FC", Offset = "0xABC5FC", VA = "0xABC5FC", Slot = "16")]
		public virtual void ToggleHighlight(bool toggle)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xABC638", Offset = "0xABC638", VA = "0xABC638", Slot = "17")]
		public virtual void ToggleHighlight(bool toggle, Color globalHighlightColor)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xAB8680", Offset = "0xAB8680", VA = "0xAB8680")]
		public void PauseCollisions()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xAB8BAC", Offset = "0xAB8BAC", VA = "0xAB8BAC")]
		public bool AttachIsTrackObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xAB8BC0", Offset = "0xAB8BC0", VA = "0xAB8BC0")]
		public bool AttachIsClimbObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xABC800", Offset = "0xABC800", VA = "0xABC800")]
		public bool AttachIsKinematicObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xABC810", Offset = "0xABC810", VA = "0xABC810")]
		public bool AttachIsStaticObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xAB67F4", Offset = "0xAB67F4", VA = "0xAB67F4")]
		public bool AttachIsUnthrowableObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xAB8504", Offset = "0xAB8504", VA = "0xAB8504")]
		public void ZeroVelocity()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xAB8420", Offset = "0xAB8420", VA = "0xAB8420")]
		public void SaveCurrentState()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xAB85DC", Offset = "0xAB85DC", VA = "0xAB85DC")]
		public void ToggleKinematic(bool state)
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xABC820", Offset = "0xABC820", VA = "0xABC820")]
		public GameObject GetGrabbingObject()
		{
			return null;
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xAB8280", Offset = "0xAB8280", VA = "0xAB8280")]
		public bool IsValidInteractableController(GameObject actualController, AllowedController controllerCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xABC828", Offset = "0xABC828", VA = "0xABC828")]
		public void ForceStopInteracting()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xABCB14", Offset = "0xABCB14", VA = "0xABCB14")]
		public void SetGrabbedSnapHandle(Transform handle)
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xABCB1C", Offset = "0xABCB1C", VA = "0xABCB1C")]
		public void RegisterTeleporters()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xABCBB8", Offset = "0xABCBB8", VA = "0xABCBB8", Slot = "18")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xABCCB0", Offset = "0xABCCB0", VA = "0xABCCB0", Slot = "19")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xABCCB4", Offset = "0xABCCB4", VA = "0xABCCB4", Slot = "20")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xABCE10", Offset = "0xABCE10", VA = "0xABCE10", Slot = "21")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xABD3C4", Offset = "0xABD3C4", VA = "0xABD3C4", Slot = "22")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xABD430", Offset = "0xABD430", VA = "0xABD430", Slot = "23")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xABD614", Offset = "0xABD614", VA = "0xABD614", Slot = "24")]
		protected virtual void OnJointBreak(float force)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xABD618", Offset = "0xABD618", VA = "0xABD618", Slot = "25")]
		protected virtual void LoadPreviousState()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xABD728", Offset = "0xABD728", VA = "0xABD728", Slot = "26")]
		protected virtual void InitialiseHighlighter()
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xABBFF8", Offset = "0xABBFF8", VA = "0xABBFF8")]
		private void ForceReleaseGrab()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xABD86C", Offset = "0xABD86C", VA = "0xABD86C")]
		private void UnpauseCollisions()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xABCCCC", Offset = "0xABCCCC", VA = "0xABCCCC")]
		private void CheckBreakDistance()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xABC1E0", Offset = "0xABC1E0", VA = "0xABC1E0")]
		private void SetTrackPoint(GameObject point)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xABC098", Offset = "0xABC098", VA = "0xABC098")]
		private void RemoveTrackPoint()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xABCEB8", Offset = "0xABCEB8", VA = "0xABCEB8")]
		private void FixedUpdateRotatorTrack()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xABCFD4", Offset = "0xABCFD4", VA = "0xABCFD4")]
		private void FixedUpdateTrackObject()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xABD918", Offset = "0xABD918", VA = "0xABD918")]
		private void OnTeleporting(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xABD948", Offset = "0xABD948", VA = "0xABD948")]
		private void OnTeleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xABCB48", Offset = "0xABCB48", VA = "0xABCB48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581314", Offset = "0x581314")]
		private IEnumerator RegisterTeleportersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xABBF1C", Offset = "0xABBF1C", VA = "0xABBF1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581378", Offset = "0x581378")]
		private IEnumerator StopUsingOnControllerChange(GameObject previousController)
		{
			return null;
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xABC8AC", Offset = "0xABC8AC", VA = "0xABC8AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5813DC", Offset = "0x5813DC")]
		private IEnumerator ForceStopInteractingAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xABC91C", Offset = "0xABC91C", VA = "0xABC91C")]
		private void ForceStopAllInteractions()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xABDAA4", Offset = "0xABDAA4", VA = "0xABDAA4")]
		public VRTK_InteractableObject()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class VRTK_ObjectAutoGrab : MonoBehaviour
	{
		[Token(Token = "0x20003E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570A50", Offset = "0x570A50")]
		private sealed class <AutoGrab>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400194A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ObjectAutoGrab <>4__this;

			[Token(Token = "0x1700021C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600181A")]
				[Address(RVA = "0xABFF9C", Offset = "0xABFF9C", VA = "0xABFF9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600181C")]
				[Address(RVA = "0xAC0004", Offset = "0xAC0004", VA = "0xAC0004", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001817")]
			[Address(RVA = "0xABFC44", Offset = "0xABFC44", VA = "0xABFC44")]
			[DebuggerHidden]
			public <AutoGrab>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001818")]
			[Address(RVA = "0xABFC78", Offset = "0xABFC78", VA = "0xABFC78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001819")]
			[Address(RVA = "0xABFC7C", Offset = "0xABFC7C", VA = "0xABFC7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600181B")]
			[Address(RVA = "0xABFFA4", Offset = "0xABFFA4", VA = "0xABFFA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B2F4", Offset = "0x57B2F4")]
		public VRTK_InteractableObject objectToGrab;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B32C", Offset = "0x57B32C")]
		public bool cloneGrabbedObject;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_InteractGrab controller;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VRTK_InteractableObject grabbableObject;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VRTK_InteractableObject previousClonedObject;

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xABFBA8", Offset = "0xABFBA8", VA = "0xABFBA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xABFBD4", Offset = "0xABFBD4", VA = "0xABFBD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581440", Offset = "0x581440")]
		private IEnumerator AutoGrab()
		{
			return null;
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xABFC70", Offset = "0xABFC70", VA = "0xABFC70")]
		public VRTK_ObjectAutoGrab()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public struct PlayerClimbEventArgs
	{
		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject target;
	}
	[Token(Token = "0x2000163")]
	public delegate void PlayerClimbEventHandler(object sender, PlayerClimbEventArgs e);
	[Token(Token = "0x2000164")]
	public class VRTK_PlayerClimb : MonoBehaviour
	{
		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B364", Offset = "0x57B364")]
		public bool usePlayerScale;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B39C", Offset = "0x57B39C")]
		public bool useGravity;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B3D4", Offset = "0x57B3D4")]
		public float safeZoneTeleportOffset;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform headCamera;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform controllerTransform;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 startControllerPosition;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 startPosition;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastGoodHeadsetPosition;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool headsetColliding;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool isClimbing;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VRTK_PlayerPresence playerPresence;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private VRTK_HeadsetFade headsetFade;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject climbingObject;

		[Token(Token = "0x1400005C")]
		public event PlayerClimbEventHandler PlayerClimbStarted
		{
			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0xAB35AC", Offset = "0xAB35AC", VA = "0xAB35AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5814A4", Offset = "0x5814A4")]
			add
			{
			}
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0xAB36F4", Offset = "0xAB36F4", VA = "0xAB36F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5814B4", Offset = "0x5814B4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event PlayerClimbEventHandler PlayerClimbEnded
		{
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0xAB3650", Offset = "0xAB3650", VA = "0xAB3650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5814C4", Offset = "0x5814C4")]
			add
			{
			}
			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0xAB3798", Offset = "0xAB3798", VA = "0xAB3798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5814D4", Offset = "0x5814D4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xAC09D0", Offset = "0xAC09D0", VA = "0xAC09D0")]
		private void OnPlayerClimbStarted(PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xAC09F4", Offset = "0xAC09F4", VA = "0xAC09F4")]
		private void OnPlayerClimbEnded(PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xAC0A18", Offset = "0xAC0A18", VA = "0xAC0A18")]
		private PlayerClimbEventArgs SetPlayerClimbEvent(uint controllerIndex, GameObject target)
		{
			return default(PlayerClimbEventArgs);
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xAC0A24", Offset = "0xAC0A24", VA = "0xAC0A24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xAC0C00", Offset = "0xAC0C00", VA = "0xAC0C00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xAC0C70", Offset = "0xAC0C70", VA = "0xAC0C70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xAC0C08", Offset = "0xAC0C08", VA = "0xAC0C08")]
		private void InitListeners(bool state)
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xAC1174", Offset = "0xAC1174", VA = "0xAC1174")]
		private void InitTeleportListener(bool state)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xAC1270", Offset = "0xAC1270", VA = "0xAC1270")]
		private void InitCollisionFadeListener(bool state)
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xAC138C", Offset = "0xAC138C", VA = "0xAC138C")]
		private Vector3 GetPosition(Transform objTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xAC1540", Offset = "0xAC1540", VA = "0xAC1540")]
		private void OnGrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xAC1798", Offset = "0xAC1798", VA = "0xAC1798")]
		private void OnUngrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xAC1954", Offset = "0xAC1954", VA = "0xAC1954")]
		private void OnTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xAC199C", Offset = "0xAC199C", VA = "0xAC199C")]
		private void OnHeadsetCollisionDetected(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xAC19EC", Offset = "0xAC19EC", VA = "0xAC19EC")]
		private void OnHeadsetCollisionEnded(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xAC0CA4", Offset = "0xAC0CA4", VA = "0xAC0CA4")]
		private void Ungrab(bool carryMomentum, uint controllerIndex, GameObject target)
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xAC18BC", Offset = "0xAC18BC", VA = "0xAC18BC")]
		private bool IsActiveClimbingController(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xAC166C", Offset = "0xAC166C", VA = "0xAC166C")]
		private bool IsClimbableObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xAC1A2C", Offset = "0xAC1A2C", VA = "0xAC1A2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xAC0FDC", Offset = "0xAC0FDC", VA = "0xAC0FDC")]
		private void InitControllerListeners(GameObject controller, bool state)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xAC1B78", Offset = "0xAC1B78", VA = "0xAC1B78")]
		public VRTK_PlayerClimb()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public struct PlayerPresenceEventArgs
	{
		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float fallDistance;
	}
	[Token(Token = "0x2000166")]
	public delegate void PlayerPresenceEventHandler(object sender, PlayerPresenceEventArgs e);
	[Token(Token = "0x2000167")]
	public class VRTK_PlayerPresence : MonoBehaviour
	{
		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570A60", Offset = "0x570A60")]
		private sealed class <WaitForHeadsetCollision>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400194B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400194C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400194D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_PlayerPresence <>4__this;

			[Token(Token = "0x400194E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool state;

			[Token(Token = "0x1700021E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001820")]
				[Address(RVA = "0xAC2E0C", Offset = "0xAC2E0C", VA = "0xAC2E0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001822")]
				[Address(RVA = "0xAC2E74", Offset = "0xAC2E74", VA = "0xAC2E74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600181D")]
			[Address(RVA = "0xAC25AC", Offset = "0xAC25AC", VA = "0xAC25AC")]
			[DebuggerHidden]
			public <WaitForHeadsetCollision>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x600181E")]
			[Address(RVA = "0xAC2D64", Offset = "0xAC2D64", VA = "0xAC2D64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600181F")]
			[Address(RVA = "0xAC2D68", Offset = "0xAC2D68", VA = "0xAC2D68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001821")]
			[Address(RVA = "0xAC2E14", Offset = "0xAC2E14", VA = "0xAC2E14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B42C", Offset = "0x57B42C")]
		public float headsetYOffset;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B464", Offset = "0x57B464")]
		public bool ignoreGrabbedCollisions;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B49C", Offset = "0x57B49C")]
		public bool resetPositionOnCollision;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B4D4", Offset = "0x57B4D4")]
		public bool fallingPhysicsOnly;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform headset;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody rb;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CapsuleCollider presenceCollider;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 lastGoodPosition;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool lastGoodPositionSet;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float highestHeadsetY;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float crouchMargin;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastPlayAreaY;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float fallStartHeight;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isFalling;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool customRigidBody;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool customCollider;

		[Token(Token = "0x1400005E")]
		public event PlayerPresenceEventHandler PresenceFallStarted
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0xAC1B9C", Offset = "0xAC1B9C", VA = "0xAC1B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5814E4", Offset = "0x5814E4")]
			add
			{
			}
			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0xAC1C40", Offset = "0xAC1C40", VA = "0xAC1C40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5814F4", Offset = "0x5814F4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005F")]
		public event PlayerPresenceEventHandler PresenceFallEnded
		{
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0xAC1CE4", Offset = "0xAC1CE4", VA = "0xAC1CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581504", Offset = "0x581504")]
			add
			{
			}
			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0xAC1D88", Offset = "0xAC1D88", VA = "0xAC1D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581514", Offset = "0x581514")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xAB2E60", Offset = "0xAB2E60", VA = "0xAB2E60")]
		public void SetFallingPhysicsOnlyParams(bool falling)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xAB3BD8", Offset = "0xAB3BD8", VA = "0xAB3BD8")]
		public bool IsFalling()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xAB4210", Offset = "0xAB4210", VA = "0xAB4210")]
		public void StartPhysicsFall(Vector3 velocity)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xAC171C", Offset = "0xAC171C", VA = "0xAC171C")]
		public void StopPhysicsFall()
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xAC1E40", Offset = "0xAC1E40", VA = "0xAC1E40")]
		private void OnPresenceFallStarted(PlayerPresenceEventArgs e)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xAC1E58", Offset = "0xAC1E58", VA = "0xAC1E58")]
		private void OnPresenceFallEnded(PlayerPresenceEventArgs e)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xAC1E3C", Offset = "0xAC1E3C", VA = "0xAC1E3C")]
		private PlayerPresenceEventArgs SetPlayerPhysicsEvent(float fallDistance)
		{
			return default(PlayerPresenceEventArgs);
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xAC1E70", Offset = "0xAC1E70", VA = "0xAC1E70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xAC1EA4", Offset = "0xAC1EA4", VA = "0xAC1EA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xAC23A0", Offset = "0xAC23A0", VA = "0xAC23A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xAC2158", Offset = "0xAC2158", VA = "0xAC2158")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581524", Offset = "0x581524")]
		private IEnumerator WaitForHeadsetCollision(bool state)
		{
			return null;
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xAC24B0", Offset = "0xAC24B0", VA = "0xAC24B0")]
		private void InitHeadsetListeners(bool state)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xAC25D8", Offset = "0xAC25D8", VA = "0xAC25D8")]
		private void OnGrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xAC275C", Offset = "0xAC275C", VA = "0xAC275C")]
		private void OnUngrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xAC268C", Offset = "0xAC268C", VA = "0xAC268C")]
		private void IgnoreCollisions(Collider[] colliders, bool state)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xAC2854", Offset = "0xAC2854", VA = "0xAC2854")]
		private void OnHeadsetCollision(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xAC1F1C", Offset = "0xAC1F1C", VA = "0xAC1F1C")]
		private void CreateCollider()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xAC23F8", Offset = "0xAC23F8", VA = "0xAC23F8")]
		private void DestroyCollider()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xAC28AC", Offset = "0xAC28AC", VA = "0xAC28AC")]
		private void TogglePhysics(bool state)
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xAC1E34", Offset = "0xAC1E34", VA = "0xAC1E34")]
		private void EnablePhysics()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xAC1E2C", Offset = "0xAC1E2C", VA = "0xAC1E2C")]
		private void DisablePhysics()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xAC2990", Offset = "0xAC2990", VA = "0xAC2990")]
		private void UpdateCollider()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xAC2ACC", Offset = "0xAC2ACC", VA = "0xAC2ACC")]
		private void SetHeadsetY()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xAC2C04", Offset = "0xAC2C04", VA = "0xAC2C04")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xAC2C28", Offset = "0xAC2C28", VA = "0xAC2C28")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xAC21DC", Offset = "0xAC21DC", VA = "0xAC21DC")]
		private void InitControllerListeners(GameObject controller, bool state)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xAC2D40", Offset = "0xAC2D40", VA = "0xAC2D40")]
		public VRTK_PlayerPresence()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class VRTK_RoomExtender : MonoBehaviour
	{
		[Token(Token = "0x20003EB")]
		public enum MovementFunction
		{
			[Token(Token = "0x4001950")]
			Nonlinear,
			[Token(Token = "0x4001951")]
			LinearDirect
		}

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B52C", Offset = "0x57B52C")]
		public MovementFunction movementFunction;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B564", Offset = "0x57B564")]
		public bool additionalMovementEnabled;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B59C", Offset = "0x57B59C")]
		public bool additionalMovementEnabledOnButtonPress;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B5D4", Offset = "0x57B5D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B5D4", Offset = "0x57B5D4")]
		public float additionalMovementMultiplier;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B628", Offset = "0x57B628")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57B628", Offset = "0x57B628")]
		public float headZoneRadius;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B67C", Offset = "0x57B67C")]
		public Transform debugTransform;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Vector3 relativeMovementOfCameraRig;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform movementTransform;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform cameraRig;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 headCirclePosition;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Vector3 lastPosition;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 lastMovement;

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xAC2E7C", Offset = "0xAC2E7C", VA = "0xAC2E7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xAC3168", Offset = "0xAC3168", VA = "0xAC3168")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xAC32B4", Offset = "0xAC32B4", VA = "0xAC32B4")]
		private void Move(Vector3 movement)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xAC3184", Offset = "0xAC3184", VA = "0xAC3184")]
		private void MoveHeadCircle()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xAC3030", Offset = "0xAC3030", VA = "0xAC3030")]
		private void MoveHeadCircleNonLinearDrift()
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xAC3498", Offset = "0xAC3498", VA = "0xAC3498")]
		private void UpdateLastMovement()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xAC357C", Offset = "0xAC357C", VA = "0xAC357C")]
		public VRTK_RoomExtender()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class VRTK_SimplePointer : VRTK_WorldPointer
	{
		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B6C4", Offset = "0x57B6C4")]
		public float pointerThickness;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B6FC", Offset = "0x57B6FC")]
		public float pointerLength;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B734", Offset = "0x57B734")]
		public bool showPointerTip;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B76C", Offset = "0x57B76C")]
		public GameObject customPointerCursor;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B7A4", Offset = "0x57B7A4")]
		public LayerMask layersToIgnore;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private GameObject pointerHolder;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GameObject pointer;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GameObject pointerTip;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 pointerTipScale;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Material customPointerMaterial;

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x787F6C", Offset = "0x787F6C", VA = "0x787F6C", Slot = "10")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x788168", Offset = "0x788168", VA = "0x788168", Slot = "11")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x7883F0", Offset = "0x7883F0", VA = "0x7883F0", Slot = "17")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x7889AC", Offset = "0x7889AC", VA = "0x7889AC", Slot = "18")]
		protected override void InitPointer()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x788F0C", Offset = "0x788F0C", VA = "0x788F0C", Slot = "27")]
		protected override void SetPointerMaterial()
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x7890C0", Offset = "0x7890C0", VA = "0x7890C0", Slot = "26")]
		protected override void TogglePointer(bool state)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x7887C4", Offset = "0x7887C4", VA = "0x7887C4")]
		private void SetPointerTransform(float setLength, float setThicknes)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x7885C4", Offset = "0x7885C4", VA = "0x7885C4")]
		private float GetPointerBeamLength(bool hasRayHit, RaycastHit collidedWith)
		{
			return default(float);
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x789780", Offset = "0x789780", VA = "0x789780")]
		public VRTK_SimplePointer()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class VRTK_Simulator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003EC")]
		public class Keys
		{
			[Token(Token = "0x4001952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode forward;

			[Token(Token = "0x4001953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public KeyCode backward;

			[Token(Token = "0x4001954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyCode strafeLeft;

			[Token(Token = "0x4001955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public KeyCode strafeRight;

			[Token(Token = "0x4001956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode left;

			[Token(Token = "0x4001957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public KeyCode right;

			[Token(Token = "0x4001958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KeyCode up;

			[Token(Token = "0x4001959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public KeyCode down;

			[Token(Token = "0x400195A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public KeyCode reset;

			[Token(Token = "0x6001823")]
			[Address(RVA = "0x789E68", Offset = "0x789E68", VA = "0x789E68")]
			public Keys()
			{
			}
		}

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B7DC", Offset = "0x57B7DC")]
		public Keys keys;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B814", Offset = "0x57B814")]
		public bool onlyInEditor;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B84C", Offset = "0x57B84C")]
		public float stepSize;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B884", Offset = "0x57B884")]
		public Transform camStart;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform cam;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 initialPosition;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion initialRotation;

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x7898EC", Offset = "0x7898EC", VA = "0x7898EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x789AE8", Offset = "0x789AE8", VA = "0x789AE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x789E14", Offset = "0x789E14", VA = "0x789E14")]
		private Vector3 overwriteY(Vector3 vector, float value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x789E4C", Offset = "0x789E4C", VA = "0x789E4C")]
		public VRTK_Simulator()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class VRTK_TagOrScriptPolicyList : MonoBehaviour
	{
		[Token(Token = "0x20003ED")]
		public enum OperationTypes
		{
			[Token(Token = "0x400195C")]
			Ignore,
			[Token(Token = "0x400195D")]
			Include
		}

		[Token(Token = "0x20003EE")]
		public enum CheckTypes
		{
			[Token(Token = "0x400195F")]
			Tag,
			[Token(Token = "0x4001960")]
			Script,
			[Token(Token = "0x4001961")]
			Tag_Or_Script
		}

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B8BC", Offset = "0x57B8BC")]
		public OperationTypes operation;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B8F4", Offset = "0x57B8F4")]
		public CheckTypes checkType;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B92C", Offset = "0x57B92C")]
		public List<string> identifiers;

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x78B720", Offset = "0x78B720", VA = "0x78B720")]
		public bool Find(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x78B814", Offset = "0x78B814", VA = "0x78B814")]
		private bool ScriptCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x78B97C", Offset = "0x78B97C", VA = "0x78B97C")]
		private bool TagCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x78B730", Offset = "0x78B730", VA = "0x78B730")]
		private bool TypeCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x78BA08", Offset = "0x78BA08", VA = "0x78BA08")]
		public VRTK_TagOrScriptPolicyList()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class VRTK_TeleportDisableOnHeadsetCollision : MonoBehaviour
	{
		[Token(Token = "0x20003EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570A70", Offset = "0x570A70")]
		private sealed class <EnableAtEndOfFrame>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TeleportDisableOnHeadsetCollision <>4__this;

			[Token(Token = "0x17000220")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001827")]
				[Address(RVA = "0x78BEEC", Offset = "0x78BEEC", VA = "0x78BEEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000221")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001829")]
				[Address(RVA = "0x78BF54", Offset = "0x78BF54", VA = "0x78BF54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001824")]
			[Address(RVA = "0x78BB7C", Offset = "0x78BB7C", VA = "0x78BB7C")]
			[DebuggerHidden]
			public <EnableAtEndOfFrame>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001825")]
			[Address(RVA = "0x78BD28", Offset = "0x78BD28", VA = "0x78BD28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001826")]
			[Address(RVA = "0x78BD2C", Offset = "0x78BD2C", VA = "0x78BD2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001828")]
			[Address(RVA = "0x78BEF4", Offset = "0x78BEF4", VA = "0x78BEF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_BasicTeleport basicTeleport;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_HeadsetCollision headset;

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x78BAA0", Offset = "0x78BAA0", VA = "0x78BAA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x78BB0C", Offset = "0x78BB0C", VA = "0x78BB0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581588", Offset = "0x581588")]
		private IEnumerator EnableAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x78BBA8", Offset = "0x78BBA8", VA = "0x78BBA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x78BCE4", Offset = "0x78BCE4", VA = "0x78BCE4")]
		private void DisableTeleport(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x78BD00", Offset = "0x78BD00", VA = "0x78BD00")]
		private void EnableTeleport(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x78BD20", Offset = "0x78BD20", VA = "0x78BD20")]
		public VRTK_TeleportDisableOnHeadsetCollision()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public class VRTK_TouchpadWalking : MonoBehaviour
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B964", Offset = "0x57B964")]
		[SerializeField]
		private bool leftController;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B9B0", Offset = "0x57B9B0")]
		[SerializeField]
		private bool rightController;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57B9FC", Offset = "0x57B9FC")]
		public float maxWalkSpeed;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BA34", Offset = "0x57BA34")]
		public float deceleration;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BA6C", Offset = "0x57BA6C")]
		public VRTK_ControllerEvents.ButtonAlias moveOnButtonPress;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BAA4", Offset = "0x57BAA4")]
		public VRTK_DeviceFinder.Devices deviceForDirection;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject controllerLeftHand;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject controllerRightHand;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 touchAxis;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float movementSpeed;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float strafeSpeed;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool leftSubscribed;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool rightSubscribed;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ControllerInteractionEventHandler touchpadAxisChanged;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ControllerInteractionEventHandler touchpadUntouched;

		[Token(Token = "0x170000B7")]
		public bool LeftController
		{
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x78BF5C", Offset = "0x78BF5C", VA = "0x78BF5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x78BF64", Offset = "0x78BF64", VA = "0x78BF64")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public bool RightController
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x78C0A8", Offset = "0x78C0A8", VA = "0x78C0A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x78C0B0", Offset = "0x78C0B0", VA = "0x78C0B0")]
			set
			{
			}
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x78C0C4", Offset = "0x78C0C4", VA = "0x78C0C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x78C17C", Offset = "0x78C17C", VA = "0x78C17C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x78C1C0", Offset = "0x78C1C0", VA = "0x78C1C0")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x78C2AC", Offset = "0x78C2AC", VA = "0x78C2AC")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x78C318", Offset = "0x78C318", VA = "0x78C318")]
		private void CalculateSpeed(ref float speed, float inputValue)
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x78C334", Offset = "0x78C334", VA = "0x78C334")]
		private void Decelerate(ref float speed)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x78C44C", Offset = "0x78C44C", VA = "0x78C44C")]
		private void Move()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x78C6BC", Offset = "0x78C6BC", VA = "0x78C6BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x78BF78", Offset = "0x78BF78", VA = "0x78BF78")]
		private void SetControllerListeners(GameObject controller)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x78C72C", Offset = "0x78C72C", VA = "0x78C72C")]
		private void ToggleControllerListeners(GameObject controller, bool toggle, ref bool subscribed)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x78C8A0", Offset = "0x78C8A0", VA = "0x78C8A0")]
		public VRTK_TouchpadWalking()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public struct UIPointerEventArgs
	{
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool isActive;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject currentTarget;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject previousTarget;
	}
	[Token(Token = "0x200016F")]
	public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
	[Token(Token = "0x2000170")]
	public class VRTK_UIPointer : MonoBehaviour
	{
		[Token(Token = "0x20003F0")]
		public enum ActivationMethods
		{
			[Token(Token = "0x4001966")]
			Hold_Button,
			[Token(Token = "0x4001967")]
			Toggle_Button,
			[Token(Token = "0x4001968")]
			Always_On
		}

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BADC", Offset = "0x57BADC")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BB14", Offset = "0x57BB14")]
		public ActivationMethods activationMode;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BB4C", Offset = "0x57BB4C")]
		public bool attemptClickOnDeactivate;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BB84", Offset = "0x57BB84")]
		public string ignoreCanvasWithTagOrClass;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BBBC", Offset = "0x57BBBC")]
		public VRTK_TagOrScriptPolicyList canvasTagOrScriptListPolicy;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public PointerEventData pointerEventData;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public GameObject hoveringElement;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public GameObject controllerRenderModel;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool pointerClicked;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool beamEnabledState;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool lastPointerPressState;

		[Token(Token = "0x14000060")]
		public event UIPointerEventHandler UIPointerElementEnter
		{
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0x78D9CC", Offset = "0x78D9CC", VA = "0x78D9CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5815EC", Offset = "0x5815EC")]
			add
			{
			}
			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0x78DA70", Offset = "0x78DA70", VA = "0x78DA70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5815FC", Offset = "0x5815FC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000061")]
		public event UIPointerEventHandler UIPointerElementExit
		{
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0x78DB14", Offset = "0x78DB14", VA = "0x78DB14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58160C", Offset = "0x58160C")]
			add
			{
			}
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x78DBB8", Offset = "0x78DBB8", VA = "0x78DBB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58161C", Offset = "0x58161C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x78DC5C", Offset = "0x78DC5C", VA = "0x78DC5C", Slot = "4")]
		public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x78DCA0", Offset = "0x78DCA0", VA = "0x78DCA0", Slot = "5")]
		public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x78DD78", Offset = "0x78DD78", VA = "0x78DD78")]
		public UIPointerEventArgs SetUIPointerEvent(GameObject currentTarget, [Optional] GameObject lastTarget)
		{
			return default(UIPointerEventArgs);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x78DE8C", Offset = "0x78DE8C", VA = "0x78DE8C")]
		public VRTK_EventSystemVRInput SetEventSystem(EventSystem eventSystem)
		{
			return null;
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x78E004", Offset = "0x78E004", VA = "0x78E004")]
		public void SetWorldCanvas(Canvas canvas)
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x78DE00", Offset = "0x78DE00", VA = "0x78DE00")]
		public bool PointerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x78E334", Offset = "0x78E334", VA = "0x78E334")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x78E428", Offset = "0x78E428", VA = "0x78E428")]
		private void ConfigureEventSystem()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x78E548", Offset = "0x78E548", VA = "0x78E548")]
		private void ConfigureWorldCanvases()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x78E614", Offset = "0x78E614", VA = "0x78E614")]
		public VRTK_UIPointer()
		{
		}
	}
}
namespace VRTK.Highlighters
{
	[Token(Token = "0x2000171")]
	public abstract class VRTK_BaseHighlighter : MonoBehaviour
	{
		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BC44", Offset = "0x57BC44")]
		public bool active;

		[Token(Token = "0x6000BD8")]
		public abstract void Initialise([Optional] Color? color, [Optional] Dictionary<string, object> options);

		[Token(Token = "0x6000BD9")]
		public abstract void Highlight([Optional] Color? color, float duration = 0f);

		[Token(Token = "0x6000BDA")]
		public abstract void Unhighlight([Optional] Color? color, float duration = 0f);

		[Token(Token = "0x6000BDB")]
		public virtual T GetOption<T>(Dictionary<string, object> options, string key)
		{
			return (T)null;
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x84E314", Offset = "0x84E314", VA = "0x84E314")]
		protected VRTK_BaseHighlighter()
		{
		}
	}
	[Token(Token = "0x2000172")]
	public class VRTK_MaterialColorSwapHighlighter : VRTK_BaseHighlighter
	{
		[Token(Token = "0x20003F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570A80", Offset = "0x570A80")]
		private sealed class <CycleColor>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400196B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material material;

			[Token(Token = "0x400196C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startColor;

			[Token(Token = "0x400196D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endColor;

			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x400196F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public VRTK_MaterialColorSwapHighlighter <>4__this;

			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000222")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600182D")]
				[Address(RVA = "0x84F058", Offset = "0x84F058", VA = "0x84F058", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000223")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600182F")]
				[Address(RVA = "0x84F0C0", Offset = "0x84F0C0", VA = "0x84F0C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600182A")]
			[Address(RVA = "0x84EDBC", Offset = "0x84EDBC", VA = "0x84EDBC")]
			[DebuggerHidden]
			public <CycleColor>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600182B")]
			[Address(RVA = "0x84EEA0", Offset = "0x84EEA0", VA = "0x84EEA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600182C")]
			[Address(RVA = "0x84EEA4", Offset = "0x84EEA4", VA = "0x84EEA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600182E")]
			[Address(RVA = "0x84F060", Offset = "0x84F060", VA = "0x84F060", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BC7C", Offset = "0x57BC7C")]
		public float emissionDarken;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, Material[]> originalSharedRendererMaterials;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, Material[]> originalRendererMaterials;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, Coroutine> faderRoutines;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool resetMainTexture;

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x84E324", Offset = "0x84E324", VA = "0x84E324", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x84E5D0", Offset = "0x84E5D0", VA = "0x84E5D0", Slot = "5")]
		public override void Highlight(Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x84EA14", Offset = "0x84EA14", VA = "0x84EA14", Slot = "6")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x84E434", Offset = "0x84E434", VA = "0x84E434")]
		private void StoreOriginalMaterials()
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x84E660", Offset = "0x84E660", VA = "0x84E660")]
		private void ChangeToHighlightColor(Color color, float duration = 0f)
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x84EC54", Offset = "0x84EC54", VA = "0x84EC54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58162C", Offset = "0x58162C")]
		private IEnumerator CycleColor(Material material, Color startColor, Color endColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x84ED2C", Offset = "0x84ED2C", VA = "0x84ED2C")]
		private Color Darken(Color color, float percent)
		{
			return default(Color);
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x84EDE8", Offset = "0x84EDE8", VA = "0x84EDE8")]
		private float ColorPercent(float value, float percent)
		{
			return default(float);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x84EE88", Offset = "0x84EE88", VA = "0x84EE88")]
		public VRTK_MaterialColorSwapHighlighter()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class VRTK_OutlineObjectCopyHighlighter : VRTK_BaseHighlighter
	{
		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BCB4", Offset = "0x57BCB4")]
		public float thickness;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BCEC", Offset = "0x57BCEC")]
		public GameObject customOutlineModel;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BD24", Offset = "0x57BD24")]
		public string customOutlineModelPath;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material stencilOutline;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject highlightModel;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] copyComponents;

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x84F0C8", Offset = "0x84F0C8", VA = "0x84F0C8", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x84F860", Offset = "0x84F860", VA = "0x84F860", Slot = "5")]
		public override void Highlight(Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x84F958", Offset = "0x84F958", VA = "0x84F958", Slot = "6")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x84F9EC", Offset = "0x84F9EC", VA = "0x84F9EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x84F1F0", Offset = "0x84F1F0", VA = "0x84F1F0")]
		private void SetOptions([Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x84F35C", Offset = "0x84F35C", VA = "0x84F35C")]
		private void CreateHighlightModel()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x84FB60", Offset = "0x84FB60", VA = "0x84FB60")]
		public VRTK_OutlineObjectCopyHighlighter()
		{
		}
	}
}
namespace VRTK.UnityEventHelper
{
	[Token(Token = "0x2000174")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F4B0", Offset = "0x56F4B0")]
	public class VRTK_BasicTeleport_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F2")]
		public class UnityObjectEvent : UnityEvent<object, DestinationMarkerEventArgs>
		{
			[Token(Token = "0x6001830")]
			[Address(RVA = "0x854C24", Offset = "0x854C24", VA = "0x854C24")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_BasicTeleport bt;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnTeleporting;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnTeleported;

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x85480C", Offset = "0x85480C", VA = "0x85480C")]
		private void SetBasicTeleport()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x85489C", Offset = "0x85489C", VA = "0x85489C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x8549DC", Offset = "0x8549DC", VA = "0x8549DC")]
		private void Teleporting(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x854A78", Offset = "0x854A78", VA = "0x854A78")]
		private void Teleported(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x854B14", Offset = "0x854B14", VA = "0x854B14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x854C1C", Offset = "0x854C1C", VA = "0x854C1C")]
		public VRTK_BasicTeleport_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F514", Offset = "0x56F514")]
	public class VRTK_ControllerActions_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F3")]
		public class UnityObjectEvent : UnityEvent<object, ControllerActionsEventArgs>
		{
			[Token(Token = "0x6001831")]
			[Address(RVA = "0x855044", Offset = "0x855044", VA = "0x855044")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_ControllerActions ca;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnControllerModelVisible;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnControllerModelInvisible;

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x854C74", Offset = "0x854C74", VA = "0x854C74")]
		private void SetControllerAction()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x854D04", Offset = "0x854D04", VA = "0x854D04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x854E4C", Offset = "0x854E4C", VA = "0x854E4C")]
		private void ControllerModelVisible(object o, ControllerActionsEventArgs e)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x854EBC", Offset = "0x854EBC", VA = "0x854EBC")]
		private void ControllerModelInvisible(object o, ControllerActionsEventArgs e)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x854F2C", Offset = "0x854F2C", VA = "0x854F2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x85503C", Offset = "0x85503C", VA = "0x85503C")]
		public VRTK_ControllerActions_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F578", Offset = "0x56F578")]
	public class VRTK_ControllerEvents_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F4")]
		public class UnityObjectEvent : UnityEvent<object, ControllerInteractionEventArgs>
		{
			[Token(Token = "0x6001832")]
			[Address(RVA = "0x857400", Offset = "0x857400", VA = "0x857400")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_ControllerEvents ce;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnTriggerPressed;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnTriggerReleased;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityObjectEvent OnTriggerTouchStart;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityObjectEvent OnTriggerTouchEnd;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityObjectEvent OnTriggerHairlineStart;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityObjectEvent OnTriggerHairlineEnd;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityObjectEvent OnTriggerClicked;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityObjectEvent OnTriggerUnclicked;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityObjectEvent OnTriggerAxisChanged;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityObjectEvent OnApplicationMenuPressed;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityObjectEvent OnApplicationMenuReleased;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityObjectEvent OnGripPressed;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityObjectEvent OnGripReleased;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityObjectEvent OnTouchpadPressed;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityObjectEvent OnTouchpadReleased;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityObjectEvent OnTouchpadTouchStart;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityObjectEvent OnTouchpadTouchEnd;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityObjectEvent OnTouchpadAxisChanged;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityObjectEvent OnAliasPointerOn;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UnityObjectEvent OnAliasPointerOff;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UnityObjectEvent OnAliasPointerSet;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UnityObjectEvent OnAliasGrabOn;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public UnityObjectEvent OnAliasGrabOff;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public UnityObjectEvent OnAliasUseOn;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public UnityObjectEvent OnAliasUseOff;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public UnityObjectEvent OnAliasUIClickOn;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public UnityObjectEvent OnAliasUIClickOff;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public UnityObjectEvent OnAliasMenuOn;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public UnityObjectEvent OnAliasMenuOff;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public UnityObjectEvent OnControllerEnabled;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public UnityObjectEvent OnControllerDisabled;

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x855094", Offset = "0x855094", VA = "0x855094")]
		private void SetControllerEvents()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x855124", Offset = "0x855124", VA = "0x855124")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x855938", Offset = "0x855938", VA = "0x855938")]
		private void TriggerPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x8559D4", Offset = "0x8559D4", VA = "0x8559D4")]
		private void TriggerReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x855A70", Offset = "0x855A70", VA = "0x855A70")]
		private void TriggerTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x855B0C", Offset = "0x855B0C", VA = "0x855B0C")]
		private void TriggerTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x855BA8", Offset = "0x855BA8", VA = "0x855BA8")]
		private void TriggerHairlineStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x855C44", Offset = "0x855C44", VA = "0x855C44")]
		private void TriggerHairlineEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x855CE0", Offset = "0x855CE0", VA = "0x855CE0")]
		private void TriggerClicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x855D7C", Offset = "0x855D7C", VA = "0x855D7C")]
		private void TriggerUnclicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x855E18", Offset = "0x855E18", VA = "0x855E18")]
		private void TriggerAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x855EB4", Offset = "0x855EB4", VA = "0x855EB4")]
		private void ApplicationMenuPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x855F50", Offset = "0x855F50", VA = "0x855F50")]
		private void ApplicationMenuReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x855FEC", Offset = "0x855FEC", VA = "0x855FEC")]
		private void GripPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x856088", Offset = "0x856088", VA = "0x856088")]
		private void GripReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x856124", Offset = "0x856124", VA = "0x856124")]
		private void TouchpadPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x8561C0", Offset = "0x8561C0", VA = "0x8561C0")]
		private void TouchpadReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x85625C", Offset = "0x85625C", VA = "0x85625C")]
		private void TouchpadTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x8562F8", Offset = "0x8562F8", VA = "0x8562F8")]
		private void TouchpadTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x856394", Offset = "0x856394", VA = "0x856394")]
		private void TouchpadAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x856430", Offset = "0x856430", VA = "0x856430")]
		private void AliasPointerOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x8564CC", Offset = "0x8564CC", VA = "0x8564CC")]
		private void AliasPointerOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x856568", Offset = "0x856568", VA = "0x856568")]
		private void AliasPointerSet(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x856604", Offset = "0x856604", VA = "0x856604")]
		private void AliasGrabOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x8566A0", Offset = "0x8566A0", VA = "0x8566A0")]
		private void AliasGrabOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x85673C", Offset = "0x85673C", VA = "0x85673C")]
		private void AliasUseOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x8567D8", Offset = "0x8567D8", VA = "0x8567D8")]
		private void AliasUseOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x856874", Offset = "0x856874", VA = "0x856874")]
		private void AliasUIClickOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x856910", Offset = "0x856910", VA = "0x856910")]
		private void AliasUIClickOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x8569AC", Offset = "0x8569AC", VA = "0x8569AC")]
		private void AliasMenuOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x856A48", Offset = "0x856A48", VA = "0x856A48")]
		private void AliasMenuOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x856AE4", Offset = "0x856AE4", VA = "0x856AE4")]
		private void ControllerEnabled(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x856B80", Offset = "0x856B80", VA = "0x856B80")]
		private void ControllerDisabled(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x856C1C", Offset = "0x856C1C", VA = "0x856C1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x8573F8", Offset = "0x8573F8", VA = "0x8573F8")]
		public VRTK_ControllerEvents_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F5DC", Offset = "0x56F5DC")]
	public class VRTK_DashTeleport_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F5")]
		public class UnityObjectEvent : UnityEvent<object, DashTeleportEventArgs>
		{
			[Token(Token = "0x6001833")]
			[Address(RVA = "0x857820", Offset = "0x857820", VA = "0x857820")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_DashTeleport dt;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnWillDashThruObjects;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnDashedThruObjects;

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x857450", Offset = "0x857450", VA = "0x857450")]
		private void SetDashTeleport()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x8574E0", Offset = "0x8574E0", VA = "0x8574E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x857628", Offset = "0x857628", VA = "0x857628")]
		private void WillDashThruObjects(object o, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x857698", Offset = "0x857698", VA = "0x857698")]
		private void DashedThruObjects(object o, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x857708", Offset = "0x857708", VA = "0x857708")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x857818", Offset = "0x857818", VA = "0x857818")]
		public VRTK_DashTeleport_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F640", Offset = "0x56F640")]
	public class VRTK_DestinationMarker_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F6")]
		public class UnityObjectEvent : UnityEvent<object, DestinationMarkerEventArgs>
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0x857DAC", Offset = "0x857DAC", VA = "0x857DAC")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_DestinationMarker dm;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnDestinationMarkerEnter;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnDestinationMarkerExit;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityObjectEvent OnDestinationMarkerSet;

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x857870", Offset = "0x857870", VA = "0x857870")]
		private void SetDestinationMarker()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x857900", Offset = "0x857900", VA = "0x857900")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x857A84", Offset = "0x857A84", VA = "0x857A84")]
		private void DestinationMarkerEnter(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x857B20", Offset = "0x857B20", VA = "0x857B20")]
		private void DestinationMarkerExit(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x857BBC", Offset = "0x857BBC", VA = "0x857BBC")]
		private void DestinationMarkerSet(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x857C58", Offset = "0x857C58", VA = "0x857C58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x857DA4", Offset = "0x857DA4", VA = "0x857DA4")]
		public VRTK_DestinationMarker_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F6A4", Offset = "0x56F6A4")]
	public class VRTK_HeadsetCollision_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F7")]
		public class UnityObjectEvent : UnityEvent<object, HeadsetCollisionEventArgs>
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0x8581DC", Offset = "0x8581DC", VA = "0x8581DC")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_HeadsetCollision hc;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnHeadsetCollisionDetect;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnHeadsetCollisionEnded;

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x857DFC", Offset = "0x857DFC", VA = "0x857DFC")]
		private void SetHeadsetCollision()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x857E8C", Offset = "0x857E8C", VA = "0x857E8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x857FCC", Offset = "0x857FCC", VA = "0x857FCC")]
		private void HeadsetCollisionDetect(object o, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x85804C", Offset = "0x85804C", VA = "0x85804C")]
		private void HeadsetCollisionEnded(object o, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x8580CC", Offset = "0x8580CC", VA = "0x8580CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x8581D4", Offset = "0x8581D4", VA = "0x8581D4")]
		public VRTK_HeadsetCollision_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F708", Offset = "0x56F708")]
	public class VRTK_HeadsetFade_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F8")]
		public class UnityObjectEvent : UnityEvent<object, HeadsetFadeEventArgs>
		{
			[Token(Token = "0x6001836")]
			[Address(RVA = "0x8587EC", Offset = "0x8587EC", VA = "0x8587EC")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_HeadsetFade hf;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnHeadsetFadeStart;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnHeadsetFadeComplete;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityObjectEvent OnHeadsetUnfadeStart;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityObjectEvent OnHeadsetUnfadeComplete;

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x85822C", Offset = "0x85822C", VA = "0x85822C")]
		private void SetHeadsetFade()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x8582BC", Offset = "0x8582BC", VA = "0x8582BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x85846C", Offset = "0x85846C", VA = "0x85846C")]
		private void HeadsetFadeStart(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x8584EC", Offset = "0x8584EC", VA = "0x8584EC")]
		private void HeadsetFadeComplete(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x85856C", Offset = "0x85856C", VA = "0x85856C")]
		private void HeadsetUnfadeStart(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x8585EC", Offset = "0x8585EC", VA = "0x8585EC")]
		private void HeadsetUnfadeComplete(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x85866C", Offset = "0x85866C", VA = "0x85866C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x8587E4", Offset = "0x8587E4", VA = "0x8587E4")]
		public VRTK_HeadsetFade_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200017B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F76C", Offset = "0x56F76C")]
	public class VRTK_InteractGrab_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F9")]
		public class UnityObjectEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x6001837")]
			[Address(RVA = "0x858C1C", Offset = "0x858C1C", VA = "0x858C1C")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_InteractGrab ig;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnControllerGrabInteractableObject;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnControllerUngrabInteractableObject;

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x85883C", Offset = "0x85883C", VA = "0x85883C")]
		private void SetInteractGrab()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x8588CC", Offset = "0x8588CC", VA = "0x8588CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x858A0C", Offset = "0x858A0C", VA = "0x858A0C")]
		private void ControllerGrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x858A8C", Offset = "0x858A8C", VA = "0x858A8C")]
		private void ControllerUngrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x858B0C", Offset = "0x858B0C", VA = "0x858B0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x858C14", Offset = "0x858C14", VA = "0x858C14")]
		public VRTK_InteractGrab_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F7D0", Offset = "0x56F7D0")]
	public class VRTK_InteractTouch_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003FA")]
		public class UnityObjectEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x6001838")]
			[Address(RVA = "0x85904C", Offset = "0x85904C", VA = "0x85904C")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_InteractTouch it;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnControllerTouchInteractableObject;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnControllerUntouchInteractableObject;

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x858C6C", Offset = "0x858C6C", VA = "0x858C6C")]
		private void SetInteractTouch()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x858CFC", Offset = "0x858CFC", VA = "0x858CFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x858E3C", Offset = "0x858E3C", VA = "0x858E3C")]
		private void ControllerTouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x858EBC", Offset = "0x858EBC", VA = "0x858EBC")]
		private void ControllerUntouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x858F3C", Offset = "0x858F3C", VA = "0x858F3C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x859044", Offset = "0x859044", VA = "0x859044")]
		public VRTK_InteractTouch_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F834", Offset = "0x56F834")]
	public class VRTK_InteractUse_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003FB")]
		public class UnityObjectEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x85947C", Offset = "0x85947C", VA = "0x85947C")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_InteractUse iu;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnControllerUseInteractableObject;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnControllerUnuseInteractableObject;

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x85909C", Offset = "0x85909C", VA = "0x85909C")]
		private void SetInteractUse()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x85912C", Offset = "0x85912C", VA = "0x85912C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x85926C", Offset = "0x85926C", VA = "0x85926C")]
		private void ControllerUseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x8592EC", Offset = "0x8592EC", VA = "0x8592EC")]
		private void ControllerUnuseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x85936C", Offset = "0x85936C", VA = "0x85936C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x859474", Offset = "0x859474", VA = "0x859474")]
		public VRTK_InteractUse_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F898", Offset = "0x56F898")]
	public class VRTK_InteractableObject_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003FC")]
		public class UnityObjectEvent : UnityEvent<object, InteractableObjectEventArgs>
		{
			[Token(Token = "0x600183A")]
			[Address(RVA = "0x859C0C", Offset = "0x859C0C", VA = "0x859C0C")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_InteractableObject io;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnTouch;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnUntouch;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityObjectEvent OnGrab;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityObjectEvent OnUngrab;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityObjectEvent OnUse;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityObjectEvent OnUnuse;

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x8594CC", Offset = "0x8594CC", VA = "0x8594CC")]
		private void SetInteractableObject()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x85955C", Offset = "0x85955C", VA = "0x85955C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x85977C", Offset = "0x85977C", VA = "0x85977C")]
		private void Touch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x8597EC", Offset = "0x8597EC", VA = "0x8597EC")]
		private void UnTouch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x85985C", Offset = "0x85985C", VA = "0x85985C")]
		private void Grab(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x8598CC", Offset = "0x8598CC", VA = "0x8598CC")]
		private void UnGrab(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x85993C", Offset = "0x85993C", VA = "0x85993C")]
		private void Use(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x8599AC", Offset = "0x8599AC", VA = "0x8599AC")]
		private void Unuse(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x859A1C", Offset = "0x859A1C", VA = "0x859A1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x859C04", Offset = "0x859C04", VA = "0x859C04")]
		public VRTK_InteractableObject_UnityEvents()
		{
		}
	}
	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F8FC", Offset = "0x56F8FC")]
	public class VRTK_PlayerClimb_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003FD")]
		public class UnityObjectEvent : UnityEvent<object, PlayerClimbEventArgs>
		{
			[Token(Token = "0x600183B")]
			[Address(RVA = "0x85A03C", Offset = "0x85A03C", VA = "0x85A03C")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_PlayerClimb pc;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnPlayerClimbStarted;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnPlayerClimbEnded;

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x859C5C", Offset = "0x859C5C", VA = "0x859C5C")]
		private void SetPlayerClimb()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x859CEC", Offset = "0x859CEC", VA = "0x859CEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x859E2C", Offset = "0x859E2C", VA = "0x859E2C")]
		private void PlayerClimbStarted(object o, PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x859EAC", Offset = "0x859EAC", VA = "0x859EAC")]
		private void PlayerClimbEnded(object o, PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x859F2C", Offset = "0x859F2C", VA = "0x859F2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x85A034", Offset = "0x85A034", VA = "0x85A034")]
		public VRTK_PlayerClimb_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F960", Offset = "0x56F960")]
	public class VRTK_PlayerPresence_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003FE")]
		public class UnityObjectEvent : UnityEvent<object, PlayerPresenceEventArgs>
		{
			[Token(Token = "0x600183C")]
			[Address(RVA = "0x85A45C", Offset = "0x85A45C", VA = "0x85A45C")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_PlayerPresence pp;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnPresenceFallStarted;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnPresenceFallEnded;

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x85A08C", Offset = "0x85A08C", VA = "0x85A08C")]
		private void SetPlayerPresence()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x85A11C", Offset = "0x85A11C", VA = "0x85A11C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x85A25C", Offset = "0x85A25C", VA = "0x85A25C")]
		private void PresenceFallStarted(object o, PlayerPresenceEventArgs e)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x85A2D4", Offset = "0x85A2D4", VA = "0x85A2D4")]
		private void PresenceFallEnded(object o, PlayerPresenceEventArgs e)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x85A34C", Offset = "0x85A34C", VA = "0x85A34C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x85A454", Offset = "0x85A454", VA = "0x85A454")]
		public VRTK_PlayerPresence_UnityEvents()
		{
		}
	}
	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56F9C4", Offset = "0x56F9C4")]
	public class VRTK_UIPointer_UnityEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003FF")]
		public class UnityObjectEvent : UnityEvent<object, UIPointerEventArgs>
		{
			[Token(Token = "0x600183D")]
			[Address(RVA = "0x85A8C4", Offset = "0x85A8C4", VA = "0x85A8C4")]
			public UnityObjectEvent()
			{
			}
		}

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRTK_UIPointer uip;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityObjectEvent OnUIPointerElementEnter;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityObjectEvent OnUIPointerElementExit;

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x85A4AC", Offset = "0x85A4AC", VA = "0x85A4AC")]
		private void SetUIPointer()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x85A53C", Offset = "0x85A53C", VA = "0x85A53C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x85A67C", Offset = "0x85A67C", VA = "0x85A67C")]
		private void UIPointerElementEnter(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x85A718", Offset = "0x85A718", VA = "0x85A718")]
		private void UIPointerElementExit(object o, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x85A7B4", Offset = "0x85A7B4", VA = "0x85A7B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x85A8BC", Offset = "0x85A8BC", VA = "0x85A8BC")]
		public VRTK_UIPointer_UnityEvents()
		{
		}
	}
}
namespace VRTK.Examples
{
	[Token(Token = "0x2000182")]
	public class AutoRotation : MonoBehaviour
	{
		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BD5C", Offset = "0x57BD5C")]
		public float degPerSec;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BD94", Offset = "0x57BD94")]
		public Vector3 rotAxis;

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x844ED4", Offset = "0x844ED4", VA = "0x844ED4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x844EE0", Offset = "0x844EE0", VA = "0x844EE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x844F48", Offset = "0x844F48", VA = "0x844F48")]
		public AutoRotation()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class Breakable_Cube : MonoBehaviour
	{
		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float breakForce;

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x844FC8", Offset = "0x844FC8", VA = "0x844FC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x84502C", Offset = "0x84502C", VA = "0x84502C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x845064", Offset = "0x845064", VA = "0x845064")]
		private float GetCollisionForce(Collision collision)
		{
			return default(float);
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x845194", Offset = "0x845194", VA = "0x845194")]
		private void ExplodeCube(float force)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x8452E4", Offset = "0x8452E4", VA = "0x8452E4")]
		private void ExplodeFace(Transform face, float force)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x84542C", Offset = "0x84542C", VA = "0x84542C")]
		public Breakable_Cube()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class ButtonReactor : MonoBehaviour
	{
		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject go;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform dispenseLocation;

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x84543C", Offset = "0x84543C", VA = "0x84543C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x8454E8", Offset = "0x8454E8", VA = "0x8454E8")]
		private void handlePush()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x845630", Offset = "0x845630", VA = "0x845630")]
		public ButtonReactor()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class ControlReactor : MonoBehaviour
	{
		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMesh go;

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x845638", Offset = "0x845638", VA = "0x845638")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x845738", Offset = "0x845738", VA = "0x845738")]
		private void HandleChange(float value, float normalizedValue)
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x8457E4", Offset = "0x8457E4", VA = "0x8457E4")]
		public ControlReactor()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class Controller_Hand : MonoBehaviour
	{
		[Token(Token = "0x2000400")]
		public enum Hands
		{
			[Token(Token = "0x4001972")]
			Right,
			[Token(Token = "0x4001973")]
			Left
		}

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hands hand;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform pointerFinger;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform gripFingers;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float maxRotation;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float originalPointerRotation;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float originalGripRotation;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float targetPointerRotation;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float targetGripRotation;

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x8457EC", Offset = "0x8457EC", VA = "0x8457EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x845AE4", Offset = "0x845AE4", VA = "0x845AE4")]
		private void InversePosition(Transform givenTransform)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x845BD0", Offset = "0x845BD0", VA = "0x845BD0")]
		private void DoGrabOn(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x845BDC", Offset = "0x845BDC", VA = "0x845BDC")]
		private void DoGrabOff(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x845BE8", Offset = "0x845BE8", VA = "0x845BE8")]
		private void DoUseOn(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x845BF4", Offset = "0x845BF4", VA = "0x845BF4")]
		private void DoUseOff(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x845C00", Offset = "0x845C00", VA = "0x845C00")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x845CA0", Offset = "0x845CA0", VA = "0x845CA0")]
		public Controller_Hand()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class Controller_Menu : MonoBehaviour
	{
		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject menuObject;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject clonedMenuObject;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool menuInit;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool menuActive;

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x845CB0", Offset = "0x845CB0", VA = "0x845CB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x845DB0", Offset = "0x845DB0", VA = "0x845DB0")]
		private void InitMenu()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x845EE0", Offset = "0x845EE0", VA = "0x845EE0")]
		private void DoMenuOn(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x845F2C", Offset = "0x845F2C", VA = "0x845F2C")]
		private void DoMenuOff(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x845F64", Offset = "0x845F64", VA = "0x845F64")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x84600C", Offset = "0x84600C", VA = "0x84600C")]
		public Controller_Menu()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class ExcludeTeleport : MonoBehaviour
	{
		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x846014", Offset = "0x846014", VA = "0x846014")]
		public ExcludeTeleport()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class Gun : VRTK_InteractableObject
	{
		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GameObject bullet;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float bulletSpeed;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float bulletLife;

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x84601C", Offset = "0x84601C", VA = "0x84601C", Slot = "14")]
		public override void StartUsing(GameObject usingObject)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x84620C", Offset = "0x84620C", VA = "0x84620C", Slot = "19")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x846044", Offset = "0x846044", VA = "0x846044")]
		private void FireBullet()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x84629C", Offset = "0x84629C", VA = "0x84629C")]
		public Gun()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class Lamp : VRTK_InteractableObject
	{
		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x8462B0", Offset = "0x8462B0", VA = "0x8462B0", Slot = "12")]
		public override void Grabbed(GameObject grabbingObject)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x8463B0", Offset = "0x8463B0", VA = "0x8463B0", Slot = "13")]
		public override void Ungrabbed(GameObject previousGrabbingObject)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x8462DC", Offset = "0x8462DC", VA = "0x8462DC")]
		private void ToggleKinematics(bool state)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x8463DC", Offset = "0x8463DC", VA = "0x8463DC")]
		public Lamp()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class LightSaber : VRTK_InteractableObject
	{
		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		private bool beamActive;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Vector2 beamLimits;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float currentBeamSize;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float beamExtendSpeed;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private GameObject blade;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Color activeColor;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Color targetColor;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Color[] bladePhaseColors;

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x8463E4", Offset = "0x8463E4", VA = "0x8463E4", Slot = "14")]
		public override void StartUsing(GameObject usingObject)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x8464D0", Offset = "0x8464D0", VA = "0x8464D0", Slot = "15")]
		public override void StopUsing(GameObject usingObject)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x8464FC", Offset = "0x8464FC", VA = "0x8464FC", Slot = "19")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x846614", Offset = "0x846614", VA = "0x846614", Slot = "20")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x84658C", Offset = "0x84658C", VA = "0x84658C")]
		private void SetBeamSize()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x8466F0", Offset = "0x8466F0", VA = "0x8466F0")]
		private void PulseBeam()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x846898", Offset = "0x846898", VA = "0x846898")]
		public LightSaber()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class Menu_Color_Changer : VRTK_InteractableObject
	{
		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public Color newMenuColor;

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x8468E8", Offset = "0x8468E8", VA = "0x8468E8", Slot = "14")]
		public override void StartUsing(GameObject usingObject)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x846B44", Offset = "0x846B44", VA = "0x846B44", Slot = "19")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x846A78", Offset = "0x846A78", VA = "0x846A78")]
		private void ResetMenuItems()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x846BCC", Offset = "0x846BCC", VA = "0x846BCC")]
		public Menu_Color_Changer()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class Menu_Container_Object_Colors : VRTK_InteractableObject
	{
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x846998", Offset = "0x846998", VA = "0x846998")]
		public void SetSelectedColor(Color color)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x846CC0", Offset = "0x846CC0", VA = "0x846CC0", Slot = "19")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x846CFC", Offset = "0x846CFC", VA = "0x846CFC")]
		public Menu_Container_Object_Colors()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class Menu_Object_Spawner : VRTK_InteractableObject
	{
		[Token(Token = "0x2000401")]
		public enum PrimitiveTypes
		{
			[Token(Token = "0x4001975")]
			Cube,
			[Token(Token = "0x4001976")]
			Sphere
		}

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public PrimitiveTypes shape;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Color selectedColor;

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x846C08", Offset = "0x846C08", VA = "0x846C08")]
		public void SetSelectedColor(Color color)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x846D04", Offset = "0x846D04", VA = "0x846D04", Slot = "14")]
		public override void StartUsing(GameObject usingObject)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x846D70", Offset = "0x846D70", VA = "0x846D70")]
		private void CreateShape(PrimitiveType shape, Color color)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x846ECC", Offset = "0x846ECC", VA = "0x846ECC")]
		private void ResetMenuItems()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x846F98", Offset = "0x846F98", VA = "0x846F98")]
		public Menu_Object_Spawner()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class ModelVillage_TeleportLocation : VRTK_DestinationMarker
	{
		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform destination;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool lastUsePressedState;

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x846FA0", Offset = "0x846FA0", VA = "0x846FA0")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x8471FC", Offset = "0x8471FC", VA = "0x8471FC")]
		public ModelVillage_TeleportLocation()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class Openable_Door : VRTK_InteractableObject
	{
		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		public bool flipped;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		public bool rotated;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float sideFlip;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float side;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float smooth;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float doorOpenAngle;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool open;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 defaultRotation;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector3 openRotation;

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x847204", Offset = "0x847204", VA = "0x847204", Slot = "14")]
		public override void StartUsing(GameObject usingObject)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x84736C", Offset = "0x84736C", VA = "0x84736C", Slot = "19")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x8473DC", Offset = "0x8473DC", VA = "0x8473DC", Slot = "20")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x8472FC", Offset = "0x8472FC", VA = "0x8472FC")]
		private void SetRotation()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x847268", Offset = "0x847268", VA = "0x847268")]
		private void SetDoorRotation(Vector3 interacterPosition)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x84753C", Offset = "0x84753C", VA = "0x84753C")]
		public Openable_Door()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class RC_Car : MonoBehaviour
	{
		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxAcceleration;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float jumpPower;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float acceleration;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float movementSpeed;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rotationSpeed;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isJumping;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 touchAxis;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float triggerAxis;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody rb;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion defaultRotation;

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x847554", Offset = "0x847554", VA = "0x847554")]
		public void SetTouchAxis(Vector2 data)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x84755C", Offset = "0x84755C", VA = "0x84755C")]
		public void SetTriggerAxis(float data)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x847564", Offset = "0x847564", VA = "0x847564")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x8475BC", Offset = "0x8475BC", VA = "0x8475BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x847658", Offset = "0x847658", VA = "0x847658")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x84769C", Offset = "0x84769C", VA = "0x84769C")]
		private void CalculateSpeed()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x847A04", Offset = "0x847A04", VA = "0x847A04")]
		private void Decelerate()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x847750", Offset = "0x847750", VA = "0x847750")]
		private void Move()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x84786C", Offset = "0x84786C", VA = "0x84786C")]
		private void Turn()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x847950", Offset = "0x847950", VA = "0x847950")]
		private void Jump()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x847AF0", Offset = "0x847AF0", VA = "0x847AF0")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x847AF8", Offset = "0x847AF8", VA = "0x847AF8")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x847B04", Offset = "0x847B04", VA = "0x847B04")]
		public RC_Car()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class RC_Car_Controller : MonoBehaviour
	{
		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject rcCar;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RC_Car rcCarScript;

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x847B2C", Offset = "0x847B2C", VA = "0x847B2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x847D24", Offset = "0x847D24", VA = "0x847D24")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x847D44", Offset = "0x847D44", VA = "0x847D44")]
		private void DoTriggerAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x847D64", Offset = "0x847D64", VA = "0x847D64")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x847DDC", Offset = "0x847DDC", VA = "0x847DDC")]
		private void DoTriggerReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x847DF8", Offset = "0x847DF8", VA = "0x847DF8")]
		private void DoApplicationMenuPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x847E10", Offset = "0x847E10", VA = "0x847E10")]
		public RC_Car_Controller()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class Remote_Beam : MonoBehaviour
	{
		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 touchAxis;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float rotationSpeed;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float currentYaw;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentPitch;

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x847E18", Offset = "0x847E18", VA = "0x847E18")]
		public void SetTouchAxis(Vector2 data)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x847E20", Offset = "0x847E20", VA = "0x847E20")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x847FB8", Offset = "0x847FB8", VA = "0x847FB8")]
		public Remote_Beam()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class Remote_Beam_Controller : MonoBehaviour
	{
		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject remoteBeam;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Remote_Beam remoteBeamScript;

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x847FC8", Offset = "0x847FC8", VA = "0x847FC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x8480DC", Offset = "0x8480DC", VA = "0x8480DC")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x8480FC", Offset = "0x8480FC", VA = "0x8480FC")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x848174", Offset = "0x848174", VA = "0x848174")]
		public Remote_Beam_Controller()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class RendererOffOnDash : MonoBehaviour
	{
		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool wasSwitchedOff;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<VRTK_DashTeleport> dashTeleporters;

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x84817C", Offset = "0x84817C", VA = "0x84817C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x848444", Offset = "0x848444", VA = "0x848444")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x8485C0", Offset = "0x8485C0", VA = "0x8485C0")]
		private void RendererOff(object sender, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x8487A0", Offset = "0x8487A0", VA = "0x8487A0")]
		private void RendererOn(object sender, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x848718", Offset = "0x848718", VA = "0x848718")]
		private void SwitchRenderer(GameObject go, bool enable)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x8487F4", Offset = "0x8487F4", VA = "0x8487F4")]
		public RendererOffOnDash()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class Sphere_Spawner : MonoBehaviour
	{
		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject spawnMe;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 position;

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x848864", Offset = "0x848864", VA = "0x848864")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x848A24", Offset = "0x848A24", VA = "0x848A24")]
		private void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x848B14", Offset = "0x848B14", VA = "0x848B14")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x848C24", Offset = "0x848C24", VA = "0x848C24")]
		public Sphere_Spawner()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class Sword : VRTK_InteractableObject
	{
		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private VRTK_ControllerActions controllerActions;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float impactMagnifier;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float collisionForce;

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x848C2C", Offset = "0x848C2C", VA = "0x848C2C")]
		public float CollisionForce()
		{
			return default(float);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x848C34", Offset = "0x848C34", VA = "0x848C34", Slot = "12")]
		public override void Grabbed(GameObject grabbingObject)
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x848CC8", Offset = "0x848CC8", VA = "0x848CC8", Slot = "18")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x848D00", Offset = "0x848D00", VA = "0x848D00")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x848E5C", Offset = "0x848E5C", VA = "0x848E5C")]
		public Sword()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class UI_Interactions : MonoBehaviour
	{
		[Token(Token = "0x4000A75")]
		private const int EXISTING_CANVAS_COUNT = 4;

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x848E6C", Offset = "0x848E6C", VA = "0x848E6C")]
		public void Button_Red()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x848ED8", Offset = "0x848ED8", VA = "0x848ED8")]
		public void Button_Pink()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x848F44", Offset = "0x848F44", VA = "0x848F44")]
		public void Toggle(bool state)
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x848FE4", Offset = "0x848FE4", VA = "0x848FE4")]
		public void Dropdown(int value)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x849094", Offset = "0x849094", VA = "0x849094")]
		public void CreateCanvas()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x8497C4", Offset = "0x8497C4", VA = "0x8497C4")]
		public UI_Interactions()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class UI_Keyboard : MonoBehaviour
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField input;

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x8497CC", Offset = "0x8497CC", VA = "0x8497CC")]
		public void ClickKey(string character)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x849808", Offset = "0x849808", VA = "0x849808")]
		public void Backspace()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x849864", Offset = "0x849864", VA = "0x849864")]
		public void Enter()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x849920", Offset = "0x849920", VA = "0x849920")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x849978", Offset = "0x849978", VA = "0x849978")]
		public UI_Keyboard()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class UseRotate : VRTK_InteractableObject
	{
		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BDCC", Offset = "0x57BDCC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BDCC", Offset = "0x57BDCC")]
		private float idleSpinSpeed;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BE3C", Offset = "0x57BE3C")]
		private float activeSpinSpeed;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BE88", Offset = "0x57BE88")]
		[SerializeField]
		private Transform rotatingObject;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Vector3 rotationAxis;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float spinSpeed;

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x849980", Offset = "0x849980", VA = "0x849980", Slot = "14")]
		public override void StartUsing(GameObject usingObject)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x8499AC", Offset = "0x8499AC", VA = "0x8499AC", Slot = "15")]
		public override void StopUsing(GameObject usingObject)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x8499D8", Offset = "0x8499D8", VA = "0x8499D8", Slot = "19")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x849A74", Offset = "0x849A74", VA = "0x849A74", Slot = "20")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x849AD8", Offset = "0x849AD8", VA = "0x849AD8")]
		public UseRotate()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class VRTK_ControllerAppearance_Example : MonoBehaviour
	{
		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool highlightBodyOnlyOnCollision;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_ControllerTooltips tooltips;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_ControllerActions actions;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VRTK_ControllerEvents events;

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x849EAC", Offset = "0x849EAC", VA = "0x849EAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x84A1C4", Offset = "0x84A1C4", VA = "0x84A1C4")]
		private void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x84A294", Offset = "0x84A294", VA = "0x84A294")]
		private void DoTriggerReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x84A330", Offset = "0x84A330", VA = "0x84A330")]
		private void DoApplicationMenuPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x84A400", Offset = "0x84A400", VA = "0x84A400")]
		private void DoApplicationMenuReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x84A49C", Offset = "0x84A49C", VA = "0x84A49C")]
		private void DoGripPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x84A56C", Offset = "0x84A56C", VA = "0x84A56C")]
		private void DoGripReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x84A608", Offset = "0x84A608", VA = "0x84A608")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x84A6D8", Offset = "0x84A6D8", VA = "0x84A6D8")]
		private void DoTouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x84A774", Offset = "0x84A774", VA = "0x84A774")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x84A868", Offset = "0x84A868", VA = "0x84A868")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x84A90C", Offset = "0x84A90C", VA = "0x84A90C")]
		public VRTK_ControllerAppearance_Example()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class VRTK_ControllerEvents_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x84A914", Offset = "0x84A914", VA = "0x84A914")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x84AFF0", Offset = "0x84AFF0", VA = "0x84AFF0")]
		private void DebugLogger(uint index, string button, string action, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x84B398", Offset = "0x84B398", VA = "0x84B398")]
		private void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x84B414", Offset = "0x84B414", VA = "0x84B414")]
		private void DoTriggerReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x84B490", Offset = "0x84B490", VA = "0x84B490")]
		private void DoTriggerTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x84B50C", Offset = "0x84B50C", VA = "0x84B50C")]
		private void DoTriggerTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x84B588", Offset = "0x84B588", VA = "0x84B588")]
		private void DoTriggerHairlineStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x84B604", Offset = "0x84B604", VA = "0x84B604")]
		private void DoTriggerHairlineEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x84B680", Offset = "0x84B680", VA = "0x84B680")]
		private void DoTriggerClicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x84B6FC", Offset = "0x84B6FC", VA = "0x84B6FC")]
		private void DoTriggerUnclicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x84B778", Offset = "0x84B778", VA = "0x84B778")]
		private void DoTriggerAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x84B7F4", Offset = "0x84B7F4", VA = "0x84B7F4")]
		private void DoApplicationMenuPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x84B870", Offset = "0x84B870", VA = "0x84B870")]
		private void DoApplicationMenuReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x84B8EC", Offset = "0x84B8EC", VA = "0x84B8EC")]
		private void DoGripPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x84B968", Offset = "0x84B968", VA = "0x84B968")]
		private void DoGripReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x84B9E4", Offset = "0x84B9E4", VA = "0x84B9E4")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x84BA60", Offset = "0x84BA60", VA = "0x84BA60")]
		private void DoTouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x84BADC", Offset = "0x84BADC", VA = "0x84BADC")]
		private void DoTouchpadTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x84BB58", Offset = "0x84BB58", VA = "0x84BB58")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x84BBD4", Offset = "0x84BBD4", VA = "0x84BBD4")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x84BC50", Offset = "0x84BC50", VA = "0x84BC50")]
		private void DoControllerEnabled(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x84BCCC", Offset = "0x84BCCC", VA = "0x84BCCC")]
		private void DoControllerDisabled(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x84BD48", Offset = "0x84BD48", VA = "0x84BD48")]
		public VRTK_ControllerEvents_ListenerExample()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class VRTK_ControllerInteract_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x84BD50", Offset = "0x84BD50", VA = "0x84BD50")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x84BFB4", Offset = "0x84BFB4", VA = "0x84BFB4")]
		private void DebugLogger(uint index, string action, GameObject target)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x84C1C4", Offset = "0x84C1C4", VA = "0x84C1C4")]
		private void DoInteractTouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x84C264", Offset = "0x84C264", VA = "0x84C264")]
		private void DoInteractUntouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x84C304", Offset = "0x84C304", VA = "0x84C304")]
		private void DoInteractGrab(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x84C3A4", Offset = "0x84C3A4", VA = "0x84C3A4")]
		private void DoInteractUngrab(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x84C444", Offset = "0x84C444", VA = "0x84C444")]
		public VRTK_ControllerInteract_ListenerExample()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class VRTK_ControllerPointerEvents_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x84C44C", Offset = "0x84C44C", VA = "0x84C44C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x84C61C", Offset = "0x84C61C", VA = "0x84C61C")]
		private void DebugLogger(uint index, string action, Transform target, float distance, Vector3 tipPosition)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x84C988", Offset = "0x84C988", VA = "0x84C988")]
		private void DoPointerIn(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x84C9E8", Offset = "0x84C9E8", VA = "0x84C9E8")]
		private void DoPointerOut(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x84CA48", Offset = "0x84CA48", VA = "0x84CA48")]
		private void DoPointerDestinationSet(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x84CAA8", Offset = "0x84CAA8", VA = "0x84CAA8")]
		public VRTK_ControllerPointerEvents_ListenerExample()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class VRTK_ControllerUIPointerEvents_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool togglePointerOnHit;

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x84CAB0", Offset = "0x84CAB0", VA = "0x84CAB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x84CC50", Offset = "0x84CC50", VA = "0x84CC50")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementEnter(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x84CEE8", Offset = "0x84CEE8", VA = "0x84CEE8")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementExit(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x84D180", Offset = "0x84D180", VA = "0x84D180")]
		public VRTK_ControllerUIPointerEvents_ListenerExample()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class VRTK_RoomExtender_ControllerExample : MonoBehaviour
	{
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_RoomExtender roomExtender;

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x84D188", Offset = "0x84D188", VA = "0x84D188")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x84D3E0", Offset = "0x84D3E0", VA = "0x84D3E0")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x84D49C", Offset = "0x84D49C", VA = "0x84D49C")]
		private void DoTouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x84D4C0", Offset = "0x84D4C0", VA = "0x84D4C0")]
		private void DoApplicationMenuPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x84D460", Offset = "0x84D460", VA = "0x84D460")]
		private void EnableAdditionalMovement()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x84D480", Offset = "0x84D480", VA = "0x84D480")]
		private void DisableAdditionalMovement()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x84D4F8", Offset = "0x84D4F8", VA = "0x84D4F8")]
		public VRTK_RoomExtender_ControllerExample()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class Whirlygig : VRTK_InteractableObject
	{
		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float spinSpeed;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Transform rotator;

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x84D500", Offset = "0x84D500", VA = "0x84D500", Slot = "14")]
		public override void StartUsing(GameObject usingObject)
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x84D52C", Offset = "0x84D52C", VA = "0x84D52C", Slot = "15")]
		public override void StopUsing(GameObject usingObject)
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x84D554", Offset = "0x84D554", VA = "0x84D554", Slot = "19")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x84D5CC", Offset = "0x84D5CC", VA = "0x84D5CC", Slot = "20")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x84D654", Offset = "0x84D654", VA = "0x84D654")]
		public Whirlygig()
		{
		}
	}
}
namespace VRTK.Examples.Archery
{
	[Token(Token = "0x20001A2")]
	public class Arrow : MonoBehaviour
	{
		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxArrowLife;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public bool inFlight;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool collided;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject arrowHolder;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 originalPosition;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion originalRotation;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 originalScale;

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x97F28C", Offset = "0x97F28C", VA = "0x97F28C")]
		public void SetArrowHolder(GameObject holder)
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x97F2B0", Offset = "0x97F2B0", VA = "0x97F2B0")]
		public void OnNock()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x97F2B8", Offset = "0x97F2B8", VA = "0x97F2B8")]
		public void Fired()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x97F354", Offset = "0x97F354", VA = "0x97F354")]
		public void ResetArrow()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x97F590", Offset = "0x97F590", VA = "0x97F590")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x97F5EC", Offset = "0x97F5EC", VA = "0x97F5EC")]
		private void SetOrigns()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x97F668", Offset = "0x97F668", VA = "0x97F668")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x97F780", Offset = "0x97F780", VA = "0x97F780")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x97F380", Offset = "0x97F380", VA = "0x97F380")]
		private void RecreateNotch()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x97F49C", Offset = "0x97F49C", VA = "0x97F49C")]
		private void ResetTransform()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x97F2C0", Offset = "0x97F2C0", VA = "0x97F2C0")]
		private void DestroyArrow(float time)
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x97F7B8", Offset = "0x97F7B8", VA = "0x97F7B8")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class ArrowNotch : MonoBehaviour
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject arrow;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_InteractableObject obj;

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x97F7C8", Offset = "0x97F7C8", VA = "0x97F7C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x97F858", Offset = "0x97F858", VA = "0x97F858")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x97FA24", Offset = "0x97FA24", VA = "0x97FA24")]
		private void CopyNotchToArrow()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x97FBA8", Offset = "0x97FBA8", VA = "0x97FBA8")]
		public ArrowNotch()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class ArrowSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject arrowPrefab;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnDelay;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float spawnDelayTimer;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BowAim bow;

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x97FBB0", Offset = "0x97FBB0", VA = "0x97FBB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x97FBB8", Offset = "0x97FBB8", VA = "0x97FBB8")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x97FD7C", Offset = "0x97FD7C", VA = "0x97FD7C")]
		private bool CanGrab(VRTK_InteractGrab grabbingController)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x97FE5C", Offset = "0x97FE5C", VA = "0x97FE5C")]
		private bool NoArrowNotched(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x980000", Offset = "0x980000", VA = "0x980000")]
		public ArrowSpawner()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class BowAim : MonoBehaviour
	{
		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x570A90", Offset = "0x570A90")]
		private sealed class <GetBaseRotation>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BowAim <>4__this;

			[Token(Token = "0x17000224")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001841")]
				[Address(RVA = "0x844C64", Offset = "0x844C64", VA = "0x844C64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000225")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001843")]
				[Address(RVA = "0x844CCC", Offset = "0x844CCC", VA = "0x844CCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600183E")]
			[Address(RVA = "0x844B70", Offset = "0x844B70", VA = "0x844B70")]
			[DebuggerHidden]
			public <GetBaseRotation>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600183F")]
			[Address(RVA = "0x844B9C", Offset = "0x844B9C", VA = "0x844B9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001840")]
			[Address(RVA = "0x844BA0", Offset = "0x844BA0", VA = "0x844BA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001842")]
			[Address(RVA = "0x844C6C", Offset = "0x844C6C", VA = "0x844C6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float powerMultiplier;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pullMultiplier;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float pullOffset;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxPullDistance;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int bowVibration;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int stringVibration;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BowAnimation bowAnimation;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject currentArrow;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BowHandle handle;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VRTK_InteractableObject interact;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VRTK_ControllerEvents holdControl;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRTK_ControllerEvents stringControl;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private VRTK_ControllerActions stringActions;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VRTK_ControllerActions holdActions;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion releaseRotation;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion baseRotation;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool fired;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float fireOffset;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float currentPull;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float previousPull;

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x980010", Offset = "0x980010", VA = "0x980010")]
		public VRTK_ControllerEvents GetPullHand()
		{
			return null;
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x97FA08", Offset = "0x97FA08", VA = "0x97FA08")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x97FF90", Offset = "0x97FF90", VA = "0x97FF90")]
		public bool HasArrow()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x980018", Offset = "0x980018", VA = "0x980018")]
		public void SetArrow(GameObject arrow)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x980020", Offset = "0x980020", VA = "0x980020")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x9800F4", Offset = "0x9800F4", VA = "0x9800F4")]
		private void DoObjectGrab(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x980258", Offset = "0x980258", VA = "0x980258")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581690", Offset = "0x581690")]
		private IEnumerator GetBaseRotation()
		{
			return null;
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x9802C8", Offset = "0x9802C8", VA = "0x9802C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x98097C", Offset = "0x98097C", VA = "0x98097C")]
		private void Release()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x980BDC", Offset = "0x980BDC", VA = "0x980BDC")]
		private void ReleaseArrow()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x980558", Offset = "0x980558", VA = "0x980558")]
		private void AimArrow()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x980624", Offset = "0x980624", VA = "0x980624")]
		private void AimBow()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x9807B4", Offset = "0x9807B4", VA = "0x9807B4")]
		private void PullString()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x980CB8", Offset = "0x980CB8", VA = "0x980CB8")]
		public BowAim()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class BowAnimation : MonoBehaviour
	{
		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animation animationTimeline;

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x844CD4", Offset = "0x844CD4", VA = "0x844CD4")]
		public void SetFrame(float frame)
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x844D84", Offset = "0x844D84", VA = "0x844D84")]
		public BowAnimation()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class BowHandle : MonoBehaviour
	{
		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform arrowNockingPoint;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BowAim aim;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform nockSide;

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x844D8C", Offset = "0x844D8C", VA = "0x844D8C")]
		public BowHandle()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class Follow : MonoBehaviour
	{
		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool followPosition;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool followRotation;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x844D94", Offset = "0x844D94", VA = "0x844D94")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x844ECC", Offset = "0x844ECC", VA = "0x844ECC")]
		public Follow()
		{
		}
	}
}
namespace VRTK.Examples.Utilities
{
	[Token(Token = "0x20001A9")]
	[ExecuteInEditMode]
	public class Add_HeadsetCollisionFade : MonoBehaviour
	{
		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initalised;

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x849B5C", Offset = "0x849B5C", VA = "0x849B5C")]
		public Add_HeadsetCollisionFade()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class SceneChanger : MonoBehaviour
	{
		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool canPress;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private uint controllerIndex;

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x849B64", Offset = "0x849B64", VA = "0x849B64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x849BC8", Offset = "0x849BC8", VA = "0x849BC8")]
		private bool ForwardPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x849CB8", Offset = "0x849CB8", VA = "0x849CB8")]
		private bool BackPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x849DA8", Offset = "0x849DA8", VA = "0x849DA8")]
		private void ResetPress()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x849DB4", Offset = "0x849DB4", VA = "0x849DB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x849E94", Offset = "0x849E94", VA = "0x849E94")]
		public SceneChanger()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[ExecuteInEditMode]
	public class Setup_Scene_031 : MonoBehaviour
	{
		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initalised;

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x849E9C", Offset = "0x849E9C", VA = "0x849E9C")]
		public Setup_Scene_031()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	[ExecuteInEditMode]
	public class Setup_Scene_034 : MonoBehaviour
	{
		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initalised;

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x849EA4", Offset = "0x849EA4", VA = "0x849EA4")]
		public Setup_Scene_034()
		{
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x20001AD")]
	public struct IVRSystem
	{
		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570AA0", Offset = "0x570AA0")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570AB4", Offset = "0x570AB4")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570AC8", Offset = "0x570AC8")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570ADC", Offset = "0x570ADC")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570AF0", Offset = "0x570AF0")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570B04", Offset = "0x570B04")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570B18", Offset = "0x570B18")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x200040A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570B2C", Offset = "0x570B2C")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570B40", Offset = "0x570B40")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570B54", Offset = "0x570B54")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x200040D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570B68", Offset = "0x570B68")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x200040E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570B7C", Offset = "0x570B7C")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570B90", Offset = "0x570B90")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570BA4", Offset = "0x570BA4")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570BB8", Offset = "0x570BB8")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570BCC", Offset = "0x570BCC")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570BE0", Offset = "0x570BE0")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x2000414")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570BF4", Offset = "0x570BF4")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x2000415")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570C08", Offset = "0x570C08")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x2000416")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570C1C", Offset = "0x570C1C")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570C30", Offset = "0x570C30")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x2000418")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570C44", Offset = "0x570C44")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570C58", Offset = "0x570C58")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570C6C", Offset = "0x570C6C")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570C80", Offset = "0x570C80")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200041C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570C94", Offset = "0x570C94")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570CA8", Offset = "0x570CA8")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570CBC", Offset = "0x570CBC")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570CD0", Offset = "0x570CD0")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570CE4", Offset = "0x570CE4")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570CF8", Offset = "0x570CF8")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570D0C", Offset = "0x570D0C")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570D20", Offset = "0x570D20")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570D34", Offset = "0x570D34")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570D48", Offset = "0x570D48")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570D5C", Offset = "0x570D5C")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570D70", Offset = "0x570D70")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570D84", Offset = "0x570D84")]
		internal delegate bool _CaptureInputFocus();

		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570D98", Offset = "0x570D98")]
		internal delegate void _ReleaseInputFocus();

		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570DAC", Offset = "0x570DAC")]
		internal delegate bool _IsInputFocusCapturedByAnotherProcess();

		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570DC0", Offset = "0x570DC0")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, string pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570DD4", Offset = "0x570DD4")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570DE8", Offset = "0x570DE8")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570DFC", Offset = "0x570DFC")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _CaptureInputFocus CaptureInputFocus;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _ReleaseInputFocus ReleaseInputFocus;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputFocusCapturedByAnotherProcess IsInputFocusCapturedByAnotherProcess;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x20001AE")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570E10", Offset = "0x570E10")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570E24", Offset = "0x570E24")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570E38", Offset = "0x570E38")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x20001AF")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570E4C", Offset = "0x570E4C")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570E60", Offset = "0x570E60")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x2000434")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570E74", Offset = "0x570E74")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x2000435")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570E88", Offset = "0x570E88")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x2000436")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570E9C", Offset = "0x570E9C")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x2000437")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570EB0", Offset = "0x570EB0")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x2000438")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570EC4", Offset = "0x570EC4")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570ED8", Offset = "0x570ED8")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200043A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570EEC", Offset = "0x570EEC")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570F00", Offset = "0x570F00")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200043C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570F14", Offset = "0x570F14")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570F28", Offset = "0x570F28")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x20001B0")]
	public struct IVRApplications
	{
		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570F3C", Offset = "0x570F3C")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570F50", Offset = "0x570F50")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570F64", Offset = "0x570F64")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570F78", Offset = "0x570F78")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570F8C", Offset = "0x570F8C")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570FA0", Offset = "0x570FA0")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, string pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570FB4", Offset = "0x570FB4")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570FC8", Offset = "0x570FC8")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x2000446")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570FDC", Offset = "0x570FDC")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x570FF0", Offset = "0x570FF0")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x2000448")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571004", Offset = "0x571004")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x2000449")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571018", Offset = "0x571018")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57102C", Offset = "0x57102C")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571040", Offset = "0x571040")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x200044C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571054", Offset = "0x571054")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571068", Offset = "0x571068")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57107C", Offset = "0x57107C")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571090", Offset = "0x571090")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x2000450")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5710A4", Offset = "0x5710A4")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x2000451")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5710B8", Offset = "0x5710B8")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5710CC", Offset = "0x5710CC")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, string pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000453")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5710E0", Offset = "0x5710E0")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, string pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5710F4", Offset = "0x5710F4")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, string pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571108", Offset = "0x571108")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, string pchArgs, uint unArgs);

		[Token(Token = "0x2000456")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57111C", Offset = "0x57111C")]
		internal delegate EVRApplicationError _GetStartingApplication(string pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571130", Offset = "0x571130")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571144", Offset = "0x571144")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x2000459")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571158", Offset = "0x571158")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57116C", Offset = "0x57116C")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x200045B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571180", Offset = "0x571180")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x200045C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571194", Offset = "0x571194")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x20001B1")]
	public struct IVRChaperone
	{
		[Token(Token = "0x200045D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5711A8", Offset = "0x5711A8")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x200045E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5711BC", Offset = "0x5711BC")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x200045F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5711D0", Offset = "0x5711D0")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5711E4", Offset = "0x5711E4")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5711F8", Offset = "0x5711F8")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x2000462")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57120C", Offset = "0x57120C")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x2000463")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571220", Offset = "0x571220")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x2000464")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571234", Offset = "0x571234")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x20001B2")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x2000465")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571248", Offset = "0x571248")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000466")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57125C", Offset = "0x57125C")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x2000467")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571270", Offset = "0x571270")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000468")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571284", Offset = "0x571284")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000469")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571298", Offset = "0x571298")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200046A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5712AC", Offset = "0x5712AC")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200046B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5712C0", Offset = "0x5712C0")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x200046C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5712D4", Offset = "0x5712D4")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x200046D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5712E8", Offset = "0x5712E8")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x200046E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5712FC", Offset = "0x5712FC")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x200046F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571310", Offset = "0x571310")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571324", Offset = "0x571324")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571338", Offset = "0x571338")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57134C", Offset = "0x57134C")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000473")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571360", Offset = "0x571360")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x2000474")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571374", Offset = "0x571374")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x2000475")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571388", Offset = "0x571388")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000476")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57139C", Offset = "0x57139C")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000477")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5713B0", Offset = "0x5713B0")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5713C4", Offset = "0x5713C4")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x20001B3")]
	public struct IVRCompositor
	{
		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5713D8", Offset = "0x5713D8")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x200047A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5713EC", Offset = "0x5713EC")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571400", Offset = "0x571400")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571414", Offset = "0x571414")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x200047D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571428", Offset = "0x571428")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57143C", Offset = "0x57143C")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571450", Offset = "0x571450")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571464", Offset = "0x571464")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x2000481")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571478", Offset = "0x571478")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x2000482")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57148C", Offset = "0x57148C")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x2000483")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5714A0", Offset = "0x5714A0")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x2000484")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5714B4", Offset = "0x5714B4")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x2000485")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5714C8", Offset = "0x5714C8")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x2000486")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5714DC", Offset = "0x5714DC")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x2000487")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5714F0", Offset = "0x5714F0")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x2000488")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571504", Offset = "0x571504")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x2000489")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571518", Offset = "0x571518")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x200048A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57152C", Offset = "0x57152C")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x200048B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571540", Offset = "0x571540")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x200048C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571554", Offset = "0x571554")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x200048D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571568", Offset = "0x571568")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x200048E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57157C", Offset = "0x57157C")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x200048F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571590", Offset = "0x571590")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x2000490")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5715A4", Offset = "0x5715A4")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5715B8", Offset = "0x5715B8")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x2000492")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5715CC", Offset = "0x5715CC")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x2000493")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5715E0", Offset = "0x5715E0")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x2000494")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5715F4", Offset = "0x5715F4")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x2000495")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571608", Offset = "0x571608")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x2000496")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57161C", Offset = "0x57161C")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x2000497")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571630", Offset = "0x571630")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x2000498")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571644", Offset = "0x571644")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x2000499")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571658", Offset = "0x571658")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x200049A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57166C", Offset = "0x57166C")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x200049B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571680", Offset = "0x571680")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x200049C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571694", Offset = "0x571694")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x200049D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5716A8", Offset = "0x5716A8")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x200049E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5716BC", Offset = "0x5716BC")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x200049F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5716D0", Offset = "0x5716D0")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20004A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5716E4", Offset = "0x5716E4")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20004A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5716F8", Offset = "0x5716F8")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;
	}
	[Token(Token = "0x20001B4")]
	public struct IVROverlay
	{
		[Token(Token = "0x20004A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57170C", Offset = "0x57170C")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x20004A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571720", Offset = "0x571720")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pOverlayHandle);

		[Token(Token = "0x20004A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571734", Offset = "0x571734")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571748", Offset = "0x571748")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57175C", Offset = "0x57175C")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x20004A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571770", Offset = "0x571770")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20004A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571784", Offset = "0x571784")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20004A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571798", Offset = "0x571798")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x20004AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5717AC", Offset = "0x5717AC")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x20004AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5717C0", Offset = "0x5717C0")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x20004AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5717D4", Offset = "0x5717D4")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x20004AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5717E8", Offset = "0x5717E8")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x20004AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5717FC", Offset = "0x5717FC")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x20004AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571810", Offset = "0x571810")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x20004B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571824", Offset = "0x571824")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x20004B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571838", Offset = "0x571838")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x20004B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57184C", Offset = "0x57184C")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x20004B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571860", Offset = "0x571860")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x20004B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571874", Offset = "0x571874")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x20004B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571888", Offset = "0x571888")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x20004B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57189C", Offset = "0x57189C")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x20004B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5718B0", Offset = "0x5718B0")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x20004B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5718C4", Offset = "0x5718C4")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x20004B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5718D8", Offset = "0x5718D8")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x20004BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5718EC", Offset = "0x5718EC")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x20004BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571900", Offset = "0x571900")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x20004BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571914", Offset = "0x571914")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x20004BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571928", Offset = "0x571928")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20004BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57193C", Offset = "0x57193C")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20004BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571950", Offset = "0x571950")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x20004C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571964", Offset = "0x571964")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20004C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571978", Offset = "0x571978")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20004C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57198C", Offset = "0x57198C")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20004C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5719A0", Offset = "0x5719A0")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20004C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5719B4", Offset = "0x5719B4")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x20004C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5719C8", Offset = "0x5719C8")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, string pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x20004C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5719DC", Offset = "0x5719DC")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5719F0", Offset = "0x5719F0")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571A04", Offset = "0x571A04")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x20004C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571A18", Offset = "0x571A18")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x20004CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571A2C", Offset = "0x571A2C")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20004CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571A40", Offset = "0x571A40")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x20004CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571A54", Offset = "0x571A54")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x20004CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571A68", Offset = "0x571A68")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20004CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571A7C", Offset = "0x571A7C")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20004CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571A90", Offset = "0x571A90")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x20004D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571AA4", Offset = "0x571AA4")]
		internal delegate bool _HandleControllerOverlayInteractionAsMouse(ulong ulOverlayHandle, uint unControllerDeviceIndex);

		[Token(Token = "0x20004D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571AB8", Offset = "0x571AB8")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571ACC", Offset = "0x571ACC")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x20004D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571AE0", Offset = "0x571AE0")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x20004D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571AF4", Offset = "0x571AF4")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x20004D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571B08", Offset = "0x571B08")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x20004D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571B1C", Offset = "0x571B1C")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x20004D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571B30", Offset = "0x571B30")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x20004D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571B44", Offset = "0x571B44")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x20004D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571B58", Offset = "0x571B58")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x20004DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571B6C", Offset = "0x571B6C")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x20004DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571B80", Offset = "0x571B80")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x20004DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571B94", Offset = "0x571B94")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x20004DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571BA8", Offset = "0x571BA8")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571BBC", Offset = "0x571BBC")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571BD0", Offset = "0x571BD0")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571BE4", Offset = "0x571BE4")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571BF8", Offset = "0x571BF8")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x20004E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571C0C", Offset = "0x571C0C")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571C20", Offset = "0x571C20")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x20004E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571C34", Offset = "0x571C34")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20004E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571C48", Offset = "0x571C48")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20004E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571C5C", Offset = "0x571C5C")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x20004E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571C70", Offset = "0x571C70")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x20004E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571C84", Offset = "0x571C84")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x20004E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571C98", Offset = "0x571C98")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x20004EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571CAC", Offset = "0x571CAC")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x20004EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571CC0", Offset = "0x571CC0")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x20004EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571CD4", Offset = "0x571CD4")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _HandleControllerOverlayInteractionAsMouse HandleControllerOverlayInteractionAsMouse;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _ShowMessageOverlay ShowMessageOverlay;
	}
	[Token(Token = "0x20001B5")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x20004ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571CE8", Offset = "0x571CE8")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x20004EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571CFC", Offset = "0x571CFC")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x20004EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571D10", Offset = "0x571D10")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x20004F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571D24", Offset = "0x571D24")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x20004F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571D38", Offset = "0x571D38")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x20004F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571D4C", Offset = "0x571D4C")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x20004F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571D60", Offset = "0x571D60")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571D74", Offset = "0x571D74")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571D88", Offset = "0x571D88")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x20004F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571D9C", Offset = "0x571D9C")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571DB0", Offset = "0x571DB0")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x20004F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571DC4", Offset = "0x571DC4")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571DD8", Offset = "0x571DD8")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571DEC", Offset = "0x571DEC")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571E00", Offset = "0x571E00")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20004FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571E14", Offset = "0x571E14")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20004FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571E28", Offset = "0x571E28")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571E3C", Offset = "0x571E3C")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x20001B6")]
	public struct IVRNotifications
	{
		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571E50", Offset = "0x571E50")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x2000500")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571E64", Offset = "0x571E64")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x20001B7")]
	public struct IVRSettings
	{
		[Token(Token = "0x2000501")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571E78", Offset = "0x571E78")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x2000502")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571E8C", Offset = "0x571E8C")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x2000503")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571EA0", Offset = "0x571EA0")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571EB4", Offset = "0x571EB4")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000505")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571EC8", Offset = "0x571EC8")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571EDC", Offset = "0x571EDC")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000507")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571EF0", Offset = "0x571EF0")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571F04", Offset = "0x571F04")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571F18", Offset = "0x571F18")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x200050A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571F2C", Offset = "0x571F2C")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571F40", Offset = "0x571F40")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571F54", Offset = "0x571F54")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x20001B8")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571F68", Offset = "0x571F68")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571F7C", Offset = "0x571F7C")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x200050F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571F90", Offset = "0x571F90")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571FA4", Offset = "0x571FA4")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571FB8", Offset = "0x571FB8")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571FCC", Offset = "0x571FCC")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571FE0", Offset = "0x571FE0")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x20001B9")]
	public struct IVRResources
	{
		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x571FF4", Offset = "0x571FF4")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x572008", Offset = "0x572008")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, string pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x20001BA")]
	public class CVRSystem
	{
		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x57201C", Offset = "0x57201C")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x2000517")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x400197A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x400197B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x572030", Offset = "0x572030")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x2000519")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x400197C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x400197D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x798B04", Offset = "0x798B04", VA = "0x798B04")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x798C0C", Offset = "0x798C0C", VA = "0x798C0C")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x798C30", Offset = "0x798C30", VA = "0x798C30")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x798C4C", Offset = "0x798C4C", VA = "0x798C4C")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x798C78", Offset = "0x798C78", VA = "0x798C78")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x798C94", Offset = "0x798C94", VA = "0x798C94")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x798CB0", Offset = "0x798CB0", VA = "0x798CB0")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x798CD4", Offset = "0x798CD4", VA = "0x798CD4")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x798CF0", Offset = "0x798CF0", VA = "0x798CF0")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x798D10", Offset = "0x798D10", VA = "0x798D10")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x798D2C", Offset = "0x798D2C", VA = "0x798D2C")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x798D4C", Offset = "0x798D4C", VA = "0x798D4C")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x798D74", Offset = "0x798D74", VA = "0x798D74")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x798D90", Offset = "0x798D90", VA = "0x798D90")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x798DAC", Offset = "0x798DAC", VA = "0x798DAC")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x798DC8", Offset = "0x798DC8", VA = "0x798DC8")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x798DF4", Offset = "0x798DF4", VA = "0x798DF4")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x798E10", Offset = "0x798E10", VA = "0x798E10")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x798E2C", Offset = "0x798E2C", VA = "0x798E2C")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x798E48", Offset = "0x798E48", VA = "0x798E48")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x798E64", Offset = "0x798E64", VA = "0x798E64")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x798E80", Offset = "0x798E80", VA = "0x798E80")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x798E9C", Offset = "0x798E9C", VA = "0x798E9C")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x798EB8", Offset = "0x798EB8", VA = "0x798EB8")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x798ED4", Offset = "0x798ED4", VA = "0x798ED4")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x798EF0", Offset = "0x798EF0", VA = "0x798EF0")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x798F0C", Offset = "0x798F0C", VA = "0x798F0C")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x798F28", Offset = "0x798F28", VA = "0x798F28")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x798F44", Offset = "0x798F44", VA = "0x798F44")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x798FD8", Offset = "0x798FD8", VA = "0x798FD8")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x798FF4", Offset = "0x798FF4", VA = "0x798FF4")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x799010", Offset = "0x799010", VA = "0x799010")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x7990A4", Offset = "0x7990A4", VA = "0x7990A4")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x7990C0", Offset = "0x7990C0", VA = "0x7990C0")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x7994E8", Offset = "0x7994E8", VA = "0x7994E8")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x799988", Offset = "0x799988", VA = "0x799988")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x7999A4", Offset = "0x7999A4", VA = "0x7999A4")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x799A38", Offset = "0x799A38", VA = "0x799A38")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x799ACC", Offset = "0x799ACC", VA = "0x799ACC")]
		public bool CaptureInputFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x799AE8", Offset = "0x799AE8", VA = "0x799AE8")]
		public void ReleaseInputFocus()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x799B04", Offset = "0x799B04", VA = "0x799B04")]
		public bool IsInputFocusCapturedByAnotherProcess()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x799B20", Offset = "0x799B20", VA = "0x799B20")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, string pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x799B3C", Offset = "0x799B3C", VA = "0x799B3C")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x799B58", Offset = "0x799B58", VA = "0x799B58")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x799B74", Offset = "0x799B74", VA = "0x799B74")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x796DF4", Offset = "0x796DF4", VA = "0x796DF4")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x796EFC", Offset = "0x796EFC", VA = "0x796EFC")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x796F28", Offset = "0x796F28", VA = "0x796F28")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x796F54", Offset = "0x796F54", VA = "0x796F54")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x799DF4", Offset = "0x799DF4", VA = "0x799DF4")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x799EFC", Offset = "0x799EFC", VA = "0x799EFC")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x799F90", Offset = "0x799F90", VA = "0x799F90")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x799FB0", Offset = "0x799FB0", VA = "0x799FB0")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x799FD8", Offset = "0x799FD8", VA = "0x799FD8")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x799FF4", Offset = "0x799FF4", VA = "0x799FF4")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x79A010", Offset = "0x79A010", VA = "0x79A010")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x79A030", Offset = "0x79A030", VA = "0x79A030")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x79A04C", Offset = "0x79A04C", VA = "0x79A04C")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x79A068", Offset = "0x79A068", VA = "0x79A068")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x79A08C", Offset = "0x79A08C", VA = "0x79A08C")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x79A0A8", Offset = "0x79A0A8", VA = "0x79A0A8")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x79A0C8", Offset = "0x79A0C8", VA = "0x79A0C8")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x20001BD")]
	public class CVRApplications
	{
		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x7915E8", Offset = "0x7915E8", VA = "0x7915E8")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x7916F0", Offset = "0x7916F0", VA = "0x7916F0")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x791B3C", Offset = "0x791B3C", VA = "0x791B3C")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x791B58", Offset = "0x791B58", VA = "0x791B58")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x791F10", Offset = "0x791F10", VA = "0x791F10")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x79213C", Offset = "0x79213C", VA = "0x79213C")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x7923F4", Offset = "0x7923F4", VA = "0x7923F4")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, string pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x7926AC", Offset = "0x7926AC", VA = "0x7926AC")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x7926C8", Offset = "0x7926C8", VA = "0x7926C8")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x7926F0", Offset = "0x7926F0", VA = "0x7926F0")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x79270C", Offset = "0x79270C", VA = "0x79270C")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x792728", Offset = "0x792728", VA = "0x792728")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x792AE0", Offset = "0x792AE0", VA = "0x792AE0")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x792D7C", Offset = "0x792D7C", VA = "0x792D7C")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x793130", Offset = "0x793130", VA = "0x793130")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x793438", Offset = "0x793438", VA = "0x793438")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x7938E0", Offset = "0x7938E0", VA = "0x7938E0")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x793D38", Offset = "0x793D38", VA = "0x793D38")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x79418C", Offset = "0x79418C", VA = "0x79418C")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x7941AC", Offset = "0x7941AC", VA = "0x7941AC")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x794564", Offset = "0x794564", VA = "0x794564")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x794580", Offset = "0x794580", VA = "0x794580")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, string pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x7949B4", Offset = "0x7949B4", VA = "0x7949B4")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, string pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x794DE8", Offset = "0x794DE8", VA = "0x794DE8")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, string pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x795218", Offset = "0x795218", VA = "0x795218")]
		public uint GetApplicationLaunchArguments(uint unHandle, string pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x7954D0", Offset = "0x7954D0", VA = "0x7954D0")]
		public EVRApplicationError GetStartingApplication(string pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x7958FC", Offset = "0x7958FC", VA = "0x7958FC")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x795B28", Offset = "0x795B28", VA = "0x795B28")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x795B44", Offset = "0x795B44", VA = "0x795B44")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x795E4C", Offset = "0x795E4C", VA = "0x795E4C")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x795E68", Offset = "0x795E68", VA = "0x795E68")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x795E84", Offset = "0x795E84", VA = "0x795E84")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20001BE")]
	public class CVRChaperone
	{
		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x7960B0", Offset = "0x7960B0", VA = "0x7960B0")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x7961B8", Offset = "0x7961B8", VA = "0x7961B8")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x7961D4", Offset = "0x7961D4", VA = "0x7961D4")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x7961F8", Offset = "0x7961F8", VA = "0x7961F8")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x796214", Offset = "0x796214", VA = "0x796214")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x796230", Offset = "0x796230", VA = "0x796230")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x79624C", Offset = "0x79624C", VA = "0x79624C")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x796268", Offset = "0x796268", VA = "0x796268")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x796284", Offset = "0x796284", VA = "0x796284")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x7962A4", Offset = "0x7962A4", VA = "0x7962A4")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x7963AC", Offset = "0x7963AC", VA = "0x7963AC")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x7963C8", Offset = "0x7963C8", VA = "0x7963C8")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x7963E4", Offset = "0x7963E4", VA = "0x7963E4")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x796408", Offset = "0x796408", VA = "0x796408")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x796424", Offset = "0x796424", VA = "0x796424")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x7964C4", Offset = "0x7964C4", VA = "0x7964C4")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x796564", Offset = "0x796564", VA = "0x796564")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x796580", Offset = "0x796580", VA = "0x796580")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x79659C", Offset = "0x79659C", VA = "0x79659C")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x7965B8", Offset = "0x7965B8", VA = "0x7965B8")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x7965E0", Offset = "0x7965E0", VA = "0x7965E0")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x7965FC", Offset = "0x7965FC", VA = "0x7965FC")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x796618", Offset = "0x796618", VA = "0x796618")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x796634", Offset = "0x796634", VA = "0x796634")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x796650", Offset = "0x796650", VA = "0x796650")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x796678", Offset = "0x796678", VA = "0x796678")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x796718", Offset = "0x796718", VA = "0x796718")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x796740", Offset = "0x796740", VA = "0x796740")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x7967E0", Offset = "0x7967E0", VA = "0x7967E0")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x796800", Offset = "0x796800", VA = "0x796800")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001C0")]
	public class CVRCompositor
	{
		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x79681C", Offset = "0x79681C", VA = "0x79681C")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x796924", Offset = "0x796924", VA = "0x796924")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x796940", Offset = "0x796940", VA = "0x796940")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x79695C", Offset = "0x79695C", VA = "0x79695C")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x796990", Offset = "0x796990", VA = "0x796990")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x7969C4", Offset = "0x7969C4", VA = "0x7969C4")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x7969E0", Offset = "0x7969E0", VA = "0x7969E0")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x7969FC", Offset = "0x7969FC", VA = "0x7969FC")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x796A18", Offset = "0x796A18", VA = "0x796A18")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x796A34", Offset = "0x796A34", VA = "0x796A34")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x796A50", Offset = "0x796A50", VA = "0x796A50")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x796A6C", Offset = "0x796A6C", VA = "0x796A6C")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x796A88", Offset = "0x796A88", VA = "0x796A88")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x796AA4", Offset = "0x796AA4", VA = "0x796AA4")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x796AC4", Offset = "0x796AC4", VA = "0x796AC4")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x796AE4", Offset = "0x796AE4", VA = "0x796AE4")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x796B04", Offset = "0x796B04", VA = "0x796B04")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x796B20", Offset = "0x796B20", VA = "0x796B20")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x796B48", Offset = "0x796B48", VA = "0x796B48")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x796B64", Offset = "0x796B64", VA = "0x796B64")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x796B80", Offset = "0x796B80", VA = "0x796B80")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x796B9C", Offset = "0x796B9C", VA = "0x796B9C")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x796BB8", Offset = "0x796BB8", VA = "0x796BB8")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x796BD4", Offset = "0x796BD4", VA = "0x796BD4")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x796BF0", Offset = "0x796BF0", VA = "0x796BF0")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x796C0C", Offset = "0x796C0C", VA = "0x796C0C")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x796C28", Offset = "0x796C28", VA = "0x796C28")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x796C44", Offset = "0x796C44", VA = "0x796C44")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x796C60", Offset = "0x796C60", VA = "0x796C60")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x796C7C", Offset = "0x796C7C", VA = "0x796C7C")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x796C98", Offset = "0x796C98", VA = "0x796C98")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x796CB4", Offset = "0x796CB4", VA = "0x796CB4")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x796CD4", Offset = "0x796CD4", VA = "0x796CD4")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x796CF0", Offset = "0x796CF0", VA = "0x796CF0")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x796D10", Offset = "0x796D10", VA = "0x796D10")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x796D2C", Offset = "0x796D2C", VA = "0x796D2C")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x796D48", Offset = "0x796D48", VA = "0x796D48")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x796D68", Offset = "0x796D68", VA = "0x796D68")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x796D84", Offset = "0x796D84", VA = "0x796D84")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x796DA0", Offset = "0x796DA0", VA = "0x796DA0")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x796DBC", Offset = "0x796DBC", VA = "0x796DBC")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x796DD8", Offset = "0x796DD8", VA = "0x796DD8")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20001C1")]
	public class CVROverlay
	{
		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x7970B8", Offset = "0x7970B8", VA = "0x7970B8")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x7971C0", Offset = "0x7971C0", VA = "0x7971C0")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x7971E0", Offset = "0x7971E0", VA = "0x7971E0")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x797200", Offset = "0x797200", VA = "0x797200")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x79721C", Offset = "0x79721C", VA = "0x79721C")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x797238", Offset = "0x797238", VA = "0x797238")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x797254", Offset = "0x797254", VA = "0x797254")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x797270", Offset = "0x797270", VA = "0x797270")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x79728C", Offset = "0x79728C", VA = "0x79728C")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x7972B0", Offset = "0x7972B0", VA = "0x7972B0")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x797344", Offset = "0x797344", VA = "0x797344")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x797360", Offset = "0x797360", VA = "0x797360")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x79737C", Offset = "0x79737C", VA = "0x79737C")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x79739C", Offset = "0x79739C", VA = "0x79739C")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x7973BC", Offset = "0x7973BC", VA = "0x7973BC")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x7973D8", Offset = "0x7973D8", VA = "0x7973D8")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x797400", Offset = "0x797400", VA = "0x797400")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x79741C", Offset = "0x79741C", VA = "0x79741C")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x79743C", Offset = "0x79743C", VA = "0x79743C")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x797458", Offset = "0x797458", VA = "0x797458")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x797478", Offset = "0x797478", VA = "0x797478")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x797494", Offset = "0x797494", VA = "0x797494")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x7974B4", Offset = "0x7974B4", VA = "0x7974B4")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x7974D0", Offset = "0x7974D0", VA = "0x7974D0")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x7974F0", Offset = "0x7974F0", VA = "0x7974F0")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x79750C", Offset = "0x79750C", VA = "0x79750C")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x797530", Offset = "0x797530", VA = "0x797530")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x79754C", Offset = "0x79754C", VA = "0x79754C")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x797568", Offset = "0x797568", VA = "0x797568")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x797584", Offset = "0x797584", VA = "0x797584")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x7975A0", Offset = "0x7975A0", VA = "0x7975A0")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x7975BC", Offset = "0x7975BC", VA = "0x7975BC")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x7975D8", Offset = "0x7975D8", VA = "0x7975D8")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x7975F4", Offset = "0x7975F4", VA = "0x7975F4")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x797610", Offset = "0x797610", VA = "0x797610")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x797630", Offset = "0x797630", VA = "0x797630")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x79764C", Offset = "0x79764C", VA = "0x79764C")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, string pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x79766C", Offset = "0x79766C", VA = "0x79766C")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x797688", Offset = "0x797688", VA = "0x797688")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x7976A4", Offset = "0x7976A4", VA = "0x7976A4")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x7976C0", Offset = "0x7976C0", VA = "0x7976C0")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x7976DC", Offset = "0x7976DC", VA = "0x7976DC")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x7976F8", Offset = "0x7976F8", VA = "0x7976F8")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x797714", Offset = "0x797714", VA = "0x797714")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x797730", Offset = "0x797730", VA = "0x797730")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x79774C", Offset = "0x79774C", VA = "0x79774C")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x797768", Offset = "0x797768", VA = "0x797768")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x797784", Offset = "0x797784", VA = "0x797784")]
		public bool HandleControllerOverlayInteractionAsMouse(ulong ulOverlayHandle, uint unControllerDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x7977A0", Offset = "0x7977A0", VA = "0x7977A0")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x7977BC", Offset = "0x7977BC", VA = "0x7977BC")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x7977D8", Offset = "0x7977D8", VA = "0x7977D8")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x7977F4", Offset = "0x7977F4", VA = "0x7977F4")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x797810", Offset = "0x797810", VA = "0x797810")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x79782C", Offset = "0x79782C", VA = "0x79782C")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x797848", Offset = "0x797848", VA = "0x797848")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x797864", Offset = "0x797864", VA = "0x797864")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x797880", Offset = "0x797880", VA = "0x797880")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x79789C", Offset = "0x79789C", VA = "0x79789C")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x7978D0", Offset = "0x7978D0", VA = "0x7978D0")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x7978EC", Offset = "0x7978EC", VA = "0x7978EC")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x797910", Offset = "0x797910", VA = "0x797910")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x797934", Offset = "0x797934", VA = "0x797934")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x797950", Offset = "0x797950", VA = "0x797950")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x79796C", Offset = "0x79796C", VA = "0x79796C")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x797988", Offset = "0x797988", VA = "0x797988")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x7979A8", Offset = "0x7979A8", VA = "0x7979A8")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x7979C4", Offset = "0x7979C4", VA = "0x7979C4")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x7979E0", Offset = "0x7979E0", VA = "0x7979E0")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x797A04", Offset = "0x797A04", VA = "0x797A04")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x797A2C", Offset = "0x797A2C", VA = "0x797A2C")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x797A48", Offset = "0x797A48", VA = "0x797A48")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x797A64", Offset = "0x797A64", VA = "0x797A64")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x797A80", Offset = "0x797A80", VA = "0x797A80")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x797A9C", Offset = "0x797A9C", VA = "0x797A9C")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x797AB8", Offset = "0x797AB8", VA = "0x797AB8")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x797AD8", Offset = "0x797AD8", VA = "0x797AD8")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}
	}
	[Token(Token = "0x20001C2")]
	public class CVRRenderModels
	{
		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x572044", Offset = "0x572044")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x200051B")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x400197E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x400197F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x797AF4", Offset = "0x797AF4", VA = "0x797AF4")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x797BFC", Offset = "0x797BFC", VA = "0x797BFC")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x797C18", Offset = "0x797C18", VA = "0x797C18")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x797C34", Offset = "0x797C34", VA = "0x797C34")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x797C50", Offset = "0x797C50", VA = "0x797C50")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x797C6C", Offset = "0x797C6C", VA = "0x797C6C")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x797C88", Offset = "0x797C88", VA = "0x797C88")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x797CA4", Offset = "0x797CA4", VA = "0x797CA4")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x797CC0", Offset = "0x797CC0", VA = "0x797CC0")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x797CDC", Offset = "0x797CDC", VA = "0x797CDC")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x797CF8", Offset = "0x797CF8", VA = "0x797CF8")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x797D14", Offset = "0x797D14", VA = "0x797D14")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x797D30", Offset = "0x797D30", VA = "0x797D30")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x797D4C", Offset = "0x797D4C", VA = "0x797D4C")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x797D68", Offset = "0x797D68", VA = "0x797D68")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x7982E8", Offset = "0x7982E8", VA = "0x7982E8")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x798304", Offset = "0x798304", VA = "0x798304")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x798320", Offset = "0x798320", VA = "0x798320")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x79833C", Offset = "0x79833C", VA = "0x79833C")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C3")]
	public class CVRNotifications
	{
		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x796F78", Offset = "0x796F78", VA = "0x796F78")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x797078", Offset = "0x797078", VA = "0x797078")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x79709C", Offset = "0x79709C", VA = "0x79709C")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x20001C4")]
	public class CVRSettings
	{
		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x79882C", Offset = "0x79882C", VA = "0x79882C")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x798934", Offset = "0x798934", VA = "0x798934")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x7989C8", Offset = "0x7989C8", VA = "0x7989C8")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x7989E8", Offset = "0x7989E8", VA = "0x7989E8")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x798A08", Offset = "0x798A08", VA = "0x798A08")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x798A24", Offset = "0x798A24", VA = "0x798A24")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x798A40", Offset = "0x798A40", VA = "0x798A40")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x798A5C", Offset = "0x798A5C", VA = "0x798A5C")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x798A78", Offset = "0x798A78", VA = "0x798A78")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x798A94", Offset = "0x798A94", VA = "0x798A94")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x798AB0", Offset = "0x798AB0", VA = "0x798AB0")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x798ACC", Offset = "0x798ACC", VA = "0x798ACC")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x798AE8", Offset = "0x798AE8", VA = "0x798AE8")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class CVRScreenshots
	{
		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x798644", Offset = "0x798644", VA = "0x798644")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x798754", Offset = "0x798754", VA = "0x798754")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x798774", Offset = "0x798774", VA = "0x798774")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x79879C", Offset = "0x79879C", VA = "0x79879C")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x7987B8", Offset = "0x7987B8", VA = "0x7987B8")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x7987D4", Offset = "0x7987D4", VA = "0x7987D4")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x7987F0", Offset = "0x7987F0", VA = "0x7987F0")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x798810", Offset = "0x798810", VA = "0x798810")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x20001C6")]
	public class CVRResources
	{
		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x79850C", Offset = "0x79850C", VA = "0x79850C")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x79860C", Offset = "0x79860C", VA = "0x79860C")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x798628", Offset = "0x798628", VA = "0x798628")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, string pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20001C7")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x82355C", Offset = "0x82355C", VA = "0x82355C")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x8235F0", Offset = "0x8235F0", VA = "0x8235F0")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x823664", Offset = "0x823664", VA = "0x823664")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x8236E4", Offset = "0x8236E4", VA = "0x8236E4")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x8237D8", Offset = "0x8237D8", VA = "0x8237D8")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x82385C", Offset = "0x82385C", VA = "0x82385C")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x823908", Offset = "0x823908", VA = "0x823908")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x8239A8", Offset = "0x8239A8", VA = "0x8239A8")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x824B6C", Offset = "0x824B6C", VA = "0x824B6C")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public enum EVREye
	{
		[Token(Token = "0x4000BD3")]
		Eye_Left,
		[Token(Token = "0x4000BD4")]
		Eye_Right
	}
	[Token(Token = "0x20001C9")]
	public enum ETextureType
	{
		[Token(Token = "0x4000BD6")]
		DirectX,
		[Token(Token = "0x4000BD7")]
		OpenGL,
		[Token(Token = "0x4000BD8")]
		Vulkan,
		[Token(Token = "0x4000BD9")]
		IOSurface,
		[Token(Token = "0x4000BDA")]
		DirectX12
	}
	[Token(Token = "0x20001CA")]
	public enum EColorSpace
	{
		[Token(Token = "0x4000BDC")]
		Auto,
		[Token(Token = "0x4000BDD")]
		Gamma,
		[Token(Token = "0x4000BDE")]
		Linear
	}
	[Token(Token = "0x20001CB")]
	public enum ETrackingResult
	{
		[Token(Token = "0x4000BE0")]
		Uninitialized = 1,
		[Token(Token = "0x4000BE1")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x4000BE2")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x4000BE3")]
		Running_OK = 200,
		[Token(Token = "0x4000BE4")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x20001CC")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x4000BE6")]
		Invalid,
		[Token(Token = "0x4000BE7")]
		HMD,
		[Token(Token = "0x4000BE8")]
		Controller,
		[Token(Token = "0x4000BE9")]
		GenericTracker,
		[Token(Token = "0x4000BEA")]
		TrackingReference
	}
	[Token(Token = "0x20001CD")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x4000BEC")]
		Invalid,
		[Token(Token = "0x4000BED")]
		LeftHand,
		[Token(Token = "0x4000BEE")]
		RightHand
	}
	[Token(Token = "0x20001CE")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x4000BF0")]
		TrackingUniverseSeated,
		[Token(Token = "0x4000BF1")]
		TrackingUniverseStanding,
		[Token(Token = "0x4000BF2")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x20001CF")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x4000BF4")]
		Prop_Invalid = 0,
		[Token(Token = "0x4000BF5")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x4000BF6")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x4000BF7")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x4000BF8")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x4000BF9")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x4000BFA")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4000BFB")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x4000BFC")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x4000BFD")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x4000BFE")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x4000BFF")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x4000C00")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x4000C01")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x4000C02")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x4000C03")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x4000C04")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x4000C05")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x4000C06")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x4000C07")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x4000C08")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x4000C09")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x4000C0A")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x4000C0B")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x4000C0C")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x4000C0D")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x4000C0E")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x4000C0F")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x4000C10")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x4000C11")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x4000C12")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x4000C13")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x4000C14")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x4000C15")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x4000C16")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x4000C17")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x4000C18")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x4000C19")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4000C1A")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4000C1B")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4000C1C")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x4000C1D")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x4000C1E")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x4000C1F")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x4000C20")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x4000C21")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x4000C22")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x4000C23")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x4000C24")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x4000C25")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x4000C26")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4000C27")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4000C28")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x4000C29")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4000C2A")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4000C2B")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4000C2C")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x4000C2D")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x4000C2E")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x4000C2F")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x4000C30")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x4000C31")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x4000C32")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x4000C33")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x4000C34")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x4000C35")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x4000C36")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4000C37")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4000C38")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x4000C39")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4000C3A")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4000C3B")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4000C3C")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x4000C3D")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x4000C3E")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x4000C3F")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x4000C40")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x4000C41")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x4000C42")]
		Prop_UsesDriverDirectMode_Bool = 2042,
		[Token(Token = "0x4000C43")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x4000C44")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x4000C45")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x4000C46")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x4000C47")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x4000C48")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x4000C49")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x4000C4A")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x4000C4B")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x4000C4C")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x4000C4D")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x4000C4E")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x4000C4F")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x4000C50")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x4000C51")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x4000C52")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x4000C53")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x4000C54")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x4000C55")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x4000C56")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x4000C57")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x4000C58")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x4000C59")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x4000C5A")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x4000C5B")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x4000C5C")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x4000C5D")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x4000C5E")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x4000C5F")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4000C60")]
		Prop_VendorSpecific_Reserved_End = 10999
	}
	[Token(Token = "0x20001D0")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x4000C62")]
		TrackedProp_Success,
		[Token(Token = "0x4000C63")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x4000C64")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x4000C65")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x4000C66")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x4000C67")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x4000C68")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x4000C69")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x4000C6A")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x4000C6B")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x4000C6C")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x4000C6D")]
		TrackedProp_InvalidOperation
	}
	[Token(Token = "0x20001D1")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x4000C6F")]
		Submit_Default = 0,
		[Token(Token = "0x4000C70")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x4000C71")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x4000C72")]
		Submit_Reserved = 4
	}
	[Token(Token = "0x20001D2")]
	public enum EVRState
	{
		[Token(Token = "0x4000C74")]
		Undefined = -1,
		[Token(Token = "0x4000C75")]
		Off,
		[Token(Token = "0x4000C76")]
		Searching,
		[Token(Token = "0x4000C77")]
		Searching_Alert,
		[Token(Token = "0x4000C78")]
		Ready,
		[Token(Token = "0x4000C79")]
		Ready_Alert,
		[Token(Token = "0x4000C7A")]
		NotReady,
		[Token(Token = "0x4000C7B")]
		Standby,
		[Token(Token = "0x4000C7C")]
		Ready_Alert_Low
	}
	[Token(Token = "0x20001D3")]
	public enum EVREventType
	{
		[Token(Token = "0x4000C7E")]
		VREvent_None = 0,
		[Token(Token = "0x4000C7F")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x4000C80")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x4000C81")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x4000C82")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x4000C83")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x4000C84")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x4000C85")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x4000C86")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x4000C87")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x4000C88")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x4000C89")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x4000C8A")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x4000C8B")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x4000C8C")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x4000C8D")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x4000C8E")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x4000C8F")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x4000C90")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x4000C91")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x4000C92")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x4000C93")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x4000C94")]
		VREvent_Scroll = 305,
		[Token(Token = "0x4000C95")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x4000C96")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x4000C97")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x4000C98")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x4000C99")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x4000C9A")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x4000C9B")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x4000C9C")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x4000C9D")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x4000C9E")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x4000C9F")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x4000CA0")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x4000CA1")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x4000CA2")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x4000CA3")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x4000CA4")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x4000CA5")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x4000CA6")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x4000CA7")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x4000CA8")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x4000CA9")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x4000CAA")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x4000CAB")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x4000CAC")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x4000CAD")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x4000CAE")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x4000CAF")]
		VREvent_DashboardGuideButtonDown = 514,
		[Token(Token = "0x4000CB0")]
		VREvent_DashboardGuideButtonUp = 515,
		[Token(Token = "0x4000CB1")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x4000CB2")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x4000CB3")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x4000CB4")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x4000CB5")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x4000CB6")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x4000CB7")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x4000CB8")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x4000CB9")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x4000CBA")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x4000CBB")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x4000CBC")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x4000CBD")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x4000CBE")]
		VREvent_Quit = 700,
		[Token(Token = "0x4000CBF")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x4000CC0")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x4000CC1")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x4000CC2")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x4000CC3")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x4000CC4")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x4000CC5")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x4000CC6")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x4000CC7")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x4000CC8")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x4000CC9")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x4000CCA")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x4000CCB")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x4000CCC")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x4000CCD")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4000CCE")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4000CCF")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x4000CD0")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x4000CD1")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x4000CD2")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x4000CD3")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x4000CD4")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x4000CD5")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x4000CD6")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x4000CD7")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x4000CD8")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x4000CD9")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x4000CDA")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x4000CDB")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x4000CDC")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x4000CDD")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x4000CDE")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x4000CDF")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x4000CE0")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x4000CE1")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x4000CE2")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x4000CE3")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x4000CE4")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x4000CE5")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x4000CE6")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x4000CE7")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x4000CE8")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x4000CE9")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4000CEA")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x20001D4")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x4000CEC")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x4000CED")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x4000CEE")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x4000CEF")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x4000CF0")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x20001D5")]
	public enum EVRButtonId
	{
		[Token(Token = "0x4000CF2")]
		k_EButton_System = 0,
		[Token(Token = "0x4000CF3")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x4000CF4")]
		k_EButton_Grip = 2,
		[Token(Token = "0x4000CF5")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x4000CF6")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x4000CF7")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x4000CF8")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x4000CF9")]
		k_EButton_A = 7,
		[Token(Token = "0x4000CFA")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x4000CFB")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x4000CFC")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x4000CFD")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x4000CFE")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x4000CFF")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x4000D00")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x4000D01")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x4000D02")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x4000D03")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x20001D6")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x4000D05")]
		Left = 1,
		[Token(Token = "0x4000D06")]
		Right = 2,
		[Token(Token = "0x4000D07")]
		Middle = 4
	}
	[Token(Token = "0x20001D7")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x4000D09")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x4000D0A")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x4000D0B")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x4000D0C")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x20001D8")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x4000D0E")]
		k_eControllerAxis_None,
		[Token(Token = "0x4000D0F")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x4000D10")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x4000D11")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x20001D9")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x4000D13")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x4000D14")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x20001DA")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x4000D16")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x4000D17")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x4000D18")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x4000D19")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x4000D1A")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x4000D1B")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x20001DB")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4000D1D")]
		None = 0,
		[Token(Token = "0x4000D1E")]
		UnknownOverlay = 10,
		[Token(Token = "0x4000D1F")]
		InvalidHandle = 11,
		[Token(Token = "0x4000D20")]
		PermissionDenied = 12,
		[Token(Token = "0x4000D21")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x4000D22")]
		WrongVisibilityType = 14,
		[Token(Token = "0x4000D23")]
		KeyTooLong = 15,
		[Token(Token = "0x4000D24")]
		NameTooLong = 16,
		[Token(Token = "0x4000D25")]
		KeyInUse = 17,
		[Token(Token = "0x4000D26")]
		WrongTransformType = 18,
		[Token(Token = "0x4000D27")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x4000D28")]
		InvalidParameter = 20,
		[Token(Token = "0x4000D29")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x4000D2A")]
		ArrayTooSmall = 22,
		[Token(Token = "0x4000D2B")]
		RequestFailed = 23,
		[Token(Token = "0x4000D2C")]
		InvalidTexture = 24,
		[Token(Token = "0x4000D2D")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4000D2E")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x4000D2F")]
		NoNeighbor = 27,
		[Token(Token = "0x4000D30")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x4000D31")]
		BadMaskPrimitive = 30
	}
	[Token(Token = "0x20001DC")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x4000D33")]
		VRApplication_Other,
		[Token(Token = "0x4000D34")]
		VRApplication_Scene,
		[Token(Token = "0x4000D35")]
		VRApplication_Overlay,
		[Token(Token = "0x4000D36")]
		VRApplication_Background,
		[Token(Token = "0x4000D37")]
		VRApplication_Utility,
		[Token(Token = "0x4000D38")]
		VRApplication_VRMonitor,
		[Token(Token = "0x4000D39")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x4000D3A")]
		VRApplication_Max
	}
	[Token(Token = "0x20001DD")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x4000D3C")]
		None,
		[Token(Token = "0x4000D3D")]
		Success,
		[Token(Token = "0x4000D3E")]
		Fail
	}
	[Token(Token = "0x20001DE")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x4000D40")]
		OK = 0,
		[Token(Token = "0x4000D41")]
		InvalidNotificationId = 100,
		[Token(Token = "0x4000D42")]
		NotificationQueueFull = 101,
		[Token(Token = "0x4000D43")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x4000D44")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x20001DF")]
	public enum EVRInitError
	{
		[Token(Token = "0x4000D46")]
		None = 0,
		[Token(Token = "0x4000D47")]
		Unknown = 1,
		[Token(Token = "0x4000D48")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x4000D49")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x4000D4A")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x4000D4B")]
		Init_FileNotFound = 103,
		[Token(Token = "0x4000D4C")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x4000D4D")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x4000D4E")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x4000D4F")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x4000D50")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x4000D51")]
		Init_NotInitialized = 109,
		[Token(Token = "0x4000D52")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x4000D53")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x4000D54")]
		Init_NoLogPath = 112,
		[Token(Token = "0x4000D55")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x4000D56")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x4000D57")]
		Init_Retry = 115,
		[Token(Token = "0x4000D58")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x4000D59")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x4000D5A")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x4000D5B")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x4000D5C")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4000D5D")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4000D5E")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x4000D5F")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x4000D60")]
		Init_Internal = 124,
		[Token(Token = "0x4000D61")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x4000D62")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x4000D63")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x4000D64")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x4000D65")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x4000D66")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x4000D67")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x4000D68")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x4000D69")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x4000D6A")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x4000D6B")]
		Driver_Failed = 200,
		[Token(Token = "0x4000D6C")]
		Driver_Unknown = 201,
		[Token(Token = "0x4000D6D")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x4000D6E")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x4000D6F")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x4000D70")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x4000D71")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x4000D72")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x4000D73")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x4000D74")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x4000D75")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x4000D76")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x4000D77")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x4000D78")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x4000D79")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x4000D7A")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x4000D7B")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x4000D7C")]
		IPC_Failed = 305,
		[Token(Token = "0x4000D7D")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x4000D7E")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x4000D7F")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x4000D80")]
		Compositor_Failed = 400,
		[Token(Token = "0x4000D81")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x4000D82")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x4000D83")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x4000D84")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x4000D85")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x4000D86")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x4000D87")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x4000D88")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x4000D89")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x4000D8A")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x4000D8B")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x4000D8C")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x4000D8D")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x4000D8E")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x4000D8F")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x4000D90")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x4000D91")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x4000D92")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x4000D93")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x20001E0")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4000D95")]
		None,
		[Token(Token = "0x4000D96")]
		Mono,
		[Token(Token = "0x4000D97")]
		Stereo,
		[Token(Token = "0x4000D98")]
		Cubemap,
		[Token(Token = "0x4000D99")]
		MonoPanorama,
		[Token(Token = "0x4000D9A")]
		StereoPanorama
	}
	[Token(Token = "0x20001E1")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x4000D9C")]
		Preview,
		[Token(Token = "0x4000D9D")]
		VR
	}
	[Token(Token = "0x20001E2")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x4000D9F")]
		None = 0,
		[Token(Token = "0x4000DA0")]
		OperationFailed = 100,
		[Token(Token = "0x4000DA1")]
		InvalidHandle = 101,
		[Token(Token = "0x4000DA2")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x4000DA3")]
		OutOfHandles = 103,
		[Token(Token = "0x4000DA4")]
		IPCFailure = 104,
		[Token(Token = "0x4000DA5")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x4000DA6")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x4000DA7")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x4000DA8")]
		StreamSetupFailure = 108,
		[Token(Token = "0x4000DA9")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x4000DAA")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x4000DAB")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x4000DAC")]
		SharedTextureFailure = 112,
		[Token(Token = "0x4000DAD")]
		NoFrameAvailable = 113,
		[Token(Token = "0x4000DAE")]
		InvalidArgument = 114,
		[Token(Token = "0x4000DAF")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x20001E3")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x4000DB1")]
		Distorted,
		[Token(Token = "0x4000DB2")]
		Undistorted,
		[Token(Token = "0x4000DB3")]
		MaximumUndistorted,
		[Token(Token = "0x4000DB4")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x20001E4")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x4000DB6")]
		None = 0,
		[Token(Token = "0x4000DB7")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x4000DB8")]
		NoManifest = 101,
		[Token(Token = "0x4000DB9")]
		NoApplication = 102,
		[Token(Token = "0x4000DBA")]
		InvalidIndex = 103,
		[Token(Token = "0x4000DBB")]
		UnknownApplication = 104,
		[Token(Token = "0x4000DBC")]
		IPCFailed = 105,
		[Token(Token = "0x4000DBD")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x4000DBE")]
		InvalidManifest = 107,
		[Token(Token = "0x4000DBF")]
		InvalidApplication = 108,
		[Token(Token = "0x4000DC0")]
		LaunchFailed = 109,
		[Token(Token = "0x4000DC1")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x4000DC2")]
		LaunchInProgress = 111,
		[Token(Token = "0x4000DC3")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x4000DC4")]
		TransitionAborted = 113,
		[Token(Token = "0x4000DC5")]
		IsTemplate = 114,
		[Token(Token = "0x4000DC6")]
		BufferTooSmall = 200,
		[Token(Token = "0x4000DC7")]
		PropertyNotSet = 201,
		[Token(Token = "0x4000DC8")]
		UnknownProperty = 202,
		[Token(Token = "0x4000DC9")]
		InvalidParameter = 203
	}
	[Token(Token = "0x20001E5")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4000DCB")]
		Name_String = 0,
		[Token(Token = "0x4000DCC")]
		LaunchType_String = 11,
		[Token(Token = "0x4000DCD")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x4000DCE")]
		BinaryPath_String = 13,
		[Token(Token = "0x4000DCF")]
		Arguments_String = 14,
		[Token(Token = "0x4000DD0")]
		URL_String = 15,
		[Token(Token = "0x4000DD1")]
		Description_String = 50,
		[Token(Token = "0x4000DD2")]
		NewsURL_String = 51,
		[Token(Token = "0x4000DD3")]
		ImagePath_String = 52,
		[Token(Token = "0x4000DD4")]
		Source_String = 53,
		[Token(Token = "0x4000DD5")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x4000DD6")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x4000DD7")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x4000DD8")]
		IsInternal_Bool = 63,
		[Token(Token = "0x4000DD9")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x20001E6")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x4000DDB")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x4000DDC")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x4000DDD")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x4000DDE")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x20001E7")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x4000DE0")]
		OK = 1,
		[Token(Token = "0x4000DE1")]
		Warning = 100,
		[Token(Token = "0x4000DE2")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x4000DE3")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x4000DE4")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x4000DE5")]
		Error = 200,
		[Token(Token = "0x4000DE6")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x4000DE7")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x4000DE8")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4000DE9")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x20001E8")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x4000DEB")]
		Live = 1,
		[Token(Token = "0x4000DEC")]
		Temp
	}
	[Token(Token = "0x20001E9")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x4000DEE")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x20001EA")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x4000DF0")]
		None = 0,
		[Token(Token = "0x4000DF1")]
		RequestFailed = 1,
		[Token(Token = "0x4000DF2")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4000DF3")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x4000DF4")]
		InvalidTexture = 102,
		[Token(Token = "0x4000DF5")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x4000DF6")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x4000DF7")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x4000DF8")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x4000DF9")]
		IndexOutOfRange = 107,
		[Token(Token = "0x4000DFA")]
		AlreadySubmitted = 108
	}
	[Token(Token = "0x20001EB")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x4000DFC")]
		None,
		[Token(Token = "0x4000DFD")]
		Mouse
	}
	[Token(Token = "0x20001EC")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x4000DFF")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x4000E00")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x4000E01")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x4000E02")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x20001ED")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x4000E04")]
		None,
		[Token(Token = "0x4000E05")]
		Curved,
		[Token(Token = "0x4000E06")]
		RGSS4X,
		[Token(Token = "0x4000E07")]
		NoDashboardTab,
		[Token(Token = "0x4000E08")]
		AcceptsGamepadEvents,
		[Token(Token = "0x4000E09")]
		ShowGamepadFocus,
		[Token(Token = "0x4000E0A")]
		SendVRScrollEvents,
		[Token(Token = "0x4000E0B")]
		SendVRTouchpadEvents,
		[Token(Token = "0x4000E0C")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x4000E0D")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x4000E0E")]
		SideBySide_Parallel,
		[Token(Token = "0x4000E0F")]
		SideBySide_Crossed,
		[Token(Token = "0x4000E10")]
		Panorama,
		[Token(Token = "0x4000E11")]
		StereoPanorama,
		[Token(Token = "0x4000E12")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x4000E13")]
		VisibleInDashboard
	}
	[Token(Token = "0x20001EE")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x4000E15")]
		ButtonPress_0,
		[Token(Token = "0x4000E16")]
		ButtonPress_1,
		[Token(Token = "0x4000E17")]
		ButtonPress_2,
		[Token(Token = "0x4000E18")]
		ButtonPress_3,
		[Token(Token = "0x4000E19")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x4000E1A")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x4000E1B")]
		ApplicationQuit
	}
	[Token(Token = "0x20001EF")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x4000E1D")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x4000E1E")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x4000E1F")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x20001F0")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x4000E21")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x4000E22")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x20001F1")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x4000E24")]
		Up,
		[Token(Token = "0x4000E25")]
		Down,
		[Token(Token = "0x4000E26")]
		Left,
		[Token(Token = "0x4000E27")]
		Right,
		[Token(Token = "0x4000E28")]
		Count
	}
	[Token(Token = "0x20001F2")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x4000E2A")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x4000E2B")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x20001F3")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x4000E2D")]
		None = 0,
		[Token(Token = "0x4000E2E")]
		Loading = 100,
		[Token(Token = "0x4000E2F")]
		NotSupported = 200,
		[Token(Token = "0x4000E30")]
		InvalidArg = 300,
		[Token(Token = "0x4000E31")]
		InvalidModel = 301,
		[Token(Token = "0x4000E32")]
		NoShapes = 302,
		[Token(Token = "0x4000E33")]
		MultipleShapes = 303,
		[Token(Token = "0x4000E34")]
		TooManyVertices = 304,
		[Token(Token = "0x4000E35")]
		MultipleTextures = 305,
		[Token(Token = "0x4000E36")]
		BufferTooSmall = 306,
		[Token(Token = "0x4000E37")]
		NotEnoughNormals = 307,
		[Token(Token = "0x4000E38")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x4000E39")]
		InvalidTexture = 400
	}
	[Token(Token = "0x20001F4")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x4000E3B")]
		IsStatic = 1,
		[Token(Token = "0x4000E3C")]
		IsVisible = 2,
		[Token(Token = "0x4000E3D")]
		IsTouched = 4,
		[Token(Token = "0x4000E3E")]
		IsPressed = 8,
		[Token(Token = "0x4000E3F")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x20001F5")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x4000E41")]
		Transient,
		[Token(Token = "0x4000E42")]
		Persistent,
		[Token(Token = "0x4000E43")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x20001F6")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x4000E45")]
		None = 0,
		[Token(Token = "0x4000E46")]
		Application = 100,
		[Token(Token = "0x4000E47")]
		Contact_Disabled = 200,
		[Token(Token = "0x4000E48")]
		Contact_Enabled = 201,
		[Token(Token = "0x4000E49")]
		Contact_Active = 202
	}
	[Token(Token = "0x20001F7")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x4000E4B")]
		None,
		[Token(Token = "0x4000E4C")]
		IPCFailed,
		[Token(Token = "0x4000E4D")]
		WriteFailed,
		[Token(Token = "0x4000E4E")]
		ReadFailed,
		[Token(Token = "0x4000E4F")]
		JsonParseFailed,
		[Token(Token = "0x4000E50")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x20001F8")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x4000E52")]
		None = 0,
		[Token(Token = "0x4000E53")]
		RequestFailed = 1,
		[Token(Token = "0x4000E54")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4000E55")]
		NotFound = 101,
		[Token(Token = "0x4000E56")]
		BufferTooSmall = 102,
		[Token(Token = "0x4000E57")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x20001F9")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x20001FA")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x20001FB")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x20001FC")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x20001FD")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x20001FE")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x20001FF")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x2000200")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x2000201")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x2000202")]
	public struct HmdColor_t
	{
		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x2000203")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x2000204")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x2000205")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x2000206")]
	public struct Texture_t
	{
		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x2000207")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x2000208")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x2000209")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x200020A")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x200020B")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x200020C")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x200020D")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x200020E")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x200020F")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x2000210")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x2000211")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x2000212")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x2000213")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x2000214")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x2000215")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x2000216")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;
	}
	[Token(Token = "0x2000217")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x2000218")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x2000219")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x200021A")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x200021B")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x200021C")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x200021D")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x200021E")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x200021F")]
	public struct VREvent_t
	{
		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x2000220")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x2000221")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x2000222")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x2000223")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x5F0890", Offset = "0x5F0890", VA = "0x5F0890")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000224")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x2000225")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x2000226")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x2000227")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x2000228")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x2000229")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x200022A")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x200022B")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x200022C")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x200022D")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x200022E")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x200022F")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x2000230")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x2000231")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x5F0848", Offset = "0x5F0848", VA = "0x5F0848")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000232")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x2000233")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x5F0864", Offset = "0x5F0864", VA = "0x5F0864")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000234")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x2000235")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x2000236")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;
	}
	[Token(Token = "0x2000237")]
	public class OpenVR
	{
		[Token(Token = "0x200051C")]
		private class COpenVRContext
		{
			[Token(Token = "0x4001980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x4001981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x4001982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x4001983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x4001984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x4001985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x4001986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x4001987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x4001988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x4001989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x400198A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x823BCC", Offset = "0x823BCC", VA = "0x823BCC")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x8249B0", Offset = "0x8249B0", VA = "0x8249B0")]
			public void Clear()
			{
			}

			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x824A38", Offset = "0x824A38", VA = "0x824A38")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x823C64", Offset = "0x823C64", VA = "0x823C64")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x823D8C", Offset = "0x823D8C", VA = "0x823D8C")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0x823EB4", Offset = "0x823EB4", VA = "0x823EB4")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0x823FDC", Offset = "0x823FDC", VA = "0x823FDC")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0x824104", Offset = "0x824104", VA = "0x824104")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x8241C4", Offset = "0x8241C4", VA = "0x8241C4")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0x8242EC", Offset = "0x8242EC", VA = "0x8242EC")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x824414", Offset = "0x824414", VA = "0x824414")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0x82453C", Offset = "0x82453C", VA = "0x82453C")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0x824664", Offset = "0x824664", VA = "0x824664")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0x82478C", Offset = "0x82478C", VA = "0x82478C")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x4000F7E")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x4000F7F")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4000F80")]
		public const uint k_unMaxTrackedDeviceCount = 16u;

		[Token(Token = "0x4000F81")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x4000F82")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x4000F83")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x4000F84")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x4000F85")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x4000F86")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x4000F87")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x4000F88")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x4000F89")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x4000F8A")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x4000F8B")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x4000F8C")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x4000F8D")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x4000F8E")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x4000F8F")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x4000F90")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x4000F91")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x4000F92")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x4000F93")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x4000F94")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x4000F95")]
		public const string IVRSystem_Version = "IVRSystem_015";

		[Token(Token = "0x4000F96")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x4000F97")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x4000F98")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x4000F99")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x4000F9A")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x4000F9B")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x4000F9C")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x4000F9D")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4000F9E")]
		public const string IVRCompositor_Version = "IVRCompositor_020";

		[Token(Token = "0x4000F9F")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4000FA0")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4000FA1")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x4000FA2")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x4000FA3")]
		public const string IVROverlay_Version = "IVROverlay_014";

		[Token(Token = "0x4000FA4")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x4000FA5")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x4000FA6")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x4000FA7")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x4000FA8")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x4000FA9")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x4000FAA")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x4000FAB")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4000FAC")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4000FAD")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4000FAE")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4000FAF")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4000FB0")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4000FB1")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x4000FB2")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x4000FB3")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x4000FB4")]
		public const string k_pch_SteamVR_EnableDistortion_Bool = "enableDistortion";

		[Token(Token = "0x4000FB5")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x4000FB6")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x4000FB7")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x4000FB8")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x4000FB9")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x4000FBA")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x4000FBB")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x4000FBC")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4000FBD")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4000FBE")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4000FBF")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4000FC0")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4000FC1")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4000FC2")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x4000FC3")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x4000FC4")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x4000FC5")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x4000FC6")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x4000FC7")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x4000FC8")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x4000FC9")]
		public const string k_pch_SteamVR_RenderTargetMultiplier_Float = "renderTargetMultiplier";

		[Token(Token = "0x4000FCA")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x4000FCB")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x4000FCC")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x4000FCD")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x4000FCE")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x4000FCF")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4000FD0")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4000FD1")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x4000FD2")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x4000FD3")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x4000FD4")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x4000FD5")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x4000FD6")]
		public const string k_pch_SteamVR_SetInitialDefaultHomeApp = "setInitialDefaultHomeApp";

		[Token(Token = "0x4000FD7")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x4000FD8")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x4000FD9")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x4000FDA")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4000FDB")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4000FDC")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4000FDD")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x4000FDE")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x4000FDF")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x4000FE0")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x4000FE1")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x4000FE2")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x4000FE3")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x4000FE4")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x4000FE5")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x4000FE6")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x4000FE7")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x4000FE8")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x4000FE9")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4000FEA")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4000FEB")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x4000FEC")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x4000FED")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x4000FEE")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x4000FEF")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x4000FF0")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x4000FF1")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x4000FF2")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x4000FF3")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x4000FF4")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x4000FF5")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x4000FF6")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x4000FF7")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x4000FF8")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x4000FF9")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4000FFA")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4000FFB")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x4000FFC")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x4000FFD")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x4000FFE")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x4000FFF")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x4001000")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x4001001")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x4001002")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x4001003")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x4001004")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x4001005")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x4001006")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x4001007")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x4001008")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4001009")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x400100A")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x400100B")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x400100C")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x400100D")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x400100E")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x400100F")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x4001010")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x4001011")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x4001012")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x4001013")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x4001014")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x4001015")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x4001016")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x4001017")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x4001018")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x4001019")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x400101A")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x400101B")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x400101C")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x400101D")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x400101E")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x400101F")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x4001020")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x4001021")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x4001022")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x4001023")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x4001024")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x4001025")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x4001026")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x4001027")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4001028")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57BF04", Offset = "0x57BF04")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x400102A")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x170000B9")]
		private static uint VRToken
		{
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x823A1C", Offset = "0x823A1C", VA = "0x823A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5816F4", Offset = "0x5816F4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x823A84", Offset = "0x823A84", VA = "0x823A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581704", Offset = "0x581704")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x823AF0", Offset = "0x823AF0", VA = "0x823AF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		public static CVRSystem System
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x823BFC", Offset = "0x823BFC", VA = "0x823BFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x823D24", Offset = "0x823D24", VA = "0x823D24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x823E4C", Offset = "0x823E4C", VA = "0x823E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x823F74", Offset = "0x823F74", VA = "0x823F74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x82409C", Offset = "0x82409C", VA = "0x82409C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x818BB4", Offset = "0x818BB4", VA = "0x818BB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x824284", Offset = "0x824284", VA = "0x824284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x8243AC", Offset = "0x8243AC", VA = "0x8243AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x8244D4", Offset = "0x8244D4", VA = "0x8244D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x8245FC", Offset = "0x8245FC", VA = "0x8245FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x824724", Offset = "0x824724", VA = "0x824724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x823558", Offset = "0x823558", VA = "0x823558")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x8235EC", Offset = "0x8235EC", VA = "0x8235EC")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x823660", Offset = "0x823660", VA = "0x823660")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x8236E0", Offset = "0x8236E0", VA = "0x8236E0")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x823760", Offset = "0x823760", VA = "0x823760")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x823858", Offset = "0x823858", VA = "0x823858")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x823904", Offset = "0x823904", VA = "0x823904")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x8239A4", Offset = "0x8239A4", VA = "0x8239A4")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x82484C", Offset = "0x82484C", VA = "0x82484C")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x8249D0", Offset = "0x8249D0", VA = "0x8249D0")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x824A2C", Offset = "0x824A2C", VA = "0x824A2C")]
		public OpenVR()
		{
		}
	}
}
namespace Valve.VR.InteractionSystem
{
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FA58", Offset = "0x56FA58")]
	public class BodyCollider : MonoBehaviour
	{
		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x90B674", Offset = "0x90B674", VA = "0x90B674")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x90B6CC", Offset = "0x90B6CC", VA = "0x90B6CC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x90B868", Offset = "0x90B868", VA = "0x90B868")]
		public BodyCollider()
		{
		}
	}
	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FABC", Offset = "0x56FABC")]
	public class CircularDrive : MonoBehaviour
	{
		[Token(Token = "0x200051D")]
		public enum Axis_t
		{
			[Token(Token = "0x400198C")]
			XAxis,
			[Token(Token = "0x400198D")]
			YAxis,
			[Token(Token = "0x400198E")]
			ZAxis
		}

		[Token(Token = "0x200051E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572058", Offset = "0x572058")]
		private sealed class <HapticPulses>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400198F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SteamVR_Controller.Device controller;

			[Token(Token = "0x4001992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float flMagnitude;

			[Token(Token = "0x4001993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int nCount;

			[Token(Token = "0x4001994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <nRangeMax>5__2;

			[Token(Token = "0x4001995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private ushort <i>5__3;

			[Token(Token = "0x17000226")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CAD")]
				[Address(RVA = "0x90DF14", Offset = "0x90DF14", VA = "0x90DF14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000227")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CAF")]
				[Address(RVA = "0x90DF7C", Offset = "0x90DF7C", VA = "0x90DF7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0x90C680", Offset = "0x90C680", VA = "0x90C680")]
			[DebuggerHidden]
			public <HapticPulses>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0x90DDB0", Offset = "0x90DDB0", VA = "0x90DDB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x90DDB4", Offset = "0x90DDB4", VA = "0x90DDB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0x90DF1C", Offset = "0x90DF1C", VA = "0x90DF1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BF14", Offset = "0x57BF14")]
		public Axis_t axisOfRotation;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BF4C", Offset = "0x57BF4C")]
		public Collider childCollider;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BF84", Offset = "0x57BF84")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BFBC", Offset = "0x57BFBC")]
		public bool hoverLock;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57BFF4", Offset = "0x57BFF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57BFF4", Offset = "0x57BFF4")]
		public bool limited;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 frozenDistanceMinMaxThreshold;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onFrozenDistanceThreshold;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C054", Offset = "0x57C054")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C054", Offset = "0x57C054")]
		public float minAngle;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C0B4", Offset = "0x57C0B4")]
		public bool freezeOnMin;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C0EC", Offset = "0x57C0EC")]
		public UnityEvent onMinAngle;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C124", Offset = "0x57C124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C124", Offset = "0x57C124")]
		public float maxAngle;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C184", Offset = "0x57C184")]
		public bool freezeOnMax;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C1BC", Offset = "0x57C1BC")]
		public UnityEvent onMaxAngle;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C1F4", Offset = "0x57C1F4")]
		public bool forceStart;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C22C", Offset = "0x57C22C")]
		public float startAngle;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C264", Offset = "0x57C264")]
		public bool rotateGameObject;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C29C", Offset = "0x57C29C")]
		public bool debugPath;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C2D4", Offset = "0x57C2D4")]
		public int dbgPathLimit;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C30C", Offset = "0x57C30C")]
		public TextMesh debugText;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C344", Offset = "0x57C344")]
		public float outAngle;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion start;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 worldPlaneNormal;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 localPlaneNormal;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 lastHandProjected;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color red;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Color green;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject[] dbgHandObjects;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameObject[] dbgProjObjects;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GameObject dbgObjectsParent;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int dbgObjectCount;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int dbgObjectIndex;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool driving;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float minMaxAngularThreshold;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool frozen;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float frozenAngle;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 frozenHandWorldPos;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector2 frozenSqDistanceMinMaxThreshold;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Hand handHoverLocked;

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x90BFA0", Offset = "0x90BFA0", VA = "0x90BFA0")]
		private void Freeze(Hand hand)
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x90C000", Offset = "0x90C000", VA = "0x90C000")]
		private void UnFreeze()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x90C020", Offset = "0x90C020", VA = "0x90C020")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x90C458", Offset = "0x90C458", VA = "0x90C458")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x90C5F0", Offset = "0x90C5F0", VA = "0x90C5F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581714", Offset = "0x581714")]
		private IEnumerator HapticPulses(SteamVR_Controller.Device controller, float flMagnitude, int nCount)
		{
			return null;
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x90C6AC", Offset = "0x90C6AC", VA = "0x90C6AC")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x90C7DC", Offset = "0x90C7DC", VA = "0x90C7DC")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x90C94C", Offset = "0x90C94C", VA = "0x90C94C")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x90CBB8", Offset = "0x90CBB8", VA = "0x90CBB8")]
		private Vector3 ComputeToTransformProjected(Transform xForm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x90D2BC", Offset = "0x90D2BC", VA = "0x90D2BC")]
		private void DrawDebugPath(Transform xForm, Vector3 toTransformProjected)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x90D950", Offset = "0x90D950", VA = "0x90D950")]
		private void UpdateLinearMapping()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x90DB0C", Offset = "0x90DB0C", VA = "0x90DB0C")]
		private void UpdateGameObject()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x90DA10", Offset = "0x90DA10", VA = "0x90DA10")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x90C42C", Offset = "0x90C42C", VA = "0x90C42C")]
		private void UpdateAll()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x90CE50", Offset = "0x90CE50", VA = "0x90CE50")]
		private void ComputeAngle(Hand hand)
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x90DC28", Offset = "0x90DC28", VA = "0x90DC28")]
		public CircularDrive()
		{
		}
	}
	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FB20", Offset = "0x56FB20")]
	public class ComplexThrowable : MonoBehaviour
	{
		[Token(Token = "0x200051F")]
		public enum AttachMode
		{
			[Token(Token = "0x4001997")]
			FixedJoint,
			[Token(Token = "0x4001998")]
			Force
		}

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float attachForce;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float attachForceDamper;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttachMode attachMode;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Hand> holdingHands;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Rigidbody> holdingBodies;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector3> holdingPoints;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Rigidbody> rigidBodies;

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x90DF84", Offset = "0x90DF84", VA = "0x90DF84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x90DFD8", Offset = "0x90DFD8", VA = "0x90DFD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x90E260", Offset = "0x90E260", VA = "0x90E260")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x90E2FC", Offset = "0x90E2FC", VA = "0x90E2FC")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x90E398", Offset = "0x90E398", VA = "0x90E398")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x90E3E0", Offset = "0x90E3E0", VA = "0x90E3E0")]
		private void PhysicsAttach(Hand hand)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x90E09C", Offset = "0x90E09C", VA = "0x90E09C")]
		private bool PhysicsDetach(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x90EF04", Offset = "0x90EF04", VA = "0x90EF04")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x90F1CC", Offset = "0x90F1CC", VA = "0x90F1CC")]
		public ComplexThrowable()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class ControllerHoverHighlight : MonoBehaviour
	{
		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material highLightMaterial;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fireHapticsOnHightlight;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer bodyMeshRenderer;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer trackingHatMeshRenderer;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool renderModelLoaded;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x913DA8", Offset = "0x913DA8", VA = "0x913DA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x913E00", Offset = "0x913E00", VA = "0x913E00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x913EA4", Offset = "0x913EA4", VA = "0x913EA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x913EC4", Offset = "0x913EC4", VA = "0x913EC4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x913EE4", Offset = "0x913EE4", VA = "0x913EE4")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x913F74", Offset = "0x913F74", VA = "0x913F74")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x9143D0", Offset = "0x9143D0", VA = "0x9143D0")]
		private void OnParentHandHoverBegin(Interactable other)
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x9145D0", Offset = "0x9145D0", VA = "0x9145D0")]
		private void OnParentHandHoverEnd(Interactable other)
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x9146EC", Offset = "0x9146EC", VA = "0x9146EC")]
		private void OnParentHandInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x91480C", Offset = "0x91480C", VA = "0x91480C")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x9144B8", Offset = "0x9144B8", VA = "0x9144B8")]
		public void ShowHighlight()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x9145D4", Offset = "0x9145D4", VA = "0x9145D4")]
		public void HideHighlight()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x914810", Offset = "0x914810", VA = "0x914810")]
		public ControllerHoverHighlight()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public static class CustomEvents
	{
		[Serializable]
		[Token(Token = "0x2000520")]
		public class UnityEventSingleFloat : UnityEvent<float>
		{
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x914870", Offset = "0x914870", VA = "0x914870")]
			public UnityEventSingleFloat()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000521")]
		public class UnityEventHand : UnityEvent<Hand>
		{
			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0x914820", Offset = "0x914820", VA = "0x914820")]
			public UnityEventHand()
			{
			}
		}
	}
	[Token(Token = "0x200023D")]
	public class DebugUI : MonoBehaviour
	{
		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Player player;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DebugUI _instance;

		[Token(Token = "0x170000C6")]
		public static DebugUI instance
		{
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x9148C0", Offset = "0x9148C0", VA = "0x9148C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x91498C", Offset = "0x91498C", VA = "0x91498C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x9149B4", Offset = "0x9149B4", VA = "0x9149B4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x9149D0", Offset = "0x9149D0", VA = "0x9149D0")]
		public DebugUI()
		{
		}
	}
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FB84", Offset = "0x56FB84")]
	public class DestroyOnDetachedFromHand : MonoBehaviour
	{
		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x9149D8", Offset = "0x9149D8", VA = "0x9149D8")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x914A54", Offset = "0x914A54", VA = "0x914A54")]
		public DestroyOnDetachedFromHand()
		{
		}
	}
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FBE8", Offset = "0x56FBE8")]
	public class DestroyOnParticleSystemDeath : MonoBehaviour
	{
		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem particles;

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x914A5C", Offset = "0x914A5C", VA = "0x914A5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x914AD4", Offset = "0x914AD4", VA = "0x914AD4")]
		private void CheckParticleSystem()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x914B74", Offset = "0x914B74", VA = "0x914B74")]
		public DestroyOnParticleSystemDeath()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class DestroyOnTriggerEnter : MonoBehaviour
	{
		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string tagFilter;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useTag;

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x914B7C", Offset = "0x914B7C", VA = "0x914B7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x914BB0", Offset = "0x914BB0", VA = "0x914BB0")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x914CA8", Offset = "0x914CA8", VA = "0x914CA8")]
		public DestroyOnTriggerEnter()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class DistanceHaptics : MonoBehaviour
	{
		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572068", Offset = "0x572068")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400199A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400199B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DistanceHaptics <>4__this;

			[Token(Token = "0x17000228")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CB5")]
				[Address(RVA = "0x914F98", Offset = "0x914F98", VA = "0x914F98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000229")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CB7")]
				[Address(RVA = "0x915000", Offset = "0x915000", VA = "0x915000", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0x914D20", Offset = "0x914D20", VA = "0x914D20")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0x914DBC", Offset = "0x914DBC", VA = "0x914DBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0x914DC0", Offset = "0x914DC0", VA = "0x914DC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0x914FA0", Offset = "0x914FA0", VA = "0x914FA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform firstTransform;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform secondTransform;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve distanceIntensityCurve;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve pulseIntervalCurve;

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x914CB0", Offset = "0x914CB0", VA = "0x914CB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581778", Offset = "0x581778")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x914D4C", Offset = "0x914D4C", VA = "0x914D4C")]
		public DistanceHaptics()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class DontDestroyOnLoad : MonoBehaviour
	{
		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x915008", Offset = "0x915008", VA = "0x915008")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x915070", Offset = "0x915070", VA = "0x915070")]
		public DontDestroyOnLoad()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class EnumFlags : PropertyAttribute
	{
		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x915078", Offset = "0x915078", VA = "0x915078")]
		public EnumFlags()
		{
		}
	}
	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FC4C", Offset = "0x56FC4C")]
	public class FallbackCameraController : MonoBehaviour
	{
		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float shiftSpeed;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showInstructions;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 startEulerAngles;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 startMousePosition;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float realTime;

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x91516C", Offset = "0x91516C", VA = "0x91516C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x915194", Offset = "0x915194", VA = "0x915194")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x9154FC", Offset = "0x9154FC", VA = "0x9154FC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x9155B0", Offset = "0x9155B0", VA = "0x9155B0")]
		public FallbackCameraController()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x2000523")]
		public enum HandType
		{
			[Token(Token = "0x400199D")]
			Left,
			[Token(Token = "0x400199E")]
			Right,
			[Token(Token = "0x400199F")]
			Any
		}

		[Token(Token = "0x2000524")]
		[Flags]
		public enum AttachmentFlags
		{
			[Token(Token = "0x40019A1")]
			SnapOnAttach = 1,
			[Token(Token = "0x40019A2")]
			DetachOthers = 2,
			[Token(Token = "0x40019A3")]
			DetachFromOtherHand = 4,
			[Token(Token = "0x40019A4")]
			ParentToHand = 8
		}

		[Token(Token = "0x2000525")]
		public struct AttachedObject
		{
			[Token(Token = "0x40019A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject attachedObject;

			[Token(Token = "0x40019A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject originalParent;

			[Token(Token = "0x40019A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isParentedToHand;
		}

		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572088", Offset = "0x572088")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x40019A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject objectToDetach;

			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0x916820", Offset = "0x916820", VA = "0x916820")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x917F60", Offset = "0x917F60", VA = "0x917F60")]
			internal bool <DetachObject>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572098", Offset = "0x572098")]
		private sealed class <>c
		{
			[Token(Token = "0x40019A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40019AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<AttachedObject> <>9__45_0;

			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x917EE8", Offset = "0x917EE8", VA = "0x917EE8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0x917EF0", Offset = "0x917EF0", VA = "0x917EF0")]
			internal bool <CleanUpAttachedObjectStack>b__45_0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5720A8", Offset = "0x5720A8")]
		private sealed class <Start>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand <>4__this;

			[Token(Token = "0x1700022A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC0")]
				[Address(RVA = "0x918384", Offset = "0x918384", VA = "0x918384", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CC2")]
				[Address(RVA = "0x9183EC", Offset = "0x9183EC", VA = "0x9183EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0x916B68", Offset = "0x916B68", VA = "0x916B68")]
			[DebuggerHidden]
			public <Start>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0x918078", Offset = "0x918078", VA = "0x918078", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0x91807C", Offset = "0x91807C", VA = "0x91807C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0x91838C", Offset = "0x91838C", VA = "0x91838C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5720B8", Offset = "0x5720B8")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x40019AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Interactable contacting;

			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0x916B94", Offset = "0x916B94", VA = "0x916B94")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0x917FE0", Offset = "0x917FE0", VA = "0x917FE0")]
			internal bool <UpdateHovering>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001073")]
		public const AttachmentFlags defaultAttachmentFlags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand otherHand;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandType startingHandType;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform hoverSphereTransform;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float hoverSphereRadius;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask hoverLayerMask;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float hoverUpdateInterval;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera noSteamVRFallbackCamera;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float noSteamVRFallbackMaxDistanceNoItem;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float noSteamVRFallbackMaxDistanceWithItem;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float noSteamVRFallbackInteractorDistance;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SteamVR_Controller.Device controller;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject controllerPrefab;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject controllerObject;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool showDebugText;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool spewDebugText;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<AttachedObject> attachedObjects;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57C38C", Offset = "0x57C38C")]
		private bool <hoverLocked>k__BackingField;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Interactable _hoveringInteractable;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TextMesh debugText;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int prevOverlappingColliders;

		[Token(Token = "0x4001088")]
		private const int ColliderArraySize = 16;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Collider[] overlappingColliders;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Player playerInstance;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject applicationLostFocusObject;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SteamVR_Events.Action inputFocusAction;

		[Token(Token = "0x170000C7")]
		public ReadOnlyCollection<AttachedObject> AttachedObjects
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x915ACC", Offset = "0x915ACC", VA = "0x915ACC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		public bool hoverLocked
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0x915B24", Offset = "0x915B24", VA = "0x915B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5817DC", Offset = "0x5817DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x915B2C", Offset = "0x915B2C", VA = "0x915B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5817EC", Offset = "0x5817EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public Interactable hoveringInteractable
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x915B38", Offset = "0x915B38", VA = "0x915B38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x915B40", Offset = "0x915B40", VA = "0x915B40")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public GameObject currentAttachedObject
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x915E58", Offset = "0x915E58", VA = "0x915E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x915FC8", Offset = "0x915FC8", VA = "0x915FC8")]
		public Transform GetAttachmentTransform(string attachmentPoint = "")
		{
			return null;
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x916098", Offset = "0x916098", VA = "0x916098")]
		public HandType GuessCurrentHandType()
		{
			return default(HandType);
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x90E818", Offset = "0x90E818", VA = "0x90E818")]
		public void AttachObject(GameObject objectToAttach, AttachmentFlags flags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand, string attachmentPoint = "")
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x90EB80", Offset = "0x90EB80", VA = "0x90EB80")]
		public void DetachObject(GameObject objectToDetach, bool restoreOriginalParent = true)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x916828", Offset = "0x916828", VA = "0x916828")]
		public Vector3 GetTrackedObjectVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x9168E0", Offset = "0x9168E0", VA = "0x9168E0")]
		public Vector3 GetTrackedObjectAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x915ED0", Offset = "0x915ED0", VA = "0x915ED0")]
		private void CleanUpAttachedObjectStack()
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x916998", Offset = "0x916998", VA = "0x916998")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x916AF8", Offset = "0x916AF8", VA = "0x916AF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5817FC", Offset = "0x5817FC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x9161BC", Offset = "0x9161BC", VA = "0x9161BC")]
		private void UpdateHovering()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x916B9C", Offset = "0x916B9C", VA = "0x916B9C")]
		private void UpdateNoSteamVRFallback()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x916F34", Offset = "0x916F34", VA = "0x916F34")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x9174B0", Offset = "0x9174B0", VA = "0x9174B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x9175BC", Offset = "0x9175BC", VA = "0x9175BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x9175F8", Offset = "0x9175F8", VA = "0x9175F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x91770C", Offset = "0x91770C", VA = "0x91770C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x9177BC", Offset = "0x9177BC", VA = "0x9177BC")]
		private void OnInputFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x9179FC", Offset = "0x9179FC", VA = "0x9179FC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x917A00", Offset = "0x917A00", VA = "0x917A00")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x915D8C", Offset = "0x915D8C", VA = "0x915D8C")]
		private void HandDebugLog(string msg)
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x91789C", Offset = "0x91789C", VA = "0x91789C")]
		private void UpdateHandPoses()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x909388", Offset = "0x909388", VA = "0x909388")]
		public void HoverLock(Interactable interactable)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x909714", Offset = "0x909714", VA = "0x909714")]
		public void HoverUnlock(Interactable interactable)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x90CB18", Offset = "0x90CB18", VA = "0x90CB18")]
		public bool GetStandardInteractionButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x90D21C", Offset = "0x90D21C", VA = "0x90D21C")]
		public bool GetStandardInteractionButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x90C8AC", Offset = "0x90C8AC", VA = "0x90C8AC")]
		public bool GetStandardInteractionButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x917AE4", Offset = "0x917AE4", VA = "0x917AE4")]
		private void InitController(int index)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x917DDC", Offset = "0x917DDC", VA = "0x917DDC")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FCB0", Offset = "0x56FCB0")]
	public class HapticRack : MonoBehaviour
	{
		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C39C", Offset = "0x57C39C")]
		public LinearMapping linearMapping;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C3D4", Offset = "0x57C3D4")]
		public int teethCount;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C40C", Offset = "0x57C40C")]
		public int minimumPulseDuration;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C444", Offset = "0x57C444")]
		public int maximumPulseDuration;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C47C", Offset = "0x57C47C")]
		public UnityEvent onPulse;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hand hand;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int previousToothIndex;

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x9183F4", Offset = "0x9183F4", VA = "0x9183F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x918484", Offset = "0x918484", VA = "0x918484")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x91848C", Offset = "0x91848C", VA = "0x91848C")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x918494", Offset = "0x918494", VA = "0x918494")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x918544", Offset = "0x918544", VA = "0x918544")]
		private void Pulse()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x91861C", Offset = "0x91861C", VA = "0x91861C")]
		public HapticRack()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class HideOnHandFocusLost : MonoBehaviour
	{
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x918640", Offset = "0x918640", VA = "0x918640")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x918668", Offset = "0x918668", VA = "0x918668")]
		public HideOnHandFocusLost()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class IgnoreHovering : MonoBehaviour
	{
		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C4B4", Offset = "0x57C4B4")]
		public Hand onlyIgnoreHand;

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x918670", Offset = "0x918670", VA = "0x918670")]
		public IgnoreHovering()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class InputModule : BaseInputModule
	{
		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject submitObject;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputModule _instance;

		[Token(Token = "0x170000CB")]
		public static InputModule instance
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x918680", Offset = "0x918680", VA = "0x918680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x91874C", Offset = "0x91874C", VA = "0x91874C", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x9187DC", Offset = "0x9187DC", VA = "0x9187DC")]
		public void HoverBegin(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x9188C8", Offset = "0x9188C8", VA = "0x9188C8")]
		public void HoverEnd(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x9189CC", Offset = "0x9189CC", VA = "0x9189CC")]
		public void Submit(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x9189D4", Offset = "0x9189D4", VA = "0x9189D4", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x918B0C", Offset = "0x918B0C", VA = "0x918B0C")]
		public InputModule()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class Interactable : MonoBehaviour
	{
		[Token(Token = "0x200052A")]
		public delegate void OnAttachedToHandDelegate(Hand hand);

		[Token(Token = "0x200052B")]
		public delegate void OnDetachedFromHandDelegate(Hand hand);

		[Token(Token = "0x14000062")]
		[HideInInspector]
		public event OnAttachedToHandDelegate onAttachedToHand
		{
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x918B14", Offset = "0x918B14", VA = "0x918B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581860", Offset = "0x581860")]
			add
			{
			}
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x918BB8", Offset = "0x918BB8", VA = "0x918BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581870", Offset = "0x581870")]
			remove
			{
			}
		}

		[Token(Token = "0x14000063")]
		[HideInInspector]
		public event OnDetachedFromHandDelegate onDetachedFromHand
		{
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x918C5C", Offset = "0x918C5C", VA = "0x918C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581880", Offset = "0x581880")]
			add
			{
			}
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x918D00", Offset = "0x918D00", VA = "0x918D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581890", Offset = "0x581890")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x918DA4", Offset = "0x918DA4", VA = "0x918DA4")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x919148", Offset = "0x919148", VA = "0x919148")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x9194EC", Offset = "0x9194EC", VA = "0x9194EC")]
		public Interactable()
		{
		}
	}
	[Token(Token = "0x200024B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FD14", Offset = "0x56FD14")]
	public class InteractableButtonEvents : MonoBehaviour
	{
		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onTriggerDown;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onTriggerUp;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onGripDown;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onGripUp;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onTouchpadDown;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onTouchpadUp;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onTouchpadTouch;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onTouchpadRelease;

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x919574", Offset = "0x919574", VA = "0x919574")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x91972C", Offset = "0x91972C", VA = "0x91972C")]
		public InteractableButtonEvents()
		{
		}
	}
	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FD78", Offset = "0x56FD78")]
	public class InteractableHoverEvents : MonoBehaviour
	{
		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onHandHoverBegin;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onHandHoverEnd;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onAttachedToHand;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onDetachedFromHand;

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x919C98", Offset = "0x919C98", VA = "0x919C98")]
		private void OnHandHoverBegin()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x919CB4", Offset = "0x919CB4", VA = "0x919CB4")]
		private void OnHandHoverEnd()
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x919CD0", Offset = "0x919CD0", VA = "0x919CD0")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x919CEC", Offset = "0x919CEC", VA = "0x919CEC")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x919D08", Offset = "0x919D08", VA = "0x919D08")]
		public InteractableHoverEvents()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class ItemPackage : MonoBehaviour
	{
		[Token(Token = "0x200052C")]
		public enum ItemPackageType
		{
			[Token(Token = "0x40019B0")]
			Unrestricted,
			[Token(Token = "0x40019B1")]
			OneHanded,
			[Token(Token = "0x40019B2")]
			TwoHanded
		}

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new string name;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemPackageType packageType;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject itemPrefab;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject otherHandItemPrefab;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject previewPrefab;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject fadedPreviewPrefab;

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x919D10", Offset = "0x919D10", VA = "0x919D10")]
		public ItemPackage()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class ItemPackageReference : MonoBehaviour
	{
		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage itemPackage;

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x919D18", Offset = "0x919D18", VA = "0x919D18")]
		public ItemPackageReference()
		{
		}
	}
	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FDDC", Offset = "0x56FDDC")]
	public class ItemPackageSpawner : MonoBehaviour
	{
		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage _itemPackage;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useItemPackagePreview;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool useFadedPreview;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject previewObject;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool requireTriggerPressToTake;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool requireTriggerPressToReturn;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool showTriggerHint;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string attachmentPoint;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool takeBackItem;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool acceptDifferentItems;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject spawnedItem;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool itemIsSpawned;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent pickupEvent;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent dropEvent;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool justPickedUpItem;

		[Token(Token = "0x170000CC")]
		public ItemPackage itemPackage
		{
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x919D20", Offset = "0x919D20", VA = "0x919D20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x919D28", Offset = "0x919D28", VA = "0x919D28")]
			set
			{
			}
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x919D2C", Offset = "0x919D2C", VA = "0x919D2C")]
		private void CreatePreviewObject()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x91A294", Offset = "0x91A294", VA = "0x91A294")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x91A298", Offset = "0x91A298", VA = "0x91A298")]
		private void VerifyItemPackage()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x91A370", Offset = "0x91A370", VA = "0x91A370")]
		private void ItemPackageNotValid()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x919F94", Offset = "0x919F94", VA = "0x919F94")]
		private void ClearPreview()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x91A464", Offset = "0x91A464", VA = "0x91A464")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x91A510", Offset = "0x91A510", VA = "0x91A510")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x91A708", Offset = "0x91A708", VA = "0x91A708")]
		private void TakeBackItem(Hand hand)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x91A60C", Offset = "0x91A60C", VA = "0x91A60C")]
		private ItemPackage GetAttachedItemPackage(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x91ABF4", Offset = "0x91ABF4", VA = "0x91ABF4")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x91AC4C", Offset = "0x91AC4C", VA = "0x91AC4C")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x91AA4C", Offset = "0x91AA4C", VA = "0x91AA4C")]
		private void RemoveMatchingItemsFromHandStack(ItemPackage package, Hand hand)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x91AC90", Offset = "0x91AC90", VA = "0x91AC90")]
		private void RemoveMatchingItemTypesFromHand(ItemPackage.ItemPackageType packageType, Hand hand)
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x91A764", Offset = "0x91A764", VA = "0x91A764")]
		private void SpawnAndAttachObject(Hand hand)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x91ADF0", Offset = "0x91ADF0", VA = "0x91ADF0")]
		public ItemPackageSpawner()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class LinearAnimation : MonoBehaviour
	{
		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation animation;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationState animState;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float animLength;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float lastValue;

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x91AE08", Offset = "0x91AE08", VA = "0x91AE08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x91AF6C", Offset = "0x91AF6C", VA = "0x91AF6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x91AFC8", Offset = "0x91AFC8", VA = "0x91AFC8")]
		public LinearAnimation()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class LinearAnimator : MonoBehaviour
	{
		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentLinearMapping;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int framesUnchanged;

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x91AFD0", Offset = "0x91AFD0", VA = "0x91AFD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x91B0D0", Offset = "0x91B0D0", VA = "0x91B0D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x91B174", Offset = "0x91B174", VA = "0x91B174")]
		public LinearAnimator()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class LinearAudioPitch : MonoBehaviour
	{
		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve pitchCurve;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minPitch;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxPitch;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool applyContinuously;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x91B184", Offset = "0x91B184", VA = "0x91B184")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x91B264", Offset = "0x91B264", VA = "0x91B264")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x91B274", Offset = "0x91B274", VA = "0x91B274")]
		private void Apply()
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x91B330", Offset = "0x91B330", VA = "0x91B330")]
		public LinearAudioPitch()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class LinearBlendshape : MonoBehaviour
	{
		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer skinnedMesh;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastValue;

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x91B340", Offset = "0x91B340", VA = "0x91B340")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x91B420", Offset = "0x91B420", VA = "0x91B420")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x91B498", Offset = "0x91B498", VA = "0x91B498")]
		public LinearBlendshape()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class LinearDisplacement : MonoBehaviour
	{
		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 displacement;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialPosition;

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x91B4A0", Offset = "0x91B4A0", VA = "0x91B4A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x91B554", Offset = "0x91B554", VA = "0x91B554")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x91B698", Offset = "0x91B698", VA = "0x91B698")]
		public LinearDisplacement()
		{
		}
	}
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FE40", Offset = "0x56FE40")]
	public class LinearDrive : MonoBehaviour
	{
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform startPosition;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform endPosition;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool repositionGameObject;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool maintainMomemntum;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float momemtumDampenRate;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float initialMappingOffset;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int numMappingChangeSamples;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] mappingChangeSamples;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float prevMapping;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float mappingChangeRate;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int sampleCount;

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x91B6A0", Offset = "0x91B6A0", VA = "0x91B6A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x91B6F8", Offset = "0x91B6F8", VA = "0x91B6F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x91BA30", Offset = "0x91BA30", VA = "0x91BA30")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x91BCC4", Offset = "0x91BCC4", VA = "0x91BCC4")]
		private void CalculateMappingChangeRate()
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x91B834", Offset = "0x91B834", VA = "0x91B834")]
		private void UpdateLinearMapping(Transform tr)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x91BB50", Offset = "0x91BB50", VA = "0x91BB50")]
		private float CalculateLinearMapping(Transform tr)
		{
			return default(float);
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x91BDB0", Offset = "0x91BDB0", VA = "0x91BDB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x91BF68", Offset = "0x91BF68", VA = "0x91BF68")]
		public LinearDrive()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class LinearMapping : MonoBehaviour
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x91BF88", Offset = "0x91BF88", VA = "0x91BF88")]
		public LinearMapping()
		{
		}
	}
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FEA4", Offset = "0x56FEA4")]
	public class PlaySound : MonoBehaviour
	{
		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C51C", Offset = "0x57C51C")]
		public AudioClip[] waveFile;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C554", Offset = "0x57C554")]
		public bool stopOnPlay;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C58C", Offset = "0x57C58C")]
		public bool disableOnEnd;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C5C4", Offset = "0x57C5C4")]
		public bool looping;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C5FC", Offset = "0x57C5FC")]
		public bool stopOnEnd;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C634", Offset = "0x57C634")]
		public bool playOnAwakeWithDelay;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C66C", Offset = "0x57C66C")]
		public bool useRandomVolume;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C6A4", Offset = "0x57C6A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C6A4", Offset = "0x57C6A4")]
		public float volMin;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C6F8", Offset = "0x57C6F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C6F8", Offset = "0x57C6F8")]
		public float volMax;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C74C", Offset = "0x57C74C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C74C", Offset = "0x57C74C")]
		public bool useRandomPitch;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C7AC", Offset = "0x57C7AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C7AC", Offset = "0x57C7AC")]
		public float pitchMin;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C800", Offset = "0x57C800")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C800", Offset = "0x57C800")]
		public float pitchMax;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C854", Offset = "0x57C854")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C854", Offset = "0x57C854")]
		public bool useRetriggerTime;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C8B4", Offset = "0x57C8B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C8B4", Offset = "0x57C8B4")]
		public float timeInitial;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C90C", Offset = "0x57C90C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C90C", Offset = "0x57C90C")]
		public float timeMin;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C964", Offset = "0x57C964")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57C964", Offset = "0x57C964")]
		public float timeMax;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57C9BC", Offset = "0x57C9BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57C9BC", Offset = "0x57C9BC")]
		public bool useRandomSilence;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CA1C", Offset = "0x57CA1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CA1C", Offset = "0x57CA1C")]
		public float percentToNotPlay;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CA70", Offset = "0x57CA70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CA70", Offset = "0x57CA70")]
		public float delayOffsetTime;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioClip clip;

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x81582C", Offset = "0x81582C", VA = "0x81582C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x81595C", Offset = "0x81595C", VA = "0x81595C")]
		public void Play()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x81596C", Offset = "0x81596C", VA = "0x81596C")]
		public void PlayWithDelay(float delayTime)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x815AA8", Offset = "0x815AA8", VA = "0x815AA8")]
		public AudioClip PlayOneShotSound()
		{
			return null;
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x8159E4", Offset = "0x8159E4", VA = "0x8159E4")]
		public AudioClip PlayLooping()
		{
			return null;
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x815C88", Offset = "0x815C88", VA = "0x815C88")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x815CB0", Offset = "0x815CB0", VA = "0x815CB0")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x815B70", Offset = "0x815B70", VA = "0x815B70")]
		private void SetAudioSource()
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x815CCC", Offset = "0x815CCC", VA = "0x815CCC")]
		public PlaySound()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CAD0", Offset = "0x57CAD0")]
		public Transform trackingOriginTransform;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CB08", Offset = "0x57CB08")]
		public Transform[] hmdTransforms;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CB40", Offset = "0x57CB40")]
		public Hand[] hands;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CB78", Offset = "0x57CB78")]
		public Collider headCollider;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CBB0", Offset = "0x57CBB0")]
		public GameObject rigSteamVR;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CBE8", Offset = "0x57CBE8")]
		public GameObject rig2DFallback;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CC20", Offset = "0x57CC20")]
		public Transform audioListener;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool allowToggleTo2D;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Player _instance;

		[Token(Token = "0x170000CD")]
		public static Player instance
		{
			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0x815CEC", Offset = "0x815CEC", VA = "0x815CEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		public int handCount
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x815DB8", Offset = "0x815DB8", VA = "0x815DB8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CF")]
		public Hand leftHand
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x815EF8", Offset = "0x815EF8", VA = "0x815EF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		public Hand rightHand
		{
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x815FC4", Offset = "0x815FC4", VA = "0x815FC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		public SteamVR_Controller.Device leftController
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x816094", Offset = "0x816094", VA = "0x816094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		public SteamVR_Controller.Device rightController
		{
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x816128", Offset = "0x816128", VA = "0x816128")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		public Transform hmdTransform
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x8161BC", Offset = "0x8161BC", VA = "0x8161BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		public float eyeHeight
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x816260", Offset = "0x816260", VA = "0x816260")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D5")]
		public Vector3 feetPositionGuess
		{
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x8163F0", Offset = "0x8163F0", VA = "0x8163F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000D6")]
		public Vector3 bodyDirectionGuess
		{
			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x8165AC", Offset = "0x8165AC", VA = "0x8165AC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x815E48", Offset = "0x815E48", VA = "0x815E48")]
		public Hand GetHand(int i)
		{
			return null;
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x81677C", Offset = "0x81677C", VA = "0x81677C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x816804", Offset = "0x816804", VA = "0x816804")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x816A40", Offset = "0x816A40", VA = "0x816A40")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x816FAC", Offset = "0x816FAC", VA = "0x816FAC")]
		public void Draw2DDebug()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x816894", Offset = "0x816894", VA = "0x816894")]
		private void ActivateRig(GameObject rig)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x817110", Offset = "0x817110", VA = "0x817110")]
		public void PlayerShotSelf()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x817114", Offset = "0x817114", VA = "0x817114")]
		public Player()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class SeeThru : MonoBehaviour
	{
		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material seeThruMaterial;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject seeThru;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Interactable interactable;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer sourceRenderer;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer destRenderer;

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x817124", Offset = "0x817124", VA = "0x817124")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x8176FC", Offset = "0x8176FC", VA = "0x8176FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x8177CC", Offset = "0x8177CC", VA = "0x8177CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x81789C", Offset = "0x81789C", VA = "0x81789C")]
		private void AttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x8178BC", Offset = "0x8178BC", VA = "0x8178BC")]
		private void DetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x8178DC", Offset = "0x8178DC", VA = "0x8178DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x817B20", Offset = "0x817B20", VA = "0x817B20")]
		public SeeThru()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class SleepOnAwake : MonoBehaviour
	{
		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x817B28", Offset = "0x817B28", VA = "0x817B28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x817BD0", Offset = "0x817BD0", VA = "0x817BD0")]
		public SleepOnAwake()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class SoundDeparent : MonoBehaviour
	{
		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool destroyAfterPlayOnce;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x817C98", Offset = "0x817C98", VA = "0x817C98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x817CF0", Offset = "0x817CF0", VA = "0x817CF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x817DDC", Offset = "0x817DDC", VA = "0x817DDC")]
		public SoundDeparent()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class SoundPlayOneshot : MonoBehaviour
	{
		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] waveFiles;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float volMin;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float volMax;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pitchMin;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float pitchMax;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool playOnAwake;

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x817DEC", Offset = "0x817DEC", VA = "0x817DEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x817E5C", Offset = "0x817E5C", VA = "0x817E5C")]
		public void Play()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x817F98", Offset = "0x817F98", VA = "0x817F98")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x81802C", Offset = "0x81802C", VA = "0x81802C")]
		public void UnPause()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x8180C0", Offset = "0x8180C0", VA = "0x8180C0")]
		public SoundPlayOneshot()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour
	{
		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject itemPrefab;

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x8180C8", Offset = "0x8180C8", VA = "0x8180C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x818120", Offset = "0x818120", VA = "0x818120")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x8182A8", Offset = "0x8182A8", VA = "0x8182A8")]
		public SpawnAndAttachAfterControllerIsTracking()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class SpawnAndAttachToHand : MonoBehaviour
	{
		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand hand;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x8182B0", Offset = "0x8182B0", VA = "0x8182B0")]
		public void SpawnAndAttach(Hand passedInhand)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x8183C4", Offset = "0x8183C4", VA = "0x8183C4")]
		public SpawnAndAttachToHand()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class SpawnRenderModel : MonoBehaviour
	{
		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] materials;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SteamVR_RenderModel[] renderModels;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SpawnRenderModel> spawnRenderModels;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int lastFrameUpdated;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int spawnRenderModelUpdateIndex;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x8183CC", Offset = "0x8183CC", VA = "0x8183CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x818494", Offset = "0x818494", VA = "0x818494")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x8187CC", Offset = "0x8187CC", VA = "0x8187CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x818968", Offset = "0x818968", VA = "0x818968")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x818970", Offset = "0x818970", VA = "0x818970")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x818978", Offset = "0x818978", VA = "0x818978")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x818534", Offset = "0x818534", VA = "0x818534")]
		private void ShowController()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x81886C", Offset = "0x81886C", VA = "0x81886C")]
		private void HideController()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x818D18", Offset = "0x818D18", VA = "0x818D18")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x818F74", Offset = "0x818F74", VA = "0x818F74")]
		public SpawnRenderModel()
		{
		}
	}
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FF08", Offset = "0x56FF08")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FF08", Offset = "0x56FF08")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FF08", Offset = "0x56FF08")]
	public class Throwable : MonoBehaviour
	{
		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5720C8", Offset = "0x5720C8")]
		private sealed class <LateDetach>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x40019B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Throwable <>4__this;

			[Token(Token = "0x1700022C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CD0")]
				[Address(RVA = "0x820BF0", Offset = "0x820BF0", VA = "0x820BF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CD2")]
				[Address(RVA = "0x820C58", Offset = "0x820C58", VA = "0x820C58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0x820A10", Offset = "0x820A10", VA = "0x820A10")]
			[DebuggerHidden]
			public <LateDetach>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0x820B28", Offset = "0x820B28", VA = "0x820B28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0x820B2C", Offset = "0x820B2C", VA = "0x820B2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0x820BF8", Offset = "0x820BF8", VA = "0x820BF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EnumFlags]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CC58", Offset = "0x57CC58")]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CCA4", Offset = "0x57CCA4")]
		public string attachmentPoint;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CCDC", Offset = "0x57CCDC")]
		public float catchSpeedThreshold;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CD14", Offset = "0x57CD14")]
		public bool restoreOriginalParent;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool attachEaseIn;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve snapAttachEaseInCurve;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float snapAttachEaseInTime;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] attachEaseInAttachmentNames;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VelocityEstimator velocityEstimator;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool attached;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float attachTime;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 attachPosition;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion attachRotation;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform attachEaseInTransform;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onPickUp;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onDetachFromHand;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool snapAttachEaseInCompleted;

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x81F960", Offset = "0x81F960", VA = "0x81F960")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x81F9F4", Offset = "0x81F9F4", VA = "0x81F9F4")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x81FAD4", Offset = "0x81FAD4", VA = "0x81FAD4")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x81FB58", Offset = "0x81FB58", VA = "0x81FB58")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x81FC30", Offset = "0x81FC30", VA = "0x81FC30")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x81FECC", Offset = "0x81FECC", VA = "0x81FECC")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x82071C", Offset = "0x82071C", VA = "0x82071C")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x820994", Offset = "0x820994", VA = "0x820994")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5818A0", Offset = "0x5818A0")]
		private IEnumerator LateDetach(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x820A3C", Offset = "0x820A3C", VA = "0x820A3C")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x820A7C", Offset = "0x820A7C", VA = "0x820A7C")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x820AD4", Offset = "0x820AD4", VA = "0x820AD4")]
		public Throwable()
		{
		}
	}
	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x56FFBC", Offset = "0x56FFBC")]
	public class UIElement : MonoBehaviour
	{
		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomEvents.UnityEventHand onHandClick;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Hand currentHand;

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x820C60", Offset = "0x820C60", VA = "0x820C60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x820D4C", Offset = "0x820D4C", VA = "0x820D4C")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x820E0C", Offset = "0x820E0C", VA = "0x820E0C")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x820ED0", Offset = "0x820ED0", VA = "0x820ED0")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x820FA4", Offset = "0x820FA4", VA = "0x820FA4")]
		private void OnButtonClick()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x821000", Offset = "0x821000", VA = "0x821000")]
		public UIElement()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class Unparent : MonoBehaviour
	{
		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform oldParent;

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x821008", Offset = "0x821008", VA = "0x821008")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x821104", Offset = "0x821104", VA = "0x821104")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x8211C8", Offset = "0x8211C8", VA = "0x8211C8")]
		public Transform GetOldParent()
		{
			return null;
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x8211D0", Offset = "0x8211D0", VA = "0x8211D0")]
		public Unparent()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public static class Util
	{
		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5720D8", Offset = "0x5720D8")]
		private sealed class <WrapCoroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator coroutine;

			[Token(Token = "0x40019BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCoroutineFinished;

			[Token(Token = "0x1700022E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CD6")]
				[Address(RVA = "0x822D74", Offset = "0x822D74", VA = "0x822D74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CD8")]
				[Address(RVA = "0x822DDC", Offset = "0x822DDC", VA = "0x822DDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0x8224CC", Offset = "0x8224CC", VA = "0x8224CC")]
			[DebuggerHidden]
			public <WrapCoroutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0x822C0C", Offset = "0x822C0C", VA = "0x822C0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0x822C10", Offset = "0x822C10", VA = "0x822C10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0x822D7C", Offset = "0x822D7C", VA = "0x822D7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200052F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5720E8", Offset = "0x5720E8")]
		private sealed class <>c__47<T>
		{
			[Token(Token = "0x40019BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__47<T> <>9;

			[Token(Token = "0x40019BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, T> <>9__47_0;

			[Token(Token = "0x6001CDA")]
			public <>c__47()
			{
			}

			[Token(Token = "0x6001CDB")]
			internal T <Median>b__47_0(T x)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x400112A")]
		public const float FeetToMeters = 0.3048f;

		[Token(Token = "0x400112B")]
		public const float FeetToCentimeters = 30.48f;

		[Token(Token = "0x400112C")]
		public const float InchesToMeters = 0.0254f;

		[Token(Token = "0x400112D")]
		public const float InchesToCentimeters = 2.54f;

		[Token(Token = "0x400112E")]
		public const float MetersToFeet = 3.28084f;

		[Token(Token = "0x400112F")]
		public const float MetersToInches = 39.3701f;

		[Token(Token = "0x4001130")]
		public const float CentimetersToFeet = 0.0328084f;

		[Token(Token = "0x4001131")]
		public const float CentimetersToInches = 0.393701f;

		[Token(Token = "0x4001132")]
		public const float KilometersToMiles = 0.621371f;

		[Token(Token = "0x4001133")]
		public const float MilesToKilometers = 1.60934f;

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x8211D8", Offset = "0x8211D8", VA = "0x8211D8")]
		public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x8156E8", Offset = "0x8156E8", VA = "0x8156E8")]
		public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x8211F4", Offset = "0x8211F4", VA = "0x8211F4")]
		public static float Approach(float target, float value, float speed)
		{
			return default(float);
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x82121C", Offset = "0x82121C", VA = "0x82121C")]
		public static Vector3 BezierInterpolate3(Vector3 p0, Vector3 c0, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x821334", Offset = "0x821334", VA = "0x821334")]
		public static Vector3 BezierInterpolate4(Vector3 p0, Vector3 c0, Vector3 c1, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x82150C", Offset = "0x82150C", VA = "0x82150C")]
		public static Vector3 Vector3FromString(string szString)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x821648", Offset = "0x821648", VA = "0x821648")]
		public static Vector2 Vector2FromString(string szString)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x821784", Offset = "0x821784", VA = "0x821784")]
		public static float Normalize(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x821794", Offset = "0x821794", VA = "0x821794")]
		public static Vector3 Vector2AsVector3(Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x8217D0", Offset = "0x8217D0", VA = "0x8217D0")]
		public static Vector2 Vector3AsVector2(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x821800", Offset = "0x821800", VA = "0x821800")]
		public static float AngleOf(Vector2 v)
		{
			return default(float);
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x8218B8", Offset = "0x8218B8", VA = "0x8218B8")]
		public static float YawOf(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6000F9E")]
		public static void Swap<T>(ref T lhs, ref T rhs)
		{
		}

		[Token(Token = "0x6000F9F")]
		public static void Shuffle<T>(T[] array)
		{
		}

		[Token(Token = "0x6000FA0")]
		public static void Shuffle<T>(List<T> list)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x821980", Offset = "0x821980", VA = "0x821980")]
		public static int RandomWithLookback(int min, int max, List<int> history, int historyCount)
		{
			return default(int);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x821A80", Offset = "0x821A80", VA = "0x821A80")]
		public static Transform FindChild(Transform parent, string name)
		{
			return null;
		}

		[Token(Token = "0x6000FA3")]
		public static bool IsNullOrEmpty<T>(T[] array)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA4")]
		public static bool IsValidIndex<T>(T[] array, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA5")]
		public static bool IsValidIndex<T>(List<T> list, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA6")]
		public static int FindOrAdd<T>(List<T> list, T item)
		{
			return default(int);
		}

		[Token(Token = "0x6000FA7")]
		public static List<T> FindAndRemove<T>(List<T> list, Predicate<T> match)
		{
			return null;
		}

		[Token(Token = "0x6000FA8")]
		public static T FindOrAddComponent<T>(GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000FA9")]
		public static void FastRemove<T>(List<T> list, int index)
		{
		}

		[Token(Token = "0x6000FAA")]
		public static void ReplaceGameObject<T, U>(T replace, U replaceWith) where T : MonoBehaviour where U : MonoBehaviour
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x821D8C", Offset = "0x821D8C", VA = "0x821D8C")]
		public static void SwitchLayerRecursively(Transform transform, int fromLayer, int toLayer)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x81E3F4", Offset = "0x81E3F4", VA = "0x81E3F4")]
		public static void DrawCross(Vector3 origin, Color crossColor, float size)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x818C1C", Offset = "0x818C1C", VA = "0x818C1C")]
		public static void ResetTransform(Transform t, bool resetScale = true)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x821E44", Offset = "0x821E44", VA = "0x821E44")]
		public static Vector3 ClosestPointOnLine(Vector3 vA, Vector3 vB, Vector3 vPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x822030", Offset = "0x822030", VA = "0x822030")]
		public static void AfterTimer(GameObject go, float _time, Action callback, bool trigger_if_destroyed_early = false)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x8220BC", Offset = "0x8220BC", VA = "0x8220BC")]
		public static void SendPhysicsMessage(Collider collider, string message, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x8221D8", Offset = "0x8221D8", VA = "0x8221D8")]
		public static void SendPhysicsMessage(Collider collider, string message, object arg, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x822308", Offset = "0x822308", VA = "0x822308")]
		public static void IgnoreCollisions(GameObject goA, GameObject goB)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x822450", Offset = "0x822450", VA = "0x822450")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581904", Offset = "0x581904")]
		public static IEnumerator WrapCoroutine(IEnumerator coroutine, Action onCoroutineFinished)
		{
			return null;
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x8224F8", Offset = "0x8224F8", VA = "0x8224F8")]
		public static Color ColorWithAlpha(this Color color, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x822500", Offset = "0x822500", VA = "0x822500")]
		public static void Quit()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x822524", Offset = "0x822524", VA = "0x822524")]
		public static decimal FloatToDecimal(float value, int decimalPlaces = 2)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000FB7")]
		public static T Median<T>(this IEnumerable<T> source)
		{
			return (T)null;
		}

		[Token(Token = "0x6000FB8")]
		public static void ForEach<T>(this IEnumerable<T> source, Action<T> action)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x8225DC", Offset = "0x8225DC", VA = "0x8225DC")]
		public static string FixupNewlines(string text)
		{
			return null;
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x82268C", Offset = "0x82268C", VA = "0x82268C")]
		public static float PathLength(NavMeshPath path)
		{
			return default(float);
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x822808", Offset = "0x822808", VA = "0x822808")]
		public static bool HasCommandLineArgument(string argumentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x82289C", Offset = "0x82289C", VA = "0x82289C")]
		public static int GetCommandLineArgValue(string argumentName, int nDefaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x822968", Offset = "0x822968", VA = "0x822968")]
		public static float GetCommandLineArgValue(string argumentName, float flDefaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x822A7C", Offset = "0x822A7C", VA = "0x822A7C")]
		public static void SetActive(GameObject gameObject, bool active)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x822B20", Offset = "0x822B20", VA = "0x822B20")]
		public static string CombinePaths(params string[] paths)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000264")]
	public class AfterTimer_Component : MonoBehaviour
	{
		[Token(Token = "0x2000530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5720F8", Offset = "0x5720F8")]
		private sealed class <Wait>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AfterTimer_Component <>4__this;

			[Token(Token = "0x17000230")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CDF")]
				[Address(RVA = "0x9070AC", Offset = "0x9070AC", VA = "0x9070AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000231")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CE1")]
				[Address(RVA = "0x907114", Offset = "0x907114", VA = "0x907114", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0x906F24", Offset = "0x906F24", VA = "0x906F24")]
			[DebuggerHidden]
			public <Wait>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0x906FB8", Offset = "0x906FB8", VA = "0x906FB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0x906FBC", Offset = "0x906FBC", VA = "0x906FBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0x9070B4", Offset = "0x9070B4", VA = "0x9070B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action callback;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float triggerTime;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool timerActive;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool triggerOnEarlyDestroy;

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x906E70", Offset = "0x906E70", VA = "0x906E70")]
		public void Init(float _time, Action _callback, bool earlydestroy)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x906EB4", Offset = "0x906EB4", VA = "0x906EB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581998", Offset = "0x581998")]
		private IEnumerator Wait()
		{
			return null;
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x906F50", Offset = "0x906F50", VA = "0x906F50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x906FB0", Offset = "0x906FB0", VA = "0x906FB0")]
		public AfterTimer_Component()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x2000531")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572108", Offset = "0x572108")]
		private sealed class <EstimateVelocityCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VelocityEstimator <>4__this;

			[Token(Token = "0x40019C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x40019C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x17000232")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CE5")]
				[Address(RVA = "0x8234E8", Offset = "0x8234E8", VA = "0x8234E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000233")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CE7")]
				[Address(RVA = "0x823550", Offset = "0x823550", VA = "0x823550", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0x8230B8", Offset = "0x8230B8", VA = "0x8230B8")]
			[DebuggerHidden]
			public <EstimateVelocityCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0x8230F8", Offset = "0x8230F8", VA = "0x8230F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0x8230FC", Offset = "0x8230FC", VA = "0x8230FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0x8234F0", Offset = "0x8234F0", VA = "0x8234F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CD4C", Offset = "0x57CD4C")]
		public int velocityAverageFrames;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CD84", Offset = "0x57CD84")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool estimateOnAwake;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine routine;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int sampleCount;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] velocitySamples;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] angularVelocitySamples;

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x81FE7C", Offset = "0x81FE7C", VA = "0x81FE7C")]
		public void BeginEstimatingVelocity()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x82035C", Offset = "0x82035C", VA = "0x82035C")]
		public void FinishEstimatingVelocity()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x82038C", Offset = "0x82038C", VA = "0x82038C")]
		public Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x820554", Offset = "0x820554", VA = "0x820554")]
		public Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x822E54", Offset = "0x822E54", VA = "0x822E54")]
		public Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x823038", Offset = "0x823038", VA = "0x823038")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x822DE4", Offset = "0x822DE4", VA = "0x822DE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5819FC", Offset = "0x5819FC")]
		private IEnumerator EstimateVelocityCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x8230E4", Offset = "0x8230E4", VA = "0x8230E4")]
		public VelocityEstimator()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class ControllerButtonHints : MonoBehaviour
	{
		[Token(Token = "0x2000532")]
		private enum OffsetType
		{
			[Token(Token = "0x40019C6")]
			Up,
			[Token(Token = "0x40019C7")]
			Right,
			[Token(Token = "0x40019C8")]
			Forward,
			[Token(Token = "0x40019C9")]
			Back
		}

		[Token(Token = "0x2000533")]
		private class ButtonHintInfo
		{
			[Token(Token = "0x40019CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string componentName;

			[Token(Token = "0x40019CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MeshRenderer> renderers;

			[Token(Token = "0x40019CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform localTransform;

			[Token(Token = "0x40019CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject textHintObject;

			[Token(Token = "0x40019CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform textStartAnchor;

			[Token(Token = "0x40019CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform textEndAnchor;

			[Token(Token = "0x40019D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 textEndOffsetDir;

			[Token(Token = "0x40019D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform canvasOffset;

			[Token(Token = "0x40019D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Text text;

			[Token(Token = "0x40019D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public TextMesh textMesh;

			[Token(Token = "0x40019D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Canvas textCanvas;

			[Token(Token = "0x40019D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LineRenderer line;

			[Token(Token = "0x40019D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float distanceFromCenter;

			[Token(Token = "0x40019D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool textHintActive;

			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0x9116C8", Offset = "0x9116C8", VA = "0x9116C8")]
			public ButtonHintInfo()
			{
			}
		}

		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572118", Offset = "0x572118")]
		private sealed class <TestButtonHints>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x17000234")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CEC")]
				[Address(RVA = "0x9131F0", Offset = "0x9131F0", VA = "0x9131F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000235")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CEE")]
				[Address(RVA = "0x913258", Offset = "0x913258", VA = "0x913258", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0x911EE8", Offset = "0x911EE8", VA = "0x911EE8")]
			[DebuggerHidden]
			public <TestButtonHints>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001CEA")]
			[Address(RVA = "0x912F74", Offset = "0x912F74", VA = "0x912F74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0x912F78", Offset = "0x912F78", VA = "0x912F78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CED")]
			[Address(RVA = "0x9131F8", Offset = "0x9131F8", VA = "0x9131F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572128", Offset = "0x572128")]
		private sealed class <TestTextHints>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x17000236")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF2")]
				[Address(RVA = "0x913498", Offset = "0x913498", VA = "0x913498", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000237")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CF4")]
				[Address(RVA = "0x913500", Offset = "0x913500", VA = "0x913500", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0x911F84", Offset = "0x911F84", VA = "0x911F84")]
			[DebuggerHidden]
			public <TestTextHints>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0x913260", Offset = "0x913260", VA = "0x913260", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0x913264", Offset = "0x913264", VA = "0x913264", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0x9134A0", Offset = "0x9134A0", VA = "0x9134A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material controllerMaterial;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color flashColor;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject textHintPrefab;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CDBC", Offset = "0x57CDBC")]
		public bool debugHints;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Player player;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<MeshRenderer> flashingRenderers;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float startTime;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float tickCount;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<EVRButtonId, ButtonHintInfo> buttonHintInfos;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform textHintParent;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<KeyValuePair<string, ulong>> componentButtonMasks;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int colorID;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CDF4", Offset = "0x57CDF4")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 centerPosition;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x170000D7")]
		public bool initialized
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x90F2B8", Offset = "0x90F2B8", VA = "0x90F2B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581A60", Offset = "0x581A60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x90F2C0", Offset = "0x90F2C0", VA = "0x90F2C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581A70", Offset = "0x581A70")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x90F2CC", Offset = "0x90F2CC", VA = "0x90F2CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x90F388", Offset = "0x90F388", VA = "0x90F388")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x90F3B0", Offset = "0x90F3B0", VA = "0x90F3B0")]
		private void HintDebugLog(string msg)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x90F45C", Offset = "0x90F45C", VA = "0x90F45C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x90F47C", Offset = "0x90F47C", VA = "0x90F47C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x90F51C", Offset = "0x90F51C", VA = "0x90F51C")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x90F6A8", Offset = "0x90F6A8", VA = "0x90F6A8")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x90F880", Offset = "0x90F880", VA = "0x90F880")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool succeess)
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x910198", Offset = "0x910198", VA = "0x910198")]
		private void CreateAndAddButtonInfo(EVRButtonId buttonID)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x911170", Offset = "0x911170", VA = "0x911170")]
		private void ComputeTextEndTransforms()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x9116D0", Offset = "0x9116D0", VA = "0x9116D0")]
		private void ShowButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x90F540", Offset = "0x90F540", VA = "0x90F540")]
		private void HideAllButtonHints()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x911A74", Offset = "0x911A74", VA = "0x911A74")]
		private void HideButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x911D10", Offset = "0x911D10", VA = "0x911D10")]
		private bool IsButtonHintActive(EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x911E78", Offset = "0x911E78", VA = "0x911E78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581A80", Offset = "0x581A80")]
		private IEnumerator TestButtonHints()
		{
			return null;
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x911F14", Offset = "0x911F14", VA = "0x911F14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581AE4", Offset = "0x581AE4")]
		private IEnumerator TestTextHints()
		{
			return null;
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x911FB0", Offset = "0x911FB0", VA = "0x911FB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x9122B4", Offset = "0x9122B4", VA = "0x9122B4")]
		private void UpdateTextHint(ButtonHintInfo hintInfo)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x90F4B4", Offset = "0x90F4B4", VA = "0x90F4B4")]
		private void Clear()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x9125B0", Offset = "0x9125B0", VA = "0x9125B0")]
		private void ShowText(EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x912790", Offset = "0x912790", VA = "0x912790")]
		private void HideText(EVRButtonId button)
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x90F580", Offset = "0x90F580", VA = "0x90F580")]
		private void HideAllText()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x912884", Offset = "0x912884", VA = "0x912884")]
		private string GetActiveHintText(EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x912954", Offset = "0x912954", VA = "0x912954")]
		private static ControllerButtonHints GetControllerButtonHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x90C72C", Offset = "0x90C72C", VA = "0x90C72C")]
		public static void ShowButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x90C540", Offset = "0x90C540", VA = "0x90C540")]
		public static void HideButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x912A2C", Offset = "0x912A2C", VA = "0x912A2C")]
		public static void HideAllButtonHints(Hand hand)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x912AC8", Offset = "0x912AC8", VA = "0x912AC8")]
		public static bool IsButtonHintActive(Hand hand, EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x912B7C", Offset = "0x912B7C", VA = "0x912B7C")]
		public static void ShowTextHint(Hand hand, EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x912C48", Offset = "0x912C48", VA = "0x912C48")]
		public static void HideTextHint(Hand hand, EVRButtonId button)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x912CF8", Offset = "0x912CF8", VA = "0x912CF8")]
		public static void HideAllTextHints(Hand hand)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x912D94", Offset = "0x912D94", VA = "0x912D94")]
		public static string GetActiveHintText(Hand hand, EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x912E58", Offset = "0x912E58", VA = "0x912E58")]
		public ControllerButtonHints()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class ArcheryTarget : MonoBehaviour
	{
		[Token(Token = "0x2000536")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572138", Offset = "0x572138")]
		private sealed class <FallDown>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArcheryTarget <>4__this;

			[Token(Token = "0x40019E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Quaternion <startingRot>5__2;

			[Token(Token = "0x40019E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__3;

			[Token(Token = "0x40019E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <rotLerp>5__4;

			[Token(Token = "0x17000238")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF8")]
				[Address(RVA = "0x907448", Offset = "0x907448", VA = "0x907448", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000239")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CFA")]
				[Address(RVA = "0x9074B0", Offset = "0x9074B0", VA = "0x9074B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0x907200", Offset = "0x907200", VA = "0x907200")]
			[DebuggerHidden]
			public <FallDown>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0x907244", Offset = "0x907244", VA = "0x907244", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0x907248", Offset = "0x907248", VA = "0x907248", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0x907450", Offset = "0x907450", VA = "0x907450", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onTakeDamage;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onceOnly;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform targetCenter;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform baseTransform;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform fallenDownTransform;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float fallTime;

		[Token(Token = "0x4001156")]
		private const float targetRadius = 0.25f;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool targetEnabled;

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x90712C", Offset = "0x90712C", VA = "0x90712C")]
		private void ApplyDamage()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x90718C", Offset = "0x90718C", VA = "0x90718C")]
		private void FireExposure()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x907130", Offset = "0x907130", VA = "0x907130")]
		private void OnDamageTaken()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x907190", Offset = "0x907190", VA = "0x907190")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581B48", Offset = "0x581B48")]
		private IEnumerator FallDown()
		{
			return null;
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x90722C", Offset = "0x90722C", VA = "0x90722C")]
		public ArcheryTarget()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class Arrow : MonoBehaviour
	{
		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem glintParticle;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody arrowHeadRB;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody shaftRB;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PhysicMaterial targetPhysMaterial;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 prevPosition;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion prevRotation;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 prevVelocity;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 prevHeadPosition;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SoundPlayOneshot fireReleaseSound;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SoundPlayOneshot airReleaseSound;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SoundPlayOneshot hitTargetSound;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public PlaySound hitGroundSound;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool inFlight;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool released;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		private bool hasSpreadFire;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int travelledFrames;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject scaleParentObject;

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x9074B8", Offset = "0x9074B8", VA = "0x9074B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x907530", Offset = "0x907530", VA = "0x907530")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x90761C", Offset = "0x90761C", VA = "0x90761C")]
		public void ArrowReleased(float inputVelocity)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x907A28", Offset = "0x907A28", VA = "0x907A28")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x9080F8", Offset = "0x9080F8", VA = "0x9080F8")]
		private void StickInTarget(Collision collision, bool bSkipRayCast)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x908790", Offset = "0x908790", VA = "0x908790")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x908844", Offset = "0x908844", VA = "0x908844")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class ArrowHand : MonoBehaviour
	{
		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572148", Offset = "0x572148")]
		private sealed class <ArrowReleaseHaptics>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArrowHand <>4__this;

			[Token(Token = "0x1700023A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CFE")]
				[Address(RVA = "0x909CC4", Offset = "0x909CC4", VA = "0x909CC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D00")]
				[Address(RVA = "0x909D2C", Offset = "0x909D2C", VA = "0x909D2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0x909A10", Offset = "0x909A10", VA = "0x909A10")]
			[DebuggerHidden]
			public <ArrowReleaseHaptics>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0x909AB0", Offset = "0x909AB0", VA = "0x909AB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x909AB4", Offset = "0x909AB4", VA = "0x909AB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x909CCC", Offset = "0x909CCC", VA = "0x909CCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Longbow bow;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject currentArrow;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject arrowPrefab;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform arrowNockTransform;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float nockDistance;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float lerpCompleteDistance;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rotationLerpThreshold;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float positionLerpThreshold;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool allowArrowSpawn;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool nocked;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool inNockRange;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool arrowLerpComplete;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundPlayOneshot arrowSpawnSound;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AllowTeleportWhileAttachedToHand allowTeleport;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int maxArrowCount;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<GameObject> arrowList;

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x90884C", Offset = "0x90884C", VA = "0x90884C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x9088E8", Offset = "0x9088E8", VA = "0x9088E8")]
		private void OnAttachedToHand(Hand attachedHand)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x908958", Offset = "0x908958", VA = "0x908958")]
		private GameObject InstantiateArrow()
		{
			return null;
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x908B6C", Offset = "0x908B6C", VA = "0x908B6C")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x909818", Offset = "0x909818", VA = "0x909818")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x909408", Offset = "0x909408", VA = "0x909408")]
		private void FireArrow()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x909A04", Offset = "0x909A04", VA = "0x909A04")]
		private void EnableArrowSpawn()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x909994", Offset = "0x909994", VA = "0x909994")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581BAC", Offset = "0x581BAC")]
		private IEnumerator ArrowReleaseHaptics()
		{
			return null;
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x909A3C", Offset = "0x909A3C", VA = "0x909A3C")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x909A64", Offset = "0x909A64", VA = "0x909A64")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x9088F0", Offset = "0x9088F0", VA = "0x9088F0")]
		private void FindBow()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x909A8C", Offset = "0x909A8C", VA = "0x909A8C")]
		public ArrowHand()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class ArrowheadRotation : MonoBehaviour
	{
		[Token(Token = "0x6001007")]
		[Address(RVA = "0x909D34", Offset = "0x909D34", VA = "0x909D34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x909DCC", Offset = "0x909DCC", VA = "0x909DCC")]
		public ArrowheadRotation()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class Balloon : MonoBehaviour
	{
		[Token(Token = "0x2000538")]
		public enum BalloonColor
		{
			[Token(Token = "0x40019E8")]
			Red,
			[Token(Token = "0x40019E9")]
			OrangeRed,
			[Token(Token = "0x40019EA")]
			Orange,
			[Token(Token = "0x40019EB")]
			YellowOrange,
			[Token(Token = "0x40019EC")]
			Yellow,
			[Token(Token = "0x40019ED")]
			GreenYellow,
			[Token(Token = "0x40019EE")]
			Green,
			[Token(Token = "0x40019EF")]
			BlueGreen,
			[Token(Token = "0x40019F0")]
			Blue,
			[Token(Token = "0x40019F1")]
			VioletBlue,
			[Token(Token = "0x40019F2")]
			Violet,
			[Token(Token = "0x40019F3")]
			RedViolet,
			[Token(Token = "0x40019F4")]
			LightGray,
			[Token(Token = "0x40019F5")]
			DarkGray,
			[Token(Token = "0x40019F6")]
			Random
		}

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject popPrefab;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxVelocity;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lifetime;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool burstOnLifetimeEnd;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject lifetimeEndParticlePrefab;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SoundPlayOneshot lifetimeEndSound;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float destructTime;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float releaseTime;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SoundPlayOneshot collisionSound;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lastSoundTime;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float soundDelay;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody balloonRigidbody;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool bParticlesSpawned;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float s_flLastDeathSound;

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x909DD4", Offset = "0x909DD4", VA = "0x909DD4")]
		private void Start()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x909E70", Offset = "0x909E70", VA = "0x909E70")]
		private void Update()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x909F2C", Offset = "0x909F2C", VA = "0x909F2C")]
		private void SpawnParticles(GameObject particlePrefab, SoundPlayOneshot sound)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x90A17C", Offset = "0x90A17C", VA = "0x90A17C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x90A278", Offset = "0x90A278", VA = "0x90A278")]
		private void ApplyDamage()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x90A304", Offset = "0x90A304", VA = "0x90A304")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x90A650", Offset = "0x90A650", VA = "0x90A650")]
		public void SetColor(BalloonColor color)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x90A6DC", Offset = "0x90A6DC", VA = "0x90A6DC")]
		private Color BalloonColorToRGB(BalloonColor balloonColorVar)
		{
			return default(Color);
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x90A914", Offset = "0x90A914", VA = "0x90A914")]
		public Balloon()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class BalloonColliders : MonoBehaviour
	{
		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] colliders;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] colliderLocalPositions;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion[] colliderLocalRotations;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rb;

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x90A944", Offset = "0x90A944", VA = "0x90A944")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x90AB58", Offset = "0x90AB58", VA = "0x90AB58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x90ADC0", Offset = "0x90ADC0", VA = "0x90ADC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x90AF08", Offset = "0x90AF08", VA = "0x90AF08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x90AFC0", Offset = "0x90AFC0", VA = "0x90AFC0")]
		public BalloonColliders()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class BalloonHapticBump : MonoBehaviour
	{
		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject physParent;

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x90AFC8", Offset = "0x90AFC8", VA = "0x90AFC8")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x90B0EC", Offset = "0x90B0EC", VA = "0x90B0EC")]
		public BalloonHapticBump()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class BalloonSpawner : MonoBehaviour
	{
		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minSpawnTime;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpawnTime;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float nextSpawnTime;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject balloonPrefab;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool autoSpawn;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool spawnAtStartup;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool playSounds;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SoundPlayOneshot inflateSound;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SoundPlayOneshot stretchSound;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool sendSpawnMessageToParent;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float scale;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform spawnDirectionTransform;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float spawnForce;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool attachBalloon;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Balloon.BalloonColor color;

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x90B0F4", Offset = "0x90B0F4", VA = "0x90B0F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x90B574", Offset = "0x90B574", VA = "0x90B574")]
		private void Update()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x90B1B0", Offset = "0x90B1B0", VA = "0x90B1B0")]
		public GameObject SpawnBalloon(Balloon.BalloonColor color = Balloon.BalloonColor.Red)
		{
			return null;
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x90B63C", Offset = "0x90B63C", VA = "0x90B63C")]
		public void SpawnBalloonFromEvent(int color)
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x90B640", Offset = "0x90B640", VA = "0x90B640")]
		public BalloonSpawner()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class ExplosionWobble : MonoBehaviour
	{
		[Token(Token = "0x600101F")]
		[Address(RVA = "0x915080", Offset = "0x915080", VA = "0x915080")]
		public void ExplosionEvent(Vector3 explosionPos)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x915164", Offset = "0x915164", VA = "0x915164")]
		public ExplosionWobble()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class FireSource : MonoBehaviour
	{
		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject fireParticlePrefab;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool startActive;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject fireObject;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem customParticles;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isBurning;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float burnTime;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ignitionDelay;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float ignitionTime;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Hand hand;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource ignitionSound;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool canSpreadFromThisSource;

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x9155CC", Offset = "0x9155CC", VA = "0x9155CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x915818", Offset = "0x915818", VA = "0x915818")]
		private void Update()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x915920", Offset = "0x915920", VA = "0x915920")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x9159AC", Offset = "0x9159AC", VA = "0x9159AC")]
		private void FireExposure()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x9155DC", Offset = "0x9155DC", VA = "0x9155DC")]
		private void StartBurning()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x915ABC", Offset = "0x915ABC", VA = "0x915ABC")]
		public FireSource()
		{
		}
	}
	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x570030", Offset = "0x570030")]
	public class Longbow : MonoBehaviour
	{
		[Token(Token = "0x2000539")]
		public enum Handedness
		{
			[Token(Token = "0x40019F8")]
			Left,
			[Token(Token = "0x40019F9")]
			Right
		}

		[Token(Token = "0x200053A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572158", Offset = "0x572158")]
		private sealed class <ResetDrawAnim>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Longbow <>4__this;

			[Token(Token = "0x40019FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40019FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startLerp>5__3;

			[Token(Token = "0x1700023C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D04")]
				[Address(RVA = "0x8157BC", Offset = "0x8157BC", VA = "0x8157BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D06")]
				[Address(RVA = "0x815824", Offset = "0x815824", VA = "0x815824", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D01")]
			[Address(RVA = "0x8155CC", Offset = "0x8155CC", VA = "0x8155CC")]
			[DebuggerHidden]
			public <ResetDrawAnim>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x6001D02")]
			[Address(RVA = "0x8155F8", Offset = "0x8155F8", VA = "0x8155F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x8155FC", Offset = "0x8155FC", VA = "0x8155FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D05")]
			[Address(RVA = "0x8157C4", Offset = "0x8157C4", VA = "0x8157C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Handedness currentHandGuess;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float timeOfPossibleHandSwitch;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float timeBeforeConfirmingHandSwitch;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool possibleHandSwitch;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform pivotTransform;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform handleTransform;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hand hand;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ArrowHand arrowHand;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform nockTransform;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform nockRestTransform;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool autoSpawnArrowHand;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ItemPackage arrowHandItemPackage;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject arrowHandPrefab;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool nocked;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool pulled;

		[Token(Token = "0x40011B7")]
		private const float minPull = 0.05f;

		[Token(Token = "0x40011B8")]
		private const float maxPull = 0.5f;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float nockDistanceTravelled;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float hapticDistanceThreshold;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float lastTickDistance;

		[Token(Token = "0x40011BC")]
		private const float bowPullPulseStrengthLow = 100f;

		[Token(Token = "0x40011BD")]
		private const float bowPullPulseStrengthHigh = 500f;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 bowLeftVector;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float arrowMinVelocity;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float arrowMaxVelocity;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float arrowVelocity;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float minStrainTickTime;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float maxStrainTickTime;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float nextStrainTick;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool lerpBackToZeroRotation;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float lerpStartTime;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float lerpDuration;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion lerpStartRotation;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float nockLerpStartTime;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion nockLerpStartRotation;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float drawOffset;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public LinearMapping bowDrawLinearMapping;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool deferNewPoses;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 lateUpdatePos;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Quaternion lateUpdateRot;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public SoundBowClick drawSound;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float drawTension;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public SoundPlayOneshot arrowSlideSound;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public SoundPlayOneshot releaseSound;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public SoundPlayOneshot nockSound;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private SteamVR_Events.Action newPosesAppliedAction;

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x91BF90", Offset = "0x91BF90", VA = "0x91BF90")]
		private void OnAttachedToHand(Hand attachedHand)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x91BF98", Offset = "0x91BF98", VA = "0x91BF98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x91C034", Offset = "0x91C034", VA = "0x91C034")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x91C054", Offset = "0x91C054", VA = "0x91C054")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x91C074", Offset = "0x91C074", VA = "0x91C074")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x91C0D8", Offset = "0x91C0D8", VA = "0x91C0D8")]
		private void OnNewPosesApplied()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x91C140", Offset = "0x91C140", VA = "0x91C140")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x909894", Offset = "0x909894", VA = "0x909894")]
		public void ArrowReleased()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x91CA74", Offset = "0x91CA74", VA = "0x91CA74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581C10", Offset = "0x581C10")]
		private IEnumerator ResetDrawAnim()
		{
			return null;
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x91CAE4", Offset = "0x91CAE4", VA = "0x91CAE4")]
		public float GetArrowVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x9097C0", Offset = "0x9097C0", VA = "0x9097C0")]
		public void StartRotationLerp()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x9092CC", Offset = "0x9092CC", VA = "0x9092CC")]
		public void StartNock(ArrowHand currentArrowHand)
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x91C990", Offset = "0x91C990", VA = "0x91C990")]
		private void EvaluateHandedness()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x91CAEC", Offset = "0x91CAEC", VA = "0x91CAEC")]
		private void DoHandednessCheck()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x909230", Offset = "0x909230", VA = "0x909230")]
		public void ArrowInPosition()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x909690", Offset = "0x909690", VA = "0x909690")]
		public void ReleaseNock()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x91CB6C", Offset = "0x91CB6C", VA = "0x91CB6C")]
		private void ShutDown()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x91CD24", Offset = "0x91CD24", VA = "0x91CD24")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x91CD4C", Offset = "0x91CD4C", VA = "0x91CD4C")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x91CD8C", Offset = "0x91CD8C", VA = "0x91CD8C")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x91CE08", Offset = "0x91CE08", VA = "0x91CE08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x91CE0C", Offset = "0x91CE0C", VA = "0x91CE0C")]
		public Longbow()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class SoundBowClick : MonoBehaviour
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip bowClick;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve pitchTensionCurve;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minPitch;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxPitch;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x817BD8", Offset = "0x817BD8", VA = "0x817BD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x817C30", Offset = "0x817C30", VA = "0x817C30")]
		public void PlayBowTensionClicks(float normalizedTension)
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x817C90", Offset = "0x817C90", VA = "0x817C90")]
		public SoundBowClick()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class ControllerHintsExample : MonoBehaviour
	{
		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572168", Offset = "0x572168")]
		private sealed class <TestButtonHints>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x1700023E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D0A")]
				[Address(RVA = "0x913A7C", Offset = "0x913A7C", VA = "0x913A7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D0C")]
				[Address(RVA = "0x913AE4", Offset = "0x913AE4", VA = "0x913AE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D07")]
			[Address(RVA = "0x91374C", Offset = "0x91374C", VA = "0x91374C")]
			[DebuggerHidden]
			public <TestButtonHints>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001D08")]
			[Address(RVA = "0x9137AC", Offset = "0x9137AC", VA = "0x9137AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D09")]
			[Address(RVA = "0x9137B0", Offset = "0x9137B0", VA = "0x9137B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0x913A84", Offset = "0x913A84", VA = "0x913A84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200053C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572178", Offset = "0x572178")]
		private sealed class <TestTextHints>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x17000240")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D10")]
				[Address(RVA = "0x913D38", Offset = "0x913D38", VA = "0x913D38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000241")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D12")]
				[Address(RVA = "0x913DA0", Offset = "0x913DA0", VA = "0x913DA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x913778", Offset = "0x913778", VA = "0x913778")]
			[DebuggerHidden]
			public <TestTextHints>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x913AEC", Offset = "0x913AEC", VA = "0x913AEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0x913AF0", Offset = "0x913AF0", VA = "0x913AF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x913D40", Offset = "0x913D40", VA = "0x913D40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine buttonHintCoroutine;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine textHintCoroutine;

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x913508", Offset = "0x913508", VA = "0x913508")]
		public void ShowButtonHints(Hand hand)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x9135CC", Offset = "0x9135CC", VA = "0x9135CC")]
		public void ShowTextHints(Hand hand)
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x913690", Offset = "0x913690", VA = "0x913690")]
		public void DisableHints()
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x91355C", Offset = "0x91355C", VA = "0x91355C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581C74", Offset = "0x581C74")]
		private IEnumerator TestButtonHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x913620", Offset = "0x913620", VA = "0x913620")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581CD8", Offset = "0x581CD8")]
		private IEnumerator TestTextHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x9137A4", Offset = "0x9137A4", VA = "0x9137A4")]
		public ControllerHintsExample()
		{
		}
	}
	[Token(Token = "0x2000274")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x570094", Offset = "0x570094")]
	public class InteractableExample : MonoBehaviour
	{
		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMesh textMesh;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 oldPosition;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion oldRotation;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float attachTime;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x919734", Offset = "0x919734", VA = "0x919734")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x9197A4", Offset = "0x9197A4", VA = "0x9197A4")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x919834", Offset = "0x919834", VA = "0x919834")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x919890", Offset = "0x919890", VA = "0x919890")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x919A78", Offset = "0x919A78", VA = "0x919A78")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x919B18", Offset = "0x919B18", VA = "0x919B18")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x919BA8", Offset = "0x919BA8", VA = "0x919BA8")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x919C80", Offset = "0x919C80", VA = "0x919C80")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x919C84", Offset = "0x919C84", VA = "0x919C84")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x919C88", Offset = "0x919C88", VA = "0x919C88")]
		public InteractableExample()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class AllowTeleportWhileAttachedToHand : MonoBehaviour
	{
		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool teleportAllowed;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool overrideHoverLock;

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x90711C", Offset = "0x90711C", VA = "0x90711C")]
		public AllowTeleportWhileAttachedToHand()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class ChaperoneInfo : MonoBehaviour
	{
		[Token(Token = "0x200053D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572188", Offset = "0x572188")]
		private sealed class <Start>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChaperoneInfo <>4__this;

			[Token(Token = "0x4001A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRChaperone <chaperone>5__2;

			[Token(Token = "0x17000242")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D16")]
				[Address(RVA = "0x90BF30", Offset = "0x90BF30", VA = "0x90BF30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000243")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D18")]
				[Address(RVA = "0x90BF98", Offset = "0x90BF98", VA = "0x90BF98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D13")]
			[Address(RVA = "0x90BB84", Offset = "0x90BB84", VA = "0x90BB84")]
			[DebuggerHidden]
			public <Start>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001D14")]
			[Address(RVA = "0x90BC24", Offset = "0x90BC24", VA = "0x90BC24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D15")]
			[Address(RVA = "0x90BC28", Offset = "0x90BC28", VA = "0x90BC28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D17")]
			[Address(RVA = "0x90BF38", Offset = "0x90BF38", VA = "0x90BF38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE04", Offset = "0x57CE04")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE14", Offset = "0x57CE14")]
		private float <playAreaSizeX>k__BackingField;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE24", Offset = "0x57CE24")]
		private float <playAreaSizeZ>k__BackingField;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CE34", Offset = "0x57CE34")]
		private bool <roomscale>k__BackingField;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SteamVR_Events.Event Initialized;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ChaperoneInfo _instance;

		[Token(Token = "0x170000D8")]
		public bool initialized
		{
			[Token(Token = "0x6001051")]
			[Address(RVA = "0x90B870", Offset = "0x90B870", VA = "0x90B870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581D3C", Offset = "0x581D3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x90B878", Offset = "0x90B878", VA = "0x90B878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581D4C", Offset = "0x581D4C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public float playAreaSizeX
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x90B884", Offset = "0x90B884", VA = "0x90B884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581D5C", Offset = "0x581D5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001054")]
			[Address(RVA = "0x90B88C", Offset = "0x90B88C", VA = "0x90B88C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581D6C", Offset = "0x581D6C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public float playAreaSizeZ
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x90B894", Offset = "0x90B894", VA = "0x90B894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581D7C", Offset = "0x581D7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x90B89C", Offset = "0x90B89C", VA = "0x90B89C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581D8C", Offset = "0x581D8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public bool roomscale
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x90B8A4", Offset = "0x90B8A4", VA = "0x90B8A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581D9C", Offset = "0x581D9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x90B8AC", Offset = "0x90B8AC", VA = "0x90B8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581DAC", Offset = "0x581DAC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public static ChaperoneInfo instance
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0x90B954", Offset = "0x90B954", VA = "0x90B954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x90B8B8", Offset = "0x90B8B8", VA = "0x90B8B8")]
		public static SteamVR_Events.Action InitializedAction(UnityAction action)
		{
			return null;
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x90BB14", Offset = "0x90BB14", VA = "0x90BB14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581DBC", Offset = "0x581DBC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x90BBB0", Offset = "0x90BBB0", VA = "0x90BBB0")]
		public ChaperoneInfo()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class IgnoreTeleportTrace : MonoBehaviour
	{
		[Token(Token = "0x600105E")]
		[Address(RVA = "0x918678", Offset = "0x918678", VA = "0x918678")]
		public IgnoreTeleportTrace()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class Teleport : MonoBehaviour
	{
		[Token(Token = "0x200053E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572198", Offset = "0x572198")]
		private sealed class <TeleportHintCoroutine>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Teleport <>4__this;

			[Token(Token = "0x4001A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <prevBreakTime>5__2;

			[Token(Token = "0x4001A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <prevHapticPulseTime>5__3;

			[Token(Token = "0x4001A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <pulsed>5__4;

			[Token(Token = "0x17000244")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D1C")]
				[Address(RVA = "0x81DBBC", Offset = "0x81DBBC", VA = "0x81DBBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000245")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D1E")]
				[Address(RVA = "0x81DC24", Offset = "0x81DC24", VA = "0x81DC24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D19")]
			[Address(RVA = "0x81D59C", Offset = "0x81D59C", VA = "0x81D59C")]
			[DebuggerHidden]
			public <TeleportHintCoroutine>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0x81D950", Offset = "0x81D950", VA = "0x81D950", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0x81D954", Offset = "0x81D954", VA = "0x81D954", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0x81DBC4", Offset = "0x81DBC4", VA = "0x81DBC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask traceLayerMask;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask floorFixupTraceLayerMask;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float floorFixupMaximumTraceDistance;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material areaVisibleMaterial;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material areaLockedMaterial;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material areaHighlightedMaterial;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material pointVisibleMaterial;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material pointLockedMaterial;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material pointHighlightedMaterial;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform destinationReticleTransform;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform invalidReticleTransform;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject playAreaPreviewCorner;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject playAreaPreviewSide;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color pointerValidColor;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color pointerInvalidColor;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color pointerLockedColor;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool showPlayAreaMarker;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float teleportFadeTime;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float meshFadeTime;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float arcDistance;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CE44", Offset = "0x57CE44")]
		public Transform onActivateObjectTransform;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform onDeactivateObjectTransform;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float activateObjectTime;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float deactivateObjectTime;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CE7C", Offset = "0x57CE7C")]
		public AudioSource pointerAudioSource;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioSource loopingAudioSource;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioSource headAudioSource;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioSource reticleAudioSource;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CEB4", Offset = "0x57CEB4")]
		public AudioClip teleportSound;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip pointerStartSound;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip pointerLoopSound;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip pointerStopSound;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip goodHighlightSound;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioClip badHighlightSound;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57CEEC", Offset = "0x57CEEC")]
		public bool debugFloor;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		public bool showOffsetReticle;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Transform offsetReticleTransform;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public MeshRenderer floorDebugSphere;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public LineRenderer floorDebugLine;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private LineRenderer pointerLineRenderer;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GameObject teleportPointerObject;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Transform pointerStartTransform;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Hand pointerHand;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Player player;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private TeleportArc teleportArc;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool visible;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private TeleportMarkerBase[] teleportMarkers;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private TeleportMarkerBase pointedAtTeleportMarker;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private TeleportMarkerBase teleportingToMarker;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector3 pointedAtPosition;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Vector3 prevPointedAtPosition;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool teleporting;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private float currentFadeTime;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float meshAlphaPercent;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float pointerShowStartTime;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float pointerHideStartTime;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool meshFading;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float fullTintAlpha;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float invalidReticleMinScale;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float invalidReticleMaxScale;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float invalidReticleMinScaleDistance;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float invalidReticleMaxScaleDistance;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector3 invalidReticleScale;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Quaternion invalidReticleTargetRotation;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Transform playAreaPreviewTransform;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Transform[] playAreaPreviewCorners;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Transform[] playAreaPreviewSides;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float loopingAudioMaxVolume;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Coroutine hintCoroutine;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private bool originalHoverLockState;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Interactable originalHoveringInteractable;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private AllowTeleportWhileAttachedToHand allowTeleportWhileAttached;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 startingFeetOffset;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private bool movedFeetFarEnough;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private SteamVR_Events.Action chaperoneInfoInitializedAction;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SteamVR_Events.Event<float> ChangeScene;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SteamVR_Events.Event<TeleportMarkerBase> Player;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SteamVR_Events.Event<TeleportMarkerBase> PlayerPre;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Teleport _instance;

		[Token(Token = "0x170000DD")]
		public static Teleport instance
		{
			[Token(Token = "0x6001062")]
			[Address(RVA = "0x819244", Offset = "0x819244", VA = "0x819244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x819058", Offset = "0x819058", VA = "0x819058")]
		public static SteamVR_Events.Action<float> ChangeSceneAction(UnityAction<float> action)
		{
			return null;
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x8190FC", Offset = "0x8190FC", VA = "0x8190FC")]
		public static SteamVR_Events.Action<TeleportMarkerBase> PlayerAction(UnityAction<TeleportMarkerBase> action)
		{
			return null;
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x8191A0", Offset = "0x8191A0", VA = "0x8191A0")]
		public static SteamVR_Events.Action<TeleportMarkerBase> PlayerPreAction(UnityAction<TeleportMarkerBase> action)
		{
			return null;
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x81936C", Offset = "0x81936C", VA = "0x81936C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x819520", Offset = "0x819520", VA = "0x819520")]
		private void Start()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x819AB0", Offset = "0x819AB0", VA = "0x819AB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x81A6D0", Offset = "0x81A6D0", VA = "0x81A6D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x819970", Offset = "0x819970", VA = "0x819970")]
		private void CheckForSpawnPoint()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x81AB98", Offset = "0x81AB98", VA = "0x81AB98")]
		public void HideTeleportPointer()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x81AC20", Offset = "0x81AC20", VA = "0x81AC20")]
		private void Update()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x81B73C", Offset = "0x81B73C", VA = "0x81B73C")]
		private void UpdatePointer()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x81CA94", Offset = "0x81CA94", VA = "0x81CA94")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x819AE8", Offset = "0x819AE8", VA = "0x819AE8")]
		private void OnChaperoneInfoInitialized()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x819648", Offset = "0x819648", VA = "0x819648")]
		private void HidePointer()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x81B16C", Offset = "0x81B16C", VA = "0x81B16C")]
		private void ShowPointer(Hand newPointerHand, Hand oldPointerHand)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x81C228", Offset = "0x81C228", VA = "0x81C228")]
		private void UpdateTeleportColors()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x81CF4C", Offset = "0x81CF4C", VA = "0x81CF4C")]
		private void PlayAudioClip(AudioSource source, AudioClip clip)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x81D098", Offset = "0x81D098", VA = "0x81D098")]
		private void PlayPointerHaptic(bool validLocation)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x81AFF4", Offset = "0x81AFF4", VA = "0x81AFF4")]
		private void TryTeleportPlayer()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x81D0D4", Offset = "0x81D0D4", VA = "0x81D0D4")]
		private void InitiateTeleportFade()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x81A708", Offset = "0x81A708", VA = "0x81A708")]
		private void TeleportPlayer()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x81C5AC", Offset = "0x81C5AC", VA = "0x81C5AC")]
		private void HighlightSelected(TeleportMarkerBase hitTeleportMarker)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x81D4F0", Offset = "0x81D4F0", VA = "0x81D4F0")]
		public void ShowTeleportHint()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x81D330", Offset = "0x81D330", VA = "0x81D330")]
		public void CancelTeleportHint()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x81D52C", Offset = "0x81D52C", VA = "0x81D52C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x581E20", Offset = "0x581E20")]
		private IEnumerator TeleportHintCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x81D5C8", Offset = "0x81D5C8", VA = "0x81D5C8")]
		public bool IsEligibleForTeleport(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x81CEC0", Offset = "0x81CEC0", VA = "0x81CEC0")]
		private bool ShouldOverrideHoverLock()
		{
			return default(bool);
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x81AF34", Offset = "0x81AF34", VA = "0x81AF34")]
		private bool WasTeleportButtonReleased(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x81B67C", Offset = "0x81B67C", VA = "0x81B67C")]
		private bool IsTeleportButtonDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x81B0AC", Offset = "0x81B0AC", VA = "0x81B0AC")]
		private bool WasTeleportButtonPressed(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x81CFD8", Offset = "0x81CFD8", VA = "0x81CFD8")]
		private Transform GetPointerStartTransform(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x81D77C", Offset = "0x81D77C", VA = "0x81D77C")]
		public Teleport()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class TeleportArc : MonoBehaviour
	{
		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int segmentCount;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float thickness;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CF24", Offset = "0x57CF24")]
		public float arcDuration;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CF5C", Offset = "0x57CF5C")]
		public float segmentBreak;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57CF94", Offset = "0x57CF94")]
		public float arcSpeed;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int traceLayerMask;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineRenderer[] lineRenderers;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float arcTimeOffset;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float prevThickness;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int prevSegmentCount;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool showArc;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 startPos;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 projectileVelocity;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useGravity;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform arcObjectsTransfrom;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool arcInvalid;

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x81DC2C", Offset = "0x81DC2C", VA = "0x81DC2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x81DC54", Offset = "0x81DC54", VA = "0x81DC54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x81DCA0", Offset = "0x81DCA0", VA = "0x81DCA0")]
		private void CreateLineRendererObjects()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x81C340", Offset = "0x81C340", VA = "0x81C340")]
		public void SetArcData(Vector3 position, Vector3 velocity, bool gravity, bool pointerAtBadAngle)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x81CFC0", Offset = "0x81CFC0", VA = "0x81CFC0")]
		public void Show()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x81CF88", Offset = "0x81CF88", VA = "0x81CF88")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x81C394", Offset = "0x81C394", VA = "0x81C394")]
		public bool DrawArc(out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x81E308", Offset = "0x81E308", VA = "0x81E308")]
		private void DrawArcSegment(int index, float startTime, float endTime)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x81C858", Offset = "0x81C858", VA = "0x81C858")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x81E0B0", Offset = "0x81E0B0", VA = "0x81E0B0")]
		private float FindProjectileCollision(out RaycastHit hitInfo)
		{
			return default(float);
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x81C93C", Offset = "0x81C93C", VA = "0x81C93C")]
		public Vector3 GetArcPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x81E02C", Offset = "0x81E02C", VA = "0x81E02C")]
		private void HideLineSegments(int startSegment, int endSegment)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x81E6E8", Offset = "0x81E6E8", VA = "0x81E6E8")]
		public TeleportArc()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class TeleportArea : TeleportMarkerBase
	{
		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CFDC", Offset = "0x57CFDC")]
		private Bounds <meshBounds>k__BackingField;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer areaMesh;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int tintColorId;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color visibleTintColor;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color highlightedTintColor;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color lockedTintColor;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool highlighted;

		[Token(Token = "0x170000DE")]
		public Bounds meshBounds
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0x81E710", Offset = "0x81E710", VA = "0x81E710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581E84", Offset = "0x581E84")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x600108F")]
			[Address(RVA = "0x81E724", Offset = "0x81E724", VA = "0x81E724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581E94", Offset = "0x581E94")]
			private set
			{
			}
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x81E738", Offset = "0x81E738", VA = "0x81E738")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x81E8C4", Offset = "0x81E8C4", VA = "0x81E8C4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x81E994", Offset = "0x81E994", VA = "0x81E994", Slot = "9")]
		public override bool ShouldActivate(Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x81E99C", Offset = "0x81E99C", VA = "0x81E99C", Slot = "10")]
		public override bool ShouldMovePlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x81E9A4", Offset = "0x81E9A4", VA = "0x81E9A4", Slot = "7")]
		public override void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x81EA78", Offset = "0x81EA78", VA = "0x81EA78", Slot = "8")]
		public override void SetAlpha(float tintAlpha, float alphaPercent)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x81EB94", Offset = "0x81EB94", VA = "0x81EB94", Slot = "6")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x81EC40", Offset = "0x81EC40", VA = "0x81EC40")]
		public void UpdateVisualsInEditor()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x81E7AC", Offset = "0x81E7AC", VA = "0x81E7AC")]
		private bool CalculateBounds()
		{
			return default(bool);
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x81EB38", Offset = "0x81EB38", VA = "0x81EB38")]
		private Color GetTintColor()
		{
			return default(Color);
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x81ED04", Offset = "0x81ED04", VA = "0x81ED04")]
		public TeleportArea()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public abstract class TeleportMarkerBase : MonoBehaviour
	{
		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool locked;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool markerActive;

		[Token(Token = "0x170000DF")]
		public virtual bool showReticle
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0x81ED70", Offset = "0x81ED70", VA = "0x81ED70", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x81ED78", Offset = "0x81ED78", VA = "0x81ED78")]
		public void SetLocked(bool locked)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x81ED8C", Offset = "0x81ED8C", VA = "0x81ED8C", Slot = "5")]
		public virtual void TeleportPlayer(Vector3 pointedAtPosition)
		{
		}

		[Token(Token = "0x600109E")]
		public abstract void UpdateVisuals();

		[Token(Token = "0x600109F")]
		public abstract void Highlight(bool highlight);

		[Token(Token = "0x60010A0")]
		public abstract void SetAlpha(float tintAlpha, float alphaPercent);

		[Token(Token = "0x60010A1")]
		public abstract bool ShouldActivate(Vector3 playerPosition);

		[Token(Token = "0x60010A2")]
		public abstract bool ShouldMovePlayer();

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x81ED60", Offset = "0x81ED60", VA = "0x81ED60")]
		protected TeleportMarkerBase()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class TeleportPoint : TeleportMarkerBase
	{
		[Token(Token = "0x200053F")]
		public enum TeleportPointType
		{
			[Token(Token = "0x4001A10")]
			MoveToLocation,
			[Token(Token = "0x4001A11")]
			SwitchToNewScene
		}

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TeleportPointType teleportType;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string switchToScene;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color titleVisibleColor;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color titleHighlightedColor;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color titleLockedColor;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool playerSpawnPoint;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool gotReleventComponents;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshRenderer markerMesh;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshRenderer switchSceneIcon;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshRenderer moveLocationIcon;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshRenderer lockedIcon;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeshRenderer pointIcon;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform lookAtJointTransform;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Animation animation;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Text titleText;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Player player;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 lookAtPosition;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int tintColorID;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color tintColor;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Color titleColor;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float fullTitleAlpha;

		[Token(Token = "0x4001269")]
		private const string switchSceneAnimation = "switch_scenes_idle";

		[Token(Token = "0x400126A")]
		private const string moveLocationAnimation = "move_location_idle";

		[Token(Token = "0x400126B")]
		private const string lockedAnimation = "locked_idle";

		[Token(Token = "0x170000E0")]
		public override bool showReticle
		{
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x81ED90", Offset = "0x81ED90", VA = "0x81ED90", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x81ED98", Offset = "0x81ED98", VA = "0x81ED98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x81F00C", Offset = "0x81F00C", VA = "0x81F00C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x81F030", Offset = "0x81F030", VA = "0x81F030")]
		private void Update()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x81F0C4", Offset = "0x81F0C4", VA = "0x81F0C4", Slot = "9")]
		public override bool ShouldActivate(Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x81F19C", Offset = "0x81F19C", VA = "0x81F19C", Slot = "10")]
		public override bool ShouldMovePlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x81F1A4", Offset = "0x81F1A4", VA = "0x81F1A4", Slot = "7")]
		public override void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x81F37C", Offset = "0x81F37C", VA = "0x81F37C", Slot = "6")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x81F4DC", Offset = "0x81F4DC", VA = "0x81F4DC", Slot = "8")]
		public override void SetAlpha(float tintAlpha, float alphaPercent)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x81F2BC", Offset = "0x81F2BC", VA = "0x81F2BC")]
		public void SetMeshMaterials(Material material, Color textColor)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x81D408", Offset = "0x81D408", VA = "0x81D408")]
		public void TeleportToScene()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x81EE84", Offset = "0x81EE84", VA = "0x81EE84")]
		public void GetRelevantComponents()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x81F5FC", Offset = "0x81F5FC", VA = "0x81F5FC")]
		public void ReleaseRelevantComponents()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x81F610", Offset = "0x81F610", VA = "0x81F610")]
		public void UpdateVisualsInEditor()
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x81F8C0", Offset = "0x81F8C0", VA = "0x81F8C0")]
		public TeleportPoint()
		{
		}
	}
}
namespace uTools
{
	[Token(Token = "0x200027D")]
	public class ToggleActiveObjects : MonoBehaviour
	{
		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] actives;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] inactives;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle mToggle;

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x1043A0C", Offset = "0x1043A0C", VA = "0x1043A0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x1043AC4", Offset = "0x1043AC4", VA = "0x1043AC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x1043BB0", Offset = "0x1043BB0", VA = "0x1043BB0")]
		private void OnClick(bool isOn)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x1043AE0", Offset = "0x1043AE0", VA = "0x1043AE0")]
		private void ActiveObject(bool toggle)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x1043BB8", Offset = "0x1043BB8", VA = "0x1043BB8")]
		public ToggleActiveObjects()
		{
		}
	}
	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5700F8", Offset = "0x5700F8")]
	public class uDragObject : MonoBehaviour, IDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform target;

		[Token(Token = "0x170000E1")]
		private RectTransform cacheTarget
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x1043EBC", Offset = "0x1043EBC", VA = "0x1043EBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x1043F54", Offset = "0x1043F54", VA = "0x1043F54", Slot = "4")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x1044048", Offset = "0x1044048", VA = "0x1044048")]
		public uDragObject()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public enum Direction
	{
		[Token(Token = "0x4001271")]
		Reverse = -1,
		[Token(Token = "0x4001272")]
		Toggle,
		[Token(Token = "0x4001273")]
		Forward
	}
	[Token(Token = "0x2000280")]
	public enum Trigger
	{
		[Token(Token = "0x4001275")]
		OnPointerEnter,
		[Token(Token = "0x4001276")]
		OnPointerDown,
		[Token(Token = "0x4001277")]
		OnPointerClick,
		[Token(Token = "0x4001278")]
		OnPointerUp,
		[Token(Token = "0x4001279")]
		OnPointerExit
	}
	[Token(Token = "0x2000281")]
	public enum eShake
	{
		[Token(Token = "0x400127B")]
		Position,
		[Token(Token = "0x400127C")]
		Rotation,
		[Token(Token = "0x400127D")]
		Scale
	}
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x570130", Offset = "0x570130")]
	public class uPlayTween : MonoBehaviour, uIPointHandler, IPointerEnterHandler, IEventSystemHandler, IPointerDownHandler, IPointerClickHandler, IPointerUpHandler, IPointerExitHandler
	{
		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject tweenTarget;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Direction playDirection;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Trigger trigger;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int tweenGroup;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool inCludeChildren;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private uTweener[] mTweeners;

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1044050", Offset = "0x1044050", VA = "0x1044050")]
		private void Start()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x104411C", Offset = "0x104411C", VA = "0x104411C", Slot = "9")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x1044140", Offset = "0x1044140", VA = "0x1044140", Slot = "10")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x1044154", Offset = "0x1044154", VA = "0x1044154", Slot = "11")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x1044168", Offset = "0x1044168", VA = "0x1044168", Slot = "12")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x104417C", Offset = "0x104417C", VA = "0x104417C", Slot = "13")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x104412C", Offset = "0x104412C", VA = "0x104412C")]
		private void TriggerPlay(Trigger _trigger)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x1044190", Offset = "0x1044190", VA = "0x1044190")]
		private void Play()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x10443BC", Offset = "0x10443BC", VA = "0x10443BC")]
		public uPlayTween()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class Bezier : uTweener
	{
		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform target;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3[] path;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool isWorld;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float from;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float to;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float mValue;

		[Token(Token = "0x170000E2")]
		public float value
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x1041A9C", Offset = "0x1041A9C", VA = "0x1041A9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x1041AA4", Offset = "0x1041AA4", VA = "0x1041AA4")]
			set
			{
			}
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x1041C04", Offset = "0x1041C04", VA = "0x1041C04", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x1041C8C", Offset = "0x1041C8C", VA = "0x1041C8C", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x1041D18", Offset = "0x1041D18", VA = "0x1041D18")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x1041B84", Offset = "0x1041B84", VA = "0x1041B84")]
		public Vector3 GetBezierPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x1041DA8", Offset = "0x1041DA8", VA = "0x1041DA8")]
		public Vector3 GetBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x1041F70", Offset = "0x1041F70", VA = "0x1041F70")]
		public Bezier()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public enum EaseType
	{
		[Token(Token = "0x400128B")]
		none,
		[Token(Token = "0x400128C")]
		easeInQuad,
		[Token(Token = "0x400128D")]
		easeOutQuad,
		[Token(Token = "0x400128E")]
		easeInOutQuad,
		[Token(Token = "0x400128F")]
		easeInCubic,
		[Token(Token = "0x4001290")]
		easeOutCubic,
		[Token(Token = "0x4001291")]
		easeInOutCubic,
		[Token(Token = "0x4001292")]
		easeInQuart,
		[Token(Token = "0x4001293")]
		easeOutQuart,
		[Token(Token = "0x4001294")]
		easeInOutQuart,
		[Token(Token = "0x4001295")]
		easeInQuint,
		[Token(Token = "0x4001296")]
		easeOutQuint,
		[Token(Token = "0x4001297")]
		easeInOutQuint,
		[Token(Token = "0x4001298")]
		easeInSine,
		[Token(Token = "0x4001299")]
		easeOutSine,
		[Token(Token = "0x400129A")]
		easeInOutSine,
		[Token(Token = "0x400129B")]
		easeInExpo,
		[Token(Token = "0x400129C")]
		easeOutExpo,
		[Token(Token = "0x400129D")]
		easeInOutExpo,
		[Token(Token = "0x400129E")]
		easeInCirc,
		[Token(Token = "0x400129F")]
		easeOutCirc,
		[Token(Token = "0x40012A0")]
		easeInOutCirc,
		[Token(Token = "0x40012A1")]
		linear,
		[Token(Token = "0x40012A2")]
		spring,
		[Token(Token = "0x40012A3")]
		easeInBounce,
		[Token(Token = "0x40012A4")]
		easeOutBounce,
		[Token(Token = "0x40012A5")]
		easeInOutBounce,
		[Token(Token = "0x40012A6")]
		easeInBack,
		[Token(Token = "0x40012A7")]
		easeOutBack,
		[Token(Token = "0x40012A8")]
		easeInOutBack,
		[Token(Token = "0x40012A9")]
		easeInElastic,
		[Token(Token = "0x40012AA")]
		easeOutElastic,
		[Token(Token = "0x40012AB")]
		easeInOutElastic,
		[Token(Token = "0x40012AC")]
		punch
	}
	[Token(Token = "0x2000285")]
	public enum LoopStyle
	{
		[Token(Token = "0x40012AE")]
		Once,
		[Token(Token = "0x40012AF")]
		Loop,
		[Token(Token = "0x40012B0")]
		PingPong
	}
	[Token(Token = "0x2000286")]
	public class EaseManager
	{
		[Token(Token = "0x2000540")]
		public delegate float EaseDelegate(float start, float end, float t);

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x10420EC", Offset = "0x10420EC", VA = "0x10420EC")]
		private static float linear(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1042174", Offset = "0x1042174", VA = "0x1042174")]
		private static float clerp(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x1042248", Offset = "0x1042248", VA = "0x1042248")]
		private static float spring(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x104234C", Offset = "0x104234C", VA = "0x104234C")]
		private static float easeInQuad(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x1042360", Offset = "0x1042360", VA = "0x1042360")]
		private static float easeOutQuad(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x104237C", Offset = "0x104237C", VA = "0x104237C")]
		private static float easeInOutQuad(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x10423D0", Offset = "0x10423D0", VA = "0x10423D0")]
		private static float easeInCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x10423E8", Offset = "0x10423E8", VA = "0x10423E8")]
		private static float easeOutCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x1042410", Offset = "0x1042410", VA = "0x1042410")]
		private static float easeInOutCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x1042468", Offset = "0x1042468", VA = "0x1042468")]
		private static float easeInQuart(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x1042484", Offset = "0x1042484", VA = "0x1042484")]
		private static float easeOutQuart(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x10424AC", Offset = "0x10424AC", VA = "0x10424AC")]
		private static float easeInOutQuart(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x1042508", Offset = "0x1042508", VA = "0x1042508")]
		private static float easeInQuint(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x1042528", Offset = "0x1042528", VA = "0x1042528")]
		private static float easeOutQuint(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x1042558", Offset = "0x1042558", VA = "0x1042558")]
		private static float easeInOutQuint(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x10425C0", Offset = "0x10425C0", VA = "0x10425C0")]
		private static float easeInSine(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x1042658", Offset = "0x1042658", VA = "0x1042658")]
		private static float easeOutSine(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x10426EC", Offset = "0x10426EC", VA = "0x10426EC")]
		private static float easeInOutSine(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x1042790", Offset = "0x1042790", VA = "0x1042790")]
		private static float easeInExpo(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x1042828", Offset = "0x1042828", VA = "0x1042828")]
		private static float easeOutExpo(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x10428C0", Offset = "0x10428C0", VA = "0x10428C0")]
		private static float easeInOutExpo(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x10429B0", Offset = "0x10429B0", VA = "0x10429B0")]
		private static float easeInCirc(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x1042A5C", Offset = "0x1042A5C", VA = "0x1042A5C")]
		private static float easeOutCirc(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1042B08", Offset = "0x1042B08", VA = "0x1042B08")]
		private static float easeInOutCirc(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x1042C00", Offset = "0x1042C00", VA = "0x1042C00")]
		private static float easeInBounce(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x1042C3C", Offset = "0x1042C3C", VA = "0x1042C3C")]
		private static float easeOutBounce(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x1042D08", Offset = "0x1042D08", VA = "0x1042D08")]
		private static float easeInOutBounce(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x1042D8C", Offset = "0x1042D8C", VA = "0x1042D8C")]
		private static float easeInBack(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x1042DBC", Offset = "0x1042DBC", VA = "0x1042DBC")]
		private static float easeOutBack(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x1042DFC", Offset = "0x1042DFC", VA = "0x1042DFC")]
		private static float easeInOutBack(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x1042E80", Offset = "0x1042E80", VA = "0x1042E80")]
		private static float punch(float amplitude, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x1042F40", Offset = "0x1042F40", VA = "0x1042F40")]
		private static float easeInElastic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x1043028", Offset = "0x1043028", VA = "0x1043028")]
		private static float easeOutElastic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x104310C", Offset = "0x104310C", VA = "0x104310C")]
		private static float easeInOutElastic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x1043270", Offset = "0x1043270", VA = "0x1043270")]
		public static float EasingFromType(float start, float end, float t, EaseType type)
		{
			return default(float);
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x1043670", Offset = "0x1043670", VA = "0x1043670")]
		public EaseManager()
		{
		}
	}
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x570168", Offset = "0x570168")]
	public class uButtonScale : MonoBehaviour, uIPointHandler, IPointerEnterHandler, IEventSystemHandler, IPointerDownHandler, IPointerClickHandler, IPointerUpHandler, IPointerExitHandler
	{
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform tweenTarget;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 enter;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 down;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float duration;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 mScale;

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x1043BC0", Offset = "0x1043BC0", VA = "0x1043BC0")]
		private void Start()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x1043C74", Offset = "0x1043C74", VA = "0x1043C74", Slot = "9")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x1043CFC", Offset = "0x1043CFC", VA = "0x1043CFC", Slot = "13")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x1043D08", Offset = "0x1043D08", VA = "0x1043D08", Slot = "10")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x1043D14", Offset = "0x1043D14", VA = "0x1043D14", Slot = "12")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x1043D20", Offset = "0x1043D20", VA = "0x1043D20", Slot = "11")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x1043C80", Offset = "0x1043C80", VA = "0x1043C80")]
		private void Scale(Vector3 to)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x1043E1C", Offset = "0x1043E1C", VA = "0x1043E1C")]
		public uButtonScale()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public interface uIPointHandler : IPointerEnterHandler, IEventSystemHandler, IPointerDownHandler, IPointerClickHandler, IPointerUpHandler, IPointerExitHandler
	{
		[Token(Token = "0x60010F8")]
		new void OnPointerEnter(PointerEventData eventData);

		[Token(Token = "0x60010F9")]
		new void OnPointerDown(PointerEventData eventData);

		[Token(Token = "0x60010FA")]
		new void OnPointerClick(PointerEventData eventData);

		[Token(Token = "0x60010FB")]
		new void OnPointerUp(PointerEventData eventData);

		[Token(Token = "0x60010FC")]
		new void OnPointerExit(PointerEventData eventData);
	}
	[Token(Token = "0x2000289")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5701A0", Offset = "0x5701A0")]
	public class uSliderColors : MonoBehaviour
	{
		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image target;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color[] colors;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Slider mSlider;

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x10443D0", Offset = "0x10443D0", VA = "0x10443D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x104456C", Offset = "0x104456C", VA = "0x104456C")]
		public void OnValueChanged(float value)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x10446B0", Offset = "0x10446B0", VA = "0x10446B0")]
		public uSliderColors()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public abstract class uTween<T> : uTweener
	{
		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T from;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T to;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57CFEC", Offset = "0x57CFEC")]
		private T <value>k__BackingField;

		[Token(Token = "0x170000E3")]
		public virtual T value
		{
			[Token(Token = "0x6001100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581EA4", Offset = "0x581EA4")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001101")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581EB4", Offset = "0x581EB4")]
			set
			{
			}
		}

		[Token(Token = "0x6001102")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x581EC4", Offset = "0x581EC4")]
		public override void SetStartToCurrentValue()
		{
		}

		[Token(Token = "0x6001103")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x581EFC", Offset = "0x581EFC")]
		public override void SetEndToCurrentValue()
		{
		}

		[Token(Token = "0x6001104")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x581F34", Offset = "0x581F34")]
		public override void SetCurrentValueToStart()
		{
		}

		[Token(Token = "0x6001105")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x581F6C", Offset = "0x581F6C")]
		public override void SetCurrentValueToEnd()
		{
		}

		[Token(Token = "0x6001106")]
		protected uTween()
		{
		}
	}
	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5701D8", Offset = "0x5701D8")]
	public class uTweenAlpha : uTween<float>
	{
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject target;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool includeChildren;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform mTransform;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Graphic[] mGraphics;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float mAlpha;

		[Token(Token = "0x170000E4")]
		public float alpha
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x1044864", Offset = "0x1044864", VA = "0x1044864")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x104486C", Offset = "0x104486C", VA = "0x104486C")]
			set
			{
			}
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x1044778", Offset = "0x1044778", VA = "0x1044778", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x1044944", Offset = "0x1044944", VA = "0x1044944", Slot = "5")]
		protected override void OnUpdate(float value, bool isFinished)
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x104489C", Offset = "0x104489C", VA = "0x104489C")]
		private void SetAlpha(Transform _transform, float _alpha)
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x1044984", Offset = "0x1044984", VA = "0x1044984")]
		public static uTweenAlpha Begin(GameObject go, float from, float to, float duration = 1f, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x1044B50", Offset = "0x1044B50", VA = "0x1044B50")]
		public uTweenAlpha()
		{
		}
	}
	[Token(Token = "0x200028C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x570210", Offset = "0x570210")]
	public class uTweenColor : uTween<Color>
	{
		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject target;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool includeChildren;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Graphic[] mGraphics;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color mColor;

		[Token(Token = "0x170000E5")]
		private Graphic[] cachedGraphics
		{
			[Token(Token = "0x600110E")]
			[Address(RVA = "0x1044BA0", Offset = "0x1044BA0", VA = "0x1044BA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		public override Color value
		{
			[Token(Token = "0x6001110")]
			[Address(RVA = "0x1044C78", Offset = "0x1044C78", VA = "0x1044C78", Slot = "10")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001111")]
			[Address(RVA = "0x1044C84", Offset = "0x1044C84", VA = "0x1044C84", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x1044C74", Offset = "0x1044C74", VA = "0x1044C74", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x1044D90", Offset = "0x1044D90", VA = "0x1044D90", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x1044DE0", Offset = "0x1044DE0", VA = "0x1044DE0")]
		public static uTweenColor Begin(GameObject go, Color from, Color to, float duration = 1f, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x1044CE8", Offset = "0x1044CE8", VA = "0x1044CE8")]
		private void SetColor(Transform _transform, Color _color)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x1044F18", Offset = "0x1044F18", VA = "0x1044F18")]
		public uTweenColor()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class uTweenFloat : uTween<float>
	{
		[Token(Token = "0x6001116")]
		[Address(RVA = "0x1044F78", Offset = "0x1044F78", VA = "0x1044F78", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x1044F94", Offset = "0x1044F94", VA = "0x1044F94")]
		public static uTweenFloat Begin(GameObject go, float from, float to, float duration, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x104505C", Offset = "0x104505C", VA = "0x104505C")]
		public uTweenFloat()
		{
		}
	}
	[Token(Token = "0x200028E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x570248", Offset = "0x570248")]
	public class uTweenImage : uTweener
	{
		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57CFFC", Offset = "0x57CFFC")]
		public float from;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D014", Offset = "0x57D014")]
		public float to;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mValue;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Image mImage;

		[Token(Token = "0x170000E7")]
		public float value
		{
			[Token(Token = "0x6001119")]
			[Address(RVA = "0x10450AC", Offset = "0x10450AC", VA = "0x10450AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600111A")]
			[Address(RVA = "0x10450B4", Offset = "0x10450B4", VA = "0x10450B4")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public Image cacheImage
		{
			[Token(Token = "0x600111B")]
			[Address(RVA = "0x10450BC", Offset = "0x10450BC", VA = "0x10450BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x1045198", Offset = "0x1045198", VA = "0x1045198", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x10451DC", Offset = "0x10451DC", VA = "0x10451DC")]
		public static uTweenImage Begin(Image go, float from, float to, float duration, float delay)
		{
			return null;
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x10452A4", Offset = "0x10452A4", VA = "0x10452A4")]
		public uTweenImage()
		{
		}
	}
	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x570280", Offset = "0x570280")]
	public class uTweenLayoutElement : uTween<float>
	{
		[Token(Token = "0x2000541")]
		public enum Element
		{
			[Token(Token = "0x4001A13")]
			MinWidth,
			[Token(Token = "0x4001A14")]
			MinHeight,
			[Token(Token = "0x4001A15")]
			PreferredWidth,
			[Token(Token = "0x4001A16")]
			PreferredHeight,
			[Token(Token = "0x4001A17")]
			FlexibleWidth,
			[Token(Token = "0x4001A18")]
			FlexibleHeight
		}

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Element tweenType;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private LayoutElement mLayoutElement;

		[Token(Token = "0x170000E9")]
		public LayoutElement cachedLayoutElement
		{
			[Token(Token = "0x600111F")]
			[Address(RVA = "0x10452A8", Offset = "0x10452A8", VA = "0x10452A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		public override float value
		{
			[Token(Token = "0x6001120")]
			[Address(RVA = "0x1045340", Offset = "0x1045340", VA = "0x1045340", Slot = "10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001121")]
			[Address(RVA = "0x1045384", Offset = "0x1045384", VA = "0x1045384", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x10454B0", Offset = "0x10454B0", VA = "0x10454B0", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x10454CC", Offset = "0x10454CC", VA = "0x10454CC")]
		public static uTweenLayoutElement Begin(GameObject go, float from, float to, float duration = 1f, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x1045594", Offset = "0x1045594", VA = "0x1045594")]
		public uTweenLayoutElement()
		{
		}
	}
	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5702B8", Offset = "0x5702B8")]
	public class uTweenPath : uTweener
	{
		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform target;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3[] path;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool isWorld;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float from;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float to;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<Vector3> pathPoints;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float mValue;

		[Token(Token = "0x170000EB")]
		public float value
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0x10455EC", Offset = "0x10455EC", VA = "0x10455EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001126")]
			[Address(RVA = "0x10455F4", Offset = "0x10455F4", VA = "0x10455F4")]
			set
			{
			}
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x10456DC", Offset = "0x10456DC", VA = "0x10456DC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x1045AEC", Offset = "0x1045AEC", VA = "0x1045AEC", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x10457A4", Offset = "0x10457A4", VA = "0x10457A4")]
		public List<Vector3> BuildCRSplinePath(List<Vector3> pts)
		{
			return null;
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x1045B78", Offset = "0x1045B78", VA = "0x1045B78")]
		public Vector3 CRSpline(List<Vector3> pts, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x10456D4", Offset = "0x10456D4", VA = "0x10456D4")]
		public Vector3 GetCRSPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x1045FCC", Offset = "0x1045FCC", VA = "0x1045FCC")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x104605C", Offset = "0x104605C", VA = "0x104605C")]
		public uTweenPath()
		{
		}
	}
	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5702F0", Offset = "0x5702F0")]
	public class uTweenPosition : uTween<Vector3>
	{
		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RectTransform mRectTransform;

		[Token(Token = "0x170000EC")]
		public RectTransform cachedRectTransform
		{
			[Token(Token = "0x600112E")]
			[Address(RVA = "0x10460D0", Offset = "0x10460D0", VA = "0x10460D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		public override Vector3 value
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x1046168", Offset = "0x1046168", VA = "0x1046168", Slot = "10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x10461FC", Offset = "0x10461FC", VA = "0x10461FC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x10462AC", Offset = "0x10462AC", VA = "0x10462AC", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x10463AC", Offset = "0x10463AC", VA = "0x10463AC")]
		public static uTweenPosition Begin(GameObject go, Vector3 from, Vector3 to, float duration = 1f, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x10464A4", Offset = "0x10464A4", VA = "0x10464A4")]
		public uTweenPosition()
		{
		}
	}
	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x570328", Offset = "0x570328")]
	public class uTweenRect : uTween<Vector2>
	{
		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RectTransform mRectTransform;

		[Token(Token = "0x170000EE")]
		public RectTransform cacheRectTransform
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0x10464F4", Offset = "0x10464F4", VA = "0x10464F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x104658C", Offset = "0x104658C", VA = "0x104658C", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x1046698", Offset = "0x1046698", VA = "0x1046698")]
		public static uTweenRect Begin(RectTransform go, Vector2 from, Vector2 to, float duration, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x1046784", Offset = "0x1046784", VA = "0x1046784")]
		public uTweenRect()
		{
		}
	}
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x570360", Offset = "0x570360")]
	public class uTweenRotation : uTween<Vector3>
	{
		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RectTransform mRectTransfrom;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public RectTransform target;

		[Token(Token = "0x170000EF")]
		public RectTransform cacheRectTransfrom
		{
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x10467D4", Offset = "0x10467D4", VA = "0x10467D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		public Quaternion QuaternionValue
		{
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x104686C", Offset = "0x104686C", VA = "0x104686C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600113A")]
			[Address(RVA = "0x104688C", Offset = "0x104688C", VA = "0x104688C")]
			set
			{
			}
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x10468DC", Offset = "0x10468DC", VA = "0x10468DC", Slot = "5")]
		protected override void OnUpdate(float _factor, bool _isFinished)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x10469D4", Offset = "0x10469D4", VA = "0x10469D4")]
		public static uTweenRotation Begin(GameObject go, Vector3 from, Vector3 to, float duration = 1f, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x1046ACC", Offset = "0x1046ACC", VA = "0x1046ACC")]
		public uTweenRotation()
		{
		}
	}
	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x570398", Offset = "0x570398")]
	public class uTweenScale : uTween<Vector3>
	{
		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RectTransform mRectTransform;

		[Token(Token = "0x170000F1")]
		public RectTransform cachedRectTransform
		{
			[Token(Token = "0x600113E")]
			[Address(RVA = "0x1046B1C", Offset = "0x1046B1C", VA = "0x1046B1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		public override Vector3 value
		{
			[Token(Token = "0x600113F")]
			[Address(RVA = "0x1046BB4", Offset = "0x1046BB4", VA = "0x1046BB4", Slot = "10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001140")]
			[Address(RVA = "0x1046BD4", Offset = "0x1046BD4", VA = "0x1046BD4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x1046C1C", Offset = "0x1046C1C", VA = "0x1046C1C", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x1043D24", Offset = "0x1043D24", VA = "0x1043D24")]
		public static uTweenScale Begin(GameObject go, Vector3 from, Vector3 to, float duration = 1f, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x1046D1C", Offset = "0x1046D1C", VA = "0x1046D1C")]
		public uTweenScale()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class uTweenShake : uTweener
	{
		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform mTarget;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 localPosition;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 position;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 localScale;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 localEulerAngles;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 eulerAngles;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		protected Vector3 limit;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Space space;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public eShake shakeType;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 mValue;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform mTransform;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RectTransform mRectTransform;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool mIs3D;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 tempVector3;

		[Token(Token = "0x170000F3")]
		public Transform target
		{
			[Token(Token = "0x6001144")]
			[Address(RVA = "0x1046D6C", Offset = "0x1046D6C", VA = "0x1046D6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		public Vector3 value
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0x1046EA8", Offset = "0x1046EA8", VA = "0x1046EA8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001146")]
			[Address(RVA = "0x1046EB4", Offset = "0x1046EB4", VA = "0x1046EB4")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		private bool is3D
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0x1047244", Offset = "0x1047244", VA = "0x1047244")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001148")]
			[Address(RVA = "0x1047348", Offset = "0x1047348", VA = "0x1047348")]
			set
			{
			}
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x1046E00", Offset = "0x1046E00", VA = "0x1046E00")]
		private void CacheTargetInfo()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x1047354", Offset = "0x1047354", VA = "0x1047354", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x1047358", Offset = "0x1047358", VA = "0x1047358", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x1046EC0", Offset = "0x1046EC0", VA = "0x1046EC0")]
		private void Shake()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x10473E4", Offset = "0x10473E4", VA = "0x10473E4")]
		public static uTweenShake Begin(GameObject go, Vector3 from, float duration = 1f, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x10474AC", Offset = "0x10474AC", VA = "0x10474AC")]
		public uTweenShake()
		{
		}
	}
	[Token(Token = "0x2000296")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5703D0", Offset = "0x5703D0")]
	public class uTweenSlider : uTween<float>
	{
		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Slider mSlider;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool NeedCarry;

		[Token(Token = "0x170000F6")]
		public Slider cacheSlider
		{
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x104757C", Offset = "0x104757C", VA = "0x104757C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public float sliderValue
		{
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x1047644", Offset = "0x1047644", VA = "0x1047644")]
			set
			{
			}
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x1047724", Offset = "0x1047724", VA = "0x1047724", Slot = "5")]
		protected override void OnUpdate(float value, bool isFinished)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x1047728", Offset = "0x1047728", VA = "0x1047728")]
		public static uTweenSlider Begin(Slider slider, float from, float to, float duration, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x10477FC", Offset = "0x10477FC", VA = "0x10477FC")]
		public uTweenSlider()
		{
		}
	}
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x570408", Offset = "0x570408")]
	public class uTweenText : uTween<float>
	{
		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Text mText;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int digits;

		[Token(Token = "0x170000F8")]
		public Text cacheText
		{
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x104784C", Offset = "0x104784C", VA = "0x104784C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x10478E4", Offset = "0x10478E4", VA = "0x10478E4", Slot = "5")]
		protected override void OnUpdate(float value, bool isFinished)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x10479A8", Offset = "0x10479A8", VA = "0x10479A8")]
		public static uTweenText Begin(Text label, float from, float to, float duration, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x1047A7C", Offset = "0x1047A7C", VA = "0x1047A7C")]
		public uTweenText()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class uTweenVector3 : uTween<Vector3>
	{
		[Token(Token = "0x6001158")]
		[Address(RVA = "0x1047ACC", Offset = "0x1047ACC", VA = "0x1047ACC", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x1047BCC", Offset = "0x1047BCC", VA = "0x1047BCC")]
		public static uTweenVector3 Begin(GameObject go, Vector3 from, Vector3 to, float duration, float delay)
		{
			return null;
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x1047CC4", Offset = "0x1047CC4", VA = "0x1047CC4")]
		public uTweenVector3()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public abstract class uTweener : MonoBehaviour
	{
		[Token(Token = "0x2000542")]
		public enum Style
		{
			[Token(Token = "0x4001A1A")]
			Once,
			[Token(Token = "0x4001A1B")]
			Loop,
			[Token(Token = "0x4001A1C")]
			PingPong
		}

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static uTweener current;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EaseType method;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Style style;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve animationCurve;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreTimeScale;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float delay;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool steeperCurves;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int tweenGroup;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onFinished;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityAction onUpdate;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public GameObject eventReceiver;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public string callWhenFinished;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool mStarted;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float mStartTime;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float mDuration;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float mAmountPerDelta;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float mFactor;

		[Token(Token = "0x170000F9")]
		public float amountPerDelta
		{
			[Token(Token = "0x600115B")]
			[Address(RVA = "0x1047D14", Offset = "0x1047D14", VA = "0x1047D14")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FA")]
		public float tweenFactor
		{
			[Token(Token = "0x600115C")]
			[Address(RVA = "0x1047DC8", Offset = "0x1047DC8", VA = "0x1047DC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600115D")]
			[Address(RVA = "0x1047DD0", Offset = "0x1047DD0", VA = "0x1047DD0")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public Direction direction
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0x1047E4C", Offset = "0x1047E4C", VA = "0x1047E4C")]
			get
			{
				return default(Direction);
			}
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x1047E6C", Offset = "0x1047E6C", VA = "0x1047E6C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x1044860", Offset = "0x1044860", VA = "0x1044860", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x1047EAC", Offset = "0x1047EAC", VA = "0x1047EAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x10481D4", Offset = "0x10481D4", VA = "0x10481D4")]
		public void SetOnFinished(UnityEvent finishedCallBack)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x10481DC", Offset = "0x10481DC", VA = "0x10481DC")]
		public void AddOnFinished(UnityEvent finishedCallBack)
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x10481E0", Offset = "0x10481E0", VA = "0x10481E0")]
		public void RemoveOnFinished(UnityEvent finishedCallBack)
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x10481E4", Offset = "0x10481E4", VA = "0x10481E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x1044A4C", Offset = "0x1044A4C", VA = "0x1044A4C")]
		public void Sample(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x10481EC", Offset = "0x10481EC", VA = "0x10481EC")]
		public void PlayForward()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x10481F4", Offset = "0x10481F4", VA = "0x10481F4")]
		public void PlayReverse()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x1044314", Offset = "0x1044314", VA = "0x1044314")]
		public void Play(bool forward)
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x10481FC", Offset = "0x10481FC", VA = "0x10481FC")]
		public void ResetToBeginning()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x1044278", Offset = "0x1044278", VA = "0x1044278")]
		public void Toggle()
		{
		}

		[Token(Token = "0x600116C")]
		protected abstract void OnUpdate(float factor, bool isFinished);

		[Token(Token = "0x600116D")]
		public static T Begin<T>(GameObject go, float duration) where T : uTweener
		{
			return null;
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x1048244", Offset = "0x1048244", VA = "0x1048244", Slot = "6")]
		public virtual void SetStartToCurrentValue()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x1048248", Offset = "0x1048248", VA = "0x1048248", Slot = "7")]
		public virtual void SetEndToCurrentValue()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x104824C", Offset = "0x104824C", VA = "0x104824C", Slot = "8")]
		public virtual void SetCurrentValueToStart()
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x1048250", Offset = "0x1048250", VA = "0x1048250", Slot = "9")]
		public virtual void SetCurrentValueToEnd()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x1041F7C", Offset = "0x1041F7C", VA = "0x1041F7C")]
		protected uTweener()
		{
		}
	}
}
namespace MiniJSON
{
	[Token(Token = "0x200029A")]
	public static class Json
	{
		[Token(Token = "0x2000543")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x2000597")]
			private enum TOKEN
			{
				[Token(Token = "0x4001B9D")]
				NONE,
				[Token(Token = "0x4001B9E")]
				CURLY_OPEN,
				[Token(Token = "0x4001B9F")]
				CURLY_CLOSE,
				[Token(Token = "0x4001BA0")]
				SQUARED_OPEN,
				[Token(Token = "0x4001BA1")]
				SQUARED_CLOSE,
				[Token(Token = "0x4001BA2")]
				COLON,
				[Token(Token = "0x4001BA3")]
				COMMA,
				[Token(Token = "0x4001BA4")]
				STRING,
				[Token(Token = "0x4001BA5")]
				NUMBER,
				[Token(Token = "0x4001BA6")]
				TRUE,
				[Token(Token = "0x4001BA7")]
				FALSE,
				[Token(Token = "0x4001BA8")]
				NULL
			}

			[Token(Token = "0x4001A1D")]
			private const string WORD_BREAK = "{}[],:\"";

			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringReader json;

			[Token(Token = "0x17000246")]
			private char PeekChar
			{
				[Token(Token = "0x6001D2E")]
				[Address(RVA = "0x92FD60", Offset = "0x92FD60", VA = "0x92FD60")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000247")]
			private char NextChar
			{
				[Token(Token = "0x6001D2F")]
				[Address(RVA = "0x92FB68", Offset = "0x92FB68", VA = "0x92FB68")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000248")]
			private string NextWord
			{
				[Token(Token = "0x6001D30")]
				[Address(RVA = "0x92FBF0", Offset = "0x92FBF0", VA = "0x92FBF0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000249")]
			private TOKEN NextToken
			{
				[Token(Token = "0x6001D31")]
				[Address(RVA = "0x92F4AC", Offset = "0x92F4AC", VA = "0x92F4AC")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x6001D23")]
			[Address(RVA = "0x92F220", Offset = "0x92F220", VA = "0x92F220")]
			public static bool IsWordBreak(char c)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D24")]
			[Address(RVA = "0x92F2C0", Offset = "0x92F2C0", VA = "0x92F2C0")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x6001D25")]
			[Address(RVA = "0x92F064", Offset = "0x92F064", VA = "0x92F064")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x6001D26")]
			[Address(RVA = "0x92F364", Offset = "0x92F364", VA = "0x92F364", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001D27")]
			[Address(RVA = "0x92F398", Offset = "0x92F398", VA = "0x92F398")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x6001D28")]
			[Address(RVA = "0x92F8DC", Offset = "0x92F8DC", VA = "0x92F8DC")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x6001D29")]
			[Address(RVA = "0x92F33C", Offset = "0x92F33C", VA = "0x92F33C")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0x92F9B0", Offset = "0x92F9B0", VA = "0x92F9B0")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0x92F65C", Offset = "0x92F65C", VA = "0x92F65C")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0x92FA8C", Offset = "0x92FA8C", VA = "0x92FA8C")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0x92FCAC", Offset = "0x92FCAC", VA = "0x92FCAC")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x2000544")]
		private sealed class Serializer
		{
			[Token(Token = "0x4001A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringBuilder builder;

			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x92FDE8", Offset = "0x92FDE8", VA = "0x92FDE8")]
			private Serializer()
			{
			}

			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x92F1A4", Offset = "0x92F1A4", VA = "0x92F1A4")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x6001D34")]
			[Address(RVA = "0x92FE54", Offset = "0x92FE54", VA = "0x92FE54")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x93051C", Offset = "0x93051C", VA = "0x93051C")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x6001D36")]
			[Address(RVA = "0x930250", Offset = "0x930250", VA = "0x930250")]
			private void SerializeArray(IList anArray)
			{
			}

			[Token(Token = "0x6001D37")]
			[Address(RVA = "0x92FFF0", Offset = "0x92FFF0", VA = "0x92FFF0")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x6001D38")]
			[Address(RVA = "0x930914", Offset = "0x930914", VA = "0x930914")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x92F058", Offset = "0x92F058", VA = "0x92F058")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x92F1A0", Offset = "0x92F1A0", VA = "0x92F1A0")]
		public static string Serialize(object obj)
		{
			return null;
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x200029B")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40012FC")]
		TRIANGLES,
		[Token(Token = "0x40012FD")]
		QUADS
	}
	[Token(Token = "0x200029C")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40012FF")]
		ABSORPTION,
		[Token(Token = "0x4001300")]
		TRANSMISSION,
		[Token(Token = "0x4001301")]
		SCATTERING
	}
	[Token(Token = "0x200029D")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200029E")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170000FC")]
		public bool Highlight
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0x87DF78", Offset = "0x87DF78", VA = "0x87DF78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001176")]
			[Address(RVA = "0x87DF80", Offset = "0x87DF80", VA = "0x87DF80")]
			set
			{
			}
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x87DF8C", Offset = "0x87DF8C", VA = "0x87DF8C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x87E158", Offset = "0x87E158", VA = "0x87E158", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x87E180", Offset = "0x87E180", VA = "0x87E180", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x87E1A8", Offset = "0x87E1A8", VA = "0x87E1A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x87E058", Offset = "0x87E058", VA = "0x87E058")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x87E3FC", Offset = "0x87E3FC", VA = "0x87E3FC")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170000FD")]
		public bool InRange
		{
			[Token(Token = "0x600117E")]
			[Address(RVA = "0x87EB64", Offset = "0x87EB64", VA = "0x87EB64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600117F")]
			[Address(RVA = "0x87EB6C", Offset = "0x87EB6C", VA = "0x87EB6C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public bool Targeted
		{
			[Token(Token = "0x6001180")]
			[Address(RVA = "0x87ECE8", Offset = "0x87ECE8", VA = "0x87ECE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001181")]
			[Address(RVA = "0x87ECF0", Offset = "0x87ECF0", VA = "0x87ECF0")]
			set
			{
			}
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x87ECFC", Offset = "0x87ECFC", VA = "0x87ECFC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x87EB78", Offset = "0x87EB78", VA = "0x87EB78")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x87EE9C", Offset = "0x87EE9C", VA = "0x87EE9C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x570440", Offset = "0x570440")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170000FF")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001185")]
			[Address(RVA = "0x87EEA4", Offset = "0x87EEA4", VA = "0x87EEA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001186")]
			[Address(RVA = "0x87EEAC", Offset = "0x87EEAC", VA = "0x87EEAC")]
			set
			{
			}
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x87EEC8", Offset = "0x87EEC8", VA = "0x87EEC8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x87F0D0", Offset = "0x87F0D0", VA = "0x87F0D0", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x87F9EC", Offset = "0x87F9EC", VA = "0x87F9EC", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x87FFA8", Offset = "0x87FFA8", VA = "0x87FFA8", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x880388", Offset = "0x880388", VA = "0x880388")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x87F31C", Offset = "0x87F31C", VA = "0x87F31C")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x880464", Offset = "0x880464", VA = "0x880464")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x8808A0", Offset = "0x8808A0", VA = "0x8808A0", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x8808B8", Offset = "0x8808B8", VA = "0x8808B8", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x8808C0", Offset = "0x8808C0", VA = "0x8808C0")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x882414", Offset = "0x882414", VA = "0x882414")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x8824C4", Offset = "0x8824C4", VA = "0x8824C4")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x882570", Offset = "0x882570", VA = "0x882570")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000545")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001A21")]
			Disabled,
			[Token(Token = "0x4001A22")]
			Enabled,
			[Token(Token = "0x4001A23")]
			Targeted
		}

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x882578", Offset = "0x882578", VA = "0x882578")]
		private void Start()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x87EE00", Offset = "0x87EE00", VA = "0x87EE00")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x8825E0", Offset = "0x8825E0", VA = "0x8825E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x882628", Offset = "0x882628", VA = "0x882628")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001198")]
		[Address(RVA = "0x8873C4", Offset = "0x8873C4", VA = "0x8873C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x887490", Offset = "0x887490", VA = "0x887490")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x88749C", Offset = "0x88749C", VA = "0x88749C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x8874A8", Offset = "0x8874A8", VA = "0x8874A8")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x87CC04", Offset = "0x87CC04", VA = "0x87CC04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x87CC5C", Offset = "0x87CC5C", VA = "0x87CC5C")]
		private void Update()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x87CF00", Offset = "0x87CF00", VA = "0x87CF00")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x87CFF0", Offset = "0x87CFF0", VA = "0x87CFF0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x87CC60", Offset = "0x87CC60", VA = "0x87CC60")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x87D0E0", Offset = "0x87D0E0", VA = "0x87D0E0")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000546")]
		public enum ContactTest
		{
			[Token(Token = "0x4001A25")]
			PerpenTest,
			[Token(Token = "0x4001A26")]
			BackwardsPress
		}

		[Token(Token = "0x400132A")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x400132B")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000100")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x87D178", Offset = "0x87D178", VA = "0x87D178", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000101")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x87D180", Offset = "0x87D180", VA = "0x87D180")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x87D18C", Offset = "0x87D18C", VA = "0x87D18C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x87D2DC", Offset = "0x87D2DC", VA = "0x87D2DC")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x87D4E4", Offset = "0x87D4E4", VA = "0x87D4E4", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x87DA28", Offset = "0x87DA28", VA = "0x87DA28")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x87D940", Offset = "0x87D940", VA = "0x87D940")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x87DB78", Offset = "0x87DB78", VA = "0x87DB78")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x87DC6C", Offset = "0x87DC6C", VA = "0x87DC6C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x87DD98", Offset = "0x87DD98", VA = "0x87DD98")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D19C", Offset = "0x57D19C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D1AC", Offset = "0x57D1AC")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000102")]
		public Collider Collider
		{
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x87DE84", Offset = "0x87DE84", VA = "0x87DE84", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581FA4", Offset = "0x581FA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x87DE8C", Offset = "0x87DE8C", VA = "0x87DE8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581FB4", Offset = "0x581FB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60011AE")]
			[Address(RVA = "0x87DE94", Offset = "0x87DE94", VA = "0x87DE94", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581FC4", Offset = "0x581FC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0x87DE9C", Offset = "0x87DE9C", VA = "0x87DE9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581FD4", Offset = "0x581FD4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0x87DEA4", Offset = "0x87DEA4", VA = "0x87DEA4", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x87DEF4", Offset = "0x87DEF4", VA = "0x87DEF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x87DF70", Offset = "0x87DF70", VA = "0x87DF70")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000105")]
		Collider Collider
		{
			[Token(Token = "0x60011B3")]
			get;
		}

		[Token(Token = "0x17000106")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60011B4")]
			get;
		}

		[Token(Token = "0x17000107")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60011B5")]
			get;
		}
	}
	[Token(Token = "0x20002A8")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x87D440", Offset = "0x87D440", VA = "0x87D440")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public enum InteractionType
	{
		[Token(Token = "0x400133F")]
		Enter,
		[Token(Token = "0x4001340")]
		Stay,
		[Token(Token = "0x4001341")]
		Exit
	}
	[Token(Token = "0x20002AA")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000547")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001A28")]
			Mesh,
			[Token(Token = "0x4001A29")]
			Skeleton,
			[Token(Token = "0x4001A2A")]
			Both
		}

		[Token(Token = "0x2000548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5721A8", Offset = "0x5721A8")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700024A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D3C")]
				[Address(RVA = "0x88351C", Offset = "0x88351C", VA = "0x88351C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D3E")]
				[Address(RVA = "0x883584", Offset = "0x883584", VA = "0x883584", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D39")]
			[Address(RVA = "0x883010", Offset = "0x883010", VA = "0x883010")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0x8832FC", Offset = "0x8832FC", VA = "0x8832FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0x883300", Offset = "0x883300", VA = "0x883300", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0x883524", Offset = "0x883524", VA = "0x883524", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001342")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D1DC", Offset = "0x57D1DC")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000108")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0x881514", Offset = "0x881514", VA = "0x881514")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x882630", Offset = "0x882630", VA = "0x882630")]
			private set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x882098", Offset = "0x882098", VA = "0x882098")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x882698", Offset = "0x882698", VA = "0x882698")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x882700", Offset = "0x882700", VA = "0x882700")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0x882738", Offset = "0x882738", VA = "0x882738")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0x8827A0", Offset = "0x8827A0", VA = "0x8827A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0x8827D8", Offset = "0x8827D8", VA = "0x8827D8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x882840", Offset = "0x882840", VA = "0x882840")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0x882878", Offset = "0x882878", VA = "0x882878")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x8814E0", Offset = "0x8814E0", VA = "0x8814E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x8828E0", Offset = "0x8828E0", VA = "0x8828E0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x882064", Offset = "0x882064", VA = "0x882064")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x882944", Offset = "0x882944", VA = "0x882944")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x8829A8", Offset = "0x8829A8", VA = "0x8829A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x8829DC", Offset = "0x8829DC", VA = "0x8829DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x882A40", Offset = "0x882A40", VA = "0x882A40")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x882A74", Offset = "0x882A74", VA = "0x882A74")]
			private set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x882AD8", Offset = "0x882AD8", VA = "0x882AD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0x882B0C", Offset = "0x882B0C", VA = "0x882B0C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0x882B70", Offset = "0x882B70", VA = "0x882B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581FE4", Offset = "0x581FE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0x882BC0", Offset = "0x882BC0", VA = "0x882BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x581FF4", Offset = "0x581FF4")]
			private set
			{
			}
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x882C14", Offset = "0x882C14", VA = "0x882C14")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x882F88", Offset = "0x882F88", VA = "0x882F88")]
		private void Update()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x882F18", Offset = "0x882F18", VA = "0x882F18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x582004", Offset = "0x582004")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x87E9B8", Offset = "0x87E9B8", VA = "0x87E9B8")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x88303C", Offset = "0x88303C", VA = "0x88303C")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x8820D0", Offset = "0x8820D0", VA = "0x8820D0")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x881350", Offset = "0x881350", VA = "0x881350")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x88321C", Offset = "0x88321C", VA = "0x88321C")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000549")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0x883CD4", Offset = "0x883CD4", VA = "0x883CD4")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000113")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x88358C", Offset = "0x88358C", VA = "0x88358C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x883594", Offset = "0x883594", VA = "0x883594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x88359C", Offset = "0x88359C", VA = "0x88359C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x8835A4", Offset = "0x8835A4", VA = "0x8835A4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000064")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0x8835AC", Offset = "0x8835AC", VA = "0x8835AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582068", Offset = "0x582068")]
			add
			{
			}
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x883650", Offset = "0x883650", VA = "0x883650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582078", Offset = "0x582078")]
			remove
			{
			}
		}

		[Token(Token = "0x14000065")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x883768", Offset = "0x883768", VA = "0x883768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582088", Offset = "0x582088")]
			add
			{
			}
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x88380C", Offset = "0x88380C", VA = "0x88380C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582098", Offset = "0x582098")]
			remove
			{
			}
		}

		[Token(Token = "0x14000066")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x883924", Offset = "0x883924", VA = "0x883924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5820A8", Offset = "0x5820A8")]
			add
			{
			}
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x8839C8", Offset = "0x8839C8", VA = "0x8839C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5820B8", Offset = "0x5820B8")]
			remove
			{
			}
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x8836F4", Offset = "0x8836F4", VA = "0x8836F4", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x8838B0", Offset = "0x8838B0", VA = "0x8838B0", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x883A6C", Offset = "0x883A6C", VA = "0x883A6C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60011E2")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x87D278", Offset = "0x87D278", VA = "0x87D278", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x883BA8", Offset = "0x883BA8", VA = "0x883BA8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x87DE7C", Offset = "0x87DE7C", VA = "0x87DE7C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x400135A")]
		None,
		[Token(Token = "0x400135B")]
		Proximity,
		[Token(Token = "0x400135C")]
		Contact,
		[Token(Token = "0x400135D")]
		Action
	}
	[Token(Token = "0x20002AD")]
	public enum InteractableState
	{
		[Token(Token = "0x400135F")]
		Default,
		[Token(Token = "0x4001360")]
		ProximityState,
		[Token(Token = "0x4001361")]
		ContactState,
		[Token(Token = "0x4001362")]
		ActionState
	}
	[Token(Token = "0x20002AE")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x87DAD4", Offset = "0x87DAD4", VA = "0x87DAD4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000117")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x883D24", Offset = "0x883D24", VA = "0x883D24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x883AE0", Offset = "0x883AE0", VA = "0x883AE0")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x883C0C", Offset = "0x883C0C", VA = "0x883C0C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x883D8C", Offset = "0x883D8C", VA = "0x883D8C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200054A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5721B8", Offset = "0x5721B8")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700024C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D44")]
				[Address(RVA = "0x884D8C", Offset = "0x884D8C", VA = "0x884D8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D46")]
				[Address(RVA = "0x884DF4", Offset = "0x884DF4", VA = "0x884DF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D40")]
			[Address(RVA = "0x884850", Offset = "0x884850", VA = "0x884850")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001D41")]
			[Address(RVA = "0x88497C", Offset = "0x88497C", VA = "0x88497C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D42")]
			[Address(RVA = "0x8849F0", Offset = "0x8849F0", VA = "0x8849F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D43")]
			[Address(RVA = "0x884998", Offset = "0x884998", VA = "0x884998")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001D45")]
			[Address(RVA = "0x884D94", Offset = "0x884D94", VA = "0x884D94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x884748", Offset = "0x884748", VA = "0x884748")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x8847C4", Offset = "0x8847C4", VA = "0x8847C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5820C8", Offset = "0x5820C8")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x88487C", Offset = "0x88487C", VA = "0x88487C")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x884974", Offset = "0x884974", VA = "0x884974")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000118")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x880D8C", Offset = "0x880D8C", VA = "0x880D8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x880EF4", Offset = "0x880EF4", VA = "0x880EF4")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x884DFC", Offset = "0x884DFC", VA = "0x884DFC")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x884EA8", Offset = "0x884EA8", VA = "0x884EA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x885170", Offset = "0x885170", VA = "0x885170")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x8851B8", Offset = "0x8851B8", VA = "0x8851B8")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x885408", Offset = "0x885408", VA = "0x885408")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x885534", Offset = "0x885534", VA = "0x885534")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5721C8", Offset = "0x5721C8")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700024E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D4A")]
				[Address(RVA = "0x8822E0", Offset = "0x8822E0", VA = "0x8822E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D4C")]
				[Address(RVA = "0x882348", Offset = "0x882348", VA = "0x882348", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D47")]
			[Address(RVA = "0x881010", Offset = "0x881010", VA = "0x881010")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001D48")]
			[Address(RVA = "0x881CFC", Offset = "0x881CFC", VA = "0x881CFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D49")]
			[Address(RVA = "0x881D00", Offset = "0x881D00", VA = "0x881D00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0x8822E8", Offset = "0x8822E8", VA = "0x8822E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001372")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000119")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x880C70", Offset = "0x880C70", VA = "0x880C70", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700011A")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x880C78", Offset = "0x880C78", VA = "0x880C78", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700011B")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60011FA")]
			[Address(RVA = "0x880C80", Offset = "0x880C80", VA = "0x880C80", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011C")]
		public override bool EnableState
		{
			[Token(Token = "0x60011FB")]
			[Address(RVA = "0x880C88", Offset = "0x880C88", VA = "0x880C88", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x880CB4", Offset = "0x880CB4", VA = "0x880CB4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x880CF0", Offset = "0x880CF0", VA = "0x880CF0", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x880FA0", Offset = "0x880FA0", VA = "0x880FA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58212C", Offset = "0x58212C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x88103C", Offset = "0x88103C", VA = "0x88103C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x88154C", Offset = "0x88154C", VA = "0x88154C")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x8817C4", Offset = "0x8817C4", VA = "0x8817C4")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x881904", Offset = "0x881904", VA = "0x881904", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x881BD0", Offset = "0x881BD0", VA = "0x881BD0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x881BD4", Offset = "0x881BD4", VA = "0x881BD4", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x881BD8", Offset = "0x881BD8", VA = "0x881BD8")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D26C", Offset = "0x57D26C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D27C", Offset = "0x57D27C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D28C", Offset = "0x57D28C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700011D")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001206")]
			[Address(RVA = "0x882350", Offset = "0x882350", VA = "0x882350", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582190", Offset = "0x582190")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001207")]
			[Address(RVA = "0x882358", Offset = "0x882358", VA = "0x882358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5821A0", Offset = "0x5821A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public bool EnableState
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0x882360", Offset = "0x882360", VA = "0x882360", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001209")]
			[Address(RVA = "0x88237C", Offset = "0x88237C", VA = "0x88237C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0x88239C", Offset = "0x88239C", VA = "0x88239C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5821B0", Offset = "0x5821B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600120B")]
			[Address(RVA = "0x8823A4", Offset = "0x8823A4", VA = "0x8823A4", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5821C0", Offset = "0x5821C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public float SphereRadius
		{
			[Token(Token = "0x600120C")]
			[Address(RVA = "0x8823B0", Offset = "0x8823B0", VA = "0x8823B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5821D0", Offset = "0x5821D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600120D")]
			[Address(RVA = "0x8823B8", Offset = "0x8823B8", VA = "0x8823B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5821E0", Offset = "0x5821E0")]
			private set
			{
			}
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x8823C0", Offset = "0x8823C0", VA = "0x8823C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x882408", Offset = "0x882408", VA = "0x882408", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x88240C", Offset = "0x88240C", VA = "0x88240C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001382")]
		None = 0,
		[Token(Token = "0x4001383")]
		Ray = 1,
		[Token(Token = "0x4001384")]
		Poke = 4,
		[Token(Token = "0x4001385")]
		All = -1
	}
	[Token(Token = "0x20002B5")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001387")]
		Inactive,
		[Token(Token = "0x4001388")]
		PrimaryInputDown,
		[Token(Token = "0x4001389")]
		PrimaryInputDownStay,
		[Token(Token = "0x400138A")]
		PrimaryInputUp
	}
	[Token(Token = "0x20002B6")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x881B8C", Offset = "0x881B8C", VA = "0x881B8C")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D29C", Offset = "0x57D29C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D2AC", Offset = "0x57D2AC")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D2BC", Offset = "0x57D2BC")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000121")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001212")]
			[Address(RVA = "0x87DD90", Offset = "0x87DD90", VA = "0x87DD90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001213")]
			[Address(RVA = "0x883E08", Offset = "0x883E08", VA = "0x883E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5821F0", Offset = "0x5821F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001214")]
			[Address(RVA = "0x883E10", Offset = "0x883E10", VA = "0x883E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582200", Offset = "0x582200")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001215")]
			get;
		}

		[Token(Token = "0x17000124")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001216")]
			get;
		}

		[Token(Token = "0x17000125")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001217")]
			get;
		}

		[Token(Token = "0x17000126")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0x883E1C", Offset = "0x883E1C", VA = "0x883E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582210", Offset = "0x582210")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001219")]
			[Address(RVA = "0x883E28", Offset = "0x883E28", VA = "0x883E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582220", Offset = "0x582220")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0x883E34", Offset = "0x883E34", VA = "0x883E34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582230", Offset = "0x582230")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600121B")]
			[Address(RVA = "0x883E40", Offset = "0x883E40", VA = "0x883E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582240", Offset = "0x582240")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001220")]
			get;
			[Token(Token = "0x6001221")]
			set;
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x883E4C", Offset = "0x883E4C", VA = "0x883E4C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600121D")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600121E")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600121F")]
		public abstract void DeFocus();

		[Token(Token = "0x6001222")]
		public abstract void Initialize();

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x883E54", Offset = "0x883E54", VA = "0x883E54")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x883EA4", Offset = "0x883EA4", VA = "0x883EA4")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x883EFC", Offset = "0x883EFC", VA = "0x883EFC", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x884140", Offset = "0x884140", VA = "0x884140", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x881BEC", Offset = "0x881BEC", VA = "0x881BEC")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000129")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001228")]
			get;
		}

		[Token(Token = "0x1700012A")]
		bool EnableState
		{
			[Token(Token = "0x600122A")]
			get;
			[Token(Token = "0x600122B")]
			set;
		}

		[Token(Token = "0x1700012B")]
		bool ToolActivateState
		{
			[Token(Token = "0x600122C")]
			get;
			[Token(Token = "0x600122D")]
			set;
		}

		[Token(Token = "0x6001229")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20002B9")]
	public class PinchStateModule
	{
		[Token(Token = "0x200054C")]
		private enum PinchState
		{
			[Token(Token = "0x4001A3B")]
			None,
			[Token(Token = "0x4001A3C")]
			PinchDown,
			[Token(Token = "0x4001A3D")]
			PinchStay,
			[Token(Token = "0x4001A3E")]
			PinchUp
		}

		[Token(Token = "0x4001397")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700012C")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600122E")]
			[Address(RVA = "0x8874B0", Offset = "0x8874B0", VA = "0x8874B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012D")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600122F")]
			[Address(RVA = "0x88753C", Offset = "0x88753C", VA = "0x88753C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012E")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001230")]
			[Address(RVA = "0x8875C8", Offset = "0x8875C8", VA = "0x8875C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x887654", Offset = "0x887654", VA = "0x887654")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x887680", Offset = "0x887680", VA = "0x887680")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x400139A")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x400139B")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x400139C")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x400139D")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x400139E")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D2DC", Offset = "0x57D2DC")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700012F")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001233")]
			[Address(RVA = "0x887920", Offset = "0x887920", VA = "0x887920", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000130")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001234")]
			[Address(RVA = "0x887928", Offset = "0x887928", VA = "0x887928", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000131")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0x887990", Offset = "0x887990", VA = "0x887990", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000132")]
		public override bool EnableState
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0x887998", Offset = "0x887998", VA = "0x887998", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001237")]
			[Address(RVA = "0x8879DC", Offset = "0x8879DC", VA = "0x8879DC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x887A50", Offset = "0x887A50", VA = "0x887A50", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x887AA8", Offset = "0x887AA8", VA = "0x887AA8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x887B44", Offset = "0x887B44", VA = "0x887B44")]
		private void Update()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x887E44", Offset = "0x887E44", VA = "0x887E44")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x887F40", Offset = "0x887F40", VA = "0x887F40", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x8882A4", Offset = "0x8882A4", VA = "0x8882A4")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x888448", Offset = "0x888448", VA = "0x888448")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x888570", Offset = "0x888570", VA = "0x888570")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x8888A8", Offset = "0x8888A8", VA = "0x8888A8")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x888CB8", Offset = "0x888CB8", VA = "0x888CB8", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x888D8C", Offset = "0x888D8C", VA = "0x888D8C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x888DC0", Offset = "0x888DC0", VA = "0x888DC0")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40013AA")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40013AB")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D350", Offset = "0x57D350")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000133")]
		public bool EnableState
		{
			[Token(Token = "0x6001244")]
			[Address(RVA = "0x8879C0", Offset = "0x8879C0", VA = "0x8879C0", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001245")]
			[Address(RVA = "0x8879F8", Offset = "0x8879F8", VA = "0x8879F8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001246")]
			[Address(RVA = "0x888E78", Offset = "0x888E78", VA = "0x888E78", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001247")]
			[Address(RVA = "0x887E08", Offset = "0x887E08", VA = "0x887E08", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001249")]
			[Address(RVA = "0x8890A8", Offset = "0x8890A8", VA = "0x8890A8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582250", Offset = "0x582250")]
			get
			{
				return null;
			}
			[Token(Token = "0x600124A")]
			[Address(RVA = "0x8890B0", Offset = "0x8890B0", VA = "0x8890B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582260", Offset = "0x582260")]
			set
			{
			}
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x888E80", Offset = "0x888E80", VA = "0x888E80")]
		private void Awake()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x888CEC", Offset = "0x888CEC", VA = "0x888CEC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x8890B8", Offset = "0x8890B8", VA = "0x8890B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x8893E4", Offset = "0x8893E4", VA = "0x8893E4")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x8895D4", Offset = "0x8895D4", VA = "0x8895D4")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000136")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600124F")]
			[Address(RVA = "0x8808E0", Offset = "0x8808E0", VA = "0x8808E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x8808E8", Offset = "0x8808E8", VA = "0x8808E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x880970", Offset = "0x880970", VA = "0x880970")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x880978", Offset = "0x880978", VA = "0x880978")]
			set
			{
			}
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x8809E4", Offset = "0x8809E4", VA = "0x8809E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x880C48", Offset = "0x880C48", VA = "0x880C48")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x880C58", Offset = "0x880C58", VA = "0x880C58")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x880C68", Offset = "0x880C68", VA = "0x880C68")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x87E4E8", Offset = "0x87E4E8", VA = "0x87E4E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x87E4EC", Offset = "0x87E4EC", VA = "0x87E4EC")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x87E56C", Offset = "0x87E56C", VA = "0x87E56C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x87E65C", Offset = "0x87E65C", VA = "0x87E65C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x87E74C", Offset = "0x87E74C", VA = "0x87E74C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x87E80C", Offset = "0x87E80C", VA = "0x87E80C")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x87E8FC", Offset = "0x87E8FC", VA = "0x87E8FC")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x87E944", Offset = "0x87E944", VA = "0x87E944")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x87EAA0", Offset = "0x87EAA0", VA = "0x87EAA0")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x87EB10", Offset = "0x87EB10", VA = "0x87EB10")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x87EB18", Offset = "0x87EB18", VA = "0x87EB18")]
		private void Start()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x87EB1C", Offset = "0x87EB1C", VA = "0x87EB1C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x87EAD4", Offset = "0x87EAD4", VA = "0x87EAD4")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x87EB5C", Offset = "0x87EB5C", VA = "0x87EB5C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5721D8", Offset = "0x5721D8")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000250")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D50")]
				[Address(RVA = "0x887354", Offset = "0x887354", VA = "0x887354", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000251")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D52")]
				[Address(RVA = "0x8873BC", Offset = "0x8873BC", VA = "0x8873BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0x887088", Offset = "0x887088", VA = "0x887088")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0x887164", Offset = "0x887164", VA = "0x887164", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x887168", Offset = "0x887168", VA = "0x887168", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D51")]
			[Address(RVA = "0x88735C", Offset = "0x88735C", VA = "0x88735C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013BB")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40013BC")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x886CA0", Offset = "0x886CA0", VA = "0x886CA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x886D38", Offset = "0x886D38", VA = "0x886D38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x886FC4", Offset = "0x886FC4", VA = "0x886FC4")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x886F54", Offset = "0x886F54", VA = "0x886F54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x582270", Offset = "0x582270")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x8870B4", Offset = "0x8870B4", VA = "0x8870B4")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200054E")]
		public enum SelectionState
		{
			[Token(Token = "0x4001A46")]
			Off,
			[Token(Token = "0x4001A47")]
			Selected,
			[Token(Token = "0x4001A48")]
			Highlighted
		}

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000138")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0x889634", Offset = "0x889634", VA = "0x889634")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x88963C", Offset = "0x88963C", VA = "0x88963C")]
			set
			{
			}
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x8897C4", Offset = "0x8897C4", VA = "0x8897C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x889984", Offset = "0x889984", VA = "0x889984")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x8896C4", Offset = "0x8896C4", VA = "0x8896C4")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x889A74", Offset = "0x889A74", VA = "0x889A74")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200054F")]
		public enum SegmentType
		{
			[Token(Token = "0x4001A4A")]
			Straight,
			[Token(Token = "0x4001A4B")]
			LeftTurn,
			[Token(Token = "0x4001A4C")]
			RightTurn,
			[Token(Token = "0x4001A4D")]
			Switch
		}

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40013D1")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40013D2")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D430", Offset = "0x57D430")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000139")]
		public float StartDistance
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x889AE0", Offset = "0x889AE0", VA = "0x889AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5822D4", Offset = "0x5822D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x889AE8", Offset = "0x889AE8", VA = "0x889AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5822E4", Offset = "0x5822E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public float GridSize
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x889AF0", Offset = "0x889AF0", VA = "0x889AF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x889AF8", Offset = "0x889AF8", VA = "0x889AF8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public int SubDivCount
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x889B00", Offset = "0x889B00", VA = "0x889B00")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001276")]
			[Address(RVA = "0x889B08", Offset = "0x889B08", VA = "0x889B08")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public SegmentType Type
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x889B10", Offset = "0x889B10", VA = "0x889B10")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700013D")]
		public Pose EndPose
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x889B18", Offset = "0x889B18", VA = "0x889B18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		public float Radius
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x889FAC", Offset = "0x889FAC", VA = "0x889FAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013F")]
		public float SegmentLength
		{
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x889B80", Offset = "0x889B80", VA = "0x889B80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x889FBC", Offset = "0x889FBC", VA = "0x889FBC")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x889FD4", Offset = "0x889FD4", VA = "0x889FD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x889BC0", Offset = "0x889BC0", VA = "0x889BC0")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x889FD8", Offset = "0x889FD8", VA = "0x889FD8")]
		private void Update()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x889FDC", Offset = "0x889FDC", VA = "0x889FDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x88A048", Offset = "0x88A048", VA = "0x88A048")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x88ABD0", Offset = "0x88ABD0", VA = "0x88ABD0")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x88AEDC", Offset = "0x88AEDC", VA = "0x88AEDC")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5721E8", Offset = "0x5721E8")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000252")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D56")]
				[Address(RVA = "0x88BAE4", Offset = "0x88BAE4", VA = "0x88BAE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000253")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D58")]
				[Address(RVA = "0x88BB4C", Offset = "0x88BB4C", VA = "0x88BB4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D53")]
			[Address(RVA = "0x88B85C", Offset = "0x88B85C", VA = "0x88B85C")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001D54")]
			[Address(RVA = "0x88B938", Offset = "0x88B938", VA = "0x88B938", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D55")]
			[Address(RVA = "0x88B93C", Offset = "0x88B93C", VA = "0x88B93C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D57")]
			[Address(RVA = "0x88BAEC", Offset = "0x88BAEC", VA = "0x88BAEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013D8")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40013D9")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x88AF80", Offset = "0x88AF80", VA = "0x88AF80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x88B02C", Offset = "0x88B02C", VA = "0x88B02C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x88B0E0", Offset = "0x88B0E0", VA = "0x88B0E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x88B20C", Offset = "0x88B20C", VA = "0x88B20C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x88B37C", Offset = "0x88B37C", VA = "0x88B37C")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x88B518", Offset = "0x88B518", VA = "0x88B518")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x88B794", Offset = "0x88B794", VA = "0x88B794")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x88B62C", Offset = "0x88B62C", VA = "0x88B62C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x88B640", Offset = "0x88B640", VA = "0x88B640")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x88B7EC", Offset = "0x88B7EC", VA = "0x88B7EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5822F4", Offset = "0x5822F4")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x88B888", Offset = "0x88B888", VA = "0x88B888")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000140")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0x88BB54", Offset = "0x88BB54", VA = "0x88BB54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x88BB64", Offset = "0x88BB64", VA = "0x88BB64", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x88BB6C", Offset = "0x88BB6C", VA = "0x88BB6C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x88BFD8", Offset = "0x88BFD8", VA = "0x88BFD8")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x40013EC")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40013ED")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D530", Offset = "0x57D530")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000141")]
		public float Distance
		{
			[Token(Token = "0x6001292")]
			[Address(RVA = "0x88C0D0", Offset = "0x88C0D0", VA = "0x88C0D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582358", Offset = "0x582358")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001293")]
			[Address(RVA = "0x88C0D8", Offset = "0x88C0D8", VA = "0x88C0D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582368", Offset = "0x582368")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public float Scale
		{
			[Token(Token = "0x6001294")]
			[Address(RVA = "0x88C0E0", Offset = "0x88C0E0", VA = "0x88C0E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001295")]
			[Address(RVA = "0x88C0E8", Offset = "0x88C0E8", VA = "0x88C0E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x88BB68", Offset = "0x88BB68", VA = "0x88BB68", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x88C0F0", Offset = "0x88C0F0", VA = "0x88C0F0")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x88BBB4", Offset = "0x88BBB4", VA = "0x88BBB4")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x88BE8C", Offset = "0x88BE8C", VA = "0x88BE8C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600129A")]
		public abstract void UpdatePosition();

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x88C048", Offset = "0x88C048", VA = "0x88C048")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5721F8", Offset = "0x5721F8")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000254")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D5C")]
				[Address(RVA = "0x88CA78", Offset = "0x88CA78", VA = "0x88CA78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000255")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D5E")]
				[Address(RVA = "0x88CAE0", Offset = "0x88CAE0", VA = "0x88CAE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D59")]
			[Address(RVA = "0x88C6BC", Offset = "0x88C6BC", VA = "0x88C6BC")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0x88C854", Offset = "0x88C854", VA = "0x88C854", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x88C858", Offset = "0x88C858", VA = "0x88C858", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0x88CA80", Offset = "0x88CA80", VA = "0x88CA80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x88C2C0", Offset = "0x88C2C0", VA = "0x88C2C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x88C30C", Offset = "0x88C30C", VA = "0x88C30C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x88C418", Offset = "0x88C418", VA = "0x88C418")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x88C560", Offset = "0x88C560", VA = "0x88C560")]
		private void Update()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x88C474", Offset = "0x88C474", VA = "0x88C474")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x88C63C", Offset = "0x88C63C", VA = "0x88C63C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x582378", Offset = "0x582378")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x88C6E8", Offset = "0x88C6E8", VA = "0x88C6E8")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x88C794", Offset = "0x88C794", VA = "0x88C794")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x88C7F4", Offset = "0x88C7F4", VA = "0x88C7F4")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000552")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001A60")]
			Start,
			[Token(Token = "0x4001A61")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001A62")]
			Stop
		}

		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572208", Offset = "0x572208")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000256")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D62")]
				[Address(RVA = "0x88D404", Offset = "0x88D404", VA = "0x88D404", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000257")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D64")]
				[Address(RVA = "0x88D46C", Offset = "0x88D46C", VA = "0x88D46C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0x88CDA0", Offset = "0x88CDA0", VA = "0x88CDA0")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001D60")]
			[Address(RVA = "0x88D1E4", Offset = "0x88D1E4", VA = "0x88D1E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D61")]
			[Address(RVA = "0x88D1E8", Offset = "0x88D1E8", VA = "0x88D1E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D63")]
			[Address(RVA = "0x88D40C", Offset = "0x88D40C", VA = "0x88D40C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001400")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001401")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001402")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001403")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D590", Offset = "0x57D590")]
		protected float _initialSpeed;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x88CAE8", Offset = "0x88CAE8", VA = "0x88CAE8")]
		private void Start()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x88CC40", Offset = "0x88CC40", VA = "0x88CC40")]
		private void Update()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x88CC4C", Offset = "0x88CC4C", VA = "0x88CC4C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x87E520", Offset = "0x87E520", VA = "0x87E520")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x88CBBC", Offset = "0x88CBBC", VA = "0x88CBBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5823DC", Offset = "0x5823DC")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x88CDCC", Offset = "0x88CDCC", VA = "0x88CDCC")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x88CD3C", Offset = "0x88CD3C", VA = "0x88CD3C")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x87E5A0", Offset = "0x87E5A0", VA = "0x87E5A0")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x87E690", Offset = "0x87E690", VA = "0x87E690")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x88D000", Offset = "0x88D000", VA = "0x88D000")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x88D0F0", Offset = "0x88D0F0", VA = "0x88D0F0")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x87E780", Offset = "0x87E780", VA = "0x87E780")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x87E840", Offset = "0x87E840", VA = "0x87E840")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x87E934", Offset = "0x87E934", VA = "0x87E934")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x88D178", Offset = "0x88D178", VA = "0x88D178")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000143")]
		public float TrackLength
		{
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x88D474", Offset = "0x88D474", VA = "0x88D474")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x88D47C", Offset = "0x88D47C", VA = "0x88D47C")]
			private set
			{
			}
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x88D484", Offset = "0x88D484", VA = "0x88D484")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x88C170", Offset = "0x88C170", VA = "0x88C170")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x88D488", Offset = "0x88D488", VA = "0x88D488")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x88D680", Offset = "0x88D680", VA = "0x88D680")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x88D79C", Offset = "0x88D79C", VA = "0x88D79C")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class Pose
	{
		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x887804", Offset = "0x887804", VA = "0x887804")]
		public Pose()
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x8878B0", Offset = "0x8878B0", VA = "0x8878B0")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572218", Offset = "0x572218")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000258")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D68")]
				[Address(RVA = "0x73832C", Offset = "0x73832C", VA = "0x73832C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000259")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D6A")]
				[Address(RVA = "0x738394", Offset = "0x738394", VA = "0x738394", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D65")]
			[Address(RVA = "0x73811C", Offset = "0x73811C", VA = "0x73811C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001D66")]
			[Address(RVA = "0x738148", Offset = "0x738148", VA = "0x738148", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D67")]
			[Address(RVA = "0x73814C", Offset = "0x73814C", VA = "0x73814C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x738334", Offset = "0x738334", VA = "0x738334", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572228", Offset = "0x572228")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700025A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D6E")]
				[Address(RVA = "0x73849C", Offset = "0x73849C", VA = "0x73849C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D70")]
				[Address(RVA = "0x738504", Offset = "0x738504", VA = "0x738504", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0x73839C", Offset = "0x73839C", VA = "0x73839C")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0x7383C8", Offset = "0x7383C8", VA = "0x7383C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0x7383CC", Offset = "0x7383CC", VA = "0x7383CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0x7384A4", Offset = "0x7384A4", VA = "0x7384A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001426")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x57D778", Offset = "0x57D778")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000144")]
		public bool IsMoving
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x88D7B8", Offset = "0x88D7B8", VA = "0x88D7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582440", Offset = "0x582440")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x88D7C0", Offset = "0x88D7C0", VA = "0x88D7C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x582450", Offset = "0x582450")]
			private set
			{
			}
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x88D7CC", Offset = "0x88D7CC", VA = "0x88D7CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x88D808", Offset = "0x88D808", VA = "0x88D808")]
		private void Update()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x88D95C", Offset = "0x88D95C", VA = "0x88D95C")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x88D9C4", Offset = "0x88D9C4", VA = "0x88D9C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x582460", Offset = "0x582460")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x88DA44", Offset = "0x88DA44", VA = "0x88DA44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5824C4", Offset = "0x5824C4")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x88DAD8", Offset = "0x88DAD8", VA = "0x88DAD8")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x88DB44", Offset = "0x88DB44", VA = "0x88DB44")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x73850C", Offset = "0x73850C", VA = "0x73850C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x738578", Offset = "0x738578", VA = "0x738578")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x738630", Offset = "0x738630", VA = "0x738630")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x738730", Offset = "0x738730", VA = "0x738730")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x7387B0", Offset = "0x7387B0", VA = "0x7387B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x738890", Offset = "0x738890", VA = "0x738890")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001437")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001438")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001439")]
		EUDT_None,
		[Token(Token = "0x400143A")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20002CC")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000556")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572238", Offset = "0x572238")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700025C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D74")]
				[Address(RVA = "0x886C30", Offset = "0x886C30", VA = "0x886C30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D76")]
				[Address(RVA = "0x886C98", Offset = "0x886C98", VA = "0x886C98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D71")]
			[Address(RVA = "0x8862AC", Offset = "0x8862AC", VA = "0x8862AC")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001D72")]
			[Address(RVA = "0x8869E4", Offset = "0x8869E4", VA = "0x8869E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D73")]
			[Address(RVA = "0x8869E8", Offset = "0x8869E8", VA = "0x8869E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D75")]
			[Address(RVA = "0x886C38", Offset = "0x886C38", VA = "0x886C38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400143C")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400143D")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400143E")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57D7B8", Offset = "0x57D7B8")]
		public GameObject mainCamera;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x57D7F0", Offset = "0x57D7F0")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x8855F4", Offset = "0x8855F4", VA = "0x8855F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x885DD4", Offset = "0x885DD4", VA = "0x885DD4")]
		private void Update()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x885F14", Offset = "0x885F14", VA = "0x885F14")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x88603C", Offset = "0x88603C", VA = "0x88603C")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x886164", Offset = "0x886164", VA = "0x886164")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x885EE8", Offset = "0x885EE8", VA = "0x885EE8")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x88623C", Offset = "0x88623C", VA = "0x88623C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x582528", Offset = "0x582528")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x8862D8", Offset = "0x8862D8", VA = "0x8862D8")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x885960", Offset = "0x885960", VA = "0x885960")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x886400", Offset = "0x886400", VA = "0x886400")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x88630C", Offset = "0x88630C", VA = "0x88630C")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x88679C", Offset = "0x88679C", VA = "0x88679C")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x886878", Offset = "0x886878", VA = "0x886878")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x8868F4", Offset = "0x8868F4", VA = "0x8868F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58258C", Offset = "0x58258C")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x886944", Offset = "0x886944", VA = "0x886944")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x58259C", Offset = "0x58259C")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x886994", Offset = "0x886994", VA = "0x886994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5825AC", Offset = "0x5825AC")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5704B4", Offset = "0x5704B4")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000557")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572248", Offset = "0x572248")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001D78")]
			[Address(RVA = "0x87C894", Offset = "0x87C894", VA = "0x87C894")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D79")]
			[Address(RVA = "0x87C89C", Offset = "0x87C89C", VA = "0x87C89C")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001453")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001454")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001455")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001456")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001457")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001458")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001459")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400145A")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400145B")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x400145C")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400145D")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x87BAD8", Offset = "0x87BAD8", VA = "0x87BAD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x87BB30", Offset = "0x87BB30", VA = "0x87BB30")]
		private void Start()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x87BF38", Offset = "0x87BF38", VA = "0x87BF38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x87C004", Offset = "0x87C004", VA = "0x87C004")]
		private void Update()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x87C110", Offset = "0x87C110", VA = "0x87C110")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x87C448", Offset = "0x87C448", VA = "0x87C448")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x87C5B0", Offset = "0x87C5B0", VA = "0x87C5B0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x87C6FC", Offset = "0x87C6FC", VA = "0x87C6FC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x87C1AC", Offset = "0x87C1AC", VA = "0x87C1AC")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x87C24C", Offset = "0x87C24C", VA = "0x87C24C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x87BD8C", Offset = "0x87BD8C", VA = "0x87BD8C")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x87C818", Offset = "0x87C818", VA = "0x87C818")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001470")]
		Default,
		[Token(Token = "0x4001471")]
		Generic,
		[Token(Token = "0x4001472")]
		PingPongBall,
		[Token(Token = "0x4001473")]
		Controller
	}
	[Token(Token = "0x20002CF")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000145")]
		public bool AllowPointing
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0x87C8C8", Offset = "0x87C8C8", VA = "0x87C8C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000146")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x87C8D0", Offset = "0x87C8D0", VA = "0x87C8D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000147")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0x87C8D8", Offset = "0x87C8D8", VA = "0x87C8D8")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x87C8E0", Offset = "0x87C8E0", VA = "0x87C8E0")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x87C8E8", Offset = "0x87C8E8", VA = "0x87C8E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x87CB5C", Offset = "0x87CB5C", VA = "0x87CB5C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x87CBB8", Offset = "0x87CBB8", VA = "0x87CBB8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x87CBFC", Offset = "0x87CBFC", VA = "0x87CBFC")]
		public TouchController()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20002D1")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x57D8A8", Offset = "0x57D8A8")]
		public SoundFXRef testSound1;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x87A180", Offset = "0x87A180", VA = "0x87A180")]
		private void Start()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x87A184", Offset = "0x87A184", VA = "0x87A184")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x87A244", Offset = "0x87A244", VA = "0x87A244")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D8F4", Offset = "0x57D8F4")]
		public bool autoRetrigger;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x57D92C", Offset = "0x57D92C")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D950", Offset = "0x57D950")]
		public Transform[] playPositions;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xDE2B18", Offset = "0xDE2B18", VA = "0xDE2B18")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xDE2C9C", Offset = "0xDE2C9C", VA = "0xDE2C9C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xDE2E7C", Offset = "0xDE2E7C", VA = "0xDE2E7C")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xDE2CFC", Offset = "0xDE2CFC", VA = "0xDE2CFC")]
		public void Play()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xDE2F3C", Offset = "0xDE2F3C", VA = "0xDE2F3C")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xDE30B0", Offset = "0xDE30B0", VA = "0xDE30B0")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001487")]
		Default,
		[Token(Token = "0x4001488")]
		Preload,
		[Token(Token = "0x4001489")]
		ManualPreload
	}
	[Token(Token = "0x20002D4")]
	public enum Fade
	{
		[Token(Token = "0x400148B")]
		In,
		[Token(Token = "0x400148C")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20002D5")]
	public class SoundGroup
	{
		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57D988", Offset = "0x57D988")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x879F40", Offset = "0x879F40", VA = "0x879F40")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x879FD4", Offset = "0x879FD4", VA = "0x879FD4")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x87A060", Offset = "0x87A060", VA = "0x87A060")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x87A0F0", Offset = "0x87A0F0", VA = "0x87A0F0")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x8794F4", Offset = "0x8794F4", VA = "0x8794F4")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002D6")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000558")]
		public enum Fade
		{
			[Token(Token = "0x4001A7E")]
			In,
			[Token(Token = "0x4001A7F")]
			Out
		}

		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572258", Offset = "0x572258")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x4001A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001D7A")]
			[Address(RVA = "0xDE72D8", Offset = "0xDE72D8", VA = "0xDE72D8")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0xDE95A0", Offset = "0xDE95A0", VA = "0xDE95A0")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200055A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572268", Offset = "0x572268")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0xDE9508", Offset = "0xDE9508", VA = "0xDE9508")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0xDE9510", Offset = "0xDE9510", VA = "0xDE9510")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D9B4", Offset = "0x57D9B4")]
		public bool makePersistent;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57D9EC", Offset = "0x57D9EC")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DA24", Offset = "0x57DA24")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DA5C", Offset = "0x57DA5C")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DA94", Offset = "0x57DA94")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DACC", Offset = "0x57DACC")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DB04", Offset = "0x57DB04")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DB3C", Offset = "0x57DB3C")]
		public bool verboseLogging;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DB74", Offset = "0x57DB74")]
		public int maxSoundEmitters;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DBAC", Offset = "0x57DBAC")]
		public float volumeSoundFX;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DBE4", Offset = "0x57DBE4")]
		public float soundFxFadeSecs;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000148")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0xDE3170", Offset = "0xDE3170", VA = "0xDE3170")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000149")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0xDE3250", Offset = "0xDE3250", VA = "0xDE3250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0xDE32B8", Offset = "0xDE32B8", VA = "0xDE32B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700014B")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001302")]
			[Address(RVA = "0xDE332C", Offset = "0xDE332C", VA = "0xDE332C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700014C")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0xDE33A0", Offset = "0xDE33A0", VA = "0xDE33A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0xDE3414", Offset = "0xDE3414", VA = "0xDE3414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0xDE3488", Offset = "0xDE3488", VA = "0xDE3488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001310")]
			[Address(RVA = "0xDE51F8", Offset = "0xDE51F8", VA = "0xDE51F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xDE34FC", Offset = "0xDE34FC", VA = "0xDE34FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xDE3724", Offset = "0xDE3724", VA = "0xDE3724")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xDE3500", Offset = "0xDE3500", VA = "0xDE3500")]
		private void Init()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xDE4370", Offset = "0xDE4370", VA = "0xDE4370")]
		private void Update()
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xDE387C", Offset = "0xDE387C", VA = "0xDE387C")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xDE4994", Offset = "0xDE4994", VA = "0xDE4994")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xDE4B14", Offset = "0xDE4B14", VA = "0xDE4B14")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xDE4CB0", Offset = "0xDE4CB0", VA = "0xDE4CB0")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xDE4DB0", Offset = "0xDE4DB0", VA = "0xDE4DB0")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xDE4E40", Offset = "0xDE4E40", VA = "0xDE4E40")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xDE5260", Offset = "0xDE5260", VA = "0xDE5260")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xDE52D8", Offset = "0xDE52D8", VA = "0xDE52D8")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xDE3CC8", Offset = "0xDE3CC8", VA = "0xDE3CC8")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xDE4374", Offset = "0xDE4374", VA = "0xDE4374")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xDE556C", Offset = "0xDE556C", VA = "0xDE556C")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xDE5670", Offset = "0xDE5670", VA = "0xDE5670")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xDE5778", Offset = "0xDE5778", VA = "0xDE5778")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xDE5434", Offset = "0xDE5434", VA = "0xDE5434")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xDE58E4", Offset = "0xDE58E4", VA = "0xDE58E4")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xDE5A38", Offset = "0xDE5A38", VA = "0xDE5A38")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xDE5BE8", Offset = "0xDE5BE8", VA = "0xDE5BE8")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xDE2E8C", Offset = "0xDE2E8C", VA = "0xDE2E8C")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xDE3000", Offset = "0xDE3000", VA = "0xDE3000")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xDE5D94", Offset = "0xDE5D94", VA = "0xDE5D94")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xDE5E60", Offset = "0xDE5E60", VA = "0xDE5E60")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xDE5EF4", Offset = "0xDE5EF4", VA = "0xDE5EF4")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xDE5FB8", Offset = "0xDE5FB8", VA = "0xDE5FB8")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xDE605C", Offset = "0xDE605C", VA = "0xDE605C")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xDE613C", Offset = "0xDE613C", VA = "0xDE613C")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xDE6C20", Offset = "0xDE6C20", VA = "0xDE6C20")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xDE72E0", Offset = "0xDE72E0", VA = "0xDE72E0")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xDE74C0", Offset = "0xDE74C0", VA = "0xDE74C0")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xDE8034", Offset = "0xDE8034", VA = "0xDE8034")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xDE6344", Offset = "0xDE6344", VA = "0xDE6344")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xDE8154", Offset = "0xDE8154", VA = "0xDE8154")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xDE8228", Offset = "0xDE8228", VA = "0xDE8228")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xDE8308", Offset = "0xDE8308", VA = "0xDE8308")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xDE86C0", Offset = "0xDE86C0", VA = "0xDE86C0")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xDE88BC", Offset = "0xDE88BC", VA = "0xDE88BC")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xDE89D8", Offset = "0xDE89D8", VA = "0xDE89D8")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xDE8BA0", Offset = "0xDE8BA0", VA = "0xDE8BA0")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xDE8C78", Offset = "0xDE8C78", VA = "0xDE8C78")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xDE8DAC", Offset = "0xDE8DAC", VA = "0xDE8DAC")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xDE9198", Offset = "0xDE9198", VA = "0xDE9198")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public enum EmitterChannel
	{
		[Token(Token = "0x40014B4")]
		None = -1,
		[Token(Token = "0x40014B5")]
		Reserved,
		[Token(Token = "0x40014B6")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20002D8")]
	public class MixerSnapshot
	{
		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xDE969C", Offset = "0xDE969C", VA = "0xDE969C")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float minDefaultVal;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxDefaultVal;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float min;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float max;

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xDE9640", Offset = "0xDE9640", VA = "0xDE9640")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200055B")]
		public enum FadeState
		{
			[Token(Token = "0x4001A84")]
			Null,
			[Token(Token = "0x4001A85")]
			FadingIn,
			[Token(Token = "0x4001A86")]
			FadingOut,
			[Token(Token = "0x4001A87")]
			Ducking
		}

		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572278", Offset = "0x572278")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4001A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x1700025E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D82")]
				[Address(RVA = "0x8787F8", Offset = "0x8787F8", VA = "0x8787F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D84")]
				[Address(RVA = "0x878860", Offset = "0x878860", VA = "0x878860", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0x8786E0", Offset = "0x8786E0", VA = "0x8786E0")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001D80")]
			[Address(RVA = "0x87870C", Offset = "0x87870C", VA = "0x87870C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x878710", Offset = "0x878710", VA = "0x878710", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D83")]
			[Address(RVA = "0x878800", Offset = "0x878800", VA = "0x878800", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200055D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572288", Offset = "0x572288")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000260")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D88")]
				[Address(RVA = "0x878D08", Offset = "0x878D08", VA = "0x878D08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000261")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D8A")]
				[Address(RVA = "0x878D70", Offset = "0x878D70", VA = "0x878D70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D85")]
			[Address(RVA = "0x878B70", Offset = "0x878B70", VA = "0x878B70")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001D86")]
			[Address(RVA = "0x878B9C", Offset = "0x878B9C", VA = "0x878B9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D87")]
			[Address(RVA = "0x878BA0", Offset = "0x878BA0", VA = "0x878BA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D89")]
			[Address(RVA = "0x878D10", Offset = "0x878D10", VA = "0x878D10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572298", Offset = "0x572298")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4001A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4001A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4001A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4001AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4001AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4001AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000262")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D8E")]
				[Address(RVA = "0x878B00", Offset = "0x878B00", VA = "0x878B00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000263")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D90")]
				[Address(RVA = "0x878B68", Offset = "0x878B68", VA = "0x878B68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0x878868", Offset = "0x878868", VA = "0x878868")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0x878894", Offset = "0x878894", VA = "0x878894", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x878898", Offset = "0x878898", VA = "0x878898", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x878B08", Offset = "0x878B08", VA = "0x878B08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000150")]
		public float volume
		{
			[Token(Token = "0x6001336")]
			[Address(RVA = "0xDE8018", Offset = "0xDE8018", VA = "0xDE8018")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001337")]
			[Address(RVA = "0xDE973C", Offset = "0xDE973C", VA = "0xDE973C")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public float pitch
		{
			[Token(Token = "0x6001338")]
			[Address(RVA = "0xDE9758", Offset = "0xDE9758", VA = "0xDE9758")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001339")]
			[Address(RVA = "0xDE9774", Offset = "0xDE9774", VA = "0xDE9774")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public AudioClip clip
		{
			[Token(Token = "0x600133A")]
			[Address(RVA = "0xDE9790", Offset = "0xDE9790", VA = "0xDE9790")]
			get
			{
				return null;
			}
			[Token(Token = "0x600133B")]
			[Address(RVA = "0xDE97AC", Offset = "0xDE97AC", VA = "0xDE97AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public float time
		{
			[Token(Token = "0x600133C")]
			[Address(RVA = "0xDE97C8", Offset = "0xDE97C8", VA = "0xDE97C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600133D")]
			[Address(RVA = "0xDE6120", Offset = "0xDE6120", VA = "0xDE6120")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public float length
		{
			[Token(Token = "0x600133E")]
			[Address(RVA = "0xDE97E4", Offset = "0xDE97E4", VA = "0xDE97E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000155")]
		public bool loop
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0xDE989C", Offset = "0xDE989C", VA = "0xDE989C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001340")]
			[Address(RVA = "0xDE98B8", Offset = "0xDE98B8", VA = "0xDE98B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public bool mute
		{
			[Token(Token = "0x6001341")]
			[Address(RVA = "0xDE98D8", Offset = "0xDE98D8", VA = "0xDE98D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001342")]
			[Address(RVA = "0xDE98F4", Offset = "0xDE98F4", VA = "0xDE98F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001343")]
			[Address(RVA = "0xDE9914", Offset = "0xDE9914", VA = "0xDE9914")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001344")]
			[Address(RVA = "0xDE9930", Offset = "0xDE9930", VA = "0xDE9930")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public bool isPlaying
		{
			[Token(Token = "0x6001345")]
			[Address(RVA = "0xDE994C", Offset = "0xDE994C", VA = "0xDE994C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xDE9968", Offset = "0xDE9968", VA = "0xDE9968")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xDE8000", Offset = "0xDE8000", VA = "0xDE8000")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xDE9AE4", Offset = "0xDE9AE4", VA = "0xDE9AE4")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xDE8300", Offset = "0xDE8300", VA = "0xDE8300")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xDE9AEC", Offset = "0xDE9AEC", VA = "0xDE9AEC")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xDE9AF4", Offset = "0xDE9AF4", VA = "0xDE9AF4")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xDE8AF8", Offset = "0xDE8AF8", VA = "0xDE8AF8")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xDE5500", Offset = "0xDE5500", VA = "0xDE5500")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xDE9AFC", Offset = "0xDE9AFC", VA = "0xDE9AFC")]
		public void Play()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xDE9B5C", Offset = "0xDE9B5C", VA = "0xDE9B5C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xDE5350", Offset = "0xDE5350", VA = "0xDE5350")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xDE9B94", Offset = "0xDE9B94", VA = "0xDE9B94")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xDE85C4", Offset = "0xDE85C4", VA = "0xDE85C4")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xDE8804", Offset = "0xDE8804", VA = "0xDE8804")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xDE58A4", Offset = "0xDE58A4", VA = "0xDE58A4")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xDE9BEC", Offset = "0xDE9BEC", VA = "0xDE9BEC")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xDE9C18", Offset = "0xDE9C18", VA = "0xDE9C18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5825BC", Offset = "0x5825BC")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xDE9CA8", Offset = "0xDE9CA8", VA = "0xDE9CA8")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xDE5CA0", Offset = "0xDE5CA0", VA = "0xDE5CA0")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xDE5D1C", Offset = "0xDE5D1C", VA = "0xDE5D1C")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xDE5B50", Offset = "0xDE5B50", VA = "0xDE5B50")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xDE599C", Offset = "0xDE599C", VA = "0xDE599C")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xDE9D10", Offset = "0xDE9D10", VA = "0xDE9D10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x582620", Offset = "0x582620")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xDE9D94", Offset = "0xDE9D94", VA = "0xDE9D94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x582684", Offset = "0x582684")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xDE9E3C", Offset = "0xDE9E3C", VA = "0xDE9E3C")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40014CD")]
		Random,
		[Token(Token = "0x40014CE")]
		Sequential
	}
	[Token(Token = "0x20002DC")]
	public enum FreqHint
	{
		[Token(Token = "0x40014D0")]
		None,
		[Token(Token = "0x40014D1")]
		Wide,
		[Token(Token = "0x40014D2")]
		Narrow
	}
	[Token(Token = "0x20002DD")]
	public enum SoundPriority
	{
		[Token(Token = "0x40014D4")]
		VeryLow = -2,
		[Token(Token = "0x40014D5")]
		Low,
		[Token(Token = "0x40014D6")]
		Default,
		[Token(Token = "0x40014D7")]
		High,
		[Token(Token = "0x40014D8")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20002DE")]
	public class OSPProps
	{
		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DCCC", Offset = "0x57DCCC")]
		public bool enableSpatialization;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DD04", Offset = "0x57DD04")]
		public bool useFastOverride;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DD3C", Offset = "0x57DD3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57DD3C", Offset = "0x57DD3C")]
		public float gain;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DD90", Offset = "0x57DD90")]
		public bool enableInvSquare;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DDC8", Offset = "0x57DDC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57DDC8", Offset = "0x57DDC8")]
		public float volumetric;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DE20", Offset = "0x57DE20")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x57DE20", Offset = "0x57DE20")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xDE96AC", Offset = "0xDE96AC", VA = "0xDE96AC")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DF")]
	public class SoundFX
	{
		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DE80", Offset = "0x57DE80")]
		public string name;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DEB8", Offset = "0x57DEB8")]
		public SoundFXNext playback;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DEF0", Offset = "0x57DEF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57DEF0", Offset = "0x57DEF0")]
		public float volume;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DF44", Offset = "0x57DF44")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x57DF44", Offset = "0x57DF44")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57DFA0", Offset = "0x57DFA0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x57DFA0", Offset = "0x57DFA0")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57E000", Offset = "0x57E000")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57E038", Offset = "0x57E038")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57E070", Offset = "0x57E070")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57E0A8", Offset = "0x57E0A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57E0A8", Offset = "0x57E0A8")]
		public float spread;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57E100", Offset = "0x57E100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x57E100", Offset = "0x57E100")]
		public float pctChanceToPlay;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57E154", Offset = "0x57E154")]
		public SoundPriority priority;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57E18C", Offset = "0x57E18C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x57E18C", Offset = "0x57E18C")]
		public Vector2 delay;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57E1E8", Offset = "0x57E1E8")]
		public bool looping;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x57E220", Offset = "0x57E220")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000159")]
		public int Length
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0x879268", Offset = "0x879268", VA = "0x879268")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015A")]
		public bool IsValid
		{
			[Token(Token = "0x6001362")]
			[Address(RVA = "0x879284", Offset = "0x879284", VA = "0x879284")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015B")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0x879328", Offset = "0x879328", VA = "0x879328")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001364")]
			[Address(RVA = "0x879330", Offset = "0x879330", VA = "0x879330")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001365")]
			[Address(RVA = "0x879338", Offset = "0x879338", VA = "0x879338")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015D")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001366")]
			[Address(RVA = "0x879344", Offset = "0x879344", VA = "0x879344")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x878D78", Offset = "0x878D78", VA = "0x878D78")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x87935C", Offset = "0x87935C", VA = "0x87935C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x87942C", Offset = "0x87942C", VA = "0x87942C")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x8794CC", Offset = "0x8794CC", VA = "0x8794CC")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x879514", Offset = "0x879514", VA = "0x879514")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x879610", Offset = "0x879610", VA = "0x879610")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x87961C", Offset = "0x87961C", VA = "0x87961C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x8796FC", Offset = "0x8796FC", VA = "0x8796FC")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x879814", Offset = "0x879814", VA = "0x879814")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x8798A4", Offset = "0x8798A4", VA = "0x8798A4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x87993C", Offset = "0x87993C", VA = "0x87993C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x8799CC", Offset = "0x8799CC", VA = "0x8799CC")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x879A5C", Offset = "0x879A5C", VA = "0x879A5C")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E0")]
	public class SoundFXRef
	{
		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x1700015E")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001373")]
			[Address(RVA = "0x879AD8", Offset = "0x879AD8", VA = "0x879AD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		public string name
		{
			[Token(Token = "0x6001374")]
			[Address(RVA = "0x879BD4", Offset = "0x879BD4", VA = "0x879BD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001375")]
			[Address(RVA = "0x879BDC", Offset = "0x879BDC", VA = "0x879BDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public int Length
		{
			[Token(Token = "0x6001377")]
			[Address(RVA = "0x879BE4", Offset = "0x879BE4", VA = "0x879BE4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000161")]
		public bool IsValid
		{
			[Token(Token = "0x6001378")]
			[Address(RVA = "0x879C28", Offset = "0x879C28", VA = "0x879C28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x879B08", Offset = "0x879B08", VA = "0x879B08")]
		private void Init()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x879C60", Offset = "0x879C60", VA = "0x879C60")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x879C98", Offset = "0x879C98", VA = "0x879C98")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x879CD8", Offset = "0x879CD8", VA = "0x879CD8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x879D20", Offset = "0x879D20", VA = "0x879D20")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x879DA0", Offset = "0x879DA0", VA = "0x879DA0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x879DE0", Offset = "0x879DE0", VA = "0x879DE0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x879E30", Offset = "0x879E30", VA = "0x879E30")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x879E68", Offset = "0x879E68", VA = "0x879E68")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x879EA8", Offset = "0x879EA8", VA = "0x879EA8")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x879EE0", Offset = "0x879EE0", VA = "0x879EE0")]
		public SoundFXRef()
		{
		}
	}
}
namespace DigitalOpus.MB.Core
{
	[Token(Token = "0x20002E1")]
	public class MBVersionConcrete : MBVersionInterface
	{
		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 _HALF_UV;

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xBB2388", Offset = "0xBB2388", VA = "0xBB2388", Slot = "4")]
		public string version()
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xBB23D0", Offset = "0xBB23D0", VA = "0xBB23D0", Slot = "5")]
		public int GetMajorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xBB247C", Offset = "0xBB247C", VA = "0xBB247C", Slot = "6")]
		public int GetMinorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xBB252C", Offset = "0xBB252C", VA = "0xBB252C", Slot = "7")]
		public bool GetActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xBB2548", Offset = "0xBB2548", VA = "0xBB2548", Slot = "8")]
		public void SetActive(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xBB2568", Offset = "0xBB2568", VA = "0xBB2568", Slot = "9")]
		public void SetActiveRecursively(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xBB2588", Offset = "0xBB2588", VA = "0xBB2588", Slot = "10")]
		public UnityEngine.Object[] FindSceneObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xBB25F0", Offset = "0xBB25F0", VA = "0xBB25F0", Slot = "11")]
		public bool IsRunningAndMeshNotReadWriteable(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xBB263C", Offset = "0xBB263C", VA = "0xBB263C")]
		public Vector2[] GetMeshUV1s(Mesh m, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xBB28F0", Offset = "0xBB28F0", VA = "0xBB28F0", Slot = "12")]
		public Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xBB2BC0", Offset = "0xBB2BC0", VA = "0xBB2BC0", Slot = "13")]
		public void MeshClear(Mesh m, bool t)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xBB2BE0", Offset = "0xBB2BE0", VA = "0xBB2BE0", Slot = "14")]
		public void MeshAssignUV3(Mesh m, Vector2[] uv3s)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xBB2C00", Offset = "0xBB2C00", VA = "0xBB2C00", Slot = "15")]
		public void MeshAssignUV4(Mesh m, Vector2[] uv4s)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xBB2C20", Offset = "0xBB2C20", VA = "0xBB2C20", Slot = "16")]
		public Vector4 GetLightmapTilingOffset(Renderer r)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xBB2C3C", Offset = "0xBB2C3C", VA = "0xBB2C3C", Slot = "17")]
		public Transform[] GetBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xBB2DA0", Offset = "0xBB2DA0", VA = "0xBB2DA0")]
		public MBVersionConcrete()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E2")]
	public class GrouperData
	{
		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool clusterOnLMIndex;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool clusterByLODLevel;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 origin;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 cellSize;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int pieNumSegments;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 pieAxis;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int height;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxDistBetweenClusters;

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x7202C0", Offset = "0x7202C0", VA = "0x7202C0")]
		public GrouperData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E3")]
	public abstract class MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5722A8", Offset = "0x5722A8")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Renderer r;

			[Token(Token = "0x4001AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Predicate<Renderer> <>9__0;

			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x726FBC", Offset = "0x726FBC", VA = "0x726FBC")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001D92")]
			[Address(RVA = "0x727274", Offset = "0x727274", VA = "0x727274")]
			internal bool <DoClustering>b__0(Renderer x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GrouperData d;

		[Token(Token = "0x6001394")]
		public abstract Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection);

		[Token(Token = "0x6001395")]
		public abstract void DrawGizmos(Bounds sourceObjectBounds);

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x7261A8", Offset = "0x7261A8", VA = "0x7261A8")]
		public void DoClustering(MB3_TextureBaker tb)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x726DD0", Offset = "0x726DD0", VA = "0x726DD0")]
		private Dictionary<int, List<Renderer>> GroupByLightmapIndex(List<Renderer> gaws)
		{
			return null;
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x726FC4", Offset = "0x726FC4", VA = "0x726FC4")]
		private void AddMeshBaker(MB3_TextureBaker tb, string key, List<Renderer> gaws)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x7255B0", Offset = "0x7255B0", VA = "0x7255B0")]
		protected MB3_MeshBakerGrouperCore()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E4")]
	public class MB3_MeshBakerGrouperNone : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x600139A")]
		[Address(RVA = "0x728278", Offset = "0x728278", VA = "0x728278")]
		public MB3_MeshBakerGrouperNone(GrouperData d)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x7282A4", Offset = "0x7282A4", VA = "0x7282A4", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x728474", Offset = "0x728474", VA = "0x728474", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E5")]
	public class MB3_MeshBakerGrouperGrid : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x600139D")]
		[Address(RVA = "0x7272F0", Offset = "0x7272F0", VA = "0x7272F0")]
		public MB3_MeshBakerGrouperGrid(GrouperData d)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x72731C", Offset = "0x72731C", VA = "0x72731C", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x727780", Offset = "0x727780", VA = "0x727780", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E6")]
	public class MB3_MeshBakerGrouperPie : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x728478", Offset = "0x728478", VA = "0x728478")]
		public MB3_MeshBakerGrouperPie(GrouperData data)
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x7284A4", Offset = "0x7284A4", VA = "0x7284A4", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x728B88", Offset = "0x728B88", VA = "0x728B88", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x728EFC", Offset = "0x728EFC", VA = "0x728EFC")]
		public static void DrawCircle(Vector3 axis, Vector3 center, float radius, int subdiv)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E7")]
	public class MB3_MeshBakerGrouperKMeans : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numClusters;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] clusterCenters;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] clusterSizes;

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x727D94", Offset = "0x727D94", VA = "0x727D94")]
		public MB3_MeshBakerGrouperKMeans(GrouperData data)
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x727E28", Offset = "0x727E28", VA = "0x727E28", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x7281BC", Offset = "0x7281BC", VA = "0x7281BC", Slot = "5")]
		public override void DrawGizmos(Bounds sceneObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E8")]
	public class MB3_MeshBakerGrouperCluster : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x2000560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5722B8", Offset = "0x5722B8")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> gos;

			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x725B4C", Offset = "0x725B4C", VA = "0x725B4C")]
			public <>c__DisplayClass7_0()
			{
			}
		}

		[Token(Token = "0x2000561")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5722C8", Offset = "0x5722C8")]
		private sealed class <>c__DisplayClass7_1
		{
			[Token(Token = "0x4001AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass7_0 CS$<>8__locals1;

			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x725B54", Offset = "0x725B54", VA = "0x725B54")]
			public <>c__DisplayClass7_1()
			{
			}

			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x7260F0", Offset = "0x7260F0", VA = "0x7260F0")]
			internal bool <BuildClusters>b__0(MB3_AgglomerativeClustering.item_s x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MB3_AgglomerativeClustering cluster;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _lastMaxDistBetweenClusters;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _ObjsExtents;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MB3_AgglomerativeClustering.ClusterNode> _clustersToDraw;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] _radii;

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x72552C", Offset = "0x72552C", VA = "0x72552C")]
		public MB3_MeshBakerGrouperCluster(GrouperData data, List<GameObject> gos)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x7255B8", Offset = "0x7255B8", VA = "0x7255B8", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x725824", Offset = "0x725824", VA = "0x725824")]
		public void BuildClusters(List<GameObject> gos, ProgressUpdateDelegate progFunc)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x725B5C", Offset = "0x725B5C", VA = "0x725B5C")]
		private void _BuildListOfClustersToDraw()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x725FCC", Offset = "0x725FCC", VA = "0x725FCC", Slot = "5")]
		public override void DrawGizmos(Bounds sceneObjectBounds)
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public interface TextureBlender
	{
		[Token(Token = "0x60013AC")]
		bool DoesShaderNameMatch(string shaderName);

		[Token(Token = "0x60013AD")]
		void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName);

		[Token(Token = "0x60013AE")]
		Color OnBlendTexturePixel(string shaderPropertyName, Color pixelColor);

		[Token(Token = "0x60013AF")]
		bool NonTexturePropertiesAreEqual(Material a, Material b);

		[Token(Token = "0x60013B0")]
		void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial);

		[Token(Token = "0x60013B1")]
		Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName);
	}
	[Token(Token = "0x20002EA")]
	public class TextureBlenderFallback : TextureBlender
	{
		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_doTintColor;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultColor;

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xBB53EC", Offset = "0xBB53EC", VA = "0xBB53EC", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xBB53F4", Offset = "0xBB53F4", VA = "0xBB53F4", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xBB54C0", Offset = "0xBB54C0", VA = "0xBB54C0", Slot = "6")]
		public Color OnBlendTexturePixel(string shaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xBB551C", Offset = "0xBB551C", VA = "0xBB551C", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xBB5694", Offset = "0xBB5694", VA = "0xBB5694", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xBB5728", Offset = "0xBB5728", VA = "0xBB5728", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xBB5588", Offset = "0xBB5588", VA = "0xBB5588")]
		public static bool _compareColor(Material a, Material b, Color defaultVal, string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xBB6028", Offset = "0xBB6028", VA = "0xBB6028")]
		public static bool _compareFloat(Material a, Material b, float defaultVal, string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xBB60C4", Offset = "0xBB60C4", VA = "0xBB60C4")]
		public TextureBlenderFallback()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class TextureBlenderLegacyBumpDiffuse : TextureBlender
	{
		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool doColor;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultTintColor;

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xBB60F8", Offset = "0xBB60F8", VA = "0xBB60F8", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xBB6180", Offset = "0xBB6180", VA = "0xBB6180", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xBB6228", Offset = "0xBB6228", VA = "0xBB6228", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xBB6284", Offset = "0xBB6284", VA = "0xBB6284", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xBB62F0", Offset = "0xBB62F0", VA = "0xBB62F0", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xBB6354", Offset = "0xBB6354", VA = "0xBB6354", Slot = "9")]
		public Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xBB6514", Offset = "0xBB6514", VA = "0xBB6514")]
		public TextureBlenderLegacyBumpDiffuse()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class TextureBlenderLegacyDiffuse : TextureBlender
	{
		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool doColor;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultTintColor;

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xBB6548", Offset = "0xBB6548", VA = "0xBB6548", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xBB65D0", Offset = "0xBB65D0", VA = "0xBB65D0", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xBB6678", Offset = "0xBB6678", VA = "0xBB6678", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xBB66D4", Offset = "0xBB66D4", VA = "0xBB66D4", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xBB6740", Offset = "0xBB6740", VA = "0xBB6740", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xBB67A4", Offset = "0xBB67A4", VA = "0xBB67A4", Slot = "9")]
		public Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xBB6924", Offset = "0xBB6924", VA = "0xBB6924")]
		public TextureBlenderLegacyDiffuse()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class TextureBlenderStandardMetallic : TextureBlender
	{
		[Token(Token = "0x2000562")]
		private enum Prop
		{
			[Token(Token = "0x4001AA9")]
			doColor,
			[Token(Token = "0x4001AAA")]
			doMetallic,
			[Token(Token = "0x4001AAB")]
			doEmission,
			[Token(Token = "0x4001AAC")]
			doNone
		}

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color m_tintColor;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color m_emission;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Prop propertyToDo;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color m_defaultColor;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_defaultMetallic;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_defaultGlossiness;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color m_defaultEmission;

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xBB6958", Offset = "0xBB6958", VA = "0xBB6958", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xBB69B4", Offset = "0xBB69B4", VA = "0xBB69B4", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xBB6B0C", Offset = "0xBB6B0C", VA = "0xBB6B0C", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xBB6B84", Offset = "0xBB6B84", VA = "0xBB6B84", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xBB6C68", Offset = "0xBB6C68", VA = "0xBB6C68", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xBB6D90", Offset = "0xBB6D90", VA = "0xBB6D90", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xBB72C0", Offset = "0xBB72C0", VA = "0xBB72C0")]
		public TextureBlenderStandardMetallic()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class TextureBlenderStandardSpecular : TextureBlender
	{
		[Token(Token = "0x2000563")]
		private enum Prop
		{
			[Token(Token = "0x4001AAE")]
			doColor,
			[Token(Token = "0x4001AAF")]
			doSpecular,
			[Token(Token = "0x4001AB0")]
			doEmission,
			[Token(Token = "0x4001AB1")]
			doNone
		}

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color m_tintColor;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color m_emission;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Prop propertyToDo;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color m_defaultColor;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color m_defaultSpecular;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_defaultGlossiness;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color m_defaultEmission;

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xBB7314", Offset = "0xBB7314", VA = "0xBB7314", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xBB7370", Offset = "0xBB7370", VA = "0xBB7370", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xBB74C8", Offset = "0xBB74C8", VA = "0xBB74C8", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xBB7540", Offset = "0xBB7540", VA = "0xBB7540", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xBB7628", Offset = "0xBB7628", VA = "0xBB7628", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xBB7754", Offset = "0xBB7754", VA = "0xBB7754", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xBB7D10", Offset = "0xBB7D10", VA = "0xBB7D10")]
		public TextureBlenderStandardSpecular()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public delegate void ProgressUpdateDelegate(string msg, float progress);
	[Token(Token = "0x20002F0")]
	public enum MB_ObjsToCombineTypes
	{
		[Token(Token = "0x400151F")]
		prefabOnly,
		[Token(Token = "0x4001520")]
		sceneObjOnly,
		[Token(Token = "0x4001521")]
		dontCare
	}
	[Token(Token = "0x20002F1")]
	public enum MB_OutputOptions
	{
		[Token(Token = "0x4001523")]
		bakeIntoPrefab,
		[Token(Token = "0x4001524")]
		bakeMeshsInPlace,
		[Token(Token = "0x4001525")]
		bakeTextureAtlasesOnly,
		[Token(Token = "0x4001526")]
		bakeIntoSceneObject
	}
	[Token(Token = "0x20002F2")]
	public enum MB_RenderType
	{
		[Token(Token = "0x4001528")]
		meshRenderer,
		[Token(Token = "0x4001529")]
		skinnedMeshRenderer
	}
	[Token(Token = "0x20002F3")]
	public enum MB2_OutputOptions
	{
		[Token(Token = "0x400152B")]
		bakeIntoSceneObject,
		[Token(Token = "0x400152C")]
		bakeMeshAssetsInPlace,
		[Token(Token = "0x400152D")]
		bakeIntoPrefab
	}
	[Token(Token = "0x20002F4")]
	public enum MB2_LightmapOptions
	{
		[Token(Token = "0x400152F")]
		preserve_current_lightmapping,
		[Token(Token = "0x4001530")]
		ignore_UV2,
		[Token(Token = "0x4001531")]
		copy_UV2_unchanged,
		[Token(Token = "0x4001532")]
		generate_new_UV2_layout,
		[Token(Token = "0x4001533")]
		copy_UV2_unchanged_to_separate_rects
	}
	[Token(Token = "0x20002F5")]
	public enum MB2_PackingAlgorithmEnum
	{
		[Token(Token = "0x4001535")]
		UnitysPackTextures,
		[Token(Token = "0x4001536")]
		MeshBakerTexturePacker,
		[Token(Token = "0x4001537")]
		MeshBakerTexturePacker_Fast
	}
	[Token(Token = "0x20002F6")]
	public enum MB2_ValidationLevel
	{
		[Token(Token = "0x4001539")]
		none,
		[Token(Token = "0x400153A")]
		quick,
		[Token(Token = "0x400153B")]
		robust
	}
	[Token(Token = "0x20002F7")]
	public interface MB2_EditorMethodsInterface
	{
		[Token(Token = "0x60013DB")]
		void Clear();

		[Token(Token = "0x60013DC")]
		void SetReadFlags(ProgressUpdateDelegate progressInfo);

		[Token(Token = "0x60013DD")]
		void SetReadWriteFlag(Texture2D tx, bool isReadable, bool addToList);

		[Token(Token = "0x60013DE")]
		void AddTextureFormat(Texture2D tx, bool isNormalMap);

		[Token(Token = "0x60013DF")]
		void SaveAtlasToAssetDatabase(Texture2D atlas, ShaderTextureProperty texPropertyName, int atlasNum, Material resMat);

		[Token(Token = "0x60013E0")]
		void SetMaterialTextureProperty(Material target, ShaderTextureProperty texPropName, string texturePath);

		[Token(Token = "0x60013E1")]
		void SetNormalMap(Texture2D tx);

		[Token(Token = "0x60013E2")]
		bool IsNormalMap(Texture2D tx);

		[Token(Token = "0x60013E3")]
		string GetPlatformString();

		[Token(Token = "0x60013E4")]
		void SetTextureSize(Texture2D tx, int size);

		[Token(Token = "0x60013E5")]
		bool IsCompressed(Texture2D tx);

		[Token(Token = "0x60013E6")]
		void CheckBuildSettings(long estimatedAtlasSize);

		[Token(Token = "0x60013E7")]
		bool CheckPrefabTypes(MB_ObjsToCombineTypes prefabType, List<GameObject> gos);

		[Token(Token = "0x60013E8")]
		bool ValidateSkinnedMeshes(List<GameObject> mom);

		[Token(Token = "0x60013E9")]
		void CommitChangesToAssets();

		[Token(Token = "0x60013EA")]
		void Destroy(UnityEngine.Object o);
	}
	[Token(Token = "0x20002F8")]
	public enum MB2_LogLevel
	{
		[Token(Token = "0x400153D")]
		none,
		[Token(Token = "0x400153E")]
		error,
		[Token(Token = "0x400153F")]
		warn,
		[Token(Token = "0x4001540")]
		info,
		[Token(Token = "0x4001541")]
		debug,
		[Token(Token = "0x4001542")]
		trace
	}
	[Token(Token = "0x20002F9")]
	public class MB2_Log
	{
		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x72034C", Offset = "0x72034C", VA = "0x72034C")]
		public static void Log(MB2_LogLevel l, string msg, MB2_LogLevel currentThreshold)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x72055C", Offset = "0x72055C", VA = "0x72055C")]
		public static string Error(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x720638", Offset = "0x720638", VA = "0x720638")]
		public static string Warn(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x720714", Offset = "0x720714", VA = "0x720714")]
		public static string Info(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x7207F0", Offset = "0x7207F0", VA = "0x7207F0")]
		public static string LogDebug(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x7208CC", Offset = "0x7208CC", VA = "0x7208CC")]
		public static string Trace(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x7209A8", Offset = "0x7209A8", VA = "0x7209A8")]
		public MB2_Log()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class ObjectLog
	{
		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int pos;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] logMessages;

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xBB4A94", Offset = "0xBB4A94", VA = "0xBB4A94")]
		private void _CacheLogMessage(string msg)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xBB4B3C", Offset = "0xBB4B3C", VA = "0xBB4B3C")]
		public ObjectLog(short bufferSize)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xBB4BAC", Offset = "0xBB4BAC", VA = "0xBB4BAC")]
		public void Log(MB2_LogLevel l, string msg, MB2_LogLevel currentThreshold)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xBB4BE8", Offset = "0xBB4BE8", VA = "0xBB4BE8")]
		public void Error(string msg, params object[] args)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xBB4C1C", Offset = "0xBB4C1C", VA = "0xBB4C1C")]
		public void Warn(string msg, params object[] args)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xBB4C50", Offset = "0xBB4C50", VA = "0xBB4C50")]
		public void Info(string msg, params object[] args)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xBB4C84", Offset = "0xBB4C84", VA = "0xBB4C84")]
		public void LogDebug(string msg, params object[] args)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xBB4CB8", Offset = "0xBB4CB8", VA = "0xBB4CB8")]
		public void Trace(string msg, params object[] args)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xBB4CEC", Offset = "0xBB4CEC", VA = "0xBB4CEC")]
		public string Dump()
		{
			return null;
		}
	}
	[Token(Token = "0x20002FB")]
	public interface MBVersionInterface
	{
		[Token(Token = "0x60013FB")]
		string version();

		[Token(Token = "0x60013FC")]
		int GetMajorVersion();

		[Token(Token = "0x60013FD")]
		int GetMinorVersion();

		[Token(Token = "0x60013FE")]
		bool GetActive(GameObject go);

		[Token(Token = "0x60013FF")]
		void SetActive(GameObject go, bool isActive);

		[Token(Token = "0x6001400")]
		void SetActiveRecursively(GameObject go, bool isActive);

		[Token(Token = "0x6001401")]
		UnityEngine.Object[] FindSceneObjectsOfType(Type t);

		[Token(Token = "0x6001402")]
		bool IsRunningAndMeshNotReadWriteable(Mesh m);

		[Token(Token = "0x6001403")]
		Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x6001404")]
		void MeshClear(Mesh m, bool t);

		[Token(Token = "0x6001405")]
		void MeshAssignUV3(Mesh m, Vector2[] uv3s);

		[Token(Token = "0x6001406")]
		void MeshAssignUV4(Mesh m, Vector2[] uv4s);

		[Token(Token = "0x6001407")]
		Vector4 GetLightmapTilingOffset(Renderer r);

		[Token(Token = "0x6001408")]
		Transform[] GetBones(Renderer r);
	}
	[Token(Token = "0x20002FC")]
	public class MBVersion
	{
		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MBVersionInterface _MBVersion;

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xBB15AC", Offset = "0xBB15AC", VA = "0xBB15AC")]
		private static MBVersionInterface _CreateMBVersionConcrete()
		{
			return null;
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xBB1654", Offset = "0xBB1654", VA = "0xBB1654")]
		public static string version()
		{
			return null;
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xBB1730", Offset = "0xBB1730", VA = "0xBB1730")]
		public static int GetMajorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xBB1810", Offset = "0xBB1810", VA = "0xBB1810")]
		public static int GetMinorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xBB18F0", Offset = "0xBB18F0", VA = "0xBB18F0")]
		public static bool GetActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xBB19E0", Offset = "0xBB19E0", VA = "0xBB19E0")]
		public static void SetActive(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xBB1AD8", Offset = "0xBB1AD8", VA = "0xBB1AD8")]
		public static void SetActiveRecursively(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xBB1BD0", Offset = "0xBB1BD0", VA = "0xBB1BD0")]
		public static UnityEngine.Object[] FindSceneObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xBB1CC0", Offset = "0xBB1CC0", VA = "0xBB1CC0")]
		public static bool IsRunningAndMeshNotReadWriteable(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xBB1DB0", Offset = "0xBB1DB0", VA = "0xBB1DB0")]
		public static Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xBB1EB8", Offset = "0xBB1EB8", VA = "0xBB1EB8")]
		public static void MeshClear(Mesh m, bool t)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xBB1FB0", Offset = "0xBB1FB0", VA = "0xBB1FB0")]
		public static void MeshAssignUV3(Mesh m, Vector2[] uv3s)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xBB20A8", Offset = "0xBB20A8", VA = "0xBB20A8")]
		public static void MeshAssignUV4(Mesh m, Vector2[] uv4s)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xBB21A0", Offset = "0xBB21A0", VA = "0xBB21A0")]
		public static Vector4 GetLightmapTilingOffset(Renderer r)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xBB2290", Offset = "0xBB2290", VA = "0xBB2290")]
		public static Transform[] GetBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xBB2380", Offset = "0xBB2380", VA = "0xBB2380")]
		public MBVersion()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class MB2_TexturePacker
	{
		[Token(Token = "0x2000564")]
		private class PixRect
		{
			[Token(Token = "0x4001AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int x;

			[Token(Token = "0x4001AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int y;

			[Token(Token = "0x4001AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int w;

			[Token(Token = "0x4001AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int h;

			[Token(Token = "0x6001D96")]
			[Address(RVA = "0x723EEC", Offset = "0x723EEC", VA = "0x723EEC")]
			public PixRect()
			{
			}

			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x721520", Offset = "0x721520", VA = "0x721520")]
			public PixRect(int xx, int yy, int ww, int hh)
			{
			}
		}

		[Token(Token = "0x2000565")]
		private class Image
		{
			[Token(Token = "0x4001AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int imgId;

			[Token(Token = "0x4001AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int w;

			[Token(Token = "0x4001AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int h;

			[Token(Token = "0x4001AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int x;

			[Token(Token = "0x4001ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int y;

			[Token(Token = "0x6001D98")]
			[Address(RVA = "0x723AD0", Offset = "0x723AD0", VA = "0x723AD0")]
			public Image(int id, int tw, int th, int padding, int minImageSizeX, int minImageSizeY)
			{
			}

			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x723D44", Offset = "0x723D44", VA = "0x723D44")]
			public Image(Image im)
			{
			}
		}

		[Token(Token = "0x2000566")]
		private class ImgIDComparer : IComparer<Image>
		{
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x723E58", Offset = "0x723E58", VA = "0x723E58", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x723BF0", Offset = "0x723BF0", VA = "0x723BF0")]
			public ImgIDComparer()
			{
			}
		}

		[Token(Token = "0x2000567")]
		private class ImageHeightComparer : IComparer<Image>
		{
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0x723DE0", Offset = "0x723DE0", VA = "0x723DE0", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0x723B98", Offset = "0x723B98", VA = "0x723B98")]
			public ImageHeightComparer()
			{
			}
		}

		[Token(Token = "0x2000568")]
		private class ImageWidthComparer : IComparer<Image>
		{
			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0x723E1C", Offset = "0x723E1C", VA = "0x723E1C", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0x723BA0", Offset = "0x723BA0", VA = "0x723BA0")]
			public ImageWidthComparer()
			{
			}
		}

		[Token(Token = "0x2000569")]
		private class ImageAreaComparer : IComparer<Image>
		{
			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0x723D9C", Offset = "0x723D9C", VA = "0x723D9C", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0x723BA8", Offset = "0x723BA8", VA = "0x723BA8")]
			public ImageAreaComparer()
			{
			}
		}

		[Token(Token = "0x200056A")]
		private class ProbeResult
		{
			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int w;

			[Token(Token = "0x4001ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int h;

			[Token(Token = "0x4001ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Node root;

			[Token(Token = "0x4001ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool fitsInMaxSize;

			[Token(Token = "0x4001ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float efficiency;

			[Token(Token = "0x4001AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float squareness;

			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0x721A58", Offset = "0x721A58", VA = "0x721A58")]
			public void Set(int ww, int hh, Node r, bool fits, float e, float sq)
			{
			}

			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0x723BB8", Offset = "0x723BB8", VA = "0x723BB8")]
			public float GetScore(bool doPowerOfTwoScore)
			{
				return default(float);
			}

			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0x723BB0", Offset = "0x723BB0", VA = "0x723BB0")]
			public ProbeResult()
			{
			}
		}

		[Token(Token = "0x200056B")]
		private class Node
		{
			[Token(Token = "0x4001AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node[] child;

			[Token(Token = "0x4001AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PixRect r;

			[Token(Token = "0x4001AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image img;

			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x723E94", Offset = "0x723E94", VA = "0x723E94")]
			private bool isLeaf()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x72156C", Offset = "0x72156C", VA = "0x72156C")]
			public Node Insert(Image im, bool handed)
			{
				return null;
			}

			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0x7214C0", Offset = "0x7214C0", VA = "0x7214C0")]
			public Node()
			{
			}
		}

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ProbeResult bestRoot;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool doPowerOfTwoTextures;

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x7209B0", Offset = "0x7209B0", VA = "0x7209B0")]
		private static void printTree(Node r, string spc)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x720A94", Offset = "0x720A94", VA = "0x720A94")]
		private static void flattenTree(Node r, List<Image> putHere)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x720B88", Offset = "0x720B88", VA = "0x720B88")]
		private static void drawGizmosNode(Node r)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x720D7C", Offset = "0x720D7C", VA = "0x720D7C")]
		private static Texture2D createFilledTex(Color c, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x720E84", Offset = "0x720E84", VA = "0x720E84")]
		public void DrawGizmos()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x720E98", Offset = "0x720E98", VA = "0x720E98")]
		private bool Probe(Image[] imgsToAdd, int idealAtlasW, int idealAtlasH, float imgArea, int maxAtlasDim, ProbeResult pr)
		{
			return default(bool);
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x7218EC", Offset = "0x7218EC", VA = "0x7218EC")]
		private void GetExtent(Node r, ref int x, ref int y)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x721A70", Offset = "0x721A70", VA = "0x721A70")]
		private int StepWidthHeight(int oldVal, int step, int maxDim)
		{
			return default(int);
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x721AA0", Offset = "0x721AA0", VA = "0x721AA0")]
		public int RoundToNearestPositivePowerOfTwo(int x)
		{
			return default(int);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x7219CC", Offset = "0x7219CC", VA = "0x7219CC")]
		public int CeilToNearestPowerOfTwo(int x)
		{
			return default(int);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x721B34", Offset = "0x721B34", VA = "0x721B34")]
		public Rect[] GetRects(List<Vector2> imgWidthHeights, int maxDimension, int padding, out int outW, out int outH)
		{
			return null;
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x721B6C", Offset = "0x721B6C", VA = "0x721B6C")]
		private Rect[] _GetRects(List<Vector2> imgWidthHeights, int maxDimension, int padding, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, out int outW, out int outH, int recursionDepth)
		{
			return null;
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x723BF8", Offset = "0x723BF8", VA = "0x723BF8")]
		public void RunTestHarness()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x723D2C", Offset = "0x723D2C", VA = "0x723D2C")]
		public MB2_TexturePacker()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002FE")]
	public class MB3_AgglomerativeClustering
	{
		[Serializable]
		[Token(Token = "0x200056C")]
		public class ClusterNode
		{
			[Token(Token = "0x4001AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public item_s leaf;

			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ClusterNode cha;

			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClusterNode chb;

			[Token(Token = "0x4001AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int height;

			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float distToMergedCentroid;

			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 centroid;

			[Token(Token = "0x4001ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int[] leafs;

			[Token(Token = "0x4001ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int idx;

			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0x72470C", Offset = "0x72470C", VA = "0x72470C")]
			public ClusterNode(item_s ii, int index)
			{
			}

			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0x7247C0", Offset = "0x7247C0", VA = "0x7247C0")]
			public ClusterNode(ClusterNode a, ClusterNode b, int index, int h, float dist, ClusterNode[] clusters)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056D")]
		public class item_s
		{
			[Token(Token = "0x4001ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4001ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 coord;

			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0x724B6C", Offset = "0x724B6C", VA = "0x724B6C")]
			public item_s()
			{
			}
		}

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<item_s> items;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClusterNode[] clusters;

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x723EF4", Offset = "0x723EF4", VA = "0x723EF4")]
		private float euclidean_distance(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x723F9C", Offset = "0x723F9C", VA = "0x723F9C")]
		public void agglomerate(ProgressUpdateDelegate progFunc)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x7249FC", Offset = "0x7249FC", VA = "0x7249FC")]
		public int TestRun(List<GameObject> gos)
		{
			return default(int);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x724B74", Offset = "0x724B74", VA = "0x724B74")]
		public MB3_AgglomerativeClustering()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class MB3_CopyBoneWeights
	{
		[Token(Token = "0x600142B")]
		[Address(RVA = "0x724BE4", Offset = "0x724BE4", VA = "0x724BE4")]
		public static void CopyBoneWeightsFromSeamMeshToOtherMeshes(float radius, Mesh seamMesh, Mesh[] targetMeshes)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x725524", Offset = "0x725524", VA = "0x725524")]
		public MB3_CopyBoneWeights()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000300")]
	public abstract class MB3_MeshCombiner
	{
		[Token(Token = "0x200056E")]
		public delegate void GenerateUV2Delegate(Mesh m, float hardAngle, float packMargin);

		[Token(Token = "0x200056F")]
		public class MBBlendShapeKey
		{
			[Token(Token = "0x4001ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int gameObjecID;

			[Token(Token = "0x4001ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int blendShapeIndexInSrc;

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x729E60", Offset = "0x729E60", VA = "0x729E60")]
			public MBBlendShapeKey(int srcSkinnedMeshRenderGameObjectID, int blendShapeIndexInSource)
			{
			}

			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0x729E98", Offset = "0x729E98", VA = "0x729E98", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0x729F44", Offset = "0x729F44", VA = "0x729F44", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000570")]
		public class MBBlendShapeValue
		{
			[Token(Token = "0x4001AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject combinedMeshGameObject;

			[Token(Token = "0x4001AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int blendShapeIndex;

			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0x729F60", Offset = "0x729F60", VA = "0x729F60")]
			public MBBlendShapeValue()
			{
			}
		}

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected MB2_LogLevel _LOG_LEVEL;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected MB2_ValidationLevel _validationLevel;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string _name;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected MB2_TextureBakeResults _textureBakeResults;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GameObject _resultSceneObject;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Renderer _targetRenderer;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected MB_RenderType _renderType;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected MB2_OutputOptions _outputOption;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected MB2_LightmapOptions _lightmapOption;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected bool _doNorm;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		protected bool _doTan;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[SerializeField]
		protected bool _doCol;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[SerializeField]
		protected bool _doUV;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected bool _doUV3;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		protected bool _doUV4;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		protected bool _doBlendShapes;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[SerializeField]
		protected bool _recenterVertsToBoundsCenter;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public bool _optimizeAfterBake;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public float uv2UnwrappingParamsHardAngle;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public float uv2UnwrappingParamsPackMargin;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool _usingTemporaryTextureBakeResult;

		[Token(Token = "0x17000162")]
		public static bool EVAL_VERSION
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0x729140", Offset = "0x729140", VA = "0x729140")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000163")]
		public virtual MB2_LogLevel LOG_LEVEL
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0x729148", Offset = "0x729148", VA = "0x729148", Slot = "4")]
			get
			{
				return default(MB2_LogLevel);
			}
			[Token(Token = "0x600142F")]
			[Address(RVA = "0x729150", Offset = "0x729150", VA = "0x729150", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public virtual MB2_ValidationLevel validationLevel
		{
			[Token(Token = "0x6001430")]
			[Address(RVA = "0x729158", Offset = "0x729158", VA = "0x729158", Slot = "6")]
			get
			{
				return default(MB2_ValidationLevel);
			}
			[Token(Token = "0x6001431")]
			[Address(RVA = "0x729160", Offset = "0x729160", VA = "0x729160", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public string name
		{
			[Token(Token = "0x6001432")]
			[Address(RVA = "0x729168", Offset = "0x729168", VA = "0x729168")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001433")]
			[Address(RVA = "0x729170", Offset = "0x729170", VA = "0x729170")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public virtual MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x6001434")]
			[Address(RVA = "0x729178", Offset = "0x729178", VA = "0x729178", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001435")]
			[Address(RVA = "0x729180", Offset = "0x729180", VA = "0x729180", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public virtual GameObject resultSceneObject
		{
			[Token(Token = "0x6001436")]
			[Address(RVA = "0x729188", Offset = "0x729188", VA = "0x729188", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001437")]
			[Address(RVA = "0x729190", Offset = "0x729190", VA = "0x729190", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public virtual Renderer targetRenderer
		{
			[Token(Token = "0x6001438")]
			[Address(RVA = "0x729198", Offset = "0x729198", VA = "0x729198", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001439")]
			[Address(RVA = "0x7291A0", Offset = "0x7291A0", VA = "0x7291A0", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public virtual MB_RenderType renderType
		{
			[Token(Token = "0x600143A")]
			[Address(RVA = "0x72928C", Offset = "0x72928C", VA = "0x72928C", Slot = "14")]
			get
			{
				return default(MB_RenderType);
			}
			[Token(Token = "0x600143B")]
			[Address(RVA = "0x729294", Offset = "0x729294", VA = "0x729294", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public virtual MB2_OutputOptions outputOption
		{
			[Token(Token = "0x600143C")]
			[Address(RVA = "0x72929C", Offset = "0x72929C", VA = "0x72929C", Slot = "16")]
			get
			{
				return default(MB2_OutputOptions);
			}
			[Token(Token = "0x600143D")]
			[Address(RVA = "0x7292A4", Offset = "0x7292A4", VA = "0x7292A4", Slot = "17")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public virtual MB2_LightmapOptions lightmapOption
		{
			[Token(Token = "0x600143E")]
			[Address(RVA = "0x7292AC", Offset = "0x7292AC", VA = "0x7292AC", Slot = "18")]
			get
			{
				return default(MB2_LightmapOptions);
			}
			[Token(Token = "0x600143F")]
			[Address(RVA = "0x7292B4", Offset = "0x7292B4", VA = "0x7292B4", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public virtual bool doNorm
		{
			[Token(Token = "0x6001440")]
			[Address(RVA = "0x7292BC", Offset = "0x7292BC", VA = "0x7292BC", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001441")]
			[Address(RVA = "0x7292C4", Offset = "0x7292C4", VA = "0x7292C4", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public virtual bool doTan
		{
			[Token(Token = "0x6001442")]
			[Address(RVA = "0x7292D0", Offset = "0x7292D0", VA = "0x7292D0", Slot = "22")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001443")]
			[Address(RVA = "0x7292D8", Offset = "0x7292D8", VA = "0x7292D8", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public virtual bool doCol
		{
			[Token(Token = "0x6001444")]
			[Address(RVA = "0x7292E4", Offset = "0x7292E4", VA = "0x7292E4", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001445")]
			[Address(RVA = "0x7292EC", Offset = "0x7292EC", VA = "0x7292EC", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public virtual bool doUV
		{
			[Token(Token = "0x6001446")]
			[Address(RVA = "0x7292F8", Offset = "0x7292F8", VA = "0x7292F8", Slot = "26")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001447")]
			[Address(RVA = "0x729300", Offset = "0x729300", VA = "0x729300", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public virtual bool doUV1
		{
			[Token(Token = "0x6001448")]
			[Address(RVA = "0x72930C", Offset = "0x72930C", VA = "0x72930C", Slot = "28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001449")]
			[Address(RVA = "0x729314", Offset = "0x729314", VA = "0x729314", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public virtual bool doUV3
		{
			[Token(Token = "0x600144B")]
			[Address(RVA = "0x72933C", Offset = "0x72933C", VA = "0x72933C", Slot = "31")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600144C")]
			[Address(RVA = "0x729344", Offset = "0x729344", VA = "0x729344", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public virtual bool doUV4
		{
			[Token(Token = "0x600144D")]
			[Address(RVA = "0x729350", Offset = "0x729350", VA = "0x729350", Slot = "33")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600144E")]
			[Address(RVA = "0x729358", Offset = "0x729358", VA = "0x729358", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public virtual bool doBlendShapes
		{
			[Token(Token = "0x600144F")]
			[Address(RVA = "0x729364", Offset = "0x729364", VA = "0x729364", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001450")]
			[Address(RVA = "0x72936C", Offset = "0x72936C", VA = "0x72936C", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public virtual bool recenterVertsToBoundsCenter
		{
			[Token(Token = "0x6001451")]
			[Address(RVA = "0x729378", Offset = "0x729378", VA = "0x729378", Slot = "37")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001452")]
			[Address(RVA = "0x729380", Offset = "0x729380", VA = "0x729380", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public bool optimizeAfterBake
		{
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x72938C", Offset = "0x72938C", VA = "0x72938C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x729394", Offset = "0x729394", VA = "0x729394")]
			set
			{
			}
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x729318", Offset = "0x729318", VA = "0x729318", Slot = "30")]
		public virtual bool doUV2()
		{
			return default(bool);
		}

		[Token(Token = "0x6001455")]
		public abstract int GetLightmapIndex();

		[Token(Token = "0x6001456")]
		public abstract void ClearBuffers();

		[Token(Token = "0x6001457")]
		public abstract void ClearMesh();

		[Token(Token = "0x6001458")]
		public abstract void DestroyMesh();

		[Token(Token = "0x6001459")]
		public abstract void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods);

		[Token(Token = "0x600145A")]
		public abstract List<GameObject> GetObjectsInCombined();

		[Token(Token = "0x600145B")]
		public abstract int GetNumObjectsInCombined();

		[Token(Token = "0x600145C")]
		public abstract int GetNumVerticesFor(GameObject go);

		[Token(Token = "0x600145D")]
		public abstract int GetNumVerticesFor(int instanceID);

		[Token(Token = "0x600145E")]
		public abstract Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap();

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x7293A0", Offset = "0x7293A0", VA = "0x7293A0", Slot = "49")]
		public virtual void Apply()
		{
		}

		[Token(Token = "0x6001460")]
		public abstract void Apply(GenerateUV2Delegate uv2GenerationMethod);

		[Token(Token = "0x6001461")]
		public abstract void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapeFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod);

		[Token(Token = "0x6001462")]
		public abstract void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false);

		[Token(Token = "0x6001463")]
		public abstract bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true);

		[Token(Token = "0x6001464")]
		public abstract bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource);

		[Token(Token = "0x6001465")]
		public abstract bool CombinedMeshContains(GameObject go);

		[Token(Token = "0x6001466")]
		public abstract void UpdateSkinnedMeshApproximateBounds();

		[Token(Token = "0x6001467")]
		public abstract void UpdateSkinnedMeshApproximateBoundsFromBones();

		[Token(Token = "0x6001468")]
		public abstract void CheckIntegrity();

		[Token(Token = "0x6001469")]
		public abstract void UpdateSkinnedMeshApproximateBoundsFromBounds();

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x7293B4", Offset = "0x7293B4", VA = "0x7293B4")]
		public static void UpdateSkinnedMeshApproximateBoundsFromBonesStatic(Transform[] bs, SkinnedMeshRenderer smr)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x7296EC", Offset = "0x7296EC", VA = "0x7296EC")]
		public static void UpdateSkinnedMeshApproximateBoundsFromBoundsStatic(List<GameObject> objectsInCombined, SkinnedMeshRenderer smr)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x72986C", Offset = "0x72986C", VA = "0x72986C", Slot = "60")]
		protected virtual bool _CreateTemporaryTextrueBakeResult(GameObject[] gos, List<Material> matsOnTargetRenderer)
		{
			return default(bool);
		}

		[Token(Token = "0x600146D")]
		public abstract List<Material> GetMaterialsOnTargetRenderer();

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x729934", Offset = "0x729934", VA = "0x729934")]
		protected MB3_MeshCombiner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000301")]
	public class MB3_MeshCombinerSingle : MB3_MeshCombiner
	{
		[Serializable]
		[Token(Token = "0x2000571")]
		public class MB_DynamicGameObject : IComparable<MB_DynamicGameObject>
		{
			[Token(Token = "0x4001AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int instanceID;

			[Token(Token = "0x4001AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4001AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int vertIdx;

			[Token(Token = "0x4001AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int blendShapeIdx;

			[Token(Token = "0x4001AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int numVerts;

			[Token(Token = "0x4001AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int numBlendShapes;

			[Token(Token = "0x4001AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] indexesOfBonesUsed;

			[Token(Token = "0x4001AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int lightmapIndex;

			[Token(Token = "0x4001ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector4 lightmapTilingOffset;

			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 meshSize;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool show;

			[Token(Token = "0x4001ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool invertTriangles;

			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int[] submeshTriIdxs;

			[Token(Token = "0x4001ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int[] submeshNumTris;

			[Token(Token = "0x4001AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int[] targetSubmeshIdxs;

			[Token(Token = "0x4001AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Rect[] uvRects;

			[Token(Token = "0x4001AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Rect[] encapsulatingRect;

			[Token(Token = "0x4001AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Rect[] sourceMaterialTiling;

			[Token(Token = "0x4001AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Rect[] obUVRects;

			[Token(Token = "0x4001AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public int[][] _submeshTris;

			[Token(Token = "0x4001AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public bool _beingDeleted;

			[Token(Token = "0x4001AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public int _triangleIdxAdjustment;

			[Token(Token = "0x4001AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Transform[] _tmpCachedBones;

			[Token(Token = "0x4001AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Matrix4x4[] _tmpCachedBindposes;

			[Token(Token = "0x4001AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public BoneWeight[] _tmpCachedBoneWeights;

			[Token(Token = "0x4001AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public int[] _tmpIndexesOfSourceBonesUsed;

			[Token(Token = "0x6001DB3")]
			[Address(RVA = "0xC45F94", Offset = "0xC45F94", VA = "0xC45F94", Slot = "4")]
			public int CompareTo(MB_DynamicGameObject b)
			{
				return default(int);
			}

			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0xC45FB4", Offset = "0xC45FB4", VA = "0xC45FB4")]
			public MB_DynamicGameObject()
			{
			}
		}

		[Token(Token = "0x2000572")]
		public class MeshChannels
		{
			[Token(Token = "0x4001AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x4001AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x4001AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4001AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2[] uv0raw;

			[Token(Token = "0x4001AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv0modified;

			[Token(Token = "0x4001AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector2[] uv2;

			[Token(Token = "0x4001AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2[] uv3;

			[Token(Token = "0x4001AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector2[] uv4;

			[Token(Token = "0x4001AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Color[] colors;

			[Token(Token = "0x4001AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public BoneWeight[] boneWeights;

			[Token(Token = "0x4001AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Matrix4x4[] bindPoses;

			[Token(Token = "0x4001AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int[] triangles;

			[Token(Token = "0x4001AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public MBBlendShape[] blendShapes;

			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0xC46088", Offset = "0xC46088", VA = "0xC46088")]
			public MeshChannels()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000573")]
		public class MBBlendShapeFrame
		{
			[Token(Token = "0x4001AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float frameWeight;

			[Token(Token = "0x4001AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] vertices;

			[Token(Token = "0x4001AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3[] normals;

			[Token(Token = "0x4001AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3[] tangents;

			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0xC45F8C", Offset = "0xC45F8C", VA = "0xC45F8C")]
			public MBBlendShapeFrame()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000574")]
		public class MBBlendShape
		{
			[Token(Token = "0x4001AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int gameObjectID;

			[Token(Token = "0x4001AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4001AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int indexInSource;

			[Token(Token = "0x4001B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MBBlendShapeFrame[] frames;

			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0xC45F84", Offset = "0xC45F84", VA = "0xC45F84")]
			public MBBlendShape()
			{
			}
		}

		[Token(Token = "0x2000575")]
		public class MeshChannelsCache
		{
			[Token(Token = "0x4001B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB3_MeshCombinerSingle mc;

			[Token(Token = "0x4001B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected Dictionary<int, MeshChannels> meshID2MeshChannels;

			[Token(Token = "0x4001B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector2 _HALF_UV;

			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0xC46090", Offset = "0xC46090", VA = "0xC46090")]
			internal MeshChannelsCache(MB3_MeshCombinerSingle mcs)
			{
			}

			[Token(Token = "0x6001DB9")]
			[Address(RVA = "0xC46134", Offset = "0xC46134", VA = "0xC46134")]
			internal Vector3[] GetVertices(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0xC4623C", Offset = "0xC4623C", VA = "0xC4623C")]
			internal Vector3[] GetNormals(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0xC4656C", Offset = "0xC4656C", VA = "0xC4656C")]
			internal Vector4[] GetTangents(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0xC468F0", Offset = "0xC468F0", VA = "0xC468F0")]
			internal Vector2[] GetUv0Raw(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0xC46C28", Offset = "0xC46C28", VA = "0xC46C28")]
			internal Vector2[] GetUv0Modified(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0xC46D18", Offset = "0xC46D18", VA = "0xC46D18")]
			internal Vector2[] GetUv2(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0xC47050", Offset = "0xC47050", VA = "0xC47050")]
			internal Vector2[] GetUv3(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0xC47174", Offset = "0xC47174", VA = "0xC47174")]
			internal Vector2[] GetUv4(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0xC47298", Offset = "0xC47298", VA = "0xC47298")]
			internal Color[] GetColors(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0xC475E4", Offset = "0xC475E4", VA = "0xC475E4")]
			internal Matrix4x4[] GetBindposes(Renderer r)
			{
				return null;
			}

			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0xC478BC", Offset = "0xC478BC", VA = "0xC478BC")]
			internal BoneWeight[] GetBoneWeights(Renderer r, int numVertsInMeshBeingAdded)
			{
				return null;
			}

			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0xC47BF0", Offset = "0xC47BF0", VA = "0xC47BF0")]
			internal int[] GetTriangles(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0xC47CF8", Offset = "0xC47CF8", VA = "0xC47CF8")]
			internal MBBlendShape[] GetBlendShapes(Mesh m, int gameObjectID)
			{
				return null;
			}

			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0xC473A0", Offset = "0xC473A0", VA = "0xC473A0")]
			private Color[] _getMeshColors(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0xC46344", Offset = "0xC46344", VA = "0xC46344")]
			private Vector3[] _getMeshNormals(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0xC46674", Offset = "0xC46674", VA = "0xC46674")]
			private Vector4[] _getMeshTangents(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0xC469F8", Offset = "0xC469F8", VA = "0xC469F8")]
			private Vector2[] _getMeshUVs(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0xC46E20", Offset = "0xC46E20", VA = "0xC46E20")]
			private Vector2[] _getMeshUV2s(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0xC47708", Offset = "0xC47708", VA = "0xC47708")]
			public static Matrix4x4[] _getBindPoses(Renderer r)
			{
				return null;
			}

			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0xC479E8", Offset = "0xC479E8", VA = "0xC479E8")]
			public static BoneWeight[] _getBoneWeights(Renderer r, int numVertsInMeshBeingAdded)
			{
				return null;
			}

			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0xC47D44", Offset = "0xC47D44", VA = "0xC47D44")]
			private void _generateTangents(int[] triangles, Vector3[] verts, Vector2[] uvs, Vector3[] normals, Vector4[] outTangents)
			{
			}
		}

		[Token(Token = "0x2000576")]
		public struct BoneAndBindpose
		{
			[Token(Token = "0x4001B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform bone;

			[Token(Token = "0x4001B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Matrix4x4 bindPose;

			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0x5FD95C", Offset = "0x5FD95C", VA = "0x5FD95C")]
			public BoneAndBindpose(Transform t, Matrix4x4 bp)
			{
			}

			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0x5FD990", Offset = "0x5FD990", VA = "0x5FD990", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0x5FD998", Offset = "0x5FD998", VA = "0x5FD998", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5722D8", Offset = "0x5722D8")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4001B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject[] _goToAdd;

			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0xC45D0C", Offset = "0xC45D0C", VA = "0xC45D0C")]
			public <>c__DisplayClass53_0()
			{
			}
		}

		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5722E8", Offset = "0x5722E8")]
		private sealed class <>c__DisplayClass53_1
		{
			[Token(Token = "0x4001B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass53_0 CS$<>8__locals1;

			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0xC45D14", Offset = "0xC45D14", VA = "0xC45D14")]
			public <>c__DisplayClass53_1()
			{
			}

			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0xC45D1C", Offset = "0xC45D1C", VA = "0xC45D1C")]
			internal bool <_addToCombined>b__0(int o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected List<GameObject> objectsInCombinedMesh;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int lightmapIndex;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<MB_DynamicGameObject> mbDynamicObjectsInCombinedMesh;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<int, MB_DynamicGameObject> _instance2combined_map;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Vector3[] verts;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector3[] normals;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Vector4[] tangents;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Vector2[] uvs;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Vector2[] uv2s;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Vector2[] uv3s;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Vector2[] uv4s;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color[] colors;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Matrix4x4[] bindPoses;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Transform[] bones;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		internal MBBlendShape[] blendShapes;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[][] submeshTris;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private BoneWeight[] boneWeights;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GameObject[] empty;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int[] emptyIDs;

		[Token(Token = "0x17000176")]
		public override MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x600146F")]
			[Address(RVA = "0x729F68", Offset = "0x729F68", VA = "0x729F68", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public override MB_RenderType renderType
		{
			[Token(Token = "0x6001470")]
			[Address(RVA = "0x72A084", Offset = "0x72A084", VA = "0x72A084", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public override GameObject resultSceneObject
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0x72A13C", Offset = "0x72A13C", VA = "0x72A13C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x72A238", Offset = "0x72A238", VA = "0x72A238")]
		private MB_DynamicGameObject instance2Combined_MapGet(int gameObjectID)
		{
			return null;
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x72A2A0", Offset = "0x72A2A0", VA = "0x72A2A0")]
		private void instance2Combined_MapAdd(int gameObjectID, MB_DynamicGameObject dgo)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x72A310", Offset = "0x72A310", VA = "0x72A310")]
		private void instance2Combined_MapRemove(int gameObjectID)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x72A378", Offset = "0x72A378", VA = "0x72A378")]
		private bool instance2Combined_MapTryGetValue(int gameObjectID, out MB_DynamicGameObject dgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x72A3E8", Offset = "0x72A3E8", VA = "0x72A3E8")]
		private int instance2Combined_MapCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x72A440", Offset = "0x72A440", VA = "0x72A440")]
		private void instance2Combined_MapClear()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x72A498", Offset = "0x72A498", VA = "0x72A498")]
		private bool instance2Combined_MapContainsKey(int gameObjectID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x72A500", Offset = "0x72A500", VA = "0x72A500", Slot = "45")]
		public override int GetNumObjectsInCombined()
		{
			return default(int);
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x72A550", Offset = "0x72A550", VA = "0x72A550", Slot = "44")]
		public override List<GameObject> GetObjectsInCombined()
		{
			return null;
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x72A5D8", Offset = "0x72A5D8", VA = "0x72A5D8")]
		public Mesh GetMesh()
		{
			return null;
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x72A67C", Offset = "0x72A67C", VA = "0x72A67C")]
		public Transform[] GetBones()
		{
			return null;
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x72A684", Offset = "0x72A684", VA = "0x72A684", Slot = "39")]
		public override int GetLightmapIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x72A6DC", Offset = "0x72A6DC", VA = "0x72A6DC", Slot = "46")]
		public override int GetNumVerticesFor(GameObject go)
		{
			return default(int);
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x72A720", Offset = "0x72A720", VA = "0x72A720", Slot = "47")]
		public override int GetNumVerticesFor(int instanceID)
		{
			return default(int);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x72A760", Offset = "0x72A760", VA = "0x72A760", Slot = "48")]
		public override Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
		{
			return null;
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x72A8BC", Offset = "0x72A8BC", VA = "0x72A8BC")]
		private void _initialize(int numResultMats)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x72AF88", Offset = "0x72AF88", VA = "0x72AF88")]
		private bool _collectMaterialTriangles(Mesh m, MB_DynamicGameObject dgo, Material[] sharedMaterials, OrderedDictionary sourceMats2submeshIdx_map)
		{
			return default(bool);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x72B5CC", Offset = "0x72B5CC", VA = "0x72B5CC")]
		private bool _collectOutOfBoundsUVRects2(Mesh m, MB_DynamicGameObject dgo, Material[] sharedMaterials, OrderedDictionary sourceMats2submeshIdx_map, Dictionary<int, MB_Utility.MeshAnalysisResult[]> meshAnalysisResults, MeshChannelsCache meshChannelCache)
		{
			return default(bool);
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x72B8A0", Offset = "0x72B8A0", VA = "0x72B8A0")]
		private bool _validateTextureBakeResults()
		{
			return default(bool);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x72BB0C", Offset = "0x72BB0C", VA = "0x72BB0C")]
		private bool _validateMeshFlags()
		{
			return default(bool);
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x72BD0C", Offset = "0x72BD0C", VA = "0x72BD0C")]
		private bool _showHide(GameObject[] goToShow, GameObject[] goToHide)
		{
			return default(bool);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x72C014", Offset = "0x72C014", VA = "0x72C014")]
		private bool _addToCombined(GameObject[] goToAdd, int[] goToDelete, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x730F78", Offset = "0x730F78", VA = "0x730F78")]
		private void _copyAndAdjustUVsFromMesh(MB_DynamicGameObject dgo, Mesh mesh, int vertsIdx, MeshChannelsCache meshChannelsCache)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x7315CC", Offset = "0x7315CC", VA = "0x7315CC")]
		private void _copyAndAdjustUV2FromMesh(MB_DynamicGameObject dgo, Mesh mesh, int vertsIdx, MeshChannelsCache meshChannelsCache)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x7321A0", Offset = "0x7321A0", VA = "0x7321A0", Slot = "56")]
		public override void UpdateSkinnedMeshApproximateBounds()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x7321B0", Offset = "0x7321B0", VA = "0x7321B0", Slot = "57")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBones()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x732474", Offset = "0x732474", VA = "0x732474", Slot = "59")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBounds()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x732738", Offset = "0x732738", VA = "0x732738")]
		private int _getNumBones(Renderer r)
		{
			return default(int);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x732860", Offset = "0x732860", VA = "0x732860")]
		private Transform[] _getBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x73286C", Offset = "0x73286C", VA = "0x73286C", Slot = "50")]
		public override void Apply(GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x732974", Offset = "0x732974", VA = "0x732974", Slot = "62")]
		public virtual void ApplyShowHide()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x732F18", Offset = "0x732F18", VA = "0x732F18", Slot = "51")]
		public override void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x732B94", Offset = "0x732B94", VA = "0x732B94")]
		public int[][] GetSubmeshTrisWithShowHideApplied()
		{
			return null;
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x733EFC", Offset = "0x733EFC", VA = "0x733EFC", Slot = "52")]
		public override void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x733F48", Offset = "0x733F48", VA = "0x733F48")]
		private void _updateGameObjects(GameObject[] gos, bool recalcBounds, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo)
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x734220", Offset = "0x734220", VA = "0x734220")]
		private void _updateGameObject(GameObject go, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x734B94", Offset = "0x734B94", VA = "0x734B94")]
		public bool ShowHideGameObjects(GameObject[] toShow, GameObject[] toHide)
		{
			return default(bool);
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x734B98", Offset = "0x734B98", VA = "0x734B98", Slot = "53")]
		public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x734D90", Offset = "0x734D90", VA = "0x734D90", Slot = "54")]
		public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x7353B8", Offset = "0x7353B8", VA = "0x7353B8", Slot = "55")]
		public override bool CombinedMeshContains(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x735420", Offset = "0x735420", VA = "0x735420", Slot = "40")]
		public override void ClearBuffers()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x7356F4", Offset = "0x7356F4", VA = "0x7356F4", Slot = "41")]
		public override void ClearMesh()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x7357B0", Offset = "0x7357B0", VA = "0x7357B0", Slot = "42")]
		public override void DestroyMesh()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x735920", Offset = "0x735920", VA = "0x735920", Slot = "43")]
		public override void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x72FF60", Offset = "0x72FF60", VA = "0x72FF60")]
		public bool ValidateTargRendererAndMeshAndResultSceneObj()
		{
			return default(bool);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x735B04", Offset = "0x735B04", VA = "0x735B04")]
		public static Renderer BuildSceneHierarch(MB3_MeshCombinerSingle mom, GameObject root, Mesh m, bool createNewChild = false, [Optional] GameObject[] objsToBeAdded)
		{
			return null;
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x7352B8", Offset = "0x7352B8", VA = "0x7352B8")]
		public void BuildSceneMeshObject([Optional] GameObject[] gos, bool createNewChild = false)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x730934", Offset = "0x730934", VA = "0x730934")]
		private bool IsMirrored(Matrix4x4 tm)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x73680C", Offset = "0x73680C", VA = "0x73680C", Slot = "58")]
		public override void CheckIntegrity()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x736D34", Offset = "0x736D34", VA = "0x736D34")]
		private void _ZeroArray(Vector3[] arr, int idx, int length)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x730300", Offset = "0x730300", VA = "0x730300")]
		private List<MB_DynamicGameObject>[] _buildBoneIdx2dgoMap()
		{
			return null;
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x7304AC", Offset = "0x7304AC", VA = "0x7304AC")]
		private void _CollectBonesToAddForDGO(MB_DynamicGameObject dgo, Dictionary<Transform, int> bone2idx, HashSet<int> boneIdxsToDelete, HashSet<BoneAndBindpose> bonesToAdd, Renderer r, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x730AD8", Offset = "0x730AD8", VA = "0x730AD8")]
		private void _CopyBonesWeAreKeepingToNewBonesArrayAndAdjustBWIndexes(HashSet<int> boneIdxsToDeleteHS, HashSet<BoneAndBindpose> bonesToAdd, Transform[] nbones, Matrix4x4[] nbindPoses, BoneWeight[] nboneWeights, int totalDeleteVerts)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x731850", Offset = "0x731850", VA = "0x731850")]
		private void _AddBonesToNewBonesArrayAndAdjustBWIndexes(MB_DynamicGameObject dgo, Renderer r, int vertsIdx, Transform[] nbones, BoneWeight[] nboneWeights, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x731D64", Offset = "0x731D64", VA = "0x731D64")]
		private void _copyUV2unchangedToSeparateRects()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x736E04", Offset = "0x736E04", VA = "0x736E04", Slot = "61")]
		public override List<Material> GetMaterialsOnTargetRenderer()
		{
			return null;
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x736EDC", Offset = "0x736EDC", VA = "0x736EDC")]
		public MB3_MeshCombinerSingle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000302")]
	public class MB3_MultiMeshCombiner : MB3_MeshCombiner
	{
		[Serializable]
		[Token(Token = "0x2000579")]
		public class CombinedMesh
		{
			[Token(Token = "0x4001B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB3_MeshCombinerSingle combinedMesh;

			[Token(Token = "0x4001B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int extraSpace;

			[Token(Token = "0x4001B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int numVertsInListToDelete;

			[Token(Token = "0x4001B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numVertsInListToAdd;

			[Token(Token = "0x4001B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<GameObject> gosToAdd;

			[Token(Token = "0x4001B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<int> gosToDelete;

			[Token(Token = "0x4001B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<GameObject> gosToUpdate;

			[Token(Token = "0x4001B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool isDirty;

			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0xC4B6F4", Offset = "0xC4B6F4", VA = "0xC4B6F4")]
			public CombinedMesh(int maxNumVertsInMesh, GameObject resultSceneObject, MB2_LogLevel ll)
			{
			}

			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0xC4C410", Offset = "0xC4C410", VA = "0xC4C410")]
			public bool isEmpty()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject[] empty;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[] emptyIDs;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<int, CombinedMesh> obj2MeshCombinerMap;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public List<CombinedMesh> meshCombiners;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int _maxVertsInMesh;

		[Token(Token = "0x17000179")]
		public override MB2_LogLevel LOG_LEVEL
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0xC48354", Offset = "0xC48354", VA = "0xC48354", Slot = "4")]
			get
			{
				return default(MB2_LogLevel);
			}
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0xC4835C", Offset = "0xC4835C", VA = "0xC4835C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public override MB2_ValidationLevel validationLevel
		{
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0xC484BC", Offset = "0xC484BC", VA = "0xC484BC", Slot = "6")]
			get
			{
				return default(MB2_ValidationLevel);
			}
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0xC4840C", Offset = "0xC4840C", VA = "0xC4840C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public int maxVertsInMesh
		{
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0xC484C4", Offset = "0xC484C4", VA = "0xC484C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0xC484CC", Offset = "0xC484CC", VA = "0xC484CC")]
			set
			{
			}
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xC485C0", Offset = "0xC485C0", VA = "0xC485C0", Slot = "45")]
		public override int GetNumObjectsInCombined()
		{
			return default(int);
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xC48618", Offset = "0xC48618", VA = "0xC48618", Slot = "46")]
		public override int GetNumVerticesFor(GameObject go)
		{
			return default(int);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xC486D0", Offset = "0xC486D0", VA = "0xC486D0", Slot = "47")]
		public override int GetNumVerticesFor(int gameObjectID)
		{
			return default(int);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xC48774", Offset = "0xC48774", VA = "0xC48774", Slot = "44")]
		public override List<GameObject> GetObjectsInCombined()
		{
			return null;
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xC48868", Offset = "0xC48868", VA = "0xC48868", Slot = "39")]
		public override int GetLightmapIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xC488F0", Offset = "0xC488F0", VA = "0xC488F0", Slot = "55")]
		public override bool CombinedMeshContains(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xC4896C", Offset = "0xC4896C", VA = "0xC4896C")]
		private bool _validateTextureBakeResults()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xC48B98", Offset = "0xC48B98", VA = "0xC48B98", Slot = "50")]
		public override void Apply(GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xC48CAC", Offset = "0xC48CAC", VA = "0xC48CAC", Slot = "51")]
		public override void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xC48E70", Offset = "0xC48E70", VA = "0xC48E70", Slot = "56")]
		public override void UpdateSkinnedMeshApproximateBounds()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xC48F18", Offset = "0xC48F18", VA = "0xC48F18", Slot = "57")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBones()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xC48FC0", Offset = "0xC48FC0", VA = "0xC48FC0", Slot = "59")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBounds()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xC49068", Offset = "0xC49068", VA = "0xC49068", Slot = "52")]
		public override void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xC49470", Offset = "0xC49470", VA = "0xC49470", Slot = "53")]
		public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xC49668", Offset = "0xC49668", VA = "0xC49668", Slot = "54")]
		public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xC49AFC", Offset = "0xC49AFC", VA = "0xC49AFC")]
		private bool _validate(GameObject[] gos, int[] deleteGOinstanceIDs)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xC4A0F4", Offset = "0xC4A0F4", VA = "0xC4A0F4")]
		private void _distributeAmongBakers(GameObject[] gos, int[] deleteGOinstanceIDs)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xC4AAC4", Offset = "0xC4AAC4", VA = "0xC4AAC4")]
		private bool _bakeStep1(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xC4BA70", Offset = "0xC4BA70", VA = "0xC4BA70", Slot = "48")]
		public override Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
		{
			return null;
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xC4BC98", Offset = "0xC4BC98", VA = "0xC4BC98", Slot = "40")]
		public override void ClearBuffers()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xC4BD40", Offset = "0xC4BD40", VA = "0xC4BD40", Slot = "41")]
		public override void ClearMesh()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xC4BD50", Offset = "0xC4BD50", VA = "0xC4BD50", Slot = "42")]
		public override void DestroyMesh()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xC4BEF8", Offset = "0xC4BEF8", VA = "0xC4BEF8", Slot = "43")]
		public override void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xC4B828", Offset = "0xC4B828", VA = "0xC4B828")]
		private void _setMBValues(MB3_MeshCombinerSingle targ)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xC4C128", Offset = "0xC4C128", VA = "0xC4C128", Slot = "61")]
		public override List<Material> GetMaterialsOnTargetRenderer()
		{
			return null;
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xC4C244", Offset = "0xC4C244", VA = "0xC4C244", Slot = "58")]
		public override void CheckIntegrity()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xC4C2EC", Offset = "0xC4C2EC", VA = "0xC4C2EC")]
		public MB3_MultiMeshCombiner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000303")]
	public class ShaderTextureProperty
	{
		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isNormalMap;

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xBB52AC", Offset = "0xBB52AC", VA = "0xBB52AC")]
		public ShaderTextureProperty(string n, bool norm)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xBB52EC", Offset = "0xBB52EC", VA = "0xBB52EC")]
		public static string[] GetNames(List<ShaderTextureProperty> props)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000304")]
	public class MB3_TextureCombiner
	{
		[Token(Token = "0x200057A")]
		public class MeshBakerMaterialTexture
		{
			[Token(Token = "0x4001B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D t;

			[Token(Token = "0x4001B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float texelDensity;

			[Token(Token = "0x4001B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DRect encapsulatingSamplingRect;

			[Token(Token = "0x4001B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public DRect matTilingRect;

			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0xBB0994", Offset = "0xBB0994", VA = "0xBB0994")]
			public MeshBakerMaterialTexture()
			{
			}

			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0xBB099C", Offset = "0xBB099C", VA = "0xBB099C")]
			public MeshBakerMaterialTexture(Texture2D tx)
			{
			}

			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0xBB09C8", Offset = "0xBB09C8", VA = "0xBB09C8")]
			public MeshBakerMaterialTexture(Texture2D tx, Vector2 o, Vector2 s, float texelDens)
			{
			}
		}

		[Token(Token = "0x200057B")]
		public class MatAndTransformToMerged
		{
			[Token(Token = "0x4001B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material mat;

			[Token(Token = "0x4001B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DRect obUVRectIfTilingSame;

			[Token(Token = "0x4001B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DRect samplingRectMatAndUVTiling;

			[Token(Token = "0x4001B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public DRect materialTiling;

			[Token(Token = "0x4001B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public string objName;

			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0xBB07E0", Offset = "0xBB07E0", VA = "0xBB07E0")]
			public MatAndTransformToMerged(Material m)
			{
			}

			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0xBB0848", Offset = "0xBB0848", VA = "0xBB0848", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0xBB0930", Offset = "0xBB0930", VA = "0xBB0930", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x200057C")]
		public class SamplingRectEnclosesComparer : IComparer<MatAndTransformToMerged>
		{
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0xBB0A58", Offset = "0xBB0A58", VA = "0xBB0A58", Slot = "4")]
			public int Compare(MatAndTransformToMerged x, MatAndTransformToMerged y)
			{
				return default(int);
			}

			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0xBB0B1C", Offset = "0xBB0B1C", VA = "0xBB0B1C")]
			public SamplingRectEnclosesComparer()
			{
			}
		}

		[Token(Token = "0x200057D")]
		public class MB_TexSet
		{
			[Token(Token = "0x4001B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshBakerMaterialTexture[] ts;

			[Token(Token = "0x4001B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MatAndTransformToMerged> mats;

			[Token(Token = "0x4001B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<GameObject> gos;

			[Token(Token = "0x4001B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool allTexturesUseSameMatTiling;

			[Token(Token = "0x4001B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector2 obUVoffset;

			[Token(Token = "0x4001B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector2 obUVscale;

			[Token(Token = "0x4001B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int idealWidth;

			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int idealHeight;

			[Token(Token = "0x17000264")]
			public DRect obUVrect
			{
				[Token(Token = "0x6001DDE")]
				[Address(RVA = "0xBAF724", Offset = "0xBAF724", VA = "0xBAF724")]
				get
				{
					return default(DRect);
				}
			}

			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0xBAF760", Offset = "0xBAF760", VA = "0xBAF760")]
			public MB_TexSet(MeshBakerMaterialTexture[] tss, Vector2 uvOffset, Vector2 uvScale)
			{
			}

			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0xBAF880", Offset = "0xBAF880", VA = "0xBAF880")]
			public bool IsEqual(object obj, bool fixOutOfBoundsUVs, bool considerNonTextureProperties, TextureBlender resultMaterialTextureBlender)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0xBAFBC8", Offset = "0xBAFBC8", VA = "0xBAFBC8")]
			public void CalcInitialFullSamplingRects(bool fixOutOfBoundsUVs)
			{
			}

			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0xBAFE78", Offset = "0xBAFE78", VA = "0xBAFE78")]
			public void CalcMatAndUVSamplingRectsIfAllMatTilingSame()
			{
			}

			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0xBB008C", Offset = "0xBB008C", VA = "0xBB008C")]
			public bool AllTexturesAreSameForMerge(MB_TexSet other, bool considerNonTextureProperties, TextureBlender resultMaterialTextureBlender)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0xBB03D4", Offset = "0xBB03D4", VA = "0xBB03D4")]
			internal string GetDescription()
			{
				return null;
			}

			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0xBB0680", Offset = "0xBB0680", VA = "0xBB0680")]
			internal string GetMatSubrectDescriptions()
			{
				return null;
			}
		}

		[Token(Token = "0x200057E")]
		public class CombineTexturesIntoAtlasesCoroutineResult
		{
			[Token(Token = "0x4001B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool success;

			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool isFinished;

			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0xBAF714", Offset = "0xBAF714", VA = "0xBAF714")]
			public CombineTexturesIntoAtlasesCoroutineResult()
			{
			}
		}

		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5722F8", Offset = "0x5722F8")]
		private sealed class <CombineTexturesIntoAtlasesCoroutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombineTexturesIntoAtlasesCoroutineResult coroutineResult;

			[Token(Token = "0x4001B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float maxTimePerFrame;

			[Token(Token = "0x4001B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4001B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4001B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material resultMaterial;

			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x17000265")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DEA")]
				[Address(RVA = "0xC56058", Offset = "0xC56058", VA = "0xC56058", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000266")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DEC")]
				[Address(RVA = "0xC560C0", Offset = "0xC560C0", VA = "0xC560C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0xC4CBCC", Offset = "0xC4CBCC", VA = "0xC4CBCC")]
			[DebuggerHidden]
			public <CombineTexturesIntoAtlasesCoroutine>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0xC55E74", Offset = "0xC55E74", VA = "0xC55E74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0xC55E78", Offset = "0xC55E78", VA = "0xC55E78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0xC56060", Offset = "0xC56060", VA = "0xC56060", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572308", Offset = "0x572308")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x6001DED")]
			[Address(RVA = "0xC4D954", Offset = "0xC4D954", VA = "0xC4D954")]
			public <>c__DisplayClass62_0()
			{
			}
		}

		[Token(Token = "0x2000581")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572318", Offset = "0x572318")]
		private sealed class <>c__DisplayClass62_1
		{
			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass62_0 CS$<>8__locals1;

			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0xC4D95C", Offset = "0xC4D95C", VA = "0xC4D95C")]
			public <>c__DisplayClass62_1()
			{
			}

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0xC55D90", Offset = "0xC55D90", VA = "0xC55D90")]
			internal bool <_CollectPropertyNames>b__0(ShaderTextureProperty x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572328", Offset = "0x572328")]
		private sealed class <_CombineTexturesIntoAtlases>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material resultMaterial;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x4001B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Stopwatch <sw>5__2;

			[Token(Token = "0x17000267")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DF4")]
				[Address(RVA = "0xC57470", Offset = "0xC57470", VA = "0xC57470", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000268")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF6")]
				[Address(RVA = "0xC574D8", Offset = "0xC574D8", VA = "0xC574D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0xC4D964", Offset = "0xC4D964", VA = "0xC4D964")]
			[DebuggerHidden]
			public <_CombineTexturesIntoAtlases>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0xC56D48", Offset = "0xC56D48", VA = "0xC56D48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0xC56FB8", Offset = "0xC56FB8", VA = "0xC56FB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0xC56D64", Offset = "0xC56D64", VA = "0xC56D64")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0xC57478", Offset = "0xC57478", VA = "0xC57478", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000583")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572338", Offset = "0x572338")]
		private sealed class <__CombineTexturesIntoAtlases>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4001B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Material resultMaterial;

			[Token(Token = "0x4001B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private List<MB_TexSet> <distinctMaterialTextures>5__2;

			[Token(Token = "0x4001B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool[] <allTexturesAreNullAndSameColor>5__3;

			[Token(Token = "0x17000269")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DFA")]
				[Address(RVA = "0xC57BC8", Offset = "0xC57BC8", VA = "0xC57BC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DFC")]
				[Address(RVA = "0xC57C30", Offset = "0xC57C30", VA = "0xC57C30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0xC4DA50", Offset = "0xC4DA50", VA = "0xC4DA50")]
			[DebuggerHidden]
			public <__CombineTexturesIntoAtlases>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0xC574E0", Offset = "0xC574E0", VA = "0xC574E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0xC574E4", Offset = "0xC574E4", VA = "0xC574E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xC57BD0", Offset = "0xC57BD0", VA = "0xC57BD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572348", Offset = "0x572348")]
		private sealed class <>c__DisplayClass65_0
		{
			[Token(Token = "0x4001B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB_TexSet setOfTexs;

			[Token(Token = "0x4001B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xC55E30", Offset = "0xC55E30", VA = "0xC55E30")]
			public <>c__DisplayClass65_0()
			{
			}

			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0xC55E38", Offset = "0xC55E38", VA = "0xC55E38")]
			internal bool <__Step1_CollectDistinctMatTexturesAndUsedObjects>b__0(MB_TexSet x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000585")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572358", Offset = "0x572358")]
		private sealed class <__Step1_CollectDistinctMatTexturesAndUsedObjects>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<GameObject> allObjsToMesh;

			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x4001B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x4001B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<MB_TexSet> distinctMaterialTextures;

			[Token(Token = "0x4001B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<GameObject> usedObjsToMesh;

			[Token(Token = "0x1700026B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E02")]
				[Address(RVA = "0xC5A328", Offset = "0xC5A328", VA = "0xC5A328", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E04")]
				[Address(RVA = "0xC5A390", Offset = "0xC5A390", VA = "0xC5A390", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0xC4DB34", Offset = "0xC4DB34", VA = "0xC4DB34")]
			[DebuggerHidden]
			public <__Step1_CollectDistinctMatTexturesAndUsedObjects>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6001E00")]
			[Address(RVA = "0xC5904C", Offset = "0xC5904C", VA = "0xC5904C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E01")]
			[Address(RVA = "0xC59050", Offset = "0xC59050", VA = "0xC59050", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E03")]
			[Address(RVA = "0xC5A330", Offset = "0xC5A330", VA = "0xC5A330", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000586")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572368", Offset = "0x572368")]
		private sealed class <__Step2_CalculateIdealSizesForTexturesInAtlasAndPadding>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<MB_TexSet> distinctMaterialTextures;

			[Token(Token = "0x4001B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4001B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x4001B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool[] allTexturesAreNullAndSameColor;

			[Token(Token = "0x4001B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x1700026D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E08")]
				[Address(RVA = "0xC5BAAC", Offset = "0xC5BAAC", VA = "0xC5BAAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E0A")]
				[Address(RVA = "0xC5BB14", Offset = "0xC5BB14", VA = "0xC5BB14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xC4DBF8", Offset = "0xC4DBF8", VA = "0xC4DBF8")]
			[DebuggerHidden]
			public <__Step2_CalculateIdealSizesForTexturesInAtlasAndPadding>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6001E06")]
			[Address(RVA = "0xC5A398", Offset = "0xC5A398", VA = "0xC5A398", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xC5A39C", Offset = "0xC5A39C", VA = "0xC5A39C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xC5BAB4", Offset = "0xC5BAB4", VA = "0xC5BAB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572378", Offset = "0x572378")]
		private sealed class <__Step3_BuildAndSaveAtlasesAndStoreResults>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x4001B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<MB_TexSet> distinctMaterialTextures;

			[Token(Token = "0x4001B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool[] allTexturesAreNullAndSameColor;

			[Token(Token = "0x4001B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4001B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material resultMaterial;

			[Token(Token = "0x4001B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int _padding;

			[Token(Token = "0x4001B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4001B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Stopwatch <sw>5__2;

			[Token(Token = "0x4001B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <numAtlases>5__3;

			[Token(Token = "0x4001B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private StringBuilder <report>5__4;

			[Token(Token = "0x4001B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Texture2D[] <atlases>5__5;

			[Token(Token = "0x1700026F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E0E")]
				[Address(RVA = "0xC5D138", Offset = "0xC5D138", VA = "0xC5D138", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000270")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E10")]
				[Address(RVA = "0xC5D1A0", Offset = "0xC5D1A0", VA = "0xC5D1A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xC4DCDC", Offset = "0xC4DCDC", VA = "0xC4DCDC")]
			[DebuggerHidden]
			public <__Step3_BuildAndSaveAtlasesAndStoreResults>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0xC5BB1C", Offset = "0xC5BB1C", VA = "0xC5BB1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xC5BB20", Offset = "0xC5BB20", VA = "0xC5BB20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xC5D140", Offset = "0xC5D140", VA = "0xC5D140", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572388", Offset = "0x572388")]
		private sealed class <__CreateAtlasesMBTexturePacker>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<MB_TexSet> distinctMaterialTextures;

			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Texture2D[] atlases;

			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Material resultMaterial;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int numAtlases;

			[Token(Token = "0x4001B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int _padding;

			[Token(Token = "0x4001B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool[] allTexturesAreNullAndSameColor;

			[Token(Token = "0x4001B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4001B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Rect[] <uvRects>5__2;

			[Token(Token = "0x4001B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <atlasSizeX>5__3;

			[Token(Token = "0x4001B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private int <atlasSizeY>5__4;

			[Token(Token = "0x4001B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int <propIdx>5__5;

			[Token(Token = "0x4001B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Color[][] <atlasPixels>5__6;

			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private bool <isNormalMap>5__7;

			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private int <texSetIdx>5__8;

			[Token(Token = "0x17000271")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E14")]
				[Address(RVA = "0xC58FDC", Offset = "0xC58FDC", VA = "0xC58FDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000272")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E16")]
				[Address(RVA = "0xC59044", Offset = "0xC59044", VA = "0xC59044", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xC4DDD0", Offset = "0xC4DDD0", VA = "0xC4DDD0")]
			[DebuggerHidden]
			public <__CreateAtlasesMBTexturePacker>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x6001E12")]
			[Address(RVA = "0xC57C38", Offset = "0xC57C38", VA = "0xC57C38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E13")]
			[Address(RVA = "0xC57C3C", Offset = "0xC57C3C", VA = "0xC57C3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E15")]
			[Address(RVA = "0xC58FE4", Offset = "0xC58FE4", VA = "0xC58FE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x572398", Offset = "0x572398")]
		private sealed class <CopyScaledAndTiledToAtlas>d__82 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4001B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MeshBakerMaterialTexture source;

			[Token(Token = "0x4001B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int targX;

			[Token(Token = "0x4001B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int targY;

			[Token(Token = "0x4001B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int targW;

			[Token(Token = "0x4001B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int targH;

			[Token(Token = "0x4001B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public DRect srcSamplingRect;

			[Token(Token = "0x4001B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB_TexSet sourceMaterial;

			[Token(Token = "0x4001B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public ShaderTextureProperty shaderPropertyName;

			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Color[][] atlasPixels;

			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private int <w>5__2;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private int <h>5__3;

			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private int <i>5__4;

			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private int <j>5__5;

			[Token(Token = "0x17000273")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E1A")]
				[Address(RVA = "0xC56CD8", Offset = "0xC56CD8", VA = "0xC56CD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000274")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E1C")]
				[Address(RVA = "0xC56D40", Offset = "0xC56D40", VA = "0xC56D40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E17")]
			[Address(RVA = "0xC531B8", Offset = "0xC531B8", VA = "0xC531B8")]
			[DebuggerHidden]
			public <CopyScaledAndTiledToAtlas>d__82(int <>1__state)
			{
			}

			[Token(Token = "0x6001E18")]
			[Address(RVA = "0xC560C8", Offset = "0xC560C8", VA = "0xC560C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0xC560CC", Offset = "0xC560CC", VA = "0xC560CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0xC56CE0", Offset = "0xC56CE0", VA = "0xC56CE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DO_INTEGRITY_CHECKS;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ShaderTextureProperty[] shaderTexPropertyNames;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected MB2_TextureBakeResults _textureBakeResults;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int _atlasPadding;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected int _maxAtlasSize;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected bool _resizePowerOfTwoTextures;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		protected bool _fixOutOfBoundsUVs;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected int _maxTilingBakeSize;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool _saveAtlasesAsAssets;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected MB2_PackingAlgorithmEnum _packingAlgorithm;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected bool _meshBakerTexturePackerForcePowerOfTwo;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected List<ShaderTextureProperty> _customShaderPropNames;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected bool _normalizeTexelDensity;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		protected bool _considerNonTextureProperties;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected TextureBlender resultMaterialTextureBlender;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected TextureBlender[] textureBlenders;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<Texture2D> _temporaryTextures;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool _RunCorutineWithoutPauseIsRunning;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int __step2_CalculateIdealSizesForTexturesInAtlasAndPadding;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rect[] __createAtlasesMBTexturePacker;

		[Token(Token = "0x1700017C")]
		public MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xC4C588", Offset = "0xC4C588", VA = "0xC4C588")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0xC4C590", Offset = "0xC4C590", VA = "0xC4C590")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public int atlasPadding
		{
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0xC4C598", Offset = "0xC4C598", VA = "0xC4C598")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0xC4C5A0", Offset = "0xC4C5A0", VA = "0xC4C5A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public int maxAtlasSize
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0xC4C5A8", Offset = "0xC4C5A8", VA = "0xC4C5A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xC4C5B0", Offset = "0xC4C5B0", VA = "0xC4C5B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public bool resizePowerOfTwoTextures
		{
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0xC4C5B8", Offset = "0xC4C5B8", VA = "0xC4C5B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0xC4C5C0", Offset = "0xC4C5C0", VA = "0xC4C5C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public bool fixOutOfBoundsUVs
		{
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0xC4C5CC", Offset = "0xC4C5CC", VA = "0xC4C5CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0xC4C5D4", Offset = "0xC4C5D4", VA = "0xC4C5D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public int maxTilingBakeSize
		{
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0xC4C5E0", Offset = "0xC4C5E0", VA = "0xC4C5E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0xC4C5E8", Offset = "0xC4C5E8", VA = "0xC4C5E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public bool saveAtlasesAsAssets
		{
			[Token(Token = "0x60014DB")]
			[Address(RVA = "0xC4C5F0", Offset = "0xC4C5F0", VA = "0xC4C5F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0xC4C5F8", Offset = "0xC4C5F8", VA = "0xC4C5F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public MB2_PackingAlgorithmEnum packingAlgorithm
		{
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0xC4C604", Offset = "0xC4C604", VA = "0xC4C604")]
			get
			{
				return default(MB2_PackingAlgorithmEnum);
			}
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0xC4C60C", Offset = "0xC4C60C", VA = "0xC4C60C")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public bool meshBakerTexturePackerForcePowerOfTwo
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0xC4C614", Offset = "0xC4C614", VA = "0xC4C614")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0xC4C61C", Offset = "0xC4C61C", VA = "0xC4C61C")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public List<ShaderTextureProperty> customShaderPropNames
		{
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0xC4C628", Offset = "0xC4C628", VA = "0xC4C628")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0xC4C630", Offset = "0xC4C630", VA = "0xC4C630")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public bool considerNonTextureProperties
		{
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0xC4C638", Offset = "0xC4C638", VA = "0xC4C638")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0xC4C640", Offset = "0xC4C640", VA = "0xC4C640")]
			set
			{
			}
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xC4C64C", Offset = "0xC4C64C", VA = "0xC4C64C")]
		public static void RunCorutineWithoutPause(IEnumerator cor, int recursionDepth)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xC4C950", Offset = "0xC4C950", VA = "0xC4C950")]
		public bool CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, [Optional] MB2_EditorMethodsInterface textureEditorMethods)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xC4CB00", Offset = "0xC4CB00", VA = "0xC4CB00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5826E8", Offset = "0x5826E8")]
		public IEnumerator CombineTexturesIntoAtlasesCoroutine(ProgressUpdateDelegate progressInfo, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, [Optional] MB2_EditorMethodsInterface textureEditorMethods, [Optional] CombineTexturesIntoAtlasesCoroutineResult coroutineResult, float maxTimePerFrame = 0.01f)
		{
			return null;
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xC4CBF8", Offset = "0xC4CBF8", VA = "0xC4CBF8")]
		private static bool InterfaceFilter(Type typeObj, object criteriaObj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xC4CC4C", Offset = "0xC4CC4C", VA = "0xC4CC4C")]
		private void _LoadTextureBlenders()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xC4D0CC", Offset = "0xC4D0CC", VA = "0xC4D0CC")]
		private bool _CollectPropertyNames(Material resultMaterial, List<ShaderTextureProperty> texPropertyNames)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xC4CA48", Offset = "0xC4CA48", VA = "0xC4CA48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x58274C", Offset = "0x58274C")]
		private IEnumerator _CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, CombineTexturesIntoAtlasesCoroutineResult result, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, MB2_EditorMethodsInterface textureEditorMethods)
		{
			return null;
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xC4D990", Offset = "0xC4D990", VA = "0xC4D990")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5827B0", Offset = "0x5827B0")]
		private IEnumerator __CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, CombineTexturesIntoAtlasesCoroutineResult result, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<ShaderTextureProperty> texPropertyNames, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, MB2_EditorMethodsInterface textureEditorMethods)
		{
			return null;
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xC4DA7C", Offset = "0xC4DA7C", VA = "0xC4DA7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x582814", Offset = "0x582814")]
		private IEnumerator __Step1_CollectDistinctMatTexturesAndUsedObjects(CombineTexturesIntoAtlasesCoroutineResult result, List<GameObject> allObjsToMesh, List<Material> allowedMaterialsFilter, List<ShaderTextureProperty> texPropertyNames, MB2_EditorMethodsInterface textureEditorMethods, List<MB_TexSet> distinctMaterialTextures, List<GameObject> usedObjsToMesh)
		{
			return null;
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xC4DB60", Offset = "0xC4DB60", VA = "0xC4DB60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x582878", Offset = "0x582878")]
		private IEnumerator __Step2_CalculateIdealSizesForTexturesInAtlasAndPadding(CombineTexturesIntoAtlasesCoroutineResult result, List<MB_TexSet> distinctMaterialTextures, List<ShaderTextureProperty> texPropertyNames, bool[] allTexturesAreNullAndSameColor, MB2_EditorMethodsInterface textureEditorMethods)
		{
			return null;
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xC4DC24", Offset = "0xC4DC24", VA = "0xC4DC24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5828DC", Offset = "0x5828DC")]
		private IEnumerator __Step3_BuildAndSaveAtlasesAndStoreResults(CombineTexturesIntoAtlasesCoroutineResult result, ProgressUpdateDelegate progressInfo, List<MB_TexSet> distinctMaterialTextures, List<ShaderTextureProperty> texPropertyNames, bool[] allTexturesAreNullAndSameColor, int _padding, MB2_EditorMethodsInterface textureEditorMethods, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial)
		{
			return null;
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xC4DD08", Offset = "0xC4DD08", VA = "0xC4DD08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x582940", Offset = "0x582940")]
		private IEnumerator __CreateAtlasesMBTexturePacker(ProgressUpdateDelegate progressInfo, int numAtlases, List<MB_TexSet> distinctMaterialTextures, List<ShaderTextureProperty> texPropertyNames, bool[] allTexturesAreNullAndSameColor, Material resultMaterial, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, int _padding)
		{
			return null;
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xC4DDFC", Offset = "0xC4DDFC", VA = "0xC4DDFC")]
		private Rect[] __CreateAtlasesMBTexturePackerFast(ProgressUpdateDelegate progressInfo, int numAtlases, List<MB_TexSet> distinctMaterialTextures, List<ShaderTextureProperty> texPropertyNames, bool[] allTexturesAreNullAndSameColor, Material resultMaterial, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, int _padding)
		{
			return null;
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xC4F1D0", Offset = "0xC4F1D0", VA = "0xC4F1D0")]
		private Rect[] __CreateAtlasesUnityTexturePacker(ProgressUpdateDelegate progressInfo, int numAtlases, List<MB_TexSet> distinctMaterialTextures, List<ShaderTextureProperty> texPropertyNames, bool[] allTexturesAreNullAndSameColor, Material resultMaterial, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, int _padding)
		{
			return null;
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xC51220", Offset = "0xC51220", VA = "0xC51220")]
		private void _addWatermark(Texture2D[] texToPack)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xC514A8", Offset = "0xC514A8", VA = "0xC514A8")]
		private Texture2D _addWatermark(Texture2D texToPack)
		{
			return null;
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xC51224", Offset = "0xC51224", VA = "0xC51224")]
		private Texture2D _copyTexturesIntoAtlas(Texture2D[] texToPack, int padding, Rect[] rs, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xC514B0", Offset = "0xC514B0", VA = "0xC514B0")]
		private bool IsPowerOfTwo(int x)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xC514C0", Offset = "0xC514C0", VA = "0xC514C0")]
		private void MergeOverlappingDistinctMaterialTexturesAndCalcMaterialSubrects(List<MB_TexSet> distinctMaterialTextures, bool fixOutOfBoundsUVs)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xC52C80", Offset = "0xC52C80", VA = "0xC52C80")]
		private Vector2 GetAdjustedForScaleAndOffset2Dimensions(MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xC509C8", Offset = "0xC509C8", VA = "0xC509C8")]
		public Texture2D GetAdjustedForScaleAndOffset2(MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale)
		{
			return null;
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xC52FF8", Offset = "0xC52FF8", VA = "0xC52FF8")]
		internal static DRect GetSourceSamplingRect(MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale)
		{
			return default(DRect);
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xC50E74", Offset = "0xC50E74", VA = "0xC50E74")]
		private Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName)
		{
			return null;
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xC530CC", Offset = "0xC530CC", VA = "0xC530CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5829A4", Offset = "0x5829A4")]
		public IEnumerator CopyScaledAndTiledToAtlas(MeshBakerMaterialTexture source, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName, DRect srcSamplingRect, int targX, int targY, int targW, int targH, bool _fixOutOfBoundsUVs, int maxSize, Color[][] atlasPixels, int atlasWidth, bool isNormalMap, [Optional] ProgressUpdateDelegate progressInfo)
		{
			return null;
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xC507AC", Offset = "0xC507AC", VA = "0xC507AC")]
		public Texture2D _createTemporaryTexture(int w, int h, TextureFormat texFormat, bool mipMaps)
		{
			return null;
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xC53048", Offset = "0xC53048", VA = "0xC53048")]
		internal Texture2D _createTextureCopy(Texture2D t)
		{
			return null;
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xC50DD8", Offset = "0xC50DD8", VA = "0xC50DD8")]
		private Texture2D _resizeTexture(Texture2D t, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xC4F098", Offset = "0xC4F098", VA = "0xC4F098")]
		private void _destroyTemporaryTextures()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xC531E4", Offset = "0xC531E4", VA = "0xC531E4")]
		public void SuggestTreatment(List<GameObject> objsToMesh, Material[] resultMaterials, List<ShaderTextureProperty> _customShaderPropNames)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xC54928", Offset = "0xC54928", VA = "0xC54928")]
		private TextureBlender FindMatchingTextureBlender(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xC54A5C", Offset = "0xC54A5C", VA = "0xC54A5C")]
		private void AdjustNonTextureProperties(Material mat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, bool considerTintColor, MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xC50870", Offset = "0xC50870", VA = "0xC50870")]
		public static Color GetColorIfNoTexture(ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xC552E8", Offset = "0xC552E8", VA = "0xC552E8")]
		private Color32 ConvertNormalFormatFromUnity_ToStandard(Color32 c)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xC55424", Offset = "0xC55424", VA = "0xC55424")]
		private float GetSubmeshArea(Mesh m, int submeshIdx)
		{
			return default(float);
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xC54848", Offset = "0xC54848", VA = "0xC54848")]
		private string PrintList(List<GameObject> gos)
		{
			return null;
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xC55670", Offset = "0xC55670", VA = "0xC55670")]
		public MB3_TextureCombiner()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public struct DRect
	{
		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double width;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double height;

		[Token(Token = "0x17000187")]
		public Vector2 min
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0x5EC840", Offset = "0x5EC840", VA = "0x5EC840")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000188")]
		public Vector2 max
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x5EC878", Offset = "0x5EC878", VA = "0x5EC878")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000189")]
		public Vector2 size
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0x5EC880", Offset = "0x5EC880", VA = "0x5EC880")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x5EC7EC", Offset = "0x5EC7EC", VA = "0x5EC7EC")]
		public DRect(Rect r)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x5EC7F4", Offset = "0x5EC7F4", VA = "0x5EC7F4")]
		public DRect(Vector2 o, Vector2 s)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x5EC810", Offset = "0x5EC810", VA = "0x5EC810")]
		public DRect(float xx, float yy, float w, float h)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x5EC82C", Offset = "0x5EC82C", VA = "0x5EC82C")]
		public DRect(double xx, double yy, double w, double h)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x5EC838", Offset = "0x5EC838", VA = "0x5EC838")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x5EC8B8", Offset = "0x5EC8B8", VA = "0x5EC8B8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x71FF24", Offset = "0x71FF24", VA = "0x71FF24")]
		public static bool operator ==(DRect a, DRect b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x71FFC0", Offset = "0x71FFC0", VA = "0x71FFC0")]
		public static bool operator !=(DRect a, DRect b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x5EC8C0", Offset = "0x5EC8C0", VA = "0x5EC8C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x5EC8C8", Offset = "0x5EC8C8", VA = "0x5EC8C8")]
		public bool Encloses(DRect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x5EC8D0", Offset = "0x5EC8D0", VA = "0x5EC8D0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000306")]
	public class MB3_UVTransformUtility
	{
		[Token(Token = "0x6001518")]
		[Address(RVA = "0xBB0B24", Offset = "0xBB0B24", VA = "0xBB0B24")]
		public static void Test()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xBB0EA0", Offset = "0xBB0EA0", VA = "0xBB0EA0")]
		public static float TransformX(DRect r, double x)
		{
			return default(float);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xBAFE1C", Offset = "0xBAFE1C", VA = "0xBAFE1C")]
		public static DRect CombineTransforms(ref DRect r1, ref DRect r2)
		{
			return default(DRect);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xBB0EB0", Offset = "0xBB0EB0", VA = "0xBB0EB0")]
		public static Rect CombineTransforms(ref Rect r1, ref Rect r2)
		{
			return default(Rect);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xBB0FC8", Offset = "0xBB0FC8", VA = "0xBB0FC8")]
		public static void Canonicalize(ref DRect r, double minX, double minY)
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xBB1100", Offset = "0xBB1100", VA = "0xBB1100")]
		public static void Canonicalize(ref Rect r, float minX, float minY)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xBB0E24", Offset = "0xBB0E24", VA = "0xBB0E24")]
		public static DRect InverseTransform(ref DRect t)
		{
			return default(DRect);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xBB12D8", Offset = "0xBB12D8", VA = "0xBB12D8")]
		public static DRect GetEncapsulatingRect(ref DRect uvRect1, ref DRect uvRect2)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xBB1374", Offset = "0xBB1374", VA = "0xBB1374")]
		public static bool RectContains(ref DRect bigRect, ref DRect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xBB1414", Offset = "0xBB1414", VA = "0xBB1414")]
		public static bool RectContains(ref Rect bigRect, ref Rect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xBB0E4C", Offset = "0xBB0E4C", VA = "0xBB0E4C")]
		internal static Vector2 TransformPoint(ref DRect r, Vector2 p)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xBB15A4", Offset = "0xBB15A4", VA = "0xBB15A4")]
		public MB3_UVTransformUtility()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class MB_Utility
	{
		[Token(Token = "0x200058A")]
		public struct MeshAnalysisResult
		{
			[Token(Token = "0x4001B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rect uvRect;

			[Token(Token = "0x4001B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasOutOfBoundsUVs;

			[Token(Token = "0x4001B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool hasOverlappingSubmeshVerts;

			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool hasOverlappingSubmeshTris;

			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float submeshArea;
		}

		[Token(Token = "0x200058B")]
		private class MB_Triangle
		{
			[Token(Token = "0x4001B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int submeshIdx;

			[Token(Token = "0x4001B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int[] vs;

			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0xBB452C", Offset = "0xBB452C", VA = "0xBB452C")]
			public bool isSame(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0xBB4658", Offset = "0xBB4658", VA = "0xBB4658")]
			public bool sharesVerts(MB_Triangle obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0xBB4420", Offset = "0xBB4420", VA = "0xBB4420")]
			public void Initialize(int[] ts, int idx, int sIdx)
			{
			}

			[Token(Token = "0x6001E20")]
			[Address(RVA = "0xBB43C0", Offset = "0xBB43C0", VA = "0xBB43C0")]
			public MB_Triangle()
			{
			}
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xBB2DE8", Offset = "0xBB2DE8", VA = "0xBB2DE8")]
		public static Texture2D createTextureCopy(Texture2D source)
		{
			return null;
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xBB2EB4", Offset = "0xBB2EB4", VA = "0xBB2EB4")]
		public static bool ArrayBIsSubsetOfA(object[] a, object[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xBB2F58", Offset = "0xBB2F58", VA = "0xBB2F58")]
		public static Material[] GetGOMaterials(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xBB349C", Offset = "0xBB349C", VA = "0xBB349C")]
		public static Mesh GetMesh(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xBB3658", Offset = "0xBB3658", VA = "0xBB3658")]
		public static void SetMesh(GameObject go, Mesh m)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xBB37B0", Offset = "0xBB37B0", VA = "0xBB37B0")]
		public static Renderer GetRenderer(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xBB38D4", Offset = "0xBB38D4", VA = "0xBB38D4")]
		public static void DisableRendererInSource(GameObject go)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xBB3A14", Offset = "0xBB3A14", VA = "0xBB3A14")]
		public static bool hasOutOfBoundsUVs(Mesh m, ref Rect uvBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xBB3A5C", Offset = "0xBB3A5C", VA = "0xBB3A5C")]
		public static bool hasOutOfBoundsUVs(Mesh m, ref MeshAnalysisResult putResultHere, int submeshIndex = -1, int uvChannel = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xBB3B68", Offset = "0xBB3B68", VA = "0xBB3B68")]
		public static bool hasOutOfBoundsUVs(Vector2[] uvs, Mesh m, ref MeshAnalysisResult putResultHere, int submeshIndex = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xBB3D78", Offset = "0xBB3D78", VA = "0xBB3D78")]
		public static void setSolidColor(Texture2D t, Color c)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xBB3E28", Offset = "0xBB3E28", VA = "0xBB3E28")]
		public static Texture2D resampleTexture(Texture2D source, int newWidth, int newHeight)
		{
			return null;
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xBB3FAC", Offset = "0xBB3FAC", VA = "0xBB3FAC")]
		public static bool AreAllSharedMaterialsDistinct(Material[] sharedMaterials)
		{
			return default(bool);
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xBB40D4", Offset = "0xBB40D4", VA = "0xBB40D4")]
		public static int doSubmeshesShareVertsOrTris(Mesh m, ref MeshAnalysisResult mar)
		{
			return default(int);
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xBB4788", Offset = "0xBB4788", VA = "0xBB4788")]
		public static bool GetBounds(GameObject go, out Bounds b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xBB49E8", Offset = "0xBB49E8", VA = "0xBB49E8")]
		public static void Destroy(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xBB4A8C", Offset = "0xBB4A8C", VA = "0xBB4A8C")]
		public MB_Utility()
		{
		}
	}
}
