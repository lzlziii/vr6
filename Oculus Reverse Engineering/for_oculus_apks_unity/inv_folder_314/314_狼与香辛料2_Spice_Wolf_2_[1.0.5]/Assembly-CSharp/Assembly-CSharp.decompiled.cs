using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Xml.Linq;
using Common;
using Game;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using TMPro;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.Playables;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceLocations;
using UnityEngine.ResourceManagement.ResourceProviders;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public static class OtherExtention
{
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51051C", Offset = "0x51051C")]
	private sealed class <>c__DisplayClass6_0<T>
	{
		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> self;

		[Token(Token = "0x6000F0D")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6000F0E")]
		internal bool <SafeAddRange>b__0(T x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xE6C9C0", Offset = "0xE6C9C0", VA = "0xE6C9C0")]
	public static bool SafeEquals(this float self, float other, float threshold = 0.001f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xE6CA44", Offset = "0xE6CA44", VA = "0xE6CA44")]
	public static bool IsNullOrEmpty(this string self)
	{
		return default(bool);
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xE6CA4C", Offset = "0xE6CA4C", VA = "0xE6CA4C")]
	public static int CountChar(this string self, char c)
	{
		return default(int);
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xE6CAD8", Offset = "0xE6CAD8", VA = "0xE6CAD8")]
	public static string[] Split(this string self, string keyword)
	{
		return null;
	}

	[Token(Token = "0x6000005")]
	public static bool IsNullOrEmpty<T>(this IList<T> self)
	{
		return default(bool);
	}

	[Token(Token = "0x6000006")]
	public static List<T> SafeAdd<T>(this List<T> self, T obj)
	{
		return null;
	}

	[Token(Token = "0x6000007")]
	public static List<T> SafeAddRange<T>(this List<T> self, List<T> objList)
	{
		return null;
	}

	[Token(Token = "0x6000008")]
	public static List<int> FindAllIndex<T>(this List<T> self, Predicate<T> match)
	{
		return null;
	}

	[Token(Token = "0x6000009")]
	public static bool EqualValues<T>(this T[] a1, T[] a2)
	{
		return default(bool);
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xE6CBE4", Offset = "0xE6CBE4", VA = "0xE6CBE4")]
	public static void Call(this Action action, bool setNullAfterCall = false)
	{
	}

	[Token(Token = "0x600000B")]
	public static void Call<T>(this Action<T> action, T arg, bool setNullAfterCall = false)
	{
	}

	[Token(Token = "0x600000C")]
	public static void Call<T1, T2>(this Action<T1, T2> action, T1 arg1, T2 arg2, bool setNullAfterCall = false)
	{
	}

	[Token(Token = "0x600000D")]
	public static void Call<T1, T2, T3>(this Action<T1, T2, T3> action, T1 arg1, T2 arg2, T3 arg3, bool setNullAfterCall = false)
	{
	}

	[Token(Token = "0x600000E")]
	public static void Call<T1, T2, T3, T4>(this Action<T1, T2, T3, T4> action, T1 arg1, T2 arg2, T3 arg3, T4 arg4, bool setNullAfterCall = false)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xE6CBF4", Offset = "0xE6CBF4", VA = "0xE6CBF4")]
	public static void ChangeLayer(this GameObject gameObject, string layerName)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xE6CC30", Offset = "0xE6CC30", VA = "0xE6CC30")]
	public static void ChangeLayerIncludeChildren(this GameObject gameObject, string layerName, bool includeInactive = true)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xE6CC94", Offset = "0xE6CC94", VA = "0xE6CC94")]
	public static void ChangeLayerIncludeChildren(this GameObject gameObject, int layerNo, bool includeInactive = true)
	{
	}

	[Token(Token = "0x6000012")]
	public static void RemoveComponent<T>(this GameObject self) where T : Component
	{
	}

	[Token(Token = "0x6000013")]
	public static void RemoveComponent<T>(this Component self) where T : Component
	{
	}
}
[Token(Token = "0x2000003")]
public static class TransformExtension
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 tempV3A;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Vector3 tempV3B;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Vector2 tempV2;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xE6E9FC", Offset = "0xE6E9FC", VA = "0xE6E9FC")]
	public static void ResetTransform(this Transform transform, bool worldSpace = false)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xE6EA88", Offset = "0xE6EA88", VA = "0xE6EA88")]
	public static void ResetPosition(this Transform transform, bool worldSpace = false)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xE6EB44", Offset = "0xE6EB44", VA = "0xE6EB44")]
	public static void ResetRotation(this Transform transform, bool worldSpace = false)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xE6EC00", Offset = "0xE6EC00", VA = "0xE6EC00")]
	public static void ResetLocalScale(this Transform transform)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xE6EC78", Offset = "0xE6EC78", VA = "0xE6EC78")]
	public static Vector2 GetV2Position(this Transform transform)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xE6ECDC", Offset = "0xE6ECDC", VA = "0xE6ECDC")]
	public static Vector2 GetV2LocalPosition(this Transform transform)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xE6ED40", Offset = "0xE6ED40", VA = "0xE6ED40")]
	public static Vector2 GetV2PositionXZ(this Transform transform)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xE6EDA8", Offset = "0xE6EDA8", VA = "0xE6EDA8")]
	public static Vector2 GetV2LocalPositionXZ(this Transform transform)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xE6EE10", Offset = "0xE6EE10", VA = "0xE6EE10")]
	public static void SetPosition(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xE6EEC8", Offset = "0xE6EEC8", VA = "0xE6EEC8")]
	public static void SetPosition(this Transform transform, float x, float y)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xE6EF68", Offset = "0xE6EF68", VA = "0xE6EF68")]
	public static void SetPositionX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xE6F014", Offset = "0xE6F014", VA = "0xE6F014")]
	public static void SetPositionY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xE6F0C0", Offset = "0xE6F0C0", VA = "0xE6F0C0")]
	public static void SetPositionZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xE6F16C", Offset = "0xE6F16C", VA = "0xE6F16C")]
	public static void SetLocalPosition(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xE6F224", Offset = "0xE6F224", VA = "0xE6F224")]
	public static void SetLocalPosition(this Transform transform, float x, float y)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xE6F2C4", Offset = "0xE6F2C4", VA = "0xE6F2C4")]
	public static void SetLocalPositionX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xE6F370", Offset = "0xE6F370", VA = "0xE6F370")]
	public static void SetLocalPositionY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xE6F41C", Offset = "0xE6F41C", VA = "0xE6F41C")]
	public static void SetLocalPositionZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xE6F4C8", Offset = "0xE6F4C8", VA = "0xE6F4C8")]
	public static void SetEulerAngles(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xE6F580", Offset = "0xE6F580", VA = "0xE6F580")]
	public static void SetEulerAnglesX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xE6F62C", Offset = "0xE6F62C", VA = "0xE6F62C")]
	public static void SetEulerAnglesY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xE6F6D8", Offset = "0xE6F6D8", VA = "0xE6F6D8")]
	public static void SetEulerAnglesZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xE6F784", Offset = "0xE6F784", VA = "0xE6F784")]
	public static void SetLocalEulerAngles(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xE6F83C", Offset = "0xE6F83C", VA = "0xE6F83C")]
	public static void SetLocalEulerAnglesX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xE6F8E8", Offset = "0xE6F8E8", VA = "0xE6F8E8")]
	public static void SetLocalEulerAnglesY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xE6F994", Offset = "0xE6F994", VA = "0xE6F994")]
	public static void SetLocalEulerAnglesZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xE6FA40", Offset = "0xE6FA40", VA = "0xE6FA40")]
	public static void SetLocalScale(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xE6FAF8", Offset = "0xE6FAF8", VA = "0xE6FAF8")]
	public static void SetLocalScaleX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xE6FBA4", Offset = "0xE6FBA4", VA = "0xE6FBA4")]
	public static void SetLocalScaleY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xE6FC50", Offset = "0xE6FC50", VA = "0xE6FC50")]
	public static void SetLocalScaleZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xE6FCFC", Offset = "0xE6FCFC", VA = "0xE6FCFC")]
	public static void SetLocalScaleSame(this Transform transfrom, float value)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xE6FDA4", Offset = "0xE6FDA4", VA = "0xE6FDA4")]
	public static void AddPosition(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xE6FE70", Offset = "0xE6FE70", VA = "0xE6FE70")]
	public static void AddPositionX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xE6FEFC", Offset = "0xE6FEFC", VA = "0xE6FEFC")]
	public static void AddPositionY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xE6FF88", Offset = "0xE6FF88", VA = "0xE6FF88")]
	public static void AddPositionZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xE70014", Offset = "0xE70014", VA = "0xE70014")]
	public static void AddLocalPosition(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xE700E0", Offset = "0xE700E0", VA = "0xE700E0")]
	public static void AddLocalPositionX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xE7016C", Offset = "0xE7016C", VA = "0xE7016C")]
	public static void AddLocalPositionY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xE701F8", Offset = "0xE701F8", VA = "0xE701F8")]
	public static void AddLocalPositionZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xE70284", Offset = "0xE70284", VA = "0xE70284")]
	public static void AddEulerAngles(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xE70350", Offset = "0xE70350", VA = "0xE70350")]
	public static void AddEulerAnglesX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xE703DC", Offset = "0xE703DC", VA = "0xE703DC")]
	public static void AddEulerAnglesY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xE70468", Offset = "0xE70468", VA = "0xE70468")]
	public static void AddEulerAnglesZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xE704F4", Offset = "0xE704F4", VA = "0xE704F4")]
	public static void AddLocalEulerAngles(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xE705C0", Offset = "0xE705C0", VA = "0xE705C0")]
	public static void AddLocalEulerAnglesX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xE7064C", Offset = "0xE7064C", VA = "0xE7064C")]
	public static void AddLocalEulerAnglesY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xE706D8", Offset = "0xE706D8", VA = "0xE706D8")]
	public static void AddLocalEulerAnglesZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xE70764", Offset = "0xE70764", VA = "0xE70764")]
	public static void AddLocalScale(this Transform transform, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xE70830", Offset = "0xE70830", VA = "0xE70830")]
	public static void AddLocalScaleX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xE708BC", Offset = "0xE708BC", VA = "0xE708BC")]
	public static void AddLocalScaleY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xE70948", Offset = "0xE70948", VA = "0xE70948")]
	public static void AddLocalScaleZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xE709D4", Offset = "0xE709D4", VA = "0xE709D4")]
	public static void LerpPosition(this Transform transform, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xE70AB0", Offset = "0xE70AB0", VA = "0xE70AB0")]
	public static void LerpPosition(this Transform transform, Vector2 to, float t)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xE70BDC", Offset = "0xE70BDC", VA = "0xE70BDC")]
	public static void LerpPosition(this Transform transform, Vector3 from, Vector3 to, float t)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xE70CAC", Offset = "0xE70CAC", VA = "0xE70CAC")]
	public static void LerpPosition(this Transform transform, Vector2 from, Vector2 to, float t)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xE70DF4", Offset = "0xE70DF4", VA = "0xE70DF4")]
	public static void LerpPositionX(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xE70EC4", Offset = "0xE70EC4", VA = "0xE70EC4")]
	public static void LerpPositionY(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xE70F94", Offset = "0xE70F94", VA = "0xE70F94")]
	public static void LerpPositionZ(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xE71064", Offset = "0xE71064", VA = "0xE71064")]
	public static void LerpPositionX(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xE71120", Offset = "0xE71120", VA = "0xE71120")]
	public static void LerpPositionY(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xE711DC", Offset = "0xE711DC", VA = "0xE711DC")]
	public static void LerpPositionZ(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xE71298", Offset = "0xE71298", VA = "0xE71298")]
	public static void LerpLocalPosition(this Transform transform, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xE71374", Offset = "0xE71374", VA = "0xE71374")]
	public static void LerpLocalPosition(this Transform transform, Vector2 to, float t)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xE714A0", Offset = "0xE714A0", VA = "0xE714A0")]
	public static void LerpLocalPosition(this Transform transform, Vector3 from, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xE71570", Offset = "0xE71570", VA = "0xE71570")]
	public static void LerpLocalPosition(this Transform transform, Vector2 from, Vector2 to, float t)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xE716B8", Offset = "0xE716B8", VA = "0xE716B8")]
	public static void LerpLocalPositionX(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xE71788", Offset = "0xE71788", VA = "0xE71788")]
	public static void LerpLocalPositionY(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xE71858", Offset = "0xE71858", VA = "0xE71858")]
	public static void LerpLocalPositionZ(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xE71928", Offset = "0xE71928", VA = "0xE71928")]
	public static void LerpLocalPositionX(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xE719E4", Offset = "0xE719E4", VA = "0xE719E4")]
	public static void LerpLocalPositionY(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xE71AA0", Offset = "0xE71AA0", VA = "0xE71AA0")]
	public static void LerpLocalPositionZ(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xE71B5C", Offset = "0xE71B5C", VA = "0xE71B5C")]
	public static void LerpRotate(this Transform transform, Quaternion to, float t)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xE71C50", Offset = "0xE71C50", VA = "0xE71C50")]
	public static void LerpRotate(this Transform transform, Vector3 to, float t)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xE71D34", Offset = "0xE71D34", VA = "0xE71D34")]
	public static void LerpRotate(this Transform transform, Quaternion from, Quaternion to, float t)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xE71E6C", Offset = "0xE71E6C", VA = "0xE71E6C")]
	public static void LerpRotate(this Transform transform, Vector3 from, Vector3 to, float t)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xE71FA8", Offset = "0xE71FA8", VA = "0xE71FA8")]
	public static void LerpEulerAnglesX(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xE72078", Offset = "0xE72078", VA = "0xE72078")]
	public static void LerpEulerAnglesY(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xE72148", Offset = "0xE72148", VA = "0xE72148")]
	public static void LerpEulerAnglesZ(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xE72218", Offset = "0xE72218", VA = "0xE72218")]
	public static void LerpEulerAnglesX(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xE722D4", Offset = "0xE722D4", VA = "0xE722D4")]
	public static void LerpEulerAnglesY(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xE72390", Offset = "0xE72390", VA = "0xE72390")]
	public static void LerpEulerAnglesZ(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xE7244C", Offset = "0xE7244C", VA = "0xE7244C")]
	public static void LerpLocalRotate(this Transform transform, Quaternion to, float t)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xE72540", Offset = "0xE72540", VA = "0xE72540")]
	public static void LerpLocalRotate(this Transform transform, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xE72624", Offset = "0xE72624", VA = "0xE72624")]
	public static void LerpLocalRotate(this Transform transform, Quaternion from, Quaternion to, float t)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xE7275C", Offset = "0xE7275C", VA = "0xE7275C")]
	public static void LerpLocalRotate(this Transform transform, Vector3 from, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xE72898", Offset = "0xE72898", VA = "0xE72898")]
	public static void LerpLocalEulerAnglesX(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xE72968", Offset = "0xE72968", VA = "0xE72968")]
	public static void LerpLocalEulerAnglesY(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xE72A38", Offset = "0xE72A38", VA = "0xE72A38")]
	public static void LerpLocalEulerAnglesZ(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE72B08", Offset = "0xE72B08", VA = "0xE72B08")]
	public static void LerpLocalEulerAnglesX(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xE72BC4", Offset = "0xE72BC4", VA = "0xE72BC4")]
	public static void LerpLocalEulerAnglesY(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xE72C80", Offset = "0xE72C80", VA = "0xE72C80")]
	public static void LerpLocalEulerAnglesZ(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xE72D3C", Offset = "0xE72D3C", VA = "0xE72D3C")]
	public static void SlerpRotate(this Transform transform, Quaternion to, float t)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xE72E30", Offset = "0xE72E30", VA = "0xE72E30")]
	public static void SlerpRotate(this Transform transform, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xE72F14", Offset = "0xE72F14", VA = "0xE72F14")]
	public static void SlerpRotate(this Transform transform, Quaternion from, Quaternion to, float t)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xE7304C", Offset = "0xE7304C", VA = "0xE7304C")]
	public static void SlerpRotate(this Transform transform, Vector3 from, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xE73188", Offset = "0xE73188", VA = "0xE73188")]
	public static void SlerpLocalRotate(this Transform transform, Quaternion to, float t)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xE7327C", Offset = "0xE7327C", VA = "0xE7327C")]
	public static void SlerpLocalRotate(this Transform transform, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xE73360", Offset = "0xE73360", VA = "0xE73360")]
	public static void SlerpLocalRotate(this Transform transform, Quaternion from, Quaternion to, float t)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xE73498", Offset = "0xE73498", VA = "0xE73498")]
	public static void SlerpLocalRotate(this Transform transform, Vector3 from, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xE735D4", Offset = "0xE735D4", VA = "0xE735D4")]
	public static void LerpLocalScale(this Transform transform, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xE736B0", Offset = "0xE736B0", VA = "0xE736B0")]
	public static void LerpLocalScale(this Transform transform, Vector3 from, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xE73780", Offset = "0xE73780", VA = "0xE73780")]
	public static void LerpLocalScaleX(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xE73850", Offset = "0xE73850", VA = "0xE73850")]
	public static void LerpLocalScaleY(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xE73920", Offset = "0xE73920", VA = "0xE73920")]
	public static void LerpLocalScaleZ(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xE739F0", Offset = "0xE739F0", VA = "0xE739F0")]
	public static void LerpLocalScaleX(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xE73AAC", Offset = "0xE73AAC", VA = "0xE73AAC")]
	public static void LerpLocalScaleY(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xE73B68", Offset = "0xE73B68", VA = "0xE73B68")]
	public static void LerpLocalScaleZ(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xE73C24", Offset = "0xE73C24", VA = "0xE73C24")]
	public static void SmoothStepPosition(this Transform transform, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xE73D54", Offset = "0xE73D54", VA = "0xE73D54")]
	public static void SmoothStepPosition(this Transform transform, Vector2 to, float t)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xE73E14", Offset = "0xE73E14", VA = "0xE73E14")]
	public static void SmoothStepPosition(this Transform transform, Vector3 from, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xE73F28", Offset = "0xE73F28", VA = "0xE73F28")]
	public static void SmoothStepPosition(this Transform transform, Vector2 from, Vector2 to, float t)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xE74024", Offset = "0xE74024", VA = "0xE74024")]
	public static void SmoothStepPositionX(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xE740F4", Offset = "0xE740F4", VA = "0xE740F4")]
	public static void SmoothStepPositionY(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xE741C4", Offset = "0xE741C4", VA = "0xE741C4")]
	public static void SmoothStepPositionZ(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xE74294", Offset = "0xE74294", VA = "0xE74294")]
	public static void SmoothStepPositionX(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xE74350", Offset = "0xE74350", VA = "0xE74350")]
	public static void SmoothStepPositionY(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xE7440C", Offset = "0xE7440C", VA = "0xE7440C")]
	public static void SmoothStepPositionZ(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xE744C8", Offset = "0xE744C8", VA = "0xE744C8")]
	public static void SmoothStepLocalPosition(this Transform transform, Vector3 to, float t)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xE745F8", Offset = "0xE745F8", VA = "0xE745F8")]
	public static void SmoothStepLocalPosition(this Transform transform, Vector2 to, float t)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xE746B8", Offset = "0xE746B8", VA = "0xE746B8")]
	public static void SmoothStepLocalPosition(this Transform transform, Vector3 from, Vector3 to, float t)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xE747CC", Offset = "0xE747CC", VA = "0xE747CC")]
	public static void SmoothStepLocalPosition(this Transform transform, Vector2 from, Vector2 to, float t)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xE748C8", Offset = "0xE748C8", VA = "0xE748C8")]
	public static void SmoothStepLocalPositionX(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xE74998", Offset = "0xE74998", VA = "0xE74998")]
	public static void SmoothStepLocalPositionY(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xE74A68", Offset = "0xE74A68", VA = "0xE74A68")]
	public static void SmoothStepLocalPositionZ(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xE74B38", Offset = "0xE74B38", VA = "0xE74B38")]
	public static void SmoothStepLocalPositionX(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xE74BF4", Offset = "0xE74BF4", VA = "0xE74BF4")]
	public static void SmoothStepLocalPositionY(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xE74CB0", Offset = "0xE74CB0", VA = "0xE74CB0")]
	public static void SmoothStepLocalPositionZ(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xE74D6C", Offset = "0xE74D6C", VA = "0xE74D6C")]
	public static void SmoothStepEulerAngles(this Transform transform, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xE74E9C", Offset = "0xE74E9C", VA = "0xE74E9C")]
	public static void SmoothStepEulerAngles(this Transform transform, Vector3 from, Vector3 to, float t)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xE74FB0", Offset = "0xE74FB0", VA = "0xE74FB0")]
	public static void SmoothStepEulerAnglesX(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xE75080", Offset = "0xE75080", VA = "0xE75080")]
	public static void SmoothStepEulerAnglesY(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xE75150", Offset = "0xE75150", VA = "0xE75150")]
	public static void SmoothStepEulerAnglesZ(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xE75220", Offset = "0xE75220", VA = "0xE75220")]
	public static void SmoothStepEulerAnglesX(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xE752DC", Offset = "0xE752DC", VA = "0xE752DC")]
	public static void SmoothStepEulerAnglesY(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xE75398", Offset = "0xE75398", VA = "0xE75398")]
	public static void SmoothStepEulerAnglesZ(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xE75454", Offset = "0xE75454", VA = "0xE75454")]
	public static void SmoothStepLocalEulerAngles(this Transform transform, Vector3 to, float t)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xE75584", Offset = "0xE75584", VA = "0xE75584")]
	public static void SmoothStepLocalEulerAngles(this Transform transform, Vector3 from, Vector3 to, float t)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xE75698", Offset = "0xE75698", VA = "0xE75698")]
	public static void SmoothStepLocalEulerAnglesX(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xE75768", Offset = "0xE75768", VA = "0xE75768")]
	public static void SmoothStepLocalEulerAnglesY(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xE75838", Offset = "0xE75838", VA = "0xE75838")]
	public static void SmoothStepLocalEulerAnglesZ(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xE75908", Offset = "0xE75908", VA = "0xE75908")]
	public static void SmoothStepLocalEulerAnglesX(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xE759C4", Offset = "0xE759C4", VA = "0xE759C4")]
	public static void SmoothStepLocalEulerAnglesY(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xE75A80", Offset = "0xE75A80", VA = "0xE75A80")]
	public static void SmoothStepLocalEulerAnglesZ(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xE75B3C", Offset = "0xE75B3C", VA = "0xE75B3C")]
	public static void SmoothStepLocalScale(this Transform transform, Vector3 to, float t)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xE75C6C", Offset = "0xE75C6C", VA = "0xE75C6C")]
	public static void SmoothStepLocalScale(this Transform transform, Vector2 to, float t)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xE75D7C", Offset = "0xE75D7C", VA = "0xE75D7C")]
	public static void SmoothStepLocalScale(this Transform transform, Vector3 from, Vector3 to, float t)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xE75E90", Offset = "0xE75E90", VA = "0xE75E90")]
	public static void SmoothStepLocalScale(this Transform transform, Vector2 from, Vector2 to, float t)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xE75F94", Offset = "0xE75F94", VA = "0xE75F94")]
	public static void SmoothStepLocalScaleX(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xE76064", Offset = "0xE76064", VA = "0xE76064")]
	public static void SmoothStepLocalScaleY(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xE76134", Offset = "0xE76134", VA = "0xE76134")]
	public static void SmoothStepLocalScaleZ(this Transform transform, float to, float t)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xE76204", Offset = "0xE76204", VA = "0xE76204")]
	public static void SmoothStepLocalScaleX(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xE762C0", Offset = "0xE762C0", VA = "0xE762C0")]
	public static void SmoothStepLocalScaleY(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xE7637C", Offset = "0xE7637C", VA = "0xE7637C")]
	public static void SmoothStepLocalScaleZ(this Transform transform, float from, float to, float t)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xE76438", Offset = "0xE76438", VA = "0xE76438")]
	public static void ClampPosition(this Transform transform, Vector3 min, Vector3 max)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xE76578", Offset = "0xE76578", VA = "0xE76578")]
	public static void ClampPosition(this Transform transform, Vector2 min, Vector2 max)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xE76680", Offset = "0xE76680", VA = "0xE76680")]
	public static void ClampPositionX(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xE76750", Offset = "0xE76750", VA = "0xE76750")]
	public static void ClampPositionY(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xE76820", Offset = "0xE76820", VA = "0xE76820")]
	public static void ClampPositionZ(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xE768F0", Offset = "0xE768F0", VA = "0xE768F0")]
	public static void ClampLocalPosition(this Transform transform, Vector3 min, Vector3 max)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xE76A30", Offset = "0xE76A30", VA = "0xE76A30")]
	public static void ClampLocalPosition(this Transform transform, Vector2 min, Vector2 max)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xE76B38", Offset = "0xE76B38", VA = "0xE76B38")]
	public static void ClampLocalPositionX(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xE76C08", Offset = "0xE76C08", VA = "0xE76C08")]
	public static void ClampLocalPositionY(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xE76CD8", Offset = "0xE76CD8", VA = "0xE76CD8")]
	public static void ClampLocalPositionZ(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xE76DA8", Offset = "0xE76DA8", VA = "0xE76DA8")]
	public static void ClampEulerAngles(this Transform transform, Vector3 min, Vector3 max)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xE76EE8", Offset = "0xE76EE8", VA = "0xE76EE8")]
	public static void ClampEulerAnglesX(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xE76FB8", Offset = "0xE76FB8", VA = "0xE76FB8")]
	public static void ClampEulerAnglesY(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xE77088", Offset = "0xE77088", VA = "0xE77088")]
	public static void ClampEulerAnglesZ(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xE77158", Offset = "0xE77158", VA = "0xE77158")]
	public static void ClampLocalEulerAngles(this Transform transform, Vector3 min, Vector3 max)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xE77298", Offset = "0xE77298", VA = "0xE77298")]
	public static void ClampLocalEulerAnglesX(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xE77368", Offset = "0xE77368", VA = "0xE77368")]
	public static void ClampLocalEulerAnglesY(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xE77438", Offset = "0xE77438", VA = "0xE77438")]
	public static void ClampLocalEulerAnglesZ(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xE77508", Offset = "0xE77508", VA = "0xE77508")]
	public static void ClampLocalScale(this Transform transform, Vector3 min, Vector3 max)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xE77648", Offset = "0xE77648", VA = "0xE77648")]
	public static void ClampLocalScaleX(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xE77718", Offset = "0xE77718", VA = "0xE77718")]
	public static void ClampLocalScaleY(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xE777E8", Offset = "0xE777E8", VA = "0xE777E8")]
	public static void ClampLocalScaleZ(this Transform transform, float min, float max)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xE778B8", Offset = "0xE778B8", VA = "0xE778B8")]
	public static void HasChanged(this Transform transform, Action changed)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xE77914", Offset = "0xE77914", VA = "0xE77914")]
	private static void HasChanged(this Transform transform, Action<Transform> changed)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xE779B0", Offset = "0xE779B0", VA = "0xE779B0")]
	public static void HasChangedInChildren(this Transform transform, Action<Transform> changed)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xE77A94", Offset = "0xE77A94", VA = "0xE77A94")]
	public static void HasChangedInParent(this Transform transform, Action<Transform> changed)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xE77B78", Offset = "0xE77B78", VA = "0xE77B78")]
	public static void LookAt2D(this Transform transform, Transform target)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xE77E08", Offset = "0xE77E08", VA = "0xE77E08")]
	public static void LookAt2D(this Transform transform, Vector2 target)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xE77ED8", Offset = "0xE77ED8", VA = "0xE77ED8")]
	public static void LookAt2D(this Transform transform, Transform target, float angle)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xE7800C", Offset = "0xE7800C", VA = "0xE7800C")]
	public static void LookAt2D(this Transform transform, Vector2 target, float angle)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xE780E0", Offset = "0xE780E0", VA = "0xE780E0")]
	public static void LookAt2D(this Transform transform, Transform target, Vector3 axis)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xE781E8", Offset = "0xE781E8", VA = "0xE781E8")]
	public static void LookAt2D(this Transform transform, Vector2 target, Vector3 axis)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xE78290", Offset = "0xE78290", VA = "0xE78290")]
	public static void LookAt2D(this Transform transform, Transform target, Vector3 axis, float angle)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xE77CA8", Offset = "0xE77CA8", VA = "0xE77CA8")]
	public static void LookAt2D(this Transform transform, Vector2 target, Vector3 axis, float angle)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xE783A4", Offset = "0xE783A4", VA = "0xE783A4")]
	public static Transform FindInChildren(this Transform self, string name)
	{
		return null;
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xE784E4", Offset = "0xE784E4", VA = "0xE784E4")]
	public static bool FrontCheck(this Transform self, ref Vector3 otherPosition, float checkAngle)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xE785FC", Offset = "0xE785FC", VA = "0xE785FC")]
	public static void AttachParent(this Transform self, Transform parent)
	{
	}
}
[Token(Token = "0x2000004")]
public static class UIUtility
{
	[Token(Token = "0x20001FB")]
	public enum InputType
	{
		[Token(Token = "0x4000742")]
		Left,
		[Token(Token = "0x4000743")]
		Right,
		[Token(Token = "0x4000744")]
		Up,
		[Token(Token = "0x4000745")]
		Down,
		[Token(Token = "0x4000746")]
		Decide,
		[Token(Token = "0x4000747")]
		Max
	}

	[Token(Token = "0x20001FC")]
	public struct RepeatInput
	{
		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InputType inputType;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float time;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518C74", Offset = "0x518C74")]
		private bool <isPressed>k__BackingField;

		[Token(Token = "0x17000133")]
		public bool isPressed
		{
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x59C88C", Offset = "0x59C88C", VA = "0x59C88C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B780", Offset = "0x51B780")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x59C894", Offset = "0x59C894", VA = "0x59C894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B790", Offset = "0x51B790")]
			set
			{
			}
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x59C8A0", Offset = "0x59C8A0", VA = "0x59C8A0")]
		private RepeatInput(int t)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x59C8B4", Offset = "0x59C8B4", VA = "0x59C8B4")]
		public void Initialize()
		{
		}
	}

	[Token(Token = "0x20001FD")]
	public struct RepeatSpeedInfo
	{
		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float repeatSpeedTime;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float speedUpTime;

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x59C8C0", Offset = "0x59C8C0", VA = "0x59C8C0")]
		public RepeatSpeedInfo(float speedUp, float repeatSpeed)
		{
		}
	}

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RepeatSpeedInfo[] s_repeatSpeeds;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xE7877C", Offset = "0xE7877C", VA = "0xE7877C")]
	public static void CalcRepeatInput(ref float pushTime, ref RepeatInput[] eInputs)
	{
	}
}
[Token(Token = "0x2000005")]
public class CheekComponent : MonoBehaviour
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5108C8", Offset = "0x5108C8")]
	[SerializeField]
	private SkinnedMeshRenderer faceMesh;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510914", Offset = "0x510914")]
	[SerializeField]
	private int matIndex;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510960", Offset = "0x510960")]
	[SerializeField]
	private string cheekSmallShapeName;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string cheekBigShapeName;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material faceMat;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int smallIndex;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int bigIndex;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int smallShaderIndex;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int bigShaderIndex;

	[Token(Token = "0x17000001")]
	public SkinnedMeshRenderer FaceMesh
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x765884", Offset = "0x765884", VA = "0x765884")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x76588C", Offset = "0x76588C", VA = "0x76588C")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public int MatIndex
	{
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x765894", Offset = "0x765894", VA = "0x765894")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x76589C", Offset = "0x76589C", VA = "0x76589C")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public string CheekSmallShapeName
	{
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x7658A4", Offset = "0x7658A4", VA = "0x7658A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x7658AC", Offset = "0x7658AC", VA = "0x7658AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public string CheekBigShapeName
	{
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x7658B4", Offset = "0x7658B4", VA = "0x7658B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x7658BC", Offset = "0x7658BC", VA = "0x7658BC")]
		set
		{
		}
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x7658C4", Offset = "0x7658C4", VA = "0x7658C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x7659F0", Offset = "0x7659F0", VA = "0x7659F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x765A8C", Offset = "0x765A8C", VA = "0x765A8C")]
	public CheekComponent()
	{
	}
}
[Token(Token = "0x2000006")]
public class RuntimeSettingComponent : MonoBehaviour
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5109BC", Offset = "0x5109BC")]
	[HideInInspector]
	public bool isObjectDelete;

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xE6CE60", Offset = "0xE6CE60", VA = "0xE6CE60")]
	public RuntimeSettingComponent()
	{
	}
}
[Token(Token = "0x2000007")]
public class SceneCollision : MonoBehaviour
{
	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject commonCollider;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject main02Collider;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject main05Collider;

	[Token(Token = "0x17000005")]
	public GameObject CommonCollider
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0xE6E0C4", Offset = "0xE6E0C4", VA = "0xE6E0C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000006")]
	public GameObject Main02Collider
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0xE6E0CC", Offset = "0xE6E0CC", VA = "0xE6E0CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000007")]
	public GameObject Main05Collider
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xE6E0D4", Offset = "0xE6E0D4", VA = "0xE6E0D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xE6E0DC", Offset = "0xE6E0DC", VA = "0xE6E0DC")]
	public SceneCollision()
	{
	}
}
[Token(Token = "0x2000008")]
public class CreditData : ScriptableObject
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510A38", Offset = "0x510A38")]
	[SerializeField]
	[Multiline]
	private string[] typeArray;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510A94", Offset = "0x510A94")]
	[SerializeField]
	[Multiline]
	private string[] valueArray;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510AF0", Offset = "0x510AF0")]
	[SerializeField]
	[Multiline]
	private string[] jobJpArray;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510B4C", Offset = "0x510B4C")]
	[SerializeField]
	[Multiline]
	private string[] jobEnArray;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510BA8", Offset = "0x510BA8")]
	[SerializeField]
	[Multiline]
	private string[] jobTcArray;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510C04", Offset = "0x510C04")]
	[SerializeField]
	[Multiline]
	private string[] jobScArray;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510C60", Offset = "0x510C60")]
	[SerializeField]
	[Multiline]
	private string[] nameJpArray;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510CBC", Offset = "0x510CBC")]
	[SerializeField]
	[Multiline]
	private string[] nameEnArray;

	[Token(Token = "0x17000008")]
	public string[] TypeArray
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x77267C", Offset = "0x77267C", VA = "0x77267C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x772684", Offset = "0x772684", VA = "0x772684")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public string[] ValueArray
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x77268C", Offset = "0x77268C", VA = "0x77268C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x772694", Offset = "0x772694", VA = "0x772694")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public string[] JobJpArray
	{
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x77269C", Offset = "0x77269C", VA = "0x77269C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x7726A4", Offset = "0x7726A4", VA = "0x7726A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public string[] JobEnArray
	{
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x7726AC", Offset = "0x7726AC", VA = "0x7726AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x7726B4", Offset = "0x7726B4", VA = "0x7726B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public string[] JobTcArray
	{
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x7726BC", Offset = "0x7726BC", VA = "0x7726BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x7726C4", Offset = "0x7726C4", VA = "0x7726C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public string[] JobScArray
	{
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x7726CC", Offset = "0x7726CC", VA = "0x7726CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x7726D4", Offset = "0x7726D4", VA = "0x7726D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public string[] NameJpArray
	{
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x7726DC", Offset = "0x7726DC", VA = "0x7726DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x7726E4", Offset = "0x7726E4", VA = "0x7726E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public string[] NameEnArray
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x7726EC", Offset = "0x7726EC", VA = "0x7726EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x7726F4", Offset = "0x7726F4", VA = "0x7726F4")]
		set
		{
		}
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x7726FC", Offset = "0x7726FC", VA = "0x7726FC")]
	public CreditData()
	{
	}
}
[Token(Token = "0x2000009")]
public class CreditImage : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510D18", Offset = "0x510D18")]
	[SerializeField]
	private SpriteRenderer[] spriteRendererArray;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510D64", Offset = "0x510D64")]
	[SerializeField]
	private float totalTime;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeOfOne;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color color;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isEnable;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isEnd;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float time;

	[Token(Token = "0x4000022")]
	private const float PopY = 1.5f;

	[Token(Token = "0x4000023")]
	private const float FadeTime = 2f;

	[Token(Token = "0x17000010")]
	public float TotalTime
	{
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x772704", Offset = "0x772704", VA = "0x772704")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x77270C", Offset = "0x77270C", VA = "0x77270C")]
		set
		{
		}
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x772714", Offset = "0x772714", VA = "0x772714")]
	public void Init()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x77284C", Offset = "0x77284C", VA = "0x77284C")]
	public void OnUpdate()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x772AF8", Offset = "0x772AF8", VA = "0x772AF8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x772A98", Offset = "0x772A98", VA = "0x772A98")]
	private void OnEnd()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x772BC4", Offset = "0x772BC4", VA = "0x772BC4")]
	public CreditImage()
	{
	}
}
[Token(Token = "0x200000A")]
public class CreditParent : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510DB0", Offset = "0x510DB0")]
	public float totalHeight;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510DE8", Offset = "0x510DE8")]
	public float speed;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510E20", Offset = "0x510E20")]
	public Credit[] creditArray;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510E58", Offset = "0x510E58")]
	public CreditImage image;

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x772BCC", Offset = "0x772BCC", VA = "0x772BCC")]
	public CreditParent()
	{
	}
}
[Token(Token = "0x200000B")]
public class DebugSerif : MonoBehaviour
{
	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x772BD4", Offset = "0x772BD4", VA = "0x772BD4")]
	public void SetSerifType(int id)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x772CBC", Offset = "0x772CBC", VA = "0x772CBC")]
	public DebugSerif()
	{
	}
}
[Token(Token = "0x200000C")]
public class DebugWindowScene : MonoBehaviour
{
	[Token(Token = "0x6000100")]
	[Address(RVA = "0x772CC4", Offset = "0x772CC4", VA = "0x772CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x772D3C", Offset = "0x772D3C", VA = "0x772D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x772D40", Offset = "0x772D40", VA = "0x772D40")]
	public void WindowOpen()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x772DD4", Offset = "0x772DD4", VA = "0x772DD4")]
	public void WindowClose()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x772E68", Offset = "0x772E68", VA = "0x772E68")]
	public DebugWindowScene()
	{
	}
}
[Token(Token = "0x200000D")]
public class AttachEffect : MonoBehaviour
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string attachTransName;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform attachTrans;

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x7642AC", Offset = "0x7642AC", VA = "0x7642AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x764374", Offset = "0x764374", VA = "0x764374")]
	private void Update()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x7643A8", Offset = "0x7643A8", VA = "0x7643A8")]
	public AttachEffect()
	{
	}
}
[Token(Token = "0x200000E")]
public class SaveStream
{
	[Token(Token = "0x20001FE")]
	public delegate void OnLoadSucceeded(ref byte[] data);

	[Token(Token = "0x20001FF")]
	public delegate void OnLoadFailed(int result);

	[Token(Token = "0x2000200")]
	public delegate void OnSaveSucceeded();

	[Token(Token = "0x2000201")]
	public delegate void OnSaveFailed(int result);

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected string savePath;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected string saveName;

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xE6CE68", Offset = "0xE6CE68", VA = "0xE6CE68", Slot = "4")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xE6CEDC", Offset = "0xE6CEDC", VA = "0xE6CEDC", Slot = "5")]
	public virtual bool Load([Optional] OnLoadSucceeded onSuccess, [Optional] OnLoadFailed onFailed)
	{
		return default(bool);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xE6D770", Offset = "0xE6D770", VA = "0xE6D770", Slot = "6")]
	public virtual bool Save(ref byte[] data, [Optional] OnSaveSucceeded onSuccess, [Optional] OnSaveFailed onFailed)
	{
		return default(bool);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xE6DE54", Offset = "0xE6DE54", VA = "0xE6DE54", Slot = "7")]
	public virtual bool IsExistSaveData()
	{
		return default(bool);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xE6DEB0", Offset = "0xE6DEB0", VA = "0xE6DEB0", Slot = "8")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xE6DEB4", Offset = "0xE6DEB4", VA = "0xE6DEB4")]
	public SaveStream()
	{
	}
}
[Token(Token = "0x200000F")]
public class SwitchScreen : BaseMonoBehaviour
{
	[Token(Token = "0x600010E")]
	[Address(RVA = "0xE6E1D8", Offset = "0xE6E1D8", VA = "0xE6E1D8")]
	private new void Awake()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xE6E200", Offset = "0xE6E200", VA = "0xE6E200")]
	public SwitchScreen()
	{
	}
}
[Token(Token = "0x2000010")]
public class VolumeDirectionController : MonoBehaviour
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510EA0", Offset = "0x510EA0")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510EEC", Offset = "0x510EEC")]
	[SerializeField]
	private Transform transformCache;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform targetTrans;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float CosSmall;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float CosLarge;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float toVolume;

	[Token(Token = "0x17000011")]
	public AudioSource AudioSource
	{
		[Token(Token = "0x6000110")]
		[Address(RVA = "0xE79D6C", Offset = "0xE79D6C", VA = "0xE79D6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000111")]
		[Address(RVA = "0xE79D74", Offset = "0xE79D74", VA = "0xE79D74")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public Transform TransformCache
	{
		[Token(Token = "0x6000112")]
		[Address(RVA = "0xE79D7C", Offset = "0xE79D7C", VA = "0xE79D7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000113")]
		[Address(RVA = "0xE79D84", Offset = "0xE79D84", VA = "0xE79D84")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Transform TargetTrans
	{
		[Token(Token = "0x6000114")]
		[Address(RVA = "0xE79D8C", Offset = "0xE79D8C", VA = "0xE79D8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000115")]
		[Address(RVA = "0xE79D94", Offset = "0xE79D94", VA = "0xE79D94")]
		set
		{
		}
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xE79D9C", Offset = "0xE79D9C", VA = "0xE79D9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xE7A034", Offset = "0xE7A034", VA = "0xE7A034")]
	public VolumeDirectionController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000011")]
public class AdjustSkyboxBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve exposureCurve;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isPlayBefore;

	[Token(Token = "0x17000014")]
	public bool IsPlayBefore
	{
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x763C58", Offset = "0x763C58", VA = "0x763C58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600011A")]
		[Address(RVA = "0x763C60", Offset = "0x763C60", VA = "0x763C60")]
		set
		{
		}
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x763C6C", Offset = "0x763C6C", VA = "0x763C6C")]
	public AdjustSkyboxBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class AdjustSkyboxClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AdjustSkyboxBehaviour template;

	[Token(Token = "0x17000015")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600011C")]
		[Address(RVA = "0x763C74", Offset = "0x763C74", VA = "0x763C74", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x763C7C", Offset = "0x763C7C", VA = "0x763C7C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x763D1C", Offset = "0x763D1C", VA = "0x763D1C")]
	public AdjustSkyboxClip()
	{
	}
}
[Token(Token = "0x2000013")]
public class AdjustSkyboxMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int ShaderId;

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x763D84", Offset = "0x763D84", VA = "0x763D84", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x763E98", Offset = "0x763E98", VA = "0x763E98", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x764150", Offset = "0x764150", VA = "0x764150")]
	public AdjustSkyboxMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000014")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x50FCAC", Offset = "0x50FCAC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x50FCAC", Offset = "0x50FCAC")]
public class AdjustSkyboxTrack : TrackAsset
{
	[Token(Token = "0x6000123")]
	[Address(RVA = "0x7641AC", Offset = "0x7641AC", VA = "0x7641AC", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x764244", Offset = "0x764244", VA = "0x764244")]
	public AdjustSkyboxTrack()
	{
	}
}
[Token(Token = "0x2000015")]
public class ChangeLightmapMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x6000125")]
	[Address(RVA = "0x76507C", Offset = "0x76507C", VA = "0x76507C")]
	public ChangeLightmapMixerBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000016")]
public class LagCheckBehaviour : PlayableBehaviour
{
	[Token(Token = "0x6000126")]
	[Address(RVA = "0x7621C4", Offset = "0x7621C4", VA = "0x7621C4", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x7621C8", Offset = "0x7621C8", VA = "0x7621C8")]
	public LagCheckBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000017")]
public class LagCheckClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LagCheckBehaviour template;

	[Token(Token = "0x17000016")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x7621D0", Offset = "0x7621D0", VA = "0x7621D0", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x7621D8", Offset = "0x7621D8", VA = "0x7621D8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x7622A8", Offset = "0x7622A8", VA = "0x7622A8")]
	public LagCheckClip()
	{
	}
}
[Token(Token = "0x2000018")]
public class LagCheckMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000037")]
	private const float LagThreshold = 0.0025000002f;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float startTime;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float baseTime;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int ResetCounter;

	[Token(Token = "0x17000017")]
	public static bool IsTimelineReset
	{
		[Token(Token = "0x600012B")]
		[Address(RVA = "0x762310", Offset = "0x762310", VA = "0x762310")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x762368", Offset = "0x762368", VA = "0x762368")]
		set
		{
		}
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x7623BC", Offset = "0x7623BC", VA = "0x7623BC", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x762590", Offset = "0x762590", VA = "0x762590", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x762504", Offset = "0x762504", VA = "0x762504")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x7625D0", Offset = "0x7625D0", VA = "0x7625D0")]
	public LagCheckMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x50FD34", Offset = "0x50FD34")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x50FD34", Offset = "0x50FD34")]
public class LagCheckTrack : TrackAsset
{
	[Token(Token = "0x6000131")]
	[Address(RVA = "0x7625D8", Offset = "0x7625D8", VA = "0x7625D8", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x762670", Offset = "0x762670", VA = "0x762670")]
	public LagCheckTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200001A")]
public class LightActiveBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isCallSetAudioTrack;

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x762B40", Offset = "0x762B40", VA = "0x762B40")]
	public LightActiveBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200001B")]
public class LightActiveClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightActiveBehaviour template;

	[Token(Token = "0x17000018")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000134")]
		[Address(RVA = "0x762B48", Offset = "0x762B48", VA = "0x762B48", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x762B50", Offset = "0x762B50", VA = "0x762B50", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x762BF0", Offset = "0x762BF0", VA = "0x762BF0")]
	public LightActiveClip()
	{
	}
}
[Token(Token = "0x200001C")]
public class LightActiveMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isInit;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool isActive;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x9FDB70", Offset = "0x9FDB70", VA = "0x9FDB70", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x9FDDCC", Offset = "0x9FDDCC", VA = "0x9FDDCC", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x9FDDF8", Offset = "0x9FDDF8", VA = "0x9FDDF8")]
	public LightActiveMixerBehaviour()
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x50FDB8", Offset = "0x50FDB8")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x50FDB8", Offset = "0x50FDB8")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x50FDB8", Offset = "0x50FDB8")]
public class LightActiveTrack : TrackAsset
{
	[Token(Token = "0x600013A")]
	[Address(RVA = "0x9FDE08", Offset = "0x9FDE08", VA = "0x9FDE08", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x9FDEA0", Offset = "0x9FDEA0", VA = "0x9FDEA0")]
	public LightActiveTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200001E")]
public class LipSyncBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isPlayFirst;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool isPlayFinishFirst;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double beforeTime;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510F48", Offset = "0x510F48")]
	public AudioClip playAudio;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510F80", Offset = "0x510F80")]
	public float clipIn;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SoundDefines.MixerType mixerType;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isMute;

	[Token(Token = "0x17000019")]
	public bool IsPlayFirst
	{
		[Token(Token = "0x600013C")]
		[Address(RVA = "0x9FDF08", Offset = "0x9FDF08", VA = "0x9FDF08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600013D")]
		[Address(RVA = "0x9FDF10", Offset = "0x9FDF10", VA = "0x9FDF10")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public bool IsPlayFinishFirst
	{
		[Token(Token = "0x600013E")]
		[Address(RVA = "0x9FDF1C", Offset = "0x9FDF1C", VA = "0x9FDF1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600013F")]
		[Address(RVA = "0x9FDF24", Offset = "0x9FDF24", VA = "0x9FDF24")]
		set
		{
		}
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x9FDF30", Offset = "0x9FDF30", VA = "0x9FDF30", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x9FDF78", Offset = "0x9FDF78", VA = "0x9FDF78")]
	public void Play(AudioSource source)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x9FE0C0", Offset = "0x9FE0C0", VA = "0x9FE0C0")]
	public void OnUpdate(AudioSource source, double time, float deltaTime)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x9FE140", Offset = "0x9FE140", VA = "0x9FE140", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x9FE258", Offset = "0x9FE258", VA = "0x9FE258")]
	public void Finish(AudioSource source, bool isStop)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x9FE36C", Offset = "0x9FE36C", VA = "0x9FE36C")]
	public LipSyncBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200001F")]
public class LipSyncClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510FB8", Offset = "0x510FB8")]
	public LipSyncBehaviour template;

	[Token(Token = "0x1700001B")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000146")]
		[Address(RVA = "0x9FE37C", Offset = "0x9FE37C", VA = "0x9FE37C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x9FE384", Offset = "0x9FE384", VA = "0x9FE384", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x9FE424", Offset = "0x9FE424", VA = "0x9FE424")]
	public LipSyncClip()
	{
	}
}
[Token(Token = "0x2000020")]
public class LipSyncMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audioSource;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SoundDefines.MixerType mixerType;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x9FE494", Offset = "0x9FE494", VA = "0x9FE494", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x9FE754", Offset = "0x9FE754", VA = "0x9FE754", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x9FE898", Offset = "0x9FE898", VA = "0x9FE898")]
	public LipSyncMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000021")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x50FE6C", Offset = "0x50FE6C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x50FE6C", Offset = "0x50FE6C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x50FE6C", Offset = "0x50FE6C")]
public class LipSyncTrack : TrackAsset
{
	[Token(Token = "0x600014C")]
	[Address(RVA = "0x9FE8A0", Offset = "0x9FE8A0", VA = "0x9FE8A0", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x9FE938", Offset = "0x9FE938", VA = "0x9FE938")]
	public LipSyncTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000022")]
public class LookUserBehaviour : PlayableBehaviour
{
	[Token(Token = "0x600014E")]
	[Address(RVA = "0x9FF410", Offset = "0x9FF410", VA = "0x9FF410", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x9FF414", Offset = "0x9FF414", VA = "0x9FF414")]
	public LookUserBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000023")]
public class LookUserClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LookUserBehaviour template;

	[Token(Token = "0x1700001C")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000150")]
		[Address(RVA = "0x9FF41C", Offset = "0x9FF41C", VA = "0x9FF41C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x9FF424", Offset = "0x9FF424", VA = "0x9FF424", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x9FF4C4", Offset = "0x9FF4C4", VA = "0x9FF4C4")]
	public LookUserClip()
	{
	}
}
[Token(Token = "0x2000024")]
public class LookUserMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isEnable;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LookPlayer lookPlayer;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x9FF52C", Offset = "0x9FF52C", VA = "0x9FF52C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x9FF7DC", Offset = "0x9FF7DC", VA = "0x9FF7DC")]
	public LookUserMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000025")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x50FF1C", Offset = "0x50FF1C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x50FF1C", Offset = "0x50FF1C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x50FF1C", Offset = "0x50FF1C")]
public class LookUserTrack : TrackAsset
{
	[Token(Token = "0x6000155")]
	[Address(RVA = "0x9FF7E4", Offset = "0x9FF7E4", VA = "0x9FF7E4", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x9FF87C", Offset = "0x9FF87C", VA = "0x9FF87C")]
	public LookUserTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000026")]
public class BloomBehaviour : PlayableBehaviour
{
	[Token(Token = "0x2000202")]
	public enum Type
	{
		[Token(Token = "0x400074E")]
		FadeRate,
		[Token(Token = "0x400074F")]
		Immediate
	}

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isPlayFirst;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool isPlayFinishFirst;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool isInitialized;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float intensity;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float diffusion;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float intensity_pc;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float diffusion_pc;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float defalutIntensity;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float defalutDiffusion;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Type type;

	[Token(Token = "0x1700001D")]
	public bool IsPlayFirst
	{
		[Token(Token = "0x6000157")]
		[Address(RVA = "0x7643B0", Offset = "0x7643B0", VA = "0x7643B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000158")]
		[Address(RVA = "0x7643B8", Offset = "0x7643B8", VA = "0x7643B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public bool IsPlayFinishFirst
	{
		[Token(Token = "0x6000159")]
		[Address(RVA = "0x7643C4", Offset = "0x7643C4", VA = "0x7643C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600015A")]
		[Address(RVA = "0x7643CC", Offset = "0x7643CC", VA = "0x7643CC")]
		set
		{
		}
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x7643D8", Offset = "0x7643D8", VA = "0x7643D8", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x764424", Offset = "0x764424", VA = "0x764424")]
	public void Play(Bloom bloom)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x7644D8", Offset = "0x7644D8", VA = "0x7644D8")]
	public void OnUpdate(Bloom bloom)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x7646A0", Offset = "0x7646A0", VA = "0x7646A0", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x7646E8", Offset = "0x7646E8", VA = "0x7646E8")]
	public void Finish(Bloom bloom)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x76479C", Offset = "0x76479C", VA = "0x76479C")]
	public BloomBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000027")]
public class BloomClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BloomBehaviour template;

	[Token(Token = "0x1700001F")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000161")]
		[Address(RVA = "0x7647A4", Offset = "0x7647A4", VA = "0x7647A4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x7647AC", Offset = "0x7647AC", VA = "0x7647AC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x76484C", Offset = "0x76484C", VA = "0x76484C")]
	public BloomClip()
	{
	}
}
[Token(Token = "0x2000028")]
public class BloomMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Bloom bloomSetting;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x7648B4", Offset = "0x7648B4", VA = "0x7648B4", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x764B28", Offset = "0x764B28", VA = "0x764B28", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x764B50", Offset = "0x764B50", VA = "0x764B50")]
	public BloomMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000029")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x50FFCC", Offset = "0x50FFCC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x50FFCC", Offset = "0x50FFCC")]
public class BloomTrack : TrackAsset
{
	[Token(Token = "0x6000167")]
	[Address(RVA = "0x764B58", Offset = "0x764B58", VA = "0x764B58", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x764BF0", Offset = "0x764BF0", VA = "0x764BF0")]
	public BloomTrack()
	{
	}
}
[Token(Token = "0x200002A")]
public class TimelineFadeMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x6000169")]
	[Address(RVA = "0xE6E9F0", Offset = "0xE6E9F0", VA = "0xE6E9F0", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xE6E9F4", Offset = "0xE6E9F4", VA = "0xE6E9F4")]
	public TimelineFadeMixerBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200002B")]
public class XMLStringData
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x510FF0", Offset = "0x510FF0")]
	[SerializeField]
	[Multiline]
	public string stringID;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51104C", Offset = "0x51104C")]
	[SerializeField]
	[Multiline]
	public string stringJP;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5110A8", Offset = "0x5110A8")]
	[SerializeField]
	[Multiline]
	public string stringEN;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x511104", Offset = "0x511104")]
	[SerializeField]
	[Multiline]
	public string stringTC;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x511160", Offset = "0x511160")]
	[SerializeField]
	[Multiline]
	public string stringSC;

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xE7A884", Offset = "0xE7A884", VA = "0xE7A884")]
	public XMLStringData()
	{
	}
}
[Token(Token = "0x200002C")]
public class UIStringData : ScriptableObject
{
	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5111BC", Offset = "0x5111BC")]
	public List<XMLStringData> textList;

	[Token(Token = "0x17000020")]
	public List<XMLStringData> TextList
	{
		[Token(Token = "0x600016C")]
		[Address(RVA = "0xE78764", Offset = "0xE78764", VA = "0xE78764")]
		get
		{
			return null;
		}
		[Token(Token = "0x600016D")]
		[Address(RVA = "0xE7876C", Offset = "0xE7876C", VA = "0xE7876C")]
		set
		{
		}
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xE78774", Offset = "0xE78774", VA = "0xE78774")]
	public UIStringData()
	{
	}
}
[Token(Token = "0x200002D")]
public class DictionaryUIStringData
{
	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, XMLStringData> textDic;

	[Token(Token = "0x17000021")]
	public Dictionary<string, XMLStringData> TextDic
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x772E70", Offset = "0x772E70", VA = "0x772E70")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x772E78", Offset = "0x772E78", VA = "0x772E78")]
		set
		{
		}
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x772E80", Offset = "0x772E80", VA = "0x772E80")]
	public DictionaryUIStringData()
	{
	}
}
[Token(Token = "0x200002E")]
public class ChangeWindow : MonoBehaviour
{
	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GameObject> windowList;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int maxCount;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int currentCursor;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int prevCursor;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator leftArrow;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator rightArrow;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected Color dontPushColor;

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x765084", Offset = "0x765084", VA = "0x765084")]
	private void Start()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x7653C8", Offset = "0x7653C8", VA = "0x7653C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x7653CC", Offset = "0x7653CC", VA = "0x7653CC")]
	public void Ctrl()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x7652D8", Offset = "0x7652D8", VA = "0x7652D8")]
	public bool Change()
	{
		return default(bool);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x7657E0", Offset = "0x7657E0", VA = "0x7657E0")]
	public ChangeWindow()
	{
	}
}
[Token(Token = "0x200002F")]
public class VRorPCWindow : MonoBehaviour
{
	[Token(Token = "0x6000177")]
	[Address(RVA = "0xE79D5C", Offset = "0xE79D5C", VA = "0xE79D5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xE79D60", Offset = "0xE79D60", VA = "0xE79D60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xE79D64", Offset = "0xE79D64", VA = "0xE79D64")]
	public VRorPCWindow()
	{
	}
}
[Token(Token = "0x2000030")]
public static class XML
{
	[Token(Token = "0x600017A")]
	[Address(RVA = "0xE7A0C8", Offset = "0xE7A0C8", VA = "0xE7A0C8")]
	public static void ShowData(XElement element, List<XMLStringData> textList, ref int arrayCount, ref bool isSkip, string countUpStringID)
	{
	}
}
[Token(Token = "0x2000031")]
public class InputName
{
	[Token(Token = "0x4000066")]
	public const string Horizontal = "Horizontal";

	[Token(Token = "0x4000067")]
	public const string Horizontal_RightStick = "Horizontal_RightStick";

	[Token(Token = "0x4000068")]
	public const string Vertical = "Vertical";

	[Token(Token = "0x4000069")]
	public const string Vertical_RightStick = "Vertical_RightStick";

	[Token(Token = "0x400006A")]
	public const string Submit = "Submit";

	[Token(Token = "0x400006B")]
	public const string Button0 = "Button0";

	[Token(Token = "0x400006C")]
	public const string Cancel = "Cancel";

	[Token(Token = "0x400006D")]
	public const string Button1 = "Button1";

	[Token(Token = "0x400006E")]
	public const string Space = "Space";

	[Token(Token = "0x400006F")]
	public const string Button2 = "Button2";

	[Token(Token = "0x4000070")]
	public const string Button3 = "Button3";

	[Token(Token = "0x4000071")]
	public const string Button6 = "Button6";

	[Token(Token = "0x4000072")]
	public const string Button7 = "Button7";

	[Token(Token = "0x4000073")]
	public const string Button8 = "Button8";

	[Token(Token = "0x4000074")]
	public const string Button9 = "Button9";

	[Token(Token = "0x4000075")]
	public const string Axis1 = "Axis1";

	[Token(Token = "0x4000076")]
	public const string Axis2 = "Axis2";

	[Token(Token = "0x4000077")]
	public const string Axis3 = "Axis3";

	[Token(Token = "0x4000078")]
	public const string Axis4 = "Axis4";

	[Token(Token = "0x4000079")]
	public const string Axis5 = "Axis5";

	[Token(Token = "0x400007A")]
	public const string Axis9 = "Axis9";

	[Token(Token = "0x400007B")]
	public const string Axis10 = "Axis10";

	[Token(Token = "0x400007C")]
	public const string Axis11 = "Axis11";

	[Token(Token = "0x400007D")]
	public const string Axis12 = "Axis12";

	[Token(Token = "0x400007E")]
	public const string Oculus_GearVR_LThumbstickX = "Oculus_GearVR_LThumbstickX";

	[Token(Token = "0x400007F")]
	public const string Oculus_GearVR_LThumbstickY = "Oculus_GearVR_LThumbstickY";

	[Token(Token = "0x4000080")]
	public const string Oculus_GearVR_RThumbstickX = "Oculus_GearVR_RThumbstickX";

	[Token(Token = "0x4000081")]
	public const string Oculus_GearVR_RThumbstickY = "Oculus_GearVR_RThumbstickY";

	[Token(Token = "0x4000082")]
	public const string Oculus_GearVR_DpadX = "Oculus_GearVR_DpadX";

	[Token(Token = "0x4000083")]
	public const string Oculus_GearVR_DpadY = "Oculus_GearVR_DpadY";

	[Token(Token = "0x4000084")]
	public const string Oculus_GearVR_LIndexTrigger = "Oculus_GearVR_LIndexTrigger";

	[Token(Token = "0x4000085")]
	public const string Oculus_GearVR_RIndexTrigger = "Oculus_GearVR_RIndexTrigger";

	[Token(Token = "0x4000086")]
	public const string Oculus_CrossPlatform_Button2 = "Oculus_CrossPlatform_Button2";

	[Token(Token = "0x4000087")]
	public const string Oculus_CrossPlatform_Button4 = "Oculus_CrossPlatform_Button4";

	[Token(Token = "0x4000088")]
	public const string Oculus_CrossPlatform_PrimaryThumbstick = "Oculus_CrossPlatform_PrimaryThumbstick";

	[Token(Token = "0x4000089")]
	public const string Oculus_CrossPlatform_SecondaryThumbstick = "Oculus_CrossPlatform_SecondaryThumbstick";

	[Token(Token = "0x400008A")]
	public const string Oculus_CrossPlatform_PrimaryIndexTrigger = "Oculus_CrossPlatform_PrimaryIndexTrigger";

	[Token(Token = "0x400008B")]
	public const string Oculus_CrossPlatform_SecondaryIndexTrigger = "Oculus_CrossPlatform_SecondaryIndexTrigger";

	[Token(Token = "0x400008C")]
	public const string Oculus_CrossPlatform_PrimaryHandTrigger = "Oculus_CrossPlatform_PrimaryHandTrigger";

	[Token(Token = "0x400008D")]
	public const string Oculus_CrossPlatform_SecondaryHandTrigger = "Oculus_CrossPlatform_SecondaryHandTrigger";

	[Token(Token = "0x400008E")]
	public const string Oculus_CrossPlatform_PrimaryThumbstickHorizontal = "Oculus_CrossPlatform_PrimaryThumbstickHorizontal";

	[Token(Token = "0x400008F")]
	public const string Oculus_CrossPlatform_PrimaryThumbstickVertical = "Oculus_CrossPlatform_PrimaryThumbstickVertical";

	[Token(Token = "0x4000090")]
	public const string Oculus_CrossPlatform_SecondaryThumbstickHorizontal = "Oculus_CrossPlatform_SecondaryThumbstickHorizontal";

	[Token(Token = "0x4000091")]
	public const string Oculus_CrossPlatform_SecondaryThumbstickVertical = "Oculus_CrossPlatform_SecondaryThumbstickVertical";

	[Token(Token = "0x4000092")]
	public const string Horizontal_DPad = "Horizontal_DPad";

	[Token(Token = "0x4000093")]
	public const string Vertical_DPad = "Vertical_DPad";

	[Token(Token = "0x4000094")]
	public const string TrackPad_L_HTCVive = "TrackPad_L_HTCVive";

	[Token(Token = "0x4000095")]
	public const string TrackPad_R_HTCVive = "TrackPad_R_HTCVive";

	[Token(Token = "0x4000096")]
	public const string Trigger_L_HTCVive = "Trigger_L_HTCVive";

	[Token(Token = "0x4000097")]
	public const string Trigger_R_HTCVive = "Trigger_R_HTCVive";

	[Token(Token = "0x4000098")]
	public const string Menu_L_HTCVive = "Menu_L_HTCVive";

	[Token(Token = "0x4000099")]
	public const string Menu_R_HTCVive = "Menu_R_HTCVive";

	[Token(Token = "0x400009A")]
	public const string Horizontal_L_HTCVive = "Horizontal_L_HTCVive";

	[Token(Token = "0x400009B")]
	public const string Vertical_L_HTCVive = "Vertical_L_HTCVive";

	[Token(Token = "0x400009C")]
	public const string Horizontal_R_HTCVive = "Horizontal_R_HTCVive";

	[Token(Token = "0x400009D")]
	public const string Vertical_R_HTCVive = "Vertical_R_HTCVive";

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] names;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x7615CC", Offset = "0x7615CC", VA = "0x7615CC")]
	public InputName()
	{
	}
}
[Token(Token = "0x2000032")]
public class LayerName
{
	[Token(Token = "0x400009F")]
	public const string Default = "Default";

	[Token(Token = "0x40000A0")]
	public const string TransparentFX = "TransparentFX";

	[Token(Token = "0x40000A1")]
	public const string IgnoreRaycast = "Ignore Raycast";

	[Token(Token = "0x40000A2")]
	public const string Water = "Water";

	[Token(Token = "0x40000A3")]
	public const string UI = "UI";

	[Token(Token = "0x40000A4")]
	public const string PostProcessing = "PostProcessing";

	[Token(Token = "0x40000A5")]
	public const string Fade = "Fade";

	[Token(Token = "0x40000A6")]
	public const string BG = "BG";

	[Token(Token = "0x40000A7")]
	public const string HoloFace = "HoloFace";

	[Token(Token = "0x40000A8")]
	public const string HoloBody = "HoloBody";

	[Token(Token = "0x40000A9")]
	public const string MyuriFace = "MyuriFace";

	[Token(Token = "0x40000AA")]
	public const string MyuriBody = "MyuriBody";

	[Token(Token = "0x40000AB")]
	public const string HoloShadow = "HoloShadow";

	[Token(Token = "0x40000AC")]
	public const string MyuriShadow = "MyuriShadow";

	[Token(Token = "0x40000AD")]
	public const string DynamicObject = "DynamicObject";

	[Token(Token = "0x40000AE")]
	public const string WoodBox = "WoodBox";

	[Token(Token = "0x40000AF")]
	public const string IgnoreShadowProjector = "IgnoreShadowProjector";

	[Token(Token = "0x40000B0")]
	public const string EasterEgg = "EasterEgg";

	[Token(Token = "0x40000B1")]
	public const string LaserPointer = "LaserPointer";

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] names;

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x7626D8", Offset = "0x7626D8", VA = "0x7626D8")]
	public LayerName()
	{
	}
}
[Token(Token = "0x2000033")]
public class SceneName
{
	[Token(Token = "0x40000B3")]
	public const string Boot = "Boot";

	[Token(Token = "0x40000B4")]
	public const string Debug = "Debug";

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] names;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xE6E0E4", Offset = "0xE6E0E4", VA = "0xE6E0E4")]
	public SceneName()
	{
	}
}
[Token(Token = "0x2000034")]
public class TagName
{
	[Token(Token = "0x40000B6")]
	public const string Untagged = "Untagged";

	[Token(Token = "0x40000B7")]
	public const string Respawn = "Respawn";

	[Token(Token = "0x40000B8")]
	public const string Finish = "Finish";

	[Token(Token = "0x40000B9")]
	public const string EditorOnly = "EditorOnly";

	[Token(Token = "0x40000BA")]
	public const string MainCamera = "MainCamera";

	[Token(Token = "0x40000BB")]
	public const string Player = "Player";

	[Token(Token = "0x40000BC")]
	public const string GameController = "GameController";

	[Token(Token = "0x40000BD")]
	public const string subtitle = "subtitle";

	[Token(Token = "0x40000BE")]
	public const string head = "head";

	[Token(Token = "0x40000BF")]
	public const string tail = "tail";

	[Token(Token = "0x40000C0")]
	public const string body = "body";

	[Token(Token = "0x40000C1")]
	public const string face = "face";

	[Token(Token = "0x40000C2")]
	public const string jutebag = "jutebag";

	[Token(Token = "0x40000C3")]
	public const string stone = "stone";

	[Token(Token = "0x40000C4")]
	public const string wood = "wood";

	[Token(Token = "0x40000C5")]
	public const string grass = "grass";

	[Token(Token = "0x40000C6")]
	public const string cloth = "cloth";

	[Token(Token = "0x40000C7")]
	public const string right_hand = "right_hand";

	[Token(Token = "0x40000C8")]
	public const string window = "window";

	[Token(Token = "0x40000C9")]
	public const string chair = "chair";

	[Token(Token = "0x40000CA")]
	public const string door = "door";

	[Token(Token = "0x40000CB")]
	public const string watermill = "watermill";

	[Token(Token = "0x40000CC")]
	public const string ray_collision = "ray_collision";

	[Token(Token = "0x40000CD")]
	public const string leg = "leg";

	[Token(Token = "0x40000CE")]
	public const string ear = "ear";

	[Token(Token = "0x40000CF")]
	public const string ear_l = "ear_l";

	[Token(Token = "0x40000D0")]
	public const string ear_r = "ear_r";

	[Token(Token = "0x40000D1")]
	public const string arrows = "arrows";

	[Token(Token = "0x40000D2")]
	public const string laserpointer_button = "laserpointer_button";

	[Token(Token = "0x40000D3")]
	public const string laserpointer_seekbar = "laserpointer_seekbar";

	[Token(Token = "0x40000D4")]
	public const string laserpointer_left_arrow = "laserpointer_left_arrow";

	[Token(Token = "0x40000D5")]
	public const string laserpointer_right_arrow = "laserpointer_right_arrow";

	[Token(Token = "0x40000D6")]
	public const string soil = "soil";

	[Token(Token = "0x40000D7")]
	public const string dish = "dish";

	[Token(Token = "0x40000D8")]
	public const string camera = "camera";

	[Token(Token = "0x40000D9")]
	public const string CharaMouth = "CharaMouth";

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] names;

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xE6E208", Offset = "0xE6E208", VA = "0xE6E208")]
	public TagName()
	{
	}
}
[Token(Token = "0x2000035")]
public class BufferedAudioStream
{
	[Token(Token = "0x40000DB")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x40000DF")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x40000E0")]
	private const int sampleRate = 48000;

	[Token(Token = "0x40000E1")]
	private const int bufferSize = 12000;

	[Token(Token = "0x40000E2")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x764C58", Offset = "0x764C58", VA = "0x764C58")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x764D68", Offset = "0x764D68", VA = "0x764D68")]
	public void Update()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x764D18", Offset = "0x764D18", VA = "0x764D18")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x764F40", Offset = "0x764F40", VA = "0x764F40")]
	public void AddData(float[] samples)
	{
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000036")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000187")]
		[Address(RVA = "0x9FF8E4", Offset = "0x9FF8E4", VA = "0x9FF8E4")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0x9FF9CC", Offset = "0x9FF9CC", VA = "0x9FF9CC")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0x9FFAD4", Offset = "0x9FFAD4", VA = "0x9FFAD4")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0x9FFBDC", Offset = "0x9FFBDC", VA = "0x9FFBDC")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x9FFC2C", Offset = "0x9FFC2C", VA = "0x9FFC2C", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x2000037")]
	public enum AbuseReportType
	{
		[Token(Token = "0x40000E7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511224", Offset = "0x511224")]
		Unknown,
		[Token(Token = "0x40000E8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51125C", Offset = "0x51125C")]
		Object,
		[Token(Token = "0x40000E9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511294", Offset = "0x511294")]
		User
	}
	[Token(Token = "0x2000038")]
	public enum AchievementType
	{
		[Token(Token = "0x40000EB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5112CC", Offset = "0x5112CC")]
		Unknown,
		[Token(Token = "0x40000EC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511304", Offset = "0x511304")]
		Simple,
		[Token(Token = "0x40000ED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51133C", Offset = "0x51133C")]
		Bitfield,
		[Token(Token = "0x40000EE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511374", Offset = "0x511374")]
		Count
	}
	[Token(Token = "0x2000039")]
	public class AndroidPlatform
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0xA00E7C", Offset = "0xA00E7C", VA = "0xA00E7C")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0xA00FC8", Offset = "0xA00FC8", VA = "0xA00FC8")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0xA01148", Offset = "0xA01148", VA = "0xA01148")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x200003A")]
	public class ApplicationOptions
	{
		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x600018F")]
		[Address(RVA = "0xA0178C", Offset = "0xA0178C", VA = "0xA0178C")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0xA01874", Offset = "0xA01874", VA = "0xA01874")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0xA01418", Offset = "0xA01418", VA = "0xA01418")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0xA01998", Offset = "0xA01998", VA = "0xA01998", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x200003B")]
	public class CAPI
	{
		[Token(Token = "0x2000203")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x4000750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4000751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x4000752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x4000753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x4000754")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x6000F24")]
			[Address(RVA = "0x585614", Offset = "0x585614", VA = "0x585614")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x58562C", Offset = "0x58562C", VA = "0x58562C")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x585648", Offset = "0x585648", VA = "0x585648")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x2000204")]
		public struct ovrNetSyncVec3
		{
			[Token(Token = "0x4000755")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4000756")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4000757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float z;
		}

		[Token(Token = "0x2000205")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x4000758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4000759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x400075A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x400075B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x6000F27")]
			[Address(RVA = "0x585714", Offset = "0x585714", VA = "0x585714")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x2000206")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x400075C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x400075D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x400075E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x400075F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x2000207")]
		public struct OculusInitParams
		{
			[Token(Token = "0x4000760")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x4000761")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x4000762")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x4000763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x4000764")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x2000208")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x51052C", Offset = "0x51052C")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x40000F0")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x40000F2")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x6000193")]
		[Address(RVA = "0xA03080", Offset = "0xA03080", VA = "0xA03080")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0xA03240", Offset = "0xA03240", VA = "0xA03240")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0xA036EC", Offset = "0xA036EC", VA = "0xA036EC")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0xA037A8", Offset = "0xA037A8", VA = "0xA037A8")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0xA03AB0", Offset = "0xA03AB0", VA = "0xA03AB0")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0xA03BC8", Offset = "0xA03BC8", VA = "0xA03BC8")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0xA03C54", Offset = "0xA03C54", VA = "0xA03C54")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0xA03CC4", Offset = "0xA03CC4", VA = "0xA03CC4")]
		public static ulong DateTimeToNative(DateTime dt)
		{
			return default(ulong);
		}

		[Token(Token = "0x600019B")]
		[Address(RVA = "0xA03DC0", Offset = "0xA03DC0", VA = "0xA03DC0")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0xA03EA4", Offset = "0xA03EA4", VA = "0xA03EA4")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0xA03F48", Offset = "0xA03F48", VA = "0xA03F48")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x600019E")]
		[Address(RVA = "0xA00F2C", Offset = "0xA00F2C", VA = "0xA00F2C")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x600019F")]
		[Address(RVA = "0xA040B8", Offset = "0xA040B8", VA = "0xA040B8")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xA010B0", Offset = "0xA010B0", VA = "0xA010B0")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xA04138", Offset = "0xA04138", VA = "0xA04138")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xA041E4", Offset = "0xA041E4", VA = "0xA041E4")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xA042BC", Offset = "0xA042BC", VA = "0xA042BC")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xA04368", Offset = "0xA04368", VA = "0xA04368")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xA04414", Offset = "0xA04414", VA = "0xA04414")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xA044BC", Offset = "0xA044BC", VA = "0xA044BC")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0xA04558", Offset = "0xA04558", VA = "0xA04558")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xA045B8", Offset = "0xA045B8", VA = "0xA045B8")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xA0462C", Offset = "0xA0462C", VA = "0xA0462C")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0xA046A0", Offset = "0xA046A0", VA = "0xA046A0")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0xA04720", Offset = "0xA04720", VA = "0xA04720")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xA04794", Offset = "0xA04794", VA = "0xA04794")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xA04814", Offset = "0xA04814", VA = "0xA04814")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0xA04888", Offset = "0xA04888", VA = "0xA04888")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xA04908", Offset = "0xA04908", VA = "0xA04908")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xA049A8", Offset = "0xA049A8", VA = "0xA049A8")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xA04A1C", Offset = "0xA04A1C", VA = "0xA04A1C")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xA04A9C", Offset = "0xA04A9C", VA = "0xA04A9C")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xA04B1C", Offset = "0xA04B1C", VA = "0xA04B1C")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xA04B9C", Offset = "0xA04B9C", VA = "0xA04B9C")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xA00C5C", Offset = "0xA00C5C", VA = "0xA00C5C")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xA04C0C", Offset = "0xA04C0C", VA = "0xA04C0C")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xA04C7C", Offset = "0xA04C7C", VA = "0xA04C7C")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xA04D00", Offset = "0xA04D00", VA = "0xA04D00")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xA04D94", Offset = "0xA04D94", VA = "0xA04D94")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xA05098", Offset = "0xA05098", VA = "0xA05098")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xA01584", Offset = "0xA01584", VA = "0xA01584")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xA0166C", Offset = "0xA0166C", VA = "0xA0166C")]
		public static void ovr_ApplicationLifecycle_LogDeeplinkResult(string trackingID, LaunchResult result)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xA05138", Offset = "0xA05138", VA = "0xA05138")]
		private static extern void ovr_ApplicationLifecycle_LogDeeplinkResult_Native(IntPtr trackingID, LaunchResult result);

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xA051C8", Offset = "0xA051C8", VA = "0xA051C8")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60001BF")]
		[Address(RVA = "0xA052BC", Offset = "0xA052BC", VA = "0xA052BC")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xA05418", Offset = "0xA05418", VA = "0xA05418")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xA054C0", Offset = "0xA054C0", VA = "0xA054C0")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xA0553C", Offset = "0xA0553C", VA = "0xA0553C")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xA055A4", Offset = "0xA055A4", VA = "0xA055A4")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xA05624", Offset = "0xA05624", VA = "0xA05624")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xA056C4", Offset = "0xA056C4", VA = "0xA056C4")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xA05764", Offset = "0xA05764", VA = "0xA05764")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xA05804", Offset = "0xA05804", VA = "0xA05804")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xA058A4", Offset = "0xA058A4", VA = "0xA058A4")]
		public static extern bool ovr_NetSync_GetListenerPosition(long connection_id, ulong sessionId, ref ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xA05944", Offset = "0xA05944", VA = "0xA05944")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamFloatPCM(long connection_id, ulong sessionId, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xA059F4", Offset = "0xA059F4", VA = "0xA059F4")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamInt16PCM(long connection_id, ulong session_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xA05AA4", Offset = "0xA05AA4", VA = "0xA05AA4")]
		public static extern UIntPtr ovr_NetSync_GetPcmBufferMaxSamples();

		[PreserveSig]
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0xA05B18", Offset = "0xA05B18", VA = "0xA05B18")]
		public static extern bool ovr_NetSync_GetVoipAmplitude(long connection_id, ulong sessionId, ref float amplitude);

		[PreserveSig]
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xA05BB8", Offset = "0xA05BB8", VA = "0xA05BB8")]
		public static extern void ovr_NetSync_SetListenerPosition(long connection_id, ref ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xA05C48", Offset = "0xA05C48", VA = "0xA05C48")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xA05CC8", Offset = "0xA05CC8", VA = "0xA05CC8")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xA05D44", Offset = "0xA05D44", VA = "0xA05D44")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xA05DC4", Offset = "0xA05DC4", VA = "0xA05DC4")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xA05E34", Offset = "0xA05E34", VA = "0xA05E34")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xA05EB4", Offset = "0xA05EB4", VA = "0xA05EB4")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xA05F3C", Offset = "0xA05F3C", VA = "0xA05F3C")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xA05FBC", Offset = "0xA05FBC", VA = "0xA05FBC")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xA06030", Offset = "0xA06030", VA = "0xA06030")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xA060E8", Offset = "0xA060E8", VA = "0xA060E8")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xA06190", Offset = "0xA06190", VA = "0xA06190")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xA06204", Offset = "0xA06204", VA = "0xA06204")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xA06278", Offset = "0xA06278", VA = "0xA06278")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xA062F4", Offset = "0xA062F4", VA = "0xA062F4")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xA06368", Offset = "0xA06368", VA = "0xA06368")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xA063E8", Offset = "0xA063E8", VA = "0xA063E8")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xA06468", Offset = "0xA06468", VA = "0xA06468")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xA064E8", Offset = "0xA064E8", VA = "0xA064E8")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xA0655C", Offset = "0xA0655C", VA = "0xA0655C")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xA065FC", Offset = "0xA065FC", VA = "0xA065FC")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xA0669C", Offset = "0xA0669C", VA = "0xA0669C")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xA0671C", Offset = "0xA0671C", VA = "0xA0671C")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xA067D4", Offset = "0xA067D4", VA = "0xA067D4")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xA0688C", Offset = "0xA0688C", VA = "0xA0688C")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xA0690C", Offset = "0xA0690C", VA = "0xA0690C")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xA0698C", Offset = "0xA0698C", VA = "0xA0698C")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xA06A1C", Offset = "0xA06A1C", VA = "0xA06A1C")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xA06A90", Offset = "0xA06A90", VA = "0xA06A90")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xA06B04", Offset = "0xA06B04", VA = "0xA06B04")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xA06B84", Offset = "0xA06B84", VA = "0xA06B84")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xA06C04", Offset = "0xA06C04", VA = "0xA06C04")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xA06C84", Offset = "0xA06C84", VA = "0xA06C84")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xA06D04", Offset = "0xA06D04", VA = "0xA06D04")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x9FFE80", Offset = "0x9FFE80", VA = "0x9FFE80")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xA06D84", Offset = "0xA06D84", VA = "0xA06D84")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xA00058", Offset = "0xA00058", VA = "0xA00058")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xA06E14", Offset = "0xA06E14", VA = "0xA06E14")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xA00234", Offset = "0xA00234", VA = "0xA00234")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xA003B0", Offset = "0xA003B0", VA = "0xA003B0")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xA00550", Offset = "0xA00550", VA = "0xA00550")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xA007D0", Offset = "0xA007D0", VA = "0xA007D0")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xA00A3C", Offset = "0xA00A3C", VA = "0xA00A3C")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xA06EA4", Offset = "0xA06EA4", VA = "0xA06EA4")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xA06F24", Offset = "0xA06F24", VA = "0xA06F24")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xA06FB4", Offset = "0xA06FB4", VA = "0xA06FB4")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xA01258", Offset = "0xA01258", VA = "0xA01258")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0xA01468", Offset = "0xA01468", VA = "0xA01468")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0xA07028", Offset = "0xA07028", VA = "0xA07028")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xA0709C", Offset = "0xA0709C", VA = "0xA0709C")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xA07110", Offset = "0xA07110", VA = "0xA07110")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000200")]
		[Address(RVA = "0xA071B8", Offset = "0xA071B8", VA = "0xA071B8")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x6000201")]
		[Address(RVA = "0xA01BE4", Offset = "0xA01BE4", VA = "0xA01BE4")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000202")]
		[Address(RVA = "0xA01D7C", Offset = "0xA01D7C", VA = "0xA01D7C")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x6000203")]
		[Address(RVA = "0xA01F14", Offset = "0xA01F14", VA = "0xA01F14")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000204")]
		[Address(RVA = "0xA07238", Offset = "0xA07238", VA = "0xA07238")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000205")]
		[Address(RVA = "0xA020D4", Offset = "0xA020D4", VA = "0xA020D4")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000206")]
		[Address(RVA = "0xA0226C", Offset = "0xA0226C", VA = "0xA0226C")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x6000207")]
		[Address(RVA = "0xA02404", Offset = "0xA02404", VA = "0xA02404")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000208")]
		[Address(RVA = "0xA072B8", Offset = "0xA072B8", VA = "0xA072B8")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000209")]
		[Address(RVA = "0xA025C4", Offset = "0xA025C4", VA = "0xA025C4")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x600020A")]
		[Address(RVA = "0xA0275C", Offset = "0xA0275C", VA = "0xA0275C")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x600020B")]
		[Address(RVA = "0xA028F4", Offset = "0xA028F4", VA = "0xA028F4")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600020C")]
		[Address(RVA = "0xA07338", Offset = "0xA07338", VA = "0xA07338")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x600020D")]
		[Address(RVA = "0xA02AA4", Offset = "0xA02AA4", VA = "0xA02AA4")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x600020E")]
		[Address(RVA = "0xA02C30", Offset = "0xA02C30", VA = "0xA02C30")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x600020F")]
		[Address(RVA = "0xA02DC8", Offset = "0xA02DC8", VA = "0xA02DC8")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6000210")]
		[Address(RVA = "0xA02F60", Offset = "0xA02F60", VA = "0xA02F60")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000211")]
		[Address(RVA = "0xA073B8", Offset = "0xA073B8", VA = "0xA073B8")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6000212")]
		[Address(RVA = "0xA07438", Offset = "0xA07438", VA = "0xA07438")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000213")]
		[Address(RVA = "0xA0750C", Offset = "0xA0750C", VA = "0xA0750C")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6000214")]
		[Address(RVA = "0xA0759C", Offset = "0xA0759C", VA = "0xA0759C")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6000215")]
		[Address(RVA = "0xA0764C", Offset = "0xA0764C", VA = "0xA0764C")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x6000216")]
		[Address(RVA = "0xA076EC", Offset = "0xA076EC", VA = "0xA076EC")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x6000217")]
		[Address(RVA = "0xA0779C", Offset = "0xA0779C", VA = "0xA0779C")]
		public static ulong ovr_Challenges_Create(string leaderboardName, IntPtr challengeOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000218")]
		[Address(RVA = "0xA07854", Offset = "0xA07854", VA = "0xA07854")]
		private static extern ulong ovr_Challenges_Create_Native(IntPtr leaderboardName, IntPtr challengeOptions);

		[PreserveSig]
		[Token(Token = "0x6000219")]
		[Address(RVA = "0xA078E4", Offset = "0xA078E4", VA = "0xA078E4")]
		public static extern ulong ovr_Challenges_DeclineInvite(ulong challengeID);

		[PreserveSig]
		[Token(Token = "0x600021A")]
		[Address(RVA = "0xA07964", Offset = "0xA07964", VA = "0xA07964")]
		public static extern ulong ovr_Challenges_Delete(ulong challengeID);

		[PreserveSig]
		[Token(Token = "0x600021B")]
		[Address(RVA = "0xA079E4", Offset = "0xA079E4", VA = "0xA079E4")]
		public static extern ulong ovr_Challenges_Get(ulong challengeID);

		[PreserveSig]
		[Token(Token = "0x600021C")]
		[Address(RVA = "0xA07A64", Offset = "0xA07A64", VA = "0xA07A64")]
		public static extern ulong ovr_Challenges_GetEntries(ulong challengeID, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[PreserveSig]
		[Token(Token = "0x600021D")]
		[Address(RVA = "0xA07B0C", Offset = "0xA07B0C", VA = "0xA07B0C")]
		public static extern ulong ovr_Challenges_GetEntriesAfterRank(ulong challengeID, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x600021E")]
		[Address(RVA = "0xA07BA4", Offset = "0xA07BA4", VA = "0xA07BA4")]
		public static extern ulong ovr_Challenges_GetEntriesByIds(ulong challengeID, int limit, LeaderboardStartAt startAt, ulong[] userIDs, uint userIDLength);

		[PreserveSig]
		[Token(Token = "0x600021F")]
		[Address(RVA = "0xA07C5C", Offset = "0xA07C5C", VA = "0xA07C5C")]
		public static extern ulong ovr_Challenges_GetList(IntPtr challengeOptions, int limit);

		[PreserveSig]
		[Token(Token = "0x6000220")]
		[Address(RVA = "0xA07CEC", Offset = "0xA07CEC", VA = "0xA07CEC")]
		public static extern ulong ovr_Challenges_GetNextChallenges(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000221")]
		[Address(RVA = "0xA07D6C", Offset = "0xA07D6C", VA = "0xA07D6C")]
		public static extern ulong ovr_Challenges_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000222")]
		[Address(RVA = "0xA07DEC", Offset = "0xA07DEC", VA = "0xA07DEC")]
		public static extern ulong ovr_Challenges_GetPreviousChallenges(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000223")]
		[Address(RVA = "0xA07E6C", Offset = "0xA07E6C", VA = "0xA07E6C")]
		public static extern ulong ovr_Challenges_GetPreviousEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000224")]
		[Address(RVA = "0xA07EEC", Offset = "0xA07EEC", VA = "0xA07EEC")]
		public static extern ulong ovr_Challenges_Join(ulong challengeID);

		[PreserveSig]
		[Token(Token = "0x6000225")]
		[Address(RVA = "0xA07F6C", Offset = "0xA07F6C", VA = "0xA07F6C")]
		public static extern ulong ovr_Challenges_Leave(ulong challengeID);

		[PreserveSig]
		[Token(Token = "0x6000226")]
		[Address(RVA = "0xA07FEC", Offset = "0xA07FEC", VA = "0xA07FEC")]
		public static extern ulong ovr_Challenges_UpdateInfo(ulong challengeID, IntPtr challengeOptions);

		[Token(Token = "0x6000227")]
		[Address(RVA = "0xA0807C", Offset = "0xA0807C", VA = "0xA0807C")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000228")]
		[Address(RVA = "0xA08150", Offset = "0xA08150", VA = "0xA08150")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000229")]
		[Address(RVA = "0xA081E0", Offset = "0xA081E0", VA = "0xA081E0")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600022A")]
		[Address(RVA = "0xA082B4", Offset = "0xA082B4", VA = "0xA082B4")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600022B")]
		[Address(RVA = "0xA08344", Offset = "0xA08344", VA = "0xA08344")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600022C")]
		[Address(RVA = "0xA083EC", Offset = "0xA083EC", VA = "0xA083EC")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x600022D")]
		[Address(RVA = "0xA0846C", Offset = "0xA0846C", VA = "0xA0846C")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600022E")]
		[Address(RVA = "0xA08540", Offset = "0xA08540", VA = "0xA08540")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600022F")]
		[Address(RVA = "0xA085D0", Offset = "0xA085D0", VA = "0xA085D0")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000230")]
		[Address(RVA = "0xA08678", Offset = "0xA08678", VA = "0xA08678")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6000231")]
		[Address(RVA = "0xA086F8", Offset = "0xA086F8", VA = "0xA086F8")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000232")]
		[Address(RVA = "0xA087CC", Offset = "0xA087CC", VA = "0xA087CC")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000233")]
		[Address(RVA = "0xA0885C", Offset = "0xA0885C", VA = "0xA0885C")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000234")]
		[Address(RVA = "0xA08950", Offset = "0xA08950", VA = "0xA08950")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000235")]
		[Address(RVA = "0xA089E8", Offset = "0xA089E8", VA = "0xA089E8")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000236")]
		[Address(RVA = "0xA08ADC", Offset = "0xA08ADC", VA = "0xA08ADC")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000237")]
		[Address(RVA = "0xA08B74", Offset = "0xA08B74", VA = "0xA08B74")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000238")]
		[Address(RVA = "0xA08C90", Offset = "0xA08C90", VA = "0xA08C90")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6000239")]
		[Address(RVA = "0xA08D58", Offset = "0xA08D58", VA = "0xA08D58")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x600023A")]
		[Address(RVA = "0xA08DCC", Offset = "0xA08DCC", VA = "0xA08DCC")]
		public static extern ulong ovr_Colocation_GetCurrentMapUuid();

		[Token(Token = "0x600023B")]
		[Address(RVA = "0xA08E40", Offset = "0xA08E40", VA = "0xA08E40")]
		public static ulong ovr_Colocation_RequestMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600023C")]
		[Address(RVA = "0xA08EE8", Offset = "0xA08EE8", VA = "0xA08EE8")]
		private static extern ulong ovr_Colocation_RequestMap_Native(IntPtr uuid);

		[Token(Token = "0x600023D")]
		[Address(RVA = "0xA08F68", Offset = "0xA08F68", VA = "0xA08F68")]
		public static ulong ovr_Colocation_ShareMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600023E")]
		[Address(RVA = "0xA09010", Offset = "0xA09010", VA = "0xA09010")]
		private static extern ulong ovr_Colocation_ShareMap_Native(IntPtr uuid);

		[PreserveSig]
		[Token(Token = "0x600023F")]
		[Address(RVA = "0xA09090", Offset = "0xA09090", VA = "0xA09090")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6000240")]
		[Address(RVA = "0xA09104", Offset = "0xA09104", VA = "0xA09104")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xA091AC", Offset = "0xA091AC", VA = "0xA091AC")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6000242")]
		[Address(RVA = "0xA0922C", Offset = "0xA0922C", VA = "0xA0922C")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000243")]
		[Address(RVA = "0xA092D4", Offset = "0xA092D4", VA = "0xA092D4")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6000244")]
		[Address(RVA = "0xA09350", Offset = "0xA09350", VA = "0xA09350")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000245")]
		[Address(RVA = "0xA093F8", Offset = "0xA093F8", VA = "0xA093F8")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x6000246")]
		[Address(RVA = "0xA09478", Offset = "0xA09478", VA = "0xA09478")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000247")]
		[Address(RVA = "0xA0954C", Offset = "0xA0954C", VA = "0xA0954C")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6000248")]
		[Address(RVA = "0xA095DC", Offset = "0xA095DC", VA = "0xA095DC")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000249")]
		[Address(RVA = "0xA09738", Offset = "0xA09738", VA = "0xA09738")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x600024A")]
		[Address(RVA = "0xA098C4", Offset = "0xA098C4", VA = "0xA098C4")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600024B")]
		[Address(RVA = "0xA0996C", Offset = "0xA0996C", VA = "0xA0996C")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x600024C")]
		[Address(RVA = "0xA099EC", Offset = "0xA099EC", VA = "0xA099EC")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600024D")]
		[Address(RVA = "0xA09A94", Offset = "0xA09A94", VA = "0xA09A94")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x600024E")]
		[Address(RVA = "0xA09B14", Offset = "0xA09B14", VA = "0xA09B14")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xA09C68", Offset = "0xA09C68", VA = "0xA09C68")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[PreserveSig]
		[Token(Token = "0x6000250")]
		[Address(RVA = "0xA09CDC", Offset = "0xA09CDC", VA = "0xA09CDC")]
		public static extern ulong ovr_IAP_GetViewerPurchasesDurableCache();

		[Token(Token = "0x6000251")]
		[Address(RVA = "0xA09D50", Offset = "0xA09D50", VA = "0xA09D50")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000252")]
		[Address(RVA = "0xA09DF8", Offset = "0xA09DF8", VA = "0xA09DF8")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000253")]
		[Address(RVA = "0xA09E78", Offset = "0xA09E78", VA = "0xA09E78")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6000254")]
		[Address(RVA = "0xA09EEC", Offset = "0xA09EEC", VA = "0xA09EEC")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000255")]
		[Address(RVA = "0xA09F94", Offset = "0xA09F94", VA = "0xA09F94")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x6000256")]
		[Address(RVA = "0xA0A014", Offset = "0xA0A014", VA = "0xA0A014")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000257")]
		[Address(RVA = "0xA0A0E4", Offset = "0xA0A0E4", VA = "0xA0A0E4")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x6000258")]
		[Address(RVA = "0xA0A18C", Offset = "0xA0A18C", VA = "0xA0A18C")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000259")]
		[Address(RVA = "0xA0A24C", Offset = "0xA0A24C", VA = "0xA0A24C")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[Token(Token = "0x600025A")]
		[Address(RVA = "0xA0A2E4", Offset = "0xA0A2E4", VA = "0xA0A2E4")]
		public static ulong ovr_Leaderboard_GetEntriesByIds(string leaderboardName, int limit, LeaderboardStartAt startAt, ulong[] userIDs, uint userIDLength)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600025B")]
		[Address(RVA = "0xA0A3BC", Offset = "0xA0A3BC", VA = "0xA0A3BC")]
		private static extern ulong ovr_Leaderboard_GetEntriesByIds_Native(IntPtr leaderboardName, int limit, LeaderboardStartAt startAt, ulong[] userIDs, uint userIDLength);

		[PreserveSig]
		[Token(Token = "0x600025C")]
		[Address(RVA = "0xA0A474", Offset = "0xA0A474", VA = "0xA0A474")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600025D")]
		[Address(RVA = "0xA0A4F4", Offset = "0xA0A4F4", VA = "0xA0A4F4")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x600025E")]
		[Address(RVA = "0xA0A574", Offset = "0xA0A574", VA = "0xA0A574")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600025F")]
		[Address(RVA = "0xA0A64C", Offset = "0xA0A64C", VA = "0xA0A64C")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6000260")]
		[Address(RVA = "0xA0A704", Offset = "0xA0A704", VA = "0xA0A704")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6000261")]
		[Address(RVA = "0xA0A778", Offset = "0xA0A778", VA = "0xA0A778")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000262")]
		[Address(RVA = "0xA0A820", Offset = "0xA0A820", VA = "0xA0A820")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6000263")]
		[Address(RVA = "0xA0A8A0", Offset = "0xA0A8A0", VA = "0xA0A8A0")]
		public static extern ulong ovr_Livestreaming_LaunchLivestreamingFlow();

		[PreserveSig]
		[Token(Token = "0x6000264")]
		[Address(RVA = "0xA0A914", Offset = "0xA0A914", VA = "0xA0A914")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6000265")]
		[Address(RVA = "0xA0A988", Offset = "0xA0A988", VA = "0xA0A988")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6000266")]
		[Address(RVA = "0xA0A9FC", Offset = "0xA0A9FC", VA = "0xA0A9FC")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000267")]
		[Address(RVA = "0xA0AA70", Offset = "0xA0AA70", VA = "0xA0AA70")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x6000268")]
		[Address(RVA = "0xA0AB00", Offset = "0xA0AB00", VA = "0xA0AB00")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000269")]
		[Address(RVA = "0xA0AB74", Offset = "0xA0AB74", VA = "0xA0AB74")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x600026A")]
		[Address(RVA = "0xA0ABE8", Offset = "0xA0ABE8", VA = "0xA0ABE8")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x600026B")]
		[Address(RVA = "0xA0AC68", Offset = "0xA0AC68", VA = "0xA0AC68")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x600026C")]
		[Address(RVA = "0xA0ACE8", Offset = "0xA0ACE8", VA = "0xA0ACE8")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600026D")]
		[Address(RVA = "0xA0ADA0", Offset = "0xA0ADA0", VA = "0xA0ADA0")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x600026E")]
		[Address(RVA = "0xA0AE30", Offset = "0xA0AE30", VA = "0xA0AE30")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600026F")]
		[Address(RVA = "0xA0AEE8", Offset = "0xA0AEE8", VA = "0xA0AEE8")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000270")]
		[Address(RVA = "0xA0AF78", Offset = "0xA0AF78", VA = "0xA0AF78")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xA0B04C", Offset = "0xA0B04C", VA = "0xA0B04C")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xA0B0DC", Offset = "0xA0B0DC", VA = "0xA0B0DC")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6000273")]
		[Address(RVA = "0xA0B150", Offset = "0xA0B150", VA = "0xA0B150")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xA0B220", Offset = "0xA0B220", VA = "0xA0B220")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6000275")]
		[Address(RVA = "0xA0B2C8", Offset = "0xA0B2C8", VA = "0xA0B2C8")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xA0B380", Offset = "0xA0B380", VA = "0xA0B380")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000277")]
		[Address(RVA = "0xA0B410", Offset = "0xA0B410", VA = "0xA0B410")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xA0B4D0", Offset = "0xA0B4D0", VA = "0xA0B4D0")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6000279")]
		[Address(RVA = "0xA0B568", Offset = "0xA0B568", VA = "0xA0B568")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xA0B620", Offset = "0xA0B620", VA = "0xA0B620")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x600027B")]
		[Address(RVA = "0xA0B6B0", Offset = "0xA0B6B0", VA = "0xA0B6B0")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xA0B768", Offset = "0xA0B768", VA = "0xA0B768")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x600027D")]
		[Address(RVA = "0xA0B7F8", Offset = "0xA0B7F8", VA = "0xA0B7F8")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xA0B8B0", Offset = "0xA0B8B0", VA = "0xA0B8B0")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xA0B940", Offset = "0xA0B940", VA = "0xA0B940")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xA0B9D0", Offset = "0xA0B9D0", VA = "0xA0B9D0")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xA0BA60", Offset = "0xA0BA60", VA = "0xA0BA60")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6000282")]
		[Address(RVA = "0xA0BAD4", Offset = "0xA0BAD4", VA = "0xA0BAD4")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xA0BB94", Offset = "0xA0BB94", VA = "0xA0BB94")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xA0BC2C", Offset = "0xA0BC2C", VA = "0xA0BC2C")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6000285")]
		[Address(RVA = "0xA0BCBC", Offset = "0xA0BCBC", VA = "0xA0BCBC")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xA0BD70", Offset = "0xA0BD70", VA = "0xA0BD70")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000287")]
		[Address(RVA = "0xA0BECC", Offset = "0xA0BECC", VA = "0xA0BECC")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6000288")]
		[Address(RVA = "0xA0BF4C", Offset = "0xA0BF4C", VA = "0xA0BF4C")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xA0C028", Offset = "0xA0C028", VA = "0xA0C028")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xA0C0C0", Offset = "0xA0C0C0", VA = "0xA0C0C0")]
		public static extern ulong ovr_NetSync_Connect(IntPtr connect_options);

		[PreserveSig]
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xA0C140", Offset = "0xA0C140", VA = "0xA0C140")]
		public static extern ulong ovr_NetSync_Disconnect(long connection_id);

		[PreserveSig]
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xA0C1C0", Offset = "0xA0C1C0", VA = "0xA0C1C0")]
		public static extern ulong ovr_NetSync_GetSessions(long connection_id);

		[PreserveSig]
		[Token(Token = "0x600028D")]
		[Address(RVA = "0xA0C240", Offset = "0xA0C240", VA = "0xA0C240")]
		public static extern ulong ovr_NetSync_GetVoipAttenuation(long connection_id);

		[PreserveSig]
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xA0C2C0", Offset = "0xA0C2C0", VA = "0xA0C2C0")]
		public static extern ulong ovr_NetSync_GetVoipAttenuationDefault();

		[PreserveSig]
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xA0C334", Offset = "0xA0C334", VA = "0xA0C334")]
		public static extern ulong ovr_NetSync_SetVoipAttenuation(long connection_id, float[] distances, float[] decibels, UIntPtr count);

		[Token(Token = "0x6000290")]
		[Address(RVA = "0xA0C3EC", Offset = "0xA0C3EC", VA = "0xA0C3EC")]
		public static ulong ovr_NetSync_SetVoipAttenuationModel(long connection_id, string name, float[] distances, float[] decibels, UIntPtr count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000291")]
		[Address(RVA = "0xA0C4C8", Offset = "0xA0C4C8", VA = "0xA0C4C8")]
		private static extern ulong ovr_NetSync_SetVoipAttenuationModel_Native(long connection_id, IntPtr name, float[] distances, float[] decibels, UIntPtr count);

		[Token(Token = "0x6000292")]
		[Address(RVA = "0xA0C588", Offset = "0xA0C588", VA = "0xA0C588")]
		public static ulong ovr_NetSync_SetVoipChannelCfg(long connection_id, string channel_name, string attnmodel, bool disable_spatialization)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xA0C674", Offset = "0xA0C674", VA = "0xA0C674")]
		private static extern ulong ovr_NetSync_SetVoipChannelCfg_Native(long connection_id, IntPtr channel_name, IntPtr attnmodel, bool disable_spatialization);

		[Token(Token = "0x6000294")]
		[Address(RVA = "0xA0C71C", Offset = "0xA0C71C", VA = "0xA0C71C")]
		public static ulong ovr_NetSync_SetVoipGroup(long connection_id, string group_id)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000295")]
		[Address(RVA = "0xA0C7D8", Offset = "0xA0C7D8", VA = "0xA0C7D8")]
		private static extern ulong ovr_NetSync_SetVoipGroup_Native(long connection_id, IntPtr group_id);

		[PreserveSig]
		[Token(Token = "0x6000296")]
		[Address(RVA = "0xA0C868", Offset = "0xA0C868", VA = "0xA0C868")]
		public static extern ulong ovr_NetSync_SetVoipListentoChannels(long connection_id, string[] listento_channels, UIntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000297")]
		[Address(RVA = "0xA0C9CC", Offset = "0xA0C9CC", VA = "0xA0C9CC")]
		public static extern ulong ovr_NetSync_SetVoipMicSource(long connection_id, NetSyncVoipMicSource mic_source);

		[PreserveSig]
		[Token(Token = "0x6000298")]
		[Address(RVA = "0xA0CA5C", Offset = "0xA0CA5C", VA = "0xA0CA5C")]
		public static extern ulong ovr_NetSync_SetVoipSessionMuted(long connection_id, ulong session_id, bool muted);

		[PreserveSig]
		[Token(Token = "0x6000299")]
		[Address(RVA = "0xA0CAF4", Offset = "0xA0CAF4", VA = "0xA0CAF4")]
		public static extern ulong ovr_NetSync_SetVoipSpeaktoChannels(long connection_id, string[] speakto_channels, UIntPtr count);

		[PreserveSig]
		[Token(Token = "0x600029A")]
		[Address(RVA = "0xA0CC58", Offset = "0xA0CC58", VA = "0xA0CC58")]
		public static extern ulong ovr_NetSync_SetVoipStreamMode(long connection_id, ulong sessionId, NetSyncVoipStreamMode streamMode);

		[PreserveSig]
		[Token(Token = "0x600029B")]
		[Address(RVA = "0xA0CCF0", Offset = "0xA0CCF0", VA = "0xA0CCF0")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x600029C")]
		[Address(RVA = "0xA0CD64", Offset = "0xA0CD64", VA = "0xA0CD64")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xA0CDE4", Offset = "0xA0CDE4", VA = "0xA0CDE4")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xA0CE58", Offset = "0xA0CE58", VA = "0xA0CE58")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x600029F")]
		[Address(RVA = "0xA0CEE8", Offset = "0xA0CEE8", VA = "0xA0CEE8")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xA0CF68", Offset = "0xA0CF68", VA = "0xA0CF68")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xA0CFDC", Offset = "0xA0CFDC", VA = "0xA0CFDC")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xA0D05C", Offset = "0xA0D05C", VA = "0xA0D05C")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xA0D0E8", Offset = "0xA0D0E8", VA = "0xA0D0E8")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xA0D168", Offset = "0xA0D168", VA = "0xA0D168")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xA0D1E8", Offset = "0xA0D1E8", VA = "0xA0D1E8")]
		public static extern ulong ovr_RichPresence_Clear();

		[PreserveSig]
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xA0D25C", Offset = "0xA0D25C", VA = "0xA0D25C")]
		public static extern ulong ovr_RichPresence_GetDestinations();

		[PreserveSig]
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xA0D2D0", Offset = "0xA0D2D0", VA = "0xA0D2D0")]
		public static extern ulong ovr_RichPresence_Set(IntPtr richPresenceOptions);

		[PreserveSig]
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xA0D350", Offset = "0xA0D350", VA = "0xA0D350")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xA0D3E8", Offset = "0xA0D3E8", VA = "0xA0D3E8")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xA0D480", Offset = "0xA0D480", VA = "0xA0D480")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xA0D500", Offset = "0xA0D500", VA = "0xA0D500")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xA0D574", Offset = "0xA0D574", VA = "0xA0D574")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xA0D5F4", Offset = "0xA0D5F4", VA = "0xA0D5F4")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xA0D668", Offset = "0xA0D668", VA = "0xA0D668")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xA0D6E8", Offset = "0xA0D6E8", VA = "0xA0D6E8")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xA0D75C", Offset = "0xA0D75C", VA = "0xA0D75C")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xA0D7DC", Offset = "0xA0D7DC", VA = "0xA0D7DC")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xA0D898", Offset = "0xA0D898", VA = "0xA0D898")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xA0D928", Offset = "0xA0D928", VA = "0xA0D928")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xA0D9B8", Offset = "0xA0D9B8", VA = "0xA0D9B8")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xA0DA48", Offset = "0xA0DA48", VA = "0xA0DA48")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xA0DADC", Offset = "0xA0DADC", VA = "0xA0DADC")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xA0DB5C", Offset = "0xA0DB5C", VA = "0xA0DB5C")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xA0DBDC", Offset = "0xA0DBDC", VA = "0xA0DBDC")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xA0DC98", Offset = "0xA0DC98", VA = "0xA0DC98")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xA0DD28", Offset = "0xA0DD28", VA = "0xA0DD28")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0xA0DDDC", Offset = "0xA0DDDC", VA = "0xA0DDDC")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xA0DF34", Offset = "0xA0DF34", VA = "0xA0DF34")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xA0DFC4", Offset = "0xA0DFC4", VA = "0xA0DFC4")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xA0E054", Offset = "0xA0E054", VA = "0xA0E054")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xA0E0E4", Offset = "0xA0E0E4", VA = "0xA0E0E4")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xA0E164", Offset = "0xA0E164", VA = "0xA0E164")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xA0E1E4", Offset = "0xA0E1E4", VA = "0xA0E1E4")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xA0E28C", Offset = "0xA0E28C", VA = "0xA0E28C")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xA0E30C", Offset = "0xA0E30C", VA = "0xA0E30C")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xA0E38C", Offset = "0xA0E38C", VA = "0xA0E38C")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xA0E400", Offset = "0xA0E400", VA = "0xA0E400")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xA0E480", Offset = "0xA0E480", VA = "0xA0E480")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xA0E4F4", Offset = "0xA0E4F4", VA = "0xA0E4F4")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xA0E568", Offset = "0xA0E568", VA = "0xA0E568")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xA0E5DC", Offset = "0xA0E5DC", VA = "0xA0E5DC")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xA0E65C", Offset = "0xA0E65C", VA = "0xA0E65C")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xA0E6DC", Offset = "0xA0E6DC", VA = "0xA0E6DC")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xA0E750", Offset = "0xA0E750", VA = "0xA0E750")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xA0E7C4", Offset = "0xA0E7C4", VA = "0xA0E7C4")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xA0E844", Offset = "0xA0E844", VA = "0xA0E844")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xA0E8C4", Offset = "0xA0E8C4", VA = "0xA0E8C4")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xA0E944", Offset = "0xA0E944", VA = "0xA0E944")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xA0E9C4", Offset = "0xA0E9C4", VA = "0xA0E9C4")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xA0EA54", Offset = "0xA0EA54", VA = "0xA0EA54")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xA0EAD4", Offset = "0xA0EAD4", VA = "0xA0EAD4")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xA0EB48", Offset = "0xA0EB48", VA = "0xA0EB48")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xA0EBBC", Offset = "0xA0EBBC", VA = "0xA0EBBC")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xA0EC30", Offset = "0xA0EC30", VA = "0xA0EC30")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xA0ECA4", Offset = "0xA0ECA4", VA = "0xA0ECA4")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xA0ED60", Offset = "0xA0ED60", VA = "0xA0ED60")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xA0EDF0", Offset = "0xA0EDF0", VA = "0xA0EDF0")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xA0EEB4", Offset = "0xA0EEB4", VA = "0xA0EEB4")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xA0EF4C", Offset = "0xA0EF4C", VA = "0xA0EF4C")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xA0F00C", Offset = "0xA0F00C", VA = "0xA0F00C")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xA0F0AC", Offset = "0xA0F0AC", VA = "0xA0F0AC")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xA0F12C", Offset = "0xA0F12C", VA = "0xA0F12C")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xA0F194", Offset = "0xA0F194", VA = "0xA0F194")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xA0F214", Offset = "0xA0F214", VA = "0xA0F214")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xA0F294", Offset = "0xA0F294", VA = "0xA0F294")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xA0F2FC", Offset = "0xA0F2FC", VA = "0xA0F2FC")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xA0F37C", Offset = "0xA0F37C", VA = "0xA0F37C")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xA0F3FC", Offset = "0xA0F3FC", VA = "0xA0F3FC")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xA0F47C", Offset = "0xA0F47C", VA = "0xA0F47C")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xA0F50C", Offset = "0xA0F50C", VA = "0xA0F50C")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xA0F574", Offset = "0xA0F574", VA = "0xA0F574")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xA0F5F4", Offset = "0xA0F5F4", VA = "0xA0F5F4")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xA0F674", Offset = "0xA0F674", VA = "0xA0F674")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xA0F6FC", Offset = "0xA0F6FC", VA = "0xA0F6FC")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xA0F764", Offset = "0xA0F764", VA = "0xA0F764")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xA0F7E4", Offset = "0xA0F7E4", VA = "0xA0F7E4")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xA0F864", Offset = "0xA0F864", VA = "0xA0F864")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xA0F8EC", Offset = "0xA0F8EC", VA = "0xA0F8EC")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xA0F954", Offset = "0xA0F954", VA = "0xA0F954")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xA0F9D4", Offset = "0xA0F9D4", VA = "0xA0F9D4")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xA0FA3C", Offset = "0xA0FA3C", VA = "0xA0FA3C")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xA0FABC", Offset = "0xA0FABC", VA = "0xA0FABC")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xA0FB4C", Offset = "0xA0FB4C", VA = "0xA0FB4C")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xA0FBB4", Offset = "0xA0FBB4", VA = "0xA0FBB4")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xA0FC34", Offset = "0xA0FC34", VA = "0xA0FC34")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xA0FCB4", Offset = "0xA0FCB4", VA = "0xA0FCB4")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0xA0FD3C", Offset = "0xA0FD3C", VA = "0xA0FD3C")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xA0FDC4", Offset = "0xA0FDC4", VA = "0xA0FDC4")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xA0FE2C", Offset = "0xA0FE2C", VA = "0xA0FE2C")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xA0FEAC", Offset = "0xA0FEAC", VA = "0xA0FEAC")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xA0FF2C", Offset = "0xA0FF2C", VA = "0xA0FF2C")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xA0FFAC", Offset = "0xA0FFAC", VA = "0xA0FFAC")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xA10014", Offset = "0xA10014", VA = "0xA10014")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xA10094", Offset = "0xA10094", VA = "0xA10094")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xA10114", Offset = "0xA10114", VA = "0xA10114")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000300")]
		[Address(RVA = "0xA1017C", Offset = "0xA1017C", VA = "0xA1017C")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000301")]
		[Address(RVA = "0xA101FC", Offset = "0xA101FC", VA = "0xA101FC")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000302")]
		[Address(RVA = "0xA1027C", Offset = "0xA1027C", VA = "0xA1027C")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000303")]
		[Address(RVA = "0xA102E4", Offset = "0xA102E4", VA = "0xA102E4")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6000304")]
		[Address(RVA = "0xA10364", Offset = "0xA10364", VA = "0xA10364")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000305")]
		[Address(RVA = "0xA103CC", Offset = "0xA103CC", VA = "0xA103CC")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6000306")]
		[Address(RVA = "0xA1044C", Offset = "0xA1044C", VA = "0xA1044C")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000307")]
		[Address(RVA = "0xA104B4", Offset = "0xA104B4", VA = "0xA104B4")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6000308")]
		[Address(RVA = "0xA10534", Offset = "0xA10534", VA = "0xA10534")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000309")]
		[Address(RVA = "0xA1059C", Offset = "0xA1059C", VA = "0xA1059C")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600030A")]
		[Address(RVA = "0xA1061C", Offset = "0xA1061C", VA = "0xA1061C")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[Token(Token = "0x600030B")]
		[Address(RVA = "0xA1069C", Offset = "0xA1069C", VA = "0xA1069C")]
		public static string ovr_AssetDetails_GetMetadata(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600030C")]
		[Address(RVA = "0xA10704", Offset = "0xA10704", VA = "0xA10704")]
		private static extern IntPtr ovr_AssetDetails_GetMetadata_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600030D")]
		[Address(RVA = "0xA10784", Offset = "0xA10784", VA = "0xA10784")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600030E")]
		[Address(RVA = "0xA10814", Offset = "0xA10814", VA = "0xA10814")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600030F")]
		[Address(RVA = "0xA10894", Offset = "0xA10894", VA = "0xA10894")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000310")]
		[Address(RVA = "0xA10914", Offset = "0xA10914", VA = "0xA10914")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000311")]
		[Address(RVA = "0xA10994", Offset = "0xA10994", VA = "0xA10994")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000312")]
		[Address(RVA = "0xA109FC", Offset = "0xA109FC", VA = "0xA109FC")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000313")]
		[Address(RVA = "0xA10A7C", Offset = "0xA10A7C", VA = "0xA10A7C")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000314")]
		[Address(RVA = "0xA10B04", Offset = "0xA10B04", VA = "0xA10B04")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000315")]
		[Address(RVA = "0xA10B84", Offset = "0xA10B84", VA = "0xA10B84")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000316")]
		[Address(RVA = "0xA10C04", Offset = "0xA10C04", VA = "0xA10C04")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000317")]
		[Address(RVA = "0xA10C6C", Offset = "0xA10C6C", VA = "0xA10C6C")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000318")]
		[Address(RVA = "0xA10CEC", Offset = "0xA10CEC", VA = "0xA10CEC")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000319")]
		[Address(RVA = "0xA10D74", Offset = "0xA10D74", VA = "0xA10D74")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x600031A")]
		[Address(RVA = "0xA10DF4", Offset = "0xA10DF4", VA = "0xA10DF4")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600031B")]
		[Address(RVA = "0xA10E5C", Offset = "0xA10E5C", VA = "0xA10E5C")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600031C")]
		[Address(RVA = "0xA10EDC", Offset = "0xA10EDC", VA = "0xA10EDC")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600031D")]
		[Address(RVA = "0xA10F5C", Offset = "0xA10F5C", VA = "0xA10F5C")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600031E")]
		[Address(RVA = "0xA10FDC", Offset = "0xA10FDC", VA = "0xA10FDC")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600031F")]
		[Address(RVA = "0xA1105C", Offset = "0xA1105C", VA = "0xA1105C")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000320")]
		[Address(RVA = "0xA110DC", Offset = "0xA110DC", VA = "0xA110DC")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000321")]
		[Address(RVA = "0xA11164", Offset = "0xA11164", VA = "0xA11164")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000322")]
		[Address(RVA = "0xA111E4", Offset = "0xA111E4", VA = "0xA111E4")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6000323")]
		[Address(RVA = "0xA11264", Offset = "0xA11264", VA = "0xA11264")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000324")]
		[Address(RVA = "0xA112CC", Offset = "0xA112CC", VA = "0xA112CC")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000325")]
		[Address(RVA = "0xA1134C", Offset = "0xA1134C", VA = "0xA1134C")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xA113CC", Offset = "0xA113CC", VA = "0xA113CC")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6000327")]
		[Address(RVA = "0xA1144C", Offset = "0xA1144C", VA = "0xA1144C")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000328")]
		[Address(RVA = "0xA114B4", Offset = "0xA114B4", VA = "0xA114B4")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xA11534", Offset = "0xA11534", VA = "0xA11534")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600032A")]
		[Address(RVA = "0xA115C4", Offset = "0xA115C4", VA = "0xA115C4")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600032B")]
		[Address(RVA = "0xA11644", Offset = "0xA11644", VA = "0xA11644")]
		public static extern ChallengeCreationType ovr_Challenge_GetCreationType(IntPtr obj);

		[Token(Token = "0x600032C")]
		[Address(RVA = "0xA116C4", Offset = "0xA116C4", VA = "0xA116C4")]
		public static string ovr_Challenge_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xA1172C", Offset = "0xA1172C", VA = "0xA1172C")]
		private static extern IntPtr ovr_Challenge_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x600032E")]
		[Address(RVA = "0xA117AC", Offset = "0xA117AC", VA = "0xA117AC")]
		public static DateTime ovr_Challenge_GetEndDate(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600032F")]
		[Address(RVA = "0xA11814", Offset = "0xA11814", VA = "0xA11814")]
		private static extern ulong ovr_Challenge_GetEndDate_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000330")]
		[Address(RVA = "0xA11894", Offset = "0xA11894", VA = "0xA11894")]
		public static extern ulong ovr_Challenge_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000331")]
		[Address(RVA = "0xA11914", Offset = "0xA11914", VA = "0xA11914")]
		public static extern IntPtr ovr_Challenge_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000332")]
		[Address(RVA = "0xA11994", Offset = "0xA11994", VA = "0xA11994")]
		public static extern IntPtr ovr_Challenge_GetLeaderboard(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000333")]
		[Address(RVA = "0xA11A14", Offset = "0xA11A14", VA = "0xA11A14")]
		public static extern IntPtr ovr_Challenge_GetParticipants(IntPtr obj);

		[Token(Token = "0x6000334")]
		[Address(RVA = "0xA11A94", Offset = "0xA11A94", VA = "0xA11A94")]
		public static DateTime ovr_Challenge_GetStartDate(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000335")]
		[Address(RVA = "0xA11AFC", Offset = "0xA11AFC", VA = "0xA11AFC")]
		private static extern ulong ovr_Challenge_GetStartDate_Native(IntPtr obj);

		[Token(Token = "0x6000336")]
		[Address(RVA = "0xA11B7C", Offset = "0xA11B7C", VA = "0xA11B7C")]
		public static string ovr_Challenge_GetTitle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000337")]
		[Address(RVA = "0xA11BE4", Offset = "0xA11BE4", VA = "0xA11BE4")]
		private static extern IntPtr ovr_Challenge_GetTitle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000338")]
		[Address(RVA = "0xA11C64", Offset = "0xA11C64", VA = "0xA11C64")]
		public static extern ChallengeVisibility ovr_Challenge_GetVisibility(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000339")]
		[Address(RVA = "0xA11CE4", Offset = "0xA11CE4", VA = "0xA11CE4")]
		public static extern IntPtr ovr_ChallengeArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600033A")]
		[Address(RVA = "0xA11D74", Offset = "0xA11D74", VA = "0xA11D74")]
		public static string ovr_ChallengeArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600033B")]
		[Address(RVA = "0xA11DDC", Offset = "0xA11DDC", VA = "0xA11DDC")]
		private static extern IntPtr ovr_ChallengeArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x600033C")]
		[Address(RVA = "0xA11E5C", Offset = "0xA11E5C", VA = "0xA11E5C")]
		public static string ovr_ChallengeArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600033D")]
		[Address(RVA = "0xA11EC4", Offset = "0xA11EC4", VA = "0xA11EC4")]
		private static extern IntPtr ovr_ChallengeArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600033E")]
		[Address(RVA = "0xA11F44", Offset = "0xA11F44", VA = "0xA11F44")]
		public static extern UIntPtr ovr_ChallengeArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600033F")]
		[Address(RVA = "0xA11FC4", Offset = "0xA11FC4", VA = "0xA11FC4")]
		public static extern ulong ovr_ChallengeArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000340")]
		[Address(RVA = "0xA12044", Offset = "0xA12044", VA = "0xA12044")]
		public static extern bool ovr_ChallengeArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000341")]
		[Address(RVA = "0xA120CC", Offset = "0xA120CC", VA = "0xA120CC")]
		public static extern bool ovr_ChallengeArray_HasPreviousPage(IntPtr obj);

		[Token(Token = "0x6000342")]
		[Address(RVA = "0xA12154", Offset = "0xA12154", VA = "0xA12154")]
		public static byte[] ovr_ChallengeEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000343")]
		[Address(RVA = "0xA12250", Offset = "0xA12250", VA = "0xA12250")]
		private static extern IntPtr ovr_ChallengeEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000344")]
		[Address(RVA = "0xA122D0", Offset = "0xA122D0", VA = "0xA122D0")]
		public static extern uint ovr_ChallengeEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000345")]
		[Address(RVA = "0xA12350", Offset = "0xA12350", VA = "0xA12350")]
		public static extern int ovr_ChallengeEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000346")]
		[Address(RVA = "0xA123D0", Offset = "0xA123D0", VA = "0xA123D0")]
		public static extern long ovr_ChallengeEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6000347")]
		[Address(RVA = "0xA12450", Offset = "0xA12450", VA = "0xA12450")]
		public static DateTime ovr_ChallengeEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000348")]
		[Address(RVA = "0xA124B8", Offset = "0xA124B8", VA = "0xA124B8")]
		private static extern ulong ovr_ChallengeEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000349")]
		[Address(RVA = "0xA12538", Offset = "0xA12538", VA = "0xA12538")]
		public static extern IntPtr ovr_ChallengeEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600034A")]
		[Address(RVA = "0xA125B8", Offset = "0xA125B8", VA = "0xA125B8")]
		public static extern IntPtr ovr_ChallengeEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600034B")]
		[Address(RVA = "0xA12648", Offset = "0xA12648", VA = "0xA12648")]
		public static string ovr_ChallengeEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600034C")]
		[Address(RVA = "0xA126B0", Offset = "0xA126B0", VA = "0xA126B0")]
		private static extern IntPtr ovr_ChallengeEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x600034D")]
		[Address(RVA = "0xA12730", Offset = "0xA12730", VA = "0xA12730")]
		public static string ovr_ChallengeEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600034E")]
		[Address(RVA = "0xA12798", Offset = "0xA12798", VA = "0xA12798")]
		private static extern IntPtr ovr_ChallengeEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600034F")]
		[Address(RVA = "0xA12818", Offset = "0xA12818", VA = "0xA12818")]
		public static extern UIntPtr ovr_ChallengeEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000350")]
		[Address(RVA = "0xA12898", Offset = "0xA12898", VA = "0xA12898")]
		public static extern ulong ovr_ChallengeEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000351")]
		[Address(RVA = "0xA12918", Offset = "0xA12918", VA = "0xA12918")]
		public static extern bool ovr_ChallengeEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000352")]
		[Address(RVA = "0xA129A0", Offset = "0xA129A0", VA = "0xA129A0")]
		public static extern bool ovr_ChallengeEntryArray_HasPreviousPage(IntPtr obj);

		[Token(Token = "0x6000353")]
		[Address(RVA = "0xA12A28", Offset = "0xA12A28", VA = "0xA12A28")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000354")]
		[Address(RVA = "0xA12A90", Offset = "0xA12A90", VA = "0xA12A90")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000355")]
		[Address(RVA = "0xA12B10", Offset = "0xA12B10", VA = "0xA12B10")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000356")]
		[Address(RVA = "0xA12B90", Offset = "0xA12B90", VA = "0xA12B90")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x6000357")]
		[Address(RVA = "0xA12C10", Offset = "0xA12C10", VA = "0xA12C10")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000358")]
		[Address(RVA = "0xA12C78", Offset = "0xA12C78", VA = "0xA12C78")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000359")]
		[Address(RVA = "0xA12CF8", Offset = "0xA12CF8", VA = "0xA12CF8")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600035A")]
		[Address(RVA = "0xA12DF4", Offset = "0xA12DF4", VA = "0xA12DF4")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600035B")]
		[Address(RVA = "0xA12D74", Offset = "0xA12D74", VA = "0xA12D74")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x600035C")]
		[Address(RVA = "0xA12E74", Offset = "0xA12E74", VA = "0xA12E74")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600035D")]
		[Address(RVA = "0xA12EDC", Offset = "0xA12EDC", VA = "0xA12EDC")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x600035E")]
		[Address(RVA = "0xA12F5C", Offset = "0xA12F5C", VA = "0xA12F5C")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600035F")]
		[Address(RVA = "0xA12FC4", Offset = "0xA12FC4", VA = "0xA12FC4")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000360")]
		[Address(RVA = "0xA13044", Offset = "0xA13044", VA = "0xA13044")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000361")]
		[Address(RVA = "0xA130C4", Offset = "0xA130C4", VA = "0xA130C4")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000362")]
		[Address(RVA = "0xA13144", Offset = "0xA13144", VA = "0xA13144")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000363")]
		[Address(RVA = "0xA131AC", Offset = "0xA131AC", VA = "0xA131AC")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6000364")]
		[Address(RVA = "0xA1322C", Offset = "0xA1322C", VA = "0xA1322C")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000365")]
		[Address(RVA = "0xA13294", Offset = "0xA13294", VA = "0xA13294")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000366")]
		[Address(RVA = "0xA13314", Offset = "0xA13314", VA = "0xA13314")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000367")]
		[Address(RVA = "0xA13394", Offset = "0xA13394", VA = "0xA13394")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x6000368")]
		[Address(RVA = "0xA13414", Offset = "0xA13414", VA = "0xA13414")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000369")]
		[Address(RVA = "0xA1347C", Offset = "0xA1347C", VA = "0xA1347C")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600036A")]
		[Address(RVA = "0xA134FC", Offset = "0xA134FC", VA = "0xA134FC")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600036B")]
		[Address(RVA = "0xA1358C", Offset = "0xA1358C", VA = "0xA1358C")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600036C")]
		[Address(RVA = "0xA135F4", Offset = "0xA135F4", VA = "0xA135F4")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600036D")]
		[Address(RVA = "0xA13674", Offset = "0xA13674", VA = "0xA13674")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600036E")]
		[Address(RVA = "0xA136F4", Offset = "0xA136F4", VA = "0xA136F4")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x600036F")]
		[Address(RVA = "0xA1377C", Offset = "0xA1377C", VA = "0xA1377C")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000370")]
		[Address(RVA = "0xA137E4", Offset = "0xA137E4", VA = "0xA137E4")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000371")]
		[Address(RVA = "0xA13864", Offset = "0xA13864", VA = "0xA13864")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000372")]
		[Address(RVA = "0xA138CC", Offset = "0xA138CC", VA = "0xA138CC")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000373")]
		[Address(RVA = "0xA1394C", Offset = "0xA1394C", VA = "0xA1394C")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6000374")]
		[Address(RVA = "0xA139CC", Offset = "0xA139CC", VA = "0xA139CC")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000375")]
		[Address(RVA = "0xA13A34", Offset = "0xA13A34", VA = "0xA13A34")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x6000376")]
		[Address(RVA = "0xA13AB4", Offset = "0xA13AB4", VA = "0xA13AB4")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x6000377")]
		[Address(RVA = "0xA13B70", Offset = "0xA13B70", VA = "0xA13B70")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000378")]
		[Address(RVA = "0xA03978", Offset = "0xA03978", VA = "0xA03978")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000379")]
		[Address(RVA = "0xA13C00", Offset = "0xA13C00", VA = "0xA13C00")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x600037A")]
		[Address(RVA = "0xA038F8", Offset = "0xA038F8", VA = "0xA038F8")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x600037B")]
		[Address(RVA = "0xA039F0", Offset = "0xA039F0", VA = "0xA039F0")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600037C")]
		[Address(RVA = "0xA13C90", Offset = "0xA13C90", VA = "0xA13C90")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x600037D")]
		[Address(RVA = "0xA13D20", Offset = "0xA13D20", VA = "0xA13D20")]
		public static string ovr_Destination_GetApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600037E")]
		[Address(RVA = "0xA13D88", Offset = "0xA13D88", VA = "0xA13D88")]
		private static extern IntPtr ovr_Destination_GetApiName_Native(IntPtr obj);

		[Token(Token = "0x600037F")]
		[Address(RVA = "0xA13E08", Offset = "0xA13E08", VA = "0xA13E08")]
		public static string ovr_Destination_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000380")]
		[Address(RVA = "0xA13E70", Offset = "0xA13E70", VA = "0xA13E70")]
		private static extern IntPtr ovr_Destination_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000381")]
		[Address(RVA = "0xA13EF0", Offset = "0xA13EF0", VA = "0xA13EF0")]
		public static string ovr_Destination_GetDisplayName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000382")]
		[Address(RVA = "0xA13F58", Offset = "0xA13F58", VA = "0xA13F58")]
		private static extern IntPtr ovr_Destination_GetDisplayName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000383")]
		[Address(RVA = "0xA13FD8", Offset = "0xA13FD8", VA = "0xA13FD8")]
		public static extern IntPtr ovr_DestinationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000384")]
		[Address(RVA = "0xA14068", Offset = "0xA14068", VA = "0xA14068")]
		public static string ovr_DestinationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000385")]
		[Address(RVA = "0xA140D0", Offset = "0xA140D0", VA = "0xA140D0")]
		private static extern IntPtr ovr_DestinationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000386")]
		[Address(RVA = "0xA14150", Offset = "0xA14150", VA = "0xA14150")]
		public static extern UIntPtr ovr_DestinationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000387")]
		[Address(RVA = "0xA141D0", Offset = "0xA141D0", VA = "0xA141D0")]
		public static extern bool ovr_DestinationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000388")]
		[Address(RVA = "0xA14258", Offset = "0xA14258", VA = "0xA14258")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6000389")]
		[Address(RVA = "0xA142D4", Offset = "0xA142D4", VA = "0xA142D4")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600038A")]
		[Address(RVA = "0xA1433C", Offset = "0xA1433C", VA = "0xA1433C")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600038B")]
		[Address(RVA = "0xA143BC", Offset = "0xA143BC", VA = "0xA143BC")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x600038C")]
		[Address(RVA = "0xA1443C", Offset = "0xA1443C", VA = "0xA1443C")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600038D")]
		[Address(RVA = "0xA144A4", Offset = "0xA144A4", VA = "0xA144A4")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600038E")]
		[Address(RVA = "0xA14524", Offset = "0xA14524", VA = "0xA14524")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600038F")]
		[Address(RVA = "0xA145A4", Offset = "0xA145A4", VA = "0xA145A4")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000390")]
		[Address(RVA = "0xA14624", Offset = "0xA14624", VA = "0xA14624")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000391")]
		[Address(RVA = "0xA146A4", Offset = "0xA146A4", VA = "0xA146A4")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x6000392")]
		[Address(RVA = "0xA1472C", Offset = "0xA1472C", VA = "0xA1472C")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000393")]
		[Address(RVA = "0xA14794", Offset = "0xA14794", VA = "0xA14794")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x6000394")]
		[Address(RVA = "0xA14814", Offset = "0xA14814", VA = "0xA14814")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000395")]
		[Address(RVA = "0xA1487C", Offset = "0xA1487C", VA = "0xA1487C")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x6000396")]
		[Address(RVA = "0xA148FC", Offset = "0xA148FC", VA = "0xA148FC")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000397")]
		[Address(RVA = "0xA14964", Offset = "0xA14964", VA = "0xA14964")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000398")]
		[Address(RVA = "0xA149E4", Offset = "0xA149E4", VA = "0xA149E4")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6000399")]
		[Address(RVA = "0xA14A64", Offset = "0xA14A64", VA = "0xA14A64")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600039A")]
		[Address(RVA = "0xA14ACC", Offset = "0xA14ACC", VA = "0xA14ACC")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600039B")]
		[Address(RVA = "0xA14B4C", Offset = "0xA14B4C", VA = "0xA14B4C")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600039C")]
		[Address(RVA = "0xA14BDC", Offset = "0xA14BDC", VA = "0xA14BDC")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x600039D")]
		[Address(RVA = "0xA14C5C", Offset = "0xA14C5C", VA = "0xA14C5C")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600039E")]
		[Address(RVA = "0xA14CC4", Offset = "0xA14CC4", VA = "0xA14CC4")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x600039F")]
		[Address(RVA = "0xA14D44", Offset = "0xA14D44", VA = "0xA14D44")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xA14DAC", Offset = "0xA14DAC", VA = "0xA14DAC")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xA14E2C", Offset = "0xA14E2C", VA = "0xA14E2C")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xA14E94", Offset = "0xA14E94", VA = "0xA14E94")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xA14F14", Offset = "0xA14F14", VA = "0xA14F14")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xA14F9C", Offset = "0xA14F9C", VA = "0xA14F9C")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xA15024", Offset = "0xA15024", VA = "0xA15024")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xA1508C", Offset = "0xA1508C", VA = "0xA1508C")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xA1510C", Offset = "0xA1510C", VA = "0xA1510C")]
		public static string ovr_LaunchDetails_GetDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0xA15174", Offset = "0xA15174", VA = "0xA15174")]
		private static extern IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(IntPtr obj);

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xA151F4", Offset = "0xA151F4", VA = "0xA151F4")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xA1525C", Offset = "0xA1525C", VA = "0xA1525C")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xA152DC", Offset = "0xA152DC", VA = "0xA152DC")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xA1535C", Offset = "0xA1535C", VA = "0xA1535C")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xA153DC", Offset = "0xA153DC", VA = "0xA153DC")]
		public static string ovr_LaunchDetails_GetTrackingID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xA15444", Offset = "0xA15444", VA = "0xA15444")]
		private static extern IntPtr ovr_LaunchDetails_GetTrackingID_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003AF")]
		[Address(RVA = "0xA154C4", Offset = "0xA154C4", VA = "0xA154C4")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0xA15544", Offset = "0xA15544", VA = "0xA15544")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xA155CC", Offset = "0xA155CC", VA = "0xA155CC")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xA15654", Offset = "0xA15654", VA = "0xA15654")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xA156DC", Offset = "0xA156DC", VA = "0xA156DC")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xA1575C", Offset = "0xA1575C", VA = "0xA1575C")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xA157E4", Offset = "0xA157E4", VA = "0xA157E4")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xA1586C", Offset = "0xA1586C", VA = "0xA1586C")]
		public static string ovr_Leaderboard_GetApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xA158D4", Offset = "0xA158D4", VA = "0xA158D4")]
		private static extern IntPtr ovr_Leaderboard_GetApiName_Native(IntPtr obj);

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xA15954", Offset = "0xA15954", VA = "0xA15954")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xA159D0", Offset = "0xA159D0", VA = "0xA159D0")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xA121D0", Offset = "0xA121D0", VA = "0xA121D0")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xA15A50", Offset = "0xA15A50", VA = "0xA15A50")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xA15AD0", Offset = "0xA15AD0", VA = "0xA15AD0")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xA15B50", Offset = "0xA15B50", VA = "0xA15B50")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xA15BB8", Offset = "0xA15BB8", VA = "0xA15BB8")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xA15C38", Offset = "0xA15C38", VA = "0xA15C38")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xA15CB8", Offset = "0xA15CB8", VA = "0xA15CB8")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xA15D48", Offset = "0xA15D48", VA = "0xA15D48")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xA15DB0", Offset = "0xA15DB0", VA = "0xA15DB0")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xA15E30", Offset = "0xA15E30", VA = "0xA15E30")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xA15E98", Offset = "0xA15E98", VA = "0xA15E98")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xA15F18", Offset = "0xA15F18", VA = "0xA15F18")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xA15F98", Offset = "0xA15F98", VA = "0xA15F98")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xA16018", Offset = "0xA16018", VA = "0xA16018")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xA160A0", Offset = "0xA160A0", VA = "0xA160A0")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xA16128", Offset = "0xA16128", VA = "0xA16128")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xA161B0", Offset = "0xA161B0", VA = "0xA161B0")]
		public static extern ulong ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xA16240", Offset = "0xA16240", VA = "0xA16240")]
		public static extern uint ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(IntPtr obj);

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xA162C0", Offset = "0xA162C0", VA = "0xA162C0")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xA16328", Offset = "0xA16328", VA = "0xA16328")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xA163A8", Offset = "0xA163A8", VA = "0xA163A8")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xA16428", Offset = "0xA16428", VA = "0xA16428")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xA16490", Offset = "0xA16490", VA = "0xA16490")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xA16510", Offset = "0xA16510", VA = "0xA16510")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xA165A0", Offset = "0xA165A0", VA = "0xA165A0")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xA16620", Offset = "0xA16620", VA = "0xA16620")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xA166A8", Offset = "0xA166A8", VA = "0xA166A8")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xA16728", Offset = "0xA16728", VA = "0xA16728")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xA167B0", Offset = "0xA167B0", VA = "0xA167B0")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xA16838", Offset = "0xA16838", VA = "0xA16838")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xA168C0", Offset = "0xA168C0", VA = "0xA168C0")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xA16940", Offset = "0xA16940", VA = "0xA16940")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xA169C8", Offset = "0xA169C8", VA = "0xA169C8")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xA16A48", Offset = "0xA16A48", VA = "0xA16A48")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xA16AC8", Offset = "0xA16AC8", VA = "0xA16AC8")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xA16B30", Offset = "0xA16B30", VA = "0xA16B30")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xA16BB0", Offset = "0xA16BB0", VA = "0xA16BB0")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xA16C30", Offset = "0xA16C30", VA = "0xA16C30")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xA16CB0", Offset = "0xA16CB0", VA = "0xA16CB0")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xA16D38", Offset = "0xA16D38", VA = "0xA16D38")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xA16DB8", Offset = "0xA16DB8", VA = "0xA16DB8")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xA16E38", Offset = "0xA16E38", VA = "0xA16E38")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xA16EB8", Offset = "0xA16EB8", VA = "0xA16EB8")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xA16F20", Offset = "0xA16F20", VA = "0xA16F20")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xA16FA0", Offset = "0xA16FA0", VA = "0xA16FA0")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xA17030", Offset = "0xA17030", VA = "0xA17030")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xA170B0", Offset = "0xA170B0", VA = "0xA170B0")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xA17130", Offset = "0xA17130", VA = "0xA17130")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xA171B0", Offset = "0xA171B0", VA = "0xA171B0")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xA17218", Offset = "0xA17218", VA = "0xA17218")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xA17298", Offset = "0xA17298", VA = "0xA17298")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xA17318", Offset = "0xA17318", VA = "0xA17318")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xA173A8", Offset = "0xA173A8", VA = "0xA173A8")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xA17410", Offset = "0xA17410", VA = "0xA17410")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xA17490", Offset = "0xA17490", VA = "0xA17490")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xA17510", Offset = "0xA17510", VA = "0xA17510")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xA17598", Offset = "0xA17598", VA = "0xA17598")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xA17618", Offset = "0xA17618", VA = "0xA17618")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xA17698", Offset = "0xA17698", VA = "0xA17698")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xA17718", Offset = "0xA17718", VA = "0xA17718")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xA17798", Offset = "0xA17798", VA = "0xA17798")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xA17800", Offset = "0xA17800", VA = "0xA17800")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xA17880", Offset = "0xA17880", VA = "0xA17880")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xA17900", Offset = "0xA17900", VA = "0xA17900")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xA17968", Offset = "0xA17968", VA = "0xA17968")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xA179E8", Offset = "0xA179E8", VA = "0xA179E8")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xA17A68", Offset = "0xA17A68", VA = "0xA17A68")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xA17AE8", Offset = "0xA17AE8", VA = "0xA17AE8")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xA17B78", Offset = "0xA17B78", VA = "0xA17B78")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xA17BF8", Offset = "0xA17BF8", VA = "0xA17BF8")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000400")]
		[Address(RVA = "0xA17C78", Offset = "0xA17C78", VA = "0xA17C78")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000401")]
		[Address(RVA = "0xA17CF8", Offset = "0xA17CF8", VA = "0xA17CF8")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000402")]
		[Address(RVA = "0xA17D88", Offset = "0xA17D88", VA = "0xA17D88")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000403")]
		[Address(RVA = "0xA17E08", Offset = "0xA17E08", VA = "0xA17E08")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000404")]
		[Address(RVA = "0xA17E88", Offset = "0xA17E88", VA = "0xA17E88")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x6000405")]
		[Address(RVA = "0xA17F08", Offset = "0xA17F08", VA = "0xA17F08")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000406")]
		[Address(RVA = "0xA17F70", Offset = "0xA17F70", VA = "0xA17F70")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000407")]
		[Address(RVA = "0xA17FF0", Offset = "0xA17FF0", VA = "0xA17FF0")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000408")]
		[Address(RVA = "0xA18070", Offset = "0xA18070", VA = "0xA18070")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000409")]
		[Address(RVA = "0xA180F0", Offset = "0xA180F0", VA = "0xA180F0")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600040A")]
		[Address(RVA = "0xA18178", Offset = "0xA18178", VA = "0xA18178")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600040B")]
		[Address(RVA = "0xA18208", Offset = "0xA18208", VA = "0xA18208")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600040C")]
		[Address(RVA = "0xA18288", Offset = "0xA18288", VA = "0xA18288")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600040D")]
		[Address(RVA = "0xA18308", Offset = "0xA18308", VA = "0xA18308")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600040E")]
		[Address(RVA = "0xA18388", Offset = "0xA18388", VA = "0xA18388")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600040F")]
		[Address(RVA = "0xA18408", Offset = "0xA18408", VA = "0xA18408")]
		public static extern double ovr_MatchmakingStats_GetSkillMean(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000410")]
		[Address(RVA = "0xA18488", Offset = "0xA18488", VA = "0xA18488")]
		public static extern double ovr_MatchmakingStats_GetSkillStandardDeviation(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000411")]
		[Address(RVA = "0xA18508", Offset = "0xA18508", VA = "0xA18508")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000412")]
		[Address(RVA = "0xA18588", Offset = "0xA18588", VA = "0xA18588")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000413")]
		[Address(RVA = "0xA18608", Offset = "0xA18608", VA = "0xA18608")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000414")]
		[Address(RVA = "0xA18688", Offset = "0xA18688", VA = "0xA18688")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000415")]
		[Address(RVA = "0xA18708", Offset = "0xA18708", VA = "0xA18708")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000416")]
		[Address(RVA = "0xA18788", Offset = "0xA18788", VA = "0xA18788")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000417")]
		[Address(RVA = "0xA18808", Offset = "0xA18808", VA = "0xA18808")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000418")]
		[Address(RVA = "0xA18888", Offset = "0xA18888", VA = "0xA18888")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000419")]
		[Address(RVA = "0xA18908", Offset = "0xA18908", VA = "0xA18908")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600041A")]
		[Address(RVA = "0xA18988", Offset = "0xA18988", VA = "0xA18988")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600041B")]
		[Address(RVA = "0xA18A08", Offset = "0xA18A08", VA = "0xA18A08")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600041C")]
		[Address(RVA = "0xA18A88", Offset = "0xA18A88", VA = "0xA18A88")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600041D")]
		[Address(RVA = "0xA18B08", Offset = "0xA18B08", VA = "0xA18B08")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600041E")]
		[Address(RVA = "0xA18B88", Offset = "0xA18B88", VA = "0xA18B88")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600041F")]
		[Address(RVA = "0xA18C08", Offset = "0xA18C08", VA = "0xA18C08")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000420")]
		[Address(RVA = "0xA18C88", Offset = "0xA18C88", VA = "0xA18C88")]
		public static extern IntPtr ovr_Message_GetChallenge(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000421")]
		[Address(RVA = "0xA18D08", Offset = "0xA18D08", VA = "0xA18D08")]
		public static extern IntPtr ovr_Message_GetChallengeArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000422")]
		[Address(RVA = "0xA18D88", Offset = "0xA18D88", VA = "0xA18D88")]
		public static extern IntPtr ovr_Message_GetChallengeEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000423")]
		[Address(RVA = "0xA18E08", Offset = "0xA18E08", VA = "0xA18E08")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000424")]
		[Address(RVA = "0xA18E88", Offset = "0xA18E88", VA = "0xA18E88")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000425")]
		[Address(RVA = "0xA18F08", Offset = "0xA18F08", VA = "0xA18F08")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000426")]
		[Address(RVA = "0xA18F88", Offset = "0xA18F88", VA = "0xA18F88")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000427")]
		[Address(RVA = "0xA19008", Offset = "0xA19008", VA = "0xA19008")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000428")]
		[Address(RVA = "0xA19088", Offset = "0xA19088", VA = "0xA19088")]
		public static extern IntPtr ovr_Message_GetDestinationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000429")]
		[Address(RVA = "0xA19108", Offset = "0xA19108", VA = "0xA19108")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600042A")]
		[Address(RVA = "0xA19188", Offset = "0xA19188", VA = "0xA19188")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600042B")]
		[Address(RVA = "0xA19208", Offset = "0xA19208", VA = "0xA19208")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600042C")]
		[Address(RVA = "0xA19288", Offset = "0xA19288", VA = "0xA19288")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600042D")]
		[Address(RVA = "0xA19308", Offset = "0xA19308", VA = "0xA19308")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600042E")]
		[Address(RVA = "0xA19388", Offset = "0xA19388", VA = "0xA19388")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600042F")]
		[Address(RVA = "0xA19408", Offset = "0xA19408", VA = "0xA19408")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000430")]
		[Address(RVA = "0xA19488", Offset = "0xA19488", VA = "0xA19488")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000431")]
		[Address(RVA = "0xA19508", Offset = "0xA19508", VA = "0xA19508")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000432")]
		[Address(RVA = "0xA19588", Offset = "0xA19588", VA = "0xA19588")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000433")]
		[Address(RVA = "0xA19608", Offset = "0xA19608", VA = "0xA19608")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000434")]
		[Address(RVA = "0xA19688", Offset = "0xA19688", VA = "0xA19688")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000435")]
		[Address(RVA = "0xA19708", Offset = "0xA19708", VA = "0xA19708")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000436")]
		[Address(RVA = "0xA19788", Offset = "0xA19788", VA = "0xA19788")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000437")]
		[Address(RVA = "0xA19808", Offset = "0xA19808", VA = "0xA19808")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000438")]
		[Address(RVA = "0xA19888", Offset = "0xA19888", VA = "0xA19888")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000439")]
		[Address(RVA = "0xA19908", Offset = "0xA19908", VA = "0xA19908")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600043A")]
		[Address(RVA = "0xA19988", Offset = "0xA19988", VA = "0xA19988")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600043B")]
		[Address(RVA = "0xA19A08", Offset = "0xA19A08", VA = "0xA19A08")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600043C")]
		[Address(RVA = "0xA19A88", Offset = "0xA19A88", VA = "0xA19A88")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600043D")]
		[Address(RVA = "0xA19B08", Offset = "0xA19B08", VA = "0xA19B08")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600043E")]
		[Address(RVA = "0xA19B88", Offset = "0xA19B88", VA = "0xA19B88")]
		public static extern IntPtr ovr_Message_GetNetSyncConnection(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600043F")]
		[Address(RVA = "0xA19C08", Offset = "0xA19C08", VA = "0xA19C08")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000440")]
		[Address(RVA = "0xA19C88", Offset = "0xA19C88", VA = "0xA19C88")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000441")]
		[Address(RVA = "0xA19D08", Offset = "0xA19D08", VA = "0xA19D08")]
		public static extern IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000442")]
		[Address(RVA = "0xA19D88", Offset = "0xA19D88", VA = "0xA19D88")]
		public static extern IntPtr ovr_Message_GetNetSyncVoipAttenuationValueArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000443")]
		[Address(RVA = "0xA19E08", Offset = "0xA19E08", VA = "0xA19E08")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000444")]
		[Address(RVA = "0xA19E88", Offset = "0xA19E88", VA = "0xA19E88")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000445")]
		[Address(RVA = "0xA19F08", Offset = "0xA19F08", VA = "0xA19F08")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000446")]
		[Address(RVA = "0xA19F88", Offset = "0xA19F88", VA = "0xA19F88")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000447")]
		[Address(RVA = "0xA1A008", Offset = "0xA1A008", VA = "0xA1A008")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000448")]
		[Address(RVA = "0xA1A088", Offset = "0xA1A088", VA = "0xA1A088")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000449")]
		[Address(RVA = "0xA1A108", Offset = "0xA1A108", VA = "0xA1A108")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600044A")]
		[Address(RVA = "0xA1A188", Offset = "0xA1A188", VA = "0xA1A188")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600044B")]
		[Address(RVA = "0xA1A208", Offset = "0xA1A208", VA = "0xA1A208")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600044C")]
		[Address(RVA = "0xA1A288", Offset = "0xA1A288", VA = "0xA1A288")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600044D")]
		[Address(RVA = "0xA1A308", Offset = "0xA1A308", VA = "0xA1A308")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600044E")]
		[Address(RVA = "0xA1A388", Offset = "0xA1A388", VA = "0xA1A388")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600044F")]
		[Address(RVA = "0xA1A408", Offset = "0xA1A408", VA = "0xA1A408")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000450")]
		[Address(RVA = "0xA1A488", Offset = "0xA1A488", VA = "0xA1A488")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000451")]
		[Address(RVA = "0xA1A508", Offset = "0xA1A508", VA = "0xA1A508")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000452")]
		[Address(RVA = "0xA1A588", Offset = "0xA1A588", VA = "0xA1A588")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000453")]
		[Address(RVA = "0xA1A608", Offset = "0xA1A608", VA = "0xA1A608")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000454")]
		[Address(RVA = "0xA1A688", Offset = "0xA1A688", VA = "0xA1A688")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x6000455")]
		[Address(RVA = "0xA1A708", Offset = "0xA1A708", VA = "0xA1A708")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000456")]
		[Address(RVA = "0xA1A770", Offset = "0xA1A770", VA = "0xA1A770")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000457")]
		[Address(RVA = "0xA1A7F0", Offset = "0xA1A7F0", VA = "0xA1A7F0")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000458")]
		[Address(RVA = "0xA1A870", Offset = "0xA1A870", VA = "0xA1A870")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000459")]
		[Address(RVA = "0xA1A8F0", Offset = "0xA1A8F0", VA = "0xA1A8F0")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xA1A970", Offset = "0xA1A970", VA = "0xA1A970")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600045B")]
		[Address(RVA = "0xA1A9F0", Offset = "0xA1A9F0", VA = "0xA1A9F0")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600045C")]
		[Address(RVA = "0xA1AA70", Offset = "0xA1AA70", VA = "0xA1AA70")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600045D")]
		[Address(RVA = "0xA1AAF0", Offset = "0xA1AAF0", VA = "0xA1AAF0")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600045E")]
		[Address(RVA = "0xA1AB70", Offset = "0xA1AB70", VA = "0xA1AB70")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600045F")]
		[Address(RVA = "0xA1ABF0", Offset = "0xA1ABF0", VA = "0xA1ABF0")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000460")]
		[Address(RVA = "0xA1AC78", Offset = "0xA1AC78", VA = "0xA1AC78")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000461")]
		[Address(RVA = "0xA1ACF8", Offset = "0xA1ACF8", VA = "0xA1ACF8")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000462")]
		[Address(RVA = "0xA1AD78", Offset = "0xA1AD78", VA = "0xA1AD78")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000463")]
		[Address(RVA = "0xA1AE18", Offset = "0xA1AE18", VA = "0xA1AE18")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000464")]
		[Address(RVA = "0xA1AEB8", Offset = "0xA1AEB8", VA = "0xA1AEB8")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000465")]
		[Address(RVA = "0xA1AF58", Offset = "0xA1AF58", VA = "0xA1AF58")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x6000466")]
		[Address(RVA = "0xA1AFE8", Offset = "0xA1AFE8", VA = "0xA1AFE8")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000467")]
		[Address(RVA = "0xA1B068", Offset = "0xA1B068", VA = "0xA1B068")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000468")]
		[Address(RVA = "0xA1B0E8", Offset = "0xA1B0E8", VA = "0xA1B0E8")]
		public static extern long ovr_NetSyncConnection_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000469")]
		[Address(RVA = "0xA1B168", Offset = "0xA1B168", VA = "0xA1B168")]
		public static extern NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600046A")]
		[Address(RVA = "0xA1B1E8", Offset = "0xA1B1E8", VA = "0xA1B1E8")]
		public static extern ulong ovr_NetSyncConnection_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600046B")]
		[Address(RVA = "0xA1B268", Offset = "0xA1B268", VA = "0xA1B268")]
		public static extern NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(IntPtr obj);

		[Token(Token = "0x600046C")]
		[Address(RVA = "0xA1B2E8", Offset = "0xA1B2E8", VA = "0xA1B2E8")]
		public static string ovr_NetSyncConnection_GetZoneId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600046D")]
		[Address(RVA = "0xA1B350", Offset = "0xA1B350", VA = "0xA1B350")]
		private static extern IntPtr ovr_NetSyncConnection_GetZoneId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600046E")]
		[Address(RVA = "0xA1B3D0", Offset = "0xA1B3D0", VA = "0xA1B3D0")]
		public static extern long ovr_NetSyncSession_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600046F")]
		[Address(RVA = "0xA1B450", Offset = "0xA1B450", VA = "0xA1B450")]
		public static extern bool ovr_NetSyncSession_GetMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000470")]
		[Address(RVA = "0xA1B4D8", Offset = "0xA1B4D8", VA = "0xA1B4D8")]
		public static extern ulong ovr_NetSyncSession_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000471")]
		[Address(RVA = "0xA1B558", Offset = "0xA1B558", VA = "0xA1B558")]
		public static extern ulong ovr_NetSyncSession_GetUserId(IntPtr obj);

		[Token(Token = "0x6000472")]
		[Address(RVA = "0xA1B5D8", Offset = "0xA1B5D8", VA = "0xA1B5D8")]
		public static string ovr_NetSyncSession_GetVoipGroup(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000473")]
		[Address(RVA = "0xA1B640", Offset = "0xA1B640", VA = "0xA1B640")]
		private static extern IntPtr ovr_NetSyncSession_GetVoipGroup_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000474")]
		[Address(RVA = "0xA1B6C0", Offset = "0xA1B6C0", VA = "0xA1B6C0")]
		public static extern IntPtr ovr_NetSyncSessionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000475")]
		[Address(RVA = "0xA1B750", Offset = "0xA1B750", VA = "0xA1B750")]
		public static extern UIntPtr ovr_NetSyncSessionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000476")]
		[Address(RVA = "0xA1B7D0", Offset = "0xA1B7D0", VA = "0xA1B7D0")]
		public static extern long ovr_NetSyncSessionsChangedNotification_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000477")]
		[Address(RVA = "0xA1B850", Offset = "0xA1B850", VA = "0xA1B850")]
		public static extern IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000478")]
		[Address(RVA = "0xA1B8D0", Offset = "0xA1B8D0", VA = "0xA1B8D0")]
		public static extern IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000479")]
		[Address(RVA = "0xA1B950", Offset = "0xA1B950", VA = "0xA1B950")]
		public static extern float ovr_NetSyncVoipAttenuationValue_GetDecibels(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600047A")]
		[Address(RVA = "0xA1B9D0", Offset = "0xA1B9D0", VA = "0xA1B9D0")]
		public static extern float ovr_NetSyncVoipAttenuationValue_GetDistance(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600047B")]
		[Address(RVA = "0xA1BA50", Offset = "0xA1BA50", VA = "0xA1BA50")]
		public static extern IntPtr ovr_NetSyncVoipAttenuationValueArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600047C")]
		[Address(RVA = "0xA1BAE0", Offset = "0xA1BAE0", VA = "0xA1BAE0")]
		public static extern UIntPtr ovr_NetSyncVoipAttenuationValueArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600047D")]
		[Address(RVA = "0xA1BB60", Offset = "0xA1BB60", VA = "0xA1BB60")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600047E")]
		[Address(RVA = "0xA1BBE0", Offset = "0xA1BBE0", VA = "0xA1BBE0")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600047F")]
		[Address(RVA = "0xA1BC60", Offset = "0xA1BC60", VA = "0xA1BC60")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000480")]
		[Address(RVA = "0xA1BCE0", Offset = "0xA1BCE0", VA = "0xA1BCE0")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000481")]
		[Address(RVA = "0xA1BD60", Offset = "0xA1BD60", VA = "0xA1BD60")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000482")]
		[Address(RVA = "0xA1BDE0", Offset = "0xA1BDE0", VA = "0xA1BDE0")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000483")]
		[Address(RVA = "0xA1BE60", Offset = "0xA1BE60", VA = "0xA1BE60")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000484")]
		[Address(RVA = "0xA1BEE0", Offset = "0xA1BEE0", VA = "0xA1BEE0")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000485")]
		[Address(RVA = "0xA1BF60", Offset = "0xA1BF60", VA = "0xA1BF60")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000486")]
		[Address(RVA = "0xA1BFE0", Offset = "0xA1BFE0", VA = "0xA1BFE0")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000487")]
		[Address(RVA = "0xA1C060", Offset = "0xA1C060", VA = "0xA1C060")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000488")]
		[Address(RVA = "0xA1C0E0", Offset = "0xA1C0E0", VA = "0xA1C0E0")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000489")]
		[Address(RVA = "0xA1C15C", Offset = "0xA1C15C", VA = "0xA1C15C")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600048A")]
		[Address(RVA = "0xA1C1DC", Offset = "0xA1C1DC", VA = "0xA1C1DC")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600048B")]
		[Address(RVA = "0xA1C258", Offset = "0xA1C258", VA = "0xA1C258")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600048C")]
		[Address(RVA = "0xA1C2D8", Offset = "0xA1C2D8", VA = "0xA1C2D8")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600048D")]
		[Address(RVA = "0xA1C358", Offset = "0xA1C358", VA = "0xA1C358")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x600048E")]
		[Address(RVA = "0xA1C3D8", Offset = "0xA1C3D8", VA = "0xA1C3D8")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600048F")]
		[Address(RVA = "0xA1C440", Offset = "0xA1C440", VA = "0xA1C440")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6000490")]
		[Address(RVA = "0xA1C4C0", Offset = "0xA1C4C0", VA = "0xA1C4C0")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000491")]
		[Address(RVA = "0xA1C528", Offset = "0xA1C528", VA = "0xA1C528")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000492")]
		[Address(RVA = "0xA1C5A8", Offset = "0xA1C5A8", VA = "0xA1C5A8")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6000493")]
		[Address(RVA = "0xA1C628", Offset = "0xA1C628", VA = "0xA1C628")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000494")]
		[Address(RVA = "0xA1C690", Offset = "0xA1C690", VA = "0xA1C690")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xA1C710", Offset = "0xA1C710", VA = "0xA1C710")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000496")]
		[Address(RVA = "0xA1C778", Offset = "0xA1C778", VA = "0xA1C778")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000497")]
		[Address(RVA = "0xA1C7F8", Offset = "0xA1C7F8", VA = "0xA1C7F8")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000498")]
		[Address(RVA = "0xA1C888", Offset = "0xA1C888", VA = "0xA1C888")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000499")]
		[Address(RVA = "0xA1C908", Offset = "0xA1C908", VA = "0xA1C908")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600049A")]
		[Address(RVA = "0xA1C988", Offset = "0xA1C988", VA = "0xA1C988")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600049B")]
		[Address(RVA = "0xA1CA08", Offset = "0xA1CA08", VA = "0xA1CA08")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600049C")]
		[Address(RVA = "0xA1CA90", Offset = "0xA1CA90", VA = "0xA1CA90")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600049D")]
		[Address(RVA = "0xA1CB10", Offset = "0xA1CB10", VA = "0xA1CB10")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x600049E")]
		[Address(RVA = "0xA1CB90", Offset = "0xA1CB90", VA = "0xA1CB90")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600049F")]
		[Address(RVA = "0xA1CBF8", Offset = "0xA1CBF8", VA = "0xA1CBF8")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xA1CC78", Offset = "0xA1CC78", VA = "0xA1CC78")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xA1CCE0", Offset = "0xA1CCE0", VA = "0xA1CCE0")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xA1CD60", Offset = "0xA1CD60", VA = "0xA1CD60")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xA1CDC8", Offset = "0xA1CDC8", VA = "0xA1CDC8")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xA1CE48", Offset = "0xA1CE48", VA = "0xA1CE48")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xA1CEB0", Offset = "0xA1CEB0", VA = "0xA1CEB0")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xA1CF30", Offset = "0xA1CF30", VA = "0xA1CF30")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xA1CF98", Offset = "0xA1CF98", VA = "0xA1CF98")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xA1D018", Offset = "0xA1D018", VA = "0xA1D018")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xA1D080", Offset = "0xA1D080", VA = "0xA1D080")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xA1D100", Offset = "0xA1D100", VA = "0xA1D100")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xA1D190", Offset = "0xA1D190", VA = "0xA1D190")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xA1D1F8", Offset = "0xA1D1F8", VA = "0xA1D1F8")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xA1D278", Offset = "0xA1D278", VA = "0xA1D278")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xA1D2F8", Offset = "0xA1D2F8", VA = "0xA1D2F8")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xA1D380", Offset = "0xA1D380", VA = "0xA1D380")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xA1D3E8", Offset = "0xA1D3E8", VA = "0xA1D3E8")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xA1D468", Offset = "0xA1D468", VA = "0xA1D468")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xA1D4D0", Offset = "0xA1D4D0", VA = "0xA1D4D0")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xA1D550", Offset = "0xA1D550", VA = "0xA1D550")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xA1D5D0", Offset = "0xA1D5D0", VA = "0xA1D5D0")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xA1D638", Offset = "0xA1D638", VA = "0xA1D638")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xA1D6B8", Offset = "0xA1D6B8", VA = "0xA1D6B8")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xA1D748", Offset = "0xA1D748", VA = "0xA1D748")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xA1D7B0", Offset = "0xA1D7B0", VA = "0xA1D7B0")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xA1D830", Offset = "0xA1D830", VA = "0xA1D830")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xA1D8B0", Offset = "0xA1D8B0", VA = "0xA1D8B0")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xA1D938", Offset = "0xA1D938", VA = "0xA1D938")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xA1D9B8", Offset = "0xA1D9B8", VA = "0xA1D9B8")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xA1DA38", Offset = "0xA1DA38", VA = "0xA1DA38")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xA1DAA0", Offset = "0xA1DAA0", VA = "0xA1DAA0")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xA1DB20", Offset = "0xA1DB20", VA = "0xA1DB20")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xA1DBA0", Offset = "0xA1DBA0", VA = "0xA1DBA0")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xA1DC20", Offset = "0xA1DC20", VA = "0xA1DC20")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xA1DCA8", Offset = "0xA1DCA8", VA = "0xA1DCA8")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xA1DD28", Offset = "0xA1DD28", VA = "0xA1DD28")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xA1DDA8", Offset = "0xA1DDA8", VA = "0xA1DDA8")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xA1DE28", Offset = "0xA1DE28", VA = "0xA1DE28")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xA1DEA8", Offset = "0xA1DEA8", VA = "0xA1DEA8")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xA1DF10", Offset = "0xA1DF10", VA = "0xA1DF10")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xA1DF90", Offset = "0xA1DF90", VA = "0xA1DF90")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xA1E00C", Offset = "0xA1E00C", VA = "0xA1E00C")]
		public static extern IntPtr ovr_Room_GetTeams(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xA1E088", Offset = "0xA1E088", VA = "0xA1E088")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xA1E108", Offset = "0xA1E108", VA = "0xA1E108")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xA1E184", Offset = "0xA1E184", VA = "0xA1E184")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xA1E204", Offset = "0xA1E204", VA = "0xA1E204")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xA1E294", Offset = "0xA1E294", VA = "0xA1E294")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xA1E2FC", Offset = "0xA1E2FC", VA = "0xA1E2FC")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xA1E37C", Offset = "0xA1E37C", VA = "0xA1E37C")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xA1E3FC", Offset = "0xA1E3FC", VA = "0xA1E3FC")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xA1E484", Offset = "0xA1E484", VA = "0xA1E484")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xA1E504", Offset = "0xA1E504", VA = "0xA1E504")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xA1E584", Offset = "0xA1E584", VA = "0xA1E584")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xA1E604", Offset = "0xA1E604", VA = "0xA1E604")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xA1E66C", Offset = "0xA1E66C", VA = "0xA1E66C")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xA1E6EC", Offset = "0xA1E6EC", VA = "0xA1E6EC")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xA1E77C", Offset = "0xA1E77C", VA = "0xA1E77C")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xA1E7E4", Offset = "0xA1E7E4", VA = "0xA1E7E4")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xA1E864", Offset = "0xA1E864", VA = "0xA1E864")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xA1E8E4", Offset = "0xA1E8E4", VA = "0xA1E8E4")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xA1E96C", Offset = "0xA1E96C", VA = "0xA1E96C")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xA1E9EC", Offset = "0xA1E9EC", VA = "0xA1E9EC")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xA1EA6C", Offset = "0xA1EA6C", VA = "0xA1EA6C")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xA1EAFC", Offset = "0xA1EAFC", VA = "0xA1EAFC")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xA1EB7C", Offset = "0xA1EB7C", VA = "0xA1EB7C")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xA1EBFC", Offset = "0xA1EBFC", VA = "0xA1EBFC")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xA1EC84", Offset = "0xA1EC84", VA = "0xA1EC84")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xA1ED04", Offset = "0xA1ED04", VA = "0xA1ED04")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xA1ED84", Offset = "0xA1ED84", VA = "0xA1ED84")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xA1EE04", Offset = "0xA1EE04", VA = "0xA1EE04")]
		public static extern IntPtr ovr_Team_GetAssignedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xA1EE84", Offset = "0xA1EE84", VA = "0xA1EE84")]
		public static extern int ovr_Team_GetMaxUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xA1EF04", Offset = "0xA1EF04", VA = "0xA1EF04")]
		public static extern int ovr_Team_GetMinUsers(IntPtr obj);

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xA1EF84", Offset = "0xA1EF84", VA = "0xA1EF84")]
		public static string ovr_Team_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xA1EFEC", Offset = "0xA1EFEC", VA = "0xA1EFEC")]
		private static extern IntPtr ovr_Team_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xA1F06C", Offset = "0xA1F06C", VA = "0xA1F06C")]
		public static extern IntPtr ovr_TeamArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xA1F0FC", Offset = "0xA1F0FC", VA = "0xA1F0FC")]
		public static extern UIntPtr ovr_TeamArray_GetSize(IntPtr obj);

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xA1F17C", Offset = "0xA1F17C", VA = "0xA1F17C")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xA1F1E4", Offset = "0xA1F1E4", VA = "0xA1F1E4")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xA1F264", Offset = "0xA1F264", VA = "0xA1F264")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xA1F2E4", Offset = "0xA1F2E4", VA = "0xA1F2E4")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xA1F364", Offset = "0xA1F364", VA = "0xA1F364")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xA1F3CC", Offset = "0xA1F3CC", VA = "0xA1F3CC")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xA1F44C", Offset = "0xA1F44C", VA = "0xA1F44C")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xA1F4CC", Offset = "0xA1F4CC", VA = "0xA1F4CC")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xA1F534", Offset = "0xA1F534", VA = "0xA1F534")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xA1F5B4", Offset = "0xA1F5B4", VA = "0xA1F5B4")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xA1F634", Offset = "0xA1F634", VA = "0xA1F634")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xA1F6B4", Offset = "0xA1F6B4", VA = "0xA1F6B4")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xA1F71C", Offset = "0xA1F71C", VA = "0xA1F71C")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xA1F79C", Offset = "0xA1F79C", VA = "0xA1F79C")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xA1F81C", Offset = "0xA1F81C", VA = "0xA1F81C")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xA1F89C", Offset = "0xA1F89C", VA = "0xA1F89C")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xA1F92C", Offset = "0xA1F92C", VA = "0xA1F92C")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xA1F9AC", Offset = "0xA1F9AC", VA = "0xA1F9AC")]
		public static string ovr_User_GetDisplayName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xA1FA14", Offset = "0xA1FA14", VA = "0xA1FA14")]
		private static extern IntPtr ovr_User_GetDisplayName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xA1FA94", Offset = "0xA1FA94", VA = "0xA1FA94")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xA1FB14", Offset = "0xA1FB14", VA = "0xA1FB14")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000501")]
		[Address(RVA = "0xA1FB7C", Offset = "0xA1FB7C", VA = "0xA1FB7C")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xA1FBFC", Offset = "0xA1FBFC", VA = "0xA1FBFC")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000503")]
		[Address(RVA = "0xA1FC64", Offset = "0xA1FC64", VA = "0xA1FC64")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xA1FCE4", Offset = "0xA1FCE4", VA = "0xA1FCE4")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000505")]
		[Address(RVA = "0xA1FD4C", Offset = "0xA1FD4C", VA = "0xA1FD4C")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xA1FDCC", Offset = "0xA1FDCC", VA = "0xA1FDCC")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000507")]
		[Address(RVA = "0xA1FE34", Offset = "0xA1FE34", VA = "0xA1FE34")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xA1FEB4", Offset = "0xA1FEB4", VA = "0xA1FEB4")]
		public static string ovr_User_GetPresenceDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000509")]
		[Address(RVA = "0xA1FF1C", Offset = "0xA1FF1C", VA = "0xA1FF1C")]
		private static extern IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xA1FF9C", Offset = "0xA1FF9C", VA = "0xA1FF9C")]
		public static string ovr_User_GetPresenceDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600050B")]
		[Address(RVA = "0xA20004", Offset = "0xA20004", VA = "0xA20004")]
		private static extern IntPtr ovr_User_GetPresenceDestinationApiName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600050C")]
		[Address(RVA = "0xA20084", Offset = "0xA20084", VA = "0xA20084")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x600050D")]
		[Address(RVA = "0xA20104", Offset = "0xA20104", VA = "0xA20104")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600050E")]
		[Address(RVA = "0xA2016C", Offset = "0xA2016C", VA = "0xA2016C")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600050F")]
		[Address(RVA = "0xA201EC", Offset = "0xA201EC", VA = "0xA201EC")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000510")]
		[Address(RVA = "0xA2026C", Offset = "0xA2026C", VA = "0xA2026C")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000511")]
		[Address(RVA = "0xA202EC", Offset = "0xA202EC", VA = "0xA202EC")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xA2037C", Offset = "0xA2037C", VA = "0xA2037C")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000513")]
		[Address(RVA = "0xA203E4", Offset = "0xA203E4", VA = "0xA203E4")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000514")]
		[Address(RVA = "0xA20464", Offset = "0xA20464", VA = "0xA20464")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000515")]
		[Address(RVA = "0xA204E4", Offset = "0xA204E4", VA = "0xA204E4")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000516")]
		[Address(RVA = "0xA2056C", Offset = "0xA2056C", VA = "0xA2056C")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000517")]
		[Address(RVA = "0xA205FC", Offset = "0xA205FC", VA = "0xA205FC")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000518")]
		[Address(RVA = "0xA20664", Offset = "0xA20664", VA = "0xA20664")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000519")]
		[Address(RVA = "0xA206E4", Offset = "0xA206E4", VA = "0xA206E4")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600051A")]
		[Address(RVA = "0xA20764", Offset = "0xA20764", VA = "0xA20764")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x600051B")]
		[Address(RVA = "0xA207EC", Offset = "0xA207EC", VA = "0xA207EC")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600051C")]
		[Address(RVA = "0xA20854", Offset = "0xA20854", VA = "0xA20854")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600051D")]
		[Address(RVA = "0xA208D4", Offset = "0xA208D4", VA = "0xA208D4")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600051E")]
		[Address(RVA = "0xA2095C", Offset = "0xA2095C", VA = "0xA2095C")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600051F")]
		[Address(RVA = "0xA209DC", Offset = "0xA209DC", VA = "0xA209DC")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x6000520")]
		[Address(RVA = "0xA20A7C", Offset = "0xA20A7C", VA = "0xA20A7C")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000521")]
		[Address(RVA = "0xA20B1C", Offset = "0xA20B1C", VA = "0xA20B1C")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x6000522")]
		[Address(RVA = "0xA20BBC", Offset = "0xA20BBC", VA = "0xA20BBC")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x6000523")]
		[Address(RVA = "0xA20C5C", Offset = "0xA20C5C", VA = "0xA20C5C")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x9FF958", Offset = "0x9FF958", VA = "0x9FF958")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x9FFCE0", Offset = "0x9FFCE0", VA = "0x9FFCE0")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000526")]
		[Address(RVA = "0x9FFA44", Offset = "0x9FFA44", VA = "0x9FFA44")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000527")]
		[Address(RVA = "0x9FFB4C", Offset = "0x9FFB4C", VA = "0x9FFB4C")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x6000528")]
		[Address(RVA = "0xA01800", Offset = "0xA01800", VA = "0xA01800")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000529")]
		[Address(RVA = "0xA01A4C", Offset = "0xA01A4C", VA = "0xA01A4C")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xA018EC", Offset = "0xA018EC", VA = "0xA018EC")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600052B")]
		[Address(RVA = "0xA20CDC", Offset = "0xA20CDC", VA = "0xA20CDC")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600052C")]
		[Address(RVA = "0xA20D6C", Offset = "0xA20D6C", VA = "0xA20D6C")]
		public static extern IntPtr ovr_ChallengeOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600052D")]
		[Address(RVA = "0xA20DE0", Offset = "0xA20DE0", VA = "0xA20DE0")]
		public static extern void ovr_ChallengeOptions_Destroy(IntPtr handle);

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xA20E60", Offset = "0xA20E60", VA = "0xA20E60")]
		public static void ovr_ChallengeOptions_SetDescription(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600052F")]
		[Address(RVA = "0xA20F0C", Offset = "0xA20F0C", VA = "0xA20F0C")]
		private static extern void ovr_ChallengeOptions_SetDescription_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xA20F9C", Offset = "0xA20F9C", VA = "0xA20F9C")]
		public static void ovr_ChallengeOptions_SetEndDate(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000531")]
		[Address(RVA = "0xA21018", Offset = "0xA21018", VA = "0xA21018")]
		private static extern void ovr_ChallengeOptions_SetEndDate_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000532")]
		[Address(RVA = "0xA210A8", Offset = "0xA210A8", VA = "0xA210A8")]
		public static extern void ovr_ChallengeOptions_SetIncludeActiveChallenges(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000533")]
		[Address(RVA = "0xA21138", Offset = "0xA21138", VA = "0xA21138")]
		public static extern void ovr_ChallengeOptions_SetIncludeFutureChallenges(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000534")]
		[Address(RVA = "0xA211C8", Offset = "0xA211C8", VA = "0xA211C8")]
		public static extern void ovr_ChallengeOptions_SetIncludePastChallenges(IntPtr handle, bool value);

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xA21258", Offset = "0xA21258", VA = "0xA21258")]
		public static void ovr_ChallengeOptions_SetLeaderboardName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000536")]
		[Address(RVA = "0xA21304", Offset = "0xA21304", VA = "0xA21304")]
		private static extern void ovr_ChallengeOptions_SetLeaderboardName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xA21394", Offset = "0xA21394", VA = "0xA21394")]
		public static void ovr_ChallengeOptions_SetStartDate(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000538")]
		[Address(RVA = "0xA21410", Offset = "0xA21410", VA = "0xA21410")]
		private static extern void ovr_ChallengeOptions_SetStartDate_Native(IntPtr handle, ulong value);

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xA214A0", Offset = "0xA214A0", VA = "0xA214A0")]
		public static void ovr_ChallengeOptions_SetTitle(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600053A")]
		[Address(RVA = "0xA2154C", Offset = "0xA2154C", VA = "0xA2154C")]
		private static extern void ovr_ChallengeOptions_SetTitle_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600053B")]
		[Address(RVA = "0xA215DC", Offset = "0xA215DC", VA = "0xA215DC")]
		public static extern void ovr_ChallengeOptions_SetViewerFilter(IntPtr handle, ChallengeViewerFilter value);

		[PreserveSig]
		[Token(Token = "0x600053C")]
		[Address(RVA = "0xA2166C", Offset = "0xA2166C", VA = "0xA2166C")]
		public static extern void ovr_ChallengeOptions_SetVisibility(IntPtr handle, ChallengeVisibility value);

		[PreserveSig]
		[Token(Token = "0x600053D")]
		[Address(RVA = "0xA216FC", Offset = "0xA216FC", VA = "0xA216FC")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600053E")]
		[Address(RVA = "0xA21770", Offset = "0xA21770", VA = "0xA21770")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xA217F0", Offset = "0xA217F0", VA = "0xA217F0")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000540")]
		[Address(RVA = "0xA218BC", Offset = "0xA218BC", VA = "0xA218BC")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000541")]
		[Address(RVA = "0xA21954", Offset = "0xA21954", VA = "0xA21954")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000542")]
		[Address(RVA = "0xA219D4", Offset = "0xA219D4", VA = "0xA219D4")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x6000543")]
		[Address(RVA = "0xA21A64", Offset = "0xA21A64", VA = "0xA21A64")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000544")]
		[Address(RVA = "0xA21AF4", Offset = "0xA21AF4", VA = "0xA21AF4")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000545")]
		[Address(RVA = "0xA21B84", Offset = "0xA21B84", VA = "0xA21B84")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xA21C04", Offset = "0xA21C04", VA = "0xA21C04")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000547")]
		[Address(RVA = "0xA21CB8", Offset = "0xA21CB8", VA = "0xA21CB8")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xA21D50", Offset = "0xA21D50", VA = "0xA21D50")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000549")]
		[Address(RVA = "0xA21E0C", Offset = "0xA21E0C", VA = "0xA21E0C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xA21EAC", Offset = "0xA21EAC", VA = "0xA21EAC")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600054B")]
		[Address(RVA = "0xA21F78", Offset = "0xA21F78", VA = "0xA21F78")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600054C")]
		[Address(RVA = "0xA22010", Offset = "0xA22010", VA = "0xA22010")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600054D")]
		[Address(RVA = "0xA22090", Offset = "0xA22090", VA = "0xA22090")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xA22120", Offset = "0xA22120", VA = "0xA22120")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600054F")]
		[Address(RVA = "0xA221CC", Offset = "0xA221CC", VA = "0xA221CC")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000550")]
		[Address(RVA = "0xA2225C", Offset = "0xA2225C", VA = "0xA2225C")]
		public static extern IntPtr ovr_NetSyncOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000551")]
		[Address(RVA = "0xA222D0", Offset = "0xA222D0", VA = "0xA222D0")]
		public static extern void ovr_NetSyncOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xA22350", Offset = "0xA22350", VA = "0xA22350")]
		public static void ovr_NetSyncOptions_SetVoipGroup(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000553")]
		[Address(RVA = "0xA223FC", Offset = "0xA223FC", VA = "0xA223FC")]
		private static extern void ovr_NetSyncOptions_SetVoipGroup_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000554")]
		[Address(RVA = "0xA2248C", Offset = "0xA2248C", VA = "0xA2248C")]
		public static extern void ovr_NetSyncOptions_SetVoipStreamDefault(IntPtr handle, NetSyncVoipStreamMode value);

		[Token(Token = "0x6000555")]
		[Address(RVA = "0xA2251C", Offset = "0xA2251C", VA = "0xA2251C")]
		public static void ovr_NetSyncOptions_SetZoneId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000556")]
		[Address(RVA = "0xA225C8", Offset = "0xA225C8", VA = "0xA225C8")]
		private static extern void ovr_NetSyncOptions_SetZoneId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000557")]
		[Address(RVA = "0xA22658", Offset = "0xA22658", VA = "0xA22658")]
		public static extern IntPtr ovr_RichPresenceOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000558")]
		[Address(RVA = "0xA226CC", Offset = "0xA226CC", VA = "0xA226CC")]
		public static extern void ovr_RichPresenceOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000559")]
		[Address(RVA = "0xA2274C", Offset = "0xA2274C", VA = "0xA2274C")]
		public static void ovr_RichPresenceOptions_SetApiName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600055A")]
		[Address(RVA = "0xA227F8", Offset = "0xA227F8", VA = "0xA227F8")]
		private static extern void ovr_RichPresenceOptions_SetApiName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xA22888", Offset = "0xA22888", VA = "0xA22888")]
		public static void ovr_RichPresenceOptions_SetArgsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600055C")]
		[Address(RVA = "0xA22954", Offset = "0xA22954", VA = "0xA22954")]
		private static extern void ovr_RichPresenceOptions_SetArgsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600055D")]
		[Address(RVA = "0xA229EC", Offset = "0xA229EC", VA = "0xA229EC")]
		public static extern void ovr_RichPresenceOptions_ClearArgs(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600055E")]
		[Address(RVA = "0xA22A6C", Offset = "0xA22A6C", VA = "0xA22A6C")]
		public static extern void ovr_RichPresenceOptions_SetCurrentCapacity(IntPtr handle, uint value);

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xA22AFC", Offset = "0xA22AFC", VA = "0xA22AFC")]
		public static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000560")]
		[Address(RVA = "0xA22BA8", Offset = "0xA22BA8", VA = "0xA22BA8")]
		private static extern void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xA22C38", Offset = "0xA22C38", VA = "0xA22C38")]
		public static void ovr_RichPresenceOptions_SetEndTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000562")]
		[Address(RVA = "0xA22CB4", Offset = "0xA22CB4", VA = "0xA22CB4")]
		private static extern void ovr_RichPresenceOptions_SetEndTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000563")]
		[Address(RVA = "0xA22D44", Offset = "0xA22D44", VA = "0xA22D44")]
		public static extern void ovr_RichPresenceOptions_SetExtraContext(IntPtr handle, RichPresenceExtraContext value);

		[Token(Token = "0x6000564")]
		[Address(RVA = "0xA22DD4", Offset = "0xA22DD4", VA = "0xA22DD4")]
		public static void ovr_RichPresenceOptions_SetInstanceId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000565")]
		[Address(RVA = "0xA22E80", Offset = "0xA22E80", VA = "0xA22E80")]
		private static extern void ovr_RichPresenceOptions_SetInstanceId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000566")]
		[Address(RVA = "0xA22F10", Offset = "0xA22F10", VA = "0xA22F10")]
		public static extern void ovr_RichPresenceOptions_SetIsIdle(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000567")]
		[Address(RVA = "0xA22FA0", Offset = "0xA22FA0", VA = "0xA22FA0")]
		public static extern void ovr_RichPresenceOptions_SetIsJoinable(IntPtr handle, bool value);

		[Token(Token = "0x6000568")]
		[Address(RVA = "0xA23030", Offset = "0xA23030", VA = "0xA23030")]
		public static void ovr_RichPresenceOptions_SetJoinableId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000569")]
		[Address(RVA = "0xA230DC", Offset = "0xA230DC", VA = "0xA230DC")]
		private static extern void ovr_RichPresenceOptions_SetJoinableId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600056A")]
		[Address(RVA = "0xA2316C", Offset = "0xA2316C", VA = "0xA2316C")]
		public static extern void ovr_RichPresenceOptions_SetMaxCapacity(IntPtr handle, uint value);

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xA231FC", Offset = "0xA231FC", VA = "0xA231FC")]
		public static void ovr_RichPresenceOptions_SetStartTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600056C")]
		[Address(RVA = "0xA23278", Offset = "0xA23278", VA = "0xA23278")]
		private static extern void ovr_RichPresenceOptions_SetStartTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x600056D")]
		[Address(RVA = "0xA23308", Offset = "0xA23308", VA = "0xA23308")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600056E")]
		[Address(RVA = "0xA2337C", Offset = "0xA2337C", VA = "0xA2337C")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x600056F")]
		[Address(RVA = "0xA233FC", Offset = "0xA233FC", VA = "0xA233FC")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000570")]
		[Address(RVA = "0xA234C8", Offset = "0xA234C8", VA = "0xA234C8")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000571")]
		[Address(RVA = "0xA23560", Offset = "0xA23560", VA = "0xA23560")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000572")]
		[Address(RVA = "0xA235E0", Offset = "0xA235E0", VA = "0xA235E0")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000573")]
		[Address(RVA = "0xA23670", Offset = "0xA23670", VA = "0xA23670")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000574")]
		[Address(RVA = "0xA23700", Offset = "0xA23700", VA = "0xA23700")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6000575")]
		[Address(RVA = "0xA23790", Offset = "0xA23790", VA = "0xA23790")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000576")]
		[Address(RVA = "0xA23820", Offset = "0xA23820", VA = "0xA23820")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000577")]
		[Address(RVA = "0xA238B0", Offset = "0xA238B0", VA = "0xA238B0")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000578")]
		[Address(RVA = "0xA23940", Offset = "0xA23940", VA = "0xA23940")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000579")]
		[Address(RVA = "0xA239B4", Offset = "0xA239B4", VA = "0xA239B4")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600057A")]
		[Address(RVA = "0xA23A34", Offset = "0xA23A34", VA = "0xA23A34")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x600057B")]
		[Address(RVA = "0xA23AC4", Offset = "0xA23AC4", VA = "0xA23AC4")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x600057C")]
		[Address(RVA = "0xA23B54", Offset = "0xA23B54", VA = "0xA23B54")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600057D")]
		[Address(RVA = "0xA23BD4", Offset = "0xA23BD4", VA = "0xA23BD4")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x600057E")]
		[Address(RVA = "0xA23C64", Offset = "0xA23C64", VA = "0xA23C64")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600057F")]
		[Address(RVA = "0xA23CD8", Offset = "0xA23CD8", VA = "0xA23CD8")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000580")]
		[Address(RVA = "0xA23D58", Offset = "0xA23D58", VA = "0xA23D58")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6000581")]
		[Address(RVA = "0xA23DE8", Offset = "0xA23DE8", VA = "0xA23DE8")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xA23E78", Offset = "0xA23E78", VA = "0xA23E78")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x200003C")]
	public static class Callback
	{
		[Token(Token = "0x2000209")]
		private class RequestCallback
		{
			[Token(Token = "0x4000765")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x846260", Offset = "0x846260", VA = "0x846260")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x845AC4", Offset = "0x845AC4", VA = "0x845AC4")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x846268", Offset = "0x846268", VA = "0x846268", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x200020A")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4000766")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x6000F2F")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6000F30")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, Request> requestIDsToRequests;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x6000584")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x8459CC", Offset = "0x8459CC", VA = "0x8459CC")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x845AF0", Offset = "0x845AF0", VA = "0x845AF0")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x845BC0", Offset = "0x845BC0", VA = "0x845BC0")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x845EDC", Offset = "0x845EDC", VA = "0x845EDC")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x845F74", Offset = "0x845F74", VA = "0x845F74")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x846010", Offset = "0x846010", VA = "0x846010")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x845D30", Offset = "0x845D30", VA = "0x845D30")]
		internal static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x200003D")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x600058D")]
		[Address(RVA = "0x846630", Offset = "0x846630", VA = "0x846630")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x8466A0", Offset = "0x8466A0", VA = "0x8466A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x84679C", Offset = "0x84679C", VA = "0x84679C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x846828", Offset = "0x846828", VA = "0x846828")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x84682C", Offset = "0x84682C", VA = "0x84682C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x846888", Offset = "0x846888", VA = "0x846888")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x200003E")]
	public enum ChallengeCreationType
	{
		[Token(Token = "0x40000F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5113AC", Offset = "0x5113AC")]
		Unknown,
		[Token(Token = "0x40000FA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5113E4", Offset = "0x5113E4")]
		UserCreated,
		[Token(Token = "0x40000FB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51141C", Offset = "0x51141C")]
		DeveloperCreated
	}
	[Token(Token = "0x200003F")]
	public class ChallengeOptions
	{
		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x846898", Offset = "0x846898", VA = "0x846898")]
		public ChallengeOptions()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x846910", Offset = "0x846910", VA = "0x846910")]
		public void SetDescription(string value)
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x84698C", Offset = "0x84698C", VA = "0x84698C")]
		public void SetEndDate(DateTime value)
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x846A08", Offset = "0x846A08", VA = "0x846A08")]
		public void SetIncludeActiveChallenges(bool value)
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x846A84", Offset = "0x846A84", VA = "0x846A84")]
		public void SetIncludeFutureChallenges(bool value)
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x846B00", Offset = "0x846B00", VA = "0x846B00")]
		public void SetIncludePastChallenges(bool value)
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x846B7C", Offset = "0x846B7C", VA = "0x846B7C")]
		public void SetLeaderboardName(string value)
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x846BF8", Offset = "0x846BF8", VA = "0x846BF8")]
		public void SetStartDate(DateTime value)
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x846C74", Offset = "0x846C74", VA = "0x846C74")]
		public void SetTitle(string value)
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x846CF0", Offset = "0x846CF0", VA = "0x846CF0")]
		public void SetViewerFilter(ChallengeViewerFilter value)
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x846D6C", Offset = "0x846D6C", VA = "0x846D6C")]
		public void SetVisibility(ChallengeVisibility value)
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x846DE8", Offset = "0x846DE8", VA = "0x846DE8")]
		public static explicit operator IntPtr(ChallengeOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x846E38", Offset = "0x846E38", VA = "0x846E38", Slot = "1")]
		~ChallengeOptions()
		{
		}
	}
	[Token(Token = "0x2000040")]
	public enum ChallengeViewerFilter
	{
		[Token(Token = "0x40000FE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511454", Offset = "0x511454")]
		Unknown,
		[Token(Token = "0x40000FF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51148C", Offset = "0x51148C")]
		AllVisible,
		[Token(Token = "0x4000100")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5114C4", Offset = "0x5114C4")]
		Participating,
		[Token(Token = "0x4000101")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5114FC", Offset = "0x5114FC")]
		Invited,
		[Token(Token = "0x4000102")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511534", Offset = "0x511534")]
		ParticipatingOrInvited
	}
	[Token(Token = "0x2000041")]
	public enum ChallengeVisibility
	{
		[Token(Token = "0x4000104")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51156C", Offset = "0x51156C")]
		Unknown,
		[Token(Token = "0x4000105")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5115A4", Offset = "0x5115A4")]
		InviteOnly,
		[Token(Token = "0x4000106")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5115DC", Offset = "0x5115DC")]
		Public,
		[Token(Token = "0x4000107")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511614", Offset = "0x511614")]
		Private
	}
	[Token(Token = "0x2000042")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x4000109")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51164C", Offset = "0x51164C")]
		Unknown,
		[Token(Token = "0x400010A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511684", Offset = "0x511684")]
		InSync,
		[Token(Token = "0x400010B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5116BC", Offset = "0x5116BC")]
		NeedsDownload,
		[Token(Token = "0x400010C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5116F4", Offset = "0x5116F4")]
		RemoteDownloading,
		[Token(Token = "0x400010D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51172C", Offset = "0x51172C")]
		NeedsUpload,
		[Token(Token = "0x400010E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511764", Offset = "0x511764")]
		LocalUploading,
		[Token(Token = "0x400010F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51179C", Offset = "0x51179C")]
		InConflict
	}
	[Token(Token = "0x2000043")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x4000111")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5117D4", Offset = "0x5117D4")]
		Unknown,
		[Token(Token = "0x4000112")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51180C", Offset = "0x51180C")]
		Ok,
		[Token(Token = "0x4000113")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511844", Offset = "0x511844")]
		BetterVersionStored,
		[Token(Token = "0x4000114")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51187C", Offset = "0x51187C")]
		ManualMergeRequired
	}
	[Token(Token = "0x2000044")]
	public interface IMicrophone
	{
		[Token(Token = "0x60005A0")]
		void Start();

		[Token(Token = "0x60005A1")]
		void Stop();

		[Token(Token = "0x60005A2")]
		float[] Update();
	}
	[Token(Token = "0x2000045")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x60005A3")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x60005A4")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x60005A5")]
		void Update();

		[Token(Token = "0x60005A6")]
		int PeekSizeElements();
	}
	[Token(Token = "0x2000046")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x4000116")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5118B4", Offset = "0x5118B4")]
		String,
		[Token(Token = "0x4000117")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5118EC", Offset = "0x5118EC")]
		Int,
		[Token(Token = "0x4000118")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511924", Offset = "0x511924")]
		Double,
		[Token(Token = "0x4000119")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51195C", Offset = "0x51195C")]
		Unknown
	}
	[Token(Token = "0x2000047")]
	public enum LaunchResult
	{
		[Token(Token = "0x400011B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511994", Offset = "0x511994")]
		Unknown,
		[Token(Token = "0x400011C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5119CC", Offset = "0x5119CC")]
		Success,
		[Token(Token = "0x400011D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511A04", Offset = "0x511A04")]
		FailedRoomFull,
		[Token(Token = "0x400011E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511A3C", Offset = "0x511A3C")]
		FailedGameAlreadyStarted,
		[Token(Token = "0x400011F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511A74", Offset = "0x511A74")]
		FailedRoomNotFound,
		[Token(Token = "0x4000120")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511AAC", Offset = "0x511AAC")]
		FailedUserDeclined,
		[Token(Token = "0x4000121")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511AE4", Offset = "0x511AE4")]
		FailedOtherReason
	}
	[Token(Token = "0x2000048")]
	public enum LaunchType
	{
		[Token(Token = "0x4000123")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511B1C", Offset = "0x511B1C")]
		Unknown,
		[Token(Token = "0x4000124")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511B54", Offset = "0x511B54")]
		Normal,
		[Token(Token = "0x4000125")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511B8C", Offset = "0x511B8C")]
		Invite,
		[Token(Token = "0x4000126")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511BC4", Offset = "0x511BC4")]
		Coordinated,
		[Token(Token = "0x4000127")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511BFC", Offset = "0x511BFC")]
		Deeplink
	}
	[Token(Token = "0x2000049")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x4000129")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511C34", Offset = "0x511C34")]
		None,
		[Token(Token = "0x400012A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511C6C", Offset = "0x511C6C")]
		Friends,
		[Token(Token = "0x400012B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511CA4", Offset = "0x511CA4")]
		Unknown,
		[Token(Token = "0x400012C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511CDC", Offset = "0x511CDC")]
		UserIds
	}
	[Token(Token = "0x200004A")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x400012E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511D14", Offset = "0x511D14")]
		Top,
		[Token(Token = "0x400012F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511D4C", Offset = "0x511D4C")]
		CenteredOnViewer,
		[Token(Token = "0x4000130")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511D84", Offset = "0x511D84")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x4000131")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511DBC", Offset = "0x511DBC")]
		Unknown
	}
	[Token(Token = "0x200004B")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x4000133")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511DF4", Offset = "0x511DF4")]
		Unknown,
		[Token(Token = "0x4000134")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511E2C", Offset = "0x511E2C")]
		Public,
		[Token(Token = "0x4000135")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511E64", Offset = "0x511E64")]
		Friends,
		[Token(Token = "0x4000136")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511E9C", Offset = "0x511E9C")]
		OnlyMe
	}
	[Token(Token = "0x200004C")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x4000138")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511ED4", Offset = "0x511ED4")]
		Unknown,
		[Token(Token = "0x4000139")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511F0C", Offset = "0x511F0C")]
		MicrophoneOn,
		[Token(Token = "0x400013A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511F44", Offset = "0x511F44")]
		MicrophoneOff
	}
	[Token(Token = "0x200004D")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x400013C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511F7C", Offset = "0x511F7C")]
		Success = 1,
		[Token(Token = "0x400013D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511FB4", Offset = "0x511FB4")]
		Unknown = 0,
		[Token(Token = "0x400013E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x511FEC", Offset = "0x511FEC")]
		NoPackageSet = -1,
		[Token(Token = "0x400013F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512024", Offset = "0x512024")]
		NoFbConnect = -2,
		[Token(Token = "0x4000140")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51205C", Offset = "0x51205C")]
		NoSessionId = -3,
		[Token(Token = "0x4000141")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512094", Offset = "0x512094")]
		MissingParameters = -4
	}
	[Token(Token = "0x200004E")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x4000143")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5120CC", Offset = "0x5120CC")]
		Required,
		[Token(Token = "0x4000144")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512104", Offset = "0x512104")]
		High,
		[Token(Token = "0x4000145")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51213C", Offset = "0x51213C")]
		Medium,
		[Token(Token = "0x4000146")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512174", Offset = "0x512174")]
		Low,
		[Token(Token = "0x4000147")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5121AC", Offset = "0x5121AC")]
		Unknown
	}
	[Token(Token = "0x200004F")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x84C864", Offset = "0x84C864", VA = "0x84C864")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x84C8DC", Offset = "0x84C8DC", VA = "0x84C8DC")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x84C960", Offset = "0x84C960", VA = "0x84C960")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x84C9CC", Offset = "0x84C9CC", VA = "0x84C9CC")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x84CA48", Offset = "0x84CA48", VA = "0x84CA48")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x84CAC4", Offset = "0x84CAC4", VA = "0x84CAC4")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x84CB40", Offset = "0x84CB40", VA = "0x84CB40")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x84CBAC", Offset = "0x84CBAC", VA = "0x84CBAC")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x84CC30", Offset = "0x84CC30", VA = "0x84CC30")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x84CCBC", Offset = "0x84CCBC", VA = "0x84CCBC")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x84CD40", Offset = "0x84CD40", VA = "0x84CD40")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x84CDAC", Offset = "0x84CDAC", VA = "0x84CDAC")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x84CE28", Offset = "0x84CE28", VA = "0x84CE28")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x84B7F8", Offset = "0x84B7F8", VA = "0x84B7F8")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x84CEA4", Offset = "0x84CEA4", VA = "0x84CEA4", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x2000050")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x400014A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5121E4", Offset = "0x5121E4")]
		Unknown,
		[Token(Token = "0x400014B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51221C", Offset = "0x51221C")]
		Trailing,
		[Token(Token = "0x400014C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512254", Offset = "0x512254")]
		Swingy
	}
	[Token(Token = "0x2000051")]
	public enum MediaContentType
	{
		[Token(Token = "0x400014E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51228C", Offset = "0x51228C")]
		Unknown,
		[Token(Token = "0x400014F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5122C4", Offset = "0x5122C4")]
		Photo
	}
	[Token(Token = "0x2000052")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x200020B")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000022")]
		public T Data
		{
			[Token(Token = "0x60005B7")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60005B6")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x60005B8")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x2000053")]
	public class Message
	{
		[Token(Token = "0x200020C")]
		public delegate void Callback(Message message);

		[Token(Token = "0x200020D")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4000768")]
			Unknown = 0u,
			[Token(Token = "0x4000769")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x400076A")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x400076B")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x400076C")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x400076D")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x400076E")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x400076F")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4000770")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4000771")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4000772")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x4000773")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4000774")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4000775")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4000776")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4000777")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4000778")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4000779")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x400077A")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x400077B")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x400077C")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x400077D")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x400077E")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x400077F")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x4000780")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x4000781")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x4000782")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x4000783")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x4000784")]
			Challenges_Create = 1750718017u,
			[Token(Token = "0x4000785")]
			Challenges_DeclineInvite = 1452177088u,
			[Token(Token = "0x4000786")]
			Challenges_Delete = 642287050u,
			[Token(Token = "0x4000787")]
			Challenges_Get = 2002276083u,
			[Token(Token = "0x4000788")]
			Challenges_GetEntries = 303739999u,
			[Token(Token = "0x4000789")]
			Challenges_GetEntriesAfterRank = 143202943u,
			[Token(Token = "0x400078A")]
			Challenges_GetEntriesByIds = 828705244u,
			[Token(Token = "0x400078B")]
			Challenges_GetList = 1126581078u,
			[Token(Token = "0x400078C")]
			Challenges_GetNextChallenges = 1534894518u,
			[Token(Token = "0x400078D")]
			Challenges_GetNextEntries = 2135728326u,
			[Token(Token = "0x400078E")]
			Challenges_GetPreviousChallenges = 246678541u,
			[Token(Token = "0x400078F")]
			Challenges_GetPreviousEntries = 2026439792u,
			[Token(Token = "0x4000790")]
			Challenges_Join = 556040297u,
			[Token(Token = "0x4000791")]
			Challenges_Leave = 694228709u,
			[Token(Token = "0x4000792")]
			Challenges_UpdateInfo = 292929120u,
			[Token(Token = "0x4000793")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4000794")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4000795")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4000796")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4000797")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4000798")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4000799")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x400079A")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x400079B")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x400079C")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x400079D")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x400079E")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x400079F")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x40007A0")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x40007A1")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x40007A2")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x40007A3")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x40007A4")]
			IAP_GetViewerPurchasesDurableCache = 1666817579u,
			[Token(Token = "0x40007A5")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x40007A6")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x40007A7")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x40007A8")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x40007A9")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x40007AA")]
			Leaderboard_GetEntriesByIds = 962624508u,
			[Token(Token = "0x40007AB")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x40007AC")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x40007AD")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x40007AE")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x40007AF")]
			Livestreaming_LaunchLivestreamingFlow = 1790006973u,
			[Token(Token = "0x40007B0")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x40007B1")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x40007B2")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x40007B3")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x40007B4")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x40007B5")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x40007B6")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x40007B7")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x40007B8")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x40007B9")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x40007BA")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x40007BB")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x40007BC")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x40007BD")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x40007BE")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x40007BF")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x40007C0")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x40007C1")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x40007C2")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x40007C3")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x40007C4")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x40007C5")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x40007C6")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x40007C7")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x40007C8")]
			RichPresence_Clear = 1471632051u,
			[Token(Token = "0x40007C9")]
			RichPresence_GetDestinations = 1483681044u,
			[Token(Token = "0x40007CA")]
			RichPresence_GetNextDestinationArrayPage = 1731624773u,
			[Token(Token = "0x40007CB")]
			RichPresence_Set = 1007973641u,
			[Token(Token = "0x40007CC")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x40007CD")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x40007CE")]
			Room_Get = 1704628152u,
			[Token(Token = "0x40007CF")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x40007D0")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x40007D1")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x40007D2")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x40007D3")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x40007D4")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x40007D5")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x40007D6")]
			Room_Join = 382373641u,
			[Token(Token = "0x40007D7")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x40007D8")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x40007D9")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x40007DA")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x40007DB")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x40007DC")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x40007DD")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x40007DE")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x40007DF")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x40007E0")]
			User_Get = 1808768583u,
			[Token(Token = "0x40007E1")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x40007E2")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x40007E3")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x40007E4")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x40007E5")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x40007E6")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x40007E7")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x40007E8")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x40007E9")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x40007EA")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x40007EB")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x40007EC")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x40007ED")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x40007EE")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x40007EF")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x40007F0")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x40007F1")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x40007F2")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x40007F3")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x40007F4")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x40007F5")]
			Notification_NetSync_ConnectionStatusChanged = 120882378u,
			[Token(Token = "0x40007F6")]
			Notification_NetSync_SessionsChanged = 947814198u,
			[Token(Token = "0x40007F7")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x40007F8")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x40007F9")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x40007FA")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x40007FB")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x40007FC")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x40007FD")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x40007FE")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x40007FF")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x4000800")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x4000801")]
			Notification_Vrcamera_GetSurfaceUpdate = 938610820u,
			[Token(Token = "0x4000802")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x4000803")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x4000804")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x4000805")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x200020E")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5122FC", Offset = "0x5122FC")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000023")]
		public MessageType Type
		{
			[Token(Token = "0x60005BB")]
			[Address(RVA = "0x84D310", Offset = "0x84D310", VA = "0x84D310")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000024")]
		public bool IsError
		{
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0x84D318", Offset = "0x84D318", VA = "0x84D318")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000025")]
		public ulong RequestID
		{
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0x84D328", Offset = "0x84D328", VA = "0x84D328")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000026")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6000609")]
			[Address(RVA = "0x850B38", Offset = "0x850B38", VA = "0x850B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A22C", Offset = "0x51A22C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000608")]
			[Address(RVA = "0x850AE4", Offset = "0x850AE4", VA = "0x850AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A21C", Offset = "0x51A21C")]
			set
			{
			}
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x84D090", Offset = "0x84D090", VA = "0x84D090")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x84D308", Offset = "0x84D308", VA = "0x84D308", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x84D330", Offset = "0x84D330", VA = "0x84D330", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x84D338", Offset = "0x84D338", VA = "0x84D338", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x84D340", Offset = "0x84D340", VA = "0x84D340", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x84D348", Offset = "0x84D348", VA = "0x84D348", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x84D350", Offset = "0x84D350", VA = "0x84D350", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x84D358", Offset = "0x84D358", VA = "0x84D358", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x84D360", Offset = "0x84D360", VA = "0x84D360", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x84D368", Offset = "0x84D368", VA = "0x84D368", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x84D370", Offset = "0x84D370", VA = "0x84D370", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x84D378", Offset = "0x84D378", VA = "0x84D378", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x84D380", Offset = "0x84D380", VA = "0x84D380", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x84D388", Offset = "0x84D388", VA = "0x84D388", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x84D390", Offset = "0x84D390", VA = "0x84D390", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x84D398", Offset = "0x84D398", VA = "0x84D398", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x84D3A0", Offset = "0x84D3A0", VA = "0x84D3A0", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x84D3A8", Offset = "0x84D3A8", VA = "0x84D3A8", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x84D3B0", Offset = "0x84D3B0", VA = "0x84D3B0", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x84D3B8", Offset = "0x84D3B8", VA = "0x84D3B8", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x84D3C0", Offset = "0x84D3C0", VA = "0x84D3C0", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x84D3C8", Offset = "0x84D3C8", VA = "0x84D3C8", Slot = "23")]
		public virtual Challenge GetChallenge()
		{
			return null;
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x84D3D0", Offset = "0x84D3D0", VA = "0x84D3D0", Slot = "24")]
		public virtual ChallengeEntryList GetChallengeEntryList()
		{
			return null;
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x84D3D8", Offset = "0x84D3D8", VA = "0x84D3D8", Slot = "25")]
		public virtual ChallengeList GetChallengeList()
		{
			return null;
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x84D3E0", Offset = "0x84D3E0", VA = "0x84D3E0", Slot = "26")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x84D3E8", Offset = "0x84D3E8", VA = "0x84D3E8", Slot = "27")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x84D3F0", Offset = "0x84D3F0", VA = "0x84D3F0", Slot = "28")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x84D3F8", Offset = "0x84D3F8", VA = "0x84D3F8", Slot = "29")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x84D400", Offset = "0x84D400", VA = "0x84D400", Slot = "30")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x84D408", Offset = "0x84D408", VA = "0x84D408", Slot = "31")]
		public virtual DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x84D410", Offset = "0x84D410", VA = "0x84D410", Slot = "32")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x84D418", Offset = "0x84D418", VA = "0x84D418", Slot = "33")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x84D420", Offset = "0x84D420", VA = "0x84D420", Slot = "34")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x84D428", Offset = "0x84D428", VA = "0x84D428", Slot = "35")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x84D430", Offset = "0x84D430", VA = "0x84D430", Slot = "36")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x84D438", Offset = "0x84D438", VA = "0x84D438", Slot = "37")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x84D440", Offset = "0x84D440", VA = "0x84D440", Slot = "38")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x84D448", Offset = "0x84D448", VA = "0x84D448", Slot = "39")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x84D450", Offset = "0x84D450", VA = "0x84D450", Slot = "40")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x84D458", Offset = "0x84D458", VA = "0x84D458", Slot = "41")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x84D460", Offset = "0x84D460", VA = "0x84D460", Slot = "42")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x84D468", Offset = "0x84D468", VA = "0x84D468", Slot = "43")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x84D470", Offset = "0x84D470", VA = "0x84D470", Slot = "44")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x84D478", Offset = "0x84D478", VA = "0x84D478", Slot = "45")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x84D480", Offset = "0x84D480", VA = "0x84D480", Slot = "46")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x84D488", Offset = "0x84D488", VA = "0x84D488", Slot = "47")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x84D490", Offset = "0x84D490", VA = "0x84D490", Slot = "48")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x84D498", Offset = "0x84D498", VA = "0x84D498", Slot = "49")]
		public virtual NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x84D4A0", Offset = "0x84D4A0", VA = "0x84D4A0", Slot = "50")]
		public virtual NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x84D4A8", Offset = "0x84D4A8", VA = "0x84D4A8", Slot = "51")]
		public virtual NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x84D4B0", Offset = "0x84D4B0", VA = "0x84D4B0", Slot = "52")]
		public virtual NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x84D4B8", Offset = "0x84D4B8", VA = "0x84D4B8", Slot = "53")]
		public virtual NetSyncVoipAttenuationValueList GetNetSyncVoipAttenuationValueList()
		{
			return null;
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x84D4C0", Offset = "0x84D4C0", VA = "0x84D4C0", Slot = "54")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x84D4C8", Offset = "0x84D4C8", VA = "0x84D4C8", Slot = "55")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x84D4D0", Offset = "0x84D4D0", VA = "0x84D4D0", Slot = "56")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x84D4D8", Offset = "0x84D4D8", VA = "0x84D4D8", Slot = "57")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x84D4E0", Offset = "0x84D4E0", VA = "0x84D4E0", Slot = "58")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x84D4E8", Offset = "0x84D4E8", VA = "0x84D4E8", Slot = "59")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x84D4F0", Offset = "0x84D4F0", VA = "0x84D4F0", Slot = "60")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x84D4F8", Offset = "0x84D4F8", VA = "0x84D4F8", Slot = "61")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x84D500", Offset = "0x84D500", VA = "0x84D500", Slot = "62")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x84D508", Offset = "0x84D508", VA = "0x84D508", Slot = "63")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x84D510", Offset = "0x84D510", VA = "0x84D510", Slot = "64")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x84D518", Offset = "0x84D518", VA = "0x84D518", Slot = "65")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x84D520", Offset = "0x84D520", VA = "0x84D520", Slot = "66")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x84D528", Offset = "0x84D528", VA = "0x84D528", Slot = "67")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x84D530", Offset = "0x84D530", VA = "0x84D530", Slot = "68")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x84D538", Offset = "0x84D538", VA = "0x84D538", Slot = "69")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x84D540", Offset = "0x84D540", VA = "0x84D540", Slot = "70")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x84D548", Offset = "0x84D548", VA = "0x84D548", Slot = "71")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x84D550", Offset = "0x84D550", VA = "0x84D550", Slot = "72")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x84D558", Offset = "0x84D558", VA = "0x84D558", Slot = "73")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x84D560", Offset = "0x84D560", VA = "0x84D560", Slot = "74")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x84D568", Offset = "0x84D568", VA = "0x84D568", Slot = "75")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x84D570", Offset = "0x84D570", VA = "0x84D570")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x845C3C", Offset = "0x845C3C", VA = "0x845C3C")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x2000054")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x600060A")]
		[Address(RVA = "0x850F14", Offset = "0x850F14", VA = "0x850F14")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x850F74", Offset = "0x850F74", VA = "0x850F74", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x850FB8", Offset = "0x850FB8", VA = "0x850FB8", Slot = "76")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000055")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x600060D")]
		[Address(RVA = "0x84EC48", Offset = "0x84EC48", VA = "0x84EC48")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x8510DC", Offset = "0x8510DC", VA = "0x8510DC", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x851120", Offset = "0x851120", VA = "0x851120", Slot = "76")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000056")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6000610")]
		[Address(RVA = "0x84ECA8", Offset = "0x84ECA8", VA = "0x84ECA8")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x8513BC", Offset = "0x8513BC", VA = "0x8513BC", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x851400", Offset = "0x851400", VA = "0x851400", Slot = "76")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000057")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6000613")]
		[Address(RVA = "0x84ED08", Offset = "0x84ED08", VA = "0x84ED08")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x85169C", Offset = "0x85169C", VA = "0x85169C", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x8516E0", Offset = "0x8516E0", VA = "0x8516E0", Slot = "76")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000058")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x6000616")]
		[Address(RVA = "0x84ED68", Offset = "0x84ED68", VA = "0x84ED68")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x851818", Offset = "0x851818", VA = "0x851818", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x85185C", Offset = "0x85185C", VA = "0x85185C", Slot = "76")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000059")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x6000619")]
		[Address(RVA = "0x84EDC8", Offset = "0x84EDC8", VA = "0x84EDC8")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x8519B0", Offset = "0x8519B0", VA = "0x8519B0", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x8519F4", Offset = "0x8519F4", VA = "0x8519F4", Slot = "76")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200005A")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x600061C")]
		[Address(RVA = "0x84EE28", Offset = "0x84EE28", VA = "0x84EE28")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x851BE0", Offset = "0x851BE0", VA = "0x851BE0", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x851C24", Offset = "0x851C24", VA = "0x851C24", Slot = "76")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200005B")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x600061F")]
		[Address(RVA = "0x84EE88", Offset = "0x84EE88", VA = "0x84EE88")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x851E90", Offset = "0x851E90", VA = "0x851E90", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x851ED4", Offset = "0x851ED4", VA = "0x851ED4", Slot = "76")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200005C")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x6000622")]
		[Address(RVA = "0x84EEE8", Offset = "0x84EEE8", VA = "0x84EEE8")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x85202C", Offset = "0x85202C", VA = "0x85202C", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x852070", Offset = "0x852070", VA = "0x852070", Slot = "76")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200005D")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x6000625")]
		[Address(RVA = "0x84EF48", Offset = "0x84EF48", VA = "0x84EF48")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x8521C8", Offset = "0x8521C8", VA = "0x8521C8", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x85220C", Offset = "0x85220C", VA = "0x85220C", Slot = "76")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200005E")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x6000628")]
		[Address(RVA = "0x84EFA8", Offset = "0x84EFA8", VA = "0x84EFA8")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x852340", Offset = "0x852340", VA = "0x852340", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x852384", Offset = "0x852384", VA = "0x852384", Slot = "76")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200005F")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x600062B")]
		[Address(RVA = "0x84F008", Offset = "0x84F008", VA = "0x84F008")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x8524EC", Offset = "0x8524EC", VA = "0x8524EC", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x852530", Offset = "0x852530", VA = "0x852530", Slot = "76")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000060")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x600062E")]
		[Address(RVA = "0x84F068", Offset = "0x84F068", VA = "0x84F068")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x852674", Offset = "0x852674", VA = "0x852674", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x8526B8", Offset = "0x8526B8", VA = "0x8526B8", Slot = "76")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000061")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x8527DC", Offset = "0x8527DC", VA = "0x8527DC")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x85283C", Offset = "0x85283C", VA = "0x85283C", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x852880", Offset = "0x852880", VA = "0x852880", Slot = "76")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000062")]
	public class MessageWithChallenge : Message<Challenge>
	{
		[Token(Token = "0x6000634")]
		[Address(RVA = "0x84F0C8", Offset = "0x84F0C8", VA = "0x84F0C8")]
		public MessageWithChallenge(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x852AEC", Offset = "0x852AEC", VA = "0x852AEC", Slot = "23")]
		public override Challenge GetChallenge()
		{
			return null;
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x852B30", Offset = "0x852B30", VA = "0x852B30", Slot = "76")]
		protected override Challenge GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000063")]
	public class MessageWithChallengeList : Message<ChallengeList>
	{
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x84F128", Offset = "0x84F128", VA = "0x84F128")]
		public MessageWithChallengeList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x8530C8", Offset = "0x8530C8", VA = "0x8530C8", Slot = "25")]
		public override ChallengeList GetChallengeList()
		{
			return null;
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x85310C", Offset = "0x85310C", VA = "0x85310C", Slot = "76")]
		protected override ChallengeList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000064")]
	public class MessageWithChallengeEntryList : Message<ChallengeEntryList>
	{
		[Token(Token = "0x600063A")]
		[Address(RVA = "0x84F188", Offset = "0x84F188", VA = "0x84F188")]
		public MessageWithChallengeEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x852DC8", Offset = "0x852DC8", VA = "0x852DC8", Slot = "24")]
		public override ChallengeEntryList GetChallengeEntryList()
		{
			return null;
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x852E0C", Offset = "0x852E0C", VA = "0x852E0C", Slot = "76")]
		protected override ChallengeEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000065")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x600063D")]
		[Address(RVA = "0x84F1E8", Offset = "0x84F1E8", VA = "0x84F1E8")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x8533C8", Offset = "0x8533C8", VA = "0x8533C8", Slot = "26")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x85340C", Offset = "0x85340C", VA = "0x85340C", Slot = "76")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000066")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x6000640")]
		[Address(RVA = "0x84F248", Offset = "0x84F248", VA = "0x84F248")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x853588", Offset = "0x853588", VA = "0x853588", Slot = "27")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x8535CC", Offset = "0x8535CC", VA = "0x8535CC", Slot = "76")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000067")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x6000643")]
		[Address(RVA = "0x84F2A8", Offset = "0x84F2A8", VA = "0x84F2A8")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x853A00", Offset = "0x853A00", VA = "0x853A00", Slot = "28")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x853A44", Offset = "0x853A44", VA = "0x853A44", Slot = "76")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000068")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x6000646")]
		[Address(RVA = "0x84F308", Offset = "0x84F308", VA = "0x84F308")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x853720", Offset = "0x853720", VA = "0x853720", Slot = "29")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x853764", Offset = "0x853764", VA = "0x853764", Slot = "76")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000069")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x6000649")]
		[Address(RVA = "0x84F368", Offset = "0x84F368", VA = "0x84F368")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x853BD8", Offset = "0x853BD8", VA = "0x853BD8", Slot = "30")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x853C1C", Offset = "0x853C1C", VA = "0x853C1C", Slot = "76")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200006A")]
	public class MessageWithDestinationList : Message<DestinationList>
	{
		[Token(Token = "0x600064C")]
		[Address(RVA = "0x84F3C8", Offset = "0x84F3C8", VA = "0x84F3C8")]
		public MessageWithDestinationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x853D70", Offset = "0x853D70", VA = "0x853D70", Slot = "31")]
		public override DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x853DB4", Offset = "0x853DB4", VA = "0x853DB4", Slot = "76")]
		protected override DestinationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200006B")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x600064F")]
		[Address(RVA = "0x854278", Offset = "0x854278", VA = "0x854278")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x8542D8", Offset = "0x8542D8", VA = "0x8542D8", Slot = "32")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x85431C", Offset = "0x85431C", VA = "0x85431C", Slot = "76")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200006C")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x6000652")]
		[Address(RVA = "0x854588", Offset = "0x854588", VA = "0x854588")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x8545E8", Offset = "0x8545E8", VA = "0x8545E8", Slot = "33")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x85462C", Offset = "0x85462C", VA = "0x85462C", Slot = "76")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200006D")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x6000655")]
		[Address(RVA = "0x84F428", Offset = "0x84F428", VA = "0x84F428")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x854768", Offset = "0x854768", VA = "0x854768", Slot = "34")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x8547AC", Offset = "0x8547AC", VA = "0x8547AC", Slot = "76")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200006E")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x6000658")]
		[Address(RVA = "0x8548E8", Offset = "0x8548E8", VA = "0x8548E8")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x854948", Offset = "0x854948", VA = "0x854948", Slot = "35")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x85498C", Offset = "0x85498C", VA = "0x85498C", Slot = "76")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200006F")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x600065B")]
		[Address(RVA = "0x854AC4", Offset = "0x854AC4", VA = "0x854AC4")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x854B24", Offset = "0x854B24", VA = "0x854B24", Slot = "36")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x854B68", Offset = "0x854B68", VA = "0x854B68", Slot = "76")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000070")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x600065E")]
		[Address(RVA = "0x84F488", Offset = "0x84F488", VA = "0x84F488")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x854D60", Offset = "0x854D60", VA = "0x854D60", Slot = "38")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x854DA4", Offset = "0x854DA4", VA = "0x854DA4", Slot = "76")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000071")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x6000661")]
		[Address(RVA = "0x855060", Offset = "0x855060", VA = "0x855060")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x8550C0", Offset = "0x8550C0", VA = "0x8550C0", Slot = "39")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x855104", Offset = "0x855104", VA = "0x855104", Slot = "76")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000072")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x6000664")]
		[Address(RVA = "0x855370", Offset = "0x855370", VA = "0x855370")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x8553D0", Offset = "0x8553D0", VA = "0x8553D0", Slot = "40")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x855414", Offset = "0x855414", VA = "0x855414", Slot = "76")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000073")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x6000667")]
		[Address(RVA = "0x85553C", Offset = "0x85553C", VA = "0x85553C")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x85559C", Offset = "0x85559C", VA = "0x85559C", Slot = "41")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x8555E0", Offset = "0x8555E0", VA = "0x8555E0", Slot = "76")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000074")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x600066A")]
		[Address(RVA = "0x84F548", Offset = "0x84F548", VA = "0x84F548")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x855704", Offset = "0x855704", VA = "0x855704", Slot = "42")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x855748", Offset = "0x855748", VA = "0x855748", Slot = "76")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000075")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x600066D")]
		[Address(RVA = "0x8558BC", Offset = "0x8558BC", VA = "0x8558BC")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x85591C", Offset = "0x85591C", VA = "0x85591C", Slot = "43")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x855960", Offset = "0x855960", VA = "0x855960", Slot = "76")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000076")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x6000670")]
		[Address(RVA = "0x84F5A8", Offset = "0x84F5A8", VA = "0x84F5A8")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x855AA4", Offset = "0x855AA4", VA = "0x855AA4", Slot = "44")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x855AE8", Offset = "0x855AE8", VA = "0x855AE8", Slot = "76")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000077")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x6000673")]
		[Address(RVA = "0x84F668", Offset = "0x84F668", VA = "0x84F668")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x855E5C", Offset = "0x855E5C", VA = "0x855E5C", Slot = "46")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x855EA0", Offset = "0x855EA0", VA = "0x855EA0", Slot = "76")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000078")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x6000676")]
		[Address(RVA = "0x84F6C8", Offset = "0x84F6C8", VA = "0x84F6C8")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x85608C", Offset = "0x85608C", VA = "0x85608C", Slot = "47")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x8560D0", Offset = "0x8560D0", VA = "0x8560D0", Slot = "76")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000079")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x6000679")]
		[Address(RVA = "0x84F728", Offset = "0x84F728", VA = "0x84F728")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x856690", Offset = "0x856690", VA = "0x856690", Slot = "48")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x8566D4", Offset = "0x8566D4", VA = "0x8566D4", Slot = "76")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200007A")]
	public class MessageWithNetSyncConnection : Message<NetSyncConnection>
	{
		[Token(Token = "0x600067C")]
		[Address(RVA = "0x84F788", Offset = "0x84F788", VA = "0x84F788")]
		public MessageWithNetSyncConnection(IntPtr c_message)
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x856848", Offset = "0x856848", VA = "0x856848", Slot = "49")]
		public override NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x85688C", Offset = "0x85688C", VA = "0x85688C", Slot = "76")]
		protected override NetSyncConnection GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200007B")]
	public class MessageWithNetSyncSessionList : Message<NetSyncSessionList>
	{
		[Token(Token = "0x600067F")]
		[Address(RVA = "0x8569F0", Offset = "0x8569F0", VA = "0x8569F0")]
		public MessageWithNetSyncSessionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x856A50", Offset = "0x856A50", VA = "0x856A50", Slot = "50")]
		public override NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x856A94", Offset = "0x856A94", VA = "0x856A94", Slot = "76")]
		protected override NetSyncSessionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200007C")]
	public class MessageWithNetSyncSessionsChangedNotification : Message<NetSyncSessionsChangedNotification>
	{
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x84F7E8", Offset = "0x84F7E8", VA = "0x84F7E8")]
		public MessageWithNetSyncSessionsChangedNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x856D00", Offset = "0x856D00", VA = "0x856D00", Slot = "51")]
		public override NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x856D44", Offset = "0x856D44", VA = "0x856D44", Slot = "76")]
		protected override NetSyncSessionsChangedNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200007D")]
	public class MessageWithNetSyncSetSessionPropertyResult : Message<NetSyncSetSessionPropertyResult>
	{
		[Token(Token = "0x6000685")]
		[Address(RVA = "0x856E9C", Offset = "0x856E9C", VA = "0x856E9C")]
		public MessageWithNetSyncSetSessionPropertyResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x856EFC", Offset = "0x856EFC", VA = "0x856EFC", Slot = "52")]
		public override NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x856F40", Offset = "0x856F40", VA = "0x856F40", Slot = "76")]
		protected override NetSyncSetSessionPropertyResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200007E")]
	public class MessageWithNetSyncVoipAttenuationValueList : Message<NetSyncVoipAttenuationValueList>
	{
		[Token(Token = "0x6000688")]
		[Address(RVA = "0x857088", Offset = "0x857088", VA = "0x857088")]
		public MessageWithNetSyncVoipAttenuationValueList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x8570E8", Offset = "0x8570E8", VA = "0x8570E8", Slot = "53")]
		public override NetSyncVoipAttenuationValueList GetNetSyncVoipAttenuationValueList()
		{
			return null;
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x85712C", Offset = "0x85712C", VA = "0x85712C", Slot = "76")]
		protected override NetSyncVoipAttenuationValueList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200007F")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x600068B")]
		[Address(RVA = "0x84F848", Offset = "0x84F848", VA = "0x84F848")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x8574D8", Offset = "0x8574D8", VA = "0x8574D8", Slot = "54")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x85751C", Offset = "0x85751C", VA = "0x85751C", Slot = "76")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000080")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x600068E")]
		[Address(RVA = "0x857640", Offset = "0x857640", VA = "0x857640")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x8576A0", Offset = "0x8576A0", VA = "0x8576A0", Slot = "55")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x8576E4", Offset = "0x8576E4", VA = "0x8576E4", Slot = "76")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000081")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x6000691")]
		[Address(RVA = "0x84F8A8", Offset = "0x84F8A8", VA = "0x84F8A8")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x857B78", Offset = "0x857B78", VA = "0x857B78", Slot = "55")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x857BBC", Offset = "0x857BBC", VA = "0x857BBC", Slot = "76")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000082")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x6000694")]
		[Address(RVA = "0x8579B0", Offset = "0x8579B0", VA = "0x8579B0")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x857A10", Offset = "0x857A10", VA = "0x857A10", Slot = "56")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x857A54", Offset = "0x857A54", VA = "0x857A54", Slot = "76")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000083")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x6000697")]
		[Address(RVA = "0x84F908", Offset = "0x84F908", VA = "0x84F908")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x857C58", Offset = "0x857C58", VA = "0x857C58", Slot = "57")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x857C9C", Offset = "0x857C9C", VA = "0x857C9C", Slot = "76")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000084")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x600069A")]
		[Address(RVA = "0x84F968", Offset = "0x84F968", VA = "0x84F968")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x857E20", Offset = "0x857E20", VA = "0x857E20", Slot = "58")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x857E64", Offset = "0x857E64", VA = "0x857E64", Slot = "76")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000085")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x600069D")]
		[Address(RVA = "0x84F9C8", Offset = "0x84F9C8", VA = "0x84F9C8")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x8583D8", Offset = "0x8583D8", VA = "0x8583D8", Slot = "59")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x85841C", Offset = "0x85841C", VA = "0x85841C", Slot = "76")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000086")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x84FA28", Offset = "0x84FA28", VA = "0x84FA28")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x8586B8", Offset = "0x8586B8", VA = "0x8586B8", Slot = "60")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x8586FC", Offset = "0x8586FC", VA = "0x8586FC", Slot = "76")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000087")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x84FA88", Offset = "0x84FA88", VA = "0x84FA88")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x858850", Offset = "0x858850", VA = "0x858850", Slot = "61")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x858894", Offset = "0x858894", VA = "0x858894", Slot = "76")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000088")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x84FAE8", Offset = "0x84FAE8", VA = "0x84FAE8")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x858B30", Offset = "0x858B30", VA = "0x858B30", Slot = "62")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x858B74", Offset = "0x858B74", VA = "0x858B74", Slot = "76")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000089")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x84FB48", Offset = "0x84FB48", VA = "0x84FB48")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x859368", Offset = "0x859368", VA = "0x859368", Slot = "62")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x8593AC", Offset = "0x8593AC", VA = "0x8593AC", Slot = "76")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200008A")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x84FBA8", Offset = "0x84FBA8", VA = "0x84FBA8")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x859448", Offset = "0x859448", VA = "0x859448", Slot = "62")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x85948C", Offset = "0x85948C", VA = "0x85948C", Slot = "76")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200008B")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x84FC08", Offset = "0x84FC08", VA = "0x84FC08")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x859088", Offset = "0x859088", VA = "0x859088", Slot = "65")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x8590CC", Offset = "0x8590CC", VA = "0x8590CC", Slot = "76")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200008C")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x84FC68", Offset = "0x84FC68", VA = "0x84FC68")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x858C10", Offset = "0x858C10", VA = "0x858C10", Slot = "63")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x858C54", Offset = "0x858C54", VA = "0x858C54", Slot = "76")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200008D")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x84FCC8", Offset = "0x84FCC8", VA = "0x84FCC8")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x858DA8", Offset = "0x858DA8", VA = "0x858DA8", Slot = "64")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x858DEC", Offset = "0x858DEC", VA = "0x858DEC", Slot = "76")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200008E")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x84FD28", Offset = "0x84FD28", VA = "0x84FD28")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x859528", Offset = "0x859528", VA = "0x859528", Slot = "66")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x85956C", Offset = "0x85956C", VA = "0x85956C", Slot = "76")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200008F")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x84FD88", Offset = "0x84FD88", VA = "0x84FD88")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x8597D8", Offset = "0x8597D8", VA = "0x8597D8", Slot = "67")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x85981C", Offset = "0x85981C", VA = "0x85981C", Slot = "76")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000090")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x84FDE8", Offset = "0x84FDE8", VA = "0x84FDE8")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x859940", Offset = "0x859940", VA = "0x859940", Slot = "68")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x859984", Offset = "0x859984", VA = "0x859984", Slot = "76")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000091")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x8599EC", Offset = "0x8599EC", VA = "0x8599EC")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x859A4C", Offset = "0x859A4C", VA = "0x859A4C", Slot = "69")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x859A90", Offset = "0x859A90", VA = "0x859A90", Slot = "76")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000092")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x84FE48", Offset = "0x84FE48", VA = "0x84FE48")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x859BC8", Offset = "0x859BC8", VA = "0x859BC8", Slot = "70")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x859C0C", Offset = "0x859C0C", VA = "0x859C0C", Slot = "76")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000093")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x84FEA8", Offset = "0x84FEA8", VA = "0x84FEA8")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x859D40", Offset = "0x859D40", VA = "0x859D40", Slot = "71")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x859D84", Offset = "0x859D84", VA = "0x859D84", Slot = "76")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000094")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x84FF08", Offset = "0x84FF08", VA = "0x84FF08")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x859F38", Offset = "0x859F38", VA = "0x859F38", Slot = "72")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x859F7C", Offset = "0x859F7C", VA = "0x859F7C", Slot = "76")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000095")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x84FF68", Offset = "0x84FF68", VA = "0x84FF68")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x85A218", Offset = "0x85A218", VA = "0x85A218", Slot = "73")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x85A25C", Offset = "0x85A25C", VA = "0x85A25C", Slot = "76")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000096")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x84FFC8", Offset = "0x84FFC8", VA = "0x84FFC8")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x85A4F8", Offset = "0x85A4F8", VA = "0x85A4F8", Slot = "74")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x85A53C", Offset = "0x85A53C", VA = "0x85A53C", Slot = "76")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000097")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x85A660", Offset = "0x85A660", VA = "0x85A660")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x85A6C0", Offset = "0x85A6C0", VA = "0x85A6C0", Slot = "75")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x85A704", Offset = "0x85A704", VA = "0x85A704", Slot = "76")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000098")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x850028", Offset = "0x850028", VA = "0x850028")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x857398", Offset = "0x857398", VA = "0x857398", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x8573DC", Offset = "0x8573DC", VA = "0x8573DC", Slot = "76")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000099")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x850088", Offset = "0x850088", VA = "0x850088")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x8580D0", Offset = "0x8580D0", VA = "0x8580D0", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x858114", Offset = "0x858114", VA = "0x858114", Slot = "76")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200009A")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x84F4E8", Offset = "0x84F4E8", VA = "0x84F4E8")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x854CA4", Offset = "0x854CA4", VA = "0x854CA4", Slot = "37")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x854CE8", Offset = "0x854CE8", VA = "0x854CE8", Slot = "76")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200009B")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x8500E8", Offset = "0x8500E8", VA = "0x8500E8")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x85624C", Offset = "0x85624C", VA = "0x85624C", Slot = "62")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x856290", Offset = "0x856290", VA = "0x856290", Slot = "76")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200009C")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x84F608", Offset = "0x84F608", VA = "0x84F608")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x855C40", Offset = "0x855C40", VA = "0x855C40", Slot = "46")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x855C90", Offset = "0x855C90", VA = "0x855C90", Slot = "65")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x855CE0", Offset = "0x855CE0", VA = "0x855CE0", Slot = "76")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200009D")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x850148", Offset = "0x850148", VA = "0x850148")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x854050", Offset = "0x854050", VA = "0x854050", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x854094", Offset = "0x854094", VA = "0x854094", Slot = "76")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200009E")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x8501A8", Offset = "0x8501A8", VA = "0x8501A8")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x858270", Offset = "0x858270", VA = "0x858270", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x8582B4", Offset = "0x8582B4", VA = "0x8582B4", Slot = "76")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200009F")]
	public enum NetSyncConnectionStatus
	{
		[Token(Token = "0x4000156")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51230C", Offset = "0x51230C")]
		Unknown,
		[Token(Token = "0x4000157")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512344", Offset = "0x512344")]
		Connecting,
		[Token(Token = "0x4000158")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51237C", Offset = "0x51237C")]
		Disconnected,
		[Token(Token = "0x4000159")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5123B4", Offset = "0x5123B4")]
		Connected
	}
	[Token(Token = "0x20000A0")]
	public enum NetSyncDisconnectReason
	{
		[Token(Token = "0x400015B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5123EC", Offset = "0x5123EC")]
		Unknown,
		[Token(Token = "0x400015C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512424", Offset = "0x512424")]
		LocalTerminated,
		[Token(Token = "0x400015D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51245C", Offset = "0x51245C")]
		ServerTerminated,
		[Token(Token = "0x400015E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512494", Offset = "0x512494")]
		Failed,
		[Token(Token = "0x400015F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5124CC", Offset = "0x5124CC")]
		Lost
	}
	[Token(Token = "0x20000A1")]
	public class NetSyncOptions
	{
		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x85CB1C", Offset = "0x85CB1C", VA = "0x85CB1C")]
		public NetSyncOptions()
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x85CB94", Offset = "0x85CB94", VA = "0x85CB94")]
		public void SetVoipGroup(string value)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x85CC10", Offset = "0x85CC10", VA = "0x85CC10")]
		public void SetVoipStreamDefault(NetSyncVoipStreamMode value)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x85CC8C", Offset = "0x85CC8C", VA = "0x85CC8C")]
		public void SetZoneId(string value)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x85CD08", Offset = "0x85CD08", VA = "0x85CD08")]
		public static explicit operator IntPtr(NetSyncOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x85CD58", Offset = "0x85CD58", VA = "0x85CD58", Slot = "1")]
		~NetSyncOptions()
		{
		}
	}
	[Token(Token = "0x20000A2")]
	public enum NetSyncVoipMicSource
	{
		[Token(Token = "0x4000162")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512504", Offset = "0x512504")]
		Unknown,
		[Token(Token = "0x4000163")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51253C", Offset = "0x51253C")]
		None,
		[Token(Token = "0x4000164")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512574", Offset = "0x512574")]
		Internal
	}
	[Token(Token = "0x20000A3")]
	public enum NetSyncVoipStreamMode
	{
		[Token(Token = "0x4000166")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5125AC", Offset = "0x5125AC")]
		Unknown,
		[Token(Token = "0x4000167")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5125E4", Offset = "0x5125E4")]
		Ambisonic,
		[Token(Token = "0x4000168")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51261C", Offset = "0x51261C")]
		Mono
	}
	[Token(Token = "0x20000A4")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x17000027")]
		public ulong SenderID
		{
			[Token(Token = "0x60006F4")]
			[Address(RVA = "0x85D300", Offset = "0x85D300", VA = "0x85D300")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000028")]
		public ulong Size
		{
			[Token(Token = "0x60006F5")]
			[Address(RVA = "0x85D36C", Offset = "0x85D36C", VA = "0x85D36C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000029")]
		public SendPolicy Policy
		{
			[Token(Token = "0x60006F6")]
			[Address(RVA = "0x85D374", Offset = "0x85D374", VA = "0x85D374")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x85BEFC", Offset = "0x85BEFC", VA = "0x85BEFC")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x85D1AC", Offset = "0x85D1AC", VA = "0x85D1AC")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x85D3E0", Offset = "0x85D3E0", VA = "0x85D3E0", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x85D448", Offset = "0x85D448", VA = "0x85D448", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20000A5")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x400016C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512654", Offset = "0x512654")]
		Unknown,
		[Token(Token = "0x400016D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51268C", Offset = "0x51268C")]
		Join,
		[Token(Token = "0x400016E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5126C4", Offset = "0x5126C4")]
		Leave,
		[Token(Token = "0x400016F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5126FC", Offset = "0x5126FC")]
		Invite,
		[Token(Token = "0x4000170")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512734", Offset = "0x512734")]
		Uninvite
	}
	[Token(Token = "0x20000A6")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x4000172")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51276C", Offset = "0x51276C")]
		Unknown,
		[Token(Token = "0x4000173")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5127A4", Offset = "0x5127A4")]
		Connected,
		[Token(Token = "0x4000174")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5127DC", Offset = "0x5127DC")]
		Timeout,
		[Token(Token = "0x4000175")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512814", Offset = "0x512814")]
		Closed
	}
	[Token(Token = "0x20000A7")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4000177")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51284C", Offset = "0x51284C")]
		Unknown,
		[Token(Token = "0x4000178")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512884", Offset = "0x512884")]
		Granted,
		[Token(Token = "0x4000179")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5128BC", Offset = "0x5128BC")]
		Denied,
		[Token(Token = "0x400017A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5128F4", Offset = "0x5128F4")]
		Blocked
	}
	[Token(Token = "0x20000A8")]
	public enum PermissionType
	{
		[Token(Token = "0x400017C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51292C", Offset = "0x51292C")]
		Unknown,
		[Token(Token = "0x400017D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512964", Offset = "0x512964")]
		Microphone,
		[Token(Token = "0x400017E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51299C", Offset = "0x51299C")]
		WriteExternalStorage
	}
	[Token(Token = "0x20000A9")]
	public sealed class Core
	{
		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x848E28", Offset = "0x848E28", VA = "0x848E28")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x848E90", Offset = "0x848E90", VA = "0x848E90")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x848EFC", Offset = "0x848EFC", VA = "0x848EFC")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x8490E0", Offset = "0x8490E0", VA = "0x8490E0")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x849394", Offset = "0x849394", VA = "0x849394")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x849094", Offset = "0x849094", VA = "0x849094")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x8496AC", Offset = "0x8496AC", VA = "0x8496AC")]
		public Core()
		{
		}
	}
	[Token(Token = "0x20000AA")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6000701")]
		[Address(RVA = "0xA014F8", Offset = "0xA014F8", VA = "0xA014F8")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xA015F8", Offset = "0xA015F8", VA = "0xA015F8")]
		public static void LogDeeplinkResult(string trackingID, LaunchResult result)
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xA01714", Offset = "0xA01714", VA = "0xA01714")]
		public static void SetLaunchIntentChangedNotificationCallback(Message<string>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20000AB")]
	public static class Rooms
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0xE6723C", Offset = "0xE6723C", VA = "0xE6723C")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xE674BC", Offset = "0xE674BC", VA = "0xE674BC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x51A23C", Offset = "0x51A23C")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xE67538", Offset = "0xE67538", VA = "0xE67538")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xE6766C", Offset = "0xE6766C", VA = "0xE6766C")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xE677CC", Offset = "0xE677CC", VA = "0xE677CC")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xE678E8", Offset = "0xE678E8", VA = "0xE678E8")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xE679F4", Offset = "0xE679F4", VA = "0xE679F4")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xE67B10", Offset = "0xE67B10", VA = "0xE67B10")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xE67C1C", Offset = "0xE67C1C", VA = "0xE67C1C")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xE67D64", Offset = "0xE67D64", VA = "0xE67D64")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xE67E70", Offset = "0xE67E70", VA = "0xE67E70")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xE67F94", Offset = "0xE67F94", VA = "0xE67F94")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xE680B8", Offset = "0xE680B8", VA = "0xE680B8")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xE68208", Offset = "0xE68208", VA = "0xE68208")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xE6833C", Offset = "0xE6833C", VA = "0xE6833C")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xE68450", Offset = "0xE68450", VA = "0xE68450")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xE6856C", Offset = "0xE6856C", VA = "0xE6856C")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xE68690", Offset = "0xE68690", VA = "0xE68690")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xE687B4", Offset = "0xE687B4", VA = "0xE687B4")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xE688D0", Offset = "0xE688D0", VA = "0xE688D0")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xE674C0", Offset = "0xE674C0", VA = "0xE674C0")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xE689F4", Offset = "0xE689F4", VA = "0xE689F4")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xE68A6C", Offset = "0xE68A6C", VA = "0xE68A6C")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xE68AE4", Offset = "0xE68AE4", VA = "0xE68AE4")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AC")]
	public static class Matchmaking
	{
		[Token(Token = "0x200020F")]
		public class CustomQuery
		{
			[Token(Token = "0x20002B7")]
			public struct Criterion
			{
				[Token(Token = "0x4000BD2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4000BD3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4000BD4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x6001067")]
				[Address(RVA = "0x5857B0", Offset = "0x5857B0", VA = "0x5857B0")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x4000806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x4000807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x84B370", Offset = "0x84B370", VA = "0x84B370")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x84C84C", Offset = "0x84C84C", VA = "0x84C84C")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x84AEAC", Offset = "0x84AEAC", VA = "0x84AEAC")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x84B108", Offset = "0x84B108", VA = "0x84B108")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x84B23C", Offset = "0x84B23C", VA = "0x84B23C")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x84B6A8", Offset = "0x84B6A8", VA = "0x84B6A8")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x84B848", Offset = "0x84B848", VA = "0x84B848")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x84B964", Offset = "0x84B964", VA = "0x84B964")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x84BA68", Offset = "0x84BA68", VA = "0x84BA68")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x84BBB4", Offset = "0x84BBB4", VA = "0x84BBB4")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x84BD04", Offset = "0x84BD04", VA = "0x84BD04")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x84BE38", Offset = "0x84BE38", VA = "0x84BE38")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x84BF88", Offset = "0x84BF88", VA = "0x84BF88")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x84C0BC", Offset = "0x84C0BC", VA = "0x84C0BC")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x84C20C", Offset = "0x84C20C", VA = "0x84C20C")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x84C340", Offset = "0x84C340", VA = "0x84C340")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x84C490", Offset = "0x84C490", VA = "0x84C490")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x84C59C", Offset = "0x84C59C", VA = "0x84C59C")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x84C6C0", Offset = "0x84C6C0", VA = "0x84C6C0")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x84C7D4", Offset = "0x84C7D4", VA = "0x84C7D4")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20000AD")]
	public static class Net
	{
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x85BDEC", Offset = "0x85BDEC", VA = "0x85BDEC")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x85BFBC", Offset = "0x85BFBC", VA = "0x85BFBC")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x85C108", Offset = "0x85C108", VA = "0x85C108")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x85C1F4", Offset = "0x85C1F4", VA = "0x85C1F4")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x85C2E0", Offset = "0x85C2E0", VA = "0x85C2E0")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x85C3CC", Offset = "0x85C3CC", VA = "0x85C3CC")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x85C4BC", Offset = "0x85C4BC", VA = "0x85C4BC")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x85C5F4", Offset = "0x85C5F4", VA = "0x85C5F4")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x85C6D0", Offset = "0x85C6D0", VA = "0x85C6D0")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x85C7A8", Offset = "0x85C7A8", VA = "0x85C7A8")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x85C8C4", Offset = "0x85C8C4", VA = "0x85C8C4")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x85C93C", Offset = "0x85C93C", VA = "0x85C93C")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x85C9B4", Offset = "0x85C9B4", VA = "0x85C9B4")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20000AE")]
	public static class Leaderboards
	{
		[Token(Token = "0x600073B")]
		[Address(RVA = "0x84A29C", Offset = "0x84A29C", VA = "0x84A29C")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x84A3CC", Offset = "0x84A3CC", VA = "0x84A3CC")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x84A4FC", Offset = "0x84A4FC", VA = "0x84A4FC")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x84A638", Offset = "0x84A638", VA = "0x84A638")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x84A76C", Offset = "0x84A76C", VA = "0x84A76C")]
		public static Request<LeaderboardEntryList> GetEntriesByIds(string leaderboardName, int limit, LeaderboardStartAt startAt, ulong[] userIDs)
		{
			return null;
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x84A8BC", Offset = "0x84A8BC", VA = "0x84A8BC")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AF")]
	public static class Challenges
	{
		[Token(Token = "0x6000741")]
		[Address(RVA = "0x846EF0", Offset = "0x846EF0", VA = "0x846EF0")]
		public static Request<ChallengeEntryList> GetNextEntries(ChallengeEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x847020", Offset = "0x847020", VA = "0x847020")]
		public static Request<ChallengeEntryList> GetPreviousEntries(ChallengeEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x847150", Offset = "0x847150", VA = "0x847150")]
		public static Request<ChallengeList> GetNextChallenges(ChallengeList list)
		{
			return null;
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x847280", Offset = "0x847280", VA = "0x847280")]
		public static Request<ChallengeList> GetPreviousChallenges(ChallengeList list)
		{
			return null;
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x8473B0", Offset = "0x8473B0", VA = "0x8473B0")]
		public static Request<Challenge> Create(string leaderboardName, ChallengeOptions challengeOptions)
		{
			return null;
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x847500", Offset = "0x847500", VA = "0x847500")]
		public static Request<Challenge> DeclineInvite(ulong challengeID)
		{
			return null;
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x84761C", Offset = "0x84761C", VA = "0x84761C")]
		public static Request Delete(ulong challengeID)
		{
			return null;
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x84775C", Offset = "0x84775C", VA = "0x84775C")]
		public static Request<Challenge> Get(ulong challengeID)
		{
			return null;
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x847878", Offset = "0x847878", VA = "0x847878")]
		public static Request<ChallengeEntryList> GetEntries(ulong challengeID, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x8479B4", Offset = "0x8479B4", VA = "0x8479B4")]
		public static Request<ChallengeEntryList> GetEntriesAfterRank(ulong challengeID, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x847AE8", Offset = "0x847AE8", VA = "0x847AE8")]
		public static Request<ChallengeEntryList> GetEntriesByIds(ulong challengeID, int limit, LeaderboardStartAt startAt, ulong[] userIDs)
		{
			return null;
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x847C38", Offset = "0x847C38", VA = "0x847C38")]
		public static Request<ChallengeList> GetList(ChallengeOptions challengeOptions, int limit)
		{
			return null;
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x847D88", Offset = "0x847D88", VA = "0x847D88")]
		public static Request<Challenge> Join(ulong challengeID)
		{
			return null;
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x847EA4", Offset = "0x847EA4", VA = "0x847EA4")]
		public static Request<Challenge> Leave(ulong challengeID)
		{
			return null;
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x847FC0", Offset = "0x847FC0", VA = "0x847FC0")]
		public static Request<Challenge> UpdateInfo(ulong challengeID, ChallengeOptions challengeOptions)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B0")]
	public static class Voip
	{
		[Token(Token = "0x6000750")]
		[Address(RVA = "0xE6A4F8", Offset = "0xE6A4F8", VA = "0xE6A4F8")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xE6A5E4", Offset = "0xE6A5E4", VA = "0xE6A5E4")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xE6A6D0", Offset = "0xE6A6D0", VA = "0xE6A6D0")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xE6A7BC", Offset = "0xE6A7BC", VA = "0xE6A7BC")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xE6A8E0", Offset = "0xE6A8E0", VA = "0xE6A8E0")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xE6A9CC", Offset = "0xE6A9CC", VA = "0xE6A9CC")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xE6AAA8", Offset = "0xE6AAA8", VA = "0xE6AAA8")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xE6AB84", Offset = "0xE6AB84", VA = "0xE6AB84")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xE6AC74", Offset = "0xE6AC74", VA = "0xE6AC74")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xE6AD64", Offset = "0xE6AD64", VA = "0xE6AD64")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xE6AE54", Offset = "0xE6AE54", VA = "0xE6AE54")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xE6AFBC", Offset = "0xE6AFBC", VA = "0xE6AFBC")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xE6B0D8", Offset = "0xE6B0D8", VA = "0xE6B0D8")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xE6B150", Offset = "0xE6B150", VA = "0xE6B150")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xE6B1C8", Offset = "0xE6B1C8", VA = "0xE6B1C8")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20000B1")]
	public static class Achievements
	{
		[Token(Token = "0x600075F")]
		[Address(RVA = "0x9FFD60", Offset = "0x9FFD60", VA = "0x9FFD60")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x9FFF38", Offset = "0x9FFF38", VA = "0x9FFF38")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xA0012C", Offset = "0xA0012C", VA = "0xA0012C")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xA002A8", Offset = "0xA002A8", VA = "0xA002A8")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xA00424", Offset = "0xA00424", VA = "0xA00424")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xA006A4", Offset = "0xA006A4", VA = "0xA006A4")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xA00924", Offset = "0xA00924", VA = "0xA00924")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xA00AE4", Offset = "0xA00AE4", VA = "0xA00AE4")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xA00D04", Offset = "0xA00D04", VA = "0xA00D04")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B2")]
	public static class Application
	{
		[Token(Token = "0x6000768")]
		[Address(RVA = "0xA01150", Offset = "0xA01150", VA = "0xA01150")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xA012CC", Offset = "0xA012CC", VA = "0xA012CC")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B3")]
	public static class AssetFile
	{
		[Token(Token = "0x600076A")]
		[Address(RVA = "0xA01ACC", Offset = "0xA01ACC", VA = "0xA01ACC")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xA01C64", Offset = "0xA01C64", VA = "0xA01C64")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xA01DFC", Offset = "0xA01DFC", VA = "0xA01DFC")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xA01FBC", Offset = "0xA01FBC", VA = "0xA01FBC")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xA02154", Offset = "0xA02154", VA = "0xA02154")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xA022EC", Offset = "0xA022EC", VA = "0xA022EC")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xA024AC", Offset = "0xA024AC", VA = "0xA024AC")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xA02644", Offset = "0xA02644", VA = "0xA02644")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xA027DC", Offset = "0xA027DC", VA = "0xA027DC")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xA0299C", Offset = "0xA0299C", VA = "0xA0299C")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xA02B18", Offset = "0xA02B18", VA = "0xA02B18")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xA02CB0", Offset = "0xA02CB0", VA = "0xA02CB0")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xA02E48", Offset = "0xA02E48", VA = "0xA02E48")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xA03008", Offset = "0xA03008", VA = "0xA03008")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20000B4")]
	public static class Avatar
	{
	}
	[Token(Token = "0x20000B5")]
	public static class Cal
	{
	}
	[Token(Token = "0x20000B6")]
	public static class CloudStorage
	{
		[Token(Token = "0x6000778")]
		[Address(RVA = "0x848110", Offset = "0x848110", VA = "0x848110")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x848234", Offset = "0x848234", VA = "0x848234")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x848358", Offset = "0x848358", VA = "0x848358")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x848474", Offset = "0x848474", VA = "0x848474")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x848598", Offset = "0x848598", VA = "0x848598")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x8486B4", Offset = "0x8486B4", VA = "0x8486B4")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x8487D8", Offset = "0x8487D8", VA = "0x8487D8")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x84890C", Offset = "0x84890C", VA = "0x84890C")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x848A40", Offset = "0x848A40", VA = "0x848A40")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x848BA0", Offset = "0x848BA0", VA = "0x848BA0")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B7")]
	public static class CloudStorage2
	{
		[Token(Token = "0x6000782")]
		[Address(RVA = "0x848D1C", Offset = "0x848D1C", VA = "0x848D1C")]
		public static Request<string> GetUserDirectoryPath()
		{
			return null;
		}
	}
	[Token(Token = "0x20000B8")]
	public static class Colocation
	{
	}
	[Token(Token = "0x20000B9")]
	public static class Entitlements
	{
		[Token(Token = "0x6000783")]
		[Address(RVA = "0x8496B8", Offset = "0x8496B8", VA = "0x8496B8")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x20000BA")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x20000BB")]
	public static class HTTP
	{
	}
	[Token(Token = "0x20000BC")]
	public static class IAP
	{
		[Token(Token = "0x6000784")]
		[Address(RVA = "0x8497BC", Offset = "0x8497BC", VA = "0x8497BC")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x8498D0", Offset = "0x8498D0", VA = "0x8498D0")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x849A00", Offset = "0x849A00", VA = "0x849A00")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x849B0C", Offset = "0x849B0C", VA = "0x849B0C")]
		public static Request<PurchaseList> GetViewerPurchasesDurableCache()
		{
			return null;
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x849C18", Offset = "0x849C18", VA = "0x849C18")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x849D7C", Offset = "0x849D7C", VA = "0x849D7C")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x849EF8", Offset = "0x849EF8", VA = "0x849EF8")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20000BD")]
	public static class LanguagePack
	{
		[Token(Token = "0x600078B")]
		[Address(RVA = "0x84A074", Offset = "0x84A074", VA = "0x84A074")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x84A180", Offset = "0x84A180", VA = "0x84A180")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x20000BE")]
	public static class Livestreaming
	{
		[Token(Token = "0x600078D")]
		[Address(RVA = "0x84AA0C", Offset = "0x84AA0C", VA = "0x84AA0C")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x84AB18", Offset = "0x84AB18", VA = "0x84AB18")]
		public static Request LaunchLivestreamingFlow()
		{
			return null;
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x84AC1C", Offset = "0x84AC1C", VA = "0x84AC1C")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x84AD28", Offset = "0x84AD28", VA = "0x84AD28")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x84AE34", Offset = "0x84AE34", VA = "0x84AE34")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20000BF")]
	public static class Media
	{
		[Token(Token = "0x6000792")]
		[Address(RVA = "0x84CF5C", Offset = "0x84CF5C", VA = "0x84CF5C")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C0")]
	public static class NetSync
	{
		[Token(Token = "0x6000793")]
		[Address(RVA = "0x85CA2C", Offset = "0x85CA2C", VA = "0x85CA2C")]
		public static void SetConnectionStatusChangedNotificationCallback(Message<NetSyncConnection>.Callback callback)
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x85CAA4", Offset = "0x85CAA4", VA = "0x85CAA4")]
		public static void SetSessionsChangedNotificationCallback(Message<NetSyncSessionsChangedNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public static class Notifications
	{
		[Token(Token = "0x6000795")]
		[Address(RVA = "0x85CE10", Offset = "0x85CE10", VA = "0x85CE10")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x85CF1C", Offset = "0x85CF1C", VA = "0x85CF1C")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x85D030", Offset = "0x85D030", VA = "0x85D030")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C2")]
	public static class Parties
	{
		[Token(Token = "0x6000798")]
		[Address(RVA = "0x85D4E0", Offset = "0x85D4E0", VA = "0x85D4E0")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x85D5EC", Offset = "0x85D5EC", VA = "0x85D5EC")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public static class RichPresence
	{
		[Token(Token = "0x600079A")]
		[Address(RVA = "0x85DD80", Offset = "0x85DD80", VA = "0x85DD80")]
		public static Request Clear()
		{
			return null;
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x85DE84", Offset = "0x85DE84", VA = "0x85DE84")]
		public static Request<DestinationList> GetDestinations()
		{
			return null;
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x85DF90", Offset = "0x85DF90", VA = "0x85DF90")]
		public static Request Set(RichPresenceOptions richPresenceOptions)
		{
			return null;
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x85E0B8", Offset = "0x85E0B8", VA = "0x85E0B8")]
		public static Request<DestinationList> GetNextDestinationListPage(DestinationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C4")]
	public static class Users
	{
		[Token(Token = "0x600079E")]
		[Address(RVA = "0xE69608", Offset = "0xE69608", VA = "0xE69608")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xE69724", Offset = "0xE69724", VA = "0xE69724")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xE69830", Offset = "0xE69830", VA = "0xE69830")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xE6993C", Offset = "0xE6993C", VA = "0xE6993C")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xE69A48", Offset = "0xE69A48", VA = "0xE69A48")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xE69B54", Offset = "0xE69B54", VA = "0xE69B54")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xE69C9C", Offset = "0xE69C9C", VA = "0xE69C9C")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xE69DB8", Offset = "0xE69DB8", VA = "0xE69DB8")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xE69EC4", Offset = "0xE69EC4", VA = "0xE69EC4")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xE69FD0", Offset = "0xE69FD0", VA = "0xE69FD0")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xE6A0EC", Offset = "0xE6A0EC", VA = "0xE6A0EC")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xE6A200", Offset = "0xE6A200", VA = "0xE6A200")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xE6A37C", Offset = "0xE6A37C", VA = "0xE6A37C")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C5")]
	public static class Vrcamera
	{
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xE6C2F8", Offset = "0xE6C2F8", VA = "0xE6C2F8")]
		public static void SetGetSurfaceUpdateNotificationCallback(Message<string>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20000C6")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4000182")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5129D4", Offset = "0x5129D4")]
		Success = 0,
		[Token(Token = "0x4000183")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512A0C", Offset = "0x512A0C")]
		Uninitialized = -1,
		[Token(Token = "0x4000184")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512A44", Offset = "0x512A44")]
		PreLoaded = -2,
		[Token(Token = "0x4000185")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512A7C", Offset = "0x512A7C")]
		FileInvalid = -3,
		[Token(Token = "0x4000186")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512AB4", Offset = "0x512AB4")]
		SignatureInvalid = -4,
		[Token(Token = "0x4000187")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512AEC", Offset = "0x512AEC")]
		UnableToVerify = -5,
		[Token(Token = "0x4000188")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512B24", Offset = "0x512B24")]
		VersionMismatch = -6,
		[Token(Token = "0x4000189")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512B5C", Offset = "0x512B5C")]
		Unknown = -7,
		[Token(Token = "0x400018A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512B94", Offset = "0x512B94")]
		InvalidCredentials = -8,
		[Token(Token = "0x400018B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512BCC", Offset = "0x512BCC")]
		NotEntitled = -9
	}
	[Token(Token = "0x20000C7")]
	public static class PlatformInternal
	{
		[Token(Token = "0x2000210")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x4000809")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x400080A")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x400080B")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x400080C")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x400080D")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x400080E")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x400080F")]
			Colocation_GetCurrentMapUuid = 878018226u,
			[Token(Token = "0x4000810")]
			Colocation_RequestMap = 840263277u,
			[Token(Token = "0x4000811")]
			Colocation_ShareMap = 409847005u,
			[Token(Token = "0x4000812")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4000813")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4000814")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4000815")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4000816")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x4000817")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4000818")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x4000819")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x400081A")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x400081B")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x400081C")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x400081D")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x400081E")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x400081F")]
			NetSync_Connect = 1684899167u,
			[Token(Token = "0x4000820")]
			NetSync_Disconnect = 359268021u,
			[Token(Token = "0x4000821")]
			NetSync_GetSessions = 1859521077u,
			[Token(Token = "0x4000822")]
			NetSync_GetVoipAttenuation = 288016919u,
			[Token(Token = "0x4000823")]
			NetSync_GetVoipAttenuationDefault = 1467721888u,
			[Token(Token = "0x4000824")]
			NetSync_SetVoipAttenuation = 882366454u,
			[Token(Token = "0x4000825")]
			NetSync_SetVoipAttenuationModel = 1788128654u,
			[Token(Token = "0x4000826")]
			NetSync_SetVoipChannelCfg = 1553310963u,
			[Token(Token = "0x4000827")]
			NetSync_SetVoipGroup = 1477614734u,
			[Token(Token = "0x4000828")]
			NetSync_SetVoipListentoChannels = 1590749746u,
			[Token(Token = "0x4000829")]
			NetSync_SetVoipMicSource = 855832432u,
			[Token(Token = "0x400082A")]
			NetSync_SetVoipSessionMuted = 1434844938u,
			[Token(Token = "0x400082B")]
			NetSync_SetVoipSpeaktoChannels = 766496213u,
			[Token(Token = "0x400082C")]
			NetSync_SetVoipStreamMode = 1742839095u,
			[Token(Token = "0x400082D")]
			Party_Create = 450042703u,
			[Token(Token = "0x400082E")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x400082F")]
			Party_Get = 1586058173u,
			[Token(Token = "0x4000830")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x4000831")]
			Party_Invite = 901104867u,
			[Token(Token = "0x4000832")]
			Party_Join = 1744993395u,
			[Token(Token = "0x4000833")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4000834")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4000835")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x4000836")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x4000837")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x4000838")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x4000839")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x400083A")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x400083B")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x400083C")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x400083D")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x400083E")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x400083F")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4000840")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4000841")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4000842")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4000843")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4000844")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x4000845")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x2000211")]
		public static class HTTP
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x85D7F4", Offset = "0x85D7F4", VA = "0x85D7F4")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x2000212")]
		public static class Users
		{
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x85D86C", Offset = "0x85D86C", VA = "0x85D86C")]
			public static Request<LinkedAccountList> GetLinkedAccounts(ServiceProvider[] providers)
			{
				return null;
			}
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x85D664", Offset = "0x85D664", VA = "0x85D664")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x850208", Offset = "0x850208", VA = "0x850208")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x85D6C4", Offset = "0x85D6C4", VA = "0x85D6C4")]
		public static Request<PlatformInitialize> InitializeStandaloneAsync(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x20000C8")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x1700002A")]
		public static string AppID
		{
			[Token(Token = "0x60007AF")]
			[Address(RVA = "0x84968C", Offset = "0x84968C", VA = "0x84968C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007B0")]
			[Address(RVA = "0x85DB24", Offset = "0x85DB24", VA = "0x85DB24")]
			set
			{
			}
		}

		[Token(Token = "0x1700002B")]
		public static string MobileAppID
		{
			[Token(Token = "0x60007B1")]
			[Address(RVA = "0x84966C", Offset = "0x84966C", VA = "0x84966C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007B2")]
			[Address(RVA = "0x85DB50", Offset = "0x85DB50", VA = "0x85DB50")]
			set
			{
			}
		}

		[Token(Token = "0x1700002C")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x60007B3")]
			[Address(RVA = "0x849374", Offset = "0x849374", VA = "0x849374")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007B4")]
			[Address(RVA = "0x85DB7C", Offset = "0x85DB7C", VA = "0x85DB7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700002D")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x60007B5")]
			[Address(RVA = "0x85DA10", Offset = "0x85DA10", VA = "0x85DA10")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007B6")]
			[Address(RVA = "0x85DBAC", Offset = "0x85DBAC", VA = "0x85DBAC")]
			set
			{
			}
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x85DC00", Offset = "0x85DC00", VA = "0x85DC00")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Message<T>.Callback callback_;

		[Token(Token = "0x60007B8")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x60007B9")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60007BA")]
		public override void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public class Request
	{
		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Message.Callback callback_;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x512C34", Offset = "0x512C34")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x1700002E")]
		public ulong RequestID
		{
			[Token(Token = "0x60007BC")]
			[Address(RVA = "0x85DC60", Offset = "0x85DC60", VA = "0x85DC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A274", Offset = "0x51A274")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0x85DC68", Offset = "0x85DC68", VA = "0x85DC68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A284", Offset = "0x51A284")]
			set
			{
			}
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x847730", Offset = "0x847730", VA = "0x847730")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x85DC70", Offset = "0x85DC70", VA = "0x85DC70")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x85DCEC", Offset = "0x85DCEC", VA = "0x85DCEC", Slot = "4")]
		public virtual void HandleMessage(Message msg)
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x8467A4", Offset = "0x8467A4", VA = "0x8467A4")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public enum RichPresenceExtraContext
	{
		[Token(Token = "0x4000194")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512C44", Offset = "0x512C44")]
		Unknown,
		[Token(Token = "0x4000195")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512C7C", Offset = "0x512C7C")]
		None,
		[Token(Token = "0x4000196")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512CB4", Offset = "0x512CB4")]
		CurrentCapacity,
		[Token(Token = "0x4000197")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512CEC", Offset = "0x512CEC")]
		StartedAgo,
		[Token(Token = "0x4000198")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512D24", Offset = "0x512D24")]
		EndingIn,
		[Token(Token = "0x4000199")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512D5C", Offset = "0x512D5C")]
		LookingForAMatch
	}
	[Token(Token = "0x20000CC")]
	public class RichPresenceOptions
	{
		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xE66520", Offset = "0xE66520", VA = "0xE66520")]
		public RichPresenceOptions()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xE66598", Offset = "0xE66598", VA = "0xE66598")]
		public void SetApiName(string value)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xE66614", Offset = "0xE66614", VA = "0xE66614")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x51A294", Offset = "0x51A294")]
		public void SetArgs(string key, string value)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xE66698", Offset = "0xE66698", VA = "0xE66698")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x51A2CC", Offset = "0x51A2CC")]
		public void ClearArgs()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xE66704", Offset = "0xE66704", VA = "0xE66704")]
		public void SetCurrentCapacity(uint value)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xE66780", Offset = "0xE66780", VA = "0xE66780")]
		public void SetDeeplinkMessageOverride(string value)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xE667FC", Offset = "0xE667FC", VA = "0xE667FC")]
		public void SetEndTime(DateTime value)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xE66878", Offset = "0xE66878", VA = "0xE66878")]
		public void SetExtraContext(RichPresenceExtraContext value)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xE668F4", Offset = "0xE668F4", VA = "0xE668F4")]
		public void SetInstanceId(string value)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xE66970", Offset = "0xE66970", VA = "0xE66970")]
		public void SetIsIdle(bool value)
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xE669EC", Offset = "0xE669EC", VA = "0xE669EC")]
		public void SetIsJoinable(bool value)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xE66A68", Offset = "0xE66A68", VA = "0xE66A68")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x51A304", Offset = "0x51A304")]
		public void SetJoinableId(string value)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xE66AE4", Offset = "0xE66AE4", VA = "0xE66AE4")]
		public void SetMaxCapacity(uint value)
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xE66B60", Offset = "0xE66B60", VA = "0xE66B60")]
		public void SetStartTime(DateTime value)
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xE66BDC", Offset = "0xE66BDC", VA = "0xE66BDC")]
		public static explicit operator IntPtr(RichPresenceOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xE66C2C", Offset = "0xE66C2C", VA = "0xE66C2C", Slot = "1")]
		~RichPresenceOptions()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x400019C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512D94", Offset = "0x512D94")]
		None,
		[Token(Token = "0x400019D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512DCC", Offset = "0x512DCC")]
		Everyone,
		[Token(Token = "0x400019E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512E04", Offset = "0x512E04")]
		FriendsOfMembers,
		[Token(Token = "0x400019F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512E3C", Offset = "0x512E3C")]
		FriendsOfOwner,
		[Token(Token = "0x40001A0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512E74", Offset = "0x512E74")]
		InvitedUsers,
		[Token(Token = "0x40001A1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512EAC", Offset = "0x512EAC")]
		Unknown
	}
	[Token(Token = "0x20000CE")]
	public enum RoomJoinability
	{
		[Token(Token = "0x40001A3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512EE4", Offset = "0x512EE4")]
		Unknown,
		[Token(Token = "0x40001A4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512F1C", Offset = "0x512F1C")]
		AreIn,
		[Token(Token = "0x40001A5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512F54", Offset = "0x512F54")]
		AreKicked,
		[Token(Token = "0x40001A6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512F8C", Offset = "0x512F8C")]
		CanJoin,
		[Token(Token = "0x40001A7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512FC4", Offset = "0x512FC4")]
		IsFull,
		[Token(Token = "0x40001A8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x512FFC", Offset = "0x512FFC")]
		NoViewer,
		[Token(Token = "0x40001A9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513034", Offset = "0x513034")]
		PolicyPrevents
	}
	[Token(Token = "0x20000CF")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x40001AB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51306C", Offset = "0x51306C")]
		Unknown,
		[Token(Token = "0x40001AC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5130A4", Offset = "0x5130A4")]
		Lock,
		[Token(Token = "0x40001AD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5130DC", Offset = "0x5130DC")]
		Unlock
	}
	[Token(Token = "0x20000D0")]
	public class RoomOptions
	{
		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xE66CE4", Offset = "0xE66CE4", VA = "0xE66CE4")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xE66D5C", Offset = "0xE66D5C", VA = "0xE66D5C")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xE66DE0", Offset = "0xE66DE0", VA = "0xE66DE0")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xE66E4C", Offset = "0xE66E4C", VA = "0xE66E4C")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xE66EC8", Offset = "0xE66EC8", VA = "0xE66EC8")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xE66F44", Offset = "0xE66F44", VA = "0xE66F44")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xE66FC0", Offset = "0xE66FC0", VA = "0xE66FC0")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xE6703C", Offset = "0xE6703C", VA = "0xE6703C")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xE670B8", Offset = "0xE670B8", VA = "0xE670B8")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xE67134", Offset = "0xE67134", VA = "0xE67134")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xE67184", Offset = "0xE67184", VA = "0xE67184", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public enum RoomType
	{
		[Token(Token = "0x40001B0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513114", Offset = "0x513114")]
		Unknown,
		[Token(Token = "0x40001B1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51314C", Offset = "0x51314C")]
		Matchmaking,
		[Token(Token = "0x40001B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513184", Offset = "0x513184")]
		Moderated,
		[Token(Token = "0x40001B3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5131BC", Offset = "0x5131BC")]
		Private,
		[Token(Token = "0x40001B4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5131F4", Offset = "0x5131F4")]
		Solo
	}
	[Token(Token = "0x20000D2")]
	public enum SdkAccountType
	{
		[Token(Token = "0x40001B6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51322C", Offset = "0x51322C")]
		Unknown,
		[Token(Token = "0x40001B7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513264", Offset = "0x513264")]
		Oculus,
		[Token(Token = "0x40001B8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51329C", Offset = "0x51329C")]
		FacebookGameroom
	}
	[Token(Token = "0x20000D3")]
	public enum SendPolicy
	{
		[Token(Token = "0x40001BA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5132D4", Offset = "0x5132D4")]
		Unreliable,
		[Token(Token = "0x40001BB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51330C", Offset = "0x51330C")]
		Reliable,
		[Token(Token = "0x40001BC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513344", Offset = "0x513344")]
		Unknown
	}
	[Token(Token = "0x20000D4")]
	public enum ServiceProvider
	{
		[Token(Token = "0x40001BE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51337C", Offset = "0x51337C")]
		Unknown,
		[Token(Token = "0x40001BF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5133B4", Offset = "0x5133B4")]
		Dropbox,
		[Token(Token = "0x40001C0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5133EC", Offset = "0x5133EC")]
		Facebook,
		[Token(Token = "0x40001C1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513424", Offset = "0x513424")]
		Google,
		[Token(Token = "0x40001C2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51345C", Offset = "0x51345C")]
		Instagram,
		[Token(Token = "0x40001C3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513494", Offset = "0x513494")]
		RemoteMedia
	}
	[Token(Token = "0x20000D5")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x40001C5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5134CC", Offset = "0x5134CC")]
		Unknown,
		[Token(Token = "0x40001C6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513504", Offset = "0x513504")]
		Shared,
		[Token(Token = "0x40001C7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51353C", Offset = "0x51353C")]
		Canceled
	}
	[Token(Token = "0x20000D6")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x2000213")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x510540", Offset = "0x510540")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xE68C60", Offset = "0xE68C60", VA = "0xE68C60")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xE68DA0", Offset = "0xE68DA0", VA = "0xE68DA0")]
		public Request<PlatformInitialize> AsyncInitialize(ulong appID, string accessToken)
		{
			return null;
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xE68E64", Offset = "0xE68E64", VA = "0xE68E64")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x1700002F")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0xE691A4", Offset = "0xE691A4", VA = "0xE691A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0xE691F4", Offset = "0xE691F4", VA = "0xE691F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000030")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0xE691F8", Offset = "0xE691F8", VA = "0xE691F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0xE69248", Offset = "0xE69248", VA = "0xE69248")]
			set
			{
			}
		}

		[Token(Token = "0x17000031")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x60007E3")]
			[Address(RVA = "0xE6924C", Offset = "0xE6924C", VA = "0xE6924C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007E4")]
			[Address(RVA = "0xE6929C", Offset = "0xE6929C", VA = "0xE6929C")]
			set
			{
			}
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xE692A0", Offset = "0xE692A0", VA = "0xE692A0")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x40001C9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513574", Offset = "0x513574")]
		Unknown,
		[Token(Token = "0x40001CA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5135AC", Offset = "0x5135AC")]
		Unavailable,
		[Token(Token = "0x40001CB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5135E4", Offset = "0x5135E4")]
		Suppressed,
		[Token(Token = "0x40001CC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51361C", Offset = "0x51361C")]
		Active
	}
	[Token(Token = "0x20000D9")]
	public enum TimeWindow
	{
		[Token(Token = "0x40001CE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513654", Offset = "0x513654")]
		Unknown,
		[Token(Token = "0x40001CF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51368C", Offset = "0x51368C")]
		OneHour,
		[Token(Token = "0x40001D0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5136C4", Offset = "0x5136C4")]
		OneDay,
		[Token(Token = "0x40001D1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5136FC", Offset = "0x5136FC")]
		OneWeek,
		[Token(Token = "0x40001D2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513734", Offset = "0x513734")]
		ThirtyDays,
		[Token(Token = "0x40001D3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51376C", Offset = "0x51376C")]
		NinetyDays
	}
	[Token(Token = "0x20000DA")]
	public class UserOptions
	{
		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xE692A8", Offset = "0xE692A8", VA = "0xE692A8")]
		public UserOptions()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xE69320", Offset = "0xE69320", VA = "0xE69320")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xE6939C", Offset = "0xE6939C", VA = "0xE6939C")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xE69418", Offset = "0xE69418", VA = "0xE69418")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xE69484", Offset = "0xE69484", VA = "0xE69484")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xE69500", Offset = "0xE69500", VA = "0xE69500")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xE69550", Offset = "0xE69550", VA = "0xE69550", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public enum UserOrdering
	{
		[Token(Token = "0x40001D6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5137A4", Offset = "0x5137A4")]
		Unknown,
		[Token(Token = "0x40001D7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5137DC", Offset = "0x5137DC")]
		None,
		[Token(Token = "0x40001D8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513814", Offset = "0x513814")]
		PresenceAlphabetical
	}
	[Token(Token = "0x20000DC")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x40001DA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51384C", Offset = "0x51384C")]
		Unknown,
		[Token(Token = "0x40001DB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513884", Offset = "0x513884")]
		Online,
		[Token(Token = "0x40001DC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5138BC", Offset = "0x5138BC")]
		Offline
	}
	[Token(Token = "0x20000DD")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x2000214")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x4000846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x4000847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x6000F45")]
			[Address(RVA = "0xE6B9DC", Offset = "0xE6B9DC", VA = "0xE6B9DC")]
			private void Awake()
			{
			}

			[Token(Token = "0x6000F46")]
			[Address(RVA = "0xE6BA94", Offset = "0xE6BA94", VA = "0xE6BA94")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x6000F47")]
			[Address(RVA = "0xE6BF5C", Offset = "0xE6BF5C", VA = "0xE6BF5C")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x17000032")]
		public ulong senderID
		{
			[Token(Token = "0x60007ED")]
			[Address(RVA = "0xE6B240", Offset = "0xE6B240", VA = "0xE6B240")]
			set
			{
			}
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xE6B304", Offset = "0xE6B304", VA = "0xE6B304")]
		protected void Stop()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xE6B308", Offset = "0xE6B308", VA = "0xE6B308")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xE6B344", Offset = "0xE6B344", VA = "0xE6B344")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xE6B5EC", Offset = "0xE6B5EC", VA = "0xE6B5EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xE6B608", Offset = "0xE6B608", VA = "0xE6B608", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xE6B670", Offset = "0xE6B670", VA = "0xE6B670")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xE6B6F8", Offset = "0xE6B6F8", VA = "0xE6B6F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xE6B9D0", Offset = "0xE6B9D0", VA = "0xE6B9D0")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public enum VoipBitrate
	{
		[Token(Token = "0x40001E4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5138F4", Offset = "0x5138F4")]
		Unknown,
		[Token(Token = "0x40001E5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51392C", Offset = "0x51392C")]
		B16000,
		[Token(Token = "0x40001E6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513964", Offset = "0x513964")]
		B24000,
		[Token(Token = "0x40001E7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x51399C", Offset = "0x51399C")]
		B32000,
		[Token(Token = "0x40001E8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5139D4", Offset = "0x5139D4")]
		B64000,
		[Token(Token = "0x40001E9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513A0C", Offset = "0x513A0C")]
		B96000,
		[Token(Token = "0x40001EA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513A44", Offset = "0x513A44")]
		B128000
	}
	[Token(Token = "0x20000DF")]
	public enum VoipDtxState
	{
		[Token(Token = "0x40001EC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513A7C", Offset = "0x513A7C")]
		Unknown,
		[Token(Token = "0x40001ED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513AB4", Offset = "0x513AB4")]
		Enabled,
		[Token(Token = "0x40001EE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513AEC", Offset = "0x513AEC")]
		Disabled
	}
	[Token(Token = "0x20000E0")]
	public enum VoipMuteState
	{
		[Token(Token = "0x40001F0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513B24", Offset = "0x513B24")]
		Unknown,
		[Token(Token = "0x40001F1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513B5C", Offset = "0x513B5C")]
		Muted,
		[Token(Token = "0x40001F2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513B94", Offset = "0x513B94")]
		Unmuted
	}
	[Token(Token = "0x20000E1")]
	public class VoipOptions
	{
		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xE6BF64", Offset = "0xE6BF64", VA = "0xE6BF64")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xE6BFDC", Offset = "0xE6BFDC", VA = "0xE6BFDC")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xE6C058", Offset = "0xE6C058", VA = "0xE6C058")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xE6AF6C", Offset = "0xE6AF6C", VA = "0xE6AF6C")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xE6C0D4", Offset = "0xE6C0D4", VA = "0xE6C0D4", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xE6C18C", Offset = "0xE6C18C", VA = "0xE6C18C", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xE6C24C", Offset = "0xE6C24C", VA = "0xE6C24C", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xE6C254", Offset = "0xE6C254", VA = "0xE6C254", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xE6C2F4", Offset = "0xE6C2F4", VA = "0xE6C2F4", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xE6B668", Offset = "0xE6B668", VA = "0xE6B668")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x40001F6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513BCC", Offset = "0x513BCC")]
		Unknown,
		[Token(Token = "0x40001F7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513C04", Offset = "0x513C04")]
		HZ24000,
		[Token(Token = "0x40001F8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513C3C", Offset = "0x513C3C")]
		HZ44100,
		[Token(Token = "0x40001F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x513C74", Offset = "0x513C74")]
		HZ48000
	}
	[Token(Token = "0x20000E4")]
	public class WindowsPlatform
	{
		[Token(Token = "0x2000215")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x510554", Offset = "0x510554")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xE6C370", Offset = "0xE6C370", VA = "0xE6C370")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xE6C448", Offset = "0xE6C448", VA = "0xE6C448")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xE6C488", Offset = "0xE6C488", VA = "0xE6C488")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xE6C56C", Offset = "0xE6C56C", VA = "0xE6C56C")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xE6C680", Offset = "0xE6C680", VA = "0xE6C680")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x20000E5")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x851054", Offset = "0x851054", VA = "0x851054")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class AchievementDefinition
	{
		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x85A83C", Offset = "0x85A83C", VA = "0x85A83C")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x8511BC", Offset = "0x8511BC", VA = "0x8511BC")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public class AchievementProgress
	{
		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x85A8F4", Offset = "0x85A8F4", VA = "0x85A8F4")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x85149C", Offset = "0x85149C", VA = "0x85149C")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public class AchievementUpdate
	{
		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x85177C", Offset = "0x85177C", VA = "0x85177C")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public class ApplicationVersion
	{
		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x8518F8", Offset = "0x8518F8", VA = "0x8518F8")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public class AssetDetails
	{
		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513CAC", Offset = "0x513CAC")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string Metadata;

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x851A90", Offset = "0x851A90", VA = "0x851A90")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x600080E")]
		[Address(RVA = "0x851CC0", Offset = "0x851CC0", VA = "0x851CC0")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x851F70", Offset = "0x851F70", VA = "0x851F70")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x85210C", Offset = "0x85210C", VA = "0x85210C")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x8522A8", Offset = "0x8522A8", VA = "0x8522A8")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x852420", Offset = "0x852420", VA = "0x852420")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x8525CC", Offset = "0x8525CC", VA = "0x8525CC")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x852754", Offset = "0x852754", VA = "0x852754")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x85AA68", Offset = "0x85AA68", VA = "0x85AA68")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x85291C", Offset = "0x85291C", VA = "0x85291C")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class Challenge
	{
		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ChallengeCreationType CreationType;

		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Description;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly DateTime EndDate;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513CE4", Offset = "0x513CE4")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly Leaderboard Leaderboard;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList ParticipantsOptional;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513D1C", Offset = "0x513D1C")]
		public readonly UserList Participants;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly DateTime StartDate;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly string Title;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly ChallengeVisibility Visibility;

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x852BCC", Offset = "0x852BCC", VA = "0x852BCC")]
		public Challenge(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class ChallengeList : DeserializableList<Challenge>
	{
		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x8531A8", Offset = "0x8531A8", VA = "0x8531A8")]
		public ChallengeList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class ChallengeEntry
	{
		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x85AB88", Offset = "0x85AB88", VA = "0x85AB88")]
		public ChallengeEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class ChallengeEntryList : DeserializableList<ChallengeEntry>
	{
		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x852EA8", Offset = "0x852EA8", VA = "0x852EA8")]
		public ChallengeEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x8534A8", Offset = "0x8534A8", VA = "0x8534A8")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public class CloudStorageData
	{
		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x853668", Offset = "0x853668", VA = "0x853668")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x853AE0", Offset = "0x853AE0", VA = "0x853AE0")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x853800", Offset = "0x853800", VA = "0x853800")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x853CB8", Offset = "0x853CB8", VA = "0x853CB8")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20000FF")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x510054", Offset = "0x510054")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x17000033")]
		public int Count
		{
			[Token(Token = "0x6000820")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000034")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6000821")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000035")]
		public T Item
		{
			[Token(Token = "0x6000823")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000824")]
			set
			{
			}
		}

		[Token(Token = "0x17000036")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x51BC60", Offset = "0x51BC60")]
		public List<T> Data
		{
			[Token(Token = "0x600082F")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		public bool HasNextPage
		{
			[Token(Token = "0x6000830")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000038")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6000831")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000039")]
		public string NextUrl
		{
			[Token(Token = "0x6000832")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		public string PreviousUrl
		{
			[Token(Token = "0x6000833")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000822")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000825")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000826")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000827")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000828")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000829")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600082A")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x600082B")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x600082C")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x600082D")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x600082E")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000834")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class Destination
	{
		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApiName;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DisplayName;

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x85AC74", Offset = "0x85AC74", VA = "0x85AC74")]
		public Destination(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class DestinationList : DeserializableList<Destination>
	{
		[Token(Token = "0x6000836")]
		[Address(RVA = "0x853E50", Offset = "0x853E50", VA = "0x853E50")]
		public DestinationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class Error
	{
		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x84D2C8", Offset = "0x84D2C8", VA = "0x84D2C8")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x854130", Offset = "0x854130", VA = "0x854130")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class InstalledApplication
	{
		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x85AD1C", Offset = "0x85AD1C", VA = "0x85AD1C")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x600083A")]
		[Address(RVA = "0x8543B8", Offset = "0x8543B8", VA = "0x8543B8")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x85A9C0", Offset = "0x85A9C0", VA = "0x85A9C0")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000107")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x8546C8", Offset = "0x8546C8", VA = "0x8546C8")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class LaunchDetails
	{
		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DestinationApiName;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchSource;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string TrackingID;

		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513D54", Offset = "0x513D54")]
		public readonly UserList Users;

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x85ADE4", Offset = "0x85ADE4", VA = "0x85ADE4")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x854848", Offset = "0x854848", VA = "0x854848")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x854A28", Offset = "0x854A28", VA = "0x854A28")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x854C04", Offset = "0x854C04", VA = "0x854C04")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class Leaderboard
	{
		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApiName;

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x85AB00", Offset = "0x85AB00", VA = "0x85AB00")]
		public Leaderboard(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x85AF14", Offset = "0x85AF14", VA = "0x85AF14")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x854E40", Offset = "0x854E40", VA = "0x854E40")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class LinkedAccount
	{
		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x85B000", Offset = "0x85B000", VA = "0x85B000")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x6000845")]
		[Address(RVA = "0x8551A0", Offset = "0x8551A0", VA = "0x8551A0")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x8554B0", Offset = "0x8554B0", VA = "0x8554B0")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x85567C", Offset = "0x85567C", VA = "0x85567C")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x8557E4", Offset = "0x8557E4", VA = "0x8557E4")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000114")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x8559FC", Offset = "0x8559FC", VA = "0x8559FC")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000115")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x855B84", Offset = "0x855B84", VA = "0x855B84")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000116")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x85B278", Offset = "0x85B278", VA = "0x85B278")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000117")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x600084C")]
		[Address(RVA = "0x85B0A8", Offset = "0x85B0A8", VA = "0x85B0A8")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x855D7C", Offset = "0x855D7C", VA = "0x855D7C")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513D8C", Offset = "0x513D8C")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x855F3C", Offset = "0x855F3C", VA = "0x855F3C")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x85616C", Offset = "0x85616C", VA = "0x85616C")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513DC4", Offset = "0x513DC4")]
		public readonly User User;

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x85B344", Offset = "0x85B344", VA = "0x85B344")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x6000851")]
		[Address(RVA = "0x85B42C", Offset = "0x85B42C", VA = "0x85B42C")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class MatchmakingStats
	{
		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double SkillMean;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double SkillStandardDeviation;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly uint WinCount;

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x856770", Offset = "0x856770", VA = "0x856770")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200011E")]
	public class NetSyncConnection
	{
		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncDisconnectReason DisconnectReason;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly NetSyncConnectionStatus Status;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string ZoneId;

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x856928", Offset = "0x856928", VA = "0x856928")]
		public NetSyncConnection(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class NetSyncSession
	{
		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool Muted;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong UserId;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VoipGroup;

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x85B5FC", Offset = "0x85B5FC", VA = "0x85B5FC")]
		public NetSyncSession(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class NetSyncSessionList : DeserializableList<NetSyncSession>
	{
		[Token(Token = "0x6000855")]
		[Address(RVA = "0x856B30", Offset = "0x856B30", VA = "0x856B30")]
		public NetSyncSessionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class NetSyncSessionsChangedNotification
	{
		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncSessionList Sessions;

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x856DE0", Offset = "0x856DE0", VA = "0x856DE0")]
		public NetSyncSessionsChangedNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class NetSyncSetSessionPropertyResult
	{
		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly NetSyncSession Session;

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x856FDC", Offset = "0x856FDC", VA = "0x856FDC")]
		public NetSyncSetSessionPropertyResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000123")]
	public class NetSyncVoipAttenuationValue
	{
		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float Decibels;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float Distance;

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x85B6C8", Offset = "0x85B6C8", VA = "0x85B6C8")]
		public NetSyncVoipAttenuationValue(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class NetSyncVoipAttenuationValueList : DeserializableList<NetSyncVoipAttenuationValue>
	{
		[Token(Token = "0x6000859")]
		[Address(RVA = "0x8571C8", Offset = "0x8571C8", VA = "0x8571C8")]
		public NetSyncVoipAttenuationValueList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class NetworkingPeer
	{
		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x513DFC", Offset = "0x513DFC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x513E0C", Offset = "0x513E0C")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x1700003B")]
		public ulong ID
		{
			[Token(Token = "0x600085B")]
			[Address(RVA = "0x85B760", Offset = "0x85B760", VA = "0x85B760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A33C", Offset = "0x51A33C")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x85B768", Offset = "0x85B768", VA = "0x85B768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A34C", Offset = "0x51A34C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public PeerConnectionState State
		{
			[Token(Token = "0x600085D")]
			[Address(RVA = "0x85B770", Offset = "0x85B770", VA = "0x85B770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A35C", Offset = "0x51A35C")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x600085E")]
			[Address(RVA = "0x85B778", Offset = "0x85B778", VA = "0x85B778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A36C", Offset = "0x51A36C")]
			private set
			{
			}
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x85749C", Offset = "0x85749C", VA = "0x85749C")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class OrgScopedID
	{
		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x8575B8", Offset = "0x8575B8", VA = "0x8575B8")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class Party
	{
		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513E1C", Offset = "0x513E1C")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513E54", Offset = "0x513E54")]
		public readonly User Leader;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513E8C", Offset = "0x513E8C")]
		public readonly Room Room;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513EC4", Offset = "0x513EC4")]
		public readonly UserList Users;

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x857780", Offset = "0x857780", VA = "0x857780")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class PartyID
	{
		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x857AF0", Offset = "0x857AF0", VA = "0x857AF0")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong PartyId;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderId;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserAlias;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong UserId;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UserName;

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x857D38", Offset = "0x857D38", VA = "0x857D38")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class Pid
	{
		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x85B780", Offset = "0x85B780", VA = "0x85B780")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6000864")]
		[Address(RVA = "0x857F00", Offset = "0x857F00", VA = "0x857F00")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class PingResult
	{
		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x513EFC", Offset = "0x513EFC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x1700003D")]
		public ulong ID
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0x85B808", Offset = "0x85B808", VA = "0x85B808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A37C", Offset = "0x51A37C")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000867")]
			[Address(RVA = "0x85B810", Offset = "0x85B810", VA = "0x85B810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A38C", Offset = "0x51A38C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003E")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0x85B818", Offset = "0x85B818", VA = "0x85B818")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700003F")]
		public bool IsTimeout
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0x85B880", Offset = "0x85B880", VA = "0x85B880")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x858230", Offset = "0x858230", VA = "0x858230")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class PlatformInitialize
	{
		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x858350", Offset = "0x858350", VA = "0x858350")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class Product
	{
		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x85B8CC", Offset = "0x85B8CC", VA = "0x85B8CC")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x600086C")]
		[Address(RVA = "0x8584B8", Offset = "0x8584B8", VA = "0x8584B8")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class Purchase
	{
		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x858798", Offset = "0x858798", VA = "0x858798")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x600086E")]
		[Address(RVA = "0x858930", Offset = "0x858930", VA = "0x858930")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class Room
	{
		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513F0C", Offset = "0x513F0C")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513F44", Offset = "0x513F44")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513F7C", Offset = "0x513F7C")]
		public readonly User Owner;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly TeamList TeamsOptional;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513FB4", Offset = "0x513FB4")]
		public readonly TeamList Teams;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly RoomType Type;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x513FEC", Offset = "0x513FEC")]
		public readonly UserList Users;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public readonly uint Version;

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x85632C", Offset = "0x85632C", VA = "0x85632C")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6000870")]
		[Address(RVA = "0x859168", Offset = "0x859168", VA = "0x859168")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x858CF0", Offset = "0x858CF0", VA = "0x858CF0")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x6000872")]
		[Address(RVA = "0x858E88", Offset = "0x858E88", VA = "0x858E88")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class SdkAccount
	{
		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x85BB54", Offset = "0x85BB54", VA = "0x85BB54")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x6000874")]
		[Address(RVA = "0x859608", Offset = "0x859608", VA = "0x859608")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class ShareMediaResult
	{
		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x8598B8", Offset = "0x8598B8", VA = "0x8598B8")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class SystemPermission
	{
		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x859B2C", Offset = "0x859B2C", VA = "0x859B2C")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class SystemVoipState
	{
		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x859CA8", Offset = "0x859CA8", VA = "0x859CA8")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class Team
	{
		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList AssignedUsers;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int MaxUsers;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int MinUsers;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x85BBEC", Offset = "0x85BBEC", VA = "0x85BBEC")]
		public Team(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class TeamList : DeserializableList<Team>
	{
		[Token(Token = "0x6000879")]
		[Address(RVA = "0x85B984", Offset = "0x85B984", VA = "0x85B984")]
		public TeamList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class User
	{
		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DisplayName;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string ImageURL;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string InviteToken;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string OculusID;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Presence;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string PresenceDeeplinkMessage;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string PresenceDestinationApiName;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x859E20", Offset = "0x859E20", VA = "0x859E20")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x600087B")]
		[Address(RVA = "0x85A2F8", Offset = "0x85A2F8", VA = "0x85A2F8")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class UserAndRoom
	{
		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x514024", Offset = "0x514024")]
		public readonly Room Room;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x85BCC8", Offset = "0x85BCC8", VA = "0x85BCC8")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x600087D")]
		[Address(RVA = "0x85A018", Offset = "0x85A018", VA = "0x85A018")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class UserProof
	{
		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x85A5D8", Offset = "0x85A5D8", VA = "0x85A5D8")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class UserReportID
	{
		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x85A7A0", Offset = "0x85A7A0", VA = "0x85A7A0")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace UnityEngine.Timeline
{
	[Token(Token = "0x2000143")]
	public class VideoPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoClip videoClip;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mute;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double preloadTime;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double clipInTime;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly IVideoPlayerController videoPlayerController;

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xE78D50", Offset = "0xE78D50", VA = "0xE78D50")]
		public void PrepareVideo()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xE78E44", Offset = "0xE78E44", VA = "0xE78E44", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xE78F20", Offset = "0xE78F20", VA = "0xE78F20", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xE78FFC", Offset = "0xE78FFC", VA = "0xE78FFC", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xE79118", Offset = "0xE79118", VA = "0xE79118", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xE79234", Offset = "0xE79234", VA = "0xE79234", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xE792E8", Offset = "0xE792E8", VA = "0xE792E8", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xE793B4", Offset = "0xE793B4", VA = "0xE793B4", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xE79468", Offset = "0xE79468", VA = "0xE79468")]
		public void StopVideo()
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xE7951C", Offset = "0xE7951C", VA = "0xE7951C")]
		public VideoPlayableBehaviour()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public sealed class VideoSchedulerPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerable<TimelineClip> clips;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayableDirector director;

		[Token(Token = "0x17000040")]
		internal PlayableDirector Director
		{
			[Token(Token = "0x600088A")]
			[Address(RVA = "0xE79598", Offset = "0xE79598", VA = "0xE79598")]
			get
			{
				return null;
			}
			[Token(Token = "0x600088B")]
			[Address(RVA = "0xE795A0", Offset = "0xE795A0", VA = "0xE795A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000041")]
		internal IEnumerable<TimelineClip> Clips
		{
			[Token(Token = "0x600088C")]
			[Address(RVA = "0xE795A8", Offset = "0xE795A8", VA = "0xE795A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600088D")]
			[Address(RVA = "0xE795B0", Offset = "0xE795B0", VA = "0xE795B0")]
			set
			{
			}
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xE795B8", Offset = "0xE795B8", VA = "0xE795B8", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xE79A6C", Offset = "0xE79A6C", VA = "0xE79A6C")]
		public VideoSchedulerPlayableBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000145")]
	public class VideoScriptPlayableAsset : PlayableAsset
	{
		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<VideoPlayer> videoPlayer;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[NotKeyable]
		public VideoClip videoClip;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[NotKeyable]
		public bool mute;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[NotKeyable]
		public bool loop;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[NotKeyable]
		public double preloadTime;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[NotKeyable]
		public double clipInTime;

		[Token(Token = "0x6000890")]
		[Address(RVA = "0xE79A74", Offset = "0xE79A74", VA = "0xE79A74", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xE79BA0", Offset = "0xE79BA0", VA = "0xE79BA0")]
		public VideoScriptPlayableAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000146")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x51008C", Offset = "0x51008C")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x51008C", Offset = "0x51008C")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x51008C", Offset = "0x51008C")]
	public class VideoScriptPlayableTrack : TrackAsset
	{
		[Token(Token = "0x6000892")]
		[Address(RVA = "0xE79BBC", Offset = "0xE79BBC", VA = "0xE79BBC", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xE79CF4", Offset = "0xE79CF4", VA = "0xE79CF4")]
		public VideoScriptPlayableTrack()
		{
		}
	}
}
namespace PlayStationVRExample
{
	[Token(Token = "0x2000147")]
	public class TrackedPlayStationDevices : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000216")]
		public class TrackedDevice
		{
			[Token(Token = "0x4000848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int handle;

			[Token(Token = "0x4000849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform transform;

			[Token(Token = "0x400084A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x400084B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion orientation;

			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0xE6CDB0", Offset = "0xE6CDB0", VA = "0xE6CDB0")]
			public TrackedDevice()
			{
			}
		}

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackedDevice deviceDualShock4;

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xE6CD64", Offset = "0xE6CD64", VA = "0xE6CD64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xE6CDA8", Offset = "0xE6CDA8", VA = "0xE6CDA8")]
		public TrackedPlayStationDevices()
		{
		}
	}
}
namespace Saw
{
	[Token(Token = "0x2000148")]
	public class DebugSceneChange : MonoBehaviour
	{
		[Token(Token = "0x6000896")]
		[Address(RVA = "0xE6E0B4", Offset = "0xE6E0B4", VA = "0xE6E0B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xE6E0B8", Offset = "0xE6E0B8", VA = "0xE6E0B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xE6E0BC", Offset = "0xE6E0BC", VA = "0xE6E0BC")]
		public DebugSceneChange()
		{
		}
	}
}
namespace Game
{
	[Token(Token = "0x2000149")]
	public class FuzzyLogic
	{
		[Token(Token = "0x6000899")]
		[Address(RVA = "0x6FA2C8", Offset = "0x6FA2C8", VA = "0x6FA2C8")]
		public static float FuzzyGrade(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x6FA2F8", Offset = "0x6FA2F8", VA = "0x6FA2F8")]
		public static float FuzzyReverseGrade(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x6FA334", Offset = "0x6FA334", VA = "0x6FA334")]
		public static float FuzzyTriangle(float value, float min, float middle, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x6FA3B8", Offset = "0x6FA3B8", VA = "0x6FA3B8")]
		public static float FuzzyTrapenoid(float value, float min, float near, float far, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x6FA444", Offset = "0x6FA444", VA = "0x6FA444")]
		public static float FuzzyAnd(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x6FA4BC", Offset = "0x6FA4BC", VA = "0x6FA4BC")]
		public static float FuzzyOr(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x6FA328", Offset = "0x6FA328", VA = "0x6FA328")]
		public static float FuzzyNot(float a)
		{
			return default(float);
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x6FA534", Offset = "0x6FA534", VA = "0x6FA534")]
		public static float HedgVery(float rate)
		{
			return default(float);
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x6FA5A0", Offset = "0x6FA5A0", VA = "0x6FA5A0")]
		public static float HedgNotVery(float rate)
		{
			return default(float);
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x6FA638", Offset = "0x6FA638", VA = "0x6FA638")]
		public static bool Sample(float length, ref float fuzzyValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x6FA774", Offset = "0x6FA774", VA = "0x6FA774")]
		public FuzzyLogic()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class LookPlayer : MonoBehaviour
	{
		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isEnable;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514174", Offset = "0x514174")]
		[SerializeField]
		private SkinnedMeshRenderer faceMeshRenderer;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5141C0", Offset = "0x5141C0")]
		[SerializeField]
		private Transform eyeTrans;

		[Token(Token = "0x4000316")]
		private const int EyeLeftMove = 14;

		[Token(Token = "0x4000317")]
		private const int EyeRightMove = 15;

		[Token(Token = "0x4000318")]
		private const int EyeUpMove = 16;

		[Token(Token = "0x4000319")]
		private const int EyeDownMove = 17;

		[Token(Token = "0x400031A")]
		private const int EyeLightLeftMove = 58;

		[Token(Token = "0x400031B")]
		private const int EyeLightRightMove = 59;

		[Token(Token = "0x400031C")]
		private const int EyeLightUpMove = 60;

		[Token(Token = "0x400031D")]
		private const int EyeLightDownMove = 61;

		[Token(Token = "0x400031E")]
		private const float UpDownRate = 150f;

		[Token(Token = "0x400031F")]
		private const float LeftRightRate = 200f;

		[Token(Token = "0x4000320")]
		private const float MoveInterpolation = 0.9f;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float nextEyeMoveLeftRate;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float nextEyeMoveRightRate;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float nextEyeMoveUpRate;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float nextEyeMoveDownRate;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float eyeMoveLeftRate;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float eyeMoveRightRate;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float eyeMoveUpRate;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float eyeMoveDownRate;

		[Token(Token = "0x4000329")]
		private const float AdjustEyeLightMoveRate = 0.5f;

		[Token(Token = "0x17000042")]
		public SkinnedMeshRenderer FaceMeshRenderer
		{
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0x7020A0", Offset = "0x7020A0", VA = "0x7020A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0x7020A8", Offset = "0x7020A8", VA = "0x7020A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public Transform EyeTrans
		{
			[Token(Token = "0x60008A8")]
			[Address(RVA = "0x7020B0", Offset = "0x7020B0", VA = "0x7020B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0x7020B8", Offset = "0x7020B8", VA = "0x7020B8")]
			set
			{
			}
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x70208C", Offset = "0x70208C", VA = "0x70208C")]
		public void On()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x702098", Offset = "0x702098", VA = "0x702098")]
		public void Off()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x7020C0", Offset = "0x7020C0", VA = "0x7020C0")]
		private void EyeLookUser()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x702374", Offset = "0x702374", VA = "0x702374")]
		private void DefaultEye()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x6F1CF0", Offset = "0x6F1CF0", VA = "0x6F1CF0")]
		public void EyeReset()
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x702458", Offset = "0x702458", VA = "0x702458")]
		private void Start()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x70245C", Offset = "0x70245C", VA = "0x70245C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x7025B0", Offset = "0x7025B0", VA = "0x7025B0")]
		private bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x7026F0", Offset = "0x7026F0", VA = "0x7026F0")]
		public LookPlayer()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class CameraGroup : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000217")]
		public struct AreaFadeParam
		{
			[Token(Token = "0x400084C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518C84", Offset = "0x518C84")]
			public float backColl;

			[Token(Token = "0x400084D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518CBC", Offset = "0x518CBC")]
			public float frontColl;

			[Token(Token = "0x400084E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518CF4", Offset = "0x518CF4")]
			public float rightColl;

			[Token(Token = "0x400084F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518D2C", Offset = "0x518D2C")]
			public float leftColl;

			[Token(Token = "0x4000850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518D64", Offset = "0x518D64")]
			public float buttomColl;

			[Token(Token = "0x4000851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518D9C", Offset = "0x518D9C")]
			public float topColl;
		}

		[Token(Token = "0x2000218")]
		public enum AreaFadeParamType
		{
			[Token(Token = "0x4000853")]
			Title,
			[Token(Token = "0x4000854")]
			Main,
			[Token(Token = "0x4000855")]
			Main01Tenbin,
			[Token(Token = "0x4000856")]
			MainS00S05,
			[Token(Token = "0x4000857")]
			AnimMode,
			[Token(Token = "0x4000858")]
			MainS00S03
		}

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51420C", Offset = "0x51420C")]
		public float mouseRotateSpeed;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float padRotateSpeed;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514244", Offset = "0x514244")]
		public float padMoveSpeed;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51427C", Offset = "0x51427C")]
		public bool isInverse;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 pastCameraPos;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 pastCameraPos2;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 cameraAngle;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 cameraPos;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isOperableGamePadControl;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5142B4", Offset = "0x5142B4")]
		[SerializeField]
		private AreaFadeParam[] areaFadeParamArray;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514300", Offset = "0x514300")]
		public AreaFadeParamType useAreaFadeParamNo;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514338", Offset = "0x514338")]
		public float fadeStartDistance;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float ans;

		[Token(Token = "0x4000337")]
		private const int axisMax = 6;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] fadeRatioArray;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float retrackingTimer;

		[Token(Token = "0x400033A")]
		private const float AutoRetrackingTime = 5f;

		[Token(Token = "0x400033B")]
		private const float AutoRetrackingFadeRate = 0.9f;

		[Token(Token = "0x17000044")]
		public bool IsOperableGamePadControl
		{
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0x774B38", Offset = "0x774B38", VA = "0x774B38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0x774B40", Offset = "0x774B40", VA = "0x774B40")]
			set
			{
			}
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x774B4C", Offset = "0x774B4C", VA = "0x774B4C")]
		private void Intialize()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x774B50", Offset = "0x774B50", VA = "0x774B50")]
		private void Start()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x774B58", Offset = "0x774B58", VA = "0x774B58")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x7752D0", Offset = "0x7752D0", VA = "0x7752D0")]
		public void ChangeAreaFadeType(AreaFadeParamType type)
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x774C00", Offset = "0x774C00", VA = "0x774C00")]
		private void AreaFadeUpdate()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x774F98", Offset = "0x774F98", VA = "0x774F98")]
		private void MouseCtrl()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x775118", Offset = "0x775118", VA = "0x775118")]
		public void GamePadCtrl()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x7752D8", Offset = "0x7752D8", VA = "0x7752D8")]
		public void ResetAngle()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x775398", Offset = "0x775398", VA = "0x775398")]
		public CameraGroup()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class SaWCameraComponent : CameraComponent
	{
		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform lookTrans;

		[Token(Token = "0x400033D")]
		private const int EasterEggMask = 1073741824;

		[Token(Token = "0x400033E")]
		private const float LookTime = 1f;

		[Token(Token = "0x400033F")]
		private const float RoughCastSize = 0.3f;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RaycastHit[] hitArray;

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x6E0424", Offset = "0x6E0424", VA = "0x6E0424")]
		private void Update()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x6E057C", Offset = "0x6E057C", VA = "0x6E057C")]
		private void CheckEasterEgg()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x6E09D4", Offset = "0x6E09D4", VA = "0x6E09D4")]
		private void ClearEasterEgg()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x6E09DC", Offset = "0x6E09DC", VA = "0x6E09DC")]
		public SaWCameraComponent()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public class CharaLightManager : SingletonMonoBehaviour<CharaLightManager>
	{
		[Token(Token = "0x4000341")]
		private const int LightNum = 2;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Light> charaLight;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CharaLightParameter charaLightParameter;

		[Token(Token = "0x17000045")]
		public CharaLightParameter CharaLightParameter
		{
			[Token(Token = "0x60008C0")]
			[Address(RVA = "0x77701C", Offset = "0x77701C", VA = "0x77701C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0x777024", Offset = "0x777024", VA = "0x777024")]
			set
			{
			}
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x77702C", Offset = "0x77702C", VA = "0x77702C")]
		public void CollectCharaLight(GameDefines.SceneID sceneID)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x7771EC", Offset = "0x7771EC", VA = "0x7771EC")]
		public void SetLightShadows(LightShadows lightshadow)
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x7772F4", Offset = "0x7772F4", VA = "0x7772F4")]
		public void SetAllCharaLight(GameDefines.SceneID scene)
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x777404", Offset = "0x777404", VA = "0x777404")]
		public bool SetCharaShadeColor(CharacterKeeper chara, GameDefines.SceneID scene)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x7778B8", Offset = "0x7778B8", VA = "0x7778B8")]
		public CharaLightManager()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class CharaLightParameter : MonoBehaviour
	{
		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _1stShadeColorShaderIndex;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _2ndShadeColorShaderIndex;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Material, Color[]> m_ShaderColorList;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x514380", Offset = "0x514380")]
		private Color[] m_1stShadeColorArray;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5143CC", Offset = "0x5143CC")]
		private Color[] m_2ndShadeColorArray;

		[Token(Token = "0x17000046")]
		public Color[] ShadeColor1st
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0x777950", Offset = "0x777950", VA = "0x777950")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0x777958", Offset = "0x777958", VA = "0x777958")]
			set
			{
			}
		}

		[Token(Token = "0x17000047")]
		public Color[] ShadeColor2nd
		{
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0x777960", Offset = "0x777960", VA = "0x777960")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008CA")]
			[Address(RVA = "0x777968", Offset = "0x777968", VA = "0x777968")]
			set
			{
			}
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x777970", Offset = "0x777970", VA = "0x777970")]
		private void Start()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x77741C", Offset = "0x77741C", VA = "0x77741C")]
		public bool SetCharaShadeColor(CharacterKeeper chara, GameDefines.SceneID scene)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x7779E0", Offset = "0x7779E0", VA = "0x7779E0")]
		private Color CalcMultiple(Color bg, Color add)
		{
			return default(Color);
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x777A60", Offset = "0x777A60", VA = "0x777A60")]
		private Color CalcSoftLight(Color bg, Color add)
		{
			return default(Color);
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x777B04", Offset = "0x777B04", VA = "0x777B04")]
		private float CalcSoftLight(float bg, float add)
		{
			return default(float);
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x777BAC", Offset = "0x777BAC", VA = "0x777BAC")]
		public CharaLightParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014F")]
	public class CharaRuntimeSettingParameter
	{
		[Serializable]
		[Token(Token = "0x2000219")]
		public struct ObjInfo
		{
			[Token(Token = "0x4000859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string parentName;

			[Token(Token = "0x400085A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string objName;

			[Token(Token = "0x400085B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string tag;

			[Token(Token = "0x400085C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int layer;

			[Token(Token = "0x400085D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 position;

			[Token(Token = "0x400085E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion rotate;

			[Token(Token = "0x400085F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 scale;
		}

		[Serializable]
		[Token(Token = "0x200021A")]
		public struct SphereColliderSettings
		{
			[Token(Token = "0x4000860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjInfo objInfo;

			[Token(Token = "0x4000861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool isTrigger;

			[Token(Token = "0x4000862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 center;

			[Token(Token = "0x4000863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float radius;
		}

		[Serializable]
		[Token(Token = "0x200021B")]
		public struct CapsuleColliderSettings
		{
			[Token(Token = "0x4000864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjInfo objInfo;

			[Token(Token = "0x4000865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool isTrigger;

			[Token(Token = "0x4000866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 center;

			[Token(Token = "0x4000867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float radius;

			[Token(Token = "0x4000868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float height;

			[Token(Token = "0x4000869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int direction;
		}

		[Serializable]
		[Token(Token = "0x200021C")]
		public struct CharacterFadeSetting
		{
			[Token(Token = "0x400086A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518DD4", Offset = "0x518DD4")]
			public CharacterFadeComponent.Type type;

			[Token(Token = "0x400086B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518E0C", Offset = "0x518E0C")]
			public float size;

			[Token(Token = "0x400086C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518E44", Offset = "0x518E44")]
			public ObjInfo start;

			[Token(Token = "0x400086D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518E7C", Offset = "0x518E7C")]
			public Vector3 offsetFromStart;

			[Token(Token = "0x400086E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518EB4", Offset = "0x518EB4")]
			public ObjInfo end;

			[Token(Token = "0x400086F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518EEC", Offset = "0x518EEC")]
			public Vector3 offsetFromEnd;
		}

		[Serializable]
		[Token(Token = "0x200021D")]
		public struct CollisionSESetting
		{
			[Token(Token = "0x4000870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjInfo objInfo;

			[Token(Token = "0x4000871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public CollisionSE.Param param;
		}

		[Serializable]
		[Token(Token = "0x200021E")]
		public struct AudioSourceSetting
		{
			[Token(Token = "0x4000872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjInfo objInfo;

			[Token(Token = "0x4000873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float spatialBlend;

			[Token(Token = "0x4000874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public AudioMixerGroup mixerGroup;
		}

		[Serializable]
		[Token(Token = "0x200021F")]
		public struct CharacterKeeperSetting
		{
			[Token(Token = "0x4000875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjInfo hipTransInfo;

			[Token(Token = "0x4000876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ObjInfo rightHandTransInfo;

			[Token(Token = "0x4000877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public ObjInfo leftHandTransInfo;

			[Token(Token = "0x4000878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public ObjInfo catchPointTransInfo;

			[Token(Token = "0x4000879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			public ObjInfo windowCollisionInfo;

			[Token(Token = "0x400087A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
			public ObjInfo voiceSource;

			[Token(Token = "0x400087B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
			public ObjInfo headTransInfo;

			[Token(Token = "0x400087C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			public ObjInfo leftFootTransInfo;

			[Token(Token = "0x400087D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
			public ObjInfo rightFootTransInfo;

			[Token(Token = "0x400087E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
			public ObjInfo leftLegTransInfo;

			[Token(Token = "0x400087F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
			public ObjInfo rightLegTransInfo;

			[Token(Token = "0x4000880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518F24", Offset = "0x518F24")]
			public ObjInfo waistTransInfo;

			[Token(Token = "0x4000881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
			public ObjInfo centerChestTransInfo;

			[Token(Token = "0x4000882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
			public ObjInfo leftElbowTransInfo;

			[Token(Token = "0x4000883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
			public ObjInfo rightElbowTransInfo;

			[Token(Token = "0x4000884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
			public ObjInfo stickyFingersInfo;
		}

		[Serializable]
		[Token(Token = "0x2000220")]
		public struct LipSyncSetting
		{
			[Token(Token = "0x4000885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjInfo audioSourceInfo;

			[Token(Token = "0x4000886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ObjInfo skinnedMeshInfo;

			[Token(Token = "0x4000887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public int smallMouthTypeIndex;

			[Token(Token = "0x4000888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public int mediumMouthTypeIndex;

			[Token(Token = "0x4000889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public int largeMouthTypeIndex;

			[Token(Token = "0x400088A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public float smallTriggerVolume;

			[Token(Token = "0x400088B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public float mediumTriggerVolume;

			[Token(Token = "0x400088C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public float largeTriggerVolume;

			[Token(Token = "0x400088D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public float volumeBoost;

			[Token(Token = "0x400088E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public float updateDelay;

			[Token(Token = "0x400088F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public float blendOpenSpeed;

			[Token(Token = "0x4000890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			public float blendCloseSpeed;

			[Token(Token = "0x4000891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public float maxBlendRate;

			[Token(Token = "0x4000892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public AnimationCurve openCurve;

			[Token(Token = "0x4000893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public AnimationCurve closeCurve;

			[Token(Token = "0x4000894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public bool isUseCurveWhenMaxClose;
		}

		[Serializable]
		[Token(Token = "0x2000221")]
		public struct VolumeDirectionControllerSetting
		{
			[Token(Token = "0x4000895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjInfo audioSourceInfo;

			[Token(Token = "0x4000896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ObjInfo attachTransformInfo;

			[Token(Token = "0x4000897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public ObjInfo targetTransformInfo;
		}

		[Serializable]
		[Token(Token = "0x2000222")]
		public struct CheekSetting
		{
			[Token(Token = "0x4000898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjInfo faceMeshInfo;

			[Token(Token = "0x4000899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int materialIndex;

			[Token(Token = "0x400089A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string cheekSmallShapeName;

			[Token(Token = "0x400089B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string cheekBigShapeName;
		}

		[Serializable]
		[Token(Token = "0x2000223")]
		public struct LookPlayerSetting
		{
			[Token(Token = "0x400089C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjInfo faceMeshInfo;

			[Token(Token = "0x400089D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ObjInfo eyeInfo;
		}

		[Serializable]
		[Token(Token = "0x2000224")]
		public struct InteractionEarSetting
		{
			[Token(Token = "0x400089E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjInfo earInfo;

			[Token(Token = "0x400089F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string earName;

			[Token(Token = "0x40008A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float moveSpeed;

			[Token(Token = "0x40008A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public AnimationCurve curve;
		}

		[Serializable]
		[Token(Token = "0x2000225")]
		public struct TouchEffectSetting
		{
			[Token(Token = "0x40008A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjInfo tailEffect;

			[Token(Token = "0x40008A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ObjInfo earLEffect;

			[Token(Token = "0x40008A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public ObjInfo earREffect;
		}

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514418", Offset = "0x514418")]
		public List<CharacterFadeSetting> charaFadeSettings;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514450", Offset = "0x514450")]
		public CharacterKeeperSetting charaKeeperSetting;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514488", Offset = "0x514488")]
		public LipSyncSetting lipSyncSetting;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5144C0", Offset = "0x5144C0")]
		public VolumeDirectionControllerSetting volumeDirectionControllerSetting;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5144F8", Offset = "0x5144F8")]
		public CheekSetting cheekSetting;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514530", Offset = "0x514530")]
		public LookPlayerSetting lookPlayerSetting;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x738")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514568", Offset = "0x514568")]
		public List<CollisionSESetting> collisionSESettings;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x740")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5145A0", Offset = "0x5145A0")]
		public List<SphereColliderSettings> sphereColliderSettings;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x748")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5145D8", Offset = "0x5145D8")]
		public List<CapsuleColliderSettings> capsuleColliderSettings;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x750")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514610", Offset = "0x514610")]
		public List<AudioSourceSetting> audioSourceSettings;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x758")]
		public List<InteractionEarSetting> interactionEarSettings;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x760")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514648", Offset = "0x514648")]
		public List<ObjInfo> transformList;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x768")]
		public TouchEffectSetting touchEffectSetting;

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x777C4C", Offset = "0x777C4C", VA = "0x777C4C")]
		public CharaRuntimeSettingParameter()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class CharacterKeeper : MonoBehaviour
	{
		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514680", Offset = "0x514680")]
		[SerializeField]
		private Transform hipTrans;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5146CC", Offset = "0x5146CC")]
		[SerializeField]
		private Transform rightHandTrans;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform leftHandTrans;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514728", Offset = "0x514728")]
		[SerializeField]
		private Transform catchPointTrans;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514774", Offset = "0x514774")]
		[SerializeField]
		private GameObject windowCollision;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5147C0", Offset = "0x5147C0")]
		[SerializeField]
		private AudioSource voiceSource;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51480C", Offset = "0x51480C")]
		[SerializeField]
		private Transform head;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform leftFoot;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform rightFoot;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform leftLeg;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform rightLeg;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514898", Offset = "0x514898")]
		[SerializeField]
		private Transform waist;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform centerChest;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform leftElbow;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform rightElbow;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514914", Offset = "0x514914")]
		[SerializeField]
		private SphereCollider stickyFingers;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CharacterFadeComponent characterFade;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform m_transform;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject m_gameObject;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private SkinnedMeshRenderer[] skinnedMeshRendererArray;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LookPlayer lookPlayer;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private TouchEffect touchEffects;

		[Token(Token = "0x17000048")]
		public Transform HipTrans
		{
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0x6F11EC", Offset = "0x6F11EC", VA = "0x6F11EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0x6F11F4", Offset = "0x6F11F4", VA = "0x6F11F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public Transform RightHandTrans
		{
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0x6F11FC", Offset = "0x6F11FC", VA = "0x6F11FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D5")]
			[Address(RVA = "0x6F1204", Offset = "0x6F1204", VA = "0x6F1204")]
			set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public Transform LeftHandTrans
		{
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0x6F120C", Offset = "0x6F120C", VA = "0x6F120C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D7")]
			[Address(RVA = "0x6F1214", Offset = "0x6F1214", VA = "0x6F1214")]
			set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		public Transform CatchPointTrans
		{
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0x6F121C", Offset = "0x6F121C", VA = "0x6F121C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x6F1224", Offset = "0x6F1224", VA = "0x6F1224")]
			set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public GameObject WindowCollision
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x6F122C", Offset = "0x6F122C", VA = "0x6F122C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x6F1234", Offset = "0x6F1234", VA = "0x6F1234")]
			set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public AudioSource VoiceSource
		{
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0x6F123C", Offset = "0x6F123C", VA = "0x6F123C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0x6F1244", Offset = "0x6F1244", VA = "0x6F1244")]
			set
			{
			}
		}

		[Token(Token = "0x1700004E")]
		public Transform Head
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0x6F124C", Offset = "0x6F124C", VA = "0x6F124C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0x6F1254", Offset = "0x6F1254", VA = "0x6F1254")]
			set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public Transform LeftFoot
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x6F125C", Offset = "0x6F125C", VA = "0x6F125C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0x6F1264", Offset = "0x6F1264", VA = "0x6F1264")]
			set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public Transform RightFoot
		{
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x6F126C", Offset = "0x6F126C", VA = "0x6F126C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0x6F1274", Offset = "0x6F1274", VA = "0x6F1274")]
			set
			{
			}
		}

		[Token(Token = "0x17000051")]
		public Transform LeftLeg
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x6F127C", Offset = "0x6F127C", VA = "0x6F127C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0x6F1284", Offset = "0x6F1284", VA = "0x6F1284")]
			set
			{
			}
		}

		[Token(Token = "0x17000052")]
		public Transform RightLeg
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x6F128C", Offset = "0x6F128C", VA = "0x6F128C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0x6F1294", Offset = "0x6F1294", VA = "0x6F1294")]
			set
			{
			}
		}

		[Token(Token = "0x17000053")]
		public Transform Waist
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0x6F129C", Offset = "0x6F129C", VA = "0x6F129C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0x6F12A4", Offset = "0x6F12A4", VA = "0x6F12A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000054")]
		public Transform CenterChest
		{
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0x6F12AC", Offset = "0x6F12AC", VA = "0x6F12AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0x6F12B4", Offset = "0x6F12B4", VA = "0x6F12B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000055")]
		public Transform LeftElbow
		{
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0x6F12BC", Offset = "0x6F12BC", VA = "0x6F12BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0x6F12C4", Offset = "0x6F12C4", VA = "0x6F12C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000056")]
		public Transform RightElbow
		{
			[Token(Token = "0x60008EE")]
			[Address(RVA = "0x6F12CC", Offset = "0x6F12CC", VA = "0x6F12CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008EF")]
			[Address(RVA = "0x6F12D4", Offset = "0x6F12D4", VA = "0x6F12D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000057")]
		public SphereCollider StickyFingers
		{
			[Token(Token = "0x60008F0")]
			[Address(RVA = "0x6F12DC", Offset = "0x6F12DC", VA = "0x6F12DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0x6F12E4", Offset = "0x6F12E4", VA = "0x6F12E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public CharacterFadeComponent CharacterFade
		{
			[Token(Token = "0x60008F2")]
			[Address(RVA = "0x6F12EC", Offset = "0x6F12EC", VA = "0x6F12EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		public new Transform transform
		{
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0x6F1380", Offset = "0x6F1380", VA = "0x6F1380")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		public new GameObject gameObject
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0x6F140C", Offset = "0x6F140C", VA = "0x6F140C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		public SkinnedMeshRenderer[] SkinnedMeshRendererArray
		{
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0x6F1498", Offset = "0x6F1498", VA = "0x6F1498")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		public LookPlayer LookPlayer
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0x6F1504", Offset = "0x6F1504", VA = "0x6F1504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		public TouchEffect TouchEffects
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0x6F15A8", Offset = "0x6F15A8", VA = "0x6F15A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008F8")]
			[Address(RVA = "0x6F15B0", Offset = "0x6F15B0", VA = "0x6F15B0")]
			set
			{
			}
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x6F15B8", Offset = "0x6F15B8", VA = "0x6F15B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x6F15BC", Offset = "0x6F15BC", VA = "0x6F15BC")]
		internal void FaceReset()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x6F161C", Offset = "0x6F161C", VA = "0x6F161C")]
		public CharacterKeeper()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class CharacterManager : SingletonMonoBehaviour<CharacterManager>
	{
		[Token(Token = "0x2000226")]
		public enum LoadBit
		{
			[Token(Token = "0x40008A6")]
			None = 0,
			[Token(Token = "0x40008A7")]
			Holo = 1,
			[Token(Token = "0x40008A8")]
			Myuri = 2,
			[Token(Token = "0x40008A9")]
			DancerMyuri = 4,
			[Token(Token = "0x40008AA")]
			ShaderBase = 8,
			[Token(Token = "0x40008AB")]
			ShaderNoOutlineStencil = 16,
			[Token(Token = "0x40008AC")]
			ShaderStencil = 32,
			[Token(Token = "0x40008AD")]
			ShaderBaseTess = 64,
			[Token(Token = "0x40008AE")]
			ShaderNoOutlineStencilTess = 128,
			[Token(Token = "0x40008AF")]
			ShaderStencilTess = 256,
			[Token(Token = "0x40008B0")]
			All = 511
		}

		[Token(Token = "0x2000227")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510568", Offset = "0x510568")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x40008B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ResourceManager resourceMng;

			[Token(Token = "0x40008B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CharacterManager <>4__this;

			[Token(Token = "0x40008B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScriptableCharaRuntimeSettingParameter data;

			[Token(Token = "0x40008B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<GameObject> <>9__10;

			[Token(Token = "0x40008B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<GameObject> <>9__11;

			[Token(Token = "0x40008B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<GameObject> <>9__12;

			[Token(Token = "0x40008B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<Shader> <>9__13;

			[Token(Token = "0x40008B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action<Shader> <>9__14;

			[Token(Token = "0x40008B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Action<Shader> <>9__15;

			[Token(Token = "0x40008BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action<Shader> <>9__16;

			[Token(Token = "0x40008BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Action<Shader> <>9__17;

			[Token(Token = "0x40008BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Action<Shader> <>9__18;

			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x6F2410", Offset = "0x6F2410", VA = "0x6F2410")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x6F2418", Offset = "0x6F2418", VA = "0x6F2418")]
			internal bool <InitializeWaitCoroutine>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x6F2474", Offset = "0x6F2474", VA = "0x6F2474")]
			internal bool <InitializeWaitCoroutine>b__1()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x6F252C", Offset = "0x6F252C", VA = "0x6F252C")]
			internal void <InitializeWaitCoroutine>b__10(GameObject go)
			{
			}

			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x6F26E0", Offset = "0x6F26E0", VA = "0x6F26E0")]
			internal bool <InitializeWaitCoroutine>b__2()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x6F2798", Offset = "0x6F2798", VA = "0x6F2798")]
			internal void <InitializeWaitCoroutine>b__11(GameObject go)
			{
			}

			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x6F294C", Offset = "0x6F294C", VA = "0x6F294C")]
			internal bool <InitializeWaitCoroutine>b__3()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x6F2A04", Offset = "0x6F2A04", VA = "0x6F2A04")]
			internal void <InitializeWaitCoroutine>b__12(GameObject go)
			{
			}

			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x6F2BB8", Offset = "0x6F2BB8", VA = "0x6F2BB8")]
			internal bool <InitializeWaitCoroutine>b__4()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x6F2C70", Offset = "0x6F2C70", VA = "0x6F2C70")]
			internal void <InitializeWaitCoroutine>b__13(Shader go)
			{
			}

			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x6F2CA4", Offset = "0x6F2CA4", VA = "0x6F2CA4")]
			internal bool <InitializeWaitCoroutine>b__5()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x6F2D5C", Offset = "0x6F2D5C", VA = "0x6F2D5C")]
			internal void <InitializeWaitCoroutine>b__14(Shader go)
			{
			}

			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x6F2D90", Offset = "0x6F2D90", VA = "0x6F2D90")]
			internal bool <InitializeWaitCoroutine>b__6()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x6F2E48", Offset = "0x6F2E48", VA = "0x6F2E48")]
			internal void <InitializeWaitCoroutine>b__15(Shader go)
			{
			}

			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x6F2E7C", Offset = "0x6F2E7C", VA = "0x6F2E7C")]
			internal bool <InitializeWaitCoroutine>b__7()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x6F2F34", Offset = "0x6F2F34", VA = "0x6F2F34")]
			internal void <InitializeWaitCoroutine>b__16(Shader go)
			{
			}

			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x6F2F68", Offset = "0x6F2F68", VA = "0x6F2F68")]
			internal bool <InitializeWaitCoroutine>b__8()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x6F3020", Offset = "0x6F3020", VA = "0x6F3020")]
			internal void <InitializeWaitCoroutine>b__17(Shader go)
			{
			}

			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x6F3054", Offset = "0x6F3054", VA = "0x6F3054")]
			internal bool <InitializeWaitCoroutine>b__9()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x6F310C", Offset = "0x6F310C", VA = "0x6F310C")]
			internal void <InitializeWaitCoroutine>b__18(Shader go)
			{
			}
		}

		[Token(Token = "0x2000228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510578", Offset = "0x510578")]
		private sealed class <InitializeWaitCoroutine>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterManager <>4__this;

			[Token(Token = "0x40008C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass44_0 <>8__1;

			[Token(Token = "0x17000134")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F64")]
				[Address(RVA = "0x6F3700", Offset = "0x6F3700", VA = "0x6F3700", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000135")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F66")]
				[Address(RVA = "0x6F3768", Offset = "0x6F3768", VA = "0x6F3768", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x6F17E0", Offset = "0x6F17E0", VA = "0x6F17E0")]
			[DebuggerHidden]
			public <InitializeWaitCoroutine>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x6F3140", Offset = "0x6F3140", VA = "0x6F3140", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x6F3144", Offset = "0x6F3144", VA = "0x6F3144", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x6F3708", Offset = "0x6F3708", VA = "0x6F3708", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LoadBit loaded;

		[Token(Token = "0x400036D")]
		public const string HoloName = "Holo";

		[Token(Token = "0x400036E")]
		public const string MyuriName = "Myuri";

		[Token(Token = "0x400036F")]
		public const string DancerMyuriName = "MyuriDancer";

		[Token(Token = "0x4000370")]
		public const string ToonBaseName = "SaW/Base";

		[Token(Token = "0x4000371")]
		public const string ToonStencilOutName = "SaW/StencilOut";

		[Token(Token = "0x4000372")]
		public const string ToonStencilMaskName = "SaW/NoOutline_StencilMask";

		[Token(Token = "0x4000373")]
		public const string ToonBaseTessName = "SaW/Tessellation/Base";

		[Token(Token = "0x4000374")]
		public const string ToonStencilOutTessName = "SaW/Tessellation/StencilOut";

		[Token(Token = "0x4000375")]
		public const string ToonStencilMaskTessName = "SaW/Tessellation/NoOutline_StencilMask";

		[Token(Token = "0x4000376")]
		private const string CharacterGroupLabel = "CharacterGroup";

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterKeeper holo;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterState holoState;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CharacterKeeper myuri;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CharacterState myuriState;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CharacterKeeper dancerMyuri;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CharacterState dancerMyuriState;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject charaGroup;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Shader baseShader;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Shader noOutlineStencilMaskShader;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Shader stencilOutShader;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Shader baseShaderTess;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Shader noOutlineStencilMaskShaderTess;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Shader stencilOutShaderTess;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly List<Transform> characterReferenceTransformList;

		[Token(Token = "0x1700005E")]
		public LoadBit Loaded
		{
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0x6F1624", Offset = "0x6F1624", VA = "0x6F1624")]
			get
			{
				return default(LoadBit);
			}
		}

		[Token(Token = "0x1700005F")]
		public CharacterKeeper Holo
		{
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0x6F162C", Offset = "0x6F162C", VA = "0x6F162C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		public CharacterState HoloState
		{
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0x6F1634", Offset = "0x6F1634", VA = "0x6F1634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		public CharacterKeeper Myuri
		{
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0x6F163C", Offset = "0x6F163C", VA = "0x6F163C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		public CharacterState MyuriState
		{
			[Token(Token = "0x6000900")]
			[Address(RVA = "0x6F1644", Offset = "0x6F1644", VA = "0x6F1644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		public CharacterKeeper DancerMyuri
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0x6F164C", Offset = "0x6F164C", VA = "0x6F164C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		public CharacterState DancerMyuriState
		{
			[Token(Token = "0x6000902")]
			[Address(RVA = "0x6F1654", Offset = "0x6F1654", VA = "0x6F1654")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		public GameObject CharaGroup
		{
			[Token(Token = "0x6000903")]
			[Address(RVA = "0x6F165C", Offset = "0x6F165C", VA = "0x6F165C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x6F1664", Offset = "0x6F1664", VA = "0x6F1664")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x6F1668", Offset = "0x6F1668", VA = "0x6F1668")]
		public void LoadAndCreateCharacter()
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x6F1770", Offset = "0x6F1770", VA = "0x6F1770")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51A39C", Offset = "0x51A39C")]
		private IEnumerator InitializeWaitCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x6F180C", Offset = "0x6F180C", VA = "0x6F180C")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x6F1998", Offset = "0x6F1998", VA = "0x6F1998")]
		public void SetCharacterActive(bool active)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x6F1AE0", Offset = "0x6F1AE0", VA = "0x6F1AE0")]
		public void CharacterReset()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x6F1D68", Offset = "0x6F1D68", VA = "0x6F1D68")]
		private void BlendShapeInit(SkinnedMeshRenderer renderer)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x6F1E54", Offset = "0x6F1E54", VA = "0x6F1E54")]
		public void ChangeTessMaterial(int tessalationType)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x6F1EE8", Offset = "0x6F1EE8", VA = "0x6F1EE8")]
		private void ChangeTessMaterial(bool isTess, GameObject chara)
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x6F220C", Offset = "0x6F220C", VA = "0x6F220C")]
		public void ResetCharacterReferenceTransform()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x6F2374", Offset = "0x6F2374", VA = "0x6F2374")]
		public CharacterManager()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class CharacterState : BaseMonoBehaviour
	{
		[Token(Token = "0x2000229")]
		public enum State
		{
			[Token(Token = "0x40008C2")]
			Default,
			[Token(Token = "0x40008C3")]
			Run,
			[Token(Token = "0x40008C4")]
			Sit,
			[Token(Token = "0x40008C5")]
			Silence
		}

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private State state;

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x6F4244", Offset = "0x6F4244", VA = "0x6F4244")]
		public State GetState()
		{
			return default(State);
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x6F424C", Offset = "0x6F424C", VA = "0x6F424C")]
		public void SetState(State state)
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x6F4254", Offset = "0x6F4254", VA = "0x6F4254")]
		public CharacterState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000153")]
	public class ScriptableCharaRuntimeSettingParameter : ScriptableObject
	{
		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharaRuntimeSettingParameter m_holoParam;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharaRuntimeSettingParameter m_myuriParam;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharaRuntimeSettingParameter m_dancerMyuriParam;

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x6E2C28", Offset = "0x6E2C28", VA = "0x6E2C28")]
		public void SetupChara(GameObject gameObject, GameDefines.CharacterType charaType)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x6E50B8", Offset = "0x6E50B8", VA = "0x6E50B8")]
		private GameObject FindInChildren(GameObject go, string key)
		{
			return null;
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x6E4FD0", Offset = "0x6E4FD0", VA = "0x6E4FD0")]
		private GameObject FindInParent(GameObject go, string key)
		{
			return null;
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x6E53A8", Offset = "0x6E53A8", VA = "0x6E53A8")]
		private void CreateGameObject(ref GameObject obj, GameObject parent, CharaRuntimeSettingParameter.ObjInfo info)
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x6E5518", Offset = "0x6E5518", VA = "0x6E5518")]
		private void AddRuntimeSettingComponent(ref GameObject obj, bool objDelete)
		{
		}

		[Token(Token = "0x6000917")]
		private T GetComponent<T>(GameObject src, CharaRuntimeSettingParameter.ObjInfo info) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x6E55B0", Offset = "0x6E55B0", VA = "0x6E55B0")]
		private GameObject GetGameObject(GameObject src, CharaRuntimeSettingParameter.ObjInfo info)
		{
			return null;
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x6E5660", Offset = "0x6E5660", VA = "0x6E5660")]
		public ScriptableCharaRuntimeSettingParameter()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class TouchEffect : MonoBehaviour
	{
		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EffectGroup tailEffect;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EffectGroup earLEffect;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EffectGroup earREffect;

		[Token(Token = "0x17000066")]
		public EffectGroup TailEffect
		{
			[Token(Token = "0x600091A")]
			[Address(RVA = "0x7594A0", Offset = "0x7594A0", VA = "0x7594A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600091B")]
			[Address(RVA = "0x7594A8", Offset = "0x7594A8", VA = "0x7594A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public EffectGroup EarLEffect
		{
			[Token(Token = "0x600091C")]
			[Address(RVA = "0x7594B0", Offset = "0x7594B0", VA = "0x7594B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600091D")]
			[Address(RVA = "0x7594B8", Offset = "0x7594B8", VA = "0x7594B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000068")]
		public EffectGroup EarREffect
		{
			[Token(Token = "0x600091E")]
			[Address(RVA = "0x7594C0", Offset = "0x7594C0", VA = "0x7594C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600091F")]
			[Address(RVA = "0x7594C8", Offset = "0x7594C8", VA = "0x7594C8")]
			set
			{
			}
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x7594D0", Offset = "0x7594D0", VA = "0x7594D0")]
		public void AllStop()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x759644", Offset = "0x759644", VA = "0x759644")]
		public TouchEffect()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class CollisionManager : SingletonMonoBehaviour<CollisionManager>
	{
		[Token(Token = "0x200022A")]
		public enum CollisionScene
		{
			[Token(Token = "0x40008C7")]
			Default,
			[Token(Token = "0x40008C8")]
			Main_02,
			[Token(Token = "0x40008C9")]
			Main_05
		}

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SceneCollision sceneCollision;

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x6F4B10", Offset = "0x6F4B10", VA = "0x6F4B10")]
		public void CollectSceneCollision()
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x6F4BF8", Offset = "0x6F4BF8", VA = "0x6F4BF8")]
		public void EnableSceneCollision(CollisionScene scene)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x6F4C7C", Offset = "0x6F4C7C", VA = "0x6F4C7C")]
		public void DisableSceneCollisionAll()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x6F4CEC", Offset = "0x6F4CEC", VA = "0x6F4CEC")]
		public CollisionManager()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class Credit : MonoBehaviour
	{
		[Token(Token = "0x200022B")]
		public enum MojiType
		{
			[Token(Token = "0x40008CB")]
			RightText,
			[Token(Token = "0x40008CC")]
			LeftText,
			[Token(Token = "0x40008CD")]
			CenterText,
			[Token(Token = "0x40008CE")]
			Picture,
			[Token(Token = "0x40008CF")]
			CFText
		}

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5149A0", Offset = "0x5149A0")]
		[SerializeField]
		private MojiType mojiType;

		[Token(Token = "0x400038E")]
		private const float DefaultTime = 3f;

		[Token(Token = "0x400038F")]
		private const float MaxAlphaRate = 1f;

		[Token(Token = "0x4000390")]
		private const float GoalY = 4.5f;

		[Token(Token = "0x4000391")]
		private const float StartY = -2f;

		[Token(Token = "0x4000392")]
		private const float AlphaMoveLength = 1f;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool activeFlag;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float AlphaRate;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float pictureOffsetX;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5149EC", Offset = "0x5149EC")]
		[SerializeField]
		private TextMeshPro nameText;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514A38", Offset = "0x514A38")]
		[SerializeField]
		private SpriteRenderer logoSprite;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514A84", Offset = "0x514A84")]
		[SerializeField]
		private string nameJp;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514AD0", Offset = "0x514AD0")]
		[SerializeField]
		private string nameEn;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514B1C", Offset = "0x514B1C")]
		[SerializeField]
		private string nameTc;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514B68", Offset = "0x514B68")]
		[SerializeField]
		private string nameSc;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform transformCache;

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x6F5B64", Offset = "0x6F5B64", VA = "0x6F5B64")]
		public TextMeshPro GetNameText()
		{
			return null;
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x6F5B6C", Offset = "0x6F5B6C", VA = "0x6F5B6C")]
		public SpriteRenderer GetLogoSprite()
		{
			return null;
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x6F5B74", Offset = "0x6F5B74", VA = "0x6F5B74")]
		public void SetNameLanguage()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x6F5CC4", Offset = "0x6F5CC4", VA = "0x6F5CC4")]
		public void OnInit()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x6F5CEC", Offset = "0x6F5CEC", VA = "0x6F5CEC")]
		public void SelfUpdate()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x6F5EA0", Offset = "0x6F5EA0", VA = "0x6F5EA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x6F5EC8", Offset = "0x6F5EC8", VA = "0x6F5EC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x6F6000", Offset = "0x6F6000", VA = "0x6F6000")]
		public Credit()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class CreditFinalLogo : MonoBehaviour
	{
		[Token(Token = "0x200022C")]
		public enum State
		{
			[Token(Token = "0x40008D1")]
			Default,
			[Token(Token = "0x40008D2")]
			Stop,
			[Token(Token = "0x40008D3")]
			Vanish,
			[Token(Token = "0x40008D4")]
			End
		}

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514BB4", Offset = "0x514BB4")]
		private SpriteRenderer logoSprite;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer logoJpSprite;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer logoEnSprite;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SpriteRenderer logoTcSprite;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpriteRenderer logoScSprite;

		[Token(Token = "0x40003A2")]
		private const float FadeTime = 5f;

		[Token(Token = "0x40003A3")]
		private const float StopTime = 5f;

		[Token(Token = "0x40003A4")]
		private const float StopY = 1.25f;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private State state;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float count;

		[Token(Token = "0x40003A7")]
		private const float AbjustXPos = 0f;

		[Token(Token = "0x40003A8")]
		private const float AbjustYPos = 3f;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float alphaRate;

		[Token(Token = "0x40003AA")]
		private const float DefaultTime = 3f;

		[Token(Token = "0x40003AB")]
		private const float MaxAlphaRate = 1f;

		[Token(Token = "0x40003AC")]
		private const float GoalY = 6f;

		[Token(Token = "0x40003AD")]
		private const float StartY = -1f;

		[Token(Token = "0x40003AE")]
		private const float AlphaMoveLength = 1f;

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x6F6064", Offset = "0x6F6064", VA = "0x6F6064")]
		private void Awake()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x6F6118", Offset = "0x6F6118", VA = "0x6F6118")]
		private void Update()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x6F611C", Offset = "0x6F611C", VA = "0x6F611C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x6F62AC", Offset = "0x6F62AC", VA = "0x6F62AC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x6F62DC", Offset = "0x6F62DC", VA = "0x6F62DC")]
		public void Animation(Vector3 pos, float offsetY = 0f)
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x6F6570", Offset = "0x6F6570", VA = "0x6F6570")]
		public CreditFinalLogo()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class CreditManager : SingletonMonoBehaviour<CreditManager>
	{
		[Token(Token = "0x200022D")]
		public enum CreditType
		{
			[Token(Token = "0x40008D6")]
			Main,
			[Token(Token = "0x40008D7")]
			Anim
		}

		[Token(Token = "0x200022E")]
		private enum LoadState
		{
			[Token(Token = "0x40008D9")]
			None,
			[Token(Token = "0x40008DA")]
			Loading,
			[Token(Token = "0x40008DB")]
			Loaded
		}

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float creditSpeed;

		[Token(Token = "0x40003B0")]
		private const float AbjustScrollLength = 10f;

		[Token(Token = "0x40003B1")]
		private const float AutoFontSize = 1.1f;

		[Token(Token = "0x40003B2")]
		private const float WaitMaxTime = 1f;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 creditInitPos;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LoadState loadState;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool playFlag;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float creditRowSize;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float scrollRowPos;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float currentWaitTime;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CreditParent creditParent;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject groupObject;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CreditFinalLogo creditFinalLogo;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameDefines.Language selectLanguage;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool creditEndFlag;

		[Token(Token = "0x40003BE")]
		private const string PathMain = "CreditGroup_MainStoryCredit";

		[Token(Token = "0x17000069")]
		public bool IsPlaying
		{
			[Token(Token = "0x6000934")]
			[Address(RVA = "0x6F6578", Offset = "0x6F6578", VA = "0x6F6578")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x6F6580", Offset = "0x6F6580", VA = "0x6F6580")]
		public bool GetCreditEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x6F6588", Offset = "0x6F6588", VA = "0x6F6588")]
		public void SetCreditEnd(bool param)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x6F6594", Offset = "0x6F6594", VA = "0x6F6594")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x6F65A8", Offset = "0x6F65A8", VA = "0x6F65A8")]
		public void Load(CreditType creditType)
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x6F66E0", Offset = "0x6F66E0", VA = "0x6F66E0")]
		private void CheckLanguage()
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x6F67F4", Offset = "0x6F67F4", VA = "0x6F67F4")]
		public void Play()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x6F6A14", Offset = "0x6F6A14", VA = "0x6F6A14")]
		public void Pause()
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x6F6A28", Offset = "0x6F6A28", VA = "0x6F6A28")]
		public void Resume()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x6F6A40", Offset = "0x6F6A40", VA = "0x6F6A40")]
		public void Stop()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x6F6B24", Offset = "0x6F6B24", VA = "0x6F6B24")]
		private void Update()
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x6F6DE0", Offset = "0x6F6DE0", VA = "0x6F6DE0")]
		public CreditManager()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x6F6EA0", Offset = "0x6F6EA0", VA = "0x6F6EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A400", Offset = "0x51A400")]
		private void <Load>b__23_0(GameObject go)
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class DebugSound : MonoBehaviour
	{
		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundID.BGM bgm;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SoundID.SE se;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundID.Voice voice;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public SoundDefines.RandomSELabel randomLabel;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Slider sliderBgm;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider sliderSe;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider sliderVoice;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEngine.UI.Button buttonRandomSE;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float bgmVolume;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float seVolume;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float voiceVolume;

		[Token(Token = "0x40003CA")]
		private const float NotificationTime = 0.3f;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float notificationTimer;

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x6F7040", Offset = "0x6F7040", VA = "0x6F7040")]
		private void Start()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x6F72D8", Offset = "0x6F72D8", VA = "0x6F72D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x6F7318", Offset = "0x6F7318", VA = "0x6F7318")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x6F73CC", Offset = "0x6F73CC", VA = "0x6F73CC")]
		public DebugSound()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x6F73E0", Offset = "0x6F73E0", VA = "0x6F73E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A410", Offset = "0x51A410")]
		private void <Start>b__13_0(float x)
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x6F747C", Offset = "0x6F747C", VA = "0x6F747C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A420", Offset = "0x51A420")]
		private void <Start>b__13_1(float x)
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x6F75B4", Offset = "0x6F75B4", VA = "0x6F75B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A430", Offset = "0x51A430")]
		private void <Start>b__13_2(float x)
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x6F76E8", Offset = "0x6F76E8", VA = "0x6F76E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A440", Offset = "0x51A440")]
		private void <Start>b__13_3()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class EasterEggComponent : BaseMonoBehaviour
	{
		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int id;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public PlatformManager.PlatformType platform;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool isContinue;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool isAchievement;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool isOneShot;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float time;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject collisionObject;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EffectGroup gazeEffectGroup;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animation animation;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float gazeTimer;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool beSeen;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool isFound;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public KeepPushEffect keepEffect;

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x6F7FEC", Offset = "0x6F7FEC", VA = "0x6F7FEC")]
		private void Start()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x6F8414", Offset = "0x6F8414", VA = "0x6F8414")]
		public void Found()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x6F8550", Offset = "0x6F8550", VA = "0x6F8550")]
		public void Seen()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x6F82E0", Offset = "0x6F82E0", VA = "0x6F82E0")]
		public void ResetTimer(bool forceResetTimer = false)
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x6F8BF8", Offset = "0x6F8BF8", VA = "0x6F8BF8")]
		private void Update()
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x6F8CEC", Offset = "0x6F8CEC", VA = "0x6F8CEC")]
		public bool InValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x6F8D18", Offset = "0x6F8D18", VA = "0x6F8D18")]
		public EasterEggComponent()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class EasterEggManager : SingletonMonoBehaviour<EasterEggManager>
	{
		[Token(Token = "0x200022F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510588", Offset = "0x510588")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ResourceManager resourceMng;

			[Token(Token = "0x40008DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject prefab;

			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x6F9144", Offset = "0x6F9144", VA = "0x6F9144")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000F68")]
			[Address(RVA = "0x6F914C", Offset = "0x6F914C", VA = "0x6F914C")]
			internal bool <LoadAndCreateEasterEgg>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x6F91B4", Offset = "0x6F91B4", VA = "0x6F91B4")]
			internal void <LoadAndCreateEasterEgg>b__1(GameObject x)
			{
			}
		}

		[Token(Token = "0x2000230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510598", Offset = "0x510598")]
		private sealed class <LoadAndCreateEasterEgg>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EasterEggManager <>4__this;

			[Token(Token = "0x40008E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass8_0 <>8__1;

			[Token(Token = "0x40008E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<EasterEggParameter.BindInfo> <paramList>5__2;

			[Token(Token = "0x40008E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GameObject <parentObject>5__3;

			[Token(Token = "0x17000136")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F6D")]
				[Address(RVA = "0x6F9878", Offset = "0x6F9878", VA = "0x6F9878", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000137")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F6F")]
				[Address(RVA = "0x6F98E0", Offset = "0x6F98E0", VA = "0x6F98E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x6F8EE4", Offset = "0x6F8EE4", VA = "0x6F8EE4")]
			[DebuggerHidden]
			public <LoadAndCreateEasterEgg>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x6F91BC", Offset = "0x6F91BC", VA = "0x6F91BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x6F91C0", Offset = "0x6F91C0", VA = "0x6F91C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x6F9880", Offset = "0x6F9880", VA = "0x6F9880", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40003D9")]
		public const string ParentObjName = "EasterEggs";

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ScriptableEasterEggParameter easterEggParam;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GameObject> easterEggList;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isLoaded;

		[Token(Token = "0x40003DD")]
		private const string PrefabPath = "easterEgg";

		[Token(Token = "0x1700006A")]
		public bool IsLoaded
		{
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x6F8D30", Offset = "0x6F8D30", VA = "0x6F8D30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x6F8D38", Offset = "0x6F8D38", VA = "0x6F8D38")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x6F8E74", Offset = "0x6F8E74", VA = "0x6F8E74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51A450", Offset = "0x51A450")]
		public IEnumerator LoadAndCreateEasterEgg()
		{
			return null;
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x6F8F10", Offset = "0x6F8F10", VA = "0x6F8F10")]
		public void DeleteEasterEgg()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x6F90AC", Offset = "0x6F90AC", VA = "0x6F90AC")]
		public EasterEggManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015C")]
	public class EasterEggParameter
	{
		[Serializable]
		[Token(Token = "0x2000231")]
		public class BindInfo
		{
			[Token(Token = "0x40008E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x40008E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x40008E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x40008E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 scale;

			[Token(Token = "0x40008E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int id;

			[Token(Token = "0x40008E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int enablePlatform;

			[Token(Token = "0x40008EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool isContinue;

			[Token(Token = "0x40008EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
			public bool isAchievement;

			[Token(Token = "0x40008EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
			public bool isOneShot;

			[Token(Token = "0x40008ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float time;

			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x6F98F0", Offset = "0x6F98F0", VA = "0x6F98F0")]
			public BindInfo()
			{
			}
		}

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BindInfo> infoList;

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x6F98E8", Offset = "0x6F98E8", VA = "0x6F98E8")]
		public EasterEggParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015D")]
	public class ScriptableEasterEggParameter : ScriptableObject
	{
		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<EasterEggParameter> paramList;

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x6E5668", Offset = "0x6E5668", VA = "0x6E5668")]
		public ScriptableEasterEggParameter()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class EffectGroup : BaseMonoBehaviour
	{
		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<ParticleSystem> particleList;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform attachTransform;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isStop;

		[Token(Token = "0x1700006B")]
		public bool IsPlaying
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x6F86F8", Offset = "0x6F86F8", VA = "0x6F86F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x6F98F8", Offset = "0x6F98F8", VA = "0x6F98F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x6F9A38", Offset = "0x6F9A38", VA = "0x6F9A38")]
		private void Update()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x6F8800", Offset = "0x6F8800", VA = "0x6F8800")]
		public void Play([Optional] Transform trans)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x6F9B1C", Offset = "0x6F9B1C", VA = "0x6F9B1C")]
		public void Pause()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x6F9C14", Offset = "0x6F9C14", VA = "0x6F9C14")]
		public void Resume()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x6F81E0", Offset = "0x6F81E0", VA = "0x6F81E0")]
		public void Stop()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x6F9D0C", Offset = "0x6F9D0C", VA = "0x6F9D0C")]
		public EffectGroup()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class GameDefines
	{
		[Token(Token = "0x2000232")]
		public enum CharacterType
		{
			[Token(Token = "0x40008EF")]
			Holo,
			[Token(Token = "0x40008F0")]
			Myuri,
			[Token(Token = "0x40008F1")]
			DancerMyuri,
			[Token(Token = "0x40008F2")]
			Lawrence
		}

		[Token(Token = "0x2000233")]
		public enum SceneID
		{
			[Token(Token = "0x40008F4")]
			MainStory0 = 0,
			[Token(Token = "0x40008F5")]
			MainStory1 = 1,
			[Token(Token = "0x40008F6")]
			MainStory1Tenbin = 2,
			[Token(Token = "0x40008F7")]
			MainStory1_2 = 3,
			[Token(Token = "0x40008F8")]
			MainStory2 = 4,
			[Token(Token = "0x40008F9")]
			MainStory3 = 5,
			[Token(Token = "0x40008FA")]
			MainStory4 = 6,
			[Token(Token = "0x40008FB")]
			MainStory5 = 7,
			[Token(Token = "0x40008FC")]
			MainStory6 = 8,
			[Token(Token = "0x40008FD")]
			MainStoryEnd = 9,
			[Token(Token = "0x40008FE")]
			AnimMode = 9,
			[Token(Token = "0x40008FF")]
			Title = 10,
			[Token(Token = "0x4000900")]
			Title2 = 11,
			[Token(Token = "0x4000901")]
			Max = 12,
			[Token(Token = "0x4000902")]
			StoryMax = 10
		}

		[Token(Token = "0x2000234")]
		public enum Language
		{
			[Token(Token = "0x4000904")]
			Jp,
			[Token(Token = "0x4000905")]
			En,
			[Token(Token = "0x4000906")]
			Tc,
			[Token(Token = "0x4000907")]
			Sc,
			[Token(Token = "0x4000908")]
			Max
		}

		[Token(Token = "0x40003E4")]
		public const int BaseFadeRenderQueue = 3150;

		[Token(Token = "0x40003E5")]
		public const int SystemFadeRenderQueue = 3155;

		[Token(Token = "0x40003E6")]
		public const int BGFadeRenderQueue = 1995;

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x6FA77C", Offset = "0x6FA77C", VA = "0x6FA77C")]
		public GameDefines()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class Hand : BaseMonoBehaviour
	{
		[Token(Token = "0x2000235")]
		public enum HandSide
		{
			[Token(Token = "0x400090A")]
			NotSetting,
			[Token(Token = "0x400090B")]
			Left,
			[Token(Token = "0x400090C")]
			Right
		}

		[Token(Token = "0x2000236")]
		public enum HandState
		{
			[Token(Token = "0x400090E")]
			Idle,
			[Token(Token = "0x400090F")]
			Hold
		}

		[Token(Token = "0x2000237")]
		private enum MorphNo
		{
			[Token(Token = "0x4000911")]
			GrabMorph,
			[Token(Token = "0x4000912")]
			StealMorph
		}

		[Token(Token = "0x2000238")]
		public enum BrushType
		{
			[Token(Token = "0x4000914")]
			NotDone,
			[Token(Token = "0x4000915")]
			GentlyBrush
		}

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float lateSpeed;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float JustSpeedNear;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float JustSpeedFar;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float overSpeed;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SkinnedMeshRenderer handRenderer;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x514C8C", Offset = "0x514C8C")]
		private float handStretchRate;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x514CA4", Offset = "0x514CA4")]
		private float handStretchDown;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Material materialEnable;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Material materialDontTouch;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject nutsObject;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public HandSide handSide;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private HandState handState;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Hand otherSideHand;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private XRNode XRTargetNode;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool isActive;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int iCheckBrushFrame;

		[Token(Token = "0x40003F7")]
		private const int CHECK_BRUSH_INTERVAL_FRAME = 20;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3[] poslist;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float brushFuzzyRate;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float maxDistance;

		[Token(Token = "0x40003FB")]
		private const float BRUSH_JUGEMENT_TIME = 1.036f;

		[Token(Token = "0x40003FC")]
		private const float SUB_TIME_SPEED = 0.01f;

		[Token(Token = "0x40003FD")]
		private const float SUB_OUT_HAND_TIME_SPEED = 0.001f;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float headBrushTime;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float tailBrushTime;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float bodyBrushTime;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool isHeadCanTouch;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		private bool isTailCanTouch;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		private bool isBodyCanTouch;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
		private bool isHeadDontTouch;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isTailDontTouch;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool isBodyDontTouch;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 hitpos;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int DummyTailBrushSEFrame;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int brushSEInterval;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 catchHandFirstPos;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 catchSubtitleFirstPos;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 prevPos;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float interpolationRate;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private MorphNo morphNo;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private float morphRate;

		[Token(Token = "0x4000410")]
		private const float MorphAddSpeed = 250f;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool isHit;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		private bool eatStealing;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		private bool eatStealEnd;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ParticleSystem brushParticleSystem;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private BrushType brushType;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float htcvive_forward;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float openvr_forward;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float htcvive_right;

		[Token(Token = "0x1700006C")]
		public bool IsActive
		{
			[Token(Token = "0x6000962")]
			[Address(RVA = "0x6FAD58", Offset = "0x6FAD58", VA = "0x6FAD58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000963")]
			[Address(RVA = "0x6FAD60", Offset = "0x6FAD60", VA = "0x6FAD60")]
			private set
			{
			}
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x6FAC84", Offset = "0x6FAC84", VA = "0x6FAC84")]
		public SkinnedMeshRenderer GetSkinnedMeshRenderer()
		{
			return null;
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x6FAC8C", Offset = "0x6FAC8C", VA = "0x6FAC8C")]
		public void SetHandActive(bool flag, bool renderOnly = false)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x6FAD6C", Offset = "0x6FAD6C", VA = "0x6FAD6C")]
		public Vector3 GetHitPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x6FAD78", Offset = "0x6FAD78", VA = "0x6FAD78")]
		private void ResetCanTouch()
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x6FAD8C", Offset = "0x6FAD8C", VA = "0x6FAD8C")]
		private void ResetDontTouch()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x6FAD98", Offset = "0x6FAD98", VA = "0x6FAD98")]
		public void DontTouchCheckUpdate(bool isHeadDontTouch, bool isTailDontTouch, bool isBodyDontTouch)
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x6FADB4", Offset = "0x6FADB4", VA = "0x6FADB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x6FADC0", Offset = "0x6FADC0", VA = "0x6FADC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x6FADC8", Offset = "0x6FADC8", VA = "0x6FADC8")]
		public void TimeBrushReset()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x6FADD4", Offset = "0x6FADD4", VA = "0x6FADD4")]
		private void Start()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x6FADD8", Offset = "0x6FADD8", VA = "0x6FADD8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x6FAFC8", Offset = "0x6FAFC8", VA = "0x6FAFC8")]
		private void Update()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x6FB008", Offset = "0x6FB008", VA = "0x6FB008")]
		private void HandPosition()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x6FBF84", Offset = "0x6FBF84", VA = "0x6FBF84")]
		public void SetIsRender(bool flag)
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x6FC104", Offset = "0x6FC104", VA = "0x6FC104")]
		public void StateUpdate()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x6FC1EC", Offset = "0x6FC1EC", VA = "0x6FC1EC")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x6FC3E8", Offset = "0x6FC3E8", VA = "0x6FC3E8")]
		public void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x6FCE78", Offset = "0x6FCE78", VA = "0x6FCE78")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x6FC260", Offset = "0x6FC260", VA = "0x6FC260")]
		private void HeadTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x6FC6C4", Offset = "0x6FC6C4", VA = "0x6FC6C4")]
		private void HeadTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x6FCFB0", Offset = "0x6FCFB0", VA = "0x6FCFB0")]
		private void HeadTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x6FC378", Offset = "0x6FC378", VA = "0x6FC378")]
		private void BodyTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x6FC924", Offset = "0x6FC924", VA = "0x6FC924")]
		private void BodyTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x6FD138", Offset = "0x6FD138", VA = "0x6FD138")]
		private void BodyTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x6FC2D0", Offset = "0x6FC2D0", VA = "0x6FC2D0")]
		private void TailTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x6FC744", Offset = "0x6FC744", VA = "0x6FC744")]
		private void TailTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x6FD000", Offset = "0x6FD000", VA = "0x6FD000")]
		private void TailTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x6FD51C", Offset = "0x6FD51C", VA = "0x6FD51C")]
		private void EarTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x6FC9A4", Offset = "0x6FC9A4", VA = "0x6FC9A4")]
		private void EarTriggerStayL(Collider other)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x6FCB70", Offset = "0x6FCB70", VA = "0x6FCB70")]
		private void EarTriggerStayR(Collider other)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x6FD188", Offset = "0x6FD188", VA = "0x6FD188")]
		private void EarTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x6FCD34", Offset = "0x6FCD34", VA = "0x6FCD34")]
		private void DishTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x6FCD80", Offset = "0x6FCD80", VA = "0x6FCD80")]
		private void CameraTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x6FD33C", Offset = "0x6FD33C", VA = "0x6FD33C")]
		private bool CalcStay(Collider other, string tagName, ref float brushTime, float addBrushJugementTime = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x6FD410", Offset = "0x6FD410", VA = "0x6FD410")]
		private void CalcExit(Collider other, string tagName, ref float brushTime)
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x6FBE7C", Offset = "0x6FBE7C", VA = "0x6FBE7C")]
		private void BrushCountDown()
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x6FBB74", Offset = "0x6FBB74", VA = "0x6FBB74")]
		private void BrushUpdate()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x6FD578", Offset = "0x6FD578", VA = "0x6FD578")]
		public BrushType BrushJudgment(float distance, ref float fuzzyValue)
		{
			return default(BrushType);
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x6FD62C", Offset = "0x6FD62C", VA = "0x6FD62C")]
		public HandSide GetHandSide()
		{
			return default(HandSide);
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x6FD634", Offset = "0x6FD634", VA = "0x6FD634")]
		public void SetHandSide(HandSide param)
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x6FD63C", Offset = "0x6FD63C", VA = "0x6FD63C")]
		public HandState GetHandState()
		{
			return default(HandState);
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x6FD644", Offset = "0x6FD644", VA = "0x6FD644")]
		public void SetHandState(HandState param)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x6FD64C", Offset = "0x6FD64C", VA = "0x6FD64C")]
		public Hand GetOtherSideHand()
		{
			return null;
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x6FD654", Offset = "0x6FD654", VA = "0x6FD654")]
		public void SetOtherSideHand(Hand param)
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x6FD65C", Offset = "0x6FD65C", VA = "0x6FD65C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class HandManager : SingletonMonoBehaviour<HandManager>
	{
		[Token(Token = "0x2000239")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5105A8", Offset = "0x5105A8")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4000916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HandManager <>4__this;

			[Token(Token = "0x4000917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Camera main;

			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x6FDB84", Offset = "0x6FDB84", VA = "0x6FDB84")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x6FE5EC", Offset = "0x6FE5EC", VA = "0x6FE5EC")]
			internal void <Initialize>b__0(GameObject x)
			{
			}

			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x6FE79C", Offset = "0x6FE79C", VA = "0x6FE79C")]
			internal void <Initialize>b__1(GameObject x)
			{
			}
		}

		[Token(Token = "0x4000419")]
		private const float HideDistance = 0.15f;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<EffectGroup> touchEffectList;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float stickyFingersAddZDist;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Hand leftHand;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Hand rightHand;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHeadDontTouch;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool isTailDontTouch;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool isBodyDontTouch;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		private bool isHureai;

		[Token(Token = "0x4000422")]
		private const string LeftHandPrefabPath = "LeftHand";

		[Token(Token = "0x4000423")]
		private const string RightHandPrefabPath = "RightHand";

		[Token(Token = "0x1700006D")]
		public float StickyFingersAddZDist
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0x6FD778", Offset = "0x6FD778", VA = "0x6FD778")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000991")]
			[Address(RVA = "0x6FD780", Offset = "0x6FD780", VA = "0x6FD780")]
			set
			{
			}
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x6FD788", Offset = "0x6FD788", VA = "0x6FD788")]
		private void ResetDontTouch()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x6FD794", Offset = "0x6FD794", VA = "0x6FD794")]
		public void SetDontTouchCheck(bool isHeadDontTouch, bool isTailDontTouch, bool isBodyDontTouch)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x6FD7B0", Offset = "0x6FD7B0", VA = "0x6FD7B0")]
		public Vector3 GetLeftHandPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x6FD884", Offset = "0x6FD884", VA = "0x6FD884")]
		public Vector3 GetRightHandPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x6FD958", Offset = "0x6FD958", VA = "0x6FD958")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x6FDB8C", Offset = "0x6FDB8C", VA = "0x6FDB8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x6FDB90", Offset = "0x6FDB90", VA = "0x6FDB90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x6FDFEC", Offset = "0x6FDFEC", VA = "0x6FDFEC")]
		public bool IsLeftActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x6FE008", Offset = "0x6FE008", VA = "0x6FE008")]
		public bool IsRightActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x6FDD04", Offset = "0x6FDD04", VA = "0x6FDD04")]
		private void HandActiveCheck()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x6FE024", Offset = "0x6FE024", VA = "0x6FE024")]
		public void SetHandSide()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x6FE104", Offset = "0x6FE104", VA = "0x6FE104")]
		public bool GetHureai()
		{
			return default(bool);
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x6FE10C", Offset = "0x6FE10C", VA = "0x6FE10C")]
		public void SetHureai(bool isHureai)
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x6FE278", Offset = "0x6FE278", VA = "0x6FE278")]
		public Vector3 GetHitPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x6FE2D0", Offset = "0x6FE2D0", VA = "0x6FE2D0")]
		public void TimeBrushReset()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x6FD454", Offset = "0x6FD454", VA = "0x6FD454")]
		public void AddTouchEffect(EffectGroup effect)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x6FD4B4", Offset = "0x6FD4B4", VA = "0x6FD4B4")]
		public void RemoveTouchEffect(EffectGroup effect)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x6FE3E4", Offset = "0x6FE3E4", VA = "0x6FE3E4")]
		public void ClearAllTouchEffect()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x6FE43C", Offset = "0x6FE43C", VA = "0x6FE43C")]
		public void CheckAndResetTouchEffectOnPause()
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x6FE548", Offset = "0x6FE548", VA = "0x6FE548")]
		public HandManager()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class InteractionEar : MonoBehaviour
	{
		[Token(Token = "0x200023A")]
		private enum Standup
		{
			[Token(Token = "0x4000919")]
			Normal,
			[Token(Token = "0x400091A")]
			Bounce
		}

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform ear;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x514D34", Offset = "0x514D34")]
		private float moveSpeed;

		[Token(Token = "0x4000426")]
		private const float MaxRotateZ = 90f;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float rotateZ;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 defaultRotate;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float rotateEnableTime;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isActive;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve animationCurve;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Standup standupType;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int bounceState;

		[Token(Token = "0x1700006E")]
		public Transform Ear
		{
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x6FF5B0", Offset = "0x6FF5B0", VA = "0x6FF5B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x6FF5B8", Offset = "0x6FF5B8", VA = "0x6FF5B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public float MoveSpeed
		{
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0x6FF5C0", Offset = "0x6FF5C0", VA = "0x6FF5C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0x6FF5C8", Offset = "0x6FF5C8", VA = "0x6FF5C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public AnimationCurve AnimationCurve
		{
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0x6FF5D0", Offset = "0x6FF5D0", VA = "0x6FF5D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x6FF5D8", Offset = "0x6FF5D8", VA = "0x6FF5D8")]
			set
			{
			}
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x6FF5E0", Offset = "0x6FF5E0", VA = "0x6FF5E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x6FF690", Offset = "0x6FF690", VA = "0x6FF690")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x6FD520", Offset = "0x6FD520", VA = "0x6FD520")]
		public void SetEnableTime(float time = 0.04f)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x6FF870", Offset = "0x6FF870", VA = "0x6FF870")]
		public InteractionEar()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class LaserPointerManager : SingletonMonoBehaviour<LaserPointerManager>
	{
		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x514D88", Offset = "0x514D88")]
		private bool <IsLaserRenderEnable>k__BackingField;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x514D98", Offset = "0x514D98")]
		private bool <IsLaserCheckEnable>k__BackingField;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x514DA8", Offset = "0x514DA8")]
		private bool <IsEnableCount>k__BackingField;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int laserCheckEnableCount;

		[Token(Token = "0x4000432")]
		private const int EnableConutMax = 2;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject laserPointer;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514DB8", Offset = "0x514DB8")]
		[SerializeField]
		private float laserLength;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x514E04", Offset = "0x514E04")]
		private Vector3 <LaserHitPoint>k__BackingField;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x514E14", Offset = "0x514E14")]
		private bool <HoldSeekBarHandle>k__BackingField;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<BaseLaserPointerCollider> laserPointerColliderList;

		[Token(Token = "0x4000439")]
		private const string PrefabPath = "LaserPointer";

		[Token(Token = "0x17000071")]
		public bool IsLaserRenderEnable
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x7005A8", Offset = "0x7005A8", VA = "0x7005A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A4B4", Offset = "0x51A4B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x7005B0", Offset = "0x7005B0", VA = "0x7005B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A4C4", Offset = "0x51A4C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public bool IsLaserCheckEnable
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x7005BC", Offset = "0x7005BC", VA = "0x7005BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A4D4", Offset = "0x51A4D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x7005C4", Offset = "0x7005C4", VA = "0x7005C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A4E4", Offset = "0x51A4E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public bool IsEnableCount
		{
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x7005D0", Offset = "0x7005D0", VA = "0x7005D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A4F4", Offset = "0x51A4F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0x7005D8", Offset = "0x7005D8", VA = "0x7005D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A504", Offset = "0x51A504")]
			set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public Vector3 LaserHitPoint
		{
			[Token(Token = "0x60009B6")]
			[Address(RVA = "0x7005E4", Offset = "0x7005E4", VA = "0x7005E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A514", Offset = "0x51A514")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0x7005F0", Offset = "0x7005F0", VA = "0x7005F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A524", Offset = "0x51A524")]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public bool HoldSeekBarHandle
		{
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0x7005FC", Offset = "0x7005FC", VA = "0x7005FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A534", Offset = "0x51A534")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0x700604", Offset = "0x700604", VA = "0x700604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A544", Offset = "0x51A544")]
			set
			{
			}
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x700610", Offset = "0x700610", VA = "0x700610")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x700720", Offset = "0x700720", VA = "0x700720")]
		private void Update()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x700724", Offset = "0x700724", VA = "0x700724")]
		public bool Valid()
		{
			return default(bool);
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x70072C", Offset = "0x70072C", VA = "0x70072C")]
		public bool CheckHitLaserPointer()
		{
			return default(bool);
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x700E10", Offset = "0x700E10", VA = "0x700E10")]
		public LaserPointerManager()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x700EB0", Offset = "0x700EB0", VA = "0x700EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A554", Offset = "0x51A554")]
		private void <Initialize>b__27_0(GameObject x)
		{
		}
	}
	[Token(Token = "0x2000164")]
	public class LightmapComponent : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200023B")]
		public struct LightmapParam
		{
			[Token(Token = "0x400091B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518F5C", Offset = "0x518F5C")]
			public GameDefines.SceneID type;

			[Token(Token = "0x400091C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518F94", Offset = "0x518F94")]
			public Texture2D light;

			[Token(Token = "0x400091D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518FCC", Offset = "0x518FCC")]
			public Texture2D dir;

			[Token(Token = "0x400091E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x519004", Offset = "0x519004")]
			public Texture2D shadow;

			[Token(Token = "0x400091F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51903C", Offset = "0x51903C")]
			public Cubemap cubemap;
		}

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514E24", Offset = "0x514E24")]
		[SerializeField]
		private LightmapParam[] lightmapParamArray;

		[Token(Token = "0x17000076")]
		public LightmapParam[] LightmapParamArray
		{
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0x701054", Offset = "0x701054", VA = "0x701054")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009C1")]
			[Address(RVA = "0x70105C", Offset = "0x70105C", VA = "0x70105C")]
			set
			{
			}
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x701064", Offset = "0x701064", VA = "0x701064")]
		public void ChangeLightMap(GameDefines.SceneID type)
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x701174", Offset = "0x701174", VA = "0x701174")]
		public LightmapComponent()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class LightmapManager : SingletonMonoBehaviour<LightmapManager>
	{
		[Token(Token = "0x200023C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5105B8", Offset = "0x5105B8")]
		private sealed class <ChangeLightMapCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameDefines.SceneID type;

			[Token(Token = "0x4000923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LightmapManager <>4__this;

			[Token(Token = "0x4000924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForEndOfFrame <wait>5__2;

			[Token(Token = "0x17000138")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F77")]
				[Address(RVA = "0x70201C", Offset = "0x70201C", VA = "0x70201C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000139")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F79")]
				[Address(RVA = "0x702084", Offset = "0x702084", VA = "0x702084", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F74")]
			[Address(RVA = "0x701214", Offset = "0x701214", VA = "0x701214")]
			[DebuggerHidden]
			public <ChangeLightMapCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000F75")]
			[Address(RVA = "0x701D14", Offset = "0x701D14", VA = "0x701D14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F76")]
			[Address(RVA = "0x701D18", Offset = "0x701D18", VA = "0x701D18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F78")]
			[Address(RVA = "0x702024", Offset = "0x702024", VA = "0x702024", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200023D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5105C8", Offset = "0x5105C8")]
		private sealed class <AddLightMapCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameDefines.SceneID type;

			[Token(Token = "0x4000928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LightmapManager <>4__this;

			[Token(Token = "0x1700013A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F7D")]
				[Address(RVA = "0x701CA4", Offset = "0x701CA4", VA = "0x701CA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F7F")]
				[Address(RVA = "0x701D0C", Offset = "0x701D0C", VA = "0x701D0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x70137C", Offset = "0x70137C", VA = "0x70137C")]
			[DebuggerHidden]
			public <AddLightMapCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x70196C", Offset = "0x70196C", VA = "0x70196C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0x701970", Offset = "0x701970", VA = "0x701970", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x701CAC", Offset = "0x701CAC", VA = "0x701CAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isLoading;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private GameDefines.SceneID nowType;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LightmapData[] baseLightMapArray;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514E70", Offset = "0x514E70")]
		[SerializeField]
		private float[] skyboxExposureArray;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514EBC", Offset = "0x514EBC")]
		[SerializeField]
		[HideInInspector]
		private Color[] skyboxTintColorArray;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<string, GameObject> lightCacheDic;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AsyncOperationHandle<SceneInstance> loadSceneHandle;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] ScenePathArray;

		[Token(Token = "0x4000443")]
		private const string SCENE_ADDRESS_PREFIX = "Scene_";

		[Token(Token = "0x17000077")]
		public bool IsLoading
		{
			[Token(Token = "0x60009C4")]
			[Address(RVA = "0x70117C", Offset = "0x70117C", VA = "0x70117C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000078")]
		public GameDefines.SceneID NowType
		{
			[Token(Token = "0x60009C5")]
			[Address(RVA = "0x701184", Offset = "0x701184", VA = "0x701184")]
			get
			{
				return default(GameDefines.SceneID);
			}
		}

		[Token(Token = "0x17000079")]
		public float[] SkyBoxExposureArray
		{
			[Token(Token = "0x60009C6")]
			[Address(RVA = "0x70118C", Offset = "0x70118C", VA = "0x70118C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x701194", Offset = "0x701194", VA = "0x701194")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51A564", Offset = "0x51A564")]
		public IEnumerator ChangeLightMapCoroutine(GameDefines.SceneID type)
		{
			return null;
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x701240", Offset = "0x701240", VA = "0x701240")]
		private void ChangeTextureOnly(GameDefines.SceneID type)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x7012FC", Offset = "0x7012FC", VA = "0x7012FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51A5C8", Offset = "0x51A5C8")]
		private IEnumerator AddLightMapCoroutine(GameDefines.SceneID type)
		{
			return null;
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x7013A8", Offset = "0x7013A8", VA = "0x7013A8")]
		private void ChangeSkyboxExposure(GameDefines.SceneID type)
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x70143C", Offset = "0x70143C", VA = "0x70143C")]
		private void ChangeSkyboxTintColor(GameDefines.SceneID type)
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x7014D8", Offset = "0x7014D8", VA = "0x7014D8")]
		public void ChangeLightMap(GameDefines.SceneID type)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x7015AC", Offset = "0x7015AC", VA = "0x7015AC")]
		private void ChangeLightActive(GameDefines.SceneID type)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x7015B0", Offset = "0x7015B0", VA = "0x7015B0")]
		public LightmapManager()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class MaruPekeChange : MonoBehaviour
	{
		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SetUIString jpString;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SetUIString enString;

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x703224", Offset = "0x703224", VA = "0x703224")]
		public MaruPekeChange()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class PS4VideoPlayer : MonoBehaviour
	{
		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x6DBDCC", Offset = "0x6DBDCC", VA = "0x6DBDCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x6DBDF4", Offset = "0x6DBDF4", VA = "0x6DBDF4")]
		public PS4VideoPlayer()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class Ps4CommonDialogManager : SingletonMonoBehaviour<Ps4CommonDialogManager>
	{
		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isInitialized;

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x6DD2E0", Offset = "0x6DD2E0", VA = "0x6DD2E0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x6DD2F8", Offset = "0x6DD2F8", VA = "0x6DD2F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x6DD2FC", Offset = "0x6DD2FC", VA = "0x6DD2FC")]
		public void OpenAutoCloseOkDialog(string msg)
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x6DD300", Offset = "0x6DD300", VA = "0x6DD300")]
		public void OpenAutoCloseNoneDialog(string msg, float closeWaitTime)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x6DD304", Offset = "0x6DD304", VA = "0x6DD304")]
		public Ps4CommonDialogManager()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class ResourcePath
	{
		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x6DE8D0", Offset = "0x6DE8D0", VA = "0x6DE8D0")]
		public static string GetEffectPath(string name)
		{
			return null;
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x6DE8D4", Offset = "0x6DE8D4", VA = "0x6DE8D4")]
		public static string GetCharaPrefabPath(string name)
		{
			return null;
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x6DE8D8", Offset = "0x6DE8D8", VA = "0x6DE8D8")]
		public static string GetPrefabPath(string name)
		{
			return null;
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x6DE8DC", Offset = "0x6DE8DC", VA = "0x6DE8DC")]
		public static string GetParameterPath(string name)
		{
			return null;
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x6DE8E0", Offset = "0x6DE8E0", VA = "0x6DE8E0")]
		public static string GetVoicePath(string name)
		{
			return null;
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x6DE8E4", Offset = "0x6DE8E4", VA = "0x6DE8E4")]
		public static string GetBGMPath(string name)
		{
			return null;
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x6DE8E8", Offset = "0x6DE8E8", VA = "0x6DE8E8")]
		public static string GetSEPath(string name)
		{
			return null;
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x6DE8EC", Offset = "0x6DE8EC", VA = "0x6DE8EC")]
		public static string GetLaserPointer()
		{
			return null;
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x6DE934", Offset = "0x6DE934", VA = "0x6DE934")]
		public static string GetTimeline(int no)
		{
			return null;
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x6DEBD4", Offset = "0x6DEBD4", VA = "0x6DEBD4")]
		public static string GetShadowProjectorPath()
		{
			return null;
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x6DEC1C", Offset = "0x6DEC1C", VA = "0x6DEC1C")]
		public static string GetTime(double time)
		{
			return null;
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x6DED54", Offset = "0x6DED54", VA = "0x6DED54")]
		public ResourcePath()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class OculusSaveStream : SaveStream
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x7032B4", Offset = "0x7032B4", VA = "0x7032B4", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x703320", Offset = "0x703320", VA = "0x703320", Slot = "5")]
		public override bool Load([Optional] OnLoadSucceeded onSuccess, [Optional] OnLoadFailed onFailed)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x703328", Offset = "0x703328", VA = "0x703328", Slot = "6")]
		public override bool Save(ref byte[] saveData, [Optional] OnSaveSucceeded onSuccess, [Optional] OnSaveFailed onFailed)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x703330", Offset = "0x703330", VA = "0x703330", Slot = "7")]
		public override bool IsExistSaveData()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x703338", Offset = "0x703338", VA = "0x703338")]
		public OculusSaveStream()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class SAWSaveData : SingletonMonoBehaviour<SAWSaveData>
	{
		[Serializable]
		[Token(Token = "0x200023E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5105D8", Offset = "0x5105D8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400092A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static SaveStream.OnSaveSucceeded <>9__14_0;

			[Token(Token = "0x400092B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static SaveStream.OnSaveFailed <>9__14_1;

			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x6DFB00", Offset = "0x6DFB00", VA = "0x6DFB00")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x6DFB08", Offset = "0x6DFB08", VA = "0x6DFB08")]
			internal void <Save>b__14_0()
			{
			}

			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x6DFB0C", Offset = "0x6DFB0C", VA = "0x6DFB0C")]
			internal void <Save>b__14_1(int result)
			{
			}
		}

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514F38", Offset = "0x514F38")]
		[SerializeField]
		private bool dontLoad;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SaveData saveData;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SaveStream saveStream;

		[Token(Token = "0x400044A")]
		private const int CheckCoinBitNum = 8;

		[Token(Token = "0x400044B")]
		private const int HoloEarGazeID = 10;

		[Token(Token = "0x400044C")]
		private const int MyuriEarGazeID = 11;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isInit;

		[Token(Token = "0x1700007A")]
		public bool IsInit
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x6DEE3C", Offset = "0x6DEE3C", VA = "0x6DEE3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x6DEE44", Offset = "0x6DEE44", VA = "0x6DEE44")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x6DF068", Offset = "0x6DF068", VA = "0x6DF068")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x6DF06C", Offset = "0x6DF06C", VA = "0x6DF06C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x6DF08C", Offset = "0x6DF08C", VA = "0x6DF08C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x6DF090", Offset = "0x6DF090", VA = "0x6DF090")]
		public void OnFirstPlay()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x6DE600", Offset = "0x6DE600", VA = "0x6DE600")]
		public void Save()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x6DEF64", Offset = "0x6DEF64", VA = "0x6DEF64")]
		public void Load()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x6DF0DC", Offset = "0x6DF0DC", VA = "0x6DF0DC")]
		public bool IsFirstPlayFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x6DF0C0", Offset = "0x6DF0C0", VA = "0x6DF0C0")]
		public void SetFirstPlayFlag(int param)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x6DF100", Offset = "0x6DF100", VA = "0x6DF100")]
		public int GetChapterClearNum()
		{
			return default(int);
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x6DF11C", Offset = "0x6DF11C", VA = "0x6DF11C")]
		public void SetChapterClearNum(int param)
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x6DBA98", Offset = "0x6DBA98", VA = "0x6DBA98")]
		public int GetLanguageType()
		{
			return default(int);
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x6DF1C4", Offset = "0x6DF1C4", VA = "0x6DF1C4")]
		public void SetLanguageType(GameDefines.Language param)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x6DF1E0", Offset = "0x6DF1E0", VA = "0x6DF1E0")]
		public void SetVolume(SaveData.SoundType name, int rate)
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x6DF260", Offset = "0x6DF260", VA = "0x6DF260")]
		public int GetMaxVolumeParam()
		{
			return default(int);
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x6DF268", Offset = "0x6DF268", VA = "0x6DF268")]
		public float GetMaxVolumeMul()
		{
			return default(float);
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x6DF274", Offset = "0x6DF274", VA = "0x6DF274")]
		public float GetMaxBGMVolumeMul()
		{
			return default(float);
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x6DF280", Offset = "0x6DF280", VA = "0x6DF280")]
		public int GetVolumeBGM()
		{
			return default(int);
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x6DF29C", Offset = "0x6DF29C", VA = "0x6DF29C")]
		public int GetVolumeSE()
		{
			return default(int);
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x6DF2B8", Offset = "0x6DF2B8", VA = "0x6DF2B8")]
		public int GetVolumeHoloVoice()
		{
			return default(int);
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x6DF2D4", Offset = "0x6DF2D4", VA = "0x6DF2D4")]
		public int GetVolumeLawrenceVoice()
		{
			return default(int);
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x6DF2F0", Offset = "0x6DF2F0", VA = "0x6DF2F0")]
		public int GetVolumeMyuriVoice()
		{
			return default(int);
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x6DF30C", Offset = "0x6DF30C", VA = "0x6DF30C")]
		public int GetSerifType()
		{
			return default(int);
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x6DF328", Offset = "0x6DF328", VA = "0x6DF328")]
		public void ChangeSetSerifType(int param)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x6DF434", Offset = "0x6DF434", VA = "0x6DF434")]
		public int GetPostProcessType()
		{
			return default(int);
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x6DF450", Offset = "0x6DF450", VA = "0x6DF450")]
		public void SetPostProcessType(int param)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x6DE47C", Offset = "0x6DE47C", VA = "0x6DE47C")]
		public int GetTessellationType()
		{
			return default(int);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x6DE5E4", Offset = "0x6DE5E4", VA = "0x6DE5E4")]
		public void SetTessellationType(int param)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x6DE460", Offset = "0x6DE460", VA = "0x6DE460")]
		public int GetScreenSizeType()
		{
			return default(int);
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x6DE5C8", Offset = "0x6DE5C8", VA = "0x6DE5C8")]
		public void SetScreenSizeType(int param)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x6DF46C", Offset = "0x6DF46C", VA = "0x6DF46C")]
		public int GetEnableShadow()
		{
			return default(int);
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x6DF488", Offset = "0x6DF488", VA = "0x6DF488")]
		public void SetEnableShadow(int param)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x6DF4A4", Offset = "0x6DF4A4", VA = "0x6DF4A4")]
		public int GetPostEffect()
		{
			return default(int);
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x6DF4C0", Offset = "0x6DF4C0", VA = "0x6DF4C0")]
		public void SetPostEffect(int param)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x6DF4DC", Offset = "0x6DF4DC", VA = "0x6DF4DC")]
		public int GetSelectChapterNum()
		{
			return default(int);
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x6DF4F8", Offset = "0x6DF4F8", VA = "0x6DF4F8")]
		public void SetSelectChapterNum(int param)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x6DF514", Offset = "0x6DF514", VA = "0x6DF514")]
		public bool GetEasterEgg(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x6DF540", Offset = "0x6DF540", VA = "0x6DF540")]
		public void SetEasterEgg(int id)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x6DF6CC", Offset = "0x6DF6CC", VA = "0x6DF6CC")]
		public void CheckEarGaze()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x6DF5AC", Offset = "0x6DF5AC", VA = "0x6DF5AC")]
		public void CheckBitCount()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x6DF7B8", Offset = "0x6DF7B8", VA = "0x6DF7B8")]
		private int bitCount(int bits, int checkNum = 8)
		{
			return default(int);
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x6DF7F0", Offset = "0x6DF7F0", VA = "0x6DF7F0")]
		public SAWSaveData()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x6DF860", Offset = "0x6DF860", VA = "0x6DF860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A62C", Offset = "0x51A62C")]
		private void <Load>b__15_0(ref byte[] data)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x6DFA60", Offset = "0x6DFA60", VA = "0x6DFA60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A63C", Offset = "0x51A63C")]
		private void <Load>b__15_1(int result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016C")]
	public class SaveData
	{
		[Token(Token = "0x200023F")]
		public enum SerifType
		{
			[Token(Token = "0x400092D")]
			Off,
			[Token(Token = "0x400092E")]
			OnMoveEnable,
			[Token(Token = "0x400092F")]
			On
		}

		[Token(Token = "0x2000240")]
		public enum PostProcess
		{
			[Token(Token = "0x4000931")]
			Low,
			[Token(Token = "0x4000932")]
			High
		}

		[Token(Token = "0x2000241")]
		public enum Tessellation
		{
			[Token(Token = "0x4000934")]
			Off,
			[Token(Token = "0x4000935")]
			On
		}

		[Token(Token = "0x2000242")]
		public enum ResolutionType
		{
			[Token(Token = "0x4000937")]
			_08,
			[Token(Token = "0x4000938")]
			_10,
			[Token(Token = "0x4000939")]
			_12,
			[Token(Token = "0x400093A")]
			_14,
			[Token(Token = "0x400093B")]
			_16,
			[Token(Token = "0x400093C")]
			_18,
			[Token(Token = "0x400093D")]
			_20,
			[Token(Token = "0x400093E")]
			_Android
		}

		[Token(Token = "0x2000243")]
		public enum VolumeType
		{
			[Token(Token = "0x4000940")]
			Nothing,
			[Token(Token = "0x4000941")]
			Small,
			[Token(Token = "0x4000942")]
			Middle,
			[Token(Token = "0x4000943")]
			Large,
			[Token(Token = "0x4000944")]
			Max
		}

		[Token(Token = "0x2000244")]
		public enum SoundType
		{
			[Token(Token = "0x4000946")]
			BGM,
			[Token(Token = "0x4000947")]
			SE,
			[Token(Token = "0x4000948")]
			Holo,
			[Token(Token = "0x4000949")]
			Lawrence,
			[Token(Token = "0x400094A")]
			Myuri
		}

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string version;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514F94", Offset = "0x514F94")]
		[SerializeField]
		public int firstPlayFlag;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x514FE0", Offset = "0x514FE0")]
		[SerializeField]
		public int chapterClearNum;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51502C", Offset = "0x51502C")]
		[SerializeField]
		public int languageType;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515078", Offset = "0x515078")]
		[SerializeField]
		public int volumeBGM;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5150C4", Offset = "0x5150C4")]
		[SerializeField]
		public int volumeSE;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515110", Offset = "0x515110")]
		[SerializeField]
		public int volumeHoloVoice;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51515C", Offset = "0x51515C")]
		[SerializeField]
		public int volumeLawrenceVoice;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5151A8", Offset = "0x5151A8")]
		[SerializeField]
		public int volumeMyuriVoice;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5151F4", Offset = "0x5151F4")]
		[SerializeField]
		public int subtitleType;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515240", Offset = "0x515240")]
		[SerializeField]
		public int postprocessType;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51528C", Offset = "0x51528C")]
		[SerializeField]
		public int tessellationType;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5152D8", Offset = "0x5152D8")]
		[SerializeField]
		public int screenSizeType;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515324", Offset = "0x515324")]
		[SerializeField]
		public int enableShadow;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515370", Offset = "0x515370")]
		[SerializeField]
		public int enablePostEffect;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5153BC", Offset = "0x5153BC")]
		[SerializeField]
		public int selectChapterNum;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public int easterEggFlag;

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x6E0A3C", Offset = "0x6E0A3C", VA = "0x6E0A3C", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x6DEF04", Offset = "0x6DEF04", VA = "0x6DEF04")]
		public SaveData()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public class SceneMain : MonoBehaviour
	{
		[Token(Token = "0x2000245")]
		public enum Mode
		{
			[Token(Token = "0x400094C")]
			Main,
			[Token(Token = "0x400094D")]
			Anim
		}

		[Token(Token = "0x2000246")]
		public enum LoadChapterSceneType
		{
			[Token(Token = "0x400094F")]
			LoadScene,
			[Token(Token = "0x4000950")]
			WaitingLoadScene,
			[Token(Token = "0x4000951")]
			LoadTimeline,
			[Token(Token = "0x4000952")]
			WaitingLoadTimeline,
			[Token(Token = "0x4000953")]
			RefreshUI,
			[Token(Token = "0x4000954")]
			WaitingFade
		}

		[Token(Token = "0x2000247")]
		public enum SequenceChapterSceneType
		{
			[Token(Token = "0x4000956")]
			CreditFade,
			[Token(Token = "0x4000957")]
			WaitingCreditFade,
			[Token(Token = "0x4000958")]
			PlayingCredit,
			[Token(Token = "0x4000959")]
			CreditFinish
		}

		[Token(Token = "0x400045F")]
		private const float AdjustLoadedWaitTime = 0.5f;

		[Token(Token = "0x4000460")]
		private const float PrologueFadeTime = 3.5f;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float[] PrevTimelineAdjustTime;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int ShaderIDExposure;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float ExtraLoadTime;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject map;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject story;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject effect;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TitleLogo titleLogo;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CircleGaugeUI circleGaugeUI;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private KeepPushEffect keepPushEffectUI;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameDefines.SceneID currentSceneID;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Mode currentMode;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool animModeEnd;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameStateMachine<SceneMain> gameState;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515418", Offset = "0x515418")]
		private bool <IsChapterSelected>k__BackingField;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly float RetrackingStartTimer;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float retrackingTimer;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly float BackButtonTime;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float backButtonTimer;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515428", Offset = "0x515428")]
		private float <KeepSkyboxExposure>k__BackingField;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515438", Offset = "0x515438")]
		private LoadChapterSceneType <LoadType>k__BackingField;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515448", Offset = "0x515448")]
		private SequenceChapterSceneType <SequenceType>k__BackingField;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string[] TimelineAssetPath;

		[Token(Token = "0x1700007B")]
		public TitleLogo TitleLogo
		{
			[Token(Token = "0x6000A18")]
			[Address(RVA = "0x6E0B60", Offset = "0x6E0B60", VA = "0x6E0B60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0x6E0B68", Offset = "0x6E0B68", VA = "0x6E0B68")]
			set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public CircleGaugeUI CircleGaugeUI
		{
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0x6E0B70", Offset = "0x6E0B70", VA = "0x6E0B70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		public KeepPushEffect KeepPushEffectUI
		{
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0x6E0B78", Offset = "0x6E0B78", VA = "0x6E0B78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		public bool IsChapterSelected
		{
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0x6E0B80", Offset = "0x6E0B80", VA = "0x6E0B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A64C", Offset = "0x51A64C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x6E0B88", Offset = "0x6E0B88", VA = "0x6E0B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A65C", Offset = "0x51A65C")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public GameDefines.SceneID CurrentSceneID
		{
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0x6E0B94", Offset = "0x6E0B94", VA = "0x6E0B94")]
			get
			{
				return default(GameDefines.SceneID);
			}
		}

		[Token(Token = "0x17000080")]
		public Mode CurrentMode
		{
			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0x6E0B9C", Offset = "0x6E0B9C", VA = "0x6E0B9C")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6000A20")]
			[Address(RVA = "0x6E0BA4", Offset = "0x6E0BA4", VA = "0x6E0BA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public bool AnimModeEnd
		{
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x6E0BAC", Offset = "0x6E0BAC", VA = "0x6E0BAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0x6E0BB4", Offset = "0x6E0BB4", VA = "0x6E0BB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public GameStateMachine<SceneMain> GameState
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x6E0BC0", Offset = "0x6E0BC0", VA = "0x6E0BC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		public float KeepSkyboxExposure
		{
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x6E0BD0", Offset = "0x6E0BD0", VA = "0x6E0BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A66C", Offset = "0x51A66C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0x6E0BD8", Offset = "0x6E0BD8", VA = "0x6E0BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A67C", Offset = "0x51A67C")]
			set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public LoadChapterSceneType LoadType
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x6E0ECC", Offset = "0x6E0ECC", VA = "0x6E0ECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A68C", Offset = "0x51A68C")]
			get
			{
				return default(LoadChapterSceneType);
			}
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x6E0ED4", Offset = "0x6E0ED4", VA = "0x6E0ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A69C", Offset = "0x51A69C")]
			set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public SequenceChapterSceneType SequenceType
		{
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x6E0EDC", Offset = "0x6E0EDC", VA = "0x6E0EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A6AC", Offset = "0x51A6AC")]
			get
			{
				return default(SequenceChapterSceneType);
			}
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x6E0EE4", Offset = "0x6E0EE4", VA = "0x6E0EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A6BC", Offset = "0x51A6BC")]
			set
			{
			}
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x6E0BC8", Offset = "0x6E0BC8", VA = "0x6E0BC8")]
		public void SetSceneID(GameDefines.SceneID id)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x6E0BE0", Offset = "0x6E0BE0", VA = "0x6E0BE0")]
		public void SetSkyboxExposure(float value)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x6E0D10", Offset = "0x6E0D10", VA = "0x6E0D10")]
		public GameObject GetMap()
		{
			return null;
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x6E0DA4", Offset = "0x6E0DA4", VA = "0x6E0DA4")]
		public GameObject GetEffect()
		{
			return null;
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x6E0E38", Offset = "0x6E0E38", VA = "0x6E0E38")]
		public GameObject GetStory()
		{
			return null;
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x6E0EEC", Offset = "0x6E0EEC", VA = "0x6E0EEC")]
		public void SetCircleGaugeUI(CircleGaugeUI ui)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x6E0EF4", Offset = "0x6E0EF4", VA = "0x6E0EF4")]
		public void SetKeepPushEffectUI(KeepPushEffect ui)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x6E0EFC", Offset = "0x6E0EFC", VA = "0x6E0EFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x6E0FE8", Offset = "0x6E0FE8", VA = "0x6E0FE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x6E1054", Offset = "0x6E1054", VA = "0x6E1054")]
		private void PosReset()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x6E1224", Offset = "0x6E1224", VA = "0x6E1224")]
		private void BackOculusHome()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x6E1300", Offset = "0x6E1300", VA = "0x6E1300")]
		public void OpenMenuCheck()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x6E15F8", Offset = "0x6E15F8", VA = "0x6E15F8")]
		public bool LoadChapterScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x6E20C0", Offset = "0x6E20C0", VA = "0x6E20C0")]
		public bool SequenceCreditScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x6E2924", Offset = "0x6E2924", VA = "0x6E2924")]
		public SceneMain()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class AnimModeState : GameStateBase<SceneMain>
	{
		[Token(Token = "0x2000248")]
		private enum InnerState
		{
			[Token(Token = "0x400095B")]
			Intro,
			[Token(Token = "0x400095C")]
			Main,
			[Token(Token = "0x400095D")]
			Finish,
			[Token(Token = "0x400095E")]
			Credit,
			[Token(Token = "0x400095F")]
			Wait
		}

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnimModeState instance;

		[Token(Token = "0x4000478")]
		private const float FadeOutTime = 0.5f;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InnerState innerState;

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x772E88", Offset = "0x772E88", VA = "0x772E88")]
		public static AnimModeState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x772F98", Offset = "0x772F98", VA = "0x772F98", Slot = "7")]
		public override GameStateFeature GetFeature()
		{
			return default(GameStateFeature);
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x772FA0", Offset = "0x772FA0", VA = "0x772FA0", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x773190", Offset = "0x773190", VA = "0x773190", Slot = "5")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x773548", Offset = "0x773548", VA = "0x773548")]
		private bool TimelineFinishCheck(SceneMain main)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x7736AC", Offset = "0x7736AC", VA = "0x7736AC", Slot = "6")]
		public override void Exit(SceneMain main)
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x772F48", Offset = "0x772F48", VA = "0x772F48")]
		public AnimModeState()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public sealed class InitState : GameStateBase<SceneMain>
	{
		[Token(Token = "0x2000249")]
		private enum InnerState
		{
			[Token(Token = "0x4000961")]
			CharaSetup,
			[Token(Token = "0x4000962")]
			InitLightBake,
			[Token(Token = "0x4000963")]
			Finish,
			[Token(Token = "0x4000964")]
			FadeWait
		}

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InitState instance;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InnerState innerState;

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x6FF2B4", Offset = "0x6FF2B4", VA = "0x6FF2B4")]
		public static InitState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x6FF3C4", Offset = "0x6FF3C4", VA = "0x6FF3C4", Slot = "7")]
		public override GameStateFeature GetFeature()
		{
			return default(GameStateFeature);
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x6FF3CC", Offset = "0x6FF3CC", VA = "0x6FF3CC", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x6FF498", Offset = "0x6FF498", VA = "0x6FF498", Slot = "5")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x6FF5A8", Offset = "0x6FF5A8", VA = "0x6FF5A8", Slot = "6")]
		public override void Exit(SceneMain main)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x6FF374", Offset = "0x6FF374", VA = "0x6FF374")]
		public InitState()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class MainStoryState : GameStateBase<SceneMain>
	{
		[Token(Token = "0x200024A")]
		private enum InnerState
		{
			[Token(Token = "0x4000966")]
			Intro,
			[Token(Token = "0x4000967")]
			Main,
			[Token(Token = "0x4000968")]
			Finish,
			[Token(Token = "0x4000969")]
			ChapterChange,
			[Token(Token = "0x400096A")]
			Credit,
			[Token(Token = "0x400096B")]
			Wait
		}

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MainStoryState instance;

		[Token(Token = "0x400047D")]
		private const float FadeOutTime = 0.5f;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float waitTimer;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private InnerState innerState;

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x7026F8", Offset = "0x7026F8", VA = "0x7026F8")]
		public static MainStoryState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x702808", Offset = "0x702808", VA = "0x702808", Slot = "7")]
		public override GameStateFeature GetFeature()
		{
			return default(GameStateFeature);
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x702810", Offset = "0x702810", VA = "0x702810", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x702944", Offset = "0x702944", VA = "0x702944", Slot = "5")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x702EE0", Offset = "0x702EE0", VA = "0x702EE0")]
		private bool ChapterChangeCheck(SceneMain main)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x703094", Offset = "0x703094", VA = "0x703094", Slot = "6")]
		public override void Exit(SceneMain main)
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x7027B8", Offset = "0x7027B8", VA = "0x7027B8")]
		public MainStoryState()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public sealed class TitleState : GameStateBase<SceneMain>
	{
		[Token(Token = "0x200024B")]
		private enum InnerState
		{
			[Token(Token = "0x400096D")]
			SceneLoadWait,
			[Token(Token = "0x400096E")]
			HelpWindowOpen,
			[Token(Token = "0x400096F")]
			HelpWindowWait,
			[Token(Token = "0x4000970")]
			TitleLogoAnimStart,
			[Token(Token = "0x4000971")]
			Start,
			[Token(Token = "0x4000972")]
			Main,
			[Token(Token = "0x4000973")]
			Finish,
			[Token(Token = "0x4000974")]
			FadeWait
		}

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TitleState instance;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int menuCursor;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private InnerState innerState;

		[Token(Token = "0x4000483")]
		private const float FadeTime = 0.5f;

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x757CF8", Offset = "0x757CF8", VA = "0x757CF8")]
		public static TitleState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x757E10", Offset = "0x757E10", VA = "0x757E10", Slot = "7")]
		public override GameStateFeature GetFeature()
		{
			return default(GameStateFeature);
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x757E18", Offset = "0x757E18", VA = "0x757E18", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x7580F0", Offset = "0x7580F0", VA = "0x7580F0", Slot = "5")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x758C00", Offset = "0x758C00", VA = "0x758C00", Slot = "6")]
		public override void Exit(SceneMain main)
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x757DB8", Offset = "0x757DB8", VA = "0x757DB8")]
		public TitleState()
		{
		}
	}
	[Token(Token = "0x2000172")]
	public class CharaEnvSEManager : SingletonMonoBehaviour<CharaEnvSEManager>
	{
		[Token(Token = "0x200024C")]
		public enum InitState
		{
			[Token(Token = "0x4000976")]
			None,
			[Token(Token = "0x4000977")]
			Initializing,
			[Token(Token = "0x4000978")]
			Initialized
		}

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InitState initState;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<SoundDefines.RandomSELabel, RandomSE> randomSEDic;

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x776C6C", Offset = "0x776C6C", VA = "0x776C6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x776C70", Offset = "0x776C70", VA = "0x776C70")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x776EB8", Offset = "0x776EB8", VA = "0x776EB8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x776EBC", Offset = "0x776EBC", VA = "0x776EBC")]
		public void Play(SoundDefines.RandomSELabel seType, Vector3 vSEPos, float pitch = 1f)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x776F84", Offset = "0x776F84", VA = "0x776F84")]
		public CharaEnvSEManager()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class CollisionSE : MonoBehaviour
	{
		[Token(Token = "0x200024D")]
		public enum CollisionSEType
		{
			[Token(Token = "0x400097A")]
			FootStep,
			[Token(Token = "0x400097B")]
			Cloth
		}

		[Serializable]
		[Token(Token = "0x200024E")]
		public struct Param
		{
			[Token(Token = "0x400097C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x519074", Offset = "0x519074")]
			public GameDefines.CharacterType characterType;

			[Token(Token = "0x400097D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5190AC", Offset = "0x5190AC")]
			public CollisionSEType collSeType;
		}

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isPlay;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isAfterActive;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float activeTimer;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SphereCollider footCollider;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterState charaState;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float footCollSphereRadius;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515458", Offset = "0x515458")]
		[SerializeField]
		private Param param;

		[Token(Token = "0x17000086")]
		public Param _Param
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x6F4D5C", Offset = "0x6F4D5C", VA = "0x6F4D5C")]
			get
			{
				return default(Param);
			}
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x6F4D64", Offset = "0x6F4D64", VA = "0x6F4D64")]
			set
			{
			}
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x6F4D6C", Offset = "0x6F4D6C", VA = "0x6F4D6C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x6F4E84", Offset = "0x6F4E84", VA = "0x6F4E84")]
		private void PlayFootStepSE(Collider other)
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x6F50E8", Offset = "0x6F50E8", VA = "0x6F50E8")]
		private void Interval(float time)
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x6F50F8", Offset = "0x6F50F8", VA = "0x6F50F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x6F5110", Offset = "0x6F5110", VA = "0x6F5110")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x6F51D8", Offset = "0x6F51D8", VA = "0x6F51D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x6F5228", Offset = "0x6F5228", VA = "0x6F5228")]
		public CollisionSE()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class RandomSE
	{
		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int prevNo;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<SoundID.SE> idList;

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x6DD374", Offset = "0x6DD374", VA = "0x6DD374")]
		public void Init(List<SoundID.SE> idList)
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x6DD6FC", Offset = "0x6DD6FC", VA = "0x6DD6FC")]
		public void Play(Vector3 vSEPos, float pitch = 1f)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x6DD83C", Offset = "0x6DD83C", VA = "0x6DD83C")]
		public RandomSE()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000175")]
	public class ScriptableRandomSEParameter : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200024F")]
		public struct Param
		{
			[Token(Token = "0x400097E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5190E4", Offset = "0x5190E4")]
			public List<SoundID.SE> seIDList;

			[Token(Token = "0x400097F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51911C", Offset = "0x51911C")]
			public SoundDefines.RandomSELabel randomSELabel;
		}

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5154A4", Offset = "0x5154A4")]
		public List<Param> paramList;

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x6E5670", Offset = "0x6E5670", VA = "0x6E5670")]
		public ScriptableRandomSEParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000176")]
	public class SoundParameter
	{
		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5154DC", Offset = "0x5154DC")]
		[SerializeField]
		public SoundID.BGM bgmID;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515528", Offset = "0x515528")]
		[SerializeField]
		public SoundID.SE seID;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515574", Offset = "0x515574")]
		[SerializeField]
		public SoundID.Voice voiceID;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5155C0", Offset = "0x5155C0")]
		[SerializeField]
		public string[] fileName;

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x74EA4C", Offset = "0x74EA4C", VA = "0x74EA4C")]
		public SoundParameter()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class ScriptableSoundParameter : ScriptableObject
	{
		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SoundParameter> voiceList;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SoundParameter> bgmList;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SoundParameter> seList;

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x6E5678", Offset = "0x6E5678", VA = "0x6E5678")]
		public string GetBGMPath(SoundID.BGM id)
		{
			return null;
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x6E5714", Offset = "0x6E5714", VA = "0x6E5714")]
		public string GetSEPath(SoundID.SE id)
		{
			return null;
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x6E57B0", Offset = "0x6E57B0", VA = "0x6E57B0")]
		public string GetVoicePath(SoundID.Voice id)
		{
			return null;
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x6E584C", Offset = "0x6E584C", VA = "0x6E584C")]
		public ScriptableSoundParameter()
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class SoundComponent
	{
		[Token(Token = "0x2000250")]
		public enum LoadState
		{
			[Token(Token = "0x4000981")]
			None,
			[Token(Token = "0x4000982")]
			Loading,
			[Token(Token = "0x4000983")]
			Loaded
		}

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51560C", Offset = "0x51560C")]
		private AudioClip <Clip>k__BackingField;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51561C", Offset = "0x51561C")]
		private LoadState <State>k__BackingField;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51562C", Offset = "0x51562C")]
		private bool <IsPause>k__BackingField;

		[Token(Token = "0x17000087")]
		public AudioClip Clip
		{
			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0x6ED8D0", Offset = "0x6ED8D0", VA = "0x6ED8D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A6CC", Offset = "0x51A6CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A70")]
			[Address(RVA = "0x6ED8D8", Offset = "0x6ED8D8", VA = "0x6ED8D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A6DC", Offset = "0x51A6DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public LoadState State
		{
			[Token(Token = "0x6000A71")]
			[Address(RVA = "0x6ED8E0", Offset = "0x6ED8E0", VA = "0x6ED8E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A6EC", Offset = "0x51A6EC")]
			get
			{
				return default(LoadState);
			}
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0x6ED8E8", Offset = "0x6ED8E8", VA = "0x6ED8E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A6FC", Offset = "0x51A6FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public bool IsPause
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x6ED8F0", Offset = "0x6ED8F0", VA = "0x6ED8F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A70C", Offset = "0x51A70C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A74")]
			[Address(RVA = "0x6ED8F8", Offset = "0x6ED8F8", VA = "0x6ED8F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A71C", Offset = "0x51A71C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x6DFBBC", Offset = "0x6DFBBC", VA = "0x6DFBBC")]
		public SoundComponent()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class BGMComponent : SoundComponent
	{
		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51563C", Offset = "0x51563C")]
		private SoundID.BGM <Id>k__BackingField;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51564C", Offset = "0x51564C")]
		private string <ResourceFilePath>k__BackingField;

		[Token(Token = "0x1700008A")]
		public SoundID.BGM Id
		{
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0x7737A4", Offset = "0x7737A4", VA = "0x7737A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A72C", Offset = "0x51A72C")]
			get
			{
				return default(SoundID.BGM);
			}
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0x7737AC", Offset = "0x7737AC", VA = "0x7737AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A73C", Offset = "0x51A73C")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public string ResourceFilePath
		{
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x7737B4", Offset = "0x7737B4", VA = "0x7737B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A74C", Offset = "0x51A74C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0x7737BC", Offset = "0x7737BC", VA = "0x7737BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A75C", Offset = "0x51A75C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x7737C4", Offset = "0x7737C4", VA = "0x7737C4")]
		public BGMComponent(SoundID.BGM id, string resourceFilePath, LoadState loadState)
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class SEComponent : SoundComponent
	{
		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51565C", Offset = "0x51565C")]
		private SoundID.SE <Id>k__BackingField;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51566C", Offset = "0x51566C")]
		private string <ResourceFilePath>k__BackingField;

		[Token(Token = "0x1700008C")]
		public SoundID.SE Id
		{
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0x6DFB10", Offset = "0x6DFB10", VA = "0x6DFB10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A76C", Offset = "0x51A76C")]
			get
			{
				return default(SoundID.SE);
			}
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x6DFB18", Offset = "0x6DFB18", VA = "0x6DFB18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A77C", Offset = "0x51A77C")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public string ResourceFilePath
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x6DFB20", Offset = "0x6DFB20", VA = "0x6DFB20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A78C", Offset = "0x51A78C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x6DFB28", Offset = "0x6DFB28", VA = "0x6DFB28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A79C", Offset = "0x51A79C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x6DFB30", Offset = "0x6DFB30", VA = "0x6DFB30")]
		public SEComponent(SoundID.SE id, string resourceFilePath, LoadState loadState)
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class VoiceComponent : SoundComponent
	{
		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51567C", Offset = "0x51567C")]
		private SoundID.Voice <Id>k__BackingField;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51568C", Offset = "0x51568C")]
		private string <ResourceFilePath>k__BackingField;

		[Token(Token = "0x1700008E")]
		public SoundID.Voice Id
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x75AAE0", Offset = "0x75AAE0", VA = "0x75AAE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A7AC", Offset = "0x51A7AC")]
			get
			{
				return default(SoundID.Voice);
			}
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0x75AAE8", Offset = "0x75AAE8", VA = "0x75AAE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A7BC", Offset = "0x51A7BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public string ResourceFilePath
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x75AAF0", Offset = "0x75AAF0", VA = "0x75AAF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A7CC", Offset = "0x51A7CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0x75AAF8", Offset = "0x75AAF8", VA = "0x75AAF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A7DC", Offset = "0x51A7DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x75AB00", Offset = "0x75AB00", VA = "0x75AB00")]
		public VoiceComponent(SoundID.Voice id, string resourceFilePath, LoadState loadState)
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class SoundDefines
	{
		[Token(Token = "0x2000251")]
		public enum MixerType
		{
			[Token(Token = "0x4000985")]
			BGM,
			[Token(Token = "0x4000986")]
			SE,
			[Token(Token = "0x4000987")]
			Voice,
			[Token(Token = "0x4000988")]
			BGMSystem,
			[Token(Token = "0x4000989")]
			Holo,
			[Token(Token = "0x400098A")]
			Lawrence,
			[Token(Token = "0x400098B")]
			Myuri
		}

		[Token(Token = "0x2000252")]
		public enum RandomSELabel
		{
			[Token(Token = "0x400098D")]
			FootStepSoil,
			[Token(Token = "0x400098E")]
			FootStepSoilRun,
			[Token(Token = "0x400098F")]
			FootStepWood,
			[Token(Token = "0x4000990")]
			FootStepBareFoot,
			[Token(Token = "0x4000991")]
			FootStepStone
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x6ED904", Offset = "0x6ED904", VA = "0x6ED904")]
		public SoundDefines()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class SoundID
	{
		[Token(Token = "0x2000253")]
		public enum BGM
		{
			[Token(Token = "0x4000993")]
			Title,
			[Token(Token = "0x4000994")]
			Endroll,
			[Token(Token = "0x4000995")]
			DanceIntro,
			[Token(Token = "0x4000996")]
			DanceMain,
			[Token(Token = "0x4000997")]
			Nostalgia,
			[Token(Token = "0x4000998")]
			Max
		}

		[Token(Token = "0x2000254")]
		public enum SE
		{
			[Token(Token = "0x400099A")]
			Decision,
			[Token(Token = "0x400099B")]
			ChangeWindow,
			[Token(Token = "0x400099C")]
			Cancel,
			[Token(Token = "0x400099D")]
			FootStepSoil1,
			[Token(Token = "0x400099E")]
			FootStepSoil2,
			[Token(Token = "0x400099F")]
			FootStepSoil3,
			[Token(Token = "0x40009A0")]
			FootStepSoil4,
			[Token(Token = "0x40009A1")]
			FootStepSoil5,
			[Token(Token = "0x40009A2")]
			FootStepSoil6,
			[Token(Token = "0x40009A3")]
			FootStop,
			[Token(Token = "0x40009A4")]
			FootStepStone1,
			[Token(Token = "0x40009A5")]
			FootStepStone2,
			[Token(Token = "0x40009A6")]
			WindNormal,
			[Token(Token = "0x40009A7")]
			WindStrong,
			[Token(Token = "0x40009A8")]
			Gimmick001,
			[Token(Token = "0x40009A9")]
			Gimmick002,
			[Token(Token = "0x40009AA")]
			Gimmick003,
			[Token(Token = "0x40009AB")]
			Gimmick004,
			[Token(Token = "0x40009AC")]
			Gimmick005,
			[Token(Token = "0x40009AD")]
			Gimmick006,
			[Token(Token = "0x40009AE")]
			Gimmick007,
			[Token(Token = "0x40009AF")]
			Gimmick008,
			[Token(Token = "0x40009B0")]
			Gimmick009,
			[Token(Token = "0x40009B1")]
			Gimmick010,
			[Token(Token = "0x40009B2")]
			Fx1,
			[Token(Token = "0x40009B3")]
			Action001,
			[Token(Token = "0x40009B4")]
			Action002,
			[Token(Token = "0x40009B5")]
			Action003,
			[Token(Token = "0x40009B6")]
			Action004,
			[Token(Token = "0x40009B7")]
			Action005,
			[Token(Token = "0x40009B8")]
			Action006,
			[Token(Token = "0x40009B9")]
			Action007,
			[Token(Token = "0x40009BA")]
			Action008,
			[Token(Token = "0x40009BB")]
			Action009,
			[Token(Token = "0x40009BC")]
			Action010,
			[Token(Token = "0x40009BD")]
			Action011,
			[Token(Token = "0x40009BE")]
			Action012,
			[Token(Token = "0x40009BF")]
			Action013,
			[Token(Token = "0x40009C0")]
			Action014,
			[Token(Token = "0x40009C1")]
			Action015,
			[Token(Token = "0x40009C2")]
			Action016,
			[Token(Token = "0x40009C3")]
			Action017,
			[Token(Token = "0x40009C4")]
			Action018,
			[Token(Token = "0x40009C5")]
			Action019,
			[Token(Token = "0x40009C6")]
			Action020,
			[Token(Token = "0x40009C7")]
			Action021,
			[Token(Token = "0x40009C8")]
			Action022,
			[Token(Token = "0x40009C9")]
			Action023,
			[Token(Token = "0x40009CA")]
			FX2,
			[Token(Token = "0x40009CB")]
			Anim001,
			[Token(Token = "0x40009CC")]
			Anim002,
			[Token(Token = "0x40009CD")]
			Anim003,
			[Token(Token = "0x40009CE")]
			Anim004,
			[Token(Token = "0x40009CF")]
			Anim005,
			[Token(Token = "0x40009D0")]
			Anim006,
			[Token(Token = "0x40009D1")]
			Anim007,
			[Token(Token = "0x40009D2")]
			Anim008,
			[Token(Token = "0x40009D3")]
			FootStepBareFoot1,
			[Token(Token = "0x40009D4")]
			FootStepBareFoot2,
			[Token(Token = "0x40009D5")]
			FootStepWood1,
			[Token(Token = "0x40009D6")]
			FootStepWood2,
			[Token(Token = "0x40009D7")]
			Gimmick011,
			[Token(Token = "0x40009D8")]
			Action024,
			[Token(Token = "0x40009D9")]
			Action025,
			[Token(Token = "0x40009DA")]
			Action026,
			[Token(Token = "0x40009DB")]
			Action027,
			[Token(Token = "0x40009DC")]
			Action028,
			[Token(Token = "0x40009DD")]
			Action029,
			[Token(Token = "0x40009DE")]
			Action030,
			[Token(Token = "0x40009DF")]
			Action031,
			[Token(Token = "0x40009E0")]
			Action032,
			[Token(Token = "0x40009E1")]
			Action033,
			[Token(Token = "0x40009E2")]
			Action034,
			[Token(Token = "0x40009E3")]
			Action035,
			[Token(Token = "0x40009E4")]
			Action036,
			[Token(Token = "0x40009E5")]
			Action037,
			[Token(Token = "0x40009E6")]
			Bird,
			[Token(Token = "0x40009E7")]
			Evening,
			[Token(Token = "0x40009E8")]
			FootStepSoilRun1,
			[Token(Token = "0x40009E9")]
			FootStepSoilRun2,
			[Token(Token = "0x40009EA")]
			FootStepSoilRun3,
			[Token(Token = "0x40009EB")]
			Gimmick012,
			[Token(Token = "0x40009EC")]
			Gimmick013,
			[Token(Token = "0x40009ED")]
			Foley001,
			[Token(Token = "0x40009EE")]
			Foley002,
			[Token(Token = "0x40009EF")]
			Foley003,
			[Token(Token = "0x40009F0")]
			Foley004,
			[Token(Token = "0x40009F1")]
			Foley005,
			[Token(Token = "0x40009F2")]
			Foley006,
			[Token(Token = "0x40009F3")]
			Foley007,
			[Token(Token = "0x40009F4")]
			Foley008,
			[Token(Token = "0x40009F5")]
			Foley009,
			[Token(Token = "0x40009F6")]
			Foley010,
			[Token(Token = "0x40009F7")]
			Foley011,
			[Token(Token = "0x40009F8")]
			Foley012,
			[Token(Token = "0x40009F9")]
			Action038,
			[Token(Token = "0x40009FA")]
			Action039,
			[Token(Token = "0x40009FB")]
			Action040,
			[Token(Token = "0x40009FC")]
			Owl,
			[Token(Token = "0x40009FD")]
			Gimmick014,
			[Token(Token = "0x40009FE")]
			Gimmick015,
			[Token(Token = "0x40009FF")]
			Owl2,
			[Token(Token = "0x4000A00")]
			Owl3,
			[Token(Token = "0x4000A01")]
			Gimmick016,
			[Token(Token = "0x4000A02")]
			Credit,
			[Token(Token = "0x4000A03")]
			Max
		}

		[Token(Token = "0x2000255")]
		public enum Voice
		{
			[Token(Token = "0x4000A05")]
			Holo0001,
			[Token(Token = "0x4000A06")]
			Holo0002,
			[Token(Token = "0x4000A07")]
			Holo0003,
			[Token(Token = "0x4000A08")]
			Holo0004,
			[Token(Token = "0x4000A09")]
			Myuri0001,
			[Token(Token = "0x4000A0A")]
			Myuri0002,
			[Token(Token = "0x4000A0B")]
			Myuri0003,
			[Token(Token = "0x4000A0C")]
			Myuri0004,
			[Token(Token = "0x4000A0D")]
			Lawrence0001,
			[Token(Token = "0x4000A0E")]
			Lawrence0002,
			[Token(Token = "0x4000A0F")]
			Lawrence0003,
			[Token(Token = "0x4000A10")]
			Lawrence0004,
			[Token(Token = "0x4000A11")]
			Max
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x6ED90C", Offset = "0x6ED90C", VA = "0x6ED90C")]
		public SoundID()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class SoundManager : SingletonMonoBehaviour<SoundManager>
	{
		[Token(Token = "0x2000256")]
		public enum MixerAssetType
		{
			[Token(Token = "0x4000A13")]
			DefaultMixer,
			[Token(Token = "0x4000A14")]
			CompressorMixer
		}

		[Token(Token = "0x2000257")]
		public enum Fade
		{
			[Token(Token = "0x4000A16")]
			Default,
			[Token(Token = "0x4000A17")]
			In,
			[Token(Token = "0x4000A18")]
			Out,
			[Token(Token = "0x4000A19")]
			InEnd,
			[Token(Token = "0x4000A1A")]
			OutEnd
		}

		[Token(Token = "0x2000258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5105E8", Offset = "0x5105E8")]
		private sealed class <>c__DisplayClass87_0
		{
			[Token(Token = "0x4000A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ResourceManager resMng;

			[Token(Token = "0x4000A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SoundManager <>4__this;

			[Token(Token = "0x4000A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<GameObject> <>9__6;

			[Token(Token = "0x4000A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<GameObject> <>9__7;

			[Token(Token = "0x4000A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<GameObject> <>9__8;

			[Token(Token = "0x4000A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<AudioMixer> <>9__9;

			[Token(Token = "0x4000A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<AudioMixer> <>9__10;

			[Token(Token = "0x6000F84")]
			[Address(RVA = "0x74D348", Offset = "0x74D348", VA = "0x74D348")]
			public <>c__DisplayClass87_0()
			{
			}

			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x74D350", Offset = "0x74D350", VA = "0x74D350")]
			internal bool <InitializeWaitCoroutine>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x74D3AC", Offset = "0x74D3AC", VA = "0x74D3AC")]
			internal bool <InitializeWaitCoroutine>b__1()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x74D464", Offset = "0x74D464", VA = "0x74D464")]
			internal void <InitializeWaitCoroutine>b__6(GameObject x)
			{
			}

			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x74D6C8", Offset = "0x74D6C8", VA = "0x74D6C8")]
			internal bool <InitializeWaitCoroutine>b__2()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x74D780", Offset = "0x74D780", VA = "0x74D780")]
			internal void <InitializeWaitCoroutine>b__7(GameObject x)
			{
			}

			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x74D964", Offset = "0x74D964", VA = "0x74D964")]
			internal bool <InitializeWaitCoroutine>b__3()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x74DA1C", Offset = "0x74DA1C", VA = "0x74DA1C")]
			internal void <InitializeWaitCoroutine>b__8(GameObject x)
			{
			}

			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0x74DBF0", Offset = "0x74DBF0", VA = "0x74DBF0")]
			internal bool <InitializeWaitCoroutine>b__4()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0x74DCA8", Offset = "0x74DCA8", VA = "0x74DCA8")]
			internal void <InitializeWaitCoroutine>b__9(AudioMixer x)
			{
			}

			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0x74DF34", Offset = "0x74DF34", VA = "0x74DF34")]
			internal bool <InitializeWaitCoroutine>b__5()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0x74DFEC", Offset = "0x74DFEC", VA = "0x74DFEC")]
			internal void <InitializeWaitCoroutine>b__10(AudioMixer x)
			{
			}
		}

		[Token(Token = "0x2000259")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5105F8", Offset = "0x5105F8")]
		private sealed class <InitializeWaitCoroutine>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundManager <>4__this;

			[Token(Token = "0x4000A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass87_0 <>8__1;

			[Token(Token = "0x1700013C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F93")]
				[Address(RVA = "0x74E7A8", Offset = "0x74E7A8", VA = "0x74E7A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F95")]
				[Address(RVA = "0x74E810", Offset = "0x74E810", VA = "0x74E810", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F90")]
			[Address(RVA = "0x74E2C0", Offset = "0x74E2C0", VA = "0x74E2C0")]
			[DebuggerHidden]
			public <InitializeWaitCoroutine>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6000F91")]
			[Address(RVA = "0x74E2EC", Offset = "0x74E2EC", VA = "0x74E2EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x74E2F0", Offset = "0x74E2F0", VA = "0x74E2F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x74E7B0", Offset = "0x74E7B0", VA = "0x74E7B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200025A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510608", Offset = "0x510608")]
		private sealed class <>c__DisplayClass91_0
		{
			[Token(Token = "0x4000A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundManager <>4__this;

			[Token(Token = "0x4000A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SoundID.BGM id;

			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x74E008", Offset = "0x74E008", VA = "0x74E008")]
			public <>c__DisplayClass91_0()
			{
			}

			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x74E010", Offset = "0x74E010", VA = "0x74E010")]
			internal void <LoadBGM>b__0(AudioClip x)
			{
			}
		}

		[Token(Token = "0x200025B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510618", Offset = "0x510618")]
		private sealed class <>c__DisplayClass92_0
		{
			[Token(Token = "0x4000A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundManager <>4__this;

			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SoundID.SE id;

			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x74E0F0", Offset = "0x74E0F0", VA = "0x74E0F0")]
			public <>c__DisplayClass92_0()
			{
			}

			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x74E0F8", Offset = "0x74E0F8", VA = "0x74E0F8")]
			internal void <LoadSE>b__0(AudioClip x)
			{
			}
		}

		[Token(Token = "0x200025C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510628", Offset = "0x510628")]
		private sealed class <>c__DisplayClass93_0
		{
			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundManager <>4__this;

			[Token(Token = "0x4000A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SoundID.Voice id;

			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x74E1D8", Offset = "0x74E1D8", VA = "0x74E1D8")]
			public <>c__DisplayClass93_0()
			{
			}

			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x74E1E0", Offset = "0x74E1E0", VA = "0x74E1E0")]
			internal void <LoadVoice>b__0(AudioClip x)
			{
			}
		}

		[Token(Token = "0x200025D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510638", Offset = "0x510638")]
		private sealed class <PlaySECoroutine>d__107 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundManager <>4__this;

			[Token(Token = "0x4000A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundID.SE id;

			[Token(Token = "0x4000A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioSource source;

			[Token(Token = "0x4000A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 v3DPos;

			[Token(Token = "0x4000A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float pitch;

			[Token(Token = "0x4000A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool isLoop;

			[Token(Token = "0x4000A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
			public bool is3DSound;

			[Token(Token = "0x1700013E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F9F")]
				[Address(RVA = "0x74E9DC", Offset = "0x74E9DC", VA = "0x74E9DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FA1")]
				[Address(RVA = "0x74EA44", Offset = "0x74EA44", VA = "0x74EA44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x74E818", Offset = "0x74E818", VA = "0x74E818")]
			[DebuggerHidden]
			public <PlaySECoroutine>d__107(int <>1__state)
			{
			}

			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x74E844", Offset = "0x74E844", VA = "0x74E844", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x74E848", Offset = "0x74E848", VA = "0x74E848", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x74E9E4", Offset = "0x74E9E4", VA = "0x74E9E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004A0")]
		private const string SoundGroupLabel = "SoundGroup";

		[Token(Token = "0x40004A1")]
		private const string AudioMixerPath = "AudioMixer";

		[Token(Token = "0x40004A2")]
		private const string AudioMixerWithCompressorPath = "AudioMixerWithCompressor";

		[Token(Token = "0x40004A3")]
		private const string SoundGroupPrefabPath = "SoundGroup";

		[Token(Token = "0x40004A4")]
		private const string SoundObjPrefabPath = "SoundObj";

		[Token(Token = "0x40004A5")]
		private const string SoundObjSEPrefabPath = "SoundObjSE";

		[Token(Token = "0x40004A6")]
		private const int Channel = 16;

		[Token(Token = "0x40004A7")]
		private const float DefaultPitch = 1f;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject root;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject sourceSEGroup;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject sourceVoiceGroup;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool isInitFlag;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool isInitedFlag;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource sourceBGM;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float fadeRate;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float fadeSpeed;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51569C", Offset = "0x51569C")]
		private bool <IsFadeStop>k__BackingField;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<SoundID.BGM, BGMComponent> poolBGMDic;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<SoundID.SE, SoundComponent> poolSEDic;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<SoundID.Voice, SoundComponent> poolVoiceDic;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<AudioSource> bgmSourceList;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<AudioSource> seSourceList;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<AudioSource> holoVoiceSourceList;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<AudioSource> myuriVoiceSourceList;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<AudioSource> lawrenceVoiceSourceList;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private AudioMixerGroup bgmGroup;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private AudioMixerGroup seGroup;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private AudioMixerGroup holoGroup;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AudioMixerGroup lawrenceGroup;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private AudioMixerGroup myuriGroup;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private AudioMixer audioMixer;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private AudioMixer audioMixerDefault;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private AudioMixer audioMixerWithCompressor;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5156AC", Offset = "0x5156AC")]
		private float <SEVolume>k__BackingField;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5156BC", Offset = "0x5156BC")]
		private float <BGMVolume>k__BackingField;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5156CC", Offset = "0x5156CC")]
		private float <VoiceVolume>k__BackingField;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5156DC", Offset = "0x5156DC")]
		private float <HoloVoiceVolume>k__BackingField;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5156EC", Offset = "0x5156EC")]
		private float <LawrenceVoiceVolume>k__BackingField;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5156FC", Offset = "0x5156FC")]
		private float <MyuriVoiceVolume>k__BackingField;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51570C", Offset = "0x51570C")]
		private bool <PlayCreditBGM>k__BackingField;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51571C", Offset = "0x51571C")]
		private Fade <FadeType>k__BackingField;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51572C", Offset = "0x51572C")]
		[SerializeField]
		private bool isBGMFade;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515778", Offset = "0x515778")]
		[SerializeField]
		private bool isSEFade;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5157C4", Offset = "0x5157C4")]
		[SerializeField]
		private bool isVoiceFade;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515810", Offset = "0x515810")]
		[SerializeField]
		private AnimationCurve fadeCurve;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private ScriptableSoundParameter soundData;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SoundID.BGM savebgm;

		[Token(Token = "0x17000090")]
		public AudioSource SourceBGM
		{
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0x6ED914", Offset = "0x6ED914", VA = "0x6ED914")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		public bool IsFadeStop
		{
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0x6ED91C", Offset = "0x6ED91C", VA = "0x6ED91C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A7EC", Offset = "0x51A7EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A89")]
			[Address(RVA = "0x6ED924", Offset = "0x6ED924", VA = "0x6ED924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A7FC", Offset = "0x51A7FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public float SEVolume
		{
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0x6ED930", Offset = "0x6ED930", VA = "0x6ED930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A80C", Offset = "0x51A80C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0x6ED938", Offset = "0x6ED938", VA = "0x6ED938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A81C", Offset = "0x51A81C")]
			set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public float BGMVolume
		{
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0x6ED940", Offset = "0x6ED940", VA = "0x6ED940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A82C", Offset = "0x51A82C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0x6ED948", Offset = "0x6ED948", VA = "0x6ED948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A83C", Offset = "0x51A83C")]
			set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public float VoiceVolume
		{
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x6ED950", Offset = "0x6ED950", VA = "0x6ED950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A84C", Offset = "0x51A84C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0x6ED958", Offset = "0x6ED958", VA = "0x6ED958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A85C", Offset = "0x51A85C")]
			set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public float HoloVoiceVolume
		{
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0x6ED960", Offset = "0x6ED960", VA = "0x6ED960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A86C", Offset = "0x51A86C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0x6ED968", Offset = "0x6ED968", VA = "0x6ED968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A87C", Offset = "0x51A87C")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public float LawrenceVoiceVolume
		{
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0x6ED970", Offset = "0x6ED970", VA = "0x6ED970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A88C", Offset = "0x51A88C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A93")]
			[Address(RVA = "0x6ED978", Offset = "0x6ED978", VA = "0x6ED978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A89C", Offset = "0x51A89C")]
			set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public float MyuriVoiceVolume
		{
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x6ED980", Offset = "0x6ED980", VA = "0x6ED980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A8AC", Offset = "0x51A8AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x6ED988", Offset = "0x6ED988", VA = "0x6ED988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A8BC", Offset = "0x51A8BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public bool PlayCreditBGM
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x6ED990", Offset = "0x6ED990", VA = "0x6ED990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A8CC", Offset = "0x51A8CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x6ED998", Offset = "0x6ED998", VA = "0x6ED998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A8DC", Offset = "0x51A8DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		private Fade FadeType
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x6ED9A4", Offset = "0x6ED9A4", VA = "0x6ED9A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A8EC", Offset = "0x51A8EC")]
			get
			{
				return default(Fade);
			}
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0x6ED9AC", Offset = "0x6ED9AC", VA = "0x6ED9AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A8FC", Offset = "0x51A8FC")]
			set
			{
			}
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x6ED9B4", Offset = "0x6ED9B4", VA = "0x6ED9B4")]
		public void FadeDontEnable()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x6ED9CC", Offset = "0x6ED9CC", VA = "0x6ED9CC")]
		public void FadeResume()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x6ED9D4", Offset = "0x6ED9D4", VA = "0x6ED9D4")]
		public void FadePause()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x6EDA94", Offset = "0x6EDA94", VA = "0x6EDA94")]
		public void FadeIn(float time = 4f, bool isBGMFade = true, bool isSEFade = true, bool isVoiceFade = true)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x6E2804", Offset = "0x6E2804", VA = "0x6E2804")]
		public void FadeOut(float time = 4f, bool isBGMFade = true, bool isSEFade = true, bool isVoiceFade = true)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x6EDBB0", Offset = "0x6EDBB0", VA = "0x6EDBB0")]
		private void FadeUpdate()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x6EDCBC", Offset = "0x6EDCBC", VA = "0x6EDCBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x6EDCD4", Offset = "0x6EDCD4", VA = "0x6EDCD4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x6EDF80", Offset = "0x6EDF80", VA = "0x6EDF80")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x6EDF84", Offset = "0x6EDF84", VA = "0x6EDF84")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x6EE0F8", Offset = "0x6EE0F8", VA = "0x6EE0F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51A90C", Offset = "0x51A90C")]
		private IEnumerator InitializeWaitCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x6EE168", Offset = "0x6EE168", VA = "0x6EE168")]
		public void ChangeAudioMixer(MixerAssetType type)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x6EE6C0", Offset = "0x6EE6C0", VA = "0x6EE6C0")]
		public AudioSource GetAudioSource(SoundDefines.MixerType type, int channel = 0, bool isAuto = false)
		{
			return null;
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x6EE9A0", Offset = "0x6EE9A0", VA = "0x6EE9A0")]
		public void SyncSaveDateVolume()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x6EEBA4", Offset = "0x6EEBA4", VA = "0x6EEBA4")]
		public void LoadBGM(SoundID.BGM id, bool isDirectLoad = false)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x6DD470", Offset = "0x6DD470", VA = "0x6DD470")]
		public void LoadSE(SoundID.SE id, bool isDirectLoad = false)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x6EEE18", Offset = "0x6EEE18", VA = "0x6EEE18")]
		public void LoadVoice(SoundID.Voice id, bool isDirectLoad = false)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x6EF08C", Offset = "0x6EF08C", VA = "0x6EF08C")]
		public bool StopBGM()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x6EF0D4", Offset = "0x6EF0D4", VA = "0x6EF0D4")]
		private bool StopSE(int cannelNum)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x6EF174", Offset = "0x6EF174", VA = "0x6EF174")]
		private bool StopVoice(int cannelNum)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x6EF214", Offset = "0x6EF214", VA = "0x6EF214")]
		public void AllStop()
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x6EF2DC", Offset = "0x6EF2DC", VA = "0x6EF2DC")]
		private bool PauseBGM()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x6EF324", Offset = "0x6EF324", VA = "0x6EF324")]
		private bool PauseSE(int cannelNum)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x6EF3C4", Offset = "0x6EF3C4", VA = "0x6EF3C4")]
		private bool PauseVoice(int cannelNum)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x6EF464", Offset = "0x6EF464", VA = "0x6EF464")]
		public void VoicePause()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x6EF544", Offset = "0x6EF544", VA = "0x6EF544")]
		public AudioSource PlayBGM(SoundID.BGM id, bool isLoop = true)
		{
			return null;
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x6E5F7C", Offset = "0x6E5F7C", VA = "0x6E5F7C")]
		public AudioSource PlaySE(SoundID.SE id, Vector3 v3DPos, int channel = 0, bool is3DSound = false, bool isLoop = false, float pitch = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x6DD824", Offset = "0x6DD824", VA = "0x6DD824")]
		public AudioSource PlaySEAutoChannel(SoundID.SE id, Vector3 v3DPos, bool is3DSound = false, bool isLoop = false, float pitch = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x6EF6D4", Offset = "0x6EF6D4", VA = "0x6EF6D4")]
		private AudioSource _PlaySE(SoundID.SE id, Vector3 v3DPos, int channel, bool is3DSound = false, bool isLoop = false, bool isAuto = false, float pitch = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x6EF7E4", Offset = "0x6EF7E4", VA = "0x6EF7E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51A970", Offset = "0x51A970")]
		private IEnumerator PlaySECoroutine(AudioSource source, SoundID.SE id, Vector3 v3DPos, bool is3DSound, bool isLoop, float pitch)
		{
			return null;
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x6E5B40", Offset = "0x6E5B40", VA = "0x6E5B40")]
		public AudioSource PlayVoice(SoundID.Voice id, Vector3 v3DPos, SoundDefines.MixerType voiceType, int channel = 0, bool is3DSound = false)
		{
			return null;
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x6EFA88", Offset = "0x6EFA88", VA = "0x6EFA88")]
		public AudioSource PlayVoiceAutoChannel(SoundID.Voice id, Vector3 v3DPos, SoundDefines.MixerType voiceType, int channel = 0, bool is3DSound = false)
		{
			return null;
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x6EF8B4", Offset = "0x6EF8B4", VA = "0x6EF8B4")]
		private AudioSource _PlayVoice(SoundID.Voice id, Vector3 v3DPos, SoundDefines.MixerType voiceType, int eChannel, bool is3DSound = false, bool isAuto = false, bool isLawrenceVoice = false)
		{
			return null;
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x6EFA9C", Offset = "0x6EFA9C", VA = "0x6EFA9C")]
		public bool _PlayVoiceSetAudioSource(AudioSource audioSource, SoundID.Voice id, Vector3 v3DPos, int eChannel, bool is3DSound = false, bool isAuto = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x6EFBB4", Offset = "0x6EFBB4", VA = "0x6EFBB4")]
		public void AllPlay()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x6EDE00", Offset = "0x6EDE00", VA = "0x6EDE00")]
		private void SetMixerVolume(SoundDefines.MixerType type, float volume)
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x6EFD3C", Offset = "0x6EFD3C", VA = "0x6EFD3C")]
		public bool IsTalk()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x6EFE0C", Offset = "0x6EFE0C", VA = "0x6EFE0C")]
		private float DecibelConversion(float volume)
		{
			return default(float);
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x6EFCB4", Offset = "0x6EFCB4", VA = "0x6EFCB4")]
		public float GetDecibelConversion(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x6EFE84", Offset = "0x6EFE84", VA = "0x6EFE84")]
		public float FromDecibel(float decibel)
		{
			return default(float);
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x6EFEF8", Offset = "0x6EFEF8", VA = "0x6EFEF8")]
		public void AddBGMSource(AudioSource source)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x6EFF74", Offset = "0x6EFF74", VA = "0x6EFF74")]
		public void RemoveBGMSource(AudioSource source)
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x6DFE10", Offset = "0x6DFE10", VA = "0x6DFE10")]
		public void AddSESource(AudioSource source)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x6E0124", Offset = "0x6E0124", VA = "0x6E0124")]
		public void RemoveSESource(AudioSource source)
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x6EFFDC", Offset = "0x6EFFDC", VA = "0x6EFFDC")]
		public void AddVoiceSource(SoundDefines.MixerType type, AudioSource source)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x6F00C4", Offset = "0x6F00C4", VA = "0x6F00C4")]
		public void RemoveVoiceSource(SoundDefines.MixerType type, AudioSource source)
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x6F016C", Offset = "0x6F016C", VA = "0x6F016C")]
		private void LoadSEAll()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x6F07E0", Offset = "0x6F07E0", VA = "0x6F07E0")]
		public SoundManager()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class CharacterFadeComponent : MonoBehaviour
	{
		[Token(Token = "0x200025E")]
		public enum Type
		{
			[Token(Token = "0x4000A36")]
			Sphere,
			[Token(Token = "0x4000A37")]
			Capsule
		}

		[Serializable]
		[Token(Token = "0x200025F")]
		public struct Param
		{
			[Token(Token = "0x4000A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x519154", Offset = "0x519154")]
			public Type type;

			[Token(Token = "0x4000A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51918C", Offset = "0x51918C")]
			public float size;

			[Token(Token = "0x4000A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5191C4", Offset = "0x5191C4")]
			public Transform start;

			[Token(Token = "0x4000A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5191FC", Offset = "0x5191FC")]
			public Vector3 offsetFromStart;

			[Token(Token = "0x4000A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x519234", Offset = "0x519234")]
			public Transform end;

			[Token(Token = "0x4000A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51926C", Offset = "0x51926C")]
			public Vector3 offsetFromEnd;
		}

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51585C", Offset = "0x51585C")]
		[SerializeField]
		private List<Param> paramList;

		[Token(Token = "0x40004D0")]
		private const float FadeStartDist = 0.02f;

		[Token(Token = "0x1700009A")]
		public List<Param> ParamList
		{
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0x6F0AB4", Offset = "0x6F0AB4", VA = "0x6F0AB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0x6F0ABC", Offset = "0x6F0ABC", VA = "0x6F0ABC")]
			set
			{
			}
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x6F0AC4", Offset = "0x6F0AC4", VA = "0x6F0AC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x6F1078", Offset = "0x6F1078", VA = "0x6F1078")]
		private float CalcSphere(Vector3 cameraPos, Vector3 spherePos, float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x6F11D4", Offset = "0x6F11D4", VA = "0x6F11D4")]
		public List<Param> GetParams()
		{
			return null;
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x6F11DC", Offset = "0x6F11DC", VA = "0x6F11DC")]
		public void SetParams(List<Param> param)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x6F11E4", Offset = "0x6F11E4", VA = "0x6F11E4")]
		public CharacterFadeComponent()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class FontManager : SingletonMonoBehaviour<FontManager>
	{
		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5158A8", Offset = "0x5158A8")]
		[SerializeField]
		private TMP_FontAsset defaultFontAsset;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5158F4", Offset = "0x5158F4")]
		[SerializeField]
		private TMP_FontAsset jpEnFont;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515940", Offset = "0x515940")]
		[SerializeField]
		private TMP_FontAsset tcFont;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51598C", Offset = "0x51598C")]
		[SerializeField]
		private TMP_FontAsset scFont;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Material[] defaultMaterials;

		[Token(Token = "0x1700009B")]
		public Material[] DefaultMaterials
		{
			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0x6FA000", Offset = "0x6FA000", VA = "0x6FA000")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		public TMP_FontAsset DefaultFontAsset
		{
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0x6FA008", Offset = "0x6FA008", VA = "0x6FA008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		public TMP_FontAsset JpEnFont
		{
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0x6FA010", Offset = "0x6FA010", VA = "0x6FA010")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		public TMP_FontAsset TcFont
		{
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0x6FA018", Offset = "0x6FA018", VA = "0x6FA018")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		public TMP_FontAsset ScFont
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0x6FA020", Offset = "0x6FA020", VA = "0x6FA020")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x6FA028", Offset = "0x6FA028", VA = "0x6FA028")]
		public void ChangeFont(GameDefines.Language language)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x6FA1F8", Offset = "0x6FA1F8", VA = "0x6FA1F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x6FA258", Offset = "0x6FA258", VA = "0x6FA258")]
		public FontManager()
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class GameManager : SingletonMonoBehaviour<GameManager>
	{
		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool initialized;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SceneMain sceneMain;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5159E8", Offset = "0x5159E8")]
		private bool <EnableAnimMode>k__BackingField;

		[Token(Token = "0x170000A0")]
		public bool Initialized
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x6FA784", Offset = "0x6FA784", VA = "0x6FA784")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A1")]
		public SceneMain SceneMain
		{
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x6FA78C", Offset = "0x6FA78C", VA = "0x6FA78C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		public bool EnableAnimMode
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x6FA794", Offset = "0x6FA794", VA = "0x6FA794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A9D4", Offset = "0x51A9D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x6FA79C", Offset = "0x6FA79C", VA = "0x6FA79C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51A9E4", Offset = "0x51A9E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x6FA7A8", Offset = "0x6FA7A8", VA = "0x6FA7A8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x6FAA1C", Offset = "0x6FAA1C", VA = "0x6FAA1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x6FAA20", Offset = "0x6FAA20", VA = "0x6FAA20")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x6FAA24", Offset = "0x6FAA24", VA = "0x6FAA24")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x6FAA28", Offset = "0x6FAA28", VA = "0x6FAA28")]
		public void SetMainScene(SceneMain main)
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x6FAA30", Offset = "0x6FAA30", VA = "0x6FAA30")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class ParameterDBManager : SingletonMonoBehaviour<ParameterDBManager>
	{
		[Token(Token = "0x2000260")]
		public enum Type
		{
			[Token(Token = "0x4000A3F")]
			None = 0,
			[Token(Token = "0x4000A40")]
			Chara = 1,
			[Token(Token = "0x4000A41")]
			Sound = 2,
			[Token(Token = "0x4000A42")]
			RandomSE = 4,
			[Token(Token = "0x4000A43")]
			Timeline = 8,
			[Token(Token = "0x4000A44")]
			MainCredit = 16,
			[Token(Token = "0x4000A45")]
			Serif = 32,
			[Token(Token = "0x4000A46")]
			UIString = 64,
			[Token(Token = "0x4000A47")]
			EasterEgg = 128,
			[Token(Token = "0x4000A48")]
			All = 255
		}

		[Token(Token = "0x2000261")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510648", Offset = "0x510648")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4000A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ResourceManager resMng;

			[Token(Token = "0x4000A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ParameterDBManager <>4__this;

			[Token(Token = "0x4000A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<ScriptableCharaRuntimeSettingParameter> <>9__9;

			[Token(Token = "0x4000A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<ScriptableSoundParameter> <>9__10;

			[Token(Token = "0x4000A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<ScriptableRandomSEParameter> <>9__11;

			[Token(Token = "0x4000A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<ScriptableTimelineParameter> <>9__12;

			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<CreditData> <>9__13;

			[Token(Token = "0x4000A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action<UIStringData> <>9__14;

			[Token(Token = "0x4000A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Action<UIStringData> <>9__15;

			[Token(Token = "0x4000A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action<ScriptableEasterEggParameter> <>9__16;

			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x6DC0D8", Offset = "0x6DC0D8", VA = "0x6DC0D8")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x6DC0E0", Offset = "0x6DC0E0", VA = "0x6DC0E0")]
			internal bool <InitializeWaitCoroutine>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x6DC13C", Offset = "0x6DC13C", VA = "0x6DC13C")]
			internal bool <InitializeWaitCoroutine>b__1()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x6DC1F4", Offset = "0x6DC1F4", VA = "0x6DC1F4")]
			internal void <InitializeWaitCoroutine>b__9(ScriptableCharaRuntimeSettingParameter data)
			{
			}

			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x6DC228", Offset = "0x6DC228", VA = "0x6DC228")]
			internal bool <InitializeWaitCoroutine>b__2()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x6DC2E0", Offset = "0x6DC2E0", VA = "0x6DC2E0")]
			internal void <InitializeWaitCoroutine>b__10(ScriptableSoundParameter data)
			{
			}

			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x6DC314", Offset = "0x6DC314", VA = "0x6DC314")]
			internal bool <InitializeWaitCoroutine>b__3()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x6DC3CC", Offset = "0x6DC3CC", VA = "0x6DC3CC")]
			internal void <InitializeWaitCoroutine>b__11(ScriptableRandomSEParameter data)
			{
			}

			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x6DC400", Offset = "0x6DC400", VA = "0x6DC400")]
			internal bool <InitializeWaitCoroutine>b__4()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x6DC4B8", Offset = "0x6DC4B8", VA = "0x6DC4B8")]
			internal void <InitializeWaitCoroutine>b__12(ScriptableTimelineParameter data)
			{
			}

			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x6DC4EC", Offset = "0x6DC4EC", VA = "0x6DC4EC")]
			internal bool <InitializeWaitCoroutine>b__5()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x6DC5A4", Offset = "0x6DC5A4", VA = "0x6DC5A4")]
			internal void <InitializeWaitCoroutine>b__13(CreditData data)
			{
			}

			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x6DC5D8", Offset = "0x6DC5D8", VA = "0x6DC5D8")]
			internal bool <InitializeWaitCoroutine>b__6()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x6DC690", Offset = "0x6DC690", VA = "0x6DC690")]
			internal void <InitializeWaitCoroutine>b__14(UIStringData data)
			{
			}

			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x6DC6C4", Offset = "0x6DC6C4", VA = "0x6DC6C4")]
			internal bool <InitializeWaitCoroutine>b__7()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x6DC77C", Offset = "0x6DC77C", VA = "0x6DC77C")]
			internal void <InitializeWaitCoroutine>b__15(UIStringData data)
			{
			}

			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0x6DC7B0", Offset = "0x6DC7B0", VA = "0x6DC7B0")]
			internal bool <InitializeWaitCoroutine>b__8()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0x6DC868", Offset = "0x6DC868", VA = "0x6DC868")]
			internal void <InitializeWaitCoroutine>b__16(ScriptableEasterEggParameter data)
			{
			}
		}

		[Token(Token = "0x2000262")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510658", Offset = "0x510658")]
		private sealed class <InitializeWaitCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ParameterDBManager <>4__this;

			[Token(Token = "0x4000A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass22_0 <>8__1;

			[Token(Token = "0x17000140")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FB7")]
				[Address(RVA = "0x6DCD2C", Offset = "0x6DCD2C", VA = "0x6DCD2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000141")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FB9")]
				[Address(RVA = "0x6DCD94", Offset = "0x6DCD94", VA = "0x6DCD94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x6DBF20", Offset = "0x6DBF20", VA = "0x6DBF20")]
			[DebuggerHidden]
			public <InitializeWaitCoroutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0x6DC89C", Offset = "0x6DC89C", VA = "0x6DC89C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x6DC8A0", Offset = "0x6DC8A0", VA = "0x6DC8A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0x6DCD34", Offset = "0x6DCD34", VA = "0x6DCD34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Type loaded;

		[Token(Token = "0x40004DA")]
		private const string CharaSetupParamName = "CharaRuntimeSettingParameter";

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ScriptableCharaRuntimeSettingParameter charaRuntimeSettingParameter;

		[Token(Token = "0x40004DC")]
		private const string SoundParamName = "SoundParameter";

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScriptableSoundParameter soundParameter;

		[Token(Token = "0x40004DE")]
		private const string RandomSEParamName = "RandomSEParameter";

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ScriptableRandomSEParameter randomSEParameter;

		[Token(Token = "0x40004E0")]
		private const string TimelineParamName = "TimelineParameter";

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ScriptableTimelineParameter timelineParameter;

		[Token(Token = "0x40004E2")]
		private const string MainCreditParamName = "MainStoryCredit";

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CreditData mainCreditParameter;

		[Token(Token = "0x40004E4")]
		private const string SerifParamName = "SerifData";

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UIStringData serifParameter;

		[Token(Token = "0x40004E6")]
		private const string UIStringParamName = "UIStringData";

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UIStringData uiStringParameter;

		[Token(Token = "0x40004E8")]
		private const string EasterEggParamName = "EasterEggParameter";

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ScriptableEasterEggParameter easterEggParameter;

		[Token(Token = "0x40004EA")]
		private const string ParameterGroupLabel = "ParameterGroup";

		[Token(Token = "0x170000A3")]
		public Type Loaded
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0x6DBDFC", Offset = "0x6DBDFC", VA = "0x6DBDFC")]
			get
			{
				return default(Type);
			}
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x6DBE04", Offset = "0x6DBE04", VA = "0x6DBE04")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x6DBEB0", Offset = "0x6DBEB0", VA = "0x6DBEB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51A9F4", Offset = "0x51A9F4")]
		private IEnumerator InitializeWaitCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x6DBF4C", Offset = "0x6DBF4C", VA = "0x6DBF4C")]
		public ScriptableObject GetParam(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x6DBFE8", Offset = "0x6DBFE8", VA = "0x6DBFE8")]
		public bool IsLoadedAll()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x6DC068", Offset = "0x6DC068", VA = "0x6DC068")]
		public ParameterDBManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000183")]
	public class ChangeLightmapBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameDefines.SceneID type;

		[Token(Token = "0x170000A4")]
		public GameDefines.SceneID Type
		{
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x77541C", Offset = "0x77541C", VA = "0x77541C")]
			get
			{
				return default(GameDefines.SceneID);
			}
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x775424", Offset = "0x775424", VA = "0x775424")]
			set
			{
			}
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x77542C", Offset = "0x77542C", VA = "0x77542C", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x775508", Offset = "0x775508", VA = "0x775508")]
		public ChangeLightmapBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000184")]
	public class ChangeLightmapClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChangeLightmapBehaviour template;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5159F8", Offset = "0x5159F8")]
		public GameDefines.SceneID type;

		[Token(Token = "0x170000A5")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0x775510", Offset = "0x775510", VA = "0x775510", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x775518", Offset = "0x775518", VA = "0x775518", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x7755F8", Offset = "0x7755F8", VA = "0x7755F8")]
		public ChangeLightmapClip()
		{
		}
	}
	[Token(Token = "0x2000185")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x510140", Offset = "0x510140")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x510140", Offset = "0x510140")]
	public class ChangeLightmapTrack : TrackAsset
	{
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x775660", Offset = "0x775660", VA = "0x775660", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x7756F8", Offset = "0x7756F8", VA = "0x7756F8")]
		public ChangeLightmapTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000186")]
	public class CharacterOutlineColorBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinnedMeshRenderer renderer;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] invalidMaterialNames;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Color> defaultColor;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Material> targetMaterial;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int outlineColorShaderIndex;

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x6F3770", Offset = "0x6F3770", VA = "0x6F3770", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x6F39C8", Offset = "0x6F39C8", VA = "0x6F39C8", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x6F3B88", Offset = "0x6F3B88", VA = "0x6F3B88")]
		public CharacterOutlineColorBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000187")]
	public class CharacterOutlineColorClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterOutlineColorBehaviour template;

		[Token(Token = "0x170000A6")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0x6F3C20", Offset = "0x6F3C20", VA = "0x6F3C20", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x6F3C28", Offset = "0x6F3C28", VA = "0x6F3C28", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x6F3CC8", Offset = "0x6F3CC8", VA = "0x6F3CC8")]
		public CharacterOutlineColorClip()
		{
		}
	}
	[Token(Token = "0x2000188")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x5101CC", Offset = "0x5101CC")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x5101CC", Offset = "0x5101CC")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x5101CC", Offset = "0x5101CC")]
	public class CharacterOutlineColorTrack : TrackAsset
	{
		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string[] invalidMaterialNames;

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x6F3D2C", Offset = "0x6F3D2C", VA = "0x6F3D2C", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x6F41DC", Offset = "0x6F41DC", VA = "0x6F41DC")]
		public CharacterOutlineColorTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000189")]
	public class CharacterStateBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharacterState.State state;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool isPlayFirst;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool isPlayFinishFirst;

		[Token(Token = "0x170000A7")]
		public bool IsPlayFirst
		{
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0x6F425C", Offset = "0x6F425C", VA = "0x6F425C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0x6F4264", Offset = "0x6F4264", VA = "0x6F4264")]
			set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public bool IsPlayFinishFirst
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0x6F4270", Offset = "0x6F4270", VA = "0x6F4270")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x6F4278", Offset = "0x6F4278", VA = "0x6F4278")]
			set
			{
			}
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x6F4284", Offset = "0x6F4284", VA = "0x6F4284", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x6F42CC", Offset = "0x6F42CC", VA = "0x6F42CC", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x6F4314", Offset = "0x6F4314", VA = "0x6F4314")]
		public void Play(CharacterState characterStateObj)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x6F43A8", Offset = "0x6F43A8", VA = "0x6F43A8")]
		public void Finish(CharacterState characterStateObj)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x6F4438", Offset = "0x6F4438", VA = "0x6F4438")]
		public CharacterStateBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018A")]
	public class CharacterStateClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterStateBehaviour template;

		[Token(Token = "0x170000A9")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x6F4440", Offset = "0x6F4440", VA = "0x6F4440", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x6F4448", Offset = "0x6F4448", VA = "0x6F4448", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x6F44E8", Offset = "0x6F44E8", VA = "0x6F44E8")]
		public CharacterStateClip()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class CharacterStateMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CharacterState characterStateObj;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SoundDefines.MixerType mixerType;

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x6F4550", Offset = "0x6F4550", VA = "0x6F4550", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x6F47E8", Offset = "0x6F47E8", VA = "0x6F47E8", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x6F4890", Offset = "0x6F4890", VA = "0x6F4890")]
		public CharacterStateMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x200018C")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x51027C", Offset = "0x51027C")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x51027C", Offset = "0x51027C")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x51027C", Offset = "0x51027C")]
	public class CharacterStateTrack : TrackAsset
	{
		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x6F4898", Offset = "0x6F4898", VA = "0x6F4898", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x6F4930", Offset = "0x6F4930", VA = "0x6F4930")]
		public CharacterStateTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018D")]
	public class ScriptableTimelineParameter : ScriptableObject
	{
		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515A30", Offset = "0x515A30")]
		public List<TimelineParameter> paramList;

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x6E5854", Offset = "0x6E5854", VA = "0x6E5854")]
		public ScriptableTimelineParameter()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class SerifBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string serifID;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isPlay;

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x6E75D4", Offset = "0x6E75D4", VA = "0x6E75D4", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x6E781C", Offset = "0x6E781C", VA = "0x6E781C", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x6E7960", Offset = "0x6E7960", VA = "0x6E7960", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x6E7A20", Offset = "0x6E7A20", VA = "0x6E7A20")]
		public SerifBehaviour()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class SerifClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515A68", Offset = "0x515A68")]
		public string serifID;

		[Token(Token = "0x170000AA")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x6E7A78", Offset = "0x6E7A78", VA = "0x6E7A78", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x6E7A80", Offset = "0x6E7A80", VA = "0x6E7A80", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x6E7B44", Offset = "0x6E7B44", VA = "0x6E7B44")]
		public SerifClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000190")]
	public class BGMPlayBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip audioClip;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isPlayFirst;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isPlayFinishFirst;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float clipIn;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundID.BGM bgmID;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float easeOutTime;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float clipTime;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve curve;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x515AA0", Offset = "0x515AA0")]
		public float defaultVolume;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float animRate;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double beforeTime;

		[Token(Token = "0x170000AB")]
		public bool IsPlayFirst
		{
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0x773850", Offset = "0x773850", VA = "0x773850")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x773858", Offset = "0x773858", VA = "0x773858")]
			set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public bool IsPlayFinishFirst
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x773864", Offset = "0x773864", VA = "0x773864")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0x77386C", Offset = "0x77386C", VA = "0x77386C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x773878", Offset = "0x773878", VA = "0x773878", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x7738C4", Offset = "0x7738C4", VA = "0x7738C4")]
		public void Play(AudioSource source)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x7739F4", Offset = "0x7739F4", VA = "0x7739F4")]
		public void OnUpdate(AudioSource source, double time, float deltaTime)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x773B3C", Offset = "0x773B3C", VA = "0x773B3C", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x773B84", Offset = "0x773B84", VA = "0x773B84")]
		public void Finish(AudioSource source, bool isStop)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x773D18", Offset = "0x773D18", VA = "0x773D18")]
		public BGMPlayBehaviour()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class BGMPlayClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BGMPlayBehaviour template;

		[Token(Token = "0x170000AD")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0x773D30", Offset = "0x773D30", VA = "0x773D30", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x773D38", Offset = "0x773D38", VA = "0x773D38", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x773DD8", Offset = "0x773DD8", VA = "0x773DD8")]
		public BGMPlayClip()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class BGMPlayMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AudioSource audioSource;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SoundID.BGM bgmID;

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x773E50", Offset = "0x773E50", VA = "0x773E50", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x774110", Offset = "0x774110", VA = "0x774110", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x77427C", Offset = "0x77427C", VA = "0x77427C")]
		public BGMPlayMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x51032C", Offset = "0x51032C")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x51032C", Offset = "0x51032C")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x51032C", Offset = "0x51032C")]
	public class BGMPlayTrack : TrackAsset
	{
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x774284", Offset = "0x774284", VA = "0x774284", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x77431C", Offset = "0x77431C", VA = "0x77431C")]
		public BGMPlayTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000194")]
	public class SEPlayBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x2000263")]
		public enum EmitOwner
		{
			[Token(Token = "0x4000A58")]
			Free,
			[Token(Token = "0x4000A59")]
			Holo,
			[Token(Token = "0x4000A5A")]
			Myuri,
			[Token(Token = "0x4000A5B")]
			DancerMyuri
		}

		[Token(Token = "0x2000264")]
		public enum PosType
		{
			[Token(Token = "0x4000A5D")]
			Free,
			[Token(Token = "0x4000A5E")]
			RightHand,
			[Token(Token = "0x4000A5F")]
			LeftFoot,
			[Token(Token = "0x4000A60")]
			RightFoot,
			[Token(Token = "0x4000A61")]
			LeftLeg,
			[Token(Token = "0x4000A62")]
			RightLeg,
			[Token(Token = "0x4000A63")]
			Waist,
			[Token(Token = "0x4000A64")]
			LeftHand,
			[Token(Token = "0x4000A65")]
			CenterChest,
			[Token(Token = "0x4000A66")]
			LeftElbow,
			[Token(Token = "0x4000A67")]
			RightElbow
		}

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundID.SE seID;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool is3D;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool isLoop;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool isSyncTime;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 addRandomPitch;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject emitter;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 emitPos;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource source;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float easeOutTime;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float clipTime;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve curve;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x515AB8", Offset = "0x515AB8")]
		public float defaultVolume;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float animRate;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string devID;

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x6DFBC4", Offset = "0x6DFBC4", VA = "0x6DFBC4", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x6DFE8C", Offset = "0x6DFE8C", VA = "0x6DFE8C", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x6DFFDC", Offset = "0x6DFFDC", VA = "0x6DFFDC", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x6E018C", Offset = "0x6E018C", VA = "0x6E018C", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x6E02B8", Offset = "0x6E02B8", VA = "0x6E02B8")]
		public SEPlayBehaviour()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class SEPlayClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SEPlayBehaviour template;

		[Token(Token = "0x170000AE")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x6E0318", Offset = "0x6E0318", VA = "0x6E0318", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x6E0320", Offset = "0x6E0320", VA = "0x6E0320", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x6E03C0", Offset = "0x6E03C0", VA = "0x6E03C0")]
		public SEPlayClip()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class StoryFinishBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x750A84", Offset = "0x750A84", VA = "0x750A84", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x750B3C", Offset = "0x750B3C", VA = "0x750B3C")]
		public StoryFinishBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000197")]
	public class StoryFinishClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x170000AF")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0x750B44", Offset = "0x750B44", VA = "0x750B44", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x750B4C", Offset = "0x750B4C", VA = "0x750B4C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x750C10", Offset = "0x750C10", VA = "0x750C10")]
		public StoryFinishClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000198")]
	public class TimelineFadeBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private FadeManager.FadeState type;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameDefines.CharacterType uvFadeTargetType;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool userTimeFade;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float time;

		[Token(Token = "0x170000B0")]
		public FadeManager.FadeState Type
		{
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0x752B40", Offset = "0x752B40", VA = "0x752B40")]
			get
			{
				return default(FadeManager.FadeState);
			}
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0x752B48", Offset = "0x752B48", VA = "0x752B48")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public GameDefines.CharacterType UVFadeTargetType
		{
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0x752B50", Offset = "0x752B50", VA = "0x752B50")]
			get
			{
				return default(GameDefines.CharacterType);
			}
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0x752B58", Offset = "0x752B58", VA = "0x752B58")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public bool UserTimeFade
		{
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0x752B60", Offset = "0x752B60", VA = "0x752B60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0x752B68", Offset = "0x752B68", VA = "0x752B68")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public float Time
		{
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x752B74", Offset = "0x752B74", VA = "0x752B74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x752B7C", Offset = "0x752B7C", VA = "0x752B7C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x752B84", Offset = "0x752B84", VA = "0x752B84", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x752E48", Offset = "0x752E48", VA = "0x752E48", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x752E7C", Offset = "0x752E7C", VA = "0x752E7C")]
		public TimelineFadeBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000199")]
	public class TimelineFadeClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimelineFadeBehaviour template;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515AD0", Offset = "0x515AD0")]
		public FadeManager.FadeState type;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515B08", Offset = "0x515B08")]
		public GameDefines.CharacterType uvFadeTargetType;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool userTimeFade;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float time;

		[Token(Token = "0x170000B4")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0x752E84", Offset = "0x752E84", VA = "0x752E84", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x752E8C", Offset = "0x752E8C", VA = "0x752E8C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x752F84", Offset = "0x752F84", VA = "0x752F84")]
		public TimelineFadeClip()
		{
		}
	}
	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x5103DC", Offset = "0x5103DC")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x5103DC", Offset = "0x5103DC")]
	public class TimelineFadeTrack : TrackAsset
	{
		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x752FEC", Offset = "0x752FEC", VA = "0x752FEC", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x753084", Offset = "0x753084", VA = "0x753084")]
		public TimelineFadeTrack()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class TimelineManager : SingletonMonoBehaviour<TimelineManager>
	{
		[Token(Token = "0x2000265")]
		private struct KeepData
		{
			[Token(Token = "0x4000A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject obj;

			[Token(Token = "0x4000A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool isActive;

			[Token(Token = "0x4000A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool isUsePosAndRotate;

			[Token(Token = "0x4000A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 position;

			[Token(Token = "0x4000A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Quaternion rotation;
		}

		[Token(Token = "0x2000266")]
		private class AudioTrackBindData
		{
			[Token(Token = "0x4000A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayableBinding truck;

			[Token(Token = "0x4000A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject bindObj;

			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x757500", Offset = "0x757500", VA = "0x757500")]
			public AudioTrackBindData()
			{
			}
		}

		[Token(Token = "0x2000267")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510668", Offset = "0x510668")]
		private sealed class <>c__DisplayClass61_0
		{
			[Token(Token = "0x4000A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ResourceManager resourceMng;

			[Token(Token = "0x4000A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string assetPath;

			[Token(Token = "0x4000A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TimelineManager <>4__this;

			[Token(Token = "0x4000A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Func<bool> <>9__4;

			[Token(Token = "0x4000A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Func<bool> <>9__6;

			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x754904", Offset = "0x754904", VA = "0x754904")]
			public <>c__DisplayClass61_0()
			{
			}

			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x75490C", Offset = "0x75490C", VA = "0x75490C")]
			internal bool <SetTimelineAssetCoroutine>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x754940", Offset = "0x754940", VA = "0x754940")]
			internal void <SetTimelineAssetCoroutine>b__1(PlayableAsset x)
			{
			}

			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x754968", Offset = "0x754968", VA = "0x754968")]
			internal bool <SetTimelineAssetCoroutine>b__4()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x754994", Offset = "0x754994", VA = "0x754994")]
			internal bool <SetTimelineAssetCoroutine>b__6()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510678", Offset = "0x510678")]
		private sealed class <>c__DisplayClass61_1
		{
			[Token(Token = "0x4000A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TimelineParameter.BindInfo info;

			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass61_0 CS$<>8__locals1;

			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x7549C0", Offset = "0x7549C0", VA = "0x7549C0")]
			public <>c__DisplayClass61_1()
			{
			}

			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x7549C8", Offset = "0x7549C8", VA = "0x7549C8")]
			internal bool <SetTimelineAssetCoroutine>b__2()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000269")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510688", Offset = "0x510688")]
		private sealed class <>c__DisplayClass61_2
		{
			[Token(Token = "0x4000A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x754A08", Offset = "0x754A08", VA = "0x754A08")]
			public <>c__DisplayClass61_2()
			{
			}

			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0x754A10", Offset = "0x754A10", VA = "0x754A10")]
			internal void <SetTimelineAssetCoroutine>b__3(GameObject x)
			{
			}
		}

		[Token(Token = "0x200026A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510698", Offset = "0x510698")]
		private sealed class <>c__DisplayClass61_3
		{
			[Token(Token = "0x4000A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioPlayableAsset asset;

			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x754A18", Offset = "0x754A18", VA = "0x754A18")]
			public <>c__DisplayClass61_3()
			{
			}

			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x754A20", Offset = "0x754A20", VA = "0x754A20")]
			internal void <SetTimelineAssetCoroutine>b__5(AudioClip x)
			{
			}
		}

		[Token(Token = "0x200026B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5106A8", Offset = "0x5106A8")]
		private sealed class <>c__DisplayClass61_4
		{
			[Token(Token = "0x4000A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LipSyncClip asset;

			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x754A3C", Offset = "0x754A3C", VA = "0x754A3C")]
			public <>c__DisplayClass61_4()
			{
			}

			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x754A44", Offset = "0x754A44", VA = "0x754A44")]
			internal void <SetTimelineAssetCoroutine>b__7(AudioClip x)
			{
			}
		}

		[Token(Token = "0x200026C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5106B8", Offset = "0x5106B8")]
		private sealed class <SetTimelineAssetCoroutine>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string assetPath;

			[Token(Token = "0x4000A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TimelineManager <>4__this;

			[Token(Token = "0x4000A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass61_0 <>8__1;

			[Token(Token = "0x4000A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass61_2 <>8__2;

			[Token(Token = "0x4000A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass61_1 <>8__3;

			[Token(Token = "0x4000A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<TimelineParameter.BindInfo> <paramList>5__2;

			[Token(Token = "0x4000A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<TimelineParameter.SEClipInfo> <seClipList>5__3;

			[Token(Token = "0x4000A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private GameObject <parentObject>5__4;

			[Token(Token = "0x4000A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TrackAsset[] <trackArray>5__5;

			[Token(Token = "0x4000A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private IEnumerator<PlayableBinding> <>7__wrap5;

			[Token(Token = "0x4000A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private PlayableBinding <bind>5__7;

			[Token(Token = "0x4000A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private string <name>5__8;

			[Token(Token = "0x4000A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private int <i>5__9;

			[Token(Token = "0x4000A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private TimelineClip[] <clipArray>5__10;

			[Token(Token = "0x4000A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private VideoPlayer <player>5__11;

			[Token(Token = "0x17000142")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FCC")]
				[Address(RVA = "0x757508", Offset = "0x757508", VA = "0x757508", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000143")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FCE")]
				[Address(RVA = "0x757570", Offset = "0x757570", VA = "0x757570", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0x7543DC", Offset = "0x7543DC", VA = "0x7543DC")]
			[DebuggerHidden]
			public <SetTimelineAssetCoroutine>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x754A6C", Offset = "0x754A6C", VA = "0x754A6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x754B48", Offset = "0x754B48", VA = "0x754B48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0x754A88", Offset = "0x754A88", VA = "0x754A88")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x757510", Offset = "0x757510", VA = "0x757510", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] mainStoryTimelineTimeArray;

		[Token(Token = "0x4000527")]
		public const float AnimModeMaxSecond = 639.65f;

		[Token(Token = "0x4000528")]
		public const string ParentObjName = "TimelineObject";

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayableDirector playableDirector;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScriptableTimelineParameter timelineParam;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515B40", Offset = "0x515B40")]
		private bool <IsLoaded>k__BackingField;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515B50", Offset = "0x515B50")]
		private bool <ReturnTimelineCount>k__BackingField;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515B60", Offset = "0x515B60")]
		private bool <ForceChangeChapter>k__BackingField;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515B70", Offset = "0x515B70")]
		private bool <IsSkipping>k__BackingField;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<KeepData> keepList;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<AudioTrackBindData> audioTrackList;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515B80", Offset = "0x515B80")]
		private int <ChapterCount>k__BackingField;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515B90", Offset = "0x515B90")]
		private int <PrevChapterCount>k__BackingField;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515BA0", Offset = "0x515BA0")]
		private bool <StoryFinish>k__BackingField;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float duration;

		[Token(Token = "0x170000B5")]
		public float[] MainStoryTimelineTimeArray
		{
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0x7530EC", Offset = "0x7530EC", VA = "0x7530EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public bool IsLoaded
		{
			[Token(Token = "0x6000B44")]
			[Address(RVA = "0x7530F4", Offset = "0x7530F4", VA = "0x7530F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AA58", Offset = "0x51AA58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B45")]
			[Address(RVA = "0x7530FC", Offset = "0x7530FC", VA = "0x7530FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AA68", Offset = "0x51AA68")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public bool ReturnTimelineCount
		{
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0x753108", Offset = "0x753108", VA = "0x753108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AA78", Offset = "0x51AA78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B47")]
			[Address(RVA = "0x753110", Offset = "0x753110", VA = "0x753110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AA88", Offset = "0x51AA88")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public bool ForceChangeChapter
		{
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0x75311C", Offset = "0x75311C", VA = "0x75311C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AA98", Offset = "0x51AA98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B49")]
			[Address(RVA = "0x753124", Offset = "0x753124", VA = "0x753124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AAA8", Offset = "0x51AAA8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public bool IsSkipping
		{
			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0x753130", Offset = "0x753130", VA = "0x753130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AAB8", Offset = "0x51AAB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0x753138", Offset = "0x753138", VA = "0x753138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AAC8", Offset = "0x51AAC8")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public int ChapterCount
		{
			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0x753144", Offset = "0x753144", VA = "0x753144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AAD8", Offset = "0x51AAD8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0x75314C", Offset = "0x75314C", VA = "0x75314C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AAE8", Offset = "0x51AAE8")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public int PrevChapterCount
		{
			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0x753154", Offset = "0x753154", VA = "0x753154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AAF8", Offset = "0x51AAF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0x75315C", Offset = "0x75315C", VA = "0x75315C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AB08", Offset = "0x51AB08")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public bool StoryFinish
		{
			[Token(Token = "0x6000B50")]
			[Address(RVA = "0x753164", Offset = "0x753164", VA = "0x753164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AB18", Offset = "0x51AB18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B51")]
			[Address(RVA = "0x75316C", Offset = "0x75316C", VA = "0x75316C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AB28", Offset = "0x51AB28")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public float MainStoryMaxSecond
		{
			[Token(Token = "0x6000B52")]
			[Address(RVA = "0x753178", Offset = "0x753178", VA = "0x753178")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BE")]
		public float Duration
		{
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0x7531E4", Offset = "0x7531E4", VA = "0x7531E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x7531EC", Offset = "0x7531EC", VA = "0x7531EC")]
		public void OnReset()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x7531F0", Offset = "0x7531F0", VA = "0x7531F0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x75332C", Offset = "0x75332C", VA = "0x75332C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x753330", Offset = "0x753330", VA = "0x753330")]
		private void CreateDirector()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x753440", Offset = "0x753440", VA = "0x753440", Slot = "5")]
		protected override void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x7534E4", Offset = "0x7534E4", VA = "0x7534E4")]
		public PlayableDirector GetPlayableDirector()
		{
			return null;
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x753568", Offset = "0x753568", VA = "0x753568")]
		public void PlayTimeline()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x753620", Offset = "0x753620", VA = "0x753620")]
		public void PauseTimeline()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x7536C8", Offset = "0x7536C8", VA = "0x7536C8")]
		public void ResumeTimeline()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x753770", Offset = "0x753770", VA = "0x753770")]
		public void StopTimeline()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x753E2C", Offset = "0x753E2C", VA = "0x753E2C")]
		private void ReleaseTimeline()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x754008", Offset = "0x754008", VA = "0x754008")]
		public void ChangeMainStoryChapterCountCheck(float mixTime, bool isPushBackTimeline = false, int forceChapterNo = -1)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x7541A0", Offset = "0x7541A0", VA = "0x7541A0")]
		public bool IsChapterChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x754198", Offset = "0x754198", VA = "0x754198")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x7541B0", Offset = "0x7541B0", VA = "0x7541B0")]
		public float GetCurrentTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x754248", Offset = "0x754248", VA = "0x754248")]
		public void SetCurrentTime(float time)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x754268", Offset = "0x754268", VA = "0x754268")]
		public void SetTimeline(float time)
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x754360", Offset = "0x754360", VA = "0x754360")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51AB38", Offset = "0x51AB38")]
		public IEnumerator SetTimelineAssetCoroutine(string assetPath)
		{
			return null;
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x754408", Offset = "0x754408", VA = "0x754408")]
		private void InitializeChainObject(string parentObjectName)
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x75459C", Offset = "0x75459C", VA = "0x75459C")]
		private GameObject GetObject(string path)
		{
			return null;
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x75471C", Offset = "0x75471C", VA = "0x75471C")]
		public void ReSetSEAudioTrack()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x754808", Offset = "0x754808", VA = "0x754808")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x754814", Offset = "0x754814", VA = "0x754814")]
		public TimelineManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019C")]
	public class TimelineParameter
	{
		[Serializable]
		[Token(Token = "0x200026D")]
		public class BindInfo
		{
			[Token(Token = "0x20002B8")]
			public enum ResourceType
			{
				[Token(Token = "0x4000BD6")]
				InScene,
				[Token(Token = "0x4000BD7")]
				LoadProject
			}

			[Token(Token = "0x4000A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5192A4", Offset = "0x5192A4")]
			public string trackName;

			[Token(Token = "0x4000A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5192DC", Offset = "0x5192DC")]
			public string path;

			[Token(Token = "0x4000A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x519314", Offset = "0x519314")]
			public Vector3 position;

			[Token(Token = "0x4000A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51934C", Offset = "0x51934C")]
			public Quaternion rotation;

			[Token(Token = "0x4000A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x519384", Offset = "0x519384")]
			public ResourceType resourceType;

			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x757580", Offset = "0x757580", VA = "0x757580")]
			public BindInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200026E")]
		public class SEClipInfo
		{
			[Token(Token = "0x4000A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string trackName;

			[Token(Token = "0x4000A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string clipName;

			[Token(Token = "0x4000A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string devID;

			[Token(Token = "0x4000A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double frameID;

			[Token(Token = "0x4000A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string path;

			[Token(Token = "0x4000A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SoundID.SE seID;

			[Token(Token = "0x4000A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool is3D;

			[Token(Token = "0x4000A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			public bool isLoop;

			[Token(Token = "0x4000A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2 addRandomPitch;

			[Token(Token = "0x4000A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 emitPos;

			[Token(Token = "0x4000A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float easeOutTime;

			[Token(Token = "0x4000A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float clipTime;

			[Token(Token = "0x4000A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public AnimationCurve curve;

			[Token(Token = "0x4000A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float defaultVolume;

			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0x757588", Offset = "0x757588", VA = "0x757588")]
			public SEClipInfo()
			{
			}
		}

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515BB0", Offset = "0x515BB0")]
		public string name;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515BE8", Offset = "0x515BE8")]
		public List<BindInfo> infoList;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SEClipInfo> seClipList;

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x757578", Offset = "0x757578", VA = "0x757578")]
		public TimelineParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019D")]
	public class TransformRotateBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject target;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateX;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rotateY;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotateZ;

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x75964C", Offset = "0x75964C", VA = "0x75964C", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x7597A0", Offset = "0x7597A0", VA = "0x7597A0")]
		public TransformRotateBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019E")]
	public class TransformRotateClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TransformRotateBehaviour template;

		[Token(Token = "0x170000BF")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x7597A8", Offset = "0x7597A8", VA = "0x7597A8", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x7597B0", Offset = "0x7597B0", VA = "0x7597B0", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x759850", Offset = "0x759850", VA = "0x759850")]
		public TransformRotateClip()
		{
		}
	}
	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x51045C", Offset = "0x51045C")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x51045C", Offset = "0x51045C")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x51045C", Offset = "0x51045C")]
	public class TransformRotateTrack : TrackAsset
	{
		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x7598B8", Offset = "0x7598B8", VA = "0x7598B8", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x759D10", Offset = "0x759D10", VA = "0x759D10")]
		public TransformRotateTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A0")]
	public class GetTrophyBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BasePlatform.Trophy trophy;

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x6FAAA0", Offset = "0x6FAAA0", VA = "0x6FAAA0", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x6FAB6C", Offset = "0x6FAB6C", VA = "0x6FAB6C")]
		public GetTrophyBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A1")]
	public class GetTrophyClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GetTrophyBehaviour template;

		[Token(Token = "0x170000C0")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0x6FAB74", Offset = "0x6FAB74", VA = "0x6FAB74", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x6FAB7C", Offset = "0x6FAB7C", VA = "0x6FAB7C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x6FAC1C", Offset = "0x6FAC1C", VA = "0x6FAC1C")]
		public GetTrophyClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A2")]
	public class WindowCloseBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WindowType type;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool finishedReOpen;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool isAnim;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool startedWindowOpen;

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x75B150", Offset = "0x75B150", VA = "0x75B150", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x75B288", Offset = "0x75B288", VA = "0x75B288", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x75B3B8", Offset = "0x75B3B8", VA = "0x75B3B8")]
		public WindowCloseBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A3")]
	public class WindowCloseClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WindowCloseBehaviour template;

		[Token(Token = "0x170000C1")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x75B3C0", Offset = "0x75B3C0", VA = "0x75B3C0", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x75B3C8", Offset = "0x75B3C8", VA = "0x75B3C8", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x75B468", Offset = "0x75B468", VA = "0x75B468")]
		public WindowCloseClip()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class CommonVideoPlayerController : IVideoPlayerController
	{
		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool isPreparing;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool playedOnce;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool isOnBehaviourPlay;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VideoPlayer videoPlayer;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isSeeking;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool isWaitSync;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool isInitialized;

		[Token(Token = "0x170000C2")]
		public VideoPlayer VideoPlayer
		{
			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0x6F5238", Offset = "0x6F5238", VA = "0x6F5238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x6F5240", Offset = "0x6F5240", VA = "0x6F5240", Slot = "4")]
		public void Prepare(VideoPlayer tmpVideoPlayer, VideoClip videoClip, bool isLoop, bool mute, double clipInTime)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x6F54B0", Offset = "0x6F54B0", VA = "0x6F54B0")]
		private void LoopPointReached(VideoPlayer vp)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x6F54EC", Offset = "0x6F54EC", VA = "0x6F54EC")]
		private void SeekCompleted(VideoPlayer vp)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x6F5538", Offset = "0x6F5538", VA = "0x6F5538", Slot = "5")]
		public void PrepareFrame(Playable playable, double clipInTime)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x6F5858", Offset = "0x6F5858", VA = "0x6F5858", Slot = "9")]
		public void OnBehaviourPlay(Playable playable, double clipInTime)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x6F5944", Offset = "0x6F5944", VA = "0x6F5944", Slot = "10")]
		public void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x6F5A00", Offset = "0x6F5A00", VA = "0x6F5A00", Slot = "8")]
		public void Update(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x6F5AB4", Offset = "0x6F5AB4", VA = "0x6F5AB4", Slot = "11")]
		public void OnGraphStart()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x6F5404", Offset = "0x6F5404", VA = "0x6F5404")]
		private void PlayVideo()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x6F596C", Offset = "0x6F596C", VA = "0x6F596C", Slot = "6")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x6F59FC", Offset = "0x6F59FC", VA = "0x6F59FC", Slot = "7")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x6F5ABC", Offset = "0x6F5ABC", VA = "0x6F5ABC")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x6F5B58", Offset = "0x6F5B58", VA = "0x6F5B58", Slot = "12")]
		public void OnPlayableDestroy()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x6F569C", Offset = "0x6F569C", VA = "0x6F569C")]
		private void SyncVideoToPlayable(double clipInTime, double playableTime)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x6F5B5C", Offset = "0x6F5B5C", VA = "0x6F5B5C")]
		public CommonVideoPlayerController()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public interface IVideoPlayerController
	{
		[Token(Token = "0x6000B8E")]
		void Prepare(VideoPlayer videoPlayer, VideoClip videoClip, bool isLoop, bool mute, double clipInTime);

		[Token(Token = "0x6000B8F")]
		void PrepareFrame(Playable playable, double clipInTime);

		[Token(Token = "0x6000B90")]
		void Pause();

		[Token(Token = "0x6000B91")]
		void Stop();

		[Token(Token = "0x6000B92")]
		void Update(Playable playable, FrameData info);

		[Token(Token = "0x6000B93")]
		void OnBehaviourPlay(Playable playable, double clipInTime);

		[Token(Token = "0x6000B94")]
		void OnBehaviourPause(Playable playable, FrameData info);

		[Token(Token = "0x6000B95")]
		void OnGraphStart();

		[Token(Token = "0x6000B96")]
		void OnPlayableDestroy();
	}
	[Token(Token = "0x20001A6")]
	public class FindToPlayTrophyCheck : MonoBehaviour
	{
		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isCheck;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private BasePlatform.Trophy trophy;

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x6F9D7C", Offset = "0x6F9D7C", VA = "0x6F9D7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x6F9D84", Offset = "0x6F9D84", VA = "0x6F9D84")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x6F9FF8", Offset = "0x6F9FF8", VA = "0x6F9FF8")]
		public FindToPlayTrophyCheck()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class BootLogo
	{
		[Token(Token = "0x200026F")]
		public enum LogoState
		{
			[Token(Token = "0x4000A9E")]
			In,
			[Token(Token = "0x4000A9F")]
			Wait,
			[Token(Token = "0x4000AA0")]
			Out,
			[Token(Token = "0x4000AA1")]
			End
		}

		[Token(Token = "0x400054D")]
		private const float MinLogoTime = 2f;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float logoTime;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515C30", Offset = "0x515C30")]
		private LogoState <State>k__BackingField;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator logoAnim;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515C40", Offset = "0x515C40")]
		private bool <CanClose>k__BackingField;

		[Token(Token = "0x170000C3")]
		public LogoState State
		{
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0x7743A0", Offset = "0x7743A0", VA = "0x7743A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AB9C", Offset = "0x51AB9C")]
			get
			{
				return default(LogoState);
			}
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x7743A8", Offset = "0x7743A8", VA = "0x7743A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ABAC", Offset = "0x51ABAC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public bool CanClose
		{
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x7743B0", Offset = "0x7743B0", VA = "0x7743B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ABBC", Offset = "0x51ABBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0x7743B8", Offset = "0x7743B8", VA = "0x7743B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ABCC", Offset = "0x51ABCC")]
			set
			{
			}
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x7711D0", Offset = "0x7711D0", VA = "0x7711D0")]
		public void Init(Animator animator)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x772518", Offset = "0x772518", VA = "0x772518")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x772370", Offset = "0x772370", VA = "0x772370")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x7711C8", Offset = "0x7711C8", VA = "0x7711C8")]
		public BootLogo()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class CircleGaugeUI : MonoBehaviour
	{
		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject obj;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image frame;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image image;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color color;

		[Token(Token = "0x4000556")]
		private const float PopTime = 0.5f;

		[Token(Token = "0x170000C5")]
		public bool Visible
		{
			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0x6F4998", Offset = "0x6F4998", VA = "0x6F4998")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x6F49AC", Offset = "0x6F49AC", VA = "0x6F49AC")]
		public void SetRate(float rate)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x6F49C8", Offset = "0x6F49C8", VA = "0x6F49C8")]
		public void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x6F4A54", Offset = "0x6F4A54", VA = "0x6F4A54")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x6F4ADC", Offset = "0x6F4ADC", VA = "0x6F4ADC")]
		public CircleGaugeUI()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class HelpWindowBack : MonoBehaviour
	{
		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isActive;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject helpOculusGo;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject helpPC;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject helpPS4;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject helpRift;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject helpVive;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject helpXbox;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject helpPS4NonVR;

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x6FE94C", Offset = "0x6FE94C", VA = "0x6FE94C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x6FEA1C", Offset = "0x6FEA1C", VA = "0x6FEA1C")]
		private void ActiveHelpImage(PlatformManager.PlatformType platform)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x6FEB6C", Offset = "0x6FEB6C", VA = "0x6FEB6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x6FEE10", Offset = "0x6FEE10", VA = "0x6FEE10")]
		public HelpWindowBack()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class HelpWindowUI : WindowComponent
	{
		[Token(Token = "0x2000270")]
		private enum SelectType
		{
			[Token(Token = "0x4000AA3")]
			Close
		}

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515CF0", Offset = "0x515CF0")]
		[SerializeField]
		private GameObject helpQuest;

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x6FEE20", Offset = "0x6FEE20", VA = "0x6FEE20")]
		private void InitPlatform()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x6FEE90", Offset = "0x6FEE90", VA = "0x6FEE90")]
		public void ActiveHelpImage(PlatformManager.PlatformType platform)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x6FEEEC", Offset = "0x6FEEEC", VA = "0x6FEEEC", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x6FF008", Offset = "0x6FF008", VA = "0x6FF008", Slot = "12")]
		public override void PostLoad()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x6FF0B4", Offset = "0x6FF0B4", VA = "0x6FF0B4", Slot = "10")]
		protected override void HideCheck()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x6FF0B8", Offset = "0x6FF0B8", VA = "0x6FF0B8", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x6FF0C0", Offset = "0x6FF0C0", VA = "0x6FF0C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x6FF0C4", Offset = "0x6FF0C4", VA = "0x6FF0C4", Slot = "9")]
		protected override void OnDecisionCheck()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x6FF1C8", Offset = "0x6FF1C8", VA = "0x6FF1C8")]
		public void OverrideWindowParam(float height, float cameraRange)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x6FF1D4", Offset = "0x6FF1D4", VA = "0x6FF1D4", Slot = "13")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x6FF278", Offset = "0x6FF278", VA = "0x6FF278", Slot = "14")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x6FF2A4", Offset = "0x6FF2A4", VA = "0x6FF2A4", Slot = "16")]
		public override void SyncSaveData()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x6FF2A8", Offset = "0x6FF2A8", VA = "0x6FF2A8", Slot = "17")]
		public override void UpgradeSaveData()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x6FF2AC", Offset = "0x6FF2AC", VA = "0x6FF2AC")]
		public HelpWindowUI()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class KeepPushEffect : MonoBehaviour
	{
		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject circleGroup;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image circleGauge;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator decisionEffect;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float pushMaxTime;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float toObjDistance;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float toCameraDistance;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float performanceMaxTime;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject window;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float pushTime;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool isPeformance;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool isEnable;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool isDecision;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		private bool isAuto;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isWindowActive;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isCredit;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float performanceTime;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform refPushTransform;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 defaultLocalScale;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 defaultGaugeScale;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x515DBC", Offset = "0x515DBC")]
		private bool <IsPause>k__BackingField;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool isBillboard;

		[Token(Token = "0x170000C6")]
		public bool IsCredit
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x6FF8D8", Offset = "0x6FF8D8", VA = "0x6FF8D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x6FF8E0", Offset = "0x6FF8E0", VA = "0x6FF8E0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public bool IsPause
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0x6FF8EC", Offset = "0x6FF8EC", VA = "0x6FF8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ABDC", Offset = "0x51ABDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0x6FF8F4", Offset = "0x6FF8F4", VA = "0x6FF8F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ABEC", Offset = "0x51ABEC")]
			set
			{
			}
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x6FF900", Offset = "0x6FF900", VA = "0x6FF900")]
		public bool GetIsEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x6FF908", Offset = "0x6FF908", VA = "0x6FF908")]
		public void SetIsEnable(bool param)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x6FF914", Offset = "0x6FF914", VA = "0x6FF914")]
		public bool GetIsAuto()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x6FF91C", Offset = "0x6FF91C", VA = "0x6FF91C")]
		public void SetIsAuto(bool param)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x6FF928", Offset = "0x6FF928", VA = "0x6FF928")]
		public void SetPosAndAngle(Vector3 vPos, Vector3 vLockAtPos)
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x6FFA04", Offset = "0x6FFA04", VA = "0x6FFA04")]
		public void SetScale(Vector3 scale, Vector3 gaugeScale)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x6F89F0", Offset = "0x6F89F0", VA = "0x6F89F0")]
		public void Active(Transform refTransform, bool isWindowActive, bool isBillboard = false, bool isAuto = false)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x6FFAC0", Offset = "0x6FFAC0", VA = "0x6FFAC0")]
		public void SetPushMaxTime(float newValue)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x6F8B0C", Offset = "0x6F8B0C", VA = "0x6F8B0C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x6F8B8C", Offset = "0x6F8B8C", VA = "0x6F8B8C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x6F8988", Offset = "0x6F8988", VA = "0x6F8988")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x6FFAC8", Offset = "0x6FFAC8", VA = "0x6FFAC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x6FFB78", Offset = "0x6FFB78", VA = "0x6FFB78")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x6FFE60", Offset = "0x6FFE60", VA = "0x6FFE60")]
		private void CtrlTypeUpdate()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x700030", Offset = "0x700030", VA = "0x700030")]
		private void AutoTypeUpdate()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x700300", Offset = "0x700300", VA = "0x700300")]
		private void Exe()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x700470", Offset = "0x700470", VA = "0x700470")]
		private void Performace()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x7004F8", Offset = "0x7004F8", VA = "0x7004F8")]
		public bool IsPeformance()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x700500", Offset = "0x700500", VA = "0x700500")]
		public bool IsDicision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x700508", Offset = "0x700508", VA = "0x700508")]
		public void SetDicision(bool flag)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x700514", Offset = "0x700514", VA = "0x700514")]
		public KeepPushEffect()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class SwitchVRCautionPresenter : BaseMonoBehaviour
	{
		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<Image> vrCautionImages;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Canvas canvas;

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x750E78", Offset = "0x750E78", VA = "0x750E78", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x750F84", Offset = "0x750F84", VA = "0x750F84")]
		public void Show(GameDefines.Language language)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x750EDC", Offset = "0x750EDC", VA = "0x750EDC")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x7510C0", Offset = "0x7510C0", VA = "0x7510C0")]
		public SwitchVRCautionPresenter()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class SerifManager : SingletonMonoBehaviour<SerifManager>
	{
		[Token(Token = "0x4000577")]
		private const float serifMinDistance = 0.15f;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x515DEC", Offset = "0x515DEC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515DEC", Offset = "0x515DEC")]
		[SerializeField]
		private Camera mainCamera;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x515E5C", Offset = "0x515E5C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515E5C", Offset = "0x515E5C")]
		[SerializeField]
		private GameObject serifGroupRoot;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x515ECC", Offset = "0x515ECC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515ECC", Offset = "0x515ECC")]
		[SerializeField]
		private TextMeshPro textMesh;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x515F3C", Offset = "0x515F3C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515F3C", Offset = "0x515F3C")]
		[SerializeField]
		private TextMeshProUGUI textMeshNonVR;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x515FAC", Offset = "0x515FAC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x515FAC", Offset = "0x515FAC")]
		[SerializeField]
		private GameObject fixSerifTargetObj;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x51601C", Offset = "0x51601C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51601C", Offset = "0x51601C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x51601C", Offset = "0x51601C")]
		private float textCameraRange;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5160A4", Offset = "0x5160A4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5160A4", Offset = "0x5160A4")]
		[SerializeField]
		private float cameraVecSpeedX;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516114", Offset = "0x516114")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516114", Offset = "0x516114")]
		[SerializeField]
		private float cameraVecSpeedY;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516184", Offset = "0x516184")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516184", Offset = "0x516184")]
		[SerializeField]
		private float viewPortRightRate;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5161F4", Offset = "0x5161F4")]
		[SerializeField]
		private float viewPortLeftRate;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516240", Offset = "0x516240")]
		[SerializeField]
		private float viewPortTopRate;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51628C", Offset = "0x51628C")]
		[SerializeField]
		private float viewPortDownRate;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5162D8", Offset = "0x5162D8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5162D8", Offset = "0x5162D8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5162D8", Offset = "0x5162D8")]
		public float adjustHeight;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516360", Offset = "0x516360")]
		[SerializeField]
		private bool isSpecialMove;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5163AC", Offset = "0x5163AC")]
		private Transform <CatchHand>k__BackingField;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5163BC", Offset = "0x5163BC")]
		private Vector3 <CatchHandFirstPos>k__BackingField;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private SaveData.SerifType serifType;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 prevCameraPos;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 cameraViewPortPos;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float cameraSaveVecSpeedX;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float cameraSaveVecSpeedY;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool dontRender;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool isEnableXMove;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool isChangeBillBoard;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float billBoardChangeRate;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float billBoardBackRate;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int previoulsSubtitleType;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private string savestringID;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool isHoldSubtitle;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 handFirstPos;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 subtitleFirstPos;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private BaseInput.HandType grabType;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int debugCount;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool debugFlag;

		[Token(Token = "0x170000C8")]
		public TextMeshPro TextMesh
		{
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0x6E7B4C", Offset = "0x6E7B4C", VA = "0x6E7B4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0x6E7B54", Offset = "0x6E7B54", VA = "0x6E7B54")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public float TextCameraRange
		{
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0x6E7B5C", Offset = "0x6E7B5C", VA = "0x6E7B5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0x6E7B64", Offset = "0x6E7B64", VA = "0x6E7B64")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public Transform CatchHand
		{
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x6E7B6C", Offset = "0x6E7B6C", VA = "0x6E7B6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ABFC", Offset = "0x51ABFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0x6E7B74", Offset = "0x6E7B74", VA = "0x6E7B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AC0C", Offset = "0x51AC0C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public Vector3 CatchHandFirstPos
		{
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0x6E7B7C", Offset = "0x6E7B7C", VA = "0x6E7B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AC1C", Offset = "0x51AC1C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0x6E7B88", Offset = "0x6E7B88", VA = "0x6E7B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AC2C", Offset = "0x51AC2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public string SaveStringID
		{
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0x6E7B94", Offset = "0x6E7B94", VA = "0x6E7B94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x6DF3BC", Offset = "0x6DF3BC", VA = "0x6DF3BC")]
		public void SettingSerifType(int serifType)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x6E7CDC", Offset = "0x6E7CDC", VA = "0x6E7CDC")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x6E7D80", Offset = "0x6E7D80", VA = "0x6E7D80")]
		public void HoldSerifPos()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x6E8124", Offset = "0x6E8124", VA = "0x6E8124")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x6E82BC", Offset = "0x6E82BC", VA = "0x6E82BC")]
		private void DebugController()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x6E85D0", Offset = "0x6E85D0", VA = "0x6E85D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x6E901C", Offset = "0x6E901C", VA = "0x6E901C")]
		public void FixSubtitle()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x6E8690", Offset = "0x6E8690", VA = "0x6E8690")]
		private void ChaseSubtitle()
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x6E9438", Offset = "0x6E9438", VA = "0x6E9438")]
		public void ResetSubtitlePos()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x6E868C", Offset = "0x6E868C", VA = "0x6E868C")]
		private void SerifUpdatePC()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x6E2064", Offset = "0x6E2064", VA = "0x6E2064")]
		public void CloseText()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x6E95AC", Offset = "0x6E95AC", VA = "0x6E95AC")]
		public void OpenText()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x6E78E8", Offset = "0x6E78E8", VA = "0x6E78E8")]
		public void Again()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x6E76AC", Offset = "0x6E76AC", VA = "0x6E76AC")]
		public void SetSerifID(string stringID, TextManager.StringDataType type = TextManager.StringDataType.Serif, bool inGameVideo = false)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x6E9608", Offset = "0x6E9608", VA = "0x6E9608")]
		private void SetTextObj(TextMeshPro textMesh)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x6E9610", Offset = "0x6E9610", VA = "0x6E9610")]
		public void ChangeHoldSubtitle(bool param, [Optional] Transform handTransform)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x6E7B9C", Offset = "0x6E7B9C", VA = "0x6E7B9C")]
		public void ResetSerifTargetObj()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x6E96CC", Offset = "0x6E96CC", VA = "0x6E96CC")]
		public SerifManager()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class SetUIString : MonoBehaviour
	{
		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5163CC", Offset = "0x5163CC")]
		[SerializeField]
		private string stringID;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516418", Offset = "0x516418")]
		[SerializeField]
		private string attachStringID;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516464", Offset = "0x516464")]
		[SerializeField]
		private string attachStringID2;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameDefines.Language currentLanguage;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool isDontUseScript;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool isNotUGUI;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool isInit;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float charSpacing;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshPro meshPro;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI meshProUGUI;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5164B0", Offset = "0x5164B0")]
		[SerializeField]
		private float stringNum;

		[Token(Token = "0x170000CD")]
		public string StringID
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x6EAA3C", Offset = "0x6EAA3C", VA = "0x6EAA3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x6EAA44", Offset = "0x6EAA44", VA = "0x6EAA44")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public float StringNum
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x6EAA4C", Offset = "0x6EAA4C", VA = "0x6EAA4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x6EAAEC", Offset = "0x6EAAEC", VA = "0x6EAAEC")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x6EAC20", Offset = "0x6EAC20", VA = "0x6EAC20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x6EACB8", Offset = "0x6EACB8", VA = "0x6EACB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x6DB540", Offset = "0x6DB540", VA = "0x6DB540")]
		public void SetString(string ID, string AttachID = "", string AttachID2 = "")
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x6EAD50", Offset = "0x6EAD50", VA = "0x6EAD50")]
		public void Update()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x6EAE00", Offset = "0x6EAE00", VA = "0x6EAE00")]
		public void SetDontUseScript(bool flag)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x6EAE0C", Offset = "0x6EAE0C", VA = "0x6EAE0C")]
		public void ChangeSkipColor(bool flag)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x6EAFFC", Offset = "0x6EAFFC", VA = "0x6EAFFC")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x6DBAB4", Offset = "0x6DBAB4", VA = "0x6DBAB4")]
		public void ChangeFont(TMP_FontAsset font, Material mat, [Optional] string text)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x6EB02C", Offset = "0x6EB02C", VA = "0x6EB02C")]
		public SetUIString()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class TextManager : SingletonMonoBehaviour<TextManager>
	{
		[Token(Token = "0x2000271")]
		public enum StringDataType
		{
			[Token(Token = "0x4000AA5")]
			UI,
			[Token(Token = "0x4000AA6")]
			Serif,
			[Token(Token = "0x4000AA7")]
			Max
		}

		[Token(Token = "0x40005A5")]
		private const string TMP_FONT_LABEL = "TMP_Font";

		[Token(Token = "0x40005A6")]
		private const string TMP_SHADERS_LABEL = "TMP_Shaders";

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UIStringData[] uiStringDataArray;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private DictionaryUIStringData[] dictionaryUIStringDataArray;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isLoaded;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isChangeDictionary;

		[Token(Token = "0x170000CF")]
		public DictionaryUIStringData SerifDataArray
		{
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0x751EAC", Offset = "0x751EAC", VA = "0x751EAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0x751EE4", Offset = "0x751EE4", VA = "0x751EE4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public DictionaryUIStringData UIStringDataArray
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0x751F4C", Offset = "0x751F4C", VA = "0x751F4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0x751F80", Offset = "0x751F80", VA = "0x751F80")]
			set
			{
			}
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x751FE4", Offset = "0x751FE4", VA = "0x751FE4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x7520B4", Offset = "0x7520B4", VA = "0x7520B4")]
		public void LoadStringData()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x7524B4", Offset = "0x7524B4", VA = "0x7524B4")]
		public string GetUIString(string stringID, StringDataType stringDataType)
		{
			return null;
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x7526F0", Offset = "0x7526F0", VA = "0x7526F0")]
		public string GetUIString(int arrayNo, StringDataType stringDataType)
		{
			return null;
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x752934", Offset = "0x752934", VA = "0x752934")]
		private void RegisterDictionary(UIStringData uIString, StringDataType type)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x7522E8", Offset = "0x7522E8", VA = "0x7522E8")]
		private bool RegisterDictionary()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x752AA0", Offset = "0x752AA0", VA = "0x752AA0")]
		public TextManager()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class TitleLogo : MonoBehaviour
	{
		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator jpLogo;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator enLogo;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator tcLogo;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator scLogo;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator activeLogo;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int OpeningAnimHash;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int FadeoutAnimHash;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int FadeinAnimHash;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int IdleAnimHash;

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x757598", Offset = "0x757598", VA = "0x757598")]
		public void Active(GameDefines.Language language)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x75774C", Offset = "0x75774C", VA = "0x75774C")]
		public void ChangeActiveLogo(GameDefines.Language language)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x757838", Offset = "0x757838", VA = "0x757838")]
		public void Open()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x7579F0", Offset = "0x7579F0", VA = "0x7579F0")]
		public void Close()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x757A90", Offset = "0x757A90", VA = "0x757A90")]
		public void ForceOpened()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x757B38", Offset = "0x757B38", VA = "0x757B38")]
		public bool IsAnimation()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x757C2C", Offset = "0x757C2C", VA = "0x757C2C")]
		public TitleLogo()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class ChapterSelectWindow : WindowComponent
	{
		[Token(Token = "0x2000272")]
		private enum ContentsPossession
		{
			[Token(Token = "0x4000AA9")]
			Beginning,
			[Token(Token = "0x4000AAA")]
			Chapter,
			[Token(Token = "0x4000AAB")]
			Space,
			[Token(Token = "0x4000AAC")]
			Back
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x7763EC", Offset = "0x7763EC", VA = "0x7763EC", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x7767C0", Offset = "0x7767C0", VA = "0x7767C0", Slot = "12")]
		public override void PostLoad()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x7767C4", Offset = "0x7767C4", VA = "0x7767C4", Slot = "9")]
		protected override void OnDecisionCheck()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x776AE4", Offset = "0x776AE4", VA = "0x776AE4", Slot = "10")]
		protected override void HideCheck()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x776C4C", Offset = "0x776C4C", VA = "0x776C4C", Slot = "13")]
		public override void OpenWindow(bool dontInitNo = false)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x776C58", Offset = "0x776C58", VA = "0x776C58", Slot = "14")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x776C64", Offset = "0x776C64", VA = "0x776C64")]
		public ChapterSelectWindow()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class DescriptionWindowUI : SingletonMonoBehaviour<DescriptionWindowUI>
	{
		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string uiStringID;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x51654C", Offset = "0x51654C")]
		private float scrollSpeed;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float startPosX;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float maxRenderFontNum;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5165A0", Offset = "0x5165A0")]
		private float fontSize;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI text;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Animator windowAnimator;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float textNum;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x516618", Offset = "0x516618")]
		private float waitTime;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float time;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RectTransform plateTransform;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float plateDefaultScale;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float newLineNum;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float plateScale;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool isActive;

		[Token(Token = "0x170000D1")]
		public float TextNum
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x6F76EC", Offset = "0x6F76EC", VA = "0x6F76EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x6F76F4", Offset = "0x6F76F4", VA = "0x6F76F4")]
			set
			{
			}
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x6F76FC", Offset = "0x6F76FC", VA = "0x6F76FC")]
		public void SetTransform(Transform _transform, float addY)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x6F790C", Offset = "0x6F790C", VA = "0x6F790C")]
		public void Open()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x6F79F0", Offset = "0x6F79F0", VA = "0x6F79F0")]
		public void Close()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x6F7A64", Offset = "0x6F7A64", VA = "0x6F7A64")]
		public void SetString(string stringID, string AttachID = "")
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x6F7C00", Offset = "0x6F7C00", VA = "0x6F7C00")]
		private void ScrollUpdate()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x6F7B8C", Offset = "0x6F7B8C", VA = "0x6F7B8C")]
		private void PosReset()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x6F7DBC", Offset = "0x6F7DBC", VA = "0x6F7DBC")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x6F7ED0", Offset = "0x6F7ED0", VA = "0x6F7ED0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x6F7F58", Offset = "0x6F7F58", VA = "0x6F7F58")]
		public DescriptionWindowUI()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class MainWindowFrame : WindowFrameComponent
	{
		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516688", Offset = "0x516688")]
		[SerializeField]
		protected RectTransform frame;

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x703110", Offset = "0x703110", VA = "0x703110", Slot = "4")]
		public override void SetSizeDelta(Vector2 size)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x703164", Offset = "0x703164", VA = "0x703164")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x70321C", Offset = "0x70321C", VA = "0x70321C")]
		public MainWindowFrame()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class WindowFrameComponent : MonoBehaviour
	{
		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5166D4", Offset = "0x5166D4")]
		[SerializeField]
		protected RectTransform mainWindow;

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x7604A8", Offset = "0x7604A8", VA = "0x7604A8", Slot = "4")]
		public virtual void SetSizeDelta(Vector2 size)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x7604C4", Offset = "0x7604C4", VA = "0x7604C4", Slot = "5")]
		public virtual Vector2 GetSizeDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x7604E0", Offset = "0x7604E0", VA = "0x7604E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x760550", Offset = "0x760550", VA = "0x760550")]
		public WindowFrameComponent()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class NamePlate : MonoBehaviour
	{
		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516720", Offset = "0x516720")]
		[SerializeField]
		private SetUIString title;

		[Token(Token = "0x170000D2")]
		public SetUIString Title
		{
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x70322C", Offset = "0x70322C", VA = "0x70322C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x703234", Offset = "0x703234", VA = "0x703234")]
			set
			{
			}
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x70323C", Offset = "0x70323C", VA = "0x70323C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x7032AC", Offset = "0x7032AC", VA = "0x7032AC")]
		public NamePlate()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class OptionWindow : WindowComponent
	{
		[Token(Token = "0x2000273")]
		private enum ContentsPossession
		{
			[Token(Token = "0x4000AAE")]
			Settings,
			[Token(Token = "0x4000AAF")]
			Help,
			[Token(Token = "0x4000AB0")]
			Skip,
			[Token(Token = "0x4000AB1")]
			BackTitle,
			[Token(Token = "0x4000AB2")]
			HideWindow,
			[Token(Token = "0x4000AB3")]
			Space,
			[Token(Token = "0x4000AB4")]
			Back
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x703340", Offset = "0x703340", VA = "0x703340", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x703718", Offset = "0x703718", VA = "0x703718", Slot = "12")]
		public override void PostLoad()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x70371C", Offset = "0x70371C", VA = "0x70371C", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x703724", Offset = "0x703724", VA = "0x703724", Slot = "9")]
		protected override void OnDecisionCheck()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x703B30", Offset = "0x703B30", VA = "0x703B30", Slot = "10")]
		protected override void HideCheck()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x703D28", Offset = "0x703D28", VA = "0x703D28", Slot = "13")]
		public override void OpenWindow(bool dontInitNo = false)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x703D34", Offset = "0x703D34", VA = "0x703D34", Slot = "14")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x703D40", Offset = "0x703D40", VA = "0x703D40")]
		public OptionWindow()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class PS4VRorNonVRCheckWindow : WindowComponent
	{
		[Token(Token = "0x2000274")]
		private enum ContentsPossession
		{
			[Token(Token = "0x4000AB6")]
			Ok,
			[Token(Token = "0x4000AB7")]
			No
		}

		[Token(Token = "0x2000275")]
		public enum AsType
		{
			[Token(Token = "0x4000AB9")]
			VRConnect
		}

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x51676C", Offset = "0x51676C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51676C", Offset = "0x51676C")]
		[SerializeField]
		private SetUIString generalWindowTitle;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5167DC", Offset = "0x5167DC")]
		private AsType asType;

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x6DB388", Offset = "0x6DB388", VA = "0x6DB388", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x6DB7FC", Offset = "0x6DB7FC", VA = "0x6DB7FC", Slot = "12")]
		public override void PostLoad()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x6DB800", Offset = "0x6DB800", VA = "0x6DB800", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x6DB868", Offset = "0x6DB868", VA = "0x6DB868", Slot = "9")]
		protected override void OnDecisionCheck()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x6DB890", Offset = "0x6DB890", VA = "0x6DB890", Slot = "10")]
		protected override void HideCheck()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x6DB928", Offset = "0x6DB928", VA = "0x6DB928", Slot = "13")]
		public override void OpenWindow(bool dontInitNo = false)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x6DB934", Offset = "0x6DB934", VA = "0x6DB934", Slot = "14")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x6DB940", Offset = "0x6DB940", VA = "0x6DB940", Slot = "16")]
		public override void SyncSaveData()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x6DBDC0", Offset = "0x6DBDC0", VA = "0x6DBDC0", Slot = "17")]
		public override void UpgradeSaveData()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x6DBDC4", Offset = "0x6DBDC4", VA = "0x6DBDC4")]
		public PS4VRorNonVRCheckWindow()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class PopupWindowParamObj : ScriptableObject
	{
		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516814", Offset = "0x516814")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516814", Offset = "0x516814")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x516814", Offset = "0x516814")]
		protected float adjustPopupWindowHeightSize;

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x6DD2D0", Offset = "0x6DD2D0", VA = "0x6DD2D0")]
		public PopupWindowParamObj()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class WindowParamObj : ScriptableObject
	{
		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x51689C", Offset = "0x51689C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51689C", Offset = "0x51689C")]
		[SerializeField]
		public bool isStartOpenWindow;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x51690C", Offset = "0x51690C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51690C", Offset = "0x51690C")]
		[SerializeField]
		public bool receiveInput;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x51697C", Offset = "0x51697C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51697C", Offset = "0x51697C")]
		[SerializeField]
		public int priority;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5169EC", Offset = "0x5169EC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5169EC", Offset = "0x5169EC")]
		[SerializeField]
		public bool isChase;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516A5C", Offset = "0x516A5C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516A5C", Offset = "0x516A5C")]
		[SerializeField]
		public float chaseCameraRange;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516ACC", Offset = "0x516ACC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516ACC", Offset = "0x516ACC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x516ACC", Offset = "0x516ACC")]
		public float windowHeight;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516B54", Offset = "0x516B54")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516B54", Offset = "0x516B54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x516B54", Offset = "0x516B54")]
		public float descriptionYPos;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516BDC", Offset = "0x516BDC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516BDC", Offset = "0x516BDC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x516BDC", Offset = "0x516BDC")]
		public float frameWidth;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516C64", Offset = "0x516C64")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516C64", Offset = "0x516C64")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x516C64", Offset = "0x516C64")]
		public float frameAddHeight;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516CEC", Offset = "0x516CEC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516CEC", Offset = "0x516CEC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516CEC", Offset = "0x516CEC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x516CEC", Offset = "0x516CEC")]
		public float adjustHeightSize;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516D98", Offset = "0x516D98")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516D98", Offset = "0x516D98")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x516D98", Offset = "0x516D98")]
		public float adjustWindowHeightSize;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516E20", Offset = "0x516E20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516E20", Offset = "0x516E20")]
		[SerializeField]
		public Vector3 windowsLocalPos;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516E90", Offset = "0x516E90")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x516E90", Offset = "0x516E90")]
		[SerializeField]
		public Vector3 contentsGroupLocalPos;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516F00", Offset = "0x516F00")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x516F00", Offset = "0x516F00")]
		public float contentsGroupLocalScale;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516F68", Offset = "0x516F68")]
		[SerializeField]
		public float lineAddWidth;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x516FB4", Offset = "0x516FB4")]
		[SerializeField]
		public float lineAddHeight;

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x761508", Offset = "0x761508", VA = "0x761508")]
		public WindowParamObj()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class PopupWindow : WindowComponent
	{
		[Token(Token = "0x2000276")]
		private enum ContentsPossession
		{
			[Token(Token = "0x4000ABB")]
			Ok,
			[Token(Token = "0x4000ABC")]
			No
		}

		[Token(Token = "0x2000277")]
		public enum AsType
		{
			[Token(Token = "0x4000ABE")]
			BackTitle,
			[Token(Token = "0x4000ABF")]
			EndGame,
			[Token(Token = "0x4000AC0")]
			Rest,
			[Token(Token = "0x4000AC1")]
			VRConnect
		}

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517000", Offset = "0x517000")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517000", Offset = "0x517000")]
		[SerializeField]
		private SetUIString generalWindowTitle;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517070", Offset = "0x517070")]
		private AsType asType;

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x6DCD9C", Offset = "0x6DCD9C", VA = "0x6DCD9C", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x6DCF34", Offset = "0x6DCF34", VA = "0x6DCF34", Slot = "12")]
		public override void PostLoad()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x6DCF38", Offset = "0x6DCF38", VA = "0x6DCF38", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x6DCFA0", Offset = "0x6DCFA0", VA = "0x6DCFA0", Slot = "9")]
		protected override void OnDecisionCheck()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x6DD158", Offset = "0x6DD158", VA = "0x6DD158", Slot = "10")]
		protected override void HideCheck()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x6DD228", Offset = "0x6DD228", VA = "0x6DD228", Slot = "13")]
		public override void OpenWindow(bool dontInitNo = false)
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x6DD234", Offset = "0x6DD234", VA = "0x6DD234", Slot = "14")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x6DD240", Offset = "0x6DD240", VA = "0x6DD240", Slot = "16")]
		public override void SyncSaveData()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x6DD244", Offset = "0x6DD244", VA = "0x6DD244", Slot = "17")]
		public override void UpgradeSaveData()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x6DD248", Offset = "0x6DD248", VA = "0x6DD248", Slot = "19")]
		public override void ResetPopupName(AsType type, string uiTitleStringID)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x6DD2C0", Offset = "0x6DD2C0", VA = "0x6DD2C0", Slot = "21")]
		protected override bool CanInputInFade()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x6DD2C8", Offset = "0x6DD2C8", VA = "0x6DD2C8")]
		public PopupWindow()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class RenderSettingWindow : WindowComponent
	{
		[Token(Token = "0x2000278")]
		private enum ContentsPossession
		{
			[Token(Token = "0x4000AC3")]
			Resolution,
			[Token(Token = "0x4000AC4")]
			Tessellation,
			[Token(Token = "0x4000AC5")]
			Space,
			[Token(Token = "0x4000AC6")]
			Decide,
			[Token(Token = "0x4000AC7")]
			Back
		}

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int prevScreenSize;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int prevTessellation;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int currentScreenSize;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int currentTessellation;

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x6DD8AC", Offset = "0x6DD8AC", VA = "0x6DD8AC", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x6DDD58", Offset = "0x6DDD58", VA = "0x6DDD58", Slot = "12")]
		public override void PostLoad()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x6DDD5C", Offset = "0x6DDD5C", VA = "0x6DDD5C", Slot = "9")]
		protected override void OnDecisionCheck()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x6DDF5C", Offset = "0x6DDF5C", VA = "0x6DDF5C", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x6DE1CC", Offset = "0x6DE1CC", VA = "0x6DE1CC", Slot = "10")]
		protected override void HideCheck()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x6DE1D0", Offset = "0x6DE1D0", VA = "0x6DE1D0", Slot = "20")]
		public override void ChangeSelectContent(bool isAnim = true, bool playSE = true)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x6DE310", Offset = "0x6DE310", VA = "0x6DE310", Slot = "13")]
		public override void OpenWindow(bool dontInitNo = false)
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x6DE31C", Offset = "0x6DE31C", VA = "0x6DE31C", Slot = "14")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x6DE328", Offset = "0x6DE328", VA = "0x6DE328", Slot = "16")]
		public override void SyncSaveData()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x6DE498", Offset = "0x6DE498", VA = "0x6DE498", Slot = "17")]
		public override void UpgradeSaveData()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x6DE8C8", Offset = "0x6DE8C8", VA = "0x6DE8C8")]
		public RenderSettingWindow()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class SelectLanguageWindow : WindowComponent
	{
		[Token(Token = "0x2000279")]
		private enum ContentsPossession
		{
			[Token(Token = "0x4000AC9")]
			Jp,
			[Token(Token = "0x4000ACA")]
			En,
			[Token(Token = "0x4000ACB")]
			Tc,
			[Token(Token = "0x4000ACC")]
			Sc,
			[Token(Token = "0x4000ACD")]
			Space,
			[Token(Token = "0x4000ACE")]
			Back,
			[Token(Token = "0x4000ACF")]
			Max
		}

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Material jpenMat;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Material tcMat;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Material scMat;

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x6E6BB4", Offset = "0x6E6BB4", VA = "0x6E6BB4", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x6E6E4C", Offset = "0x6E6E4C", VA = "0x6E6E4C", Slot = "12")]
		public override void PostLoad()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x6E72B0", Offset = "0x6E72B0", VA = "0x6E72B0", Slot = "9")]
		protected override void OnDecisionCheck()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x6E7524", Offset = "0x6E7524", VA = "0x6E7524", Slot = "10")]
		protected override void HideCheck()
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x6E7528", Offset = "0x6E7528", VA = "0x6E7528", Slot = "13")]
		public override void OpenWindow(bool dontInitNo = false)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x6E7534", Offset = "0x6E7534", VA = "0x6E7534", Slot = "14")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x6E7540", Offset = "0x6E7540", VA = "0x6E7540", Slot = "16")]
		public override void SyncSaveData()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x6E75C8", Offset = "0x6E75C8", VA = "0x6E75C8", Slot = "17")]
		public override void UpgradeSaveData()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x6E6E50", Offset = "0x6E6E50", VA = "0x6E6E50")]
		private void ChangeLanguage()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x6E75CC", Offset = "0x6E75CC", VA = "0x6E75CC")]
		public SelectLanguageWindow()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class SerifSettingWindow : WindowComponent
	{
		[Token(Token = "0x200027A")]
		private enum ContentsPossession
		{
			[Token(Token = "0x4000AD1")]
			Serif,
			[Token(Token = "0x4000AD2")]
			Space,
			[Token(Token = "0x4000AD3")]
			Reset,
			[Token(Token = "0x4000AD4")]
			Decide,
			[Token(Token = "0x4000AD5")]
			Back
		}

		[Token(Token = "0x200027B")]
		private enum SerifList
		{
			[Token(Token = "0x4000AD7")]
			Nothing,
			[Token(Token = "0x4000AD8")]
			Chace,
			[Token(Token = "0x4000AD9")]
			FreezeOrMove,
			[Token(Token = "0x4000ADA")]
			Max
		}

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private string chaseDescriptionID;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private string freezeOrMoveDescriptionID;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int serifTypeListNum;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Switching serifSwitching;

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x6E9780", Offset = "0x6E9780", VA = "0x6E9780", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x6E9BC4", Offset = "0x6E9BC4", VA = "0x6E9BC4", Slot = "12")]
		public override void PostLoad()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x6E9DC8", Offset = "0x6E9DC8", VA = "0x6E9DC8", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x6EA078", Offset = "0x6EA078", VA = "0x6EA078")]
		private void UpdateSerifSettings(Switching switching, bool openWindow = false)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x6E9EC0", Offset = "0x6E9EC0", VA = "0x6E9EC0")]
		private void CheckChangeSetting()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x6EA4C0", Offset = "0x6EA4C0", VA = "0x6EA4C0", Slot = "9")]
		protected override void OnDecisionCheck()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x6EA6E4", Offset = "0x6EA6E4", VA = "0x6EA6E4", Slot = "10")]
		protected override void HideCheck()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x6EA794", Offset = "0x6EA794", VA = "0x6EA794", Slot = "13")]
		public override void OpenWindow(bool dontInitNo = false)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x6EA7C8", Offset = "0x6EA7C8", VA = "0x6EA7C8", Slot = "14")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x6EA7D4", Offset = "0x6EA7D4", VA = "0x6EA7D4", Slot = "16")]
		public override void SyncSaveData()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x6EA908", Offset = "0x6EA908", VA = "0x6EA908", Slot = "17")]
		public override void UpgradeSaveData()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x6EA9E4", Offset = "0x6EA9E4", VA = "0x6EA9E4")]
		public SerifSettingWindow()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class SettingWindow : WindowComponent
	{
		[Token(Token = "0x200027C")]
		private enum ContentsPossession
		{
			[Token(Token = "0x4000ADC")]
			Sound,
			[Token(Token = "0x4000ADD")]
			Render,
			[Token(Token = "0x4000ADE")]
			Serif,
			[Token(Token = "0x4000ADF")]
			Space,
			[Token(Token = "0x4000AE0")]
			Back
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x6EB088", Offset = "0x6EB088", VA = "0x6EB088", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x6EB2CC", Offset = "0x6EB2CC", VA = "0x6EB2CC", Slot = "12")]
		public override void PostLoad()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x6EB2D0", Offset = "0x6EB2D0", VA = "0x6EB2D0", Slot = "9")]
		protected override void OnDecisionCheck()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x6EB474", Offset = "0x6EB474", VA = "0x6EB474", Slot = "10")]
		protected override void HideCheck()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x6EB4E8", Offset = "0x6EB4E8", VA = "0x6EB4E8", Slot = "13")]
		public override void OpenWindow(bool dontInitNo = false)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x6EB4F4", Offset = "0x6EB4F4", VA = "0x6EB4F4", Slot = "14")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x6EB500", Offset = "0x6EB500", VA = "0x6EB500")]
		public SettingWindow()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class SkipWindow : WindowComponent
	{
		[Token(Token = "0x200027D")]
		private enum ContentsPossession
		{
			[Token(Token = "0x4000AE2")]
			Skip,
			[Token(Token = "0x4000AE3")]
			Space1,
			[Token(Token = "0x4000AE4")]
			Space2,
			[Token(Token = "0x4000AE5")]
			Chapter,
			[Token(Token = "0x4000AE6")]
			Space3,
			[Token(Token = "0x4000AE7")]
			Space4,
			[Token(Token = "0x4000AE8")]
			Back
		}

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private ChapterSelect chapterSelectUI;

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x6ECC0C", Offset = "0x6ECC0C", VA = "0x6ECC0C", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x6ED128", Offset = "0x6ED128", VA = "0x6ED128", Slot = "12")]
		public override void PostLoad()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x6ED1D8", Offset = "0x6ED1D8", VA = "0x6ED1D8", Slot = "9")]
		protected override void OnDecisionCheck()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x6ED34C", Offset = "0x6ED34C", VA = "0x6ED34C", Slot = "11")]
		public override void RefreshUI()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x6ED508", Offset = "0x6ED508", VA = "0x6ED508", Slot = "10")]
		protected override void HideCheck()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x6ED760", Offset = "0x6ED760", VA = "0x6ED760", Slot = "13")]
		public override void OpenWindow(bool dontInitNo = false)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x6ED8AC", Offset = "0x6ED8AC", VA = "0x6ED8AC", Slot = "14")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x6ED8B8", Offset = "0x6ED8B8", VA = "0x6ED8B8", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x6ED8C0", Offset = "0x6ED8C0", VA = "0x6ED8C0", Slot = "7")]
		public override void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x6ED8C8", Offset = "0x6ED8C8", VA = "0x6ED8C8")]
		public SkipWindow()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class SoundSettingWindow : WindowComponent
	{
		[Token(Token = "0x200027E")]
		private enum ContentsPossession
		{
			[Token(Token = "0x4000AEA")]
			BGM,
			[Token(Token = "0x4000AEB")]
			SE,
			[Token(Token = "0x4000AEC")]
			VoiceLabel,
			[Token(Token = "0x4000AED")]
			Holo,
			[Token(Token = "0x4000AEE")]
			Lawrence,
			[Token(Token = "0x4000AEF")]
			Myuri,
			[Token(Token = "0x4000AF0")]
			Space,
			[Token(Token = "0x4000AF1")]
			Reset,
			[Token(Token = "0x4000AF2")]
			Decide,
			[Token(Token = "0x4000AF3")]
			Back
		}

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool m_voiceSetting;

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x74EAAC", Offset = "0x74EAAC", VA = "0x74EAAC", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x74F4B0", Offset = "0x74F4B0", VA = "0x74F4B0", Slot = "12")]
		public override void PostLoad()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x74F4B4", Offset = "0x74F4B4", VA = "0x74F4B4", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x74F79C", Offset = "0x74F79C", VA = "0x74F79C")]
		private void CheckChangeVolume()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x74FA8C", Offset = "0x74FA8C", VA = "0x74FA8C", Slot = "9")]
		protected override void OnDecisionCheck()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x74FE84", Offset = "0x74FE84", VA = "0x74FE84", Slot = "15")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x74FF38", Offset = "0x74FF38", VA = "0x74FF38", Slot = "10")]
		protected override void HideCheck()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x74FF3C", Offset = "0x74FF3C", VA = "0x74FF3C", Slot = "13")]
		public override void OpenWindow(bool dontInitNo = false)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x750188", Offset = "0x750188", VA = "0x750188", Slot = "14")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x750348", Offset = "0x750348", VA = "0x750348", Slot = "16")]
		public override void SyncSaveData()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x750538", Offset = "0x750538", VA = "0x750538", Slot = "17")]
		public override void UpgradeSaveData()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x750788", Offset = "0x750788", VA = "0x750788")]
		public SoundSettingWindow()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class SwitchCameraWindow : WindowComponent
	{
		[Token(Token = "0x200027F")]
		private enum ContentsPossession
		{
			[Token(Token = "0x4000AF5")]
			RStick,
			[Token(Token = "0x4000AF6")]
			Gyro,
			[Token(Token = "0x4000AF7")]
			VRGoggle,
			[Token(Token = "0x4000AF8")]
			Space,
			[Token(Token = "0x4000AF9")]
			Back
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x750C18", Offset = "0x750C18", VA = "0x750C18", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x750E58", Offset = "0x750E58", VA = "0x750E58", Slot = "12")]
		public override void PostLoad()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x750E5C", Offset = "0x750E5C", VA = "0x750E5C", Slot = "9")]
		protected override void OnDecisionCheck()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x750E60", Offset = "0x750E60", VA = "0x750E60", Slot = "10")]
		protected override void HideCheck()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x750E64", Offset = "0x750E64", VA = "0x750E64", Slot = "13")]
		public override void OpenWindow(bool dontInitNo = false)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x750E6C", Offset = "0x750E6C", VA = "0x750E6C", Slot = "14")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x750E74", Offset = "0x750E74", VA = "0x750E74")]
		public SwitchCameraWindow()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class TitleWindow : WindowComponent
	{
		[Token(Token = "0x2000280")]
		private enum ContentsPossession
		{
			[Token(Token = "0x4000AFB")]
			MainStory,
			[Token(Token = "0x4000AFC")]
			AnimMode,
			[Token(Token = "0x4000AFD")]
			Option,
			[Token(Token = "0x4000AFE")]
			LanguageSettings,
			[Token(Token = "0x4000AFF")]
			EndGame
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x758D3C", Offset = "0x758D3C", VA = "0x758D3C", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x75905C", Offset = "0x75905C", VA = "0x75905C", Slot = "12")]
		public override void PostLoad()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x759060", Offset = "0x759060", VA = "0x759060", Slot = "9")]
		protected override void OnDecisionCheck()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x759368", Offset = "0x759368", VA = "0x759368", Slot = "10")]
		protected override void HideCheck()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x75948C", Offset = "0x75948C", VA = "0x75948C", Slot = "13")]
		public override void OpenWindow(bool dontInitNo = false)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x759494", Offset = "0x759494", VA = "0x759494", Slot = "14")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x75949C", Offset = "0x75949C", VA = "0x75949C")]
		public TitleWindow()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class Button : WidgetComponent
	{
		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5170D8", Offset = "0x5170D8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5170D8", Offset = "0x5170D8")]
		[SerializeField]
		private GameObject selectionMark;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517148", Offset = "0x517148")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517148", Offset = "0x517148")]
		[SerializeField]
		private Animator decisionEffect;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5171B8", Offset = "0x5171B8")]
		[SerializeField]
		private GameObject arrowL;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GameObject arrowR;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool isActiveDecisionEffect;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool isDecision;

		[Token(Token = "0x170000D3")]
		public GameObject SelectionMark
		{
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x7743C4", Offset = "0x7743C4", VA = "0x7743C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x7743CC", Offset = "0x7743CC", VA = "0x7743CC")]
			set
			{
			}
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x7743D4", Offset = "0x7743D4", VA = "0x7743D4", Slot = "9")]
		protected override bool OnInit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x7744B0", Offset = "0x7744B0", VA = "0x7744B0", Slot = "10")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x774654", Offset = "0x774654", VA = "0x774654", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x77476C", Offset = "0x77476C", VA = "0x77476C", Slot = "14")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x7747CC", Offset = "0x7747CC", VA = "0x7747CC", Slot = "11")]
		public override bool IsDecision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x7747D4", Offset = "0x7747D4", VA = "0x7747D4", Slot = "12")]
		public override void OnSelected(bool isAnim = true)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x774888", Offset = "0x774888", VA = "0x774888", Slot = "13")]
		public override void OnNotSelected()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x77492C", Offset = "0x77492C", VA = "0x77492C")]
		public void SetArrowXOffset(float x)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x774A7C", Offset = "0x774A7C", VA = "0x774A7C")]
		public Button()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class ChapterSelect : Switching
	{
		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517214", Offset = "0x517214")]
		private int <ListMax>k__BackingField;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private ButtonLaserPointerCollider decisionButton;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private LeftSwitchingLaserPointer leftSwLaserPointer;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private RightSwitchingLaserPointer rightSwLaserPointer;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private KeepPushEffect keepPushEffectUI;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool isValid;

		[Token(Token = "0x170000D4")]
		public int ListMax
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x775760", Offset = "0x775760", VA = "0x775760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AC3C", Offset = "0x51AC3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x775768", Offset = "0x775768", VA = "0x775768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AC4C", Offset = "0x51AC4C")]
			set
			{
			}
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x775770", Offset = "0x775770", VA = "0x775770", Slot = "9")]
		protected override bool OnInit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x7758A8", Offset = "0x7758A8", VA = "0x7758A8", Slot = "10")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x775B48", Offset = "0x775B48", VA = "0x775B48", Slot = "20")]
		protected override void CountUp()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x775C4C", Offset = "0x775C4C", VA = "0x775C4C", Slot = "21")]
		protected override void CountDown()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x775D4C", Offset = "0x775D4C", VA = "0x775D4C", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x775D88", Offset = "0x775D88", VA = "0x775D88", Slot = "22")]
		protected override void ChangeStringUpdate()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x775F44", Offset = "0x775F44", VA = "0x775F44", Slot = "23")]
		protected override void CheckLimit()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x776034", Offset = "0x776034", VA = "0x776034", Slot = "14")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x776070", Offset = "0x776070", VA = "0x776070", Slot = "12")]
		public override void OnSelected(bool isAnim = true)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x7760AC", Offset = "0x7760AC", VA = "0x7760AC", Slot = "13")]
		public override void OnNotSelected()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x776158", Offset = "0x776158", VA = "0x776158", Slot = "11")]
		public override bool IsDecision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x776234", Offset = "0x776234", VA = "0x776234", Slot = "24")]
		public override void LeftSwitchLaserPoint()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x776304", Offset = "0x776304", VA = "0x776304", Slot = "25")]
		public override void RightSwitchLaserPoint()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x7763DC", Offset = "0x7763DC", VA = "0x7763DC")]
		public ChapterSelect()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public abstract class BaseLaserPointerCollider : MonoBehaviour
	{
		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isHit;

		[Token(Token = "0x170000D5")]
		public bool IsHit
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0x774384", Offset = "0x774384", VA = "0x774384")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0x77438C", Offset = "0x77438C", VA = "0x77438C")]
			set
			{
			}
		}

		[Token(Token = "0x6000CB5")]
		public abstract void Hit();

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x774398", Offset = "0x774398", VA = "0x774398")]
		protected BaseLaserPointerCollider()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class ButtonLaserPointerCollider : BaseLaserPointerCollider
	{
		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517254", Offset = "0x517254")]
		[SerializeField]
		private WidgetComponent script;

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x774A84", Offset = "0x774A84", VA = "0x774A84", Slot = "4")]
		public override void Hit()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x774ABC", Offset = "0x774ABC", VA = "0x774ABC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x774B2C", Offset = "0x774B2C", VA = "0x774B2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x774B30", Offset = "0x774B30", VA = "0x774B30")]
		public ButtonLaserPointerCollider()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class LeftSwitchingLaserPointer : BaseLaserPointerCollider
	{
		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5172A0", Offset = "0x5172A0")]
		[SerializeField]
		private Switching script;

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x700F74", Offset = "0x700F74", VA = "0x700F74", Slot = "4")]
		public override void Hit()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x700FB4", Offset = "0x700FB4", VA = "0x700FB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x701024", Offset = "0x701024", VA = "0x701024")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x70104C", Offset = "0x70104C", VA = "0x70104C")]
		public LeftSwitchingLaserPointer()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class RightSwitchingLaserPointer : BaseLaserPointerCollider
	{
		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5172EC", Offset = "0x5172EC")]
		[SerializeField]
		private Switching script;

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x6DED5C", Offset = "0x6DED5C", VA = "0x6DED5C", Slot = "4")]
		public override void Hit()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x6DED9C", Offset = "0x6DED9C", VA = "0x6DED9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x6DEE0C", Offset = "0x6DEE0C", VA = "0x6DEE0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x6DEE34", Offset = "0x6DEE34", VA = "0x6DEE34")]
		public RightSwitchingLaserPointer()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class SeekBarLaserPointer : BaseLaserPointerCollider
	{
		[Token(Token = "0x2000281")]
		public enum HoldType
		{
			[Token(Token = "0x4000B01")]
			Idle,
			[Token(Token = "0x4000B02")]
			Hold,
			[Token(Token = "0x4000B03")]
			Release
		}

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517338", Offset = "0x517338")]
		[SerializeField]
		private BoxCollider collider;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 handleColliderOrgScale;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 handleColliderHoldScale;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517384", Offset = "0x517384")]
		[SerializeField]
		private SeekBar script;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HoldType holdType;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 holdPos;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float saveRate;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float diff;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5173D0", Offset = "0x5173D0")]
		private float <MoveScale>k__BackingField;

		[Token(Token = "0x170000D6")]
		public HoldType Type
		{
			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0x6E6558", Offset = "0x6E6558", VA = "0x6E6558")]
			get
			{
				return default(HoldType);
			}
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0x6E6560", Offset = "0x6E6560", VA = "0x6E6560")]
			set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public float MoveScale
		{
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0x6E6594", Offset = "0x6E6594", VA = "0x6E6594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AC5C", Offset = "0x51AC5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0x6E659C", Offset = "0x6E659C", VA = "0x6E659C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AC6C", Offset = "0x51AC6C")]
			set
			{
			}
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x6E65A4", Offset = "0x6E65A4", VA = "0x6E65A4", Slot = "4")]
		public override void Hit()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x6E6808", Offset = "0x6E6808", VA = "0x6E6808")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x6E680C", Offset = "0x6E680C", VA = "0x6E680C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x6E6814", Offset = "0x6E6814", VA = "0x6E6814")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x6E68B4", Offset = "0x6E68B4", VA = "0x6E68B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x6E6B18", Offset = "0x6E6B18", VA = "0x6E6B18")]
		public SeekBarLaserPointer()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class SeekBar : WidgetComponent
	{
		[Token(Token = "0x2000282")]
		public enum ChangeRatePlaySoundType
		{
			[Token(Token = "0x4000B05")]
			None,
			[Token(Token = "0x4000B06")]
			Holo,
			[Token(Token = "0x4000B07")]
			Lawrence,
			[Token(Token = "0x4000B08")]
			Myuri
		}

		[Token(Token = "0x4000601")]
		private const int ResetParameter = 100;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5173E0", Offset = "0x5173E0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5173E0", Offset = "0x5173E0")]
		[SerializeField]
		protected GameObject selectionMark;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool isDecision;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517450", Offset = "0x517450")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517450", Offset = "0x517450")]
		[SerializeField]
		protected Slider slider;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5174C0", Offset = "0x5174C0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5174C0", Offset = "0x5174C0")]
		[SerializeField]
		protected Image handle;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517530", Offset = "0x517530")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517530", Offset = "0x517530")]
		[SerializeField]
		protected Image handleAdditive;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5175A0", Offset = "0x5175A0")]
		[SerializeField]
		protected Image fill;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5175EC", Offset = "0x5175EC")]
		[SerializeField]
		protected int maxRate;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		protected TextMeshProUGUI nowValueText;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517648", Offset = "0x517648")]
		private int <Rate>k__BackingField;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Vector3 originalHandleArrowScale;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517658", Offset = "0x517658")]
		private int <PrevRate>k__BackingField;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517668", Offset = "0x517668")]
		private ChangeRatePlaySoundType <PlaySoundType>k__BackingField;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float voiceTime;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float voiceTimeMax;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool isPlayVoice;

		[Token(Token = "0x170000D8")]
		public int MaxRate
		{
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x6E585C", Offset = "0x6E585C", VA = "0x6E585C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0x6E5864", Offset = "0x6E5864", VA = "0x6E5864")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public TextMeshProUGUI NowValueText
		{
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x6E586C", Offset = "0x6E586C", VA = "0x6E586C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x6E5874", Offset = "0x6E5874", VA = "0x6E5874")]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public int Rate
		{
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x6E587C", Offset = "0x6E587C", VA = "0x6E587C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AC7C", Offset = "0x51AC7C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0x6E5884", Offset = "0x6E5884", VA = "0x6E5884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AC8C", Offset = "0x51AC8C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public int PrevRate
		{
			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0x6E588C", Offset = "0x6E588C", VA = "0x6E588C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AC9C", Offset = "0x51AC9C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0x6E5894", Offset = "0x6E5894", VA = "0x6E5894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ACAC", Offset = "0x51ACAC")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public ChangeRatePlaySoundType PlaySoundType
		{
			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x6E589C", Offset = "0x6E589C", VA = "0x6E589C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ACBC", Offset = "0x51ACBC")]
			get
			{
				return default(ChangeRatePlaySoundType);
			}
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x6E58A4", Offset = "0x6E58A4", VA = "0x6E58A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ACCC", Offset = "0x51ACCC")]
			set
			{
			}
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x6E58AC", Offset = "0x6E58AC", VA = "0x6E58AC")]
		private void CheckChangeParam()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x6E5B50", Offset = "0x6E5B50", VA = "0x6E5B50", Slot = "9")]
		protected override bool OnInit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x6E5D50", Offset = "0x6E5D50", VA = "0x6E5D50", Slot = "10")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x6E5F8C", Offset = "0x6E5F8C", VA = "0x6E5F8C", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x6E60C8", Offset = "0x6E60C8", VA = "0x6E60C8", Slot = "14")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x6E6104", Offset = "0x6E6104", VA = "0x6E6104", Slot = "11")]
		public override bool IsDecision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x6E610C", Offset = "0x6E610C", VA = "0x6E610C", Slot = "12")]
		public override void OnSelected(bool isAnim = true)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x6E6148", Offset = "0x6E6148", VA = "0x6E6148", Slot = "13")]
		public override void OnNotSelected()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x6E6188", Offset = "0x6E6188", VA = "0x6E6188", Slot = "20")]
		public virtual void HandleHoldLaserPoint()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x6E61B8", Offset = "0x6E61B8", VA = "0x6E61B8", Slot = "21")]
		public virtual void CheckHandleHoldLaserPoint(bool hit, bool hold)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x6E6264", Offset = "0x6E6264", VA = "0x6E6264", Slot = "22")]
		public virtual void HoldHandle(bool hold)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x6E6268", Offset = "0x6E6268", VA = "0x6E6268")]
		public void ResetVolume()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x6E6278", Offset = "0x6E6278", VA = "0x6E6278")]
		public void LeftSwitchLaserPoint()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x6E63D8", Offset = "0x6E63D8", VA = "0x6E63D8")]
		public void RightSwitchLaserPoint()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x6E653C", Offset = "0x6E653C", VA = "0x6E653C")]
		public SeekBar()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class Skip : SeekBar
	{
		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int AnimArrowScaleDownL;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int AnimArrowIdleL;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int AnimArrowScaleDownR;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int AnimArrowIdleR;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int AnimArrowScaleUpL;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int AnimArrowScaleUpIdleL;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int AnimArrowScaleUpR;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int AnimArrowScaleUpIdleR;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517678", Offset = "0x517678")]
		[SerializeField]
		private TextMeshProUGUI number;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5176C4", Offset = "0x5176C4")]
		[SerializeField]
		private TextMeshProUGUI numberMax;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517710", Offset = "0x517710")]
		[SerializeField]
		private SeekBarLaserPointer seekBarLaserPointer;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51775C", Offset = "0x51775C")]
		[SerializeField]
		private TextMeshPro debugText;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private GameObject arrowL;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private GameObject arrowR;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private GameObject arrowLightL;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private GameObject arrowLightR;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Animator arrowLAnim;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Animator arrowRAnim;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Animator arrowLightLAnim;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Animator arrowLightRAnim;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Image arrowLightLImage;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Image arrowLightRImage;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float lightRate;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[SerializeField]
		private float lightRateSpeed;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5177F8", Offset = "0x5177F8")]
		private float lightRateSpeedLowerLimt;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private double speed;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float totalMixSecond;

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x6EB508", Offset = "0x6EB508", VA = "0x6EB508", Slot = "9")]
		protected override bool OnInit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x6EB71C", Offset = "0x6EB71C", VA = "0x6EB71C", Slot = "10")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x6EC1A8", Offset = "0x6EC1A8", VA = "0x6EC1A8", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x6EC444", Offset = "0x6EC444", VA = "0x6EC444")]
		public string GetTime(double time)
		{
			return null;
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x6EC53C", Offset = "0x6EC53C", VA = "0x6EC53C")]
		public void ResetChapterInfo()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x6EC6E8", Offset = "0x6EC6E8", VA = "0x6EC6E8", Slot = "14")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x6EC748", Offset = "0x6EC748", VA = "0x6EC748", Slot = "15")]
		public override void OnClose(bool isCloseAnimation)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x6EC768", Offset = "0x6EC768", VA = "0x6EC768", Slot = "11")]
		public override bool IsDecision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x6EC770", Offset = "0x6EC770", VA = "0x6EC770", Slot = "12")]
		public override void OnSelected(bool isAnim = true)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x6EC888", Offset = "0x6EC888", VA = "0x6EC888", Slot = "13")]
		public override void OnNotSelected()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x6EC0EC", Offset = "0x6EC0EC", VA = "0x6EC0EC")]
		private void SetSkipFlag(bool flag)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x6EC628", Offset = "0x6EC628", VA = "0x6EC628")]
		private void ResetCursorAnim()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x6EC91C", Offset = "0x6EC91C", VA = "0x6EC91C", Slot = "20")]
		public override void HandleHoldLaserPoint()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x6EC94C", Offset = "0x6EC94C", VA = "0x6EC94C", Slot = "21")]
		public override void CheckHandleHoldLaserPoint(bool hit, bool hold)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x6ECA90", Offset = "0x6ECA90", VA = "0x6ECA90", Slot = "22")]
		public override void HoldHandle(bool hold)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x6EBE64", Offset = "0x6EBE64", VA = "0x6EBE64")]
		public void BackTimeLine()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x6EBFB4", Offset = "0x6EBFB4", VA = "0x6EBFB4")]
		public void NextTimeLine()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x6ECA94", Offset = "0x6ECA94", VA = "0x6ECA94")]
		public Skip()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class Space : WidgetComponent
	{
		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x7508D8", Offset = "0x7508D8", VA = "0x7508D8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x750960", Offset = "0x750960", VA = "0x750960", Slot = "11")]
		public override bool IsDecision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x750968", Offset = "0x750968", VA = "0x750968")]
		public Space()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class Switching : WidgetComponent
	{
		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517838", Offset = "0x517838")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517838", Offset = "0x517838")]
		[SerializeField]
		protected GameObject selectionMark;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5178A8", Offset = "0x5178A8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5178A8", Offset = "0x5178A8")]
		[SerializeField]
		protected Image leftArrow;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517918", Offset = "0x517918")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517918", Offset = "0x517918")]
		[SerializeField]
		protected Image leftArrowAdditive;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517988", Offset = "0x517988")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517988", Offset = "0x517988")]
		[SerializeField]
		protected Image rightArrow;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5179F8", Offset = "0x5179F8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5179F8", Offset = "0x5179F8")]
		[SerializeField]
		protected Image rightArrowAdditive;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517A68", Offset = "0x517A68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517A68", Offset = "0x517A68")]
		[SerializeField]
		protected SetUIString selectName;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517AD8", Offset = "0x517AD8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517AD8", Offset = "0x517AD8")]
		[SerializeField]
		protected Color dontPushColor;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517B48", Offset = "0x517B48")]
		private int <SelectNum>k__BackingField;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517B58", Offset = "0x517B58")]
		private int <PrevSelectNum>k__BackingField;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected List<string> selectList;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected bool isDecision;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		protected Vector3 originalLeftArrowScale;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Vector3 originalRightArrowScale;

		[Token(Token = "0x170000DD")]
		public GameObject SelectionMark
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x7510C8", Offset = "0x7510C8", VA = "0x7510C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x7510D0", Offset = "0x7510D0", VA = "0x7510D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public int SelectNum
		{
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x7510D8", Offset = "0x7510D8", VA = "0x7510D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ACDC", Offset = "0x51ACDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x7510E0", Offset = "0x7510E0", VA = "0x7510E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ACEC", Offset = "0x51ACEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public int PrevSelectNum
		{
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x7510E8", Offset = "0x7510E8", VA = "0x7510E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ACFC", Offset = "0x51ACFC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x7510F0", Offset = "0x7510F0", VA = "0x7510F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AD0C", Offset = "0x51AD0C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public List<string> SelectList
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x7510F8", Offset = "0x7510F8", VA = "0x7510F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x751100", Offset = "0x751100", VA = "0x751100")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x751104", Offset = "0x751104", VA = "0x751104", Slot = "9")]
		protected override bool OnInit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x751320", Offset = "0x751320", VA = "0x751320", Slot = "10")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x751430", Offset = "0x751430", VA = "0x751430", Slot = "20")]
		protected virtual void CountUp()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x751538", Offset = "0x751538", VA = "0x751538", Slot = "21")]
		protected virtual void CountDown()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x75162C", Offset = "0x75162C", VA = "0x75162C", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x7516F0", Offset = "0x7516F0", VA = "0x7516F0", Slot = "22")]
		protected virtual void ChangeStringUpdate()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x7517A8", Offset = "0x7517A8", VA = "0x7517A8", Slot = "23")]
		protected virtual void CheckLimit()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x7518C4", Offset = "0x7518C4", VA = "0x7518C4", Slot = "14")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x7519EC", Offset = "0x7519EC", VA = "0x7519EC", Slot = "11")]
		public override bool IsDecision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x7519F4", Offset = "0x7519F4", VA = "0x7519F4", Slot = "12")]
		public override void OnSelected(bool isAnim = true)
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x751B30", Offset = "0x751B30", VA = "0x751B30", Slot = "13")]
		public override void OnNotSelected()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x751B60", Offset = "0x751B60", VA = "0x751B60")]
		public void AddStringList(string selectName, string selectNameDescription = "NONE", string selectNameDescription2 = "NONE")
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x751BC8", Offset = "0x751BC8", VA = "0x751BC8", Slot = "24")]
		public virtual void LeftSwitchLaserPoint()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x751CCC", Offset = "0x751CCC", VA = "0x751CCC", Slot = "25")]
		public virtual void RightSwitchLaserPoint()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x751DA4", Offset = "0x751DA4", VA = "0x751DA4")]
		public void DontHitLeftSwitchLaserPoint()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x751DD4", Offset = "0x751DD4", VA = "0x751DD4")]
		public void DontHitRightSwitchLaserPoint()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x751E04", Offset = "0x751E04", VA = "0x751E04")]
		public Switching()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class VoiceLabel : WidgetComponent
	{
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x75AB8C", Offset = "0x75AB8C", VA = "0x75AB8C", Slot = "9")]
		protected override bool OnInit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x75ABC0", Offset = "0x75ABC0", VA = "0x75ABC0", Slot = "10")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x75ABD0", Offset = "0x75ABD0", VA = "0x75ABD0", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x75AC04", Offset = "0x75AC04", VA = "0x75AC04", Slot = "14")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x75AC34", Offset = "0x75AC34", VA = "0x75AC34", Slot = "11")]
		public override bool IsDecision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x75AC3C", Offset = "0x75AC3C", VA = "0x75AC3C", Slot = "12")]
		public override void OnSelected(bool isAnim = true)
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x75AC44", Offset = "0x75AC44", VA = "0x75AC44", Slot = "13")]
		public override void OnNotSelected()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x75AC4C", Offset = "0x75AC4C", VA = "0x75AC4C", Slot = "19")]
		public override void CalcSkipColorText()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x75AC6C", Offset = "0x75AC6C", VA = "0x75AC6C")]
		public VoiceLabel()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public abstract class WidgetComponent : UIComponent
	{
		[Token(Token = "0x4000639")]
		private const string ActiveAnimationName = "Open";

		[Token(Token = "0x400063A")]
		private const string CloseAnimationName = "Close";

		[Token(Token = "0x400063B")]
		private const string SelectAnimationName = "Selected";

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517B68", Offset = "0x517B68")]
		[SerializeField]
		protected string discriptionID;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517BB4", Offset = "0x517BB4")]
		[SerializeField]
		protected Color notSelectColor;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517C00", Offset = "0x517C00")]
		[SerializeField]
		protected Vector3 hitLaserPointerScale;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517C4C", Offset = "0x517C4C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517C4C", Offset = "0x517C4C")]
		[SerializeField]
		private SetUIString titleText;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform overrideTrasObj;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517CCC", Offset = "0x517CCC")]
		private WindowComponent <OwnedWindow>k__BackingField;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517CDC", Offset = "0x517CDC")]
		private int <MyNo>k__BackingField;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517CEC", Offset = "0x517CEC")]
		private bool <IsSelected>k__BackingField;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517CFC", Offset = "0x517CFC")]
		private bool <IsHide>k__BackingField;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517D0C", Offset = "0x517D0C")]
		private bool <IsSkip>k__BackingField;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517D1C", Offset = "0x517D1C")]
		private bool <IsCanNotSelect>k__BackingField;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517D2C", Offset = "0x517D2C")]
		private bool <IsRetracking>k__BackingField;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517D3C", Offset = "0x517D3C")]
		private bool <IsDontControlle>k__BackingField;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Color canNotSelectColor;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool isInit;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x517D4C", Offset = "0x517D4C")]
		private bool <CallCreateFunction>k__BackingField;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected UIUtility.RepeatInput[] repeatInputArray;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected float pushTime;

		[Token(Token = "0x170000E1")]
		public string DiscriptionID
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x75AC70", Offset = "0x75AC70", VA = "0x75AC70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x75AC78", Offset = "0x75AC78", VA = "0x75AC78")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public SetUIString TitleText
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x75AC80", Offset = "0x75AC80", VA = "0x75AC80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x75AC88", Offset = "0x75AC88", VA = "0x75AC88")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public Transform OverrideTransformObj
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x75AC90", Offset = "0x75AC90", VA = "0x75AC90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x75AC98", Offset = "0x75AC98", VA = "0x75AC98")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public WindowComponent OwnedWindow
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x75ACA0", Offset = "0x75ACA0", VA = "0x75ACA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AD1C", Offset = "0x51AD1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x75ACA8", Offset = "0x75ACA8", VA = "0x75ACA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AD2C", Offset = "0x51AD2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public int MyNo
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x75ACB0", Offset = "0x75ACB0", VA = "0x75ACB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AD3C", Offset = "0x51AD3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x75ACB8", Offset = "0x75ACB8", VA = "0x75ACB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AD4C", Offset = "0x51AD4C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public bool IsSelected
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0x75ACC0", Offset = "0x75ACC0", VA = "0x75ACC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AD5C", Offset = "0x51AD5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x75ACC8", Offset = "0x75ACC8", VA = "0x75ACC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AD6C", Offset = "0x51AD6C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public bool IsHide
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x75ACD4", Offset = "0x75ACD4", VA = "0x75ACD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AD7C", Offset = "0x51AD7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x75ACDC", Offset = "0x75ACDC", VA = "0x75ACDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AD8C", Offset = "0x51AD8C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public bool IsSkip
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x75ACE8", Offset = "0x75ACE8", VA = "0x75ACE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AD9C", Offset = "0x51AD9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x75ACF0", Offset = "0x75ACF0", VA = "0x75ACF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ADAC", Offset = "0x51ADAC")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public bool IsCanNotSelect
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x75ACFC", Offset = "0x75ACFC", VA = "0x75ACFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ADBC", Offset = "0x51ADBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x75AD04", Offset = "0x75AD04", VA = "0x75AD04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ADCC", Offset = "0x51ADCC")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public bool IsRetracking
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x75AD10", Offset = "0x75AD10", VA = "0x75AD10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ADDC", Offset = "0x51ADDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x75AD18", Offset = "0x75AD18", VA = "0x75AD18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ADEC", Offset = "0x51ADEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public bool IsDontControlle
		{
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0x75AD24", Offset = "0x75AD24", VA = "0x75AD24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51ADFC", Offset = "0x51ADFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0x75AD2C", Offset = "0x75AD2C", VA = "0x75AD2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AE0C", Offset = "0x51AE0C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public bool CallCreateFunction
		{
			[Token(Token = "0x6000D36")]
			[Address(RVA = "0x75AD38", Offset = "0x75AD38", VA = "0x75AD38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AE1C", Offset = "0x51AE1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x75AD40", Offset = "0x75AD40", VA = "0x75AD40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AE2C", Offset = "0x51AE2C")]
			set
			{
			}
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x75092C", Offset = "0x75092C", VA = "0x75092C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x75AD4C", Offset = "0x75AD4C", VA = "0x75AD4C", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x7516BC", Offset = "0x7516BC", VA = "0x7516BC", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x75AD54", Offset = "0x75AD54", VA = "0x75AD54", Slot = "7")]
		public override void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x75AD5C", Offset = "0x75AD5C", VA = "0x75AD5C", Slot = "8")]
		public virtual void ChangeHide(bool flag)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x751248", Offset = "0x751248", VA = "0x751248", Slot = "9")]
		protected virtual bool OnInit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x75ADD4", Offset = "0x75ADD4", VA = "0x75ADD4")]
		private void RepeatKeyInit()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x751420", Offset = "0x751420", VA = "0x751420", Slot = "10")]
		public virtual bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D40")]
		public abstract bool IsDecision();

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x751A2C", Offset = "0x751A2C", VA = "0x751A2C", Slot = "12")]
		public virtual void OnSelected(bool isAnim = true)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x751B58", Offset = "0x751B58", VA = "0x751B58", Slot = "13")]
		public virtual void OnNotSelected()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x7518FC", Offset = "0x7518FC", VA = "0x7518FC", Slot = "14")]
		public virtual void OnActive()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x75AED8", Offset = "0x75AED8", VA = "0x75AED8", Slot = "15")]
		public virtual void OnClose(bool isCloseAnimation)
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x75AFAC", Offset = "0x75AFAC", VA = "0x75AFAC", Slot = "16")]
		public virtual void SetText(string text)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x75AFB0", Offset = "0x75AFB0", VA = "0x75AFB0", Slot = "17")]
		public virtual void ChangeTitleString(string id)
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x75AFB4", Offset = "0x75AFB4", VA = "0x75AFB4", Slot = "18")]
		public virtual void ChangeUGUI(bool flag)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x751C90", Offset = "0x751C90", VA = "0x751C90")]
		public bool HitLaserPoint()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x75B0B8", Offset = "0x75B0B8", VA = "0x75B0B8", Slot = "19")]
		public virtual void CalcSkipColorText()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x75096C", Offset = "0x75096C", VA = "0x75096C")]
		protected WidgetComponent()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public enum WindowContentsType
	{
		[Token(Token = "0x400064F")]
		Button,
		[Token(Token = "0x4000650")]
		PopupButton,
		[Token(Token = "0x4000651")]
		SeekBar,
		[Token(Token = "0x4000652")]
		Switching,
		[Token(Token = "0x4000653")]
		Skip,
		[Token(Token = "0x4000654")]
		Space,
		[Token(Token = "0x4000655")]
		VoiceLabel,
		[Token(Token = "0x4000656")]
		ChapterSelect
	}
	[Token(Token = "0x20001D1")]
	public abstract class WindowComponent : UIComponent
	{
		[Token(Token = "0x2000283")]
		public struct CreateContentsInfo
		{
			[Token(Token = "0x4000B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WindowContentsType contentsType;

			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string nameID;

			[Token(Token = "0x4000B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5193BC", Offset = "0x5193BC")]
			public string[] addStringArray;

			[Token(Token = "0x4000B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string descriptionID;

			[Token(Token = "0x4000B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool selectAtCancel;
		}

		[Token(Token = "0x2000284")]
		private enum RepeatInput
		{
			[Token(Token = "0x4000B0F")]
			Up,
			[Token(Token = "0x4000B10")]
			Buttom,
			[Token(Token = "0x4000B11")]
			Max
		}

		[Token(Token = "0x2000285")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5106C8", Offset = "0x5106C8")]
		private sealed class <InitializeCoroutine>d__95 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindowComponent <>4__this;

			[Token(Token = "0x17000144")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FD4")]
				[Address(RVA = "0x760438", Offset = "0x760438", VA = "0x760438", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000145")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FD6")]
				[Address(RVA = "0x7604A0", Offset = "0x7604A0", VA = "0x7604A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x75B750", Offset = "0x75B750", VA = "0x75B750")]
			[DebuggerHidden]
			public <InitializeCoroutine>d__95(int <>1__state)
			{
			}

			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x7600F4", Offset = "0x7600F4", VA = "0x7600F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x7600F8", Offset = "0x7600F8", VA = "0x7600F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x760440", Offset = "0x760440", VA = "0x760440", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000286")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5106D8", Offset = "0x5106D8")]
		private sealed class <>c__DisplayClass109_0
		{
			[Token(Token = "0x4000B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x75E23C", Offset = "0x75E23C", VA = "0x75E23C")]
			public <>c__DisplayClass109_0()
			{
			}

			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x7600AC", Offset = "0x7600AC", VA = "0x7600AC")]
			internal void <CreateWindowContents>b__0(GameObject x)
			{
			}
		}

		[Token(Token = "0x2000287")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5106E8", Offset = "0x5106E8")]
		private sealed class <>c__DisplayClass109_1
		{
			[Token(Token = "0x4000B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject resource;

			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x75E244", Offset = "0x75E244", VA = "0x75E244")]
			public <>c__DisplayClass109_1()
			{
			}

			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0x7600B4", Offset = "0x7600B4", VA = "0x7600B4")]
			internal void <CreateWindowContents>b__1(GameObject x)
			{
			}

			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x7600BC", Offset = "0x7600BC", VA = "0x7600BC")]
			internal void <CreateWindowContents>b__2(GameObject x)
			{
			}

			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x7600C4", Offset = "0x7600C4", VA = "0x7600C4")]
			internal void <CreateWindowContents>b__3(GameObject x)
			{
			}

			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x7600CC", Offset = "0x7600CC", VA = "0x7600CC")]
			internal void <CreateWindowContents>b__4(GameObject x)
			{
			}

			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x7600D4", Offset = "0x7600D4", VA = "0x7600D4")]
			internal void <CreateWindowContents>b__5(GameObject x)
			{
			}

			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x7600DC", Offset = "0x7600DC", VA = "0x7600DC")]
			internal void <CreateWindowContents>b__6(GameObject x)
			{
			}

			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x7600E4", Offset = "0x7600E4", VA = "0x7600E4")]
			internal void <CreateWindowContents>b__7(GameObject x)
			{
			}

			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x7600EC", Offset = "0x7600EC", VA = "0x7600EC")]
			internal void <CreateWindowContents>b__8(GameObject x)
			{
			}
		}

		[Token(Token = "0x4000657")]
		public const string ActiveAnimationName = "Open";

		[Token(Token = "0x4000658")]
		public const string CloseAnimationName = "Close";

		[Token(Token = "0x4000659")]
		public const string SelectAnimationName = "Selected";

		[Token(Token = "0x400065A")]
		protected const string ButtonResourcePath = "Button";

		[Token(Token = "0x400065B")]
		protected const string PopupButtonResourcePath = "PopupButton";

		[Token(Token = "0x400065C")]
		protected const string SeekBarResourcePath = "SeekBar";

		[Token(Token = "0x400065D")]
		protected const string SwitchResourcePath = "Switching";

		[Token(Token = "0x400065E")]
		protected const string SkipButtonResourcePath = "Skip";

		[Token(Token = "0x400065F")]
		protected const string HureaiReleaseButtonResourcePath = "Test";

		[Token(Token = "0x4000660")]
		protected const string SoundMojiButtonResourcePath = "Test";

		[Token(Token = "0x4000661")]
		protected const string SpaceButtonResourcePath = "Space";

		[Token(Token = "0x4000662")]
		protected const string VoiceLabelButtonResourcePath = "VoiceLabel";

		[Token(Token = "0x4000663")]
		protected const string ChapterSelectResourcePath = "ChapterSelect";

		[Token(Token = "0x4000664")]
		protected const string WindowResourcePath = "WindowFrame";

		[Token(Token = "0x4000665")]
		protected const string PopupWindowResourcePath = "PopupWindowFrame";

		[Token(Token = "0x4000666")]
		protected const string NamePlateResourcePath = "NamePlate";

		[Token(Token = "0x4000667")]
		protected const string WidgetLineResourcePath = "SpaceLine";

		[Token(Token = "0x4000668")]
		private const float CheckUISpaceDistance = 4.5f;

		[Token(Token = "0x4000669")]
		private const float CheckUISpaceSqrDistance = 20.25f;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517D5C", Offset = "0x517D5C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517D5C", Offset = "0x517D5C")]
		[SerializeField]
		public WindowParamObj windowParamObj;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517DCC", Offset = "0x517DCC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517DCC", Offset = "0x517DCC")]
		[SerializeField]
		protected bool isStartOpenWindow;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517E3C", Offset = "0x517E3C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517E3C", Offset = "0x517E3C")]
		[SerializeField]
		protected bool receiveInput;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517EAC", Offset = "0x517EAC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517EAC", Offset = "0x517EAC")]
		[SerializeField]
		protected int priority;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517F1C", Offset = "0x517F1C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517F1C", Offset = "0x517F1C")]
		[SerializeField]
		protected bool isChase;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517F8C", Offset = "0x517F8C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x517F8C", Offset = "0x517F8C")]
		[SerializeField]
		protected float chaseCameraRange;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x517FFC", Offset = "0x517FFC")]
		[SerializeField]
		protected float leftShiftRate;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x518048", Offset = "0x518048")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518048", Offset = "0x518048")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x518048", Offset = "0x518048")]
		protected float windowHeight;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5180D0", Offset = "0x5180D0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5180D0", Offset = "0x5180D0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5180D0", Offset = "0x5180D0")]
		protected float descriptionYPos;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x518158", Offset = "0x518158")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518158", Offset = "0x518158")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x518158", Offset = "0x518158")]
		protected float frameWidth;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5181E0", Offset = "0x5181E0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5181E0", Offset = "0x5181E0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5181E0", Offset = "0x5181E0")]
		protected float frameAddHeight;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x518268", Offset = "0x518268")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x518268", Offset = "0x518268")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518268", Offset = "0x518268")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x518268", Offset = "0x518268")]
		protected float adjustHeightSize;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x518314", Offset = "0x518314")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518314", Offset = "0x518314")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x518314", Offset = "0x518314")]
		protected float adjustWindowHeightSize;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x51839C", Offset = "0x51839C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51839C", Offset = "0x51839C")]
		[SerializeField]
		protected Vector3 windowsLocalPos;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x51840C", Offset = "0x51840C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51840C", Offset = "0x51840C")]
		[SerializeField]
		protected Vector3 contentsGroupLocalPos;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x51847C", Offset = "0x51847C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x51847C", Offset = "0x51847C")]
		protected float contentsGroupLocalScale;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5184E4", Offset = "0x5184E4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5184E4", Offset = "0x5184E4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5184E4", Offset = "0x5184E4")]
		[SerializeField]
		protected bool isGeneralWindow;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x518578", Offset = "0x518578")]
		[SerializeField]
		private float lineAddWidth;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5185C4", Offset = "0x5185C4")]
		[SerializeField]
		private float lineAddHeight;

		[Token(Token = "0x400067D")]
		private const float CheckCharaDistance = 1.6f;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected List<WidgetComponent> contentList;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected WindowFrameComponent window;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected GameObject windowsGroup;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected GameObject contentsGroup;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		protected NamePlate namePlate;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private string namePlateID;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518630", Offset = "0x518630")]
		private int <SelectedButtonNo>k__BackingField;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518640", Offset = "0x518640")]
		private GameObject <ButtonGroup>k__BackingField;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518650", Offset = "0x518650")]
		private bool <ActiveSickness>k__BackingField;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518660", Offset = "0x518660")]
		private bool <IsCloseAnim>k__BackingField;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518670", Offset = "0x518670")]
		private bool <IsOpenAnim>k__BackingField;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		protected WindowType WndType;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518680", Offset = "0x518680")]
		private float <CenterWidth>k__BackingField;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518690", Offset = "0x518690")]
		private CanvasGroup <canvasGroup>k__BackingField;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int debugCount;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private UIUtility.RepeatInput[] repeatInputArray;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float pushTime;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private CreateContentsInfo[] widgetInfoArray;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5186A0", Offset = "0x5186A0")]
		private bool <isAllLoaded>k__BackingField;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected List<GameObject> spaceLineList;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int lineCount;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5186B0", Offset = "0x5186B0")]
		private bool <Initialized>k__BackingField;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int cancelWidgetNo;

		[Token(Token = "0x170000ED")]
		public bool IsChase
		{
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x75B4D0", Offset = "0x75B4D0", VA = "0x75B4D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x75B4D8", Offset = "0x75B4D8", VA = "0x75B4D8")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public int SelectedButtonNo
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x75B4E4", Offset = "0x75B4E4", VA = "0x75B4E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AE3C", Offset = "0x51AE3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x75B4EC", Offset = "0x75B4EC", VA = "0x75B4EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AE4C", Offset = "0x51AE4C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public GameObject ButtonGroup
		{
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0x75B4F4", Offset = "0x75B4F4", VA = "0x75B4F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AE5C", Offset = "0x51AE5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x75B4FC", Offset = "0x75B4FC", VA = "0x75B4FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AE6C", Offset = "0x51AE6C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public bool ActiveSickness
		{
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0x75B504", Offset = "0x75B504", VA = "0x75B504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AE7C", Offset = "0x51AE7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D52")]
			[Address(RVA = "0x75B50C", Offset = "0x75B50C", VA = "0x75B50C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AE8C", Offset = "0x51AE8C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public bool IsCloseAnim
		{
			[Token(Token = "0x6000D53")]
			[Address(RVA = "0x75B518", Offset = "0x75B518", VA = "0x75B518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AE9C", Offset = "0x51AE9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x75B520", Offset = "0x75B520", VA = "0x75B520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AEAC", Offset = "0x51AEAC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public bool IsOpenAnim
		{
			[Token(Token = "0x6000D55")]
			[Address(RVA = "0x75B52C", Offset = "0x75B52C", VA = "0x75B52C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AEBC", Offset = "0x51AEBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0x75B534", Offset = "0x75B534", VA = "0x75B534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AECC", Offset = "0x51AECC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public float CenterWidth
		{
			[Token(Token = "0x6000D57")]
			[Address(RVA = "0x75B540", Offset = "0x75B540", VA = "0x75B540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AEDC", Offset = "0x51AEDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x75B548", Offset = "0x75B548", VA = "0x75B548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AEEC", Offset = "0x51AEEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public CanvasGroup canvasGroup
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x75B550", Offset = "0x75B550", VA = "0x75B550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AEFC", Offset = "0x51AEFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x75B558", Offset = "0x75B558", VA = "0x75B558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AF0C", Offset = "0x51AF0C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public bool isAllLoaded
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x75B560", Offset = "0x75B560", VA = "0x75B560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AF1C", Offset = "0x51AF1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x75B568", Offset = "0x75B568", VA = "0x75B568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AF2C", Offset = "0x51AF2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public bool Initialized
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0x75B574", Offset = "0x75B574", VA = "0x75B574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AF3C", Offset = "0x51AF3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x75B57C", Offset = "0x75B57C", VA = "0x75B57C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AF4C", Offset = "0x51AF4C")]
			set
			{
			}
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x75B588", Offset = "0x75B588", VA = "0x75B588", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x75B6E0", Offset = "0x75B6E0", VA = "0x75B6E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51AF5C", Offset = "0x51AF5C")]
		private IEnumerator InitializeCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x75B77C", Offset = "0x75B77C", VA = "0x75B77C")]
		public void EditorInitialize()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x75B788", Offset = "0x75B788", VA = "0x75B788", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x75B900", Offset = "0x75B900", VA = "0x75B900")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x75C430", Offset = "0x75C430", VA = "0x75C430")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D65")]
		protected abstract void OnInit();

		[Token(Token = "0x6000D66")]
		protected abstract void OnDecisionCheck();

		[Token(Token = "0x6000D67")]
		protected abstract void HideCheck();

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x75C518", Offset = "0x75C518", VA = "0x75C518", Slot = "11")]
		public virtual void RefreshUI()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x74F6D4", Offset = "0x74F6D4", VA = "0x74F6D4", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x75C6D0", Offset = "0x75C6D0", VA = "0x75C6D0")]
		private void DebugUpddate()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x75C704", Offset = "0x75C704", VA = "0x75C704", Slot = "7")]
		public override void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x74EECC", Offset = "0x74EECC", VA = "0x74EECC")]
		public void LoadRequestWidgets(CreateContentsInfo[] contentsInfos, string namePlateID = "", bool enableLine = true)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x75C7AC", Offset = "0x75C7AC", VA = "0x75C7AC")]
		private bool CheckAllLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x75CC00", Offset = "0x75CC00", VA = "0x75CC00")]
		public bool CreateWindowContents()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6F")]
		public abstract void PostLoad();

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x75E24C", Offset = "0x75E24C", VA = "0x75E24C")]
		public void ChangeSelectButtonNo(int param)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x75C5E8", Offset = "0x75C5E8", VA = "0x75C5E8")]
		public void CloseCheck()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x75C51C", Offset = "0x75C51C", VA = "0x75C51C")]
		public void OpenCheck()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x75E394", Offset = "0x75E394", VA = "0x75E394")]
		public float GetStartHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x75B9F0", Offset = "0x75B9F0", VA = "0x75B9F0")]
		protected void CalcWindowContentsPostion()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x74FF44", Offset = "0x74FF44", VA = "0x74FF44", Slot = "13")]
		public virtual void OpenWindow(bool dontInitNo = false)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x750190", Offset = "0x750190", VA = "0x750190", Slot = "14")]
		public virtual void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x75C194", Offset = "0x75C194", VA = "0x75C194")]
		public void ChaseMove()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x75F240", Offset = "0x75F240", VA = "0x75F240")]
		public void OnAwake()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x75F244", Offset = "0x75F244", VA = "0x75F244")]
		public void OnRemoveInputReceiver()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x75F248", Offset = "0x75F248", VA = "0x75F248")]
		public bool InputUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x75FAF0", Offset = "0x75FAF0", VA = "0x75FAF0", Slot = "15")]
		public virtual bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x75E314", Offset = "0x75E314", VA = "0x75E314")]
		public bool IsSelectButtonisHide(int selectButton)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x75FB74", Offset = "0x75FB74", VA = "0x75FB74")]
		public bool IsRetracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x75FBEC", Offset = "0x75FBEC", VA = "0x75FBEC")]
		public int GetPriority()
		{
			return default(int);
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x75FBF4", Offset = "0x75FBF4", VA = "0x75FBF4")]
		public WindowType GetWindowType()
		{
			return default(WindowType);
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x75F9FC", Offset = "0x75F9FC", VA = "0x75F9FC")]
		public int CheckContentsCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x75AFB8", Offset = "0x75AFB8", VA = "0x75AFB8")]
		public void ChangerSelectLaserPointer(int myNo)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x75E454", Offset = "0x75E454", VA = "0x75E454")]
		private bool CheckUISpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x75FBFC", Offset = "0x75FBFC", VA = "0x75FBFC")]
		private Vector3 ToCharaVector(CharacterKeeper chara, Vector3 fromVector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x75FCC8", Offset = "0x75FCC8", VA = "0x75FCC8")]
		private bool IsLeft(Vector3 vec0, Vector3 vec1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x75FCE4", Offset = "0x75FCE4", VA = "0x75FCE4")]
		private bool CheckLeft(Vector3 toObj, Vector3 toChara)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x75FDA0", Offset = "0x75FDA0", VA = "0x75FDA0", Slot = "16")]
		public virtual void SyncSaveData()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x75FDA4", Offset = "0x75FDA4", VA = "0x75FDA4", Slot = "17")]
		public virtual void UpgradeSaveData()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x75FDA8", Offset = "0x75FDA8", VA = "0x75FDA8", Slot = "18")]
		public virtual void ResetTitleName()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x75FDAC", Offset = "0x75FDAC", VA = "0x75FDAC", Slot = "19")]
		public virtual void ResetPopupName(PopupWindow.AsType type, string uiTitleStrinID)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x75FDB0", Offset = "0x75FDB0", VA = "0x75FDB0")]
		public void ChangeFont(TMP_FontAsset font, Material mat)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x75B5CC", Offset = "0x75B5CC", VA = "0x75B5CC")]
		public void LoadParamObj()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x75FEC4", Offset = "0x75FEC4", VA = "0x75FEC4", Slot = "20")]
		public virtual void ChangeSelectContent(bool isAnim = true, bool playSE = true)
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x758BDC", Offset = "0x758BDC", VA = "0x758BDC")]
		public bool IsOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x7600A4", Offset = "0x7600A4", VA = "0x7600A4", Slot = "21")]
		protected virtual bool CanInputInFade()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x75C700", Offset = "0x75C700", VA = "0x75C700")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x51AFC0", Offset = "0x51AFC0")]
		public void SaveParamObj()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x75078C", Offset = "0x75078C", VA = "0x75078C")]
		protected WindowComponent()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public enum WindowType
	{
		[Token(Token = "0x4000696")]
		Invalid = -1,
		[Token(Token = "0x4000697")]
		Title,
		[Token(Token = "0x4000698")]
		Option,
		[Token(Token = "0x4000699")]
		SoundSetting,
		[Token(Token = "0x400069A")]
		VRorPC,
		[Token(Token = "0x400069B")]
		LanguageSetting,
		[Token(Token = "0x400069C")]
		RenderSetting,
		[Token(Token = "0x400069D")]
		SerifSetting,
		[Token(Token = "0x400069E")]
		DramaSelect,
		[Token(Token = "0x400069F")]
		Skip,
		[Token(Token = "0x40006A0")]
		Help,
		[Token(Token = "0x40006A1")]
		Settings,
		[Token(Token = "0x40006A2")]
		Popup,
		[Token(Token = "0x40006A3")]
		ChapterSelect,
		[Token(Token = "0x40006A4")]
		SwitchCamera,
		[Token(Token = "0x40006A5")]
		ArrayEnd
	}
	[Token(Token = "0x20001D3")]
	public enum HideWindowState
	{
		[Token(Token = "0x40006A7")]
		Show,
		[Token(Token = "0x40006A8")]
		OrderHide,
		[Token(Token = "0x40006A9")]
		Hide,
		[Token(Token = "0x40006AA")]
		HideToShow
	}
	[Token(Token = "0x20001D4")]
	public class WindowManager : SingletonMonoBehaviour<WindowManager>
	{
		[Serializable]
		[Token(Token = "0x2000288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5106F8", Offset = "0x5106F8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<WindowComponent> <>9__15_0;

			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x76108C", Offset = "0x76108C", VA = "0x76108C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x761094", Offset = "0x761094", VA = "0x761094")]
			internal int <Update>b__15_0(WindowComponent a, WindowComponent b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000289")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510708", Offset = "0x510708")]
		private sealed class <>c__DisplayClass24_0<T> where T : UnityEngine.Object
		{
			[Token(Token = "0x4000B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T asset;

			[Token(Token = "0x6000FE5")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6000FE6")]
			internal void <LoadWaitCoroutine>b__0(T x)
			{
			}
		}

		[Token(Token = "0x200028A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510718", Offset = "0x510718")]
		private sealed class <LoadWaitCoroutine>d__24<T> : IEnumerator<object>, IEnumerator, IDisposable where T : UnityEngine.Object
		{
			[Token(Token = "0x4000B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string resourcePath;

			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private <>c__DisplayClass24_0<T> <>8__1;

			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> callback;

			[Token(Token = "0x17000146")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FEA")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000147")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FEC")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FE7")]
			[DebuggerHidden]
			public <LoadWaitCoroutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6000FE8")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FE9")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FEB")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<WindowComponent> windowList;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<WindowComponent> sortingWindowList;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isInitFlag;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isSortUpdate;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool isAllLoaded;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int OpenedWindowCount;

		[Token(Token = "0x40006B1")]
		private const float ReInputTime = 1f / 30f;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float reInputTime;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool isCancelInput;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5186C0", Offset = "0x5186C0")]
		private HideWindowState <HideWndState>k__BackingField;

		[Token(Token = "0x170000F7")]
		public HideWindowState HideWndState
		{
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0x760558", Offset = "0x760558", VA = "0x760558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51AFF8", Offset = "0x51AFF8")]
			get
			{
				return default(HideWindowState);
			}
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0x760560", Offset = "0x760560", VA = "0x760560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B008", Offset = "0x51B008")]
			set
			{
			}
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x760568", Offset = "0x760568", VA = "0x760568", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x7605B8", Offset = "0x7605B8", VA = "0x7605B8")]
		public bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x760658", Offset = "0x760658", VA = "0x760658")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x760968", Offset = "0x760968", VA = "0x760968")]
		public void HideUpdate()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x760394", Offset = "0x760394", VA = "0x760394")]
		public void AddInputReceiver(WindowComponent ui)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x75B85C", Offset = "0x75B85C", VA = "0x75B85C")]
		public void RemoveInputReceiver(WindowComponent ui)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x760B30", Offset = "0x760B30", VA = "0x760B30")]
		public void Init()
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x74FD54", Offset = "0x74FD54", VA = "0x74FD54")]
		public WindowComponent GetWindow(WindowType windowType)
		{
			return null;
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x758BCC", Offset = "0x758BCC", VA = "0x758BCC")]
		public bool IsAnyOpenWindow()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x760B48", Offset = "0x760B48", VA = "0x760B48")]
		public void AllCloseWindow(bool isAnimation = false)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x760BF4", Offset = "0x760BF4", VA = "0x760BF4")]
		public bool IsRetracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9E")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51B018", Offset = "0x51B018")]
		private IEnumerator LoadWaitCoroutine<T>(string resourcePath, [Optional] Action<T> callback) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x760CDC", Offset = "0x760CDC", VA = "0x760CDC")]
		public void ChangeFont(TMP_FontAsset font, Material mat)
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x760E48", Offset = "0x760E48", VA = "0x760E48")]
		public void RefreshUI()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x75FAD8", Offset = "0x75FAD8", VA = "0x75FAD8")]
		public void StopAcceptInput(bool isCancel = false)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x760FA8", Offset = "0x760FA8", VA = "0x760FA8")]
		public bool IsCancelInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x760FB0", Offset = "0x760FB0", VA = "0x760FB0")]
		public WindowManager()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class WindowManagerForEditor : SingletonMonoBehaviour<WindowManagerForEditor>
	{
		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5186D0", Offset = "0x5186D0")]
		[SerializeField]
		private WindowComponent[] windows;

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x7610BC", Offset = "0x7610BC", VA = "0x7610BC")]
		public bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x7611A8", Offset = "0x7611A8", VA = "0x7611A8")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x7612B0", Offset = "0x7612B0", VA = "0x7612B0")]
		public WindowComponent GetWindow(WindowType windowType)
		{
			return null;
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x761390", Offset = "0x761390", VA = "0x761390")]
		public void AllCloseWindow()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x761480", Offset = "0x761480", VA = "0x761480")]
		public WindowManagerForEditor()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class VRManager : SingletonMonoBehaviour<VRManager>
	{
		[Token(Token = "0x200028B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510728", Offset = "0x510728")]
		private sealed class <LoadDevice>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string newDevice;

			[Token(Token = "0x17000148")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FF0")]
				[Address(RVA = "0x75AA70", Offset = "0x75AA70", VA = "0x75AA70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000149")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FF2")]
				[Address(RVA = "0x75AAD8", Offset = "0x75AAD8", VA = "0x75AAD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FED")]
			[Address(RVA = "0x75A1A0", Offset = "0x75A1A0", VA = "0x75A1A0")]
			[DebuggerHidden]
			public <LoadDevice>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0x75A938", Offset = "0x75A938", VA = "0x75A938", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0x75A93C", Offset = "0x75A93C", VA = "0x75A93C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0x75AA78", Offset = "0x75AA78", VA = "0x75AA78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510738", Offset = "0x510738")]
		private sealed class <ChangeLoadDevice>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformManager.PlatformType newDeviceType;

			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool <vrMode>5__2;

			[Token(Token = "0x1700014A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FF6")]
				[Address(RVA = "0x75A8C8", Offset = "0x75A8C8", VA = "0x75A8C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FF8")]
				[Address(RVA = "0x75A930", Offset = "0x75A930", VA = "0x75A930", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0x75A358", Offset = "0x75A358", VA = "0x75A358")]
			[DebuggerHidden]
			public <ChangeLoadDevice>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0x75A3F4", Offset = "0x75A3F4", VA = "0x75A3F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0x75A3F8", Offset = "0x75A3F8", VA = "0x75A3F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x75A8D0", Offset = "0x75A8D0", VA = "0x75A8D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isVR;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51871C", Offset = "0x51871C")]
		private bool <IsLost>k__BackingField;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51872C", Offset = "0x51872C")]
		private bool <IsSystemPause>k__BackingField;

		[Token(Token = "0x170000F8")]
		public bool isVR
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x759D78", Offset = "0x759D78", VA = "0x759D78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x759D80", Offset = "0x759D80", VA = "0x759D80")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public bool IsLost
		{
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x759D8C", Offset = "0x759D8C", VA = "0x759D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B07C", Offset = "0x51B07C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x759D94", Offset = "0x759D94", VA = "0x759D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B08C", Offset = "0x51B08C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public bool IsSystemPause
		{
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x759DA0", Offset = "0x759DA0", VA = "0x759DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B09C", Offset = "0x51B09C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x759DA8", Offset = "0x759DA8", VA = "0x759DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B0AC", Offset = "0x51B0AC")]
			set
			{
			}
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x759DB4", Offset = "0x759DB4", VA = "0x759DB4")]
		public bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x759DBC", Offset = "0x759DBC", VA = "0x759DBC")]
		public static void SetFFR(OVRManager.FixedFoveatedRenderingLevel level)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x759E24", Offset = "0x759E24", VA = "0x759E24", Slot = "5")]
		protected override void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x759E74", Offset = "0x759E74", VA = "0x759E74")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x75A130", Offset = "0x75A130", VA = "0x75A130")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51B0BC", Offset = "0x51B0BC")]
		private IEnumerator LoadDevice(string newDevice)
		{
			return null;
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x75A1CC", Offset = "0x75A1CC", VA = "0x75A1CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x75A2DC", Offset = "0x75A2DC", VA = "0x75A2DC")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x75A114", Offset = "0x75A114", VA = "0x75A114")]
		public void ChangeParamWithSaveData(int selectNum)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x75A2E8", Offset = "0x75A2E8", VA = "0x75A2E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51B120", Offset = "0x51B120")]
		public IEnumerator ChangeLoadDevice(PlatformManager.PlatformType newDeviceType)
		{
			return null;
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x758B64", Offset = "0x758B64", VA = "0x758B64")]
		public bool Retracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x75A384", Offset = "0x75A384", VA = "0x75A384")]
		public VRManager()
		{
		}
	}
}
namespace Lipsync
{
	[Token(Token = "0x20001D7")]
	public class LipSyncComponent : MonoBehaviour
	{
		[Token(Token = "0x200028D")]
		public enum MouthType
		{
			[Token(Token = "0x4000B27")]
			Small,
			[Token(Token = "0x4000B28")]
			Medium,
			[Token(Token = "0x4000B29")]
			Large,
			[Token(Token = "0x4000B2A")]
			Max
		}

		[Serializable]
		[Token(Token = "0x200028E")]
		public struct Mouth
		{
			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5193F4", Offset = "0x5193F4")]
			public int index;

			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51942C", Offset = "0x51942C")]
			public float nowValue;

			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x519464", Offset = "0x519464")]
			public float nextValue;

			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51949C", Offset = "0x51949C")]
			public float triggerValue;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5194D4", Offset = "0x5194D4")]
			public float speedRate;
		}

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51873C", Offset = "0x51873C")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518788", Offset = "0x518788")]
		[SerializeField]
		private SkinnedMeshRenderer renderer;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool appQuit;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5187D4", Offset = "0x5187D4")]
		[SerializeField]
		private Mouth[] mouth;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float delayTimer;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518820", Offset = "0x518820")]
		[SerializeField]
		private float volumeBoost;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51886C", Offset = "0x51886C")]
		[SerializeField]
		private float updateDelay;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5188B8", Offset = "0x5188B8")]
		[SerializeField]
		private float blendOpenSpeed;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518904", Offset = "0x518904")]
		[SerializeField]
		private float blendCloseSpeed;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518950", Offset = "0x518950")]
		[SerializeField]
		private float maxBlendRate;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x51899C", Offset = "0x51899C")]
		[SerializeField]
		private AnimationCurve openCurve;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5189E8", Offset = "0x5189E8")]
		[SerializeField]
		private AnimationCurve closeCurve;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518A34", Offset = "0x518A34")]
		[SerializeField]
		private bool isUseCurveWhenMaxClose;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] waveformArray;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518A80", Offset = "0x518A80")]
		[SerializeField]
		private bool isDebugOutputVolume;

		[Token(Token = "0x170000FB")]
		public AudioSource AudioSource
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x9FE9A0", Offset = "0x9FE9A0", VA = "0x9FE9A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x9FE9A8", Offset = "0x9FE9A8", VA = "0x9FE9A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public SkinnedMeshRenderer Renderer
		{
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x9FE9B0", Offset = "0x9FE9B0", VA = "0x9FE9B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x9FE9B8", Offset = "0x9FE9B8", VA = "0x9FE9B8")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public Mouth[] MouthData
		{
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0x9FE9C0", Offset = "0x9FE9C0", VA = "0x9FE9C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public float VolumeBoost
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x9FEAC8", Offset = "0x9FEAC8", VA = "0x9FEAC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x9FEAD0", Offset = "0x9FEAD0", VA = "0x9FEAD0")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public float UpdateDelay
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x9FEAD8", Offset = "0x9FEAD8", VA = "0x9FEAD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x9FEAE0", Offset = "0x9FEAE0", VA = "0x9FEAE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public float BlendOpenSpeed
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x9FEAE8", Offset = "0x9FEAE8", VA = "0x9FEAE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x9FEAF0", Offset = "0x9FEAF0", VA = "0x9FEAF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public float BlendCloseSpeed
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x9FEAF8", Offset = "0x9FEAF8", VA = "0x9FEAF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x9FEB00", Offset = "0x9FEB00", VA = "0x9FEB00")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public float MaxBlendRate
		{
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x9FEB08", Offset = "0x9FEB08", VA = "0x9FEB08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x9FEB10", Offset = "0x9FEB10", VA = "0x9FEB10")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public AnimationCurve OpenCurve
		{
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x9FEB18", Offset = "0x9FEB18", VA = "0x9FEB18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x9FEB20", Offset = "0x9FEB20", VA = "0x9FEB20")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public AnimationCurve CloseCurve
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x9FEB28", Offset = "0x9FEB28", VA = "0x9FEB28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x9FEB30", Offset = "0x9FEB30", VA = "0x9FEB30")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public bool IsUseCurveWhenMaxClose
		{
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x9FEB38", Offset = "0x9FEB38", VA = "0x9FEB38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x9FEB40", Offset = "0x9FEB40", VA = "0x9FEB40")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public bool IsDebugOutputVolume
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x9FEB4C", Offset = "0x9FEB4C", VA = "0x9FEB4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x9FEB54", Offset = "0x9FEB54", VA = "0x9FEB54")]
			set
			{
			}
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x9FE9C8", Offset = "0x9FE9C8", VA = "0x9FE9C8")]
		public void SetMouthIndex(MouthType type, int index)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x9FEA08", Offset = "0x9FEA08", VA = "0x9FEA08")]
		public int GetMouthIndex(MouthType type)
		{
			return default(int);
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x9FEA48", Offset = "0x9FEA48", VA = "0x9FEA48")]
		public void SetMouthTrigger(MouthType type, float value)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x9FEA88", Offset = "0x9FEA88", VA = "0x9FEA88")]
		public float GetMouthTrigger(MouthType type)
		{
			return default(float);
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x9FEB60", Offset = "0x9FEB60", VA = "0x9FEB60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x9FEBBC", Offset = "0x9FEBBC", VA = "0x9FEBBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x9FEED0", Offset = "0x9FEED0", VA = "0x9FEED0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x9FEFD8", Offset = "0x9FEFD8", VA = "0x9FEFD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x9FF0BC", Offset = "0x9FF0BC", VA = "0x9FF0BC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x9FECE0", Offset = "0x9FECE0", VA = "0x9FECE0")]
		private float CalcVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x9FED7C", Offset = "0x9FED7C", VA = "0x9FED7C")]
		private void CalcNextBlendValue(float volume)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x9FF0C8", Offset = "0x9FF0C8", VA = "0x9FF0C8")]
		private void SetMouthNextValue(MouthType type, float next)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x9FEEE0", Offset = "0x9FEEE0", VA = "0x9FEEE0")]
		private void OnBlendShapeUpdate()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x9FF084", Offset = "0x9FF084", VA = "0x9FF084")]
		private bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x9FF1BC", Offset = "0x9FF1BC", VA = "0x9FF1BC")]
		public LipSyncComponent()
		{
		}
	}
}
namespace Common
{
	[Token(Token = "0x20001D8")]
	public class CameraComponent : BaseMonoBehaviour
	{
		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera camera;

		[Token(Token = "0x17000107")]
		public Camera Camera
		{
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x768008", Offset = "0x768008", VA = "0x768008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x7680A0", Offset = "0x7680A0", VA = "0x7680A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x7681D0", Offset = "0x7681D0", VA = "0x7681D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x76831C", Offset = "0x76831C", VA = "0x76831C")]
		public CameraComponent()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class CameraManager : SingletonMonoBehaviour<CameraManager>
	{
		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3[] cameraPosArray;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3[] cameraPosArrayVRMode;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CameraComponent cameraComp;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string[] postProcessProfileNameArray;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject cameraGroup;

		[Token(Token = "0x17000108")]
		public CameraComponent CameraComp
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x76840C", Offset = "0x76840C", VA = "0x76840C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		public Camera MainCamera
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x768414", Offset = "0x768414", VA = "0x768414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		public Bloom BloomSetting
		{
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x764B20", Offset = "0x764B20", VA = "0x764B20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		public GameObject CameraGroup
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x76841C", Offset = "0x76841C", VA = "0x76841C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x768424", Offset = "0x768424", VA = "0x768424")]
			set
			{
			}
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x768324", Offset = "0x768324", VA = "0x768324")]
		public void SetCameraGroupPos(GameDefines.SceneID sceneID)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x76842C", Offset = "0x76842C", VA = "0x76842C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x7684C8", Offset = "0x7684C8", VA = "0x7684C8")]
		public void SetupPostprocessProfile()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x768430", Offset = "0x768430", VA = "0x768430")]
		public void CreateCameraGroup()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x76811C", Offset = "0x76811C", VA = "0x76811C")]
		public void SetCamera(CameraComponent camera)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x768294", Offset = "0x768294", VA = "0x768294")]
		public void RemoveCamera(CameraComponent camera)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x768644", Offset = "0x768644", VA = "0x768644")]
		public void ChangePostProcessing(int type)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x768648", Offset = "0x768648", VA = "0x768648")]
		public void ChangePostProcessingEnable(bool isEnable)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x76864C", Offset = "0x76864C", VA = "0x76864C")]
		public CameraManager()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public static class Debug
	{
		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool enableDebugLog;

		[Token(Token = "0x1700010C")]
		public static bool EnableDebugLog
		{
			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x768D34", Offset = "0x768D34", VA = "0x768D34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x768D9C", Offset = "0x768D9C", VA = "0x768D9C")]
			set
			{
			}
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x768E0C", Offset = "0x768E0C", VA = "0x768E0C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B184", Offset = "0x51B184")]
		public static void Break()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x768EA8", Offset = "0x768EA8", VA = "0x768EA8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B1BC", Offset = "0x51B1BC")]
		public static void Log(object message, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x768F60", Offset = "0x768F60", VA = "0x768F60")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B1F4", Offset = "0x51B1F4")]
		public static void Log(object message)
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x769004", Offset = "0x769004", VA = "0x769004")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B22C", Offset = "0x51B22C")]
		public static void LogError(object message, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x7690BC", Offset = "0x7690BC", VA = "0x7690BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B264", Offset = "0x51B264")]
		public static void LogError(object message)
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x769160", Offset = "0x769160", VA = "0x769160")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B29C", Offset = "0x51B29C")]
		public static void LogWarning(object message, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x769218", Offset = "0x769218", VA = "0x769218")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B2D4", Offset = "0x51B2D4")]
		public static void LogWarning(object message)
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x7692BC", Offset = "0x7692BC", VA = "0x7692BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B30C", Offset = "0x51B30C")]
		public static void WriteLine(object message)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x769320", Offset = "0x769320", VA = "0x769320")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B344", Offset = "0x51B344")]
		public static void Assert(bool found)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x769384", Offset = "0x769384", VA = "0x769384")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B37C", Offset = "0x51B37C")]
		public static void DrawRay(Vector3 start, Vector3 dir, Color color)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x7694F0", Offset = "0x7694F0", VA = "0x7694F0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B3B4", Offset = "0x51B3B4")]
		public static void DrawRay(Vector3 start, Vector3 dir)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x7695E0", Offset = "0x7695E0", VA = "0x7695E0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B3EC", Offset = "0x51B3EC")]
		public static void DrawLine(Vector3 start, Vector3 end, Color color)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x76974C", Offset = "0x76974C", VA = "0x76974C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B424", Offset = "0x51B424")]
		public static void DrawLine(Vector3 start, Vector3 end)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x76983C", Offset = "0x76983C", VA = "0x76983C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x51B45C", Offset = "0x51B45C")]
		public static void LogFormat(string format, params object[] args)
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class BGFadeComponent : FadeComponent
	{
		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color WhiteOutColor;

		[Token(Token = "0x40006D0")]
		private const float MaxColorRate = 1f;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Vector2 UVAnim;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Vector2 UVNormal;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518AEC", Offset = "0x518AEC")]
		[SerializeField]
		private AnimationCurve uvAnimSpeedCurve;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private FadeManager.FadeState fadeState;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector2 uvOffset;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float uvAnimTimer;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518B38", Offset = "0x518B38")]
		private Transform <Target>k__BackingField;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518B48", Offset = "0x518B48")]
		private Vector3 <TargetPos>k__BackingField;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518B58", Offset = "0x518B58")]
		private bool <IsEnd>k__BackingField;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool isAlreadyCalledNowFrame;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int alphaShaderId;

		[Token(Token = "0x1700010D")]
		public FadeManager.FadeState FadeState
		{
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x765A94", Offset = "0x765A94", VA = "0x765A94")]
			get
			{
				return default(FadeManager.FadeState);
			}
		}

		[Token(Token = "0x1700010E")]
		public Transform Target
		{
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x765A9C", Offset = "0x765A9C", VA = "0x765A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B494", Offset = "0x51B494")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x765AA4", Offset = "0x765AA4", VA = "0x765AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B4A4", Offset = "0x51B4A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public Vector3 TargetPos
		{
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x765AAC", Offset = "0x765AAC", VA = "0x765AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B4B4", Offset = "0x51B4B4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x765AB8", Offset = "0x765AB8", VA = "0x765AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B4C4", Offset = "0x51B4C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public bool IsEnd
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x765AC4", Offset = "0x765AC4", VA = "0x765AC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B4D4", Offset = "0x51B4D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x765ACC", Offset = "0x765ACC", VA = "0x765ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B4E4", Offset = "0x51B4E4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x765AD8", Offset = "0x765AD8", VA = "0x765AD8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x765BE0", Offset = "0x765BE0", VA = "0x765BE0", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x765D6C", Offset = "0x765D6C", VA = "0x765D6C")]
		private void EndFade()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x765DD8", Offset = "0x765DD8", VA = "0x765DD8")]
		public float GetFadeRate()
		{
			return default(float);
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x765DE0", Offset = "0x765DE0", VA = "0x765DE0")]
		public void FadeIn(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x765F70", Offset = "0x765F70", VA = "0x765F70")]
		public void FadeOut(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x7660DC", Offset = "0x7660DC", VA = "0x7660DC")]
		public void ForceFadeOff()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x766128", Offset = "0x766128", VA = "0x766128")]
		public BGFadeComponent()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class FadeComponent : BaseMonoBehaviour
	{
		[Token(Token = "0x40006DC")]
		public const float DefaultTime = 2f;

		[Token(Token = "0x40006DD")]
		protected const int RenderQueue = 3150;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Color fadeColor;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Material material;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float fadeTime;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float fadeRate;

		[Token(Token = "0x17000111")]
		public float FadeRate
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x769948", Offset = "0x769948", VA = "0x769948")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000112")]
		public bool IsUsing
		{
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0x765F50", Offset = "0x765F50", VA = "0x765F50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x765B88", Offset = "0x765B88", VA = "0x765B88", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x765D68", Offset = "0x765D68", VA = "0x765D68", Slot = "5")]
		public virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x765D7C", Offset = "0x765D7C", VA = "0x765D7C")]
		protected void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x76612C", Offset = "0x76612C", VA = "0x76612C")]
		public FadeComponent()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class FadeManager : SingletonMonoBehaviour<FadeManager>
	{
		[Token(Token = "0x200028F")]
		public enum FadeState
		{
			[Token(Token = "0x4000B31")]
			Default,
			[Token(Token = "0x4000B32")]
			In,
			[Token(Token = "0x4000B33")]
			Out,
			[Token(Token = "0x4000B34")]
			UVOut,
			[Token(Token = "0x4000B35")]
			WhiteIn,
			[Token(Token = "0x4000B36")]
			WhiteOut,
			[Token(Token = "0x4000B37")]
			ForceOn,
			[Token(Token = "0x4000B38")]
			ForceOff,
			[Token(Token = "0x4000B39")]
			BGIn,
			[Token(Token = "0x4000B3A")]
			BGOut,
			[Token(Token = "0x4000B3B")]
			ForceBGOff
		}

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject fadeParent;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518B68", Offset = "0x518B68")]
		private SystemFadeComponent <SystemFade>k__BackingField;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518B78", Offset = "0x518B78")]
		private GameFadeComponent <GameFade>k__BackingField;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518B88", Offset = "0x518B88")]
		private BGFadeComponent <BGFade>k__BackingField;

		[Token(Token = "0x40006E6")]
		private const string FadePrefabPath = "Fade";

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isPause;

		[Token(Token = "0x17000113")]
		public SystemFadeComponent SystemFade
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x769950", Offset = "0x769950", VA = "0x769950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B4F4", Offset = "0x51B4F4")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x769958", Offset = "0x769958", VA = "0x769958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B504", Offset = "0x51B504")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public GameFadeComponent GameFade
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x769960", Offset = "0x769960", VA = "0x769960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B514", Offset = "0x51B514")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x769968", Offset = "0x769968", VA = "0x769968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B524", Offset = "0x51B524")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public BGFadeComponent BGFade
		{
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x769970", Offset = "0x769970", VA = "0x769970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B534", Offset = "0x51B534")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x769978", Offset = "0x769978", VA = "0x769978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B544", Offset = "0x51B544")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public float FadeRate
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x764684", Offset = "0x764684", VA = "0x764684")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000117")]
		public bool IsPause
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x769980", Offset = "0x769980", VA = "0x769980")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x769988", Offset = "0x769988", VA = "0x769988")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public bool IsUsing
		{
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x769994", Offset = "0x769994", VA = "0x769994")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000119")]
		public bool IsEnd
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x769A7C", Offset = "0x769A7C", VA = "0x769A7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x769B10", Offset = "0x769B10", VA = "0x769B10")]
		public void SetAreaFadeValue(float value)
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x769BA0", Offset = "0x769BA0", VA = "0x769BA0")]
		public void SetCharaFadeValue(float value)
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x769C3C", Offset = "0x769C3C", VA = "0x769C3C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x7684CC", Offset = "0x7684CC", VA = "0x7684CC")]
		public void SetCamera(CameraComponent camera)
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x769DFC", Offset = "0x769DFC", VA = "0x769DFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x769F2C", Offset = "0x769F2C", VA = "0x769F2C")]
		public void FadeIn(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x76A154", Offset = "0x76A154", VA = "0x76A154")]
		public void FadeOut(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x76A380", Offset = "0x76A380", VA = "0x76A380")]
		public void UVFadeOut(Transform trans, float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x76A57C", Offset = "0x76A57C", VA = "0x76A57C")]
		public void UVFadeOut(Vector3 pos, float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x76A6A8", Offset = "0x76A6A8", VA = "0x76A6A8")]
		public void WhiteIn(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x76A8C8", Offset = "0x76A8C8", VA = "0x76A8C8")]
		public void WhiteOut(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x76AAE4", Offset = "0x76AAE4", VA = "0x76AAE4")]
		public void ForceFadeOn(Color color)
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x76ACC8", Offset = "0x76ACC8", VA = "0x76ACC8")]
		public void ForceFadeOff()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x76ADC4", Offset = "0x76ADC4", VA = "0x76ADC4")]
		public float GetGameFadeRate()
		{
			return default(float);
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x76ADE0", Offset = "0x76ADE0", VA = "0x76ADE0")]
		public void BGFadeIn(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x76AE88", Offset = "0x76AE88", VA = "0x76AE88")]
		public void BGFadeOut(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x76AF3C", Offset = "0x76AF3C", VA = "0x76AF3C")]
		public void ForceBGFadeOff()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x76AFEC", Offset = "0x76AFEC", VA = "0x76AFEC")]
		public void SetGameFadeScale(float scale)
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x76B064", Offset = "0x76B064", VA = "0x76B064")]
		public void SetGameFadeRenderQueue(int queue)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x76B0A8", Offset = "0x76B0A8", VA = "0x76B0A8")]
		public void SetSystemFadeSleep(bool sleep)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x76B0C8", Offset = "0x76B0C8", VA = "0x76B0C8")]
		public FadeManager()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x76B138", Offset = "0x76B138", VA = "0x76B138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B554", Offset = "0x51B554")]
		private void <Initialize>b__27_0(GameObject x)
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class GameFadeComponent : FadeComponent
	{
		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color WhiteOutColor;

		[Token(Token = "0x40006E9")]
		private const float MaxColorRate = 1f;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Vector2 UVAnim;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Vector2 UVNormal;

		[Token(Token = "0x40006EC")]
		public const int DEFAULT_MATERIAL_RENDER_QUEUE = 3150;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x518B98", Offset = "0x518B98")]
		[SerializeField]
		private AnimationCurve uvAnimSpeedCurve;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private FadeManager.FadeState fadeState;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector2 uvOffset;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float uvAnimTimer;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518BE4", Offset = "0x518BE4")]
		private Transform <Target>k__BackingField;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518BF4", Offset = "0x518BF4")]
		private Vector3 <TargetPos>k__BackingField;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518C04", Offset = "0x518C04")]
		private bool <IsEnd>k__BackingField;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool isAlreadyCalledNowFrame;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int alphaShaderId;

		[Token(Token = "0x1700011A")]
		public FadeManager.FadeState FadeState
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x76B280", Offset = "0x76B280", VA = "0x76B280")]
			get
			{
				return default(FadeManager.FadeState);
			}
		}

		[Token(Token = "0x1700011B")]
		public Transform Target
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x76B288", Offset = "0x76B288", VA = "0x76B288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B564", Offset = "0x51B564")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x76B290", Offset = "0x76B290", VA = "0x76B290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B574", Offset = "0x51B574")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public Vector3 TargetPos
		{
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x76B298", Offset = "0x76B298", VA = "0x76B298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B584", Offset = "0x51B584")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x76B2A4", Offset = "0x76B2A4", VA = "0x76B2A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B594", Offset = "0x51B594")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public bool IsEnd
		{
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x76B2B0", Offset = "0x76B2B0", VA = "0x76B2B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B5A4", Offset = "0x51B5A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x76B2B8", Offset = "0x76B2B8", VA = "0x76B2B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B5B4", Offset = "0x51B5B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x76B2C4", Offset = "0x76B2C4", VA = "0x76B2C4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x76B360", Offset = "0x76B360", VA = "0x76B360", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x76B688", Offset = "0x76B688", VA = "0x76B688")]
		private void EndFade()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x76B698", Offset = "0x76B698", VA = "0x76B698")]
		public float GetFadeRate()
		{
			return default(float);
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x769FD4", Offset = "0x769FD4", VA = "0x769FD4")]
		public void FadeIn(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x76A208", Offset = "0x76A208", VA = "0x76A208")]
		public void FadeOut(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x76A43C", Offset = "0x76A43C", VA = "0x76A43C")]
		public void UVFadeOut(Transform trans, float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x76A64C", Offset = "0x76A64C", VA = "0x76A64C")]
		public void UVFadeOut(Vector3 pos, float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x76A750", Offset = "0x76A750", VA = "0x76A750")]
		public void WhiteIn(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x76A970", Offset = "0x76A970", VA = "0x76A970")]
		public void WhiteOut(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x76ABA8", Offset = "0x76ABA8", VA = "0x76ABA8")]
		public void ForceFadeOn(Color color)
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x76AD78", Offset = "0x76AD78", VA = "0x76AD78")]
		public void ForceFadeOff()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x76B08C", Offset = "0x76B08C", VA = "0x76B08C")]
		public void SetRenderQueue(int queue)
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x76B6A0", Offset = "0x76B6A0", VA = "0x76B6A0")]
		public GameFadeComponent()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class SystemFadeComponent : FadeComponent
	{
		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int alphaShaderId;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518C14", Offset = "0x518C14")]
		private float <AreaValue>k__BackingField;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518C24", Offset = "0x518C24")]
		private float <CharaValue>k__BackingField;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x518C34", Offset = "0x518C34")]
		private bool <IsSleep>k__BackingField;

		[Token(Token = "0x1700011E")]
		public float AreaValue
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x770E9C", Offset = "0x770E9C", VA = "0x770E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B5C4", Offset = "0x51B5C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0x770EA4", Offset = "0x770EA4", VA = "0x770EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B5D4", Offset = "0x51B5D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public float CharaValue
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x770EAC", Offset = "0x770EAC", VA = "0x770EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B5E4", Offset = "0x51B5E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x770EB4", Offset = "0x770EB4", VA = "0x770EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B5F4", Offset = "0x51B5F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public bool IsSleep
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x770EBC", Offset = "0x770EBC", VA = "0x770EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B604", Offset = "0x51B604")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x770EC4", Offset = "0x770EC4", VA = "0x770EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B614", Offset = "0x51B614")]
			set
			{
			}
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x770ED0", Offset = "0x770ED0", VA = "0x770ED0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x770FB8", Offset = "0x770FB8", VA = "0x770FB8", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x7710CC", Offset = "0x7710CC", VA = "0x7710CC")]
		public SystemFadeComponent()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public abstract class BaseInput
	{
		[Token(Token = "0x2000290")]
		public enum HandType
		{
			[Token(Token = "0x4000B3D")]
			None,
			[Token(Token = "0x4000B3E")]
			LeftHand,
			[Token(Token = "0x4000B3F")]
			RightHand
		}

		[Token(Token = "0x2000291")]
		public delegate bool UpdateInput();

		[Token(Token = "0x2000292")]
		public delegate float UpdateAxis();

		[Token(Token = "0x2000293")]
		public struct PushData
		{
			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool push;

			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool repeat;

			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool release;

			[Token(Token = "0x4000B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<UpdateInput> updateList;
		}

		[Token(Token = "0x2000294")]
		public struct StickData
		{
			[Token(Token = "0x4000B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 inputValue;

			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool canUse;

			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<UpdateAxis> verticalUpdateList;

			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<UpdateAxis> horizontalUpdateList;
		}

		[Token(Token = "0x2000295")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510748", Offset = "0x510748")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4000B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x6001001")]
			[Address(RVA = "0x766E34", Offset = "0x766E34", VA = "0x766E34")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001002")]
			[Address(RVA = "0x7673A8", Offset = "0x7673A8", VA = "0x7673A8")]
			internal bool <GetInputAxisAction>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000296")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510758", Offset = "0x510758")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4000B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x6001003")]
			[Address(RVA = "0x766EDC", Offset = "0x766EDC", VA = "0x766EDC")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001004")]
			[Address(RVA = "0x7673D4", Offset = "0x7673D4", VA = "0x7673D4")]
			internal bool <GetInputButtonAction>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000297")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510768", Offset = "0x510768")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4000B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode key;

			[Token(Token = "0x6001005")]
			[Address(RVA = "0x766F74", Offset = "0x766F74", VA = "0x766F74")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6001006")]
			[Address(RVA = "0x7673E0", Offset = "0x7673E0", VA = "0x7673E0")]
			internal bool <GetInputKeyAction>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510778", Offset = "0x510778")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4000B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float inverse;

			[Token(Token = "0x6001007")]
			[Address(RVA = "0x76702C", Offset = "0x76702C", VA = "0x76702C")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001008")]
			[Address(RVA = "0x7673EC", Offset = "0x7673EC", VA = "0x7673EC")]
			internal float <GetAxisAction>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000299")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510788", Offset = "0x510788")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4000B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float inverse;

			[Token(Token = "0x6001009")]
			[Address(RVA = "0x7670F4", Offset = "0x7670F4", VA = "0x7670F4")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x600100A")]
			[Address(RVA = "0x76741C", Offset = "0x76741C", VA = "0x76741C")]
			internal float <GetAxisButtonAction>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool isReverseEnterButton;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PushData[] pushDataArray;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 localDevicePosition;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion localDeviceRotation;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StickData[] stickDataArray;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected HandType handType;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected HandType defaultHandType;

		[Token(Token = "0x17000121")]
		public bool IsReverseEnterButton
		{
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x766244", Offset = "0x766244", VA = "0x766244")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x76624C", Offset = "0x76624C", VA = "0x76624C")]
		public HandType GetHandType()
		{
			return default(HandType);
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x766254", Offset = "0x766254", VA = "0x766254", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x7663B4", Offset = "0x7663B4", VA = "0x7663B4", Slot = "5")]
		public virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x766B20", Offset = "0x766B20", VA = "0x766B20", Slot = "6")]
		public virtual void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x766B24", Offset = "0x766B24", VA = "0x766B24")]
		protected void AddInput(InputManager.ActionType action, UpdateInput update)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x766BB4", Offset = "0x766BB4", VA = "0x766BB4")]
		protected void AddStickInput(InputManager.StickType stick, UpdateAxis update, bool isHorizontal)
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x766C88", Offset = "0x766C88", VA = "0x766C88")]
		protected void ClearInput()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x766DA4", Offset = "0x766DA4", VA = "0x766DA4")]
		protected UpdateInput GetInputAxisAction(string name)
		{
			return null;
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x766E4C", Offset = "0x766E4C", VA = "0x766E4C", Slot = "7")]
		protected virtual UpdateInput GetInputButtonAction(string name)
		{
			return null;
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x766EE4", Offset = "0x766EE4", VA = "0x766EE4", Slot = "8")]
		protected virtual UpdateInput GetInputKeyAction(KeyCode key)
		{
			return null;
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x766F7C", Offset = "0x766F7C", VA = "0x766F7C")]
		protected UpdateAxis GetAxisAction(string name, bool isInverse = false)
		{
			return null;
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x767044", Offset = "0x767044", VA = "0x767044")]
		protected UpdateAxis GetAxisButtonAction(string name, bool isInverse)
		{
			return null;
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x7670FC", Offset = "0x7670FC", VA = "0x7670FC")]
		public bool GetButtonDown(InputManager.ActionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x767138", Offset = "0x767138", VA = "0x767138")]
		public bool GetButton(InputManager.ActionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x767174", Offset = "0x767174", VA = "0x767174")]
		public bool GetButtonRelease(InputManager.ActionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x7671B0", Offset = "0x7671B0", VA = "0x7671B0")]
		public Vector2 GetStick(InputManager.StickType type)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x7671F0", Offset = "0x7671F0", VA = "0x7671F0", Slot = "9")]
		protected virtual Vector3 LocalDevicesPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x767250", Offset = "0x767250", VA = "0x767250")]
		public Vector3 GetLocalDevicesPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x76725C", Offset = "0x76725C", VA = "0x76725C", Slot = "10")]
		protected virtual Quaternion LocalDevicesRotate()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x7672BC", Offset = "0x7672BC", VA = "0x7672BC")]
		public Quaternion GetLocalDevicesRotate()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x7672C8", Offset = "0x7672C8", VA = "0x7672C8")]
		protected BaseInput()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public abstract class BaseOculusInput : BaseInput
	{
		[Token(Token = "0x200029A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510798", Offset = "0x510798")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRInput.Axis1D axis;

			[Token(Token = "0x600100B")]
			[Address(RVA = "0x767934", Offset = "0x767934", VA = "0x767934")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600100C")]
			[Address(RVA = "0x767BD4", Offset = "0x767BD4", VA = "0x767BD4")]
			internal bool <GetInputButtonAction>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200029B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5107A8", Offset = "0x5107A8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRInput.Button button;

			[Token(Token = "0x600100D")]
			[Address(RVA = "0x7679CC", Offset = "0x7679CC", VA = "0x7679CC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600100E")]
			[Address(RVA = "0x767C58", Offset = "0x767C58", VA = "0x767C58")]
			internal bool <GetInputButtonAction>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200029C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5107B8", Offset = "0x5107B8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRInput.Axis2D axis;

			[Token(Token = "0x600100F")]
			[Address(RVA = "0x767A64", Offset = "0x767A64", VA = "0x767A64")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001010")]
			[Address(RVA = "0x767CC8", Offset = "0x767CC8", VA = "0x767CC8")]
			internal float <GetAxisActionX>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x200029D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5107C8", Offset = "0x5107C8")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRInput.Axis2D axis;

			[Token(Token = "0x6001011")]
			[Address(RVA = "0x767AFC", Offset = "0x767AFC", VA = "0x767AFC")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001012")]
			[Address(RVA = "0x767D38", Offset = "0x767D38", VA = "0x767D38")]
			internal float <GetAxisActionY>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x7678A4", Offset = "0x7678A4", VA = "0x7678A4", Slot = "11")]
		protected virtual UpdateInput GetInputButtonAction(OVRInput.Axis1D axis)
		{
			return null;
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x76793C", Offset = "0x76793C", VA = "0x76793C", Slot = "12")]
		protected virtual UpdateInput GetInputButtonAction(OVRInput.Button button)
		{
			return null;
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x7679D4", Offset = "0x7679D4", VA = "0x7679D4", Slot = "13")]
		protected virtual UpdateAxis GetAxisActionX(OVRInput.Axis2D axis)
		{
			return null;
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x767A6C", Offset = "0x767A6C", VA = "0x767A6C", Slot = "14")]
		protected virtual UpdateAxis GetAxisActionY(OVRInput.Axis2D axis)
		{
			return null;
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x767B04", Offset = "0x767B04", VA = "0x767B04", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x767B70", Offset = "0x767B70", VA = "0x767B70", Slot = "6")]
		public override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x767BD0", Offset = "0x767BD0", VA = "0x767BD0")]
		protected BaseOculusInput()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class InputHTCVive : BaseInput
	{
		[Serializable]
		[Token(Token = "0x200029E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5107D8", Offset = "0x5107D8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UpdateInput <>9__0_0;

			[Token(Token = "0x4000B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static UpdateInput <>9__0_1;

			[Token(Token = "0x4000B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static UpdateInput <>9__0_2;

			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static UpdateInput <>9__0_3;

			[Token(Token = "0x6001014")]
			[Address(RVA = "0x76BE54", Offset = "0x76BE54", VA = "0x76BE54")]
			public <>c()
			{
			}

			[Token(Token = "0x6001015")]
			[Address(RVA = "0x76BE5C", Offset = "0x76BE5C", VA = "0x76BE5C")]
			internal bool <Initialize>b__0_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001016")]
			[Address(RVA = "0x76BEB8", Offset = "0x76BEB8", VA = "0x76BEB8")]
			internal bool <Initialize>b__0_1()
			{
				return default(bool);
			}

			[Token(Token = "0x6001017")]
			[Address(RVA = "0x76BF14", Offset = "0x76BF14", VA = "0x76BF14")]
			internal bool <Initialize>b__0_2()
			{
				return default(bool);
			}

			[Token(Token = "0x6001018")]
			[Address(RVA = "0x76BF70", Offset = "0x76BF70", VA = "0x76BF70")]
			internal bool <Initialize>b__0_3()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x76B780", Offset = "0x76B780", VA = "0x76B780", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x76BC48", Offset = "0x76BC48", VA = "0x76BC48", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x76BCFC", Offset = "0x76BCFC", VA = "0x76BCFC", Slot = "9")]
		protected override Vector3 LocalDevicesPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x76BD74", Offset = "0x76BD74", VA = "0x76BD74", Slot = "10")]
		protected override Quaternion LocalDevicesRotate()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x76BDEC", Offset = "0x76BDEC", VA = "0x76BDEC")]
		public InputHTCVive()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class InputManager : SingletonMonoBehaviour<InputManager>
	{
		[Token(Token = "0x200029F")]
		public enum ActionType
		{
			[Token(Token = "0x4000B59")]
			Decide,
			[Token(Token = "0x4000B5A")]
			Cancel,
			[Token(Token = "0x4000B5B")]
			Return,
			[Token(Token = "0x4000B5C")]
			Grab,
			[Token(Token = "0x4000B5D")]
			Menu,
			[Token(Token = "0x4000B5E")]
			RightHand,
			[Token(Token = "0x4000B5F")]
			LeftHand,
			[Token(Token = "0x4000B60")]
			Retracking,
			[Token(Token = "0x4000B61")]
			Up,
			[Token(Token = "0x4000B62")]
			Down,
			[Token(Token = "0x4000B63")]
			Left,
			[Token(Token = "0x4000B64")]
			Right,
			[Token(Token = "0x4000B65")]
			Max
		}

		[Token(Token = "0x20002A0")]
		public enum StickType
		{
			[Token(Token = "0x4000B67")]
			Right,
			[Token(Token = "0x4000B68")]
			Left,
			[Token(Token = "0x4000B69")]
			Max
		}

		[Token(Token = "0x20002A1")]
		public enum HandType
		{
			[Token(Token = "0x4000B6B")]
			CanNotUseHand,
			[Token(Token = "0x4000B6C")]
			RotationOnly,
			[Token(Token = "0x4000B6D")]
			Right,
			[Token(Token = "0x4000B6E")]
			Left,
			[Token(Token = "0x4000B6F")]
			Max
		}

		[Token(Token = "0x4000701")]
		public const float InputThreshold = 0.5f;

		[Token(Token = "0x4000702")]
		public const float AxisThreshold = 0.9f;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BaseInput input;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HandType activeHandType;

		[Token(Token = "0x17000122")]
		public BaseInput Input
		{
			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x76BFCC", Offset = "0x76BFCC", VA = "0x76BFCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		public HandType ActiveHandType
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x76BFD4", Offset = "0x76BFD4", VA = "0x76BFD4")]
			get
			{
				return default(HandType);
			}
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x76BFDC", Offset = "0x76BFDC", VA = "0x76BFDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public bool IsHandController
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x76C12C", Offset = "0x76C12C", VA = "0x76C12C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000001")]
		public event Action changeActiveHandCallback
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x76BFE4", Offset = "0x76BFE4", VA = "0x76BFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B624", Offset = "0x51B624")]
			add
			{
			}
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x76C088", Offset = "0x76C088", VA = "0x76C088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B634", Offset = "0x51B634")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x76C134", Offset = "0x76C134", VA = "0x76C134")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x76C264", Offset = "0x76C264", VA = "0x76C264")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x76C1D8", Offset = "0x76C1D8", VA = "0x76C1D8")]
		private void CheckActiveHand()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x76C27C", Offset = "0x76C27C", VA = "0x76C27C")]
		public void SetDevice(PlatformManager.PlatformType platform)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x7657D0", Offset = "0x7657D0", VA = "0x7657D0")]
		public bool GetButtonDown(ActionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x76C3C4", Offset = "0x76C3C4", VA = "0x76C3C4")]
		public bool GetButton(ActionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x76C3D4", Offset = "0x76C3D4", VA = "0x76C3D4")]
		public bool GetButtonRelease(ActionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x765744", Offset = "0x765744", VA = "0x765744")]
		public Vector2 GetStick(StickType type)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x76C3E4", Offset = "0x76C3E4", VA = "0x76C3E4")]
		public Vector3 LocalDevicesPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x76C404", Offset = "0x76C404", VA = "0x76C404")]
		public Quaternion LocalDevicesRotate()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x76C424", Offset = "0x76C424", VA = "0x76C424")]
		public BaseInput.HandType GetHandType()
		{
			return default(BaseInput.HandType);
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x76C440", Offset = "0x76C440", VA = "0x76C440")]
		public bool IsReverseEnterButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x76C448", Offset = "0x76C448", VA = "0x76C448")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class InputOculusGo : BaseOculusInput
	{
		[Token(Token = "0x20002A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5107E8", Offset = "0x5107E8")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRInput.Axis1D axis;

			[Token(Token = "0x6001019")]
			[Address(RVA = "0x76C788", Offset = "0x76C788", VA = "0x76C788")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600101A")]
			[Address(RVA = "0x76CA30", Offset = "0x76CA30", VA = "0x76CA30")]
			internal bool <GetInputButtonAction>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5107F8", Offset = "0x5107F8")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRInput.Button button;

			[Token(Token = "0x600101B")]
			[Address(RVA = "0x76C820", Offset = "0x76C820", VA = "0x76C820")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600101C")]
			[Address(RVA = "0x76CAB4", Offset = "0x76CAB4", VA = "0x76CAB4")]
			internal bool <GetInputButtonAction>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510808", Offset = "0x510808")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRInput.Axis2D axis;

			[Token(Token = "0x600101D")]
			[Address(RVA = "0x76C8B8", Offset = "0x76C8B8", VA = "0x76C8B8")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600101E")]
			[Address(RVA = "0x76CB24", Offset = "0x76CB24", VA = "0x76CB24")]
			internal float <GetAxisActionX>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x20002A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510818", Offset = "0x510818")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRInput.Axis2D axis;

			[Token(Token = "0x600101F")]
			[Address(RVA = "0x76C950", Offset = "0x76C950", VA = "0x76C950")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001020")]
			[Address(RVA = "0x76CB94", Offset = "0x76CB94", VA = "0x76CB94")]
			internal float <GetAxisActionY>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x76C4B8", Offset = "0x76C4B8", VA = "0x76C4B8", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x76C5D8", Offset = "0x76C5D8", VA = "0x76C5D8", Slot = "9")]
		protected override Vector3 LocalDevicesPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x76C650", Offset = "0x76C650", VA = "0x76C650", Slot = "10")]
		protected override Quaternion LocalDevicesRotate()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x76C6F8", Offset = "0x76C6F8", VA = "0x76C6F8", Slot = "11")]
		protected override UpdateInput GetInputButtonAction(OVRInput.Axis1D axis)
		{
			return null;
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x76C790", Offset = "0x76C790", VA = "0x76C790", Slot = "12")]
		protected override UpdateInput GetInputButtonAction(OVRInput.Button button)
		{
			return null;
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x76C828", Offset = "0x76C828", VA = "0x76C828", Slot = "13")]
		protected override UpdateAxis GetAxisActionX(OVRInput.Axis2D axis)
		{
			return null;
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x76C8C0", Offset = "0x76C8C0", VA = "0x76C8C0", Slot = "14")]
		protected override UpdateAxis GetAxisActionY(OVRInput.Axis2D axis)
		{
			return null;
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x76C958", Offset = "0x76C958", VA = "0x76C958", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x76C9C4", Offset = "0x76C9C4", VA = "0x76C9C4", Slot = "6")]
		public override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x76C3B4", Offset = "0x76C3B4", VA = "0x76C3B4")]
		public InputOculusGo()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class InputOculusQuest : BaseOculusInput
	{
		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x76CC0C", Offset = "0x76CC0C", VA = "0x76CC0C", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x76CF5C", Offset = "0x76CF5C", VA = "0x76CF5C", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x76D0C8", Offset = "0x76D0C8", VA = "0x76D0C8", Slot = "9")]
		protected override Vector3 LocalDevicesPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x76D140", Offset = "0x76D140", VA = "0x76D140", Slot = "10")]
		protected override Quaternion LocalDevicesRotate()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x76C3B8", Offset = "0x76C3B8", VA = "0x76C3B8")]
		public InputOculusQuest()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class InputOculusRift : BaseOculusInput
	{
		[Serializable]
		[Token(Token = "0x20002A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510828", Offset = "0x510828")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UpdateInput <>9__5_0;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static UpdateInput <>9__5_1;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static UpdateInput <>9__5_2;

			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static UpdateInput <>9__5_3;

			[Token(Token = "0x6001022")]
			[Address(RVA = "0x76DEF0", Offset = "0x76DEF0", VA = "0x76DEF0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001023")]
			[Address(RVA = "0x76DEF8", Offset = "0x76DEF8", VA = "0x76DEF8")]
			internal bool <SetOculusTouchInput>b__5_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001024")]
			[Address(RVA = "0x76DF74", Offset = "0x76DF74", VA = "0x76DF74")]
			internal bool <SetOculusTouchInput>b__5_1()
			{
				return default(bool);
			}

			[Token(Token = "0x6001025")]
			[Address(RVA = "0x76DFF0", Offset = "0x76DFF0", VA = "0x76DFF0")]
			internal bool <SetOculusTouchInput>b__5_2()
			{
				return default(bool);
			}

			[Token(Token = "0x6001026")]
			[Address(RVA = "0x76E06C", Offset = "0x76E06C", VA = "0x76E06C")]
			internal bool <SetOculusTouchInput>b__5_3()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float inputCheckTimer;

		[Token(Token = "0x4000707")]
		private const float InputCheckTime = 5f;

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x76D1B8", Offset = "0x76D1B8", VA = "0x76D1B8", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x76DAA4", Offset = "0x76DAA4", VA = "0x76DAA4", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x76DC10", Offset = "0x76DC10", VA = "0x76DC10")]
		private bool IsActiveOculusTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x76D1F0", Offset = "0x76D1F0", VA = "0x76D1F0")]
		private void SetOculusTouchInput()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x76D7E4", Offset = "0x76D7E4", VA = "0x76D7E4")]
		private void SetXInput()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x76DCCC", Offset = "0x76DCCC", VA = "0x76DCCC")]
		private void CheckInputDevice()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x76DD9C", Offset = "0x76DD9C", VA = "0x76DD9C", Slot = "9")]
		protected override Vector3 LocalDevicesPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x76DE14", Offset = "0x76DE14", VA = "0x76DE14", Slot = "10")]
		protected override Quaternion LocalDevicesRotate()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x76C3B0", Offset = "0x76C3B0", VA = "0x76C3B0")]
		public InputOculusRift()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class InputOpenVR : BaseInput
	{
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x76E0E8", Offset = "0x76E0E8", VA = "0x76E0E8", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x76E0EC", Offset = "0x76E0EC", VA = "0x76E0EC", Slot = "5")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x76E0F0", Offset = "0x76E0F0", VA = "0x76E0F0", Slot = "9")]
		protected override Vector3 LocalDevicesPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x76E168", Offset = "0x76E168", VA = "0x76E168", Slot = "10")]
		protected override Quaternion LocalDevicesRotate()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x76E1E0", Offset = "0x76E1E0", VA = "0x76E1E0")]
		public InputOpenVR()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class InputPC : BaseInput
	{
		[Serializable]
		[Token(Token = "0x20002A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510838", Offset = "0x510838")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UpdateInput <>9__0_0;

			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static UpdateInput <>9__0_1;

			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static UpdateInput <>9__0_2;

			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static UpdateInput <>9__0_3;

			[Token(Token = "0x6001028")]
			[Address(RVA = "0x76E808", Offset = "0x76E808", VA = "0x76E808")]
			public <>c()
			{
			}

			[Token(Token = "0x6001029")]
			[Address(RVA = "0x76E810", Offset = "0x76E810", VA = "0x76E810")]
			internal bool <Initialize>b__0_0()
			{
				return default(bool);
			}

			[Token(Token = "0x600102A")]
			[Address(RVA = "0x76E86C", Offset = "0x76E86C", VA = "0x76E86C")]
			internal bool <Initialize>b__0_1()
			{
				return default(bool);
			}

			[Token(Token = "0x600102B")]
			[Address(RVA = "0x76E8C8", Offset = "0x76E8C8", VA = "0x76E8C8")]
			internal bool <Initialize>b__0_2()
			{
				return default(bool);
			}

			[Token(Token = "0x600102C")]
			[Address(RVA = "0x76E924", Offset = "0x76E924", VA = "0x76E924")]
			internal bool <Initialize>b__0_3()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x76E1E4", Offset = "0x76E1E4", VA = "0x76E1E4", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x76C3AC", Offset = "0x76C3AC", VA = "0x76C3AC")]
		public InputPC()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class InputPS4 : BaseInput
	{
		[Serializable]
		[Token(Token = "0x20002A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510848", Offset = "0x510848")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UpdateInput <>9__2_0;

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static UpdateInput <>9__2_1;

			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static UpdateInput <>9__2_2;

			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static UpdateInput <>9__2_3;

			[Token(Token = "0x600102E")]
			[Address(RVA = "0x76EE14", Offset = "0x76EE14", VA = "0x76EE14")]
			public <>c()
			{
			}

			[Token(Token = "0x600102F")]
			[Address(RVA = "0x76EE1C", Offset = "0x76EE1C", VA = "0x76EE1C")]
			internal bool <Initialize>b__2_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001030")]
			[Address(RVA = "0x76EE78", Offset = "0x76EE78", VA = "0x76EE78")]
			internal bool <Initialize>b__2_1()
			{
				return default(bool);
			}

			[Token(Token = "0x6001031")]
			[Address(RVA = "0x76EED4", Offset = "0x76EED4", VA = "0x76EED4")]
			internal bool <Initialize>b__2_2()
			{
				return default(bool);
			}

			[Token(Token = "0x6001032")]
			[Address(RVA = "0x76EF30", Offset = "0x76EF30", VA = "0x76EF30")]
			internal bool <Initialize>b__2_3()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string decideButton;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string cancelButton;

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x76E980", Offset = "0x76E980", VA = "0x76E980", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x76C3BC", Offset = "0x76C3BC", VA = "0x76C3BC")]
		public InputPS4()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class InputSwitch : BaseInput
	{
		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x76C3C0", Offset = "0x76C3C0", VA = "0x76C3C0")]
		public InputSwitch()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class BasePlatform
	{
		[Token(Token = "0x20002A9")]
		public enum Trophy
		{
			[Token(Token = "0x4000B84")]
			WATCH_ALL_STORY,
			[Token(Token = "0x4000B85")]
			FIND_ALL_COINS,
			[Token(Token = "0x4000B86")]
			FIND_COIN,
			[Token(Token = "0x4000B87")]
			GAZE_HOLO,
			[Token(Token = "0x4000B88")]
			GAZE_MYURI,
			[Token(Token = "0x4000B89")]
			FIRST_SAW
		}

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GameDefines.Language platformLanguage;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly ReadOnlyCollection<string> TrophyName;

		[Token(Token = "0x17000125")]
		public GameDefines.Language PlatformLanguage
		{
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x767DB0", Offset = "0x767DB0", VA = "0x767DB0")]
			get
			{
				return default(GameDefines.Language);
			}
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x767DB8", Offset = "0x767DB8", VA = "0x767DB8", Slot = "4")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x767E1C", Offset = "0x767E1C", VA = "0x767E1C", Slot = "5")]
		public virtual bool CanChangeSceneMain()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x767E24", Offset = "0x767E24", VA = "0x767E24", Slot = "6")]
		public virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x767E28", Offset = "0x767E28", VA = "0x767E28", Slot = "7")]
		public virtual void OnAppQuit()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x767DBC", Offset = "0x767DBC", VA = "0x767DBC")]
		private void CheckLanguage()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x767E2C", Offset = "0x767E2C", VA = "0x767E2C", Slot = "8")]
		public virtual void UnlockTrophy(Trophy trophy)
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x767E30", Offset = "0x767E30", VA = "0x767E30")]
		public BasePlatform()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class OculusPlatform : BasePlatform
	{
		[Token(Token = "0x20002AA")]
		public enum State
		{
			[Token(Token = "0x4000B8B")]
			NotCheck,
			[Token(Token = "0x4000B8C")]
			Checking,
			[Token(Token = "0x4000B8D")]
			Success,
			[Token(Token = "0x4000B8E")]
			Failure
		}

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool exitAppOnFailure;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private State state;

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x76EF8C", Offset = "0x76EF8C", VA = "0x76EF8C", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x76F1E0", Offset = "0x76F1E0", VA = "0x76F1E0", Slot = "5")]
		public override bool CanChangeSceneMain()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x76EFB0", Offset = "0x76EFB0", VA = "0x76EFB0")]
		private void CheckEntitlement()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x76F21C", Offset = "0x76F21C", VA = "0x76F21C")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x76F1F0", Offset = "0x76F1F0", VA = "0x76F1F0")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x76F180", Offset = "0x76F180", VA = "0x76F180")]
		private void CheckLanguage()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x76F278", Offset = "0x76F278", VA = "0x76F278")]
		public OculusPlatform()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class PlatformManager : SingletonMonoBehaviour<PlatformManager>
	{
		[Token(Token = "0x20002AB")]
		public enum PlatformType
		{
			[Token(Token = "0x4000B90")]
			PC = 1,
			[Token(Token = "0x4000B91")]
			OculusRift = 4,
			[Token(Token = "0x4000B92")]
			OculusGO = 8,
			[Token(Token = "0x4000B93")]
			OculusQuest = 0x10,
			[Token(Token = "0x4000B94")]
			HTCVive = 0x20,
			[Token(Token = "0x4000B95")]
			OpenVR = 0x40,
			[Token(Token = "0x4000B96")]
			PS4 = 0x80,
			[Token(Token = "0x4000B97")]
			PSVR = 0x100,
			[Token(Token = "0x4000B98")]
			Switch = 0x200
		}

		[Token(Token = "0x400070E")]
		public const PlatformType InvalidType = (PlatformType)0;

		[Token(Token = "0x400070F")]
		public const PlatformType AllPlatform = (PlatformType)1021;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlatformType type;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BasePlatform platform;

		[Token(Token = "0x17000126")]
		public PlatformType Type
		{
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x76F2E8", Offset = "0x76F2E8", VA = "0x76F2E8")]
			get
			{
				return default(PlatformType);
			}
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x76F2F0", Offset = "0x76F2F0", VA = "0x76F2F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public BasePlatform Platform
		{
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x76F2F8", Offset = "0x76F2F8", VA = "0x76F2F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x76F300", Offset = "0x76F300", VA = "0x76F300")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x76F370", Offset = "0x76F370", VA = "0x76F370")]
		public bool CanChangeSceneMain()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x76F388", Offset = "0x76F388", VA = "0x76F388")]
		public GameDefines.Language GetPlatformLanguage()
		{
			return default(GameDefines.Language);
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x76F3A0", Offset = "0x76F3A0", VA = "0x76F3A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x76F3B8", Offset = "0x76F3B8", VA = "0x76F3B8", Slot = "5")]
		protected override void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x76F41C", Offset = "0x76F41C", VA = "0x76F41C")]
		public void UnlockTrophy(BasePlatform.Trophy trophy)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x76F434", Offset = "0x76F434", VA = "0x76F434")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class ProjectDefine
	{
		[Token(Token = "0x4000712")]
		public const int SEControllerMax = 32;

		[Token(Token = "0x4000713")]
		public const int ResourceLoadThreadMax = 20;

		[Token(Token = "0x4000714")]
		public const float AnimationDefaultBlendTime = 0.1f;

		[Token(Token = "0x4000715")]
		public const float GameFPS = 60f;

		[Token(Token = "0x4000716")]
		public const float AnimationFPS = 60f;

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x76F4AC", Offset = "0x76F4AC", VA = "0x76F4AC")]
		public ProjectDefine()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class ResourceManager : SingletonMonoBehaviour<ResourceManager>
	{
		[Token(Token = "0x20002AC")]
		[Flags]
		public enum LoadCategory
		{
			[Token(Token = "0x4000B9A")]
			Unknown = 0,
			[Token(Token = "0x4000B9B")]
			Static = 1,
			[Token(Token = "0x4000B9C")]
			Dynamic = 2,
			[Token(Token = "0x4000B9D")]
			Timeline = 4,
			[Token(Token = "0x4000B9E")]
			Menu = 8
		}

		[Token(Token = "0x20002AD")]
		public enum LoadStatus
		{
			[Token(Token = "0x4000BA0")]
			Unknown,
			[Token(Token = "0x4000BA1")]
			Wait,
			[Token(Token = "0x4000BA2")]
			Loading,
			[Token(Token = "0x4000BA3")]
			Success,
			[Token(Token = "0x4000BA4")]
			Failure
		}

		[Token(Token = "0x20002AE")]
		public class ResourceData
		{
			[Token(Token = "0x4000BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string name;

			[Token(Token = "0x4000BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AsyncOperationHandle<IList<UnityEngine.Object>> handle;

			[Token(Token = "0x4000BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private LoadCategory category;

			[Token(Token = "0x4000BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityEngine.Object unityObject;

			[Token(Token = "0x4000BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private byte[] byteArray;

			[Token(Token = "0x4000BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int referenceCount;

			[Token(Token = "0x4000BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private LoadStatus loadStatus;

			[Token(Token = "0x4000BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private ResourceData parentResourceData;

			[Token(Token = "0x4000BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<ResourceData> childResourceDataList;

			[Token(Token = "0x4000BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Type classType;

			[Token(Token = "0x4000BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool autoLoadAllAsset;

			[Token(Token = "0x4000BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
			private bool labelLoad;

			[Token(Token = "0x4000BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
			private bool isLabelHandle;

			[Token(Token = "0x1700014C")]
			public string Name
			{
				[Token(Token = "0x6001033")]
				[Address(RVA = "0x770B54", Offset = "0x770B54", VA = "0x770B54")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001034")]
				[Address(RVA = "0x770B5C", Offset = "0x770B5C", VA = "0x770B5C")]
				set
				{
				}
			}

			[Token(Token = "0x1700014D")]
			public AsyncOperationHandle<IList<UnityEngine.Object>> Handle
			{
				[Token(Token = "0x6001035")]
				[Address(RVA = "0x770B64", Offset = "0x770B64", VA = "0x770B64")]
				get
				{
					return default(AsyncOperationHandle<IList<UnityEngine.Object>>);
				}
				[Token(Token = "0x6001036")]
				[Address(RVA = "0x770B70", Offset = "0x770B70", VA = "0x770B70")]
				set
				{
				}
			}

			[Token(Token = "0x1700014E")]
			public LoadCategory Category
			{
				[Token(Token = "0x6001037")]
				[Address(RVA = "0x770B78", Offset = "0x770B78", VA = "0x770B78")]
				get
				{
					return default(LoadCategory);
				}
				[Token(Token = "0x6001038")]
				[Address(RVA = "0x770B80", Offset = "0x770B80", VA = "0x770B80")]
				set
				{
				}
			}

			[Token(Token = "0x1700014F")]
			public UnityEngine.Object UnityObject
			{
				[Token(Token = "0x6001039")]
				[Address(RVA = "0x770B88", Offset = "0x770B88", VA = "0x770B88")]
				get
				{
					return null;
				}
				[Token(Token = "0x600103A")]
				[Address(RVA = "0x770B90", Offset = "0x770B90", VA = "0x770B90")]
				set
				{
				}
			}

			[Token(Token = "0x17000150")]
			public byte[] ByteArray
			{
				[Token(Token = "0x600103B")]
				[Address(RVA = "0x770B98", Offset = "0x770B98", VA = "0x770B98")]
				get
				{
					return null;
				}
				[Token(Token = "0x600103C")]
				[Address(RVA = "0x770BA0", Offset = "0x770BA0", VA = "0x770BA0")]
				set
				{
				}
			}

			[Token(Token = "0x17000151")]
			public int ReferenceCount
			{
				[Token(Token = "0x600103D")]
				[Address(RVA = "0x770BA8", Offset = "0x770BA8", VA = "0x770BA8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600103E")]
				[Address(RVA = "0x770BB0", Offset = "0x770BB0", VA = "0x770BB0")]
				set
				{
				}
			}

			[Token(Token = "0x17000152")]
			public LoadStatus LoadStatus
			{
				[Token(Token = "0x600103F")]
				[Address(RVA = "0x770BB8", Offset = "0x770BB8", VA = "0x770BB8")]
				get
				{
					return default(LoadStatus);
				}
				[Token(Token = "0x6001040")]
				[Address(RVA = "0x770BC0", Offset = "0x770BC0", VA = "0x770BC0")]
				set
				{
				}
			}

			[Token(Token = "0x17000153")]
			public ResourceData ParentResourceData
			{
				[Token(Token = "0x6001041")]
				[Address(RVA = "0x770BC8", Offset = "0x770BC8", VA = "0x770BC8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001042")]
				[Address(RVA = "0x770BD0", Offset = "0x770BD0", VA = "0x770BD0")]
				set
				{
				}
			}

			[Token(Token = "0x17000154")]
			public List<ResourceData> ChildResourceDataList
			{
				[Token(Token = "0x6001043")]
				[Address(RVA = "0x770BD8", Offset = "0x770BD8", VA = "0x770BD8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001044")]
				[Address(RVA = "0x770BE0", Offset = "0x770BE0", VA = "0x770BE0")]
				set
				{
				}
			}

			[Token(Token = "0x17000155")]
			public Type ClassType
			{
				[Token(Token = "0x6001045")]
				[Address(RVA = "0x770BE8", Offset = "0x770BE8", VA = "0x770BE8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001046")]
				[Address(RVA = "0x770BF0", Offset = "0x770BF0", VA = "0x770BF0")]
				set
				{
				}
			}

			[Token(Token = "0x17000156")]
			public bool AutoLoadAllAsset
			{
				[Token(Token = "0x6001047")]
				[Address(RVA = "0x770BF8", Offset = "0x770BF8", VA = "0x770BF8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001048")]
				[Address(RVA = "0x770C00", Offset = "0x770C00", VA = "0x770C00")]
				set
				{
				}
			}

			[Token(Token = "0x17000157")]
			public bool LabelLoad
			{
				[Token(Token = "0x6001049")]
				[Address(RVA = "0x770C0C", Offset = "0x770C0C", VA = "0x770C0C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600104A")]
				[Address(RVA = "0x770C14", Offset = "0x770C14", VA = "0x770C14")]
				set
				{
				}
			}

			[Token(Token = "0x17000158")]
			public bool IsLabelHandle
			{
				[Token(Token = "0x600104B")]
				[Address(RVA = "0x770C20", Offset = "0x770C20", VA = "0x770C20")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600104C")]
				[Address(RVA = "0x770C28", Offset = "0x770C28", VA = "0x770C28")]
				set
				{
				}
			}

			[Token(Token = "0x600104D")]
			[Address(RVA = "0x76FFB0", Offset = "0x76FFB0", VA = "0x76FFB0")]
			public ResourceData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510868", Offset = "0x510868")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<ResourceData> <>9__8_0;

			[Token(Token = "0x600104F")]
			[Address(RVA = "0x77095C", Offset = "0x77095C", VA = "0x77095C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001050")]
			[Address(RVA = "0x770964", Offset = "0x770964", VA = "0x770964")]
			internal bool <Update>b__8_0(ResourceData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510878", Offset = "0x510878")]
		private sealed class <LoadResource>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResourceData resourceData;

			[Token(Token = "0x17000159")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001054")]
				[Address(RVA = "0x770AE4", Offset = "0x770AE4", VA = "0x770AE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001056")]
				[Address(RVA = "0x770B4C", Offset = "0x770B4C", VA = "0x770B4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001051")]
			[Address(RVA = "0x770044", Offset = "0x770044", VA = "0x770044")]
			[DebuggerHidden]
			public <LoadResource>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001052")]
			[Address(RVA = "0x770988", Offset = "0x770988", VA = "0x770988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001053")]
			[Address(RVA = "0x77098C", Offset = "0x77098C", VA = "0x77098C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001055")]
			[Address(RVA = "0x770AEC", Offset = "0x770AEC", VA = "0x770AEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510888", Offset = "0x510888")]
		private sealed class <>c__DisplayClass24_0<T> where T : UnityEngine.Object
		{
			[Token(Token = "0x4000BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T asset;

			[Token(Token = "0x6001057")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001058")]
			internal void <LoadWaitCoroutine>b__0(T x)
			{
			}
		}

		[Token(Token = "0x20002B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x510898", Offset = "0x510898")]
		private sealed class <LoadWaitCoroutine>d__24<T> : IEnumerator<object>, IEnumerator, IDisposable where T : UnityEngine.Object
		{
			[Token(Token = "0x4000BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string resourcePath;

			[Token(Token = "0x4000BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private <>c__DisplayClass24_0<T> <>8__1;

			[Token(Token = "0x4000BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> callback;

			[Token(Token = "0x1700015B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600105C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600105E")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001059")]
			[DebuggerHidden]
			public <LoadWaitCoroutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600105A")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600105B")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600105D")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, ResourceData> loadRequestDictionary;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<ResourceData> loadRequestList;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<ResourceData> loadList;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, ResourceData> resourceDictionary;

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x76F4B4", Offset = "0x76F4B4", VA = "0x76F4B4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x76F594", Offset = "0x76F594", VA = "0x76F594")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x76FD58", Offset = "0x76FD58", VA = "0x76FD58")]
		public bool IsResourceLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x76FDBC", Offset = "0x76FDBC", VA = "0x76FDBC")]
		public bool IsResourceLoading(string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x76FE54", Offset = "0x76FE54", VA = "0x76FE54")]
		public LoadStatus GetLoadStatus(string filePath)
		{
			return default(LoadStatus);
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x76FF48", Offset = "0x76FF48", VA = "0x76FF48")]
		public bool IsResourceLoaded(string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x76FC94", Offset = "0x76FC94", VA = "0x76FC94")]
		private ResourceData CreateResourceData(string fileName, LoadCategory category, Type type, bool noAutoLoadAllAsset, bool labelLoad, bool isLabelHandle)
		{
			return null;
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x76FFB8", Offset = "0x76FFB8", VA = "0x76FFB8")]
		private void AddResourceData(ResourceData resourceData)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x76FC24", Offset = "0x76FC24", VA = "0x76FC24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51B644", Offset = "0x51B644")]
		private IEnumerator LoadResource(ResourceData resourceData)
		{
			return null;
		}

		[Token(Token = "0x6000ED4")]
		public void LoadResourceRequest<T>(string filePath, bool labelLoad = false, LoadCategory category = LoadCategory.Dynamic, bool noAutoLoadAllAsset = false)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x769D4C", Offset = "0x769D4C", VA = "0x769D4C")]
		public void LoadResourceRequest(string filePath, bool labelLoad = false, LoadCategory category = LoadCategory.Dynamic, bool noAutoLoadAllAsset = false)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x770070", Offset = "0x770070", VA = "0x770070")]
		private bool LoadResourceRequest(string filePath, bool labelLoad, LoadCategory category, Type type, bool noAutoLoadAllAsset)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED7")]
		public bool GetResource<T>(string filePath, Action<T> callBack) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x7701E4", Offset = "0x7701E4", VA = "0x7701E4")]
		public void UnLoadResource(string filePath, LoadCategory category = LoadCategory.Unknown, bool unloadAllLoadedObjects = false)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x770410", Offset = "0x770410", VA = "0x770410")]
		public void UnLoadResource(LoadCategory loadCategory, bool callUnloadAssets = false)
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x7706D8", Offset = "0x7706D8", VA = "0x7706D8")]
		public bool AddCategory(string filePath, LoadCategory category)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x7707B0", Offset = "0x7707B0", VA = "0x7707B0")]
		public bool RemoveCategory(string filePath, LoadCategory category)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51B6A8", Offset = "0x51B6A8")]
		public IEnumerator LoadWaitCoroutine<T>(string resourcePath, [Optional] Action<T> callback) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x770888", Offset = "0x770888", VA = "0x770888")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public abstract class BaseMonoBehaviour : MonoBehaviour
	{
		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject m_gameObject;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody m_rigidBody;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider m_collider;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer m_renderer;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator m_animator;

		[Token(Token = "0x17000128")]
		public new GameObject gameObject
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x767500", Offset = "0x767500", VA = "0x767500")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		public new Transform transform
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x767590", Offset = "0x767590", VA = "0x767590")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		public Rigidbody rigidbody
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x767628", Offset = "0x767628", VA = "0x767628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		public Collider collider
		{
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x7676C0", Offset = "0x7676C0", VA = "0x7676C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		public Renderer renderer
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x767758", Offset = "0x767758", VA = "0x767758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		public Animator animator
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x7677F0", Offset = "0x7677F0", VA = "0x7677F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x767888", Offset = "0x767888", VA = "0x767888", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x76788C", Offset = "0x76788C", VA = "0x76788C")]
		public void ResetCache()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x76789C", Offset = "0x76789C", VA = "0x76789C")]
		protected BaseMonoBehaviour()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class GameStateMachine<T>
	{
		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameStateBase<T> currentState;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameStateBase<T> prevState;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameStateBase<T> nextState;

		[Token(Token = "0x1700012E")]
		public GameStateBase<T> CurrentState
		{
			[Token(Token = "0x6000EE7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		public GameStateBase<T> PrevState
		{
			[Token(Token = "0x6000EE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		public GameStateBase<T> NextState
		{
			[Token(Token = "0x6000EE9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EEA")]
		public void SetNextState(GameStateBase<T> nextState)
		{
		}

		[Token(Token = "0x6000EEB")]
		public void ChangeState(GameStateBase<T> nextState, T order)
		{
		}

		[Token(Token = "0x6000EEC")]
		public void ChangeState(T order)
		{
		}

		[Token(Token = "0x6000EED")]
		public void SelfUpdate(T order)
		{
		}

		[Token(Token = "0x6000EEE")]
		public GameStateMachine()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public abstract class SingletonMonoBehaviour<T> : BaseMonoBehaviour where T : BaseMonoBehaviour
	{
		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool quitting;

		[Token(Token = "0x17000131")]
		public static T Instance
		{
			[Token(Token = "0x6000EEF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF0")]
		public static T CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6000EF1")]
		public static T GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000EF2")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000EF3")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000EF4")]
		protected SingletonMonoBehaviour()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public enum GameStateFeature
	{
		[Token(Token = "0x4000727")]
		None = 0,
		[Token(Token = "0x4000728")]
		CanPause = 1,
		[Token(Token = "0x4000729")]
		ShowSubtitle = 2,
		[Token(Token = "0x400072A")]
		ShowBG = 4,
		[Token(Token = "0x400072B")]
		ShowUI = 8
	}
	[Token(Token = "0x20001F4")]
	public abstract class StateBase<T>
	{
		[Token(Token = "0x6000EF6")]
		public virtual void Enter(T StateBase)
		{
		}

		[Token(Token = "0x6000EF7")]
		public virtual void Execute(T StateBase)
		{
		}

		[Token(Token = "0x6000EF8")]
		public virtual void Exit(T StateBase)
		{
		}

		[Token(Token = "0x6000EF9")]
		protected StateBase()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public abstract class GameStateBase<T> : StateBase<T>
	{
		[Token(Token = "0x6000EFA")]
		public virtual GameStateFeature GetFeature()
		{
			return default(GameStateFeature);
		}

		[Token(Token = "0x6000EFB")]
		protected GameStateBase()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class StrBuilder
	{
		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StringBuilder builder;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string returnString;

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x770C34", Offset = "0x770C34", VA = "0x770C34")]
		public static void Clear()
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x770CD0", Offset = "0x770CD0", VA = "0x770CD0")]
		public static void Append(string str)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x770D4C", Offset = "0x770D4C", VA = "0x770D4C")]
		public static string Get()
		{
			return null;
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x770E24", Offset = "0x770E24", VA = "0x770E24")]
		public StrBuilder()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class SystemManager : SingletonMonoBehaviour<SystemManager>
	{
		[Token(Token = "0x20002B3")]
		public enum InnerState
		{
			[Token(Token = "0x4000BBE")]
			SystemBoot,
			[Token(Token = "0x4000BBF")]
			SystemInitialize,
			[Token(Token = "0x4000BC0")]
			ParameterDBLoad,
			[Token(Token = "0x4000BC1")]
			MainSceneLoad,
			[Token(Token = "0x4000BC2")]
			MainSceneLoadWait,
			[Token(Token = "0x4000BC3")]
			LogoEndWait,
			[Token(Token = "0x4000BC4")]
			VRSetup,
			[Token(Token = "0x4000BC5")]
			VRSetupWait,
			[Token(Token = "0x4000BC6")]
			GameInitialize,
			[Token(Token = "0x4000BC7")]
			loadingUIPop,
			[Token(Token = "0x4000BC8")]
			AnimModeFileCheckWait,
			[Token(Token = "0x4000BC9")]
			SceneMainBoot,
			[Token(Token = "0x4000BCA")]
			ResourceManagerInitialize,
			[Token(Token = "0x4000BCB")]
			LogoFadeInWait,
			[Token(Token = "0x4000BCC")]
			End
		}

		[Token(Token = "0x20002B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5108A8", Offset = "0x5108A8")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4000BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string path;

			[Token(Token = "0x4000BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SystemManager <>4__this;

			[Token(Token = "0x600105F")]
			[Address(RVA = "0x771628", Offset = "0x771628", VA = "0x771628")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001060")]
			[Address(RVA = "0x771630", Offset = "0x771630", VA = "0x771630")]
			internal void <InitCoroutine>b__1(GameObject x)
			{
			}
		}

		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5108B8", Offset = "0x5108B8")]
		private sealed class <InitCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SystemManager <>4__this;

			[Token(Token = "0x1700015D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001064")]
				[Address(RVA = "0x77255C", Offset = "0x77255C", VA = "0x77255C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001066")]
				[Address(RVA = "0x7725C4", Offset = "0x7725C4", VA = "0x7725C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001061")]
			[Address(RVA = "0x77124C", Offset = "0x77124C", VA = "0x77124C")]
			[DebuggerHidden]
			public <InitCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001062")]
			[Address(RVA = "0x771918", Offset = "0x771918", VA = "0x771918", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001063")]
			[Address(RVA = "0x77191C", Offset = "0x77191C", VA = "0x77191C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001065")]
			[Address(RVA = "0x772564", Offset = "0x772564", VA = "0x772564", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InnerState state;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VRManager vrManager;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string assetBundleNameForParameter;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string assetBundleNameForVoice;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject mainObj;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CircleGaugeUI circleGaugeUI;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private KeepPushEffect keepPushEffectUI;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SceneMain sceneMain;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BootLogo logo;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject logoObject;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TitleLogo titleLogoObject;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool animModeFileChecked;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] MainSceneAssetsPath;

		[Token(Token = "0x400073B")]
		private const string BackgroundAssetsLabel = "Background";

		[Token(Token = "0x400073C")]
		private const string EffectAssetsLabel = "Effect";

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x7710D0", Offset = "0x7710D0", VA = "0x7710D0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x7711DC", Offset = "0x7711DC", VA = "0x7711DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x51B70C", Offset = "0x51B70C")]
		private IEnumerator InitCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x771278", Offset = "0x771278", VA = "0x771278")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x77127C", Offset = "0x77127C", VA = "0x77127C")]
		public SystemManager()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x7714DC", Offset = "0x7714DC", VA = "0x7714DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x51B770", Offset = "0x51B770")]
		private void <InitCoroutine>b__17_0(AsyncOperationHandle<IList<IResourceLocation>> x)
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class UIComponent : BaseMonoBehaviour
	{
		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RectTransform rectTransform;

		[Token(Token = "0x17000132")]
		public RectTransform RectTransform
		{
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x7725CC", Offset = "0x7725CC", VA = "0x7725CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x772664", Offset = "0x772664", VA = "0x772664", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x772668", Offset = "0x772668", VA = "0x772668", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x77266C", Offset = "0x77266C", VA = "0x77266C", Slot = "6")]
		public virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x772670", Offset = "0x772670", VA = "0x772670", Slot = "7")]
		public virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x772674", Offset = "0x772674", VA = "0x772674")]
		public UIComponent()
		{
		}
	}
}
