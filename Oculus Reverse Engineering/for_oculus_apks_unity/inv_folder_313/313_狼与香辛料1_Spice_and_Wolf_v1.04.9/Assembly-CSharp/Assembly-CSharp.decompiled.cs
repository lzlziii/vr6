using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Xml.Linq;
using Common;
using Game;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using TMPro;
using UnityEngine;
using UnityEngine.Animations;
using UnityEngine.Audio;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1ACB5C", Offset = "0x1ACB5C")]
public class DynamicBone : MonoBehaviour
{
	[Token(Token = "0x2000003")]
	public enum FreezeAxis
	{
		[Token(Token = "0x4000021")]
		None,
		[Token(Token = "0x4000022")]
		X,
		[Token(Token = "0x4000023")]
		Y,
		[Token(Token = "0x4000024")]
		Z
	}

	[Token(Token = "0x2000004")]
	private class Particle
	{
		[Token(Token = "0x4000025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform m_Transform;

		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_ParentIndex;

		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_Damping;

		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_Elasticity;

		[Token(Token = "0x4000029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_Stiffness;

		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Inert;

		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Radius;

		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_BoneLength;

		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 m_Position;

		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 m_PrevPosition;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 m_EndOffset;

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 m_InitLocalPosition;

		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Quaternion m_InitLocalRotation;

		[Token(Token = "0x6000015")]
		[Address(RVA = "0x2785B4", Offset = "0x2785B4", VA = "0x2785B4")]
		public Particle()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform m_Root;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_UpdateRate;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ACB90", Offset = "0x1ACB90")]
	public float m_Damping;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve m_DampingDistrib;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ACBA8", Offset = "0x1ACBA8")]
	public float m_Elasticity;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve m_ElasticityDistrib;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ACBC0", Offset = "0x1ACBC0")]
	public float m_Stiffness;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve m_StiffnessDistrib;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ACBD8", Offset = "0x1ACBD8")]
	public float m_Inert;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve m_InertDistrib;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_Radius;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve m_RadiusDistrib;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_EndLength;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 m_EndOffset;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 m_Gravity;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 m_Force;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public List<DynamicBoneCollider> m_Colliders;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Transform> m_Exclusions;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public FreezeAxis m_FreezeAxis;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool m_DistantDisable;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Transform m_ReferenceObject;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_DistanceToObject;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 m_LocalGravity;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 m_ObjectMove;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 m_ObjectPrevPosition;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float m_BoneTotalLength;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float m_ObjectScale;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float m_Time;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float m_Weight;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool m_DistantDisabled;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private List<Particle> m_Particles;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x274228", Offset = "0x274228", VA = "0x274228")]
	public DynamicBone()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x2743DC", Offset = "0x2743DC", VA = "0x2743DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x274B3C", Offset = "0x274B3C", VA = "0x274B3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x274D44", Offset = "0x274D44", VA = "0x274D44")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x274DA4", Offset = "0x274DA4", VA = "0x274DA4")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x2755B0", Offset = "0x2755B0", VA = "0x2755B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x2755B4", Offset = "0x2755B4", VA = "0x2755B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x2755B8", Offset = "0x2755B8", VA = "0x2755B8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x2756FC", Offset = "0x2756FC", VA = "0x2756FC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x2759B4", Offset = "0x2759B4", VA = "0x2759B4")]
	public void SetWeight(float w)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x275A0C", Offset = "0x275A0C", VA = "0x275A0C")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x275048", Offset = "0x275048", VA = "0x275048")]
	private void UpdateDynamicBones(float t)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x2743E0", Offset = "0x2743E0", VA = "0x2743E0")]
	private void SetupParticles()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x277B78", Offset = "0x277B78", VA = "0x277B78")]
	private void AppendParticles(Transform b, int parentIndex, float boneLength)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x274B68", Offset = "0x274B68", VA = "0x274B68")]
	private void InitTransforms()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x27531C", Offset = "0x27531C", VA = "0x27531C")]
	private void ResetParticlesPosition()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x275A14", Offset = "0x275A14", VA = "0x275A14")]
	private void UpdateParticles1()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x275FA8", Offset = "0x275FA8", VA = "0x275FA8")]
	private void UpdateParticles2()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x276CA4", Offset = "0x276CA4", VA = "0x276CA4")]
	private void SkipUpdateParticles()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x2776A0", Offset = "0x2776A0", VA = "0x2776A0")]
	private void ApplyParticlesToTransforms()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1ACBF0", Offset = "0x1ACBF0")]
public class DynamicBoneCollider : MonoBehaviour
{
	[Token(Token = "0x2000006")]
	public enum Direction
	{
		[Token(Token = "0x4000038")]
		X,
		[Token(Token = "0x4000039")]
		Y,
		[Token(Token = "0x400003A")]
		Z
	}

	[Token(Token = "0x2000007")]
	public enum Bound
	{
		[Token(Token = "0x400003C")]
		Outside,
		[Token(Token = "0x400003D")]
		Inside
	}

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 m_Center;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_Radius;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_Height;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Direction m_Direction;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Bound m_Bound;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x278ADC", Offset = "0x278ADC", VA = "0x278ADC")]
	public DynamicBoneCollider()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x278B88", Offset = "0x278B88", VA = "0x278B88")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x278718", Offset = "0x278718", VA = "0x278718")]
	public void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x278C3C", Offset = "0x278C3C", VA = "0x278C3C")]
	private static void OutsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x278E38", Offset = "0x278E38", VA = "0x278E38")]
	private static void InsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x279024", Offset = "0x279024", VA = "0x279024")]
	private static void OutsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x27961C", Offset = "0x27961C", VA = "0x27961C")]
	private static void InsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x279BF0", Offset = "0x279BF0", VA = "0x279BF0")]
	private void OnDrawGizmosSelected()
	{
	}
}
namespace DynamicShadowProjector
{
	[Token(Token = "0x2000008")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1ACC24", Offset = "0x1ACC24")]
	public class DrawSceneObject : MonoBehaviour
	{
		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Shader m_replacementShader;

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private LayerMask m_cullingMask;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private ShadowTextureRenderer m_shadowTextureRenderer;

		[Token(Token = "0x17000001")]
		public Shader replacementShader
		{
			[Token(Token = "0x600001F")]
			[Address(RVA = "0x279EF0", Offset = "0x279EF0", VA = "0x279EF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000020")]
			[Address(RVA = "0x279EF8", Offset = "0x279EF8", VA = "0x279EF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000002")]
		public LayerMask cullingMask
		{
			[Token(Token = "0x6000021")]
			[Address(RVA = "0x27A164", Offset = "0x27A164", VA = "0x27A164")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000022")]
			[Address(RVA = "0x27A16C", Offset = "0x27A16C", VA = "0x27A16C")]
			set
			{
			}
		}

		[Token(Token = "0x17000003")]
		public ShadowTextureRenderer shadowTextureRenderer
		{
			[Token(Token = "0x6000023")]
			[Address(RVA = "0x279F88", Offset = "0x279F88", VA = "0x279F88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600001E")]
		[Address(RVA = "0x279EE8", Offset = "0x279EE8", VA = "0x279EE8")]
		public DrawSceneObject()
		{
		}

		[Token(Token = "0x6000024")]
		[Address(RVA = "0x27A2B0", Offset = "0x27A2B0", VA = "0x27A2B0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000025")]
		[Address(RVA = "0x27A38C", Offset = "0x27A38C", VA = "0x27A38C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000026")]
		[Address(RVA = "0x27A440", Offset = "0x27A440", VA = "0x27A440")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000027")]
		[Address(RVA = "0x27A4B4", Offset = "0x27A4B4", VA = "0x27A4B4")]
		private void OnVisibilityChanged(bool isVisible)
		{
		}
	}
	[Token(Token = "0x2000009")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1ACCDC", Offset = "0x1ACCDC")]
	public class DrawTargetObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200000A")]
		public struct ReplaceShader
		{
			[Token(Token = "0x400004F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string renderType;

			[Token(Token = "0x4000050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Shader shader;
		}

		[Token(Token = "0x200000B")]
		public enum TextureAlignment
		{
			[Token(Token = "0x4000052")]
			None,
			[Token(Token = "0x4000053")]
			TargetAxisX,
			[Token(Token = "0x4000054")]
			TargetAxisY,
			[Token(Token = "0x4000055")]
			TargetAxisZ
		}

		[Token(Token = "0x200000C")]
		public enum UpdateFunction
		{
			[Token(Token = "0x4000057")]
			OnPreCull,
			[Token(Token = "0x4000058")]
			LateUpdate,
			[Token(Token = "0x4000059")]
			UpdateTransform
		}

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Transform m_target;

		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform m_targetDirection;

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private LayerMask m_layerMask;

		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextureAlignment m_textureAlignment;

		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private UpdateFunction m_updateFunction;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material m_shadowShader;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private ReplaceShader[] m_replacementShaders;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_renderChildren;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool m_followTarget;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool m_isCommandBufferDirty;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private CommandBuffer m_commandBuffer;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ShadowTextureRenderer m_shadowRenderer;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_localTargetPosition;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<Material, Material> m_replacedMaterialCache;

		[Token(Token = "0x17000004")]
		public Transform target
		{
			[Token(Token = "0x6000029")]
			[Address(RVA = "0x27A548", Offset = "0x27A548", VA = "0x27A548")]
			get
			{
				return null;
			}
			[Token(Token = "0x600002A")]
			[Address(RVA = "0x272568", Offset = "0x272568", VA = "0x272568")]
			set
			{
			}
		}

		[Token(Token = "0x17000005")]
		public Transform targetDirection
		{
			[Token(Token = "0x600002B")]
			[Address(RVA = "0x27A55C", Offset = "0x27A55C", VA = "0x27A55C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600002C")]
			[Address(RVA = "0x27A564", Offset = "0x27A564", VA = "0x27A564")]
			set
			{
			}
		}

		[Token(Token = "0x17000006")]
		public bool renderChildren
		{
			[Token(Token = "0x600002D")]
			[Address(RVA = "0x27A56C", Offset = "0x27A56C", VA = "0x27A56C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600002E")]
			[Address(RVA = "0x27A574", Offset = "0x27A574", VA = "0x27A574")]
			set
			{
			}
		}

		[Token(Token = "0x17000007")]
		public LayerMask layerMask
		{
			[Token(Token = "0x600002F")]
			[Address(RVA = "0x27A594", Offset = "0x27A594", VA = "0x27A594")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000030")]
			[Address(RVA = "0x27A59C", Offset = "0x27A59C", VA = "0x27A59C")]
			set
			{
			}
		}

		[Token(Token = "0x17000008")]
		public TextureAlignment textureAlignment
		{
			[Token(Token = "0x6000031")]
			[Address(RVA = "0x27A5F0", Offset = "0x27A5F0", VA = "0x27A5F0")]
			get
			{
				return default(TextureAlignment);
			}
			[Token(Token = "0x6000032")]
			[Address(RVA = "0x27A5F8", Offset = "0x27A5F8", VA = "0x27A5F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000009")]
		public UpdateFunction updateFunction
		{
			[Token(Token = "0x6000033")]
			[Address(RVA = "0x27A600", Offset = "0x27A600", VA = "0x27A600")]
			get
			{
				return default(UpdateFunction);
			}
			[Token(Token = "0x6000034")]
			[Address(RVA = "0x27A608", Offset = "0x27A608", VA = "0x27A608")]
			set
			{
			}
		}

		[Token(Token = "0x1700000A")]
		public bool followTarget
		{
			[Token(Token = "0x6000035")]
			[Address(RVA = "0x27A610", Offset = "0x27A610", VA = "0x27A610")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000036")]
			[Address(RVA = "0x27A618", Offset = "0x27A618", VA = "0x27A618")]
			set
			{
			}
		}

		[Token(Token = "0x1700000B")]
		public Material shadowShader
		{
			[Token(Token = "0x6000037")]
			[Address(RVA = "0x27A620", Offset = "0x27A620", VA = "0x27A620")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000038")]
			[Address(RVA = "0x27A628", Offset = "0x27A628", VA = "0x27A628")]
			set
			{
			}
		}

		[Token(Token = "0x1700000C")]
		public ReplaceShader[] replacementShaders
		{
			[Token(Token = "0x6000039")]
			[Address(RVA = "0x27A6CC", Offset = "0x27A6CC", VA = "0x27A6CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600003A")]
			[Address(RVA = "0x27A6D4", Offset = "0x27A6D4", VA = "0x27A6D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000028")]
		[Address(RVA = "0x27A510", Offset = "0x27A510", VA = "0x27A510")]
		public DrawTargetObject()
		{
		}

		[Token(Token = "0x600003B")]
		[Address(RVA = "0x27A550", Offset = "0x27A550", VA = "0x27A550")]
		public void SetCommandBufferDirty()
		{
		}

		[Token(Token = "0x600003C")]
		[Address(RVA = "0x27A6E4", Offset = "0x27A6E4", VA = "0x27A6E4")]
		public void UpdateCommandBuffer()
		{
		}

		[Token(Token = "0x600003D")]
		[Address(RVA = "0x27B184", Offset = "0x27B184", VA = "0x27B184")]
		public void UpdateMaterial(Material mat)
		{
		}

		[Token(Token = "0x600003E")]
		[Address(RVA = "0x27B238", Offset = "0x27B238", VA = "0x27B238")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x600003F")]
		[Address(RVA = "0x27B638", Offset = "0x27B638", VA = "0x27B638")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000040")]
		[Address(RVA = "0x27B82C", Offset = "0x27B82C", VA = "0x27B82C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000041")]
		[Address(RVA = "0x27B83C", Offset = "0x27B83C", VA = "0x27B83C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0x27B998", Offset = "0x27B998", VA = "0x27B998")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000043")]
		[Address(RVA = "0x27BA98", Offset = "0x27BA98", VA = "0x27BA98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0x27BC80", Offset = "0x27BC80", VA = "0x27BC80")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000045")]
		[Address(RVA = "0x27BC90", Offset = "0x27BC90", VA = "0x27BC90")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000046")]
		[Address(RVA = "0x27BCC4", Offset = "0x27BCC4", VA = "0x27BCC4")]
		private void OnVisibilityChanged(bool isVisible)
		{
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0x27B770", Offset = "0x27B770", VA = "0x27B770")]
		private void CreateCommandBuffer()
		{
		}

		[Token(Token = "0x6000048")]
		[Address(RVA = "0x27AA48", Offset = "0x27AA48", VA = "0x27AA48")]
		private void AddDrawCommand(Renderer renderer, int renderTypeIndex)
		{
		}
	}
	[Token(Token = "0x200000D")]
	public class FollowTargetObject : MonoBehaviour
	{
		[Token(Token = "0x200000E")]
		public enum TextureAlignment
		{
			[Token(Token = "0x4000060")]
			None,
			[Token(Token = "0x4000061")]
			TargetAxisX,
			[Token(Token = "0x4000062")]
			TargetAxisY,
			[Token(Token = "0x4000063")]
			TargetAxisZ
		}

		[Token(Token = "0x200000F")]
		public enum UpdateFunction
		{
			[Token(Token = "0x4000065")]
			OnPreCull,
			[Token(Token = "0x4000066")]
			LateUpdate,
			[Token(Token = "0x4000067")]
			UpdateTransform
		}

		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Transform m_target;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform m_targetDirection;

		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private TextureAlignment m_textureAlignment;

		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UpdateFunction m_updateFunction;

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 m_localTargetPosition;

		[Token(Token = "0x1700000D")]
		public Transform target
		{
			[Token(Token = "0x600004A")]
			[Address(RVA = "0x27BD74", Offset = "0x27BD74", VA = "0x27BD74")]
			get
			{
				return null;
			}
			[Token(Token = "0x600004B")]
			[Address(RVA = "0x27BD7C", Offset = "0x27BD7C", VA = "0x27BD7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700000E")]
		public Transform targetDirection
		{
			[Token(Token = "0x600004C")]
			[Address(RVA = "0x27BD84", Offset = "0x27BD84", VA = "0x27BD84")]
			get
			{
				return null;
			}
			[Token(Token = "0x600004D")]
			[Address(RVA = "0x27BD8C", Offset = "0x27BD8C", VA = "0x27BD8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700000F")]
		public TextureAlignment textureAlignment
		{
			[Token(Token = "0x600004E")]
			[Address(RVA = "0x27BD94", Offset = "0x27BD94", VA = "0x27BD94")]
			get
			{
				return default(TextureAlignment);
			}
			[Token(Token = "0x600004F")]
			[Address(RVA = "0x27BD9C", Offset = "0x27BD9C", VA = "0x27BD9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000010")]
		public UpdateFunction updateFunction
		{
			[Token(Token = "0x6000050")]
			[Address(RVA = "0x27BDA4", Offset = "0x27BDA4", VA = "0x27BDA4")]
			get
			{
				return default(UpdateFunction);
			}
			[Token(Token = "0x6000051")]
			[Address(RVA = "0x27BDAC", Offset = "0x27BDAC", VA = "0x27BDAC")]
			set
			{
			}
		}

		[Token(Token = "0x6000049")]
		[Address(RVA = "0x27BD64", Offset = "0x27BD64", VA = "0x27BD64")]
		public FollowTargetObject()
		{
		}

		[Token(Token = "0x6000052")]
		[Address(RVA = "0x27BDB4", Offset = "0x27BDB4", VA = "0x27BDB4")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x6000053")]
		[Address(RVA = "0x27C1A8", Offset = "0x27C1A8", VA = "0x27C1A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000054")]
		[Address(RVA = "0x27C2BC", Offset = "0x27C2BC", VA = "0x27C2BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000055")]
		[Address(RVA = "0x27C2CC", Offset = "0x27C2CC", VA = "0x27C2CC")]
		private void OnPreCull()
		{
		}
	}
	[Token(Token = "0x2000010")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1ACE34", Offset = "0x1ACE34")]
	public class MipmappedShadowFallback : MonoBehaviour
	{
		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public UnityEngine.Object m_fallbackShaderOrMaterial;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_blurLevel;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_blurSize;

		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_modifyTextureSize;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ShadowTextureRenderer.TextureMultiSample m_multiSampling;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShadowTextureRenderer.TextureSuperSample m_superSampling;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_textureWidth;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_textureHeight;

		[Token(Token = "0x4000070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Shader m_tex2DlodCheckShader;

		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader m_glslCheckShader;

		[Token(Token = "0x6000056")]
		[Address(RVA = "0x27C2E0", Offset = "0x27C2E0", VA = "0x27C2E0")]
		public MipmappedShadowFallback()
		{
		}

		[Token(Token = "0x6000057")]
		[Address(RVA = "0x27C320", Offset = "0x27C320", VA = "0x27C320")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000058")]
		[Address(RVA = "0x27C690", Offset = "0x27C690", VA = "0x27C690")]
		public void ApplyFallback(Projector projector)
		{
		}
	}
	[Token(Token = "0x2000011")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1ACEAC", Offset = "0x1ACEAC")]
	public class ShadowTextureRenderer : MonoBehaviour
	{
		[Token(Token = "0x2000012")]
		public enum TextureMultiSample
		{
			[Token(Token = "0x400009D")]
			x1 = 1,
			[Token(Token = "0x400009E")]
			x2 = 2,
			[Token(Token = "0x400009F")]
			x4 = 4,
			[Token(Token = "0x40000A0")]
			x8 = 8
		}

		[Token(Token = "0x2000013")]
		public enum TextureSuperSample
		{
			[Token(Token = "0x40000A2")]
			x1 = 1,
			[Token(Token = "0x40000A3")]
			x4 = 2,
			[Token(Token = "0x40000A4")]
			x16 = 4
		}

		[Token(Token = "0x2000014")]
		public enum MipmapFalloff
		{
			[Token(Token = "0x40000A6")]
			None,
			[Token(Token = "0x40000A7")]
			Linear,
			[Token(Token = "0x40000A8")]
			Custom
		}

		[Token(Token = "0x2000015")]
		public enum BlurFilter
		{
			[Token(Token = "0x40000AA")]
			Uniform,
			[Token(Token = "0x40000AB")]
			Gaussian
		}

		[Token(Token = "0x2000016")]
		private struct BlurParam
		{
			[Token(Token = "0x40000AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int tap;

			[Token(Token = "0x40000AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector4 offset;

			[Token(Token = "0x40000AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector4 weight;
		}

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private TextureMultiSample m_multiSampling;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private TextureSuperSample m_superSampling;

		[Token(Token = "0x4000074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private MipmapFalloff m_mipmapFalloff;

		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BlurFilter m_blurFilter;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_testViewClip;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_textureWidth;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int m_textureHeight;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_mipLevel;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int m_blurLevel;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_blurSize;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_mipmapBlurSize;

		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_singlePassMipmapBlur;

		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color m_shadowColor;

		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Material m_blurShader;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Material m_downsampleShader;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Material m_copyMipmapShader;

		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material m_eraseShadowShader;

		[Token(Token = "0x4000083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float[] m_customMipmapFalloff;

		[Token(Token = "0x4000084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RenderTextureFormat[] m_preferredTextureFormats;

		[Token(Token = "0x4000085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Camera[] m_camerasForViewClipTest;

		[Token(Token = "0x4000086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_falloffParamID;

		[Token(Token = "0x4000087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int s_blurOffsetHParamID;

		[Token(Token = "0x4000088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int s_blurOffsetVParamID;

		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int s_blurWeightHParamID;

		[Token(Token = "0x400008A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int s_blurWeightVParamID;

		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int s_downSampleBlurOffset0ParamID;

		[Token(Token = "0x400008C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int s_downSampleBlurOffset1ParamID;

		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int s_downSampleBlurOffset2ParamID;

		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int s_downSampleBlurOffset3ParamID;

		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int s_downSampleBlurWeightParamID;

		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Projector m_projector;

		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Material m_projectorMaterial;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CommandBuffer m_commandBuffer;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private RenderTexture m_shadowTexture;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		private Camera m_camera;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool m_isTexturePropertyChanged;

		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool m_isVisible;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		private bool m_shadowTextureValid;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static HashSet<Material> s_sharedMaterials;

		[Token(Token = "0x4000099")]
		private const HideFlags CLONED_MATERIAL_HIDE_FLAGS = HideFlags.HideAndDontSave;

		[Token(Token = "0x400009A")]
		private const int MAX_BLUR_TAP_SIZE = 7;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static float[] s_blurWeights;

		[Token(Token = "0x17000011")]
		public TextureMultiSample multiSampling
		{
			[Token(Token = "0x600005A")]
			[Address(RVA = "0x27CAC4", Offset = "0x27CAC4", VA = "0x27CAC4")]
			get
			{
				return default(TextureMultiSample);
			}
			[Token(Token = "0x600005B")]
			[Address(RVA = "0x27C9C0", Offset = "0x27C9C0", VA = "0x27C9C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000012")]
		public TextureSuperSample superSampling
		{
			[Token(Token = "0x600005C")]
			[Address(RVA = "0x27CAD8", Offset = "0x27CAD8", VA = "0x27CAD8")]
			get
			{
				return default(TextureSuperSample);
			}
			[Token(Token = "0x600005D")]
			[Address(RVA = "0x27C9D8", Offset = "0x27C9D8", VA = "0x27C9D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000013")]
		public int textureWidth
		{
			[Token(Token = "0x600005E")]
			[Address(RVA = "0x27CB58", Offset = "0x27CB58", VA = "0x27CB58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600005F")]
			[Address(RVA = "0x27C990", Offset = "0x27C990", VA = "0x27C990")]
			set
			{
			}
		}

		[Token(Token = "0x17000014")]
		public int textureHeight
		{
			[Token(Token = "0x6000060")]
			[Address(RVA = "0x27CB60", Offset = "0x27CB60", VA = "0x27CB60")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000061")]
			[Address(RVA = "0x27C9A8", Offset = "0x27C9A8", VA = "0x27C9A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000015")]
		public int mipLevel
		{
			[Token(Token = "0x6000062")]
			[Address(RVA = "0x27CB68", Offset = "0x27CB68", VA = "0x27CB68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000063")]
			[Address(RVA = "0x27C968", Offset = "0x27C968", VA = "0x27C968")]
			set
			{
			}
		}

		[Token(Token = "0x17000016")]
		public int blurLevel
		{
			[Token(Token = "0x6000064")]
			[Address(RVA = "0x27CB70", Offset = "0x27CB70", VA = "0x27CB70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000065")]
			[Address(RVA = "0x27C90C", Offset = "0x27C90C", VA = "0x27C90C")]
			set
			{
			}
		}

		[Token(Token = "0x17000017")]
		public float blurSize
		{
			[Token(Token = "0x6000066")]
			[Address(RVA = "0x27CB78", Offset = "0x27CB78", VA = "0x27CB78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000067")]
			[Address(RVA = "0x27C960", Offset = "0x27C960", VA = "0x27C960")]
			set
			{
			}
		}

		[Token(Token = "0x17000018")]
		public BlurFilter blurFilter
		{
			[Token(Token = "0x6000068")]
			[Address(RVA = "0x27CB80", Offset = "0x27CB80", VA = "0x27CB80")]
			get
			{
				return default(BlurFilter);
			}
			[Token(Token = "0x6000069")]
			[Address(RVA = "0x27CB88", Offset = "0x27CB88", VA = "0x27CB88")]
			set
			{
			}
		}

		[Token(Token = "0x17000019")]
		public float mipmapBlurSize
		{
			[Token(Token = "0x600006A")]
			[Address(RVA = "0x27CB90", Offset = "0x27CB90", VA = "0x27CB90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600006B")]
			[Address(RVA = "0x27CB98", Offset = "0x27CB98", VA = "0x27CB98")]
			set
			{
			}
		}

		[Token(Token = "0x1700001A")]
		public bool singlePassMipmapBlur
		{
			[Token(Token = "0x600006C")]
			[Address(RVA = "0x27CBA0", Offset = "0x27CBA0", VA = "0x27CBA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600006D")]
			[Address(RVA = "0x27CBA8", Offset = "0x27CBA8", VA = "0x27CBA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700001B")]
		public MipmapFalloff mipmapFalloff
		{
			[Token(Token = "0x600006E")]
			[Address(RVA = "0x27CBB0", Offset = "0x27CBB0", VA = "0x27CBB0")]
			get
			{
				return default(MipmapFalloff);
			}
			[Token(Token = "0x600006F")]
			[Address(RVA = "0x27CBB8", Offset = "0x27CBB8", VA = "0x27CBB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700001C")]
		public float[] customMipmapFalloff
		{
			[Token(Token = "0x6000070")]
			[Address(RVA = "0x27CBC0", Offset = "0x27CBC0", VA = "0x27CBC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000071")]
			[Address(RVA = "0x27CBC8", Offset = "0x27CBC8", VA = "0x27CBC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700001D")]
		public Color shadowColor
		{
			[Token(Token = "0x6000072")]
			[Address(RVA = "0x27CBD0", Offset = "0x27CBD0", VA = "0x27CBD0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000073")]
			[Address(RVA = "0x27CBE0", Offset = "0x27CBE0", VA = "0x27CBE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700001E")]
		public Material blurShader
		{
			[Token(Token = "0x6000074")]
			[Address(RVA = "0x27CC78", Offset = "0x27CC78", VA = "0x27CC78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000075")]
			[Address(RVA = "0x27CC80", Offset = "0x27CC80", VA = "0x27CC80")]
			set
			{
			}
		}

		[Token(Token = "0x1700001F")]
		public Material downsampleShader
		{
			[Token(Token = "0x6000076")]
			[Address(RVA = "0x27CC88", Offset = "0x27CC88", VA = "0x27CC88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000077")]
			[Address(RVA = "0x27CC90", Offset = "0x27CC90", VA = "0x27CC90")]
			set
			{
			}
		}

		[Token(Token = "0x17000020")]
		public Material copyMipmapShader
		{
			[Token(Token = "0x6000078")]
			[Address(RVA = "0x27CC98", Offset = "0x27CC98", VA = "0x27CC98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000079")]
			[Address(RVA = "0x27CCA0", Offset = "0x27CCA0", VA = "0x27CCA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000021")]
		public Material eraseShadowShader
		{
			[Token(Token = "0x600007A")]
			[Address(RVA = "0x27CCA8", Offset = "0x27CCA8", VA = "0x27CCA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600007B")]
			[Address(RVA = "0x27CCB0", Offset = "0x27CCB0", VA = "0x27CCB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000022")]
		public RenderTexture shadowTexture
		{
			[Token(Token = "0x600007C")]
			[Address(RVA = "0x27CCB8", Offset = "0x27CCB8", VA = "0x27CCB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		public bool testViewClip
		{
			[Token(Token = "0x600007D")]
			[Address(RVA = "0x27CCC0", Offset = "0x27CCC0", VA = "0x27CCC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600007E")]
			[Address(RVA = "0x27CCC8", Offset = "0x27CCC8", VA = "0x27CCC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000024")]
		public Camera[] camerasForViewClipTest
		{
			[Token(Token = "0x600007F")]
			[Address(RVA = "0x27CCD0", Offset = "0x27CCD0", VA = "0x27CCD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000080")]
			[Address(RVA = "0x27CCD8", Offset = "0x27CCD8", VA = "0x27CCD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000025")]
		public float cameraNearClipPlane
		{
			[Token(Token = "0x6000081")]
			[Address(RVA = "0x27CCE0", Offset = "0x27CCE0", VA = "0x27CCE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000082")]
			[Address(RVA = "0x27D150", Offset = "0x27D150", VA = "0x27D150")]
			set
			{
			}
		}

		[Token(Token = "0x17000026")]
		public LayerMask cameraCullingMask
		{
			[Token(Token = "0x6000083")]
			[Address(RVA = "0x27D214", Offset = "0x27D214", VA = "0x27D214")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000084")]
			[Address(RVA = "0x27A1D8", Offset = "0x27A1D8", VA = "0x27A1D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000027")]
		public bool isProjectorVisible
		{
			[Token(Token = "0x6000086")]
			[Address(RVA = "0x27A1D0", Offset = "0x27A1D0", VA = "0x27A1D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000028")]
		private bool useIntermediateTexture
		{
			[Token(Token = "0x600008C")]
			[Address(RVA = "0x27CAE0", Offset = "0x27CAE0", VA = "0x27CAE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0x27CA2C", Offset = "0x27CA2C", VA = "0x27CA2C")]
		public ShadowTextureRenderer()
		{
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0x27A040", Offset = "0x27A040", VA = "0x27A040")]
		public void SetReplacementShader(Shader shader, string replacementTag)
		{
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0x27CACC", Offset = "0x27CACC", VA = "0x27CACC")]
		public void SetTexturePropertyDirty()
		{
		}

		[Token(Token = "0x6000088")]
		[Address(RVA = "0x27D2E0", Offset = "0x27D2E0", VA = "0x27D2E0")]
		public void CreateRenderTexture()
		{
		}

		[Token(Token = "0x6000089")]
		[Address(RVA = "0x27B934", Offset = "0x27B934", VA = "0x27B934")]
		public void AddCommandBuffer(CommandBuffer commandBuffer)
		{
		}

		[Token(Token = "0x600008A")]
		[Address(RVA = "0x27BA60", Offset = "0x27BA60", VA = "0x27BA60")]
		public void RemoveCommandBuffer(CommandBuffer commandBuffer)
		{
		}

		[Token(Token = "0x600008B")]
		[Address(RVA = "0x27D850", Offset = "0x27D850", VA = "0x27D850")]
		private static void InitializeShaderPropertyIDs()
		{
		}

		[Token(Token = "0x600008D")]
		[Address(RVA = "0x27CD9C", Offset = "0x27CD9C", VA = "0x27CD9C")]
		private bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600008E")]
		[Address(RVA = "0x27DAB4", Offset = "0x27DAB4", VA = "0x27DAB4")]
		private bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600008F")]
		[Address(RVA = "0x27E090", Offset = "0x27E090", VA = "0x27E090")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000090")]
		[Address(RVA = "0x27E094", Offset = "0x27E094", VA = "0x27E094")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000091")]
		[Address(RVA = "0x27E150", Offset = "0x27E150", VA = "0x27E150")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000092")]
		[Address(RVA = "0x27E20C", Offset = "0x27E20C", VA = "0x27E20C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000093")]
		[Address(RVA = "0x27E360", Offset = "0x27E360", VA = "0x27E360")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000094")]
		[Address(RVA = "0x27DB9C", Offset = "0x27DB9C", VA = "0x27DB9C")]
		private void CloneProjectorMaterialIfShared()
		{
		}

		[Token(Token = "0x6000095")]
		[Address(RVA = "0x27E6F4", Offset = "0x27E6F4", VA = "0x27E6F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000096")]
		[Address(RVA = "0x27EB38", Offset = "0x27EB38", VA = "0x27EB38")]
		private bool IsReadyToExecute()
		{
			return default(bool);
		}

		[Token(Token = "0x6000097")]
		[Address(RVA = "0x27ED84", Offset = "0x27ED84", VA = "0x27ED84")]
		private void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6000098")]
		[Address(RVA = "0x27EE1C", Offset = "0x27EE1C", VA = "0x27EE1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000099")]
		[Address(RVA = "0x27EF04", Offset = "0x27EF04", VA = "0x27EF04")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0x27DA70", Offset = "0x27DA70", VA = "0x27DA70")]
		private bool HasShadowColor()
		{
			return default(bool);
		}

		[Token(Token = "0x600009B")]
		[Address(RVA = "0x2802B0", Offset = "0x2802B0", VA = "0x2802B0")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0x280430", Offset = "0x280430", VA = "0x280430")]
		private static BlurParam GetBlurParam(float blurSize, BlurFilter filter)
		{
			return default(BlurParam);
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0x2818C0", Offset = "0x2818C0", VA = "0x2818C0")]
		private static BlurParam GetDownsampleBlurParam(float blurSize, BlurFilter filter)
		{
			return default(BlurParam);
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0x2820A8", Offset = "0x2820A8", VA = "0x2820A8")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0x283BFC", Offset = "0x283BFC", VA = "0x283BFC")]
		private void EraseShadowOnBoarder(int w, int h)
		{
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x283D50", Offset = "0x283D50", VA = "0x283D50")]
		private void SetDownsampleBlurOffsetParams(BlurParam blurH, BlurParam blurV, int w, int h)
		{
		}
	}
}
[Token(Token = "0x2000017")]
public class CameraComponent : MonoBehaviour
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform m_transform;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform m_lookTrans;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_lookTimer;

	[Token(Token = "0x40000B2")]
	private const int EASTER_EGG_MASK = 1073741824;

	[Token(Token = "0x40000B3")]
	private const float LOOK_TIME = 1f;

	[Token(Token = "0x40000B4")]
	private const float ROUGH_CAST_SIZE = 0.3f;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RaycastHit[] m_hitArray;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x26B0E0", Offset = "0x26B0E0", VA = "0x26B0E0")]
	public CameraComponent()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x26B154", Offset = "0x26B154", VA = "0x26B154")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x26B170", Offset = "0x26B170", VA = "0x26B170")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x26B23C", Offset = "0x26B23C", VA = "0x26B23C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x26B240", Offset = "0x26B240", VA = "0x26B240")]
	private void CheckEasterEgg()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x26B898", Offset = "0x26B898", VA = "0x26B898")]
	private void ClearEasterEgg()
	{
	}
}
[Token(Token = "0x2000018")]
public class CameraManager : SingletonMonoBehaviour<CameraManager>
{
	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Camera m_mainCamera;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	[AttributeAttribute(Name = "NamedArrayAttribute", RVA = "0x1AD0B4", Offset = "0x1AD0B4")]
	private PostProcessProfile[] m_PostProcessVolumeArray;

	[Token(Token = "0x17000029")]
	public Camera MainCamera
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x26B938", Offset = "0x26B938", VA = "0x26B938")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x26B8A8", Offset = "0x26B8A8", VA = "0x26B8A8")]
	public CameraManager()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x26B234", Offset = "0x26B234", VA = "0x26B234")]
	public void SetCamera(Camera camera)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x26B940", Offset = "0x26B940", VA = "0x26B940")]
	public void ChangePostProcessing(LightmapManager.LIGHTMAP_TYPE type)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x26B944", Offset = "0x26B944", VA = "0x26B944")]
	public void ChangePostProcessingEnable(bool isEnable)
	{
	}
}
[Token(Token = "0x2000019")]
public class DoraNoiseTransform : MonoBehaviour
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD17C", Offset = "0x1AD17C")]
	private float BlendNoise;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool UsePositionNoise;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool beforePosition;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Vector3 PositionNoiseScale;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float PositionNoiseSpeed;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool UseRotationNoise;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 RotationNoiseScale;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float RotationNoiseSpeed;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool UseScaleNoise;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Vector3 ScaleNoiseScale;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float ScaleNoiseSpeed;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float startTime;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float pTimer;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float rTimer;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sTimer;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private readonly Vector3 ZERO;

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x273B50", Offset = "0x273B50", VA = "0x273B50")]
	public DoraNoiseTransform()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x273C58", Offset = "0x273C58", VA = "0x273C58")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x273C6C", Offset = "0x273C6C", VA = "0x273C6C")]
	private void Update()
	{
	}
}
namespace Common
{
	[Token(Token = "0x200001A")]
	public class PoseComponent : MonoBehaviour
	{
		[Token(Token = "0x200001B")]
		public enum POSE_MASK
		{
			[Token(Token = "0x40000CC")]
			ALL = 255,
			[Token(Token = "0x40000CD")]
			OBJ = 1,
			[Token(Token = "0x40000CE")]
			CAHRACTER = 2,
			[Token(Token = "0x40000CF")]
			MAP = 4
		}

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float m_wouldTime;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static uint m_wouldTimeMask;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private POSE_MASK m_eMyPoseMask;

		[Token(Token = "0x60000B0")]
		[Address(RVA = "0x26F5D8", Offset = "0x26F5D8", VA = "0x26F5D8")]
		public PoseComponent()
		{
		}

		[Token(Token = "0x60000B1")]
		[Address(RVA = "0x26F5E0", Offset = "0x26F5E0", VA = "0x26F5E0")]
		public static void SetWouldTime(float rate)
		{
		}

		[Token(Token = "0x60000B2")]
		[Address(RVA = "0x26F67C", Offset = "0x26F67C", VA = "0x26F67C")]
		public static void SetWouldTimeMask(POSE_MASK param)
		{
		}

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0x26F70C", Offset = "0x26F70C", VA = "0x26F70C")]
		public POSE_MASK GetMyPoseMask()
		{
			return default(POSE_MASK);
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x26F714", Offset = "0x26F714", VA = "0x26F714")]
		public void SetMyPoseMask(POSE_MASK param)
		{
		}

		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x26F71C", Offset = "0x26F71C", VA = "0x26F71C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x26F7B8", Offset = "0x26F7B8", VA = "0x26F7B8")]
		public float GetMyWouldTime()
		{
			return default(float);
		}

		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x26F894", Offset = "0x26F894", VA = "0x26F894")]
		public void Update()
		{
		}
	}
}
[Token(Token = "0x200001C")]
public class UniqueMaterialComponent : MonoBehaviour
{
	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xA7DE7C", Offset = "0xA7DE7C", VA = "0xA7DE7C")]
	public UniqueMaterialComponent()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xA7DE84", Offset = "0xA7DE84", VA = "0xA7DE84")]
	private void Start()
	{
	}
}
namespace Common
{
	[Token(Token = "0x200001D")]
	public class Easing : MonoBehaviour
	{
		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x26E008", Offset = "0x26E008", VA = "0x26E008")]
		public Easing()
		{
		}

		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x26E010", Offset = "0x26E010", VA = "0x26E010")]
		public float InExp(float t, float totaltime, float max, float min)
		{
			return default(float);
		}

		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x26E0E0", Offset = "0x26E0E0", VA = "0x26E0E0")]
		public float OutExp(float currentTime, float totalTime, float max, float min)
		{
			return default(float);
		}

		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x26E1A8", Offset = "0x26E1A8", VA = "0x26E1A8")]
		public float InCubic(float t, float totaltime, float max, float min)
		{
			return default(float);
		}

		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x26E1D8", Offset = "0x26E1D8", VA = "0x26E1D8")]
		public float OutCubic(float t, float totaltime, float max, float min)
		{
			return default(float);
		}
	}
}
namespace Game
{
	[Token(Token = "0x200001E")]
	public class LightmapComponent : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200001F")]
		public struct LightmapParam
		{
			[Token(Token = "0x40000D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LightmapManager.LIGHTMAP_TYPE m_type;

			[Token(Token = "0x40000D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Texture2D[] m_light;

			[Token(Token = "0x40000D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Texture2D[] m_dir;

			[Token(Token = "0x40000D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Texture2D[] m_shadow;

			[Token(Token = "0x40000D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Cubemap m_cubemap;
		}

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private LightmapParam[] m_lightmapArray;

		[Token(Token = "0x1700002A")]
		public LightmapParam[] LightMapArray
		{
			[Token(Token = "0x60000C1")]
			[Address(RVA = "0x246B84", Offset = "0x246B84", VA = "0x246B84")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000C2")]
			[Address(RVA = "0x246B8C", Offset = "0x246B8C", VA = "0x246B8C")]
			set
			{
			}
		}

		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x246B7C", Offset = "0x246B7C", VA = "0x246B7C")]
		public LightmapComponent()
		{
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x246B94", Offset = "0x246B94", VA = "0x246B94")]
		public void Use(LightmapManager.LIGHTMAP_TYPE type)
		{
		}
	}
	[Token(Token = "0x2000020")]
	public class LightmapManager : SingletonMonoBehaviour<LightmapManager>
	{
		[Serializable]
		[Token(Token = "0x2000021")]
		public struct GradientColorData
		{
			[Token(Token = "0x40000DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color m_sky;

			[Token(Token = "0x40000E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color m_equator;

			[Token(Token = "0x40000E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color m_ground;
		}

		[Token(Token = "0x2000022")]
		public enum LIGHTMAP_TYPE
		{
			[Token(Token = "0x40000E3")]
			Chapter1,
			[Token(Token = "0x40000E4")]
			Chapter2,
			[Token(Token = "0x40000E5")]
			Chapter3,
			[Token(Token = "0x40000E6")]
			Chapter3_2,
			[Token(Token = "0x40000E7")]
			Chapter3_3,
			[Token(Token = "0x40000E8")]
			MiniGame,
			[Token(Token = "0x40000E9")]
			MAX
		}

		[Token(Token = "0x20002B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AD2B4", Offset = "0x1AD2B4")]
		private sealed class <ChangeLightMapCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal LIGHTMAP_TYPE type;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal WaitForEndOfFrame <wait>__0;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Scene <activeScene>__0;

			[Token(Token = "0x4000B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal AsyncOperation <asyncOperation>__1;

			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal LightmapManager $this;

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal object $current;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x1700011D")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001137")]
				[Address(RVA = "0x2494E4", Offset = "0x2494E4", VA = "0x2494E4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001138")]
				[Address(RVA = "0x2494EC", Offset = "0x2494EC", VA = "0x2494EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001135")]
			[Address(RVA = "0x2471D0", Offset = "0x2471D0", VA = "0x2471D0")]
			[DebuggerHidden]
			public <ChangeLightMapCoroutine>c__Iterator0()
			{
			}

			[Token(Token = "0x6001136")]
			[Address(RVA = "0x248E88", Offset = "0x248E88", VA = "0x248E88", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001139")]
			[Address(RVA = "0x2494F4", Offset = "0x2494F4", VA = "0x2494F4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600113A")]
			[Address(RVA = "0x249508", Offset = "0x249508", VA = "0x249508", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20002B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AD314", Offset = "0x1AD314")]
		private sealed class <AddLightMapCoroutine>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal LIGHTMAP_TYPE type;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal WaitForEndOfFrame <wait>__0;

			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal AsyncOperation <asyncOperation>__0;

			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal LightmapManager $this;

			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal object $current;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal bool $disposing;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal int $PC;

			[Token(Token = "0x1700011F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600113D")]
				[Address(RVA = "0x248DDC", Offset = "0x248DDC", VA = "0x248DDC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000120")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600113E")]
				[Address(RVA = "0x248DE4", Offset = "0x248DE4", VA = "0x248DE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600113B")]
			[Address(RVA = "0x247370", Offset = "0x247370", VA = "0x247370")]
			[DebuggerHidden]
			public <AddLightMapCoroutine>c__Iterator1()
			{
			}

			[Token(Token = "0x600113C")]
			[Address(RVA = "0x2484D4", Offset = "0x2484D4", VA = "0x2484D4", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600113F")]
			[Address(RVA = "0x248DEC", Offset = "0x248DEC", VA = "0x248DEC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001140")]
			[Address(RVA = "0x248E00", Offset = "0x248E00", VA = "0x248E00", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool m_isLoading;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LIGHTMAP_TYPE m_nowType;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private LightmapData[] m_baseData;

		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float[] m_skyboxExposure;

		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Color[] m_skyboxTintColor;

		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GradientColorData[] m_gradientColor;

		[Token(Token = "0x40000DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Dictionary<string, GameObject> m_lightCashList;

		[Token(Token = "0x40000DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LoadingUI m_loading;

		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] m_sceneNameArray;

		[Token(Token = "0x1700002B")]
		public bool IsLoading
		{
			[Token(Token = "0x60000C5")]
			[Address(RVA = "0x242D9C", Offset = "0x242D9C", VA = "0x242D9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002C")]
		public LIGHTMAP_TYPE NowType
		{
			[Token(Token = "0x60000C6")]
			[Address(RVA = "0x247084", Offset = "0x247084", VA = "0x247084")]
			get
			{
				return default(LIGHTMAP_TYPE);
			}
		}

		[Token(Token = "0x1700002D")]
		public float[] SkyBoxExposure
		{
			[Token(Token = "0x60000C7")]
			[Address(RVA = "0x24708C", Offset = "0x24708C", VA = "0x24708C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		public GradientColorData[] GradientColor
		{
			[Token(Token = "0x60000C8")]
			[Address(RVA = "0x247094", Offset = "0x247094", VA = "0x247094")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000C9")]
			[Address(RVA = "0x24709C", Offset = "0x24709C", VA = "0x24709C")]
			set
			{
			}
		}

		[Token(Token = "0x1700002F")]
		public static string[] ScenePathArray
		{
			[Token(Token = "0x60000CA")]
			[Address(RVA = "0x2470A4", Offset = "0x2470A4", VA = "0x2470A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x246F64", Offset = "0x246F64", VA = "0x246F64")]
		public LightmapManager()
		{
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x247130", Offset = "0x247130", VA = "0x247130")]
		[DebuggerHidden]
		public IEnumerator ChangeLightMapCoroutine(LIGHTMAP_TYPE type)
		{
			return null;
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x2471D8", Offset = "0x2471D8", VA = "0x2471D8")]
		private void ChangeTextureOnly(LIGHTMAP_TYPE type)
		{
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x2472D0", Offset = "0x2472D0", VA = "0x2472D0")]
		[DebuggerHidden]
		private IEnumerator AddLightMapCoroutine(LIGHTMAP_TYPE type)
		{
			return null;
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x247378", Offset = "0x247378", VA = "0x247378")]
		private void ChangeSkyboxExposure(LIGHTMAP_TYPE type)
		{
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x247448", Offset = "0x247448", VA = "0x247448")]
		private void ChangeSkyboxTintColor(LIGHTMAP_TYPE type)
		{
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x242A30", Offset = "0x242A30", VA = "0x242A30")]
		public void ChangeLightMap(LIGHTMAP_TYPE type)
		{
		}

		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x24752C", Offset = "0x24752C", VA = "0x24752C")]
		private void ChangeGradientColor(LIGHTMAP_TYPE type)
		{
		}

		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x247644", Offset = "0x247644", VA = "0x247644")]
		private void ChangeLightActive(LIGHTMAP_TYPE type)
		{
		}
	}
}
namespace Lipsync
{
	[Token(Token = "0x2000023")]
	public class LipSyncComponent : MonoBehaviour
	{
		[Token(Token = "0x2000024")]
		public enum eMouthType
		{
			[Token(Token = "0x40000FA")]
			SMALL,
			[Token(Token = "0x40000FB")]
			MEDIUM,
			[Token(Token = "0x40000FC")]
			LARGE,
			[Token(Token = "0x40000FD")]
			MAX
		}

		[Serializable]
		[Token(Token = "0x2000025")]
		public struct Mouth
		{
			[Token(Token = "0x40000FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int mIndex;

			[Token(Token = "0x40000FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float mNowValue;

			[Token(Token = "0x4000100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float mNextValue;

			[Token(Token = "0x4000101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float mTriggerValue;

			[Token(Token = "0x4000102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float mSpeedRate;
		}

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private AudioSource mAudioSource;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private SkinnedMeshRenderer mRenderer;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_appQuit;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Mouth[] mMouth;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float mDelayTimer;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float mVolumeBoost;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float mUpdateDelay;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float mBlendOpenSpeed;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float mBlendCloseSpeed;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float mMaxBlendRate;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private AnimationCurve mOpenCurve;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve mCloseCurve;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool mIsUseCurveWhenMaxClose;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] mWaveData;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool mIsDebugOutputVolume;

		[Token(Token = "0x17000030")]
		public AudioSource AudioSource
		{
			[Token(Token = "0x60000D5")]
			[Address(RVA = "0x1D5D24", Offset = "0x1D5D24", VA = "0x1D5D24")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000D6")]
			[Address(RVA = "0x1D5D2C", Offset = "0x1D5D2C", VA = "0x1D5D2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000031")]
		public SkinnedMeshRenderer Renderer
		{
			[Token(Token = "0x60000D7")]
			[Address(RVA = "0x1D5D34", Offset = "0x1D5D34", VA = "0x1D5D34")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000D8")]
			[Address(RVA = "0x1D5D3C", Offset = "0x1D5D3C", VA = "0x1D5D3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000032")]
		public Mouth[] MouthData
		{
			[Token(Token = "0x60000D9")]
			[Address(RVA = "0x1D5D44", Offset = "0x1D5D44", VA = "0x1D5D44")]
			set
			{
			}
		}

		[Token(Token = "0x17000033")]
		public float VolumeBoost
		{
			[Token(Token = "0x60000DE")]
			[Address(RVA = "0x1D5E90", Offset = "0x1D5E90", VA = "0x1D5E90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60000DF")]
			[Address(RVA = "0x1D5E98", Offset = "0x1D5E98", VA = "0x1D5E98")]
			set
			{
			}
		}

		[Token(Token = "0x17000034")]
		public float UpdateDelay
		{
			[Token(Token = "0x60000E0")]
			[Address(RVA = "0x1D5EA0", Offset = "0x1D5EA0", VA = "0x1D5EA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60000E1")]
			[Address(RVA = "0x1D5EA8", Offset = "0x1D5EA8", VA = "0x1D5EA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public float BlendOpenSpeed
		{
			[Token(Token = "0x60000E2")]
			[Address(RVA = "0x1D5EB0", Offset = "0x1D5EB0", VA = "0x1D5EB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60000E3")]
			[Address(RVA = "0x1D5EB8", Offset = "0x1D5EB8", VA = "0x1D5EB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000036")]
		public float BlendCloseSpeed
		{
			[Token(Token = "0x60000E4")]
			[Address(RVA = "0x1D5EC0", Offset = "0x1D5EC0", VA = "0x1D5EC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60000E5")]
			[Address(RVA = "0x1D5EC8", Offset = "0x1D5EC8", VA = "0x1D5EC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000037")]
		public float MaxBlendRate
		{
			[Token(Token = "0x60000E6")]
			[Address(RVA = "0x1D5ED0", Offset = "0x1D5ED0", VA = "0x1D5ED0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60000E7")]
			[Address(RVA = "0x1D5ED8", Offset = "0x1D5ED8", VA = "0x1D5ED8")]
			set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public AnimationCurve OpenCurve
		{
			[Token(Token = "0x60000E8")]
			[Address(RVA = "0x1D5EE0", Offset = "0x1D5EE0", VA = "0x1D5EE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000E9")]
			[Address(RVA = "0x1D5EE8", Offset = "0x1D5EE8", VA = "0x1D5EE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public AnimationCurve CloseCurve
		{
			[Token(Token = "0x60000EA")]
			[Address(RVA = "0x1D5EF0", Offset = "0x1D5EF0", VA = "0x1D5EF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000EB")]
			[Address(RVA = "0x1D5EF8", Offset = "0x1D5EF8", VA = "0x1D5EF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public bool IsUseCurveWhenMaxClose
		{
			[Token(Token = "0x60000EC")]
			[Address(RVA = "0x1D5F00", Offset = "0x1D5F00", VA = "0x1D5F00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60000ED")]
			[Address(RVA = "0x1D5F08", Offset = "0x1D5F08", VA = "0x1D5F08")]
			set
			{
			}
		}

		[Token(Token = "0x1700003B")]
		public bool IsDebugOutputVolume
		{
			[Token(Token = "0x60000EE")]
			[Address(RVA = "0x1D5F10", Offset = "0x1D5F10", VA = "0x1D5F10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60000EF")]
			[Address(RVA = "0x1D5F18", Offset = "0x1D5F18", VA = "0x1D5F18")]
			set
			{
			}
		}

		[Token(Token = "0x60000D4")]
		[Address(RVA = "0x1D5A40", Offset = "0x1D5A40", VA = "0x1D5A40")]
		public LipSyncComponent()
		{
		}

		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x1D5D4C", Offset = "0x1D5D4C", VA = "0x1D5D4C")]
		public void SetMouthIndex(eMouthType type, int index)
		{
		}

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x1D5D9C", Offset = "0x1D5D9C", VA = "0x1D5D9C")]
		public int GetMouthIndex(eMouthType type)
		{
			return default(int);
		}

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x1D5DE8", Offset = "0x1D5DE8", VA = "0x1D5DE8")]
		public void SetMouthTrigger(eMouthType type, float value)
		{
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x1D5E44", Offset = "0x1D5E44", VA = "0x1D5E44")]
		public float GetMouthTrigger(eMouthType type)
		{
			return default(float);
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x1D5F20", Offset = "0x1D5F20", VA = "0x1D5F20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x1D5FDC", Offset = "0x1D5FDC", VA = "0x1D5FDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x1D65A0", Offset = "0x1D65A0", VA = "0x1D65A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x1D694C", Offset = "0x1D694C", VA = "0x1D694C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x1D6A68", Offset = "0x1D6A68", VA = "0x1D6A68")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x1D6154", Offset = "0x1D6154", VA = "0x1D6154")]
		private float CalcVolume()
		{
			return default(float);
		}

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x1D6288", Offset = "0x1D6288", VA = "0x1D6288")]
		private void CalcNextBlendValue(float volume)
		{
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x1D6A74", Offset = "0x1D6A74", VA = "0x1D6A74")]
		private void SetMouthNextValue(eMouthType type, float next)
		{
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x1D65B0", Offset = "0x1D65B0", VA = "0x1D65B0")]
		private void OnBlendShapeUpdate()
		{
		}
	}
}
namespace Common
{
	[Token(Token = "0x2000026")]
	public class BasePlatform
	{
		[Token(Token = "0x2000027")]
		public enum eTrophy
		{
			[Token(Token = "0x4000106")]
			WATCH_ALL_STORY,
			[Token(Token = "0x4000107")]
			UNLOCK_MINIGAME,
			[Token(Token = "0x4000108")]
			FIND_HOW_TO_PLAY,
			[Token(Token = "0x4000109")]
			MINIGAME_ONE_ACTION,
			[Token(Token = "0x400010A")]
			MINIGAME_ALL_LOOK,
			[Token(Token = "0x400010B")]
			MINIGAME_LAST_ACTION,
			[Token(Token = "0x400010C")]
			COIN_FIND,
			[Token(Token = "0x400010D")]
			COIN_ALL_FIND
		}

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected SAWSaveData.eLanguage m_platformLanguage;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly ReadOnlyCollection<string> TROPHY_NAME;

		[Token(Token = "0x1700003C")]
		public SAWSaveData.eLanguage PlatformLanguage
		{
			[Token(Token = "0x60000FA")]
			[Address(RVA = "0x26CFA4", Offset = "0x26CFA4", VA = "0x26CFA4")]
			get
			{
				return default(SAWSaveData.eLanguage);
			}
		}

		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x26CF9C", Offset = "0x26CF9C", VA = "0x26CF9C")]
		public BasePlatform()
		{
		}

		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x26CFAC", Offset = "0x26CFAC", VA = "0x26CFAC", Slot = "4")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x26D074", Offset = "0x26D074", VA = "0x26D074", Slot = "5")]
		public virtual bool CanChangeSceneMain()
		{
			return default(bool);
		}

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x26D07C", Offset = "0x26D07C", VA = "0x26D07C", Slot = "6")]
		public virtual void OnUpdate()
		{
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x26D080", Offset = "0x26D080", VA = "0x26D080", Slot = "7")]
		public virtual void OnAppQuit()
		{
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x26D010", Offset = "0x26D010", VA = "0x26D010")]
		private void CheckLangage()
		{
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0x26D084", Offset = "0x26D084", VA = "0x26D084", Slot = "8")]
		public virtual void UnlockTrophy(eTrophy trophy)
		{
		}
	}
	[Token(Token = "0x2000028")]
	public class OculusPlatform : BasePlatform
	{
		[Token(Token = "0x2000029")]
		public enum eState
		{
			[Token(Token = "0x4000111")]
			NOT_CHECK,
			[Token(Token = "0x4000112")]
			CHECKING,
			[Token(Token = "0x4000113")]
			SUCCESS,
			[Token(Token = "0x4000114")]
			FAILURE
		}

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool exitAppOnFailure;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private eState m_state;

		[Token(Token = "0x6000102")]
		[Address(RVA = "0x26EE7C", Offset = "0x26EE7C", VA = "0x26EE7C")]
		public OculusPlatform()
		{
		}

		[Token(Token = "0x6000103")]
		[Address(RVA = "0x26EF08", Offset = "0x26EF08", VA = "0x26EF08", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0x26F1A4", Offset = "0x26F1A4", VA = "0x26F1A4", Slot = "5")]
		public override bool CanChangeSceneMain()
		{
			return default(bool);
		}

		[Token(Token = "0x6000105")]
		[Address(RVA = "0x26EF70", Offset = "0x26EF70", VA = "0x26EF70")]
		private void CheckEntitlement()
		{
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0x26F310", Offset = "0x26F310", VA = "0x26F310")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6000107")]
		[Address(RVA = "0x26F1B8", Offset = "0x26F1B8", VA = "0x26F1B8")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x6000108")]
		[Address(RVA = "0x26F140", Offset = "0x26F140", VA = "0x26F140")]
		private void CheckLangage()
		{
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0x26F34C", Offset = "0x26F34C", VA = "0x26F34C", Slot = "8")]
		public override void UnlockTrophy(eTrophy trophy)
		{
		}
	}
	[Token(Token = "0x200002A")]
	public class PlatformManager : SingletonMonoBehaviour<PlatformManager>
	{
		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private BasePlatform m_platform;

		[Token(Token = "0x600010A")]
		[Address(RVA = "0x26F418", Offset = "0x26F418", VA = "0x26F418")]
		public PlatformManager()
		{
		}

		[Token(Token = "0x600010B")]
		[Address(RVA = "0x26F4A8", Offset = "0x26F4A8", VA = "0x26F4A8")]
		public void Init()
		{
		}

		[Token(Token = "0x600010C")]
		[Address(RVA = "0x26F538", Offset = "0x26F538", VA = "0x26F538")]
		public bool CanChangeSceneMain()
		{
			return default(bool);
		}

		[Token(Token = "0x600010D")]
		[Address(RVA = "0x26F570", Offset = "0x26F570", VA = "0x26F570")]
		public SAWSaveData.eLanguage GetPlatformLanguage()
		{
			return default(SAWSaveData.eLanguage);
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0x26F584", Offset = "0x26F584", VA = "0x26F584")]
		private void Update()
		{
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0x26F5A0", Offset = "0x26F5A0", VA = "0x26F5A0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0x26F5BC", Offset = "0x26F5BC", VA = "0x26F5BC")]
		public void UnlockTrophy(BasePlatform.eTrophy trophy)
		{
		}
	}
}
namespace Game
{
	[Token(Token = "0x200002B")]
	public class ShadowController : MonoBehaviour
	{
		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool m_isInit;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CharacterKeeper m_Target;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float m_height;

		[Token(Token = "0x4000119")]
		private const float DIST_TO_LIGHT = 0.7f;

		[Token(Token = "0x6000111")]
		[Address(RVA = "0x1B4D9C", Offset = "0x1B4D9C", VA = "0x1B4D9C")]
		public ShadowController()
		{
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0x1B4DB0", Offset = "0x1B4DB0", VA = "0x1B4DB0")]
		private void Update()
		{
		}
	}
}
[Token(Token = "0x200002C")]
public static class ClassExtention
{
	[Token(Token = "0x6000113")]
	[Address(RVA = "0x26CD74", Offset = "0x26CD74", VA = "0x26CD74")]
	public static bool IsNullOrEmpty(this string self)
	{
		return default(bool);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x26CDFC", Offset = "0x26CDFC", VA = "0x26CDFC")]
	public static Transform FindInChildren(this Transform self, string name)
	{
		return null;
	}

	[Token(Token = "0x6000115")]
	public static List<T> SafeAdd<T>(this List<T> self, T obj)
	{
		return null;
	}
}
namespace Common
{
	[Token(Token = "0x200002D")]
	public class DontDestroyOnLoadGroup : SingletonMonoBehaviour<DontDestroyOnLoadGroup>
	{
		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInst;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VRManager m_vrManager;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ControllerManager m_controllerManager;

		[Token(Token = "0x6000116")]
		[Address(RVA = "0x26D498", Offset = "0x26D498", VA = "0x26D498")]
		public DontDestroyOnLoadGroup()
		{
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0x26D528", Offset = "0x26D528", VA = "0x26D528")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0x26D8D8", Offset = "0x26D8D8", VA = "0x26D8D8")]
		public void InitResource()
		{
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0x26D68C", Offset = "0x26D68C", VA = "0x26D68C")]
		private void InitSingleton()
		{
		}
	}
	[Token(Token = "0x200002E")]
	public abstract class MessageComponent : MonoBehaviour
	{
		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool m_isInit;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected eMessageID m_eMessageID;

		[Token(Token = "0x600011B")]
		[Address(RVA = "0x26E218", Offset = "0x26E218", VA = "0x26E218")]
		protected MessageComponent()
		{
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0x26E220", Offset = "0x26E220", VA = "0x26E220")]
		public eMessageID GetMessageID()
		{
			return default(eMessageID);
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0x26E228", Offset = "0x26E228", VA = "0x26E228")]
		public void InitMessageID(eMessageID param)
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0x26E3FC", Offset = "0x26E3FC", VA = "0x26E3FC")]
		private void Start()
		{
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0x26E400", Offset = "0x26E400", VA = "0x26E400")]
		private void Update()
		{
		}

		[Token(Token = "0x6000120")]
		public abstract void ReceiveMessage(eMessageType message, float extraParam1);
	}
	[Token(Token = "0x200002F")]
	public enum eMessageID
	{
		[Token(Token = "0x4000120")]
		SCENE_MAIN,
		[Token(Token = "0x4000121")]
		HOLO,
		[Token(Token = "0x4000122")]
		BREAD,
		[Token(Token = "0x4000123")]
		JUTE_BAG,
		[Token(Token = "0x4000124")]
		WATERMILL,
		[Token(Token = "0x4000125")]
		DESK,
		[Token(Token = "0x4000126")]
		CHAIR,
		[Token(Token = "0x4000127")]
		DOOR,
		[Token(Token = "0x4000128")]
		WINDOW
	}
	[Token(Token = "0x2000030")]
	public enum eMessageType
	{
		[Token(Token = "0x400012A")]
		TEST,
		[Token(Token = "0x400012B")]
		HEAD_TOUCH,
		[Token(Token = "0x400012C")]
		HEAD_BRUSH,
		[Token(Token = "0x400012D")]
		HEAD_NOT_BRUSH,
		[Token(Token = "0x400012E")]
		TAIL_TOUCH,
		[Token(Token = "0x400012F")]
		TAIL_BRUSH,
		[Token(Token = "0x4000130")]
		TAIL_NOT_BRUSH,
		[Token(Token = "0x4000131")]
		BODY_TOUCH,
		[Token(Token = "0x4000132")]
		BODY_BRUSH,
		[Token(Token = "0x4000133")]
		BODY_NOT_BRUSH,
		[Token(Token = "0x4000134")]
		EAR_TOUCH_L,
		[Token(Token = "0x4000135")]
		EAR_TOUCH_R,
		[Token(Token = "0x4000136")]
		CHATCH_THE_BREAD,
		[Token(Token = "0x4000137")]
		CHATCH_THE_JUTEBAG,
		[Token(Token = "0x4000138")]
		LOCK_WINDOW,
		[Token(Token = "0x4000139")]
		LOCK_DOOR,
		[Token(Token = "0x400013A")]
		LOCK_DESK,
		[Token(Token = "0x400013B")]
		LOCK_WATER_MILL,
		[Token(Token = "0x400013C")]
		LOCK_CHAIR,
		[Token(Token = "0x400013D")]
		CHATCH_BY_HOLO,
		[Token(Token = "0x400013E")]
		RELEACE_OBJECT,
		[Token(Token = "0x400013F")]
		LOOK_OBJ,
		[Token(Token = "0x4000140")]
		FORM_CHANGE,
		[Token(Token = "0x4000141")]
		ACTIVE_OBJ_REACTION,
		[Token(Token = "0x4000142")]
		STOP_OBJ_REACTION,
		[Token(Token = "0x4000143")]
		PAUSE,
		[Token(Token = "0x4000144")]
		RESUME,
		[Token(Token = "0x4000145")]
		DELETE,
		[Token(Token = "0x4000146")]
		LOOK_TAIL,
		[Token(Token = "0x4000147")]
		FREEZE
	}
	[Token(Token = "0x2000031")]
	public class MessageManager : SingletonMonoBehaviour<MessageManager>
	{
		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AD484", Offset = "0x1AD484")]
		private sealed class <DispachMessage>c__AnonStorey0
		{
			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal eMessageID reciver;

			[Token(Token = "0x6001141")]
			[Address(RVA = "0x26EE3C", Offset = "0x26EE3C", VA = "0x26EE3C")]
			public <DispachMessage>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6001142")]
			[Address(RVA = "0x26EE44", Offset = "0x26EE44", VA = "0x26EE44")]
			internal bool <>m__0(MessageComponent x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private List<MessageComponent> m_phonebook;

		[Token(Token = "0x6000121")]
		[Address(RVA = "0x26E404", Offset = "0x26E404", VA = "0x26E404")]
		public MessageManager()
		{
		}

		[Token(Token = "0x6000122")]
		[Address(RVA = "0x26E494", Offset = "0x26E494", VA = "0x26E494")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000123")]
		[Address(RVA = "0x26E498", Offset = "0x26E498", VA = "0x26E498")]
		private void Init()
		{
		}

		[Token(Token = "0x6000124")]
		[Address(RVA = "0x26E2E8", Offset = "0x26E2E8", VA = "0x26E2E8")]
		public void AddPhonebook(MessageComponent main)
		{
		}

		[Token(Token = "0x6000125")]
		[Address(RVA = "0x26E524", Offset = "0x26E524", VA = "0x26E524")]
		public void ClearPhonebook()
		{
		}

		[Token(Token = "0x6000126")]
		[Address(RVA = "0x26E59C", Offset = "0x26E59C", VA = "0x26E59C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000127")]
		[Address(RVA = "0x26E5A0", Offset = "0x26E5A0", VA = "0x26E5A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000128")]
		[Address(RVA = "0x26E5A4", Offset = "0x26E5A4", VA = "0x26E5A4")]
		public void DispachMessage(eMessageID reciver, eMessageType message, float extraParam1)
		{
		}
	}
}
[Token(Token = "0x2000032")]
public class NamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public readonly string[] names;

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1D7D10", Offset = "0x1D7D10", VA = "0x1D7D10")]
	public NamedArrayAttribute(string[] names)
	{
	}
}
namespace Common
{
	[Token(Token = "0x2000033")]
	public class ResourceManager : SingletonMonoBehaviour<ResourceManager>
	{
		[Token(Token = "0x20002BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AD4C4", Offset = "0x1AD4C4")]
		private sealed class <LoadAssetsBandle>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4000B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal string <path>__0;

			[Token(Token = "0x4000B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal string filePath;

			[Token(Token = "0x4000B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal AssetBundleCreateRequest <createRequest>__0;

			[Token(Token = "0x4000B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal AssetBundle <assetBundle>__0;

			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string[] <assetNames>__1;

			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal bool dontUnload;

			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal ResourceManager $this;

			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal object $current;

			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool $disposing;

			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal int $PC;

			[Token(Token = "0x17000121")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001145")]
				[Address(RVA = "0x271698", Offset = "0x271698", VA = "0x271698", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000122")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001146")]
				[Address(RVA = "0x2716A0", Offset = "0x2716A0", VA = "0x2716A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001143")]
			[Address(RVA = "0x270718", Offset = "0x270718", VA = "0x270718")]
			[DebuggerHidden]
			public <LoadAssetsBandle>c__Iterator0()
			{
			}

			[Token(Token = "0x6001144")]
			[Address(RVA = "0x270F48", Offset = "0x270F48", VA = "0x270F48", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001147")]
			[Address(RVA = "0x2716A8", Offset = "0x2716A8", VA = "0x2716A8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001148")]
			[Address(RVA = "0x2716BC", Offset = "0x2716BC", VA = "0x2716BC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private bool m_isLoadAssetBundle;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string m_pathToResources;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Dictionary<string, ResourceData> m_resourceDictionary;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> m_loadingWaitAssetBundleList;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private List<string> m_loadedAssetBundleNameList;

		[Token(Token = "0x1700003D")]
		public bool IsLoadAssetBundle
		{
			[Token(Token = "0x600012B")]
			[Address(RVA = "0x26FB14", Offset = "0x26FB14", VA = "0x26FB14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600012C")]
			[Address(RVA = "0x26FB1C", Offset = "0x26FB1C", VA = "0x26FB1C")]
			set
			{
			}
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0x26FA70", Offset = "0x26FA70", VA = "0x26FA70")]
		public ResourceManager()
		{
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0x26FB24", Offset = "0x26FB24", VA = "0x26FB24")]
		public bool IsResource(string keyName, bool isAttachPathToResources = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0x26FC18", Offset = "0x26FC18", VA = "0x26FC18")]
		private bool IsLoadedAssetBundle(string assetBundleName)
		{
			return default(bool);
		}

		[Token(Token = "0x600012F")]
		[Address(RVA = "0x26DF14", Offset = "0x26DF14", VA = "0x26DF14")]
		public void Init()
		{
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0x26FF3C", Offset = "0x26FF3C", VA = "0x26FF3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0x26FF40", Offset = "0x26FF40", VA = "0x26FF40")]
		private void Update()
		{
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0x26FF44", Offset = "0x26FF44", VA = "0x26FF44")]
		private void CheackLoadAssetBundleList()
		{
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0x27022C", Offset = "0x27022C", VA = "0x27022C")]
		private void RemoveLoadedAssetBundleListName(string assetBundleName)
		{
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0x270550", Offset = "0x270550", VA = "0x270550")]
		public bool LoadAssetBundleRequest(string fileName, bool dontUnload = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000135")]
		private ResourceData LoadResource<T>(string filePath) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000136")]
		[Address(RVA = "0x270660", Offset = "0x270660", VA = "0x270660")]
		[DebuggerHidden]
		private IEnumerator LoadAssetsBandle(string filePath, bool dontUnload)
		{
			return null;
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0x270720", Offset = "0x270720", VA = "0x270720")]
		private ResourceData GetDictionaryResource(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0x2707FC", Offset = "0x2707FC", VA = "0x2707FC")]
		public void RemoveResource(string filePath)
		{
		}

		[Token(Token = "0x6000139")]
		[Address(RVA = "0x27090C", Offset = "0x27090C", VA = "0x27090C")]
		public void RemoveResourceFileName(string fileName)
		{
		}

		[Token(Token = "0x600013A")]
		[Address(RVA = "0x270BDC", Offset = "0x270BDC", VA = "0x270BDC")]
		public void RemoveResourcesSearchAssetBundleName(string assetBundleName)
		{
		}

		[Token(Token = "0x600013B")]
		public T LoadResourceDirect<T>(string filePath) where T : UnityEngine.Object
		{
			return null;
		}
	}
	[Token(Token = "0x2000034")]
	public class ResourceData
	{
		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private string mName;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string m_Path;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UnityEngine.Object m_UnityObject;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_ReferenceCount;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_AssetBundle;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private string m_assetBundleName;

		[Token(Token = "0x1700003E")]
		public string Name
		{
			[Token(Token = "0x600013D")]
			[Address(RVA = "0x26FA10", Offset = "0x26FA10", VA = "0x26FA10")]
			get
			{
				return null;
			}
			[Token(Token = "0x600013E")]
			[Address(RVA = "0x26FA18", Offset = "0x26FA18", VA = "0x26FA18")]
			set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public string Path
		{
			[Token(Token = "0x600013F")]
			[Address(RVA = "0x26FA20", Offset = "0x26FA20", VA = "0x26FA20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000140")]
			[Address(RVA = "0x26FA28", Offset = "0x26FA28", VA = "0x26FA28")]
			set
			{
			}
		}

		[Token(Token = "0x17000040")]
		public UnityEngine.Object UnityObject
		{
			[Token(Token = "0x6000141")]
			[Address(RVA = "0x26FA30", Offset = "0x26FA30", VA = "0x26FA30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000142")]
			[Address(RVA = "0x26FA38", Offset = "0x26FA38", VA = "0x26FA38")]
			set
			{
			}
		}

		[Token(Token = "0x17000041")]
		public int ReferenceCount
		{
			[Token(Token = "0x6000143")]
			[Address(RVA = "0x26FA40", Offset = "0x26FA40", VA = "0x26FA40")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000144")]
			[Address(RVA = "0x26FA48", Offset = "0x26FA48", VA = "0x26FA48")]
			set
			{
			}
		}

		[Token(Token = "0x17000042")]
		public bool IsAssetBundle
		{
			[Token(Token = "0x6000145")]
			[Address(RVA = "0x26FA50", Offset = "0x26FA50", VA = "0x26FA50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000146")]
			[Address(RVA = "0x26FA58", Offset = "0x26FA58", VA = "0x26FA58")]
			set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public string AssetBundleName
		{
			[Token(Token = "0x6000147")]
			[Address(RVA = "0x26FA60", Offset = "0x26FA60", VA = "0x26FA60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000148")]
			[Address(RVA = "0x26FA68", Offset = "0x26FA68", VA = "0x26FA68")]
			set
			{
			}
		}

		[Token(Token = "0x600013C")]
		[Address(RVA = "0x26FA08", Offset = "0x26FA08", VA = "0x26FA08")]
		public ResourceData()
		{
		}
	}
	[Token(Token = "0x2000035")]
	public abstract class SingletonMonoBehaviour<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T m_instance;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool m_quitting;

		[Token(Token = "0x6000149")]
		protected SingletonMonoBehaviour()
		{
		}

		[Token(Token = "0x600014A")]
		public static T GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600014B")]
		public static bool IsGetInstance()
		{
			return default(bool);
		}

		[Token(Token = "0x600014C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600014D")]
		private void OnApplicationQuit()
		{
		}
	}
	[Token(Token = "0x2000036")]
	public abstract class BaseState<T>
	{
		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AD534", Offset = "0x1AD534")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1AD534", Offset = "0x1AD534")]
		private bool <IsEndStart>k__BackingField;

		[Token(Token = "0x17000044")]
		public bool IsEndStart
		{
			[Token(Token = "0x6000150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AD568", Offset = "0x1AD568")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000151")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AD578", Offset = "0x1AD578")]
			set
			{
			}
		}

		[Token(Token = "0x600014F")]
		protected BaseState()
		{
		}

		[Token(Token = "0x6000152")]
		public virtual void Enter(T baseState)
		{
		}

		[Token(Token = "0x6000153")]
		public virtual void Start(T baseState)
		{
		}

		[Token(Token = "0x6000154")]
		public virtual void Execute(T baseState)
		{
		}

		[Token(Token = "0x6000155")]
		public virtual void Exit(T baseState)
		{
		}

		[Token(Token = "0x6000156")]
		public virtual bool Message(T baseState, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000037")]
	public class StateMachine<T>
	{
		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BaseState<T> m_currentState;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BaseState<T> m_prevState;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BaseState<T> m_globalState;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BaseState<T> m_stockState;

		[Token(Token = "0x6000157")]
		public StateMachine()
		{
		}

		[Token(Token = "0x6000158")]
		public void ChangeState(BaseState<T> nextState, T order, [Optional] BaseState<T> stockState)
		{
		}

		[Token(Token = "0x6000159")]
		public void ChangeGlobalState(BaseState<T> nextState, T order)
		{
		}

		[Token(Token = "0x600015A")]
		public void SelfUpdate(T order)
		{
		}

		[Token(Token = "0x600015B")]
		public void ChangePrevState(T order)
		{
		}

		[Token(Token = "0x600015C")]
		public BaseState<T> GetCurrentState()
		{
			return null;
		}

		[Token(Token = "0x600015D")]
		public BaseState<T> GetPrevState()
		{
			return null;
		}

		[Token(Token = "0x600015E")]
		public BaseState<T> GetStockState()
		{
			return null;
		}
	}
}
namespace PlayStationVRExample
{
	[Token(Token = "0x2000038")]
	public class TrackedPlayStationDevices : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000039")]
		public class TrackedDevice
		{
			[Token(Token = "0x400015D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int handle;

			[Token(Token = "0x400015E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Transform transform;

			[Token(Token = "0x400015F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x4000160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion orientation;

			[Token(Token = "0x6000161")]
			[Address(RVA = "0x2B6B5C", Offset = "0x2B6B5C", VA = "0x2B6B5C")]
			public TrackedDevice()
			{
			}
		}

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TrackedDevice deviceDualShock4;

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x2B6B10", Offset = "0x2B6B10", VA = "0x2B6B10")]
		public TrackedPlayStationDevices()
		{
		}

		[Token(Token = "0x6000160")]
		[Address(RVA = "0x2B6B18", Offset = "0x2B6B18", VA = "0x2B6B18")]
		private void Awake()
		{
		}
	}
}
[Token(Token = "0x200003A")]
public class DebugBoundsViewer : MonoBehaviour
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Vector3 size;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 center;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x271880", Offset = "0x271880", VA = "0x271880")]
	public DebugBoundsViewer()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x271888", Offset = "0x271888", VA = "0x271888")]
	private void OnDrawGizmosSelected()
	{
	}
}
namespace Game
{
	[Token(Token = "0x200003B")]
	public class FuzzyLogic
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0x37B1E8", Offset = "0x37B1E8", VA = "0x37B1E8")]
		public FuzzyLogic()
		{
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x37B1F0", Offset = "0x37B1F0", VA = "0x37B1F0")]
		public static float FuzzyGrade(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0x37B23C", Offset = "0x37B23C", VA = "0x37B23C")]
		public static float FuzzyReverseGrade(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x37B2A0", Offset = "0x37B2A0", VA = "0x37B2A0")]
		public static float FuzzyTriangle(float value, float min, float middle, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x37B348", Offset = "0x37B348", VA = "0x37B348")]
		public static float FuzzyTrapenoid(float value, float min, float near, float far, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x37B40C", Offset = "0x37B40C", VA = "0x37B40C")]
		public static float FuzzyAnd(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0x37B49C", Offset = "0x37B49C", VA = "0x37B49C")]
		public static float FuzzyOr(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0x37B28C", Offset = "0x37B28C", VA = "0x37B28C")]
		public static float FuzzyNot(float a)
		{
			return default(float);
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0x37B52C", Offset = "0x37B52C", VA = "0x37B52C")]
		public static float HedgVery(float rate)
		{
			return default(float);
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0x37B5B8", Offset = "0x37B5B8", VA = "0x37B5B8")]
		public static float HedgNotVery(float rate)
		{
			return default(float);
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0x37B67C", Offset = "0x37B67C", VA = "0x37B67C")]
		public static bool Sample(float length, ref float fuzzyValue)
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x200003C")]
public class BaseAnimation : MonoBehaviour
{
	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private float m_delayTimeMax;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_delayTime;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected float m_currentTime;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool m_actionFlag;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	protected bool m_endFlag;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	protected bool m_loopFlag;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x2688BC", Offset = "0x2688BC", VA = "0x2688BC")]
	public BaseAnimation()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x2688C4", Offset = "0x2688C4", VA = "0x2688C4", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x2688C8", Offset = "0x2688C8", VA = "0x2688C8", Slot = "5")]
	public virtual void Action(bool isLoop)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x268928", Offset = "0x268928", VA = "0x268928")]
	protected bool ActionCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x268994", Offset = "0x268994", VA = "0x268994", Slot = "6")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x2689A0", Offset = "0x2689A0", VA = "0x2689A0", Slot = "7")]
	public virtual void StopLoop()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x2689AC", Offset = "0x2689AC", VA = "0x2689AC", Slot = "8")]
	public virtual bool IsAction()
	{
		return default(bool);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x2689B4", Offset = "0x2689B4", VA = "0x2689B4", Slot = "9")]
	public virtual bool IsEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x2689BC", Offset = "0x2689BC", VA = "0x2689BC", Slot = "10")]
	public virtual void SetEnd(bool isEnd)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x2689C4", Offset = "0x2689C4", VA = "0x2689C4", Slot = "11")]
	public virtual float GetCurrentTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x2689CC", Offset = "0x2689CC", VA = "0x2689CC", Slot = "12")]
	public virtual void SetCurrentTime(float time)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x2689D4", Offset = "0x2689D4", VA = "0x2689D4", Slot = "13")]
	public virtual float GetDelayTime()
	{
		return default(float);
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x2689DC", Offset = "0x2689DC", VA = "0x2689DC", Slot = "14")]
	public virtual void SetDelayTime(float time)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x2689E4", Offset = "0x2689E4", VA = "0x2689E4", Slot = "15")]
	public virtual void CountUpCurrentTime()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x268A18", Offset = "0x268A18", VA = "0x268A18")]
	public float OutExp(float currentTime, float totalTime, float max, float min)
	{
		return default(float);
	}
}
[Token(Token = "0x200003D")]
public class Boyoyon : BaseAnimation
{
	[Token(Token = "0x200003E")]
	protected enum STEP
	{
		[Token(Token = "0x4000170")]
		START,
		[Token(Token = "0x4000171")]
		EXE0,
		[Token(Token = "0x4000172")]
		EXE2,
		[Token(Token = "0x4000173")]
		EXE3,
		[Token(Token = "0x4000174")]
		END
	}

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD5B8", Offset = "0x1AD5B8")]
	private float m_startScale;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD5F0", Offset = "0x1AD5F0")]
	private float m_endScale;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD630", Offset = "0x1AD630")]
	private float m_velocity;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD66C", Offset = "0x1AD66C")]
	private float m_backPower;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_addScale;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected STEP m_step;

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x269CB0", Offset = "0x269CB0", VA = "0x269CB0")]
	public Boyoyon()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x269CE0", Offset = "0x269CE0", VA = "0x269CE0", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x269CF4", Offset = "0x269CF4", VA = "0x269CF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x26A540", Offset = "0x26A540", VA = "0x26A540", Slot = "5")]
	public override void Action(bool isLoop)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x26A5E8", Offset = "0x26A5E8", VA = "0x26A5E8", Slot = "6")]
	public override void Stop()
	{
	}
}
[Token(Token = "0x200003F")]
public class Move : BaseAnimation
{
	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 m_nextPos;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 m_nextVector;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_fSpeed;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1D77C0", Offset = "0x1D77C0", VA = "0x1D77C0")]
	public Move()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1D7820", Offset = "0x1D7820", VA = "0x1D7820", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1D7940", Offset = "0x1D7940", VA = "0x1D7940")]
	private void Update()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1D7CA0", Offset = "0x1D7CA0", VA = "0x1D7CA0", Slot = "6")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1D7CE8", Offset = "0x1D7CE8", VA = "0x1D7CE8")]
	public void SetNextPos(Vector3 nextPos)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1D7CFC", Offset = "0x1D7CFC", VA = "0x1D7CFC")]
	public Vector3 GetNextPos()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000040")]
public class Nameko : BaseAnimation
{
	[Token(Token = "0x2000041")]
	protected enum STEP
	{
		[Token(Token = "0x400017F")]
		START,
		[Token(Token = "0x4000180")]
		EXE,
		[Token(Token = "0x4000181")]
		END
	}

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD6C8", Offset = "0x1AD6C8")]
	private float m_startScale;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD704", Offset = "0x1AD704")]
	private float m_endScale;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD740", Offset = "0x1AD740")]
	private float m_velocity;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD780", Offset = "0x1AD780")]
	private float m_backPower;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_addScale;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected STEP m_step;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1D7D30", Offset = "0x1D7D30", VA = "0x1D7D30")]
	public Nameko()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1D7D54", Offset = "0x1D7D54", VA = "0x1D7D54", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1D7D7C", Offset = "0x1D7D7C", VA = "0x1D7D7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1D81E8", Offset = "0x1D81E8", VA = "0x1D81E8", Slot = "5")]
	public override void Action(bool isLoop)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1D8294", Offset = "0x1D8294", VA = "0x1D8294", Slot = "6")]
	public override void Stop()
	{
	}
}
[Token(Token = "0x2000042")]
public class Ripple : BaseAnimation
{
	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_endTime;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_initScale;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_addScale;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x2B888C", Offset = "0x2B888C", VA = "0x2B888C")]
	public Ripple()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x2B88AC", Offset = "0x2B88AC", VA = "0x2B88AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x2B8BFC", Offset = "0x2B8BFC", VA = "0x2B8BFC", Slot = "5")]
	public override void Action(bool isLoop)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x2B8C9C", Offset = "0x2B8C9C", VA = "0x2B8C9C", Slot = "6")]
	public override void Stop()
	{
	}
}
[Token(Token = "0x2000043")]
public class Scale : BaseAnimation
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_initScale;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_nextScale;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_endTime;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private readonly float m_startScale;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x2B8CE4", Offset = "0x2B8CE4", VA = "0x2B8CE4")]
	public Scale()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x2B8CFC", Offset = "0x2B8CFC", VA = "0x2B8CFC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x2B8D9C", Offset = "0x2B8D9C", VA = "0x2B8D9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x2B8ECC", Offset = "0x2B8ECC", VA = "0x2B8ECC", Slot = "5")]
	public override void Action(bool isLoop)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x2B8F6C", Offset = "0x2B8F6C", VA = "0x2B8F6C", Slot = "6")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x2B8FB4", Offset = "0x2B8FB4", VA = "0x2B8FB4")]
	public void SetNextScale(float nextScale)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x2B8FBC", Offset = "0x2B8FBC", VA = "0x2B8FBC")]
	public float GetNextScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x2B8FC4", Offset = "0x2B8FC4", VA = "0x2B8FC4")]
	public void SetInitScale(float initScale)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x2B8FCC", Offset = "0x2B8FCC", VA = "0x2B8FCC")]
	public float GetInitScale()
	{
		return default(float);
	}
}
[Token(Token = "0x2000044")]
public class ScaleWave : BaseAnimation
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD830", Offset = "0x1AD830")]
	private float m_speed;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_initScale;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_endTime;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_sinScale;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD88C", Offset = "0x1AD88C")]
	private float m_pow;

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x2B8FD4", Offset = "0x2B8FD4", VA = "0x2B8FD4")]
	public ScaleWave()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x2B8FFC", Offset = "0x2B8FFC", VA = "0x2B8FFC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x2B9024", Offset = "0x2B9024", VA = "0x2B9024")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x2B9030", Offset = "0x2B9030", VA = "0x2B9030")]
	private void Update()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x2B9204", Offset = "0x2B9204", VA = "0x2B9204", Slot = "5")]
	public override void Action(bool isLoop)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x2B92A8", Offset = "0x2B92A8", VA = "0x2B92A8")]
	public void SetInitScale(float initScale)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x2B92B0", Offset = "0x2B92B0", VA = "0x2B92B0")]
	public float GetInitScale()
	{
		return default(float);
	}
}
[Token(Token = "0x2000045")]
public class Scroll : BaseAnimation
{
	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 m_addVec;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 m_goalPos;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Vector3 m_jumpPos;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool m_checkX;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	private bool m_checkY;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	[SerializeField]
	private bool m_checkZ;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x2B9370", Offset = "0x2B9370", VA = "0x2B9370")]
	public Scroll()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x2B9410", Offset = "0x2B9410", VA = "0x2B9410", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x2B94D0", Offset = "0x2B94D0", VA = "0x2B94D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x2B9810", Offset = "0x2B9810", VA = "0x2B9810")]
	private bool Check(bool isPlus, float vCurrentPos, float vGoalPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x2B9844", Offset = "0x2B9844", VA = "0x2B9844")]
	public void SetAddVec(Vector3 vAddVec)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x2B9850", Offset = "0x2B9850", VA = "0x2B9850")]
	public Vector3 GetAddVec()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000046")]
public class Sway : BaseAnimation
{
	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD928", Offset = "0x1AD928")]
	private float m_speed;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 m_initPos;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float m_endTime;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_sinY;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD984", Offset = "0x1AD984")]
	private float m_pow;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AD9C0", Offset = "0x1AD9C0")]
	private float m_length;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xA7BC60", Offset = "0xA7BC60", VA = "0xA7BC60")]
	public Sway()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xA7BC8C", Offset = "0xA7BC8C", VA = "0xA7BC8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xA7BEB8", Offset = "0xA7BEB8", VA = "0xA7BEB8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xA7C0F4", Offset = "0xA7C0F4", VA = "0xA7C0F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xA7C374", Offset = "0xA7C374", VA = "0xA7C374", Slot = "5")]
	public override void Action(bool isLoop)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xA7BEAC", Offset = "0xA7BEAC", VA = "0xA7BEAC")]
	public void SetInitPos(Vector3 pos)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xA7C568", Offset = "0xA7C568", VA = "0xA7C568")]
	public Vector3 GetInitScale()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000047")]
public class TestMoveObj : PoseComponent
{
	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public POSE_MASK poseMask;

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xA7CBDC", Offset = "0xA7CBDC", VA = "0xA7CBDC")]
	public TestMoveObj()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xA7CC68", Offset = "0xA7CC68", VA = "0xA7CC68")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xA7CC74", Offset = "0xA7CC74", VA = "0xA7CC74")]
	private new void Update()
	{
	}
}
namespace Game
{
	[Token(Token = "0x2000048")]
	public class AreaFade : MonoBehaviour
	{
		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float back_coll;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float front_coll;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float right_coll;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float left_coll;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float buttom_coll;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float top_coll;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fade_start_dist;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 m_addpos;

		[Token(Token = "0x40001A3")]
		private const int MAX = 6;

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float[] OUT;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_retrackingTimer;

		[Token(Token = "0x40001A6")]
		private const float AUTO_RETRACKING_TIME = 5f;

		[Token(Token = "0x40001A7")]
		private const float AUTO_RETRACKING_FADE_RATE = 0.9f;

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x286220", Offset = "0x286220", VA = "0x286220")]
		public AreaFade()
		{
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x2862E0", Offset = "0x2862E0", VA = "0x2862E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x286470", Offset = "0x286470", VA = "0x286470")]
		private void Update()
		{
		}
	}
}
[Token(Token = "0x2000049")]
public class CheekComponent : MonoBehaviour
{
	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private SkinnedMeshRenderer m_faceMesh;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private int m_matIndex;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private string m_shapeBaseName;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material m_faceMat;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_smallIndex;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_bigIndex;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_smallShaderIndex;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_bigShaderIndex;

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x26CA5C", Offset = "0x26CA5C", VA = "0x26CA5C")]
	public CheekComponent()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x26CA64", Offset = "0x26CA64", VA = "0x26CA64")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x26CC9C", Offset = "0x26CC9C", VA = "0x26CC9C")]
	private void Update()
	{
	}
}
namespace Game
{
	[Token(Token = "0x200004A")]
	public class FaceMorphManager : SingletonMonoBehaviour<FaceMorphManager>
	{
		[Serializable]
		[Token(Token = "0x200004B")]
		public class cFacialParam
		{
			[Token(Token = "0x40001BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string name;

			[Token(Token = "0x40001C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ADA88", Offset = "0x1ADA88")]
			public float eyeParam;

			[Token(Token = "0x40001C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ADAA4", Offset = "0x1ADAA4")]
			public float eyeBrowsParam;

			[Token(Token = "0x40001C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ADAC0", Offset = "0x1ADAC0")]
			public float mouthParam;

			[Token(Token = "0x40001C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ADADC", Offset = "0x1ADADC")]
			public float angryEyeBrowsParam;

			[Token(Token = "0x40001C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ADAF8", Offset = "0x1ADAF8")]
			public float mouthDown;

			[Token(Token = "0x40001C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ADB14", Offset = "0x1ADB14")]
			public float smileEye;

			[Token(Token = "0x40001C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ADB30", Offset = "0x1ADB30")]
			public float sadEyeBrowsParam;

			[Token(Token = "0x40001C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ADB4C", Offset = "0x1ADB4C")]
			public float JitomeParam;

			[Token(Token = "0x60001C7")]
			[Address(RVA = "0x3773D8", Offset = "0x3773D8", VA = "0x3773D8")]
			public cFacialParam()
			{
			}
		}

		[Token(Token = "0x40001B0")]
		private const float S_RATE_MAX = 100f;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private cFacialParam[] m_facials;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private cFacialParam m_nextFacial;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ADA4C", Offset = "0x1ADA4C")]
		public float m_blendAddRate;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private cFacialParam m_resultFacial;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string m_currentFacial;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_blinkSinSpeed;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_blinkRate;

		[Token(Token = "0x40001B8")]
		private const float ACTIVE_BLINK_TIME = 7f;

		[Token(Token = "0x40001B9")]
		private const float ACTIVE_BLINK_TIME_RANDOM_SEED = 2f;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_resultActiveTime;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_activeBlinkTime;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isActiveBlink;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_isInit;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool m_isPause;

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x3772F0", Offset = "0x3772F0", VA = "0x3772F0")]
		public FaceMorphManager()
		{
		}

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x3773E0", Offset = "0x3773E0", VA = "0x3773E0")]
		public string GetCurrentFacial()
		{
			return null;
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x3773E8", Offset = "0x3773E8", VA = "0x3773E8")]
		public bool GetPause()
		{
			return default(bool);
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x3773F0", Offset = "0x3773F0", VA = "0x3773F0")]
		public void SetPause(bool param)
		{
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x3773F8", Offset = "0x3773F8", VA = "0x3773F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x3773FC", Offset = "0x3773FC", VA = "0x3773FC")]
		public void Init()
		{
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x37747C", Offset = "0x37747C", VA = "0x37747C")]
		public void SetNextMorph(string morphName)
		{
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x3776CC", Offset = "0x3776CC", VA = "0x3776CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x377904", Offset = "0x377904", VA = "0x377904")]
		public float GetBlinkEnableEye()
		{
			return default(float);
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x377A84", Offset = "0x377A84", VA = "0x377A84")]
		public void BlinkParamReset()
		{
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x377A90", Offset = "0x377A90", VA = "0x377A90")]
		public cFacialParam GetResultFacialParam()
		{
			return null;
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x3776D4", Offset = "0x3776D4", VA = "0x3776D4")]
		private void Blend(float blendAddRate = 0.5f)
		{
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x377908", Offset = "0x377908", VA = "0x377908")]
		private float Blink()
		{
			return default(float);
		}

		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x377A98", Offset = "0x377A98", VA = "0x377A98")]
		private float CalcBlinkRate(float blendRate)
		{
			return default(float);
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x377ADC", Offset = "0x377ADC", VA = "0x377ADC")]
		public bool IsAllZero()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200004C")]
	public class LookPlayer : MonoBehaviour
	{
		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool m_isEnable;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private SkinnedMeshRenderer m_FaceMeshRenderer;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Transform m_eyePos;

		[Token(Token = "0x40001CB")]
		private const int EYE_LEFT_MOVE = 14;

		[Token(Token = "0x40001CC")]
		private const int EYE_RIGHT_MOVE = 15;

		[Token(Token = "0x40001CD")]
		private const int EYE_UP_MOVE = 16;

		[Token(Token = "0x40001CE")]
		private const int EYE_DOWN_MOVE = 17;

		[Token(Token = "0x40001CF")]
		private const int EYE_LIGHT_LEFT_MOVE = 88;

		[Token(Token = "0x40001D0")]
		private const int EYE_LIGHT_RIGHT_MOVE = 89;

		[Token(Token = "0x40001D1")]
		private const int EYE_LIGHT_UP_MOVE = 90;

		[Token(Token = "0x40001D2")]
		private const int EYE_LIGHT_DOWN_MOVE = 91;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_nextEyeMoveLeftRate;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_nextEyeMoveRightRate;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_nextEyeMoveUpRate;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_nextEyeMoveDownRate;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_eyeMoveLeftRate;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_eyeMoveRightRate;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_eyeMoveUpRate;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_eyeMoveDownRate;

		[Token(Token = "0x40001DB")]
		private const float m_adjustEyeLightMoveRate = 0.5f;

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x24ADB4", Offset = "0x24ADB4", VA = "0x24ADB4")]
		public LookPlayer()
		{
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x24ADBC", Offset = "0x24ADBC", VA = "0x24ADBC")]
		public void On()
		{
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x24ADC8", Offset = "0x24ADC8", VA = "0x24ADC8")]
		public void Off()
		{
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x24ADD4", Offset = "0x24ADD4", VA = "0x24ADD4")]
		private void EyeLookUser()
		{
		}

		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x24B148", Offset = "0x24B148", VA = "0x24B148")]
		private void DefaultEye()
		{
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x24B284", Offset = "0x24B284", VA = "0x24B284")]
		public void EyeReset()
		{
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x24B320", Offset = "0x24B320", VA = "0x24B320")]
		private void Start()
		{
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x24B330", Offset = "0x24B330", VA = "0x24B330")]
		private void LateUpdate()
		{
		}
	}
}
[Token(Token = "0x200004D")]
public class BreadCtrl
{
	[Token(Token = "0x200004E")]
	public enum eBreadAnimationType
	{
		[Token(Token = "0x40001E0")]
		IDLE,
		[Token(Token = "0x40001E1")]
		TAKE_BREAD,
		[Token(Token = "0x40001E2")]
		EAT_BREAD,
		[Token(Token = "0x40001E3")]
		PRESENT_BREAD,
		[Token(Token = "0x40001E4")]
		NOTGIVE_BREAD
	}

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private GameObject m_bread;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string m_saveString;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_motionBlendRate;

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x26A628", Offset = "0x26A628", VA = "0x26A628")]
	public BreadCtrl()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x26A638", Offset = "0x26A638", VA = "0x26A638")]
	public GameObject GetBread()
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x26A640", Offset = "0x26A640", VA = "0x26A640")]
	public void Find()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x26A880", Offset = "0x26A880", VA = "0x26A880")]
	public void End()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x26A6FC", Offset = "0x26A6FC", VA = "0x26A6FC")]
	public void AnimationPlay(eBreadAnimationType type)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x26A88C", Offset = "0x26A88C", VA = "0x26A88C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x26A890", Offset = "0x26A890", VA = "0x26A890")]
	public void SelfUpdate()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x26A894", Offset = "0x26A894", VA = "0x26A894")]
	public void Speed(float speed)
	{
	}
}
namespace Game
{
	[Token(Token = "0x200004F")]
	public class FixSubtitleTargetObj : SingletonMonoBehaviour<FixSubtitleTargetObj>
	{
		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private GameObject m_my;

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x37AA84", Offset = "0x37AA84", VA = "0x37AA84")]
		public FixSubtitleTargetObj()
		{
		}

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x37AB14", Offset = "0x37AB14", VA = "0x37AB14")]
		public GameObject GetGameObj()
		{
			return null;
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x37AB1C", Offset = "0x37AB1C", VA = "0x37AB1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x37AB38", Offset = "0x37AB38", VA = "0x37AB38")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000050")]
	public class GroundCollision : SingletonMonoBehaviour<GroundCollision>
	{
		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject m_coll1;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject m_coll2;

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x37CDDC", Offset = "0x37CDDC", VA = "0x37CDDC")]
		public GroundCollision()
		{
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x37CE6C", Offset = "0x37CE6C", VA = "0x37CE6C")]
		private void Start()
		{
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x37CF48", Offset = "0x37CF48", VA = "0x37CF48")]
		private void Update()
		{
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x37CF4C", Offset = "0x37CF4C", VA = "0x37CF4C")]
		public void On()
		{
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x37CFA4", Offset = "0x37CFA4", VA = "0x37CFA4")]
		public void Off()
		{
		}
	}
}
[Token(Token = "0x2000051")]
public class BaseController
{
	[Token(Token = "0x2000052")]
	public enum INPUT_TYPE
	{
		[Token(Token = "0x40001F1")]
		LEFT,
		[Token(Token = "0x40001F2")]
		RIGHT,
		[Token(Token = "0x40001F3")]
		UP,
		[Token(Token = "0x40001F4")]
		DOWN,
		[Token(Token = "0x40001F5")]
		DISISION,
		[Token(Token = "0x40001F6")]
		CANSEL,
		[Token(Token = "0x40001F7")]
		OCULUSGO_CANSEL,
		[Token(Token = "0x40001F8")]
		CHATCH,
		[Token(Token = "0x40001F9")]
		RETRACKING,
		[Token(Token = "0x40001FA")]
		INPUT_MAX
	}

	[Token(Token = "0x2000053")]
	public struct ButtonData
	{
		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float hitTime;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float prevTime;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float prevFrame;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frame;
	}

	[Token(Token = "0x2000054")]
	public enum HAND_SIDE_TYPE
	{
		[Token(Token = "0x4000201")]
		NONE,
		[Token(Token = "0x4000202")]
		LEFT,
		[Token(Token = "0x4000203")]
		RIGHT
	}

	[Token(Token = "0x40001E8")]
	private const int INPUT_MAX = 9;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected ButtonData[] m_buttons;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected float m_trackPadAbjust;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected float m_fHorizontal_L;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected float m_fHorizontal_R;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float m_fVertical_L;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected float m_fVertical_R;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected HAND_SIDE_TYPE m_eHandSide;

	[Token(Token = "0x17000045")]
	public virtual bool IsReverseEnterButton
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x268B88", Offset = "0x268B88", VA = "0x268B88", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x268AE0", Offset = "0x268AE0", VA = "0x268AE0")]
	public BaseController()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x268B60", Offset = "0x268B60", VA = "0x268B60")]
	public float GetTrackPadAbjust()
	{
		return default(float);
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x268B68", Offset = "0x268B68", VA = "0x268B68")]
	public float GetHorizontalL()
	{
		return default(float);
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x268B70", Offset = "0x268B70", VA = "0x268B70")]
	public float GetHorizontalR()
	{
		return default(float);
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x268B78", Offset = "0x268B78", VA = "0x268B78")]
	public float GetVerticalL()
	{
		return default(float);
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x268B80", Offset = "0x268B80", VA = "0x268B80")]
	public float GetVerticalR()
	{
		return default(float);
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x268B90", Offset = "0x268B90", VA = "0x268B90")]
	public HAND_SIDE_TYPE GetHandSide()
	{
		return default(HAND_SIDE_TYPE);
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x268B98", Offset = "0x268B98", VA = "0x268B98")]
	public void SetHandSide(HAND_SIDE_TYPE handSide)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x268BA0", Offset = "0x268BA0", VA = "0x268BA0", Slot = "5")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x268CE8", Offset = "0x268CE8", VA = "0x268CE8", Slot = "6")]
	public virtual void OnUpdate()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x268CEC", Offset = "0x268CEC", VA = "0x268CEC", Slot = "7")]
	public virtual void OnFixedUpdate()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x268CF0", Offset = "0x268CF0", VA = "0x268CF0")]
	public void CheckFinished()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x268E68", Offset = "0x268E68", VA = "0x268E68")]
	public float PushTime(INPUT_TYPE inputType)
	{
		return default(float);
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x268EB4", Offset = "0x268EB4", VA = "0x268EB4")]
	public bool Trigger(INPUT_TYPE inputType, float time = 1E-05f)
	{
		return default(bool);
	}
}
namespace Game
{
	[Token(Token = "0x2000055")]
	public class CharaLightController : MonoBehaviour
	{
		[Token(Token = "0x2000056")]
		public enum LIGHT_TYPE
		{
			[Token(Token = "0x4000209")]
			Holo,
			[Token(Token = "0x400020A")]
			Lawrence
		}

		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Light m_light;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private LIGHT_TYPE m_lightType;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Transform m_transform;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 m_debugAddRotation;

		[Token(Token = "0x17000046")]
		public LIGHT_TYPE LightType
		{
			[Token(Token = "0x60001F1")]
			[Address(RVA = "0x28F854", Offset = "0x28F854", VA = "0x28F854")]
			get
			{
				return default(LIGHT_TYPE);
			}
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x28F7F0", Offset = "0x28F7F0", VA = "0x28F7F0")]
		public CharaLightController()
		{
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x28F85C", Offset = "0x28F85C", VA = "0x28F85C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x28F8C4", Offset = "0x28F8C4", VA = "0x28F8C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x28FA80", Offset = "0x28FA80", VA = "0x28FA80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x28FC34", Offset = "0x28FC34", VA = "0x28FC34")]
		public void OnUpdate(Transform target)
		{
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x28FF3C", Offset = "0x28FF3C", VA = "0x28FF3C")]
		public void SetLightColor(Color color)
		{
		}

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x28FF94", Offset = "0x28FF94", VA = "0x28FF94")]
		public void SetIntensity(float value)
		{
		}
	}
	[Token(Token = "0x2000057")]
	public class ControllerManager : SingletonMonoBehaviour<ControllerManager>
	{
		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool m_isInitFlag;

		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BaseController m_controller;

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x2934DC", Offset = "0x2934DC", VA = "0x2934DC")]
		public ControllerManager()
		{
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x28A1C8", Offset = "0x28A1C8", VA = "0x28A1C8")]
		public BaseController GetController()
		{
			return null;
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x26DFEC", Offset = "0x26DFEC", VA = "0x26DFEC")]
		public void Init()
		{
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x2939BC", Offset = "0x2939BC", VA = "0x2939BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x293A10", Offset = "0x293A10", VA = "0x293A10")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x29356C", Offset = "0x29356C", VA = "0x29356C")]
		public void SettingContoroller()
		{
		}
	}
	[Token(Token = "0x2000058")]
	public class DebugInputUI : MonoBehaviour
	{
		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TextMeshPro m_disision;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshPro m_cancel;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextMeshPro m_left;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro m_right;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TextMeshPro m_up;

		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro m_down;

		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextMeshPro m_text;

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro m_horizontalL;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public TextMeshPro m_horizontalR;

		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro m_verticalL;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public TextMeshPro m_verticalR;

		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x370C88", Offset = "0x370C88", VA = "0x370C88")]
		public DebugInputUI()
		{
		}

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x370C90", Offset = "0x370C90", VA = "0x370C90")]
		private void Start()
		{
		}

		[Token(Token = "0x6000200")]
		[Address(RVA = "0x370C94", Offset = "0x370C94", VA = "0x370C94")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000059")]
	public class HTCViveController : BaseController
	{
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x37CFFC", Offset = "0x37CFFC", VA = "0x37CFFC")]
		public HTCViveController()
		{
		}

		[Token(Token = "0x6000202")]
		[Address(RVA = "0x37D004", Offset = "0x37D004", VA = "0x37D004", Slot = "5")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000203")]
		[Address(RVA = "0x37D028", Offset = "0x37D028", VA = "0x37D028", Slot = "6")]
		public override void OnUpdate()
		{
		}
	}
	[Token(Token = "0x200005A")]
	public class HureaiCharaLightManager : SingletonMonoBehaviour<HureaiCharaLightManager>
	{
		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private SimpleAnimation m_simpleAnimation;

		[Token(Token = "0x6000204")]
		[Address(RVA = "0x239308", Offset = "0x239308", VA = "0x239308")]
		public HureaiCharaLightManager()
		{
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0x239398", Offset = "0x239398", VA = "0x239398")]
		public SimpleAnimation GetSimpleAnimation()
		{
			return null;
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0x2393A0", Offset = "0x2393A0", VA = "0x2393A0")]
		public void SetMotion(float motionBlendRate, string stateName, bool notBlend = false)
		{
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0x2393F4", Offset = "0x2393F4", VA = "0x2393F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000208")]
		[Address(RVA = "0x239484", Offset = "0x239484", VA = "0x239484")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200005B")]
	public class keyboard : BaseController
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x1D3AC4", Offset = "0x1D3AC4", VA = "0x1D3AC4")]
		public keyboard()
		{
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0x1D3ACC", Offset = "0x1D3ACC", VA = "0x1D3ACC", Slot = "6")]
		public override void OnUpdate()
		{
		}
	}
	[Token(Token = "0x200005C")]
	public class OculusGoController : BaseController
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x24D2E4", Offset = "0x24D2E4", VA = "0x24D2E4")]
		public OculusGoController()
		{
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0x24D2EC", Offset = "0x24D2EC", VA = "0x24D2EC", Slot = "5")]
		public override void Init()
		{
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0x24D310", Offset = "0x24D310", VA = "0x24D310", Slot = "6")]
		public override void OnUpdate()
		{
		}
	}
	[Token(Token = "0x200005D")]
	public class OculusQuestController : BaseController
	{
		[Token(Token = "0x4000219")]
		private const float m_PadAbjust = 0.7f;

		[Token(Token = "0x600020E")]
		[Address(RVA = "0x24E114", Offset = "0x24E114", VA = "0x24E114")]
		public OculusQuestController()
		{
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0x24E11C", Offset = "0x24E11C", VA = "0x24E11C", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000210")]
		[Address(RVA = "0x24F27C", Offset = "0x24F27C", VA = "0x24F27C", Slot = "7")]
		public override void OnFixedUpdate()
		{
		}
	}
	[Token(Token = "0x200005E")]
	public class OculusRiftController : BaseController
	{
		[Token(Token = "0x400021A")]
		private const float m_PadAbjust = 0.35f;

		[Token(Token = "0x6000211")]
		[Address(RVA = "0x24F2FC", Offset = "0x24F2FC", VA = "0x24F2FC")]
		public OculusRiftController()
		{
		}

		[Token(Token = "0x6000212")]
		[Address(RVA = "0x24F304", Offset = "0x24F304", VA = "0x24F304", Slot = "6")]
		public override void OnUpdate()
		{
		}
	}
	[Token(Token = "0x200005F")]
	public class PCController : BaseController
	{
		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_pastCameraPos;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_isInverse;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_cameraAngle;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_mouseRotateSpeed;

		[Token(Token = "0x17000047")]
		public Vector3 CameraAngle
		{
			[Token(Token = "0x6000214")]
			[Address(RVA = "0x254974", Offset = "0x254974", VA = "0x254974")]
			set
			{
			}
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0x254960", Offset = "0x254960", VA = "0x254960")]
		public PCController()
		{
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x254980", Offset = "0x254980", VA = "0x254980", Slot = "5")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0x254988", Offset = "0x254988", VA = "0x254988", Slot = "6")]
		public override void OnUpdate()
		{
		}
	}
	[Token(Token = "0x2000060")]
	public class PS4Controller : BaseController
	{
		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_pastCameraPos;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_isInverse;

		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_cameraAngle;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_mouseRotateSpeed;

		[Token(Token = "0x17000048")]
		public Vector3 CameraAngle
		{
			[Token(Token = "0x6000218")]
			[Address(RVA = "0x25570C", Offset = "0x25570C", VA = "0x25570C")]
			set
			{
			}
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x2556F8", Offset = "0x2556F8", VA = "0x2556F8")]
		public PS4Controller()
		{
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x255718", Offset = "0x255718", VA = "0x255718", Slot = "5")]
		public override void Init()
		{
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0x255720", Offset = "0x255720", VA = "0x255720", Slot = "6")]
		public override void OnUpdate()
		{
		}
	}
	[Token(Token = "0x2000061")]
	public class PSVRController : BaseController
	{
		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_isInverse;

		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_cameraAngle;

		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_isReverseEnterButton;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_decideButton;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private string m_cancelButton;

		[Token(Token = "0x17000049")]
		public Vector3 CameraAngle
		{
			[Token(Token = "0x600021C")]
			[Address(RVA = "0x256498", Offset = "0x256498", VA = "0x256498")]
			set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public override bool IsReverseEnterButton
		{
			[Token(Token = "0x600021D")]
			[Address(RVA = "0x2564A4", Offset = "0x2564A4", VA = "0x2564A4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x256490", Offset = "0x256490", VA = "0x256490")]
		public PSVRController()
		{
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0x2564AC", Offset = "0x2564AC", VA = "0x2564AC", Slot = "5")]
		public override void Init()
		{
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0x25653C", Offset = "0x25653C", VA = "0x25653C", Slot = "6")]
		public override void OnUpdate()
		{
		}
	}
}
[Token(Token = "0x2000062")]
public class CFCredit : MonoBehaviour
{
	[Token(Token = "0x6000220")]
	[Address(RVA = "0x26B0B8", Offset = "0x26B0B8", VA = "0x26B0B8")]
	public CFCredit()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x26B0C0", Offset = "0x26B0C0", VA = "0x26B0C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x26B0C4", Offset = "0x26B0C4", VA = "0x26B0C4")]
	private void Update()
	{
	}
}
[Serializable]
[Token(Token = "0x2000063")]
public class XMLCreditCFData
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	[Multiline]
	public string m_TypeID;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	[Multiline]
	public string m_RowID;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	[Multiline]
	public string m_Space;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	[Multiline]
	public string m_NameSpace;

	[Token(Token = "0x400022C")]
	public const int NAMEYOKO_MAX = 26;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Multiline]
	public string[] m_name;

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xA800B4", Offset = "0xA800B4", VA = "0xA800B4")]
	public XMLCreditCFData()
	{
	}
}
[Token(Token = "0x2000064")]
public class CFCreditData : ScriptableObject
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<XMLCreditCFData> m_texts;

	[Token(Token = "0x1700004B")]
	public List<XMLCreditCFData> texts
	{
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x26B0D0", Offset = "0x26B0D0", VA = "0x26B0D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x26B0D8", Offset = "0x26B0D8", VA = "0x26B0D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x26B0C8", Offset = "0x26B0C8", VA = "0x26B0C8")]
	public CFCreditData()
	{
	}
}
namespace Game
{
	[Token(Token = "0x2000065")]
	public class Credit : MonoBehaviour
	{
		[Token(Token = "0x2000066")]
		public enum eMojiType
		{
			[Token(Token = "0x400023F")]
			RIGHT_TEXT,
			[Token(Token = "0x4000240")]
			LEFT_TEXT,
			[Token(Token = "0x4000241")]
			CENTER_TEXT,
			[Token(Token = "0x4000242")]
			PICTURE,
			[Token(Token = "0x4000243")]
			CF_TEXT
		}

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private eMojiType m_mojiType;

		[Token(Token = "0x4000230")]
		private const float DEFAULT_TIME = 3f;

		[Token(Token = "0x4000231")]
		private const float MAX_ALPHA_RATE = 1f;

		[Token(Token = "0x4000232")]
		private const float GOAL_Y = 4.5f;

		[Token(Token = "0x4000233")]
		private const float START_Y = -2f;

		[Token(Token = "0x4000234")]
		private const float ALPHA_MOVE_LENGTH = 1f;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_activeFlag;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_AlphaRate;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro m_nameText;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private SpriteRenderer m_logoSprite;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_sNameJP;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private string m_sNameEN;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_sNameTC;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private string m_sNameSC;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_transform;

		[Token(Token = "0x6000227")]
		[Address(RVA = "0x293A44", Offset = "0x293A44", VA = "0x293A44")]
		public Credit()
		{
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0x293B20", Offset = "0x293B20", VA = "0x293B20")]
		public TextMeshPro GetNameText()
		{
			return null;
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0x293B28", Offset = "0x293B28", VA = "0x293B28")]
		public SpriteRenderer GetLogoSprite()
		{
			return null;
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0x293B30", Offset = "0x293B30", VA = "0x293B30")]
		public void SetNameLanguage()
		{
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0x293D04", Offset = "0x293D04", VA = "0x293D04")]
		public void Init(eMojiType mojiType, float row, string nameJP, string nameEN, string nameTC, string nameSC, bool overflow = false)
		{
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0x294108", Offset = "0x294108", VA = "0x294108")]
		public void OnInit()
		{
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0x294124", Offset = "0x294124", VA = "0x294124")]
		public void SelfUpdate()
		{
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0x2943C4", Offset = "0x2943C4", VA = "0x2943C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0x2943FC", Offset = "0x2943FC", VA = "0x2943FC")]
		private void OnEnable()
		{
		}
	}
}
[Token(Token = "0x2000067")]
public class CreditData : ScriptableObject
{
	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	[Multiline]
	private string[] m_type;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	[Multiline]
	private string[] m_value;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	[Multiline]
	private string[] m_jobJP;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Multiline]
	private string[] m_jobEN;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[Multiline]
	private string[] m_jobTC;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Multiline]
	private string[] m_jobSC;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[Multiline]
	private string[] m_nameJP;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Multiline]
	private string[] m_nameEN;

	[Token(Token = "0x1700004C")]
	public string[] type
	{
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x27174C", Offset = "0x27174C", VA = "0x27174C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x271754", Offset = "0x271754", VA = "0x271754")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public string[] value
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x27175C", Offset = "0x27175C", VA = "0x27175C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x271764", Offset = "0x271764", VA = "0x271764")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public string[] jobJP
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x27176C", Offset = "0x27176C", VA = "0x27176C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x271774", Offset = "0x271774", VA = "0x271774")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public string[] jobEN
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x27177C", Offset = "0x27177C", VA = "0x27177C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x271784", Offset = "0x271784", VA = "0x271784")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public string[] jobTC
	{
		[Token(Token = "0x6000239")]
		[Address(RVA = "0x27178C", Offset = "0x27178C", VA = "0x27178C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023A")]
		[Address(RVA = "0x271794", Offset = "0x271794", VA = "0x271794")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public string[] jobSC
	{
		[Token(Token = "0x600023B")]
		[Address(RVA = "0x27179C", Offset = "0x27179C", VA = "0x27179C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x2717A4", Offset = "0x2717A4", VA = "0x2717A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public string[] nameJP
	{
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x2717AC", Offset = "0x2717AC", VA = "0x2717AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x2717B4", Offset = "0x2717B4", VA = "0x2717B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public string[] nameEN
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x2717BC", Offset = "0x2717BC", VA = "0x2717BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x2717C4", Offset = "0x2717C4", VA = "0x2717C4")]
		set
		{
		}
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x271744", Offset = "0x271744", VA = "0x271744")]
	public CreditData()
	{
	}
}
namespace Game
{
	[Token(Token = "0x2000068")]
	public class CreditFinalLogo : SingletonMonoBehaviour<CreditFinalLogo>
	{
		[Token(Token = "0x2000069")]
		public enum eState
		{
			[Token(Token = "0x400025A")]
			DEFAULT,
			[Token(Token = "0x400025B")]
			STOP,
			[Token(Token = "0x400025C")]
			VANISH,
			[Token(Token = "0x400025D")]
			END
		}

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private SpriteRenderer m_logoSprite;

		[Token(Token = "0x400024D")]
		private const float m_fadeTime = 5f;

		[Token(Token = "0x400024E")]
		private const float m_StopTime = 5f;

		[Token(Token = "0x400024F")]
		private const float m_StopY = 1.25f;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private eState m_state;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_count;

		[Token(Token = "0x4000252")]
		private const float m_abjustYPos = 3f;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_alphaRate;

		[Token(Token = "0x4000254")]
		private const float DEFAULT_TIME = 3f;

		[Token(Token = "0x4000255")]
		private const float MAX_ALPHA_RATE = 1f;

		[Token(Token = "0x4000256")]
		private const float GOAL_Y = 6f;

		[Token(Token = "0x4000257")]
		private const float START_Y = -1f;

		[Token(Token = "0x4000258")]
		private const float ALPHA_MOVE_LENGTH = 1f;

		[Token(Token = "0x6000241")]
		[Address(RVA = "0x2945C0", Offset = "0x2945C0", VA = "0x2945C0")]
		public CreditFinalLogo()
		{
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0x294650", Offset = "0x294650", VA = "0x294650")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0x294858", Offset = "0x294858", VA = "0x294858")]
		private void Update()
		{
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0x29485C", Offset = "0x29485C", VA = "0x29485C")]
		public void Init()
		{
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0x2949B4", Offset = "0x2949B4", VA = "0x2949B4")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000246")]
		[Address(RVA = "0x294A04", Offset = "0x294A04", VA = "0x294A04")]
		public void Animation(Vector3 pos, float offsetY = 0f)
		{
		}
	}
	[Token(Token = "0x200006A")]
	public class CreditImage : MonoBehaviour
	{
		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly string[] SPRITE_NAME_ARRAY;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private SpriteRenderer[] m_spriteRendererArray;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float m_totalTime;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeOfOne;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private SpriteRenderer m_spriteRenderer;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color m_color;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isEnable;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_isEnd;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_time;

		[Token(Token = "0x4000267")]
		private const float POP_Y = 1.5f;

		[Token(Token = "0x4000268")]
		private const float FADE_TIME = 2f;

		[Token(Token = "0x17000054")]
		public float TotalTime
		{
			[Token(Token = "0x6000248")]
			[Address(RVA = "0x295064", Offset = "0x295064", VA = "0x295064")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000249")]
			[Address(RVA = "0x29506C", Offset = "0x29506C", VA = "0x29506C")]
			set
			{
			}
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x294E2C", Offset = "0x294E2C", VA = "0x294E2C")]
		public CreditImage()
		{
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0x295074", Offset = "0x295074", VA = "0x295074")]
		public void Init()
		{
		}

		[Token(Token = "0x600024B")]
		[Address(RVA = "0x2953C0", Offset = "0x2953C0", VA = "0x2953C0")]
		public void Release()
		{
		}

		[Token(Token = "0x600024C")]
		[Address(RVA = "0x2955D4", Offset = "0x2955D4", VA = "0x2955D4")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x600024D")]
		[Address(RVA = "0x2959F4", Offset = "0x2959F4", VA = "0x2959F4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600024E")]
		[Address(RVA = "0x29595C", Offset = "0x29595C", VA = "0x29595C")]
		private void OnEnd()
		{
		}
	}
	[Token(Token = "0x200006B")]
	public class CreditManager : SingletonMonoBehaviour<CreditManager>
	{
		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_creditSpeed;

		[Token(Token = "0x400026A")]
		private const float m_abjustScrollLength = 10f;

		[Token(Token = "0x400026B")]
		private const float m_autoFontSize = 1.1f;

		[Token(Token = "0x400026C")]
		private const float m_waitMaxTime = 3f;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CFCreditData m_CFCreditData;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 m_creditInitPos;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_loadFlag;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool m_playFlag;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_creditRowSize;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_scrollRowPos;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_currentWaitTime;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CreditParent m_creditParent;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private GameObject m_groupObject;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SAWSaveData.eLanguage m_eSelectLanguage;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_creditEndFlag;

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x29651C", Offset = "0x29651C", VA = "0x29651C")]
		public CreditManager()
		{
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x2965B8", Offset = "0x2965B8", VA = "0x2965B8")]
		public bool GetCreditEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0x2965C0", Offset = "0x2965C0", VA = "0x2965C0")]
		public void SetCreditEnd(bool param)
		{
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0x2965C8", Offset = "0x2965C8", VA = "0x2965C8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0x2965E0", Offset = "0x2965E0", VA = "0x2965E0")]
		public void Load()
		{
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0x296988", Offset = "0x296988", VA = "0x296988")]
		private void CheackLanguage()
		{
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0x29610C", Offset = "0x29610C", VA = "0x29610C")]
		public void Play()
		{
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0x296B54", Offset = "0x296B54", VA = "0x296B54")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000257")]
		[Address(RVA = "0x296B68", Offset = "0x296B68", VA = "0x296B68")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0x296B7C", Offset = "0x296B7C", VA = "0x296B7C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000259")]
		[Address(RVA = "0x296C8C", Offset = "0x296C8C", VA = "0x296C8C")]
		private void Update()
		{
		}
	}
}
[Token(Token = "0x200006C")]
public class CreditParent : MonoBehaviour
{
	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float m_totalHeight;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_speed;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Credit[] m_creditArray;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CreditImage m_image;

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x2717CC", Offset = "0x2717CC", VA = "0x2717CC")]
	public CreditParent()
	{
	}
}
namespace Game
{
	[Token(Token = "0x200006D")]
	public class CreditSkip : MonoBehaviour
	{
		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private HureaiKeepPushEffect m_hureaiKeepPushEffect;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Animator m_info;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_isActive;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_cameraRange;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ADEF8", Offset = "0x1ADEF8")]
		private float m_cameraVecSpeed;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_cameraVec;

		[Token(Token = "0x600025B")]
		[Address(RVA = "0x36E380", Offset = "0x36E380", VA = "0x36E380")]
		public CreditSkip()
		{
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0x36E3A0", Offset = "0x36E3A0", VA = "0x36E3A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0x36E4C0", Offset = "0x36E4C0", VA = "0x36E4C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0x36ED5C", Offset = "0x36ED5C", VA = "0x36ED5C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0x36E99C", Offset = "0x36E99C", VA = "0x36E99C")]
		public void Ctrl()
		{
		}

		[Token(Token = "0x6000260")]
		[Address(RVA = "0x36E8EC", Offset = "0x36E8EC", VA = "0x36E8EC")]
		private void Close()
		{
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0x36EBB0", Offset = "0x36EBB0", VA = "0x36EBB0")]
		public bool IsDicision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x36ED60", Offset = "0x36ED60", VA = "0x36ED60")]
		protected void Chase()
		{
		}
	}
}
[Token(Token = "0x200006E")]
public class DebugCharaColorComponent : MonoBehaviour
{
	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LightmapManager.LIGHTMAP_TYPE m_lightType;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CharaLightManager m_charaLightManager;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform m_shadowProj;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform m_light;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Transform m_holoTarget;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer[] m_mrArray;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Dictionary<Material, Color[]> m_ShaderColorList;

	[Token(Token = "0x4000289")]
	private const string SHADER_ID_1ST_SHADECOLOR = "_1st_ShadeColor";

	[Token(Token = "0x400028A")]
	private const string SHADER_ID_2ND_SHADECOLOR = "_2nd_ShadeColor";

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x271AC0", Offset = "0x271AC0", VA = "0x271AC0")]
	public DebugCharaColorComponent()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x271B4C", Offset = "0x271B4C", VA = "0x271B4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x272F2C", Offset = "0x272F2C", VA = "0x272F2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x27261C", Offset = "0x27261C", VA = "0x27261C")]
	public bool SetMaterialColor(Color shadeColor1st, Color shadeColor2nd)
	{
		return default(bool);
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x272F30", Offset = "0x272F30", VA = "0x272F30")]
	private Color CalcMultiple(Color bg, Color add)
	{
		return default(Color);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x272FB8", Offset = "0x272FB8", VA = "0x272FB8")]
	private Color CalcSoftLight(Color bg, Color add)
	{
		return default(Color);
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x273040", Offset = "0x273040", VA = "0x273040")]
	private float CalcSoftLight(float bg, float add)
	{
		return default(float);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x273114", Offset = "0x273114", VA = "0x273114")]
	public void SetLightColor()
	{
	}
}
[Token(Token = "0x200006F")]
public class DebugColl : MonoBehaviour
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject ball;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 startPos;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 endPos;

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x273118", Offset = "0x273118", VA = "0x273118")]
	public DebugColl()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x2731AC", Offset = "0x2731AC", VA = "0x2731AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x2731C8", Offset = "0x2731C8", VA = "0x2731C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x273988", Offset = "0x273988", VA = "0x273988")]
	private void Ray()
	{
	}
}
namespace Game
{
	[Token(Token = "0x2000070")]
	public class DebugSoundDraw : MonoBehaviour
	{
		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private TextMesh text;

		[Token(Token = "0x600026F")]
		[Address(RVA = "0x371580", Offset = "0x371580", VA = "0x371580")]
		public DebugSoundDraw()
		{
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0x371588", Offset = "0x371588", VA = "0x371588")]
		private void Start()
		{
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0x37158C", Offset = "0x37158C", VA = "0x37158C")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000071")]
	public class DebugTimeLineCtrl : MonoBehaviour
	{
		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1ADF40", Offset = "0x1ADF40")]
		public float speed;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Slider slider;

		[Token(Token = "0x6000272")]
		[Address(RVA = "0x371684", Offset = "0x371684", VA = "0x371684")]
		public DebugTimeLineCtrl()
		{
		}

		[Token(Token = "0x6000273")]
		[Address(RVA = "0x371698", Offset = "0x371698", VA = "0x371698")]
		private void Start()
		{
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0x37169C", Offset = "0x37169C", VA = "0x37169C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0x371874", Offset = "0x371874", VA = "0x371874")]
		private void Contoller()
		{
		}
	}
}
[Token(Token = "0x2000072")]
public class DebugTimer
{
	[Token(Token = "0x6000276")]
	[Address(RVA = "0x273B40", Offset = "0x273B40", VA = "0x273B40")]
	public DebugTimer()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x273B48", Offset = "0x273B48", VA = "0x273B48")]
	public static void Start(string log)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x273B4C", Offset = "0x273B4C", VA = "0x273B4C")]
	public static void Stop()
	{
	}
}
[Token(Token = "0x2000073")]
public class TestCtrl : MonoBehaviour
{
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float speed;

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xA7C57C", Offset = "0xA7C57C", VA = "0xA7C57C")]
	public TestCtrl()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xA7C590", Offset = "0xA7C590", VA = "0xA7C590")]
	private void Start()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xA7C594", Offset = "0xA7C594", VA = "0xA7C594")]
	private void Update()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xA7CBD8", Offset = "0xA7CBD8", VA = "0xA7CBD8")]
	private void Move()
	{
	}
}
[Token(Token = "0x2000074")]
public class TestRotate : MonoBehaviour
{
	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject child;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 initChildPos;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 initChildAngle;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 initVec;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float initDist;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 invVec;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xA7CDE0", Offset = "0xA7CDE0", VA = "0xA7CDE0")]
	public TestRotate()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xA7CDE8", Offset = "0xA7CDE8", VA = "0xA7CDE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xA7D1DC", Offset = "0xA7D1DC", VA = "0xA7D1DC")]
	private void Update()
	{
	}
}
namespace Game
{
	[Token(Token = "0x2000075")]
	public class EasterEggComponent : MonoBehaviour
	{
		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private int m_id;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Animation m_animation;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Collider m_colider;

		[Token(Token = "0x6000280")]
		[Address(RVA = "0x375560", Offset = "0x375560", VA = "0x375560")]
		public EasterEggComponent()
		{
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x375568", Offset = "0x375568", VA = "0x375568")]
		private void Start()
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x375684", Offset = "0x375684", VA = "0x375684")]
		public void Found()
		{
		}
	}
}
[Token(Token = "0x2000076")]
public class EffectComponent : MonoBehaviour
{
	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool m_isPause;

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x2840A0", Offset = "0x2840A0", VA = "0x2840A0")]
	public EffectComponent()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x2840A8", Offset = "0x2840A8", VA = "0x2840A8", Slot = "4")]
	public virtual void Load()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x2840AC", Offset = "0x2840AC", VA = "0x2840AC", Slot = "5")]
	public virtual void Play()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x28413C", Offset = "0x28413C", VA = "0x28413C", Slot = "6")]
	public virtual void Play([Optional] Transform transform)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x2841CC", Offset = "0x2841CC", VA = "0x2841CC", Slot = "7")]
	public virtual void Pause()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x2841D0", Offset = "0x2841D0", VA = "0x2841D0", Slot = "8")]
	public virtual void Resume()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x284260", Offset = "0x284260", VA = "0x284260", Slot = "9")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x284264", Offset = "0x284264", VA = "0x284264")]
	private void Start()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x284268", Offset = "0x284268", VA = "0x284268")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000077")]
public class EffectGroup : EffectComponent
{
	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<ParticleSystem> m_particleEffects;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool m_isUse;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform m_refTransform;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x28426C", Offset = "0x28426C", VA = "0x28426C")]
	public EffectGroup()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x284274", Offset = "0x284274", VA = "0x284274")]
	public bool GetUse()
	{
		return default(bool);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x28427C", Offset = "0x28427C", VA = "0x28427C")]
	public void SetUse(bool param)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x284284", Offset = "0x284284", VA = "0x284284", Slot = "4")]
	public override void Load()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x284470", Offset = "0x284470", VA = "0x284470", Slot = "6")]
	public override void Play([Optional] Transform refTransform)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x284720", Offset = "0x284720", VA = "0x284720", Slot = "7")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x2848BC", Offset = "0x2848BC", VA = "0x2848BC", Slot = "8")]
	public override void Resume()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x284A5C", Offset = "0x284A5C", VA = "0x284A5C", Slot = "9")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x284BF4", Offset = "0x284BF4", VA = "0x284BF4")]
	public void Delete()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x284DB0", Offset = "0x284DB0", VA = "0x284DB0")]
	public void SelfStart()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x284DB4", Offset = "0x284DB4", VA = "0x284DB4")]
	public void SelfUpdate()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x284F74", Offset = "0x284F74", VA = "0x284F74")]
	public void UpdateTransFormPostion()
	{
	}
}
namespace Game
{
	[Token(Token = "0x2000078")]
	public class EffectManager : SingletonMonoBehaviour<EffectManager>
	{
		[Token(Token = "0x2000079")]
		public struct EffectCacheData
		{
			[Token(Token = "0x40002A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string fileName;

			[Token(Token = "0x40002A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public EffectGroup effectGroup;
		}

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private GameObject m_CacheRoot;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<EffectCacheData> m_effectCacheDatas;

		[Token(Token = "0x6000298")]
		[Address(RVA = "0x3757B8", Offset = "0x3757B8", VA = "0x3757B8")]
		public EffectManager()
		{
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0x375848", Offset = "0x375848", VA = "0x375848")]
		private void Awake()
		{
		}

		[Token(Token = "0x600029A")]
		[Address(RVA = "0x37598C", Offset = "0x37598C", VA = "0x37598C")]
		public EffectGroup Load(string effectName)
		{
			return null;
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x375C24", Offset = "0x375C24", VA = "0x375C24")]
		public EffectGroup PlayAuto(string effectName, [Optional] Transform transForm)
		{
			return null;
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x375FC8", Offset = "0x375FC8", VA = "0x375FC8")]
		public void Stops(string effectName)
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0x3761AC", Offset = "0x3761AC", VA = "0x3761AC")]
		public void Pauses(string effectName)
		{
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0x376390", Offset = "0x376390", VA = "0x376390")]
		public void Resumes(string effectName)
		{
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x376574", Offset = "0x376574", VA = "0x376574")]
		public void AllStop()
		{
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x37666C", Offset = "0x37666C", VA = "0x37666C")]
		public void AllDelete()
		{
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x37675C", Offset = "0x37675C", VA = "0x37675C")]
		public void AllPauses()
		{
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x3768B0", Offset = "0x3768B0", VA = "0x3768B0")]
		public void AllResumes()
		{
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x376A04", Offset = "0x376A04", VA = "0x376A04")]
		private void Start()
		{
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x376A08", Offset = "0x376A08", VA = "0x376A08")]
		private void Update()
		{
		}
	}
}
[Token(Token = "0x200007A")]
public class RimController : MonoBehaviour
{
	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Material[] m_matArray;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_rimMin;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float m_rimMax;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_rimSpeedRate;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_moveTimer;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_isUsedFromInspector;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool m_isUsed;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_stopTimer;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int SHADER_ID_RIM_VALUE;

	[Token(Token = "0x40002AC")]
	private const string RIM_KEYWORD = "_USE_RIMLIGHT";

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private GameObject m_refObject;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string m_objectSearchPath;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool m_pause;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x2B7CB4", Offset = "0x2B7CB4", VA = "0x2B7CB4")]
	public RimController()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x2B7D40", Offset = "0x2B7D40", VA = "0x2B7D40")]
	public bool GetPause()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x2B7D48", Offset = "0x2B7D48", VA = "0x2B7D48")]
	public void Pause()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x2B7D54", Offset = "0x2B7D54", VA = "0x2B7D54")]
	public void Resume()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x2B7D60", Offset = "0x2B7D60", VA = "0x2B7D60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x2B8404", Offset = "0x2B8404", VA = "0x2B8404")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x2B8694", Offset = "0x2B8694", VA = "0x2B8694")]
	public void RimOn()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x2B87A0", Offset = "0x2B87A0", VA = "0x2B87A0")]
	public void RimOff()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x2B8884", Offset = "0x2B8884", VA = "0x2B8884")]
	public void RimOff(float stopTime)
	{
	}
}
[Token(Token = "0x200007B")]
public class UVEffect : EffectComponent
{
	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xA7DE58", Offset = "0xA7DE58", VA = "0xA7DE58")]
	public UVEffect()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xA7DE60", Offset = "0xA7DE60", VA = "0xA7DE60", Slot = "4")]
	public override void Load()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xA7DE64", Offset = "0xA7DE64", VA = "0xA7DE64", Slot = "5")]
	public override void Play()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xA7DE68", Offset = "0xA7DE68", VA = "0xA7DE68", Slot = "7")]
	public override void Pause()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xA7DE6C", Offset = "0xA7DE6C", VA = "0xA7DE6C", Slot = "8")]
	public override void Resume()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xA7DE70", Offset = "0xA7DE70", VA = "0xA7DE70", Slot = "9")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xA7DE74", Offset = "0xA7DE74", VA = "0xA7DE74")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xA7DE78", Offset = "0xA7DE78", VA = "0xA7DE78")]
	private void Update()
	{
	}
}
namespace Game
{
	[Token(Token = "0x200007C")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x200007D")]
		public enum eHandSide
		{
			[Token(Token = "0x40002E1")]
			NotSetting,
			[Token(Token = "0x40002E2")]
			Left,
			[Token(Token = "0x40002E3")]
			Right
		}

		[Token(Token = "0x200007E")]
		public enum eHandState
		{
			[Token(Token = "0x40002E5")]
			Idle,
			[Token(Token = "0x40002E6")]
			Hold
		}

		[Token(Token = "0x200007F")]
		public enum eBrushType
		{
			[Token(Token = "0x40002E8")]
			NotDone,
			[Token(Token = "0x40002E9")]
			GentlyBrush
		}

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float m_lateSpeed;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float m_JustSpeedNear;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float m_JustSpeedFar;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_overSpeed;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private SkinnedMeshRenderer m_handRenderer;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AE00C", Offset = "0x1AE00C")]
		private float m_handStretchRate;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AE024", Offset = "0x1AE024")]
		private float m_handStretchDown;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material m_materialEnable;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Material m_materialDontTouch;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public eHandSide m_handSide;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private eHandState m_eHandState;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Hand m_otherSideHand;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private XRNode m_XRTargetNode;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isActive;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_iCheckBrushFrame;

		[Token(Token = "0x40002BF")]
		private const int CHECK_BRUSH_INTERVAL_FRAME = 20;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] m_poslist;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_fBrushFuzzyRate;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_maxDistance;

		[Token(Token = "0x40002C3")]
		private const float BRUSH_JUGEMENT_TIME = 1.036f;

		[Token(Token = "0x40002C4")]
		private const float SUB_TIME_SPEED = 0.01f;

		[Token(Token = "0x40002C5")]
		private const float SUB_OUT_HAND_TIME_SPEED = 0.001f;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_headBrushTime;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_tailBrushTime;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_bodyBrushTime;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isHeadCanTouch;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isTailCanTouch;

		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool m_isBodyCanTouch;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool m_isHeadDontTouch;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_isTailDontTouch;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool m_isBodyDontTouch;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_hitpos;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int m_iDummyTailBrushSEFrame;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_iBrushSEInterval;

		[Token(Token = "0x40002D2")]
		private const float SQR_LOST_TRACKING_DIST = 0.0001f;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_CatchHandFirstPos;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_CatchSubtitleFirstPos;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 m_prevPos;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_interpolationRate;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_morphNo;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_morphRate;

		[Token(Token = "0x40002D9")]
		private const float m_morphAddSpeed = 250f;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_isHit;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool m_isAllDontTouch;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private eBrushType m_eBrushType;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float htcvive_forward;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float openvr_forward;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float htcvive_right;

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x37DD00", Offset = "0x37DD00", VA = "0x37DD00")]
		public Hand()
		{
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x37DE60", Offset = "0x37DE60", VA = "0x37DE60")]
		public SkinnedMeshRenderer GetSkinnedMeshRenderer()
		{
			return null;
		}

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x37DE68", Offset = "0x37DE68", VA = "0x37DE68")]
		public void SetHandActive(bool flag)
		{
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x37DE9C", Offset = "0x37DE9C", VA = "0x37DE9C")]
		public Vector3 GetHitPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x37DEB0", Offset = "0x37DEB0", VA = "0x37DEB0")]
		private void ResetCanTouch()
		{
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x37DEC4", Offset = "0x37DEC4", VA = "0x37DEC4")]
		private void ResetDontTouch()
		{
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x37DED4", Offset = "0x37DED4", VA = "0x37DED4")]
		public void DontTouchCheckUpdate(bool isHeadDontTouch, bool isTailDontTouch, bool isBodyDontTouch)
		{
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x37DEE4", Offset = "0x37DEE4", VA = "0x37DEE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x37E034", Offset = "0x37E034", VA = "0x37E034")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x37E174", Offset = "0x37E174", VA = "0x37E174")]
		public void TimeBrushReset()
		{
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x37E188", Offset = "0x37E188", VA = "0x37E188")]
		private void Start()
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x37E18C", Offset = "0x37E18C", VA = "0x37E18C")]
		public void Init()
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x37E420", Offset = "0x37E420", VA = "0x37E420")]
		private void Update()
		{
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x37E4D4", Offset = "0x37E4D4", VA = "0x37E4D4")]
		private void HandPosition()
		{
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x37FBC4", Offset = "0x37FBC4", VA = "0x37FBC4")]
		public void SetIsRender(bool flag)
		{
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x37FA38", Offset = "0x37FA38", VA = "0x37FA38")]
		public void StateUpdate()
		{
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x37FE18", Offset = "0x37FE18", VA = "0x37FE18")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x380330", Offset = "0x380330", VA = "0x380330")]
		public void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x380FA4", Offset = "0x380FA4", VA = "0x380FA4")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x37FE9C", Offset = "0x37FE9C", VA = "0x37FE9C")]
		private void HeadTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x380790", Offset = "0x380790", VA = "0x380790")]
		private void HeadTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x38105C", Offset = "0x38105C", VA = "0x38105C")]
		private void HeadTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x3801D0", Offset = "0x3801D0", VA = "0x3801D0")]
		private void BodyTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x380D70", Offset = "0x380D70", VA = "0x380D70")]
		private void BodyTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x381144", Offset = "0x381144", VA = "0x381144")]
		private void BodyTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x37FFFC", Offset = "0x37FFFC", VA = "0x37FFFC")]
		private void TailTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x380834", Offset = "0x380834", VA = "0x380834")]
		private void TailTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x3810D0", Offset = "0x3810D0", VA = "0x3810D0")]
		private void TailTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x3815C8", Offset = "0x3815C8", VA = "0x3815C8")]
		private void EarTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x380E14", Offset = "0x380E14", VA = "0x380E14")]
		private void EarTriggerStayL(Collider other)
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x380EDC", Offset = "0x380EDC", VA = "0x380EDC")]
		private void EarTriggerStayR(Collider other)
		{
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x3815CC", Offset = "0x3815CC", VA = "0x3815CC")]
		private void EarTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x3811B8", Offset = "0x3811B8", VA = "0x3811B8")]
		private bool CalcStay(Collider other, string tagName, ref float brushTime, eMessageType brush, eMessageType notbrush, float addBrushJugementTime = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x3813EC", Offset = "0x3813EC", VA = "0x3813EC")]
		private void CalcExit(Collider other, string tagName, ref float brushTime, eMessageType notbrush)
		{
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x37F91C", Offset = "0x37F91C", VA = "0x37F91C")]
		private void BrushCountDown()
		{
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x37F4E0", Offset = "0x37F4E0", VA = "0x37F4E0")]
		private void BrushUpdate()
		{
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x3815D0", Offset = "0x3815D0", VA = "0x3815D0")]
		public eBrushType BrushJudgment(float distance, ref float fuzzyValue)
		{
			return default(eBrushType);
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x3816A8", Offset = "0x3816A8", VA = "0x3816A8")]
		public eHandSide GetHandSide()
		{
			return default(eHandSide);
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x3816B0", Offset = "0x3816B0", VA = "0x3816B0")]
		public void SetHandSide(eHandSide param)
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x3816B8", Offset = "0x3816B8", VA = "0x3816B8")]
		public eHandState GetHandState()
		{
			return default(eHandState);
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x3816C0", Offset = "0x3816C0", VA = "0x3816C0")]
		public void SetHandState(eHandState param)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x3816C8", Offset = "0x3816C8", VA = "0x3816C8")]
		public Hand GetOtherSideHand()
		{
			return null;
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x3816D0", Offset = "0x3816D0", VA = "0x3816D0")]
		public void SetOtherSideHand(Hand param)
		{
		}
	}
	[Token(Token = "0x2000080")]
	public class HandManager : SingletonMonoBehaviour<HandManager>
	{
		[Token(Token = "0x40002EA")]
		private const float TEGA_TIKAITO_KESU_KYORI = 0.15f;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float stickyFingersAddZDist;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Hand m_leftHand;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Hand m_rightHand;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_isHeadDontTouch;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool m_isTailDontTouch;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool m_isBodyDontTouch;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool m_isHureai;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private BaseController.HAND_SIDE_TYPE m_eHandSide;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_subtitle;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_isHoldSubtitle;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_CatchHandFirstPos;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_CatchSubtitleFirstPos;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BaseController.HAND_SIDE_TYPE m_handSide;

		[Token(Token = "0x17000055")]
		public float StickyFingersAddZDist
		{
			[Token(Token = "0x60002E3")]
			[Address(RVA = "0x37FBBC", Offset = "0x37FBBC", VA = "0x37FBBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002E4")]
			[Address(RVA = "0x381778", Offset = "0x381778", VA = "0x381778")]
			set
			{
			}
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x3816DC", Offset = "0x3816DC", VA = "0x3816DC")]
		public HandManager()
		{
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x381780", Offset = "0x381780", VA = "0x381780")]
		private void ResetDontTouch()
		{
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x381790", Offset = "0x381790", VA = "0x381790")]
		public void SetDontTouchCheck(bool isHeadDontTouch, bool isTailDontTouch, bool isBodyDontTouch)
		{
		}

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x3817A0", Offset = "0x3817A0", VA = "0x3817A0")]
		public Vector3 GetLeftHandPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x381904", Offset = "0x381904", VA = "0x381904")]
		public Vector3 GetRightHandPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x381A68", Offset = "0x381A68", VA = "0x381A68")]
		public void Awake()
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x381A6C", Offset = "0x381A6C", VA = "0x381A6C")]
		public void Init()
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x38211C", Offset = "0x38211C", VA = "0x38211C")]
		private void Start()
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x382120", Offset = "0x382120", VA = "0x382120")]
		private void Update()
		{
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x382368", Offset = "0x382368", VA = "0x382368")]
		private void Cheak()
		{
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x382804", Offset = "0x382804", VA = "0x382804")]
		public void SetHandSide(BaseController.HAND_SIDE_TYPE type)
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x382958", Offset = "0x382958", VA = "0x382958")]
		public bool GetHureai()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x382960", Offset = "0x382960", VA = "0x382960")]
		public void SetHureai(bool param)
		{
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x381548", Offset = "0x381548", VA = "0x381548")]
		public Vector3 GetHitPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x382A98", Offset = "0x382A98", VA = "0x382A98")]
		public bool IsHoldSubtitle()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x382344", Offset = "0x382344", VA = "0x382344")]
		public void SubtitleCatch()
		{
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x383AD0", Offset = "0x383AD0", VA = "0x383AD0")]
		public BaseController.HAND_SIDE_TYPE GetSideType()
		{
			return default(BaseController.HAND_SIDE_TYPE);
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x382AA0", Offset = "0x382AA0", VA = "0x382AA0")]
		public void CatchSuctitle2()
		{
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x38367C", Offset = "0x38367C", VA = "0x38367C")]
		public void StateUpdate()
		{
		}

		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x383894", Offset = "0x383894", VA = "0x383894")]
		public void HoldSubtitleUpdate()
		{
		}

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x383AD8", Offset = "0x383AD8", VA = "0x383AD8")]
		public void TimeBrushReset()
		{
		}
	}
	[Token(Token = "0x2000081")]
	public class Holo : MessageComponent
	{
		[Token(Token = "0x2000082")]
		public enum eFavorType
		{
			[Token(Token = "0x4000360")]
			NORMAL,
			[Token(Token = "0x4000361")]
			LOVE
		}

		[Token(Token = "0x2000083")]
		public enum eLookAtType
		{
			[Token(Token = "0x4000363")]
			NOTHING,
			[Token(Token = "0x4000364")]
			DOOR,
			[Token(Token = "0x4000365")]
			DESK,
			[Token(Token = "0x4000366")]
			WATER_MILL,
			[Token(Token = "0x4000367")]
			HASHIGO,
			[Token(Token = "0x4000368")]
			WINDOW
		}

		[Token(Token = "0x2000084")]
		private enum IDLE_RANDOM_STATE
		{
			[Token(Token = "0x400036A")]
			LOOK_AROUND,
			[Token(Token = "0x400036B")]
			KASHIGERU,
			[Token(Token = "0x400036C")]
			AKUBI,
			[Token(Token = "0x400036D")]
			NOBI,
			[Token(Token = "0x400036E")]
			NOZOKIKOMU,
			[Token(Token = "0x400036F")]
			SIT_DOWN,
			[Token(Token = "0x4000370")]
			TAIL_IDLE,
			[Token(Token = "0x4000371")]
			MAX
		}

		[Token(Token = "0x2000085")]
		public class CMotionName
		{
			[Token(Token = "0x4000372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Intro;

			[Token(Token = "0x4000373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string Finish;

			[Token(Token = "0x4000374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Idle;

			[Token(Token = "0x4000375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public string LookAround;

			[Token(Token = "0x4000376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Nobi;

			[Token(Token = "0x4000377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public string Akubi;

			[Token(Token = "0x4000378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string Scary;

			[Token(Token = "0x4000379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public string LookIntoHead_Left;

			[Token(Token = "0x400037A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string LookIntoHead_Right;

			[Token(Token = "0x400037B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public string Toliedown;

			[Token(Token = "0x400037C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string TolidownIdle;

			[Token(Token = "0x400037D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public string StandUp;

			[Token(Token = "0x400037E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string JumpUp;

			[Token(Token = "0x400037F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public string AngryWithBodyTouch;

			[Token(Token = "0x4000380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string SosoWithBodyTouch;

			[Token(Token = "0x4000381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public string ShowTailIntro;

			[Token(Token = "0x4000382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string ShowTailLoop;

			[Token(Token = "0x4000383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public string ShowTailEnd;

			[Token(Token = "0x4000384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string TicklishWithTailTouch;

			[Token(Token = "0x4000385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public string PatienceWithTailTouch;

			[Token(Token = "0x4000386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string AngryWithTailTouch;

			[Token(Token = "0x4000387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public string AngryWithQuickTailTouch;

			[Token(Token = "0x4000388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string SosoWithTailTouch;

			[Token(Token = "0x4000389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public string TakeBread;

			[Token(Token = "0x400038A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string EatBread;

			[Token(Token = "0x400038B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public string ItMainBread;

			[Token(Token = "0x400038C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public string PresentBread;

			[Token(Token = "0x400038D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public string NotGiveBread;

			[Token(Token = "0x400038E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public string EatenForIdle;

			[Token(Token = "0x400038F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public string AshamedToIdle;

			[Token(Token = "0x4000390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public string WatchLeft;

			[Token(Token = "0x4000391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public string WatchLeftLoop;

			[Token(Token = "0x4000392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public string WatchLeftToFront;

			[Token(Token = "0x4000393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public string WatchRight;

			[Token(Token = "0x4000394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public string WatchRightLoop;

			[Token(Token = "0x4000395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public string WatchRightToFront;

			[Token(Token = "0x4000396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public string MyHeadTouching;

			[Token(Token = "0x4000397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public string MyHeadTouchingLoop;

			[Token(Token = "0x4000398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public string MyHeadTouchedFinish;

			[Token(Token = "0x4000399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public string MyHeadTouchedAngryFinish;

			[Token(Token = "0x400039A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public string SitToNext;

			[Token(Token = "0x400039B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public string PatTheHead;

			[Token(Token = "0x400039C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public string PatTheHeadFinish;

			[Token(Token = "0x400039D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			public string SitToStandUp;

			[Token(Token = "0x400039E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public string DeskWatch;

			[Token(Token = "0x400039F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public string DeskWatchLoop;

			[Token(Token = "0x40003A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public string DeskWatchToFront;

			[Token(Token = "0x40003A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			public string HashigoWatch;

			[Token(Token = "0x40003A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public string HashigoWatchLoop;

			[Token(Token = "0x40003A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			public string HashigoWatchToFront;

			[Token(Token = "0x40003A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public string DoorWatch;

			[Token(Token = "0x40003A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			public string DoorWatchLoop;

			[Token(Token = "0x40003A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public string DoorWatchToFront;

			[Token(Token = "0x40003A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			public string WaterMillWatch;

			[Token(Token = "0x40003A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public string WaterMillWatchLoop;

			[Token(Token = "0x40003A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			public string WaterMillWatchToFront;

			[Token(Token = "0x40003AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public string TailIdle;

			[Token(Token = "0x40003AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			public string TailIdleLoop;

			[Token(Token = "0x40003AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public string TailIdleToIdle;

			[Token(Token = "0x40003AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
			public string TailIdleSosoWithTailTouch;

			[Token(Token = "0x6000344")]
			[Address(RVA = "0x385B28", Offset = "0x385B28", VA = "0x385B28")]
			public CMotionName()
			{
			}
		}

		[Token(Token = "0x2000086")]
		private enum eRandomLookState
		{
			[Token(Token = "0x40003AF")]
			DEFAULT,
			[Token(Token = "0x40003B0")]
			RANDOM_LOCK,
			[Token(Token = "0x40003B1")]
			RETURN
		}

		[Token(Token = "0x40002F8")]
		private const float NORMAL_TOP = 70f;

		[Token(Token = "0x40002F9")]
		private const float LOVE_TOP = 100f;

		[Token(Token = "0x40002FA")]
		private const float SIT_TO_NEXT_FUZZYRATE = 0.99f;

		[Token(Token = "0x40002FB")]
		private const float EFFECT_START_FUZZYRATE = 0.61f;

		[Token(Token = "0x40002FC")]
		private const float HEAD_BRUSH_UP_FAVORATE = 1.5f;

		[Token(Token = "0x40002FD")]
		private const float TAIL_BRUSH_UP_FAVORATE = 1.5f;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private StateMachine<Holo> m_stateMachine;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool debugFlag;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private TextMesh m_debugText;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator m_animator;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private SimpleAnimation m_simpleAnimation;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_cacheSetMotionNameHash;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_motionBlendRate;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_initFlag;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AE0A0", Offset = "0x1AE0A0")]
		private float m_favorRate;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_saveNormalizedTime;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float MAX_RANDOM_STATE_TIME;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_fRandomStateTime;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MAX_TOLIDOWN_IDLE_TIME;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float MAX_SHOW_TAIL_TIME;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float SET_SHOW_TAIL_TIME;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MAX_TICKLISH_TAIL_TIME;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MAX_PATIENCE_TIME;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float MAX_HEAD_BRUSH_ANGRY_TIME;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float COUNT_DOWN_BRUSH_TIME;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float MAX_PLEASE_HEAD_BRUSH_TIME;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float SET_PLEASE_HEAD_BRUSH_TIME;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_MaxHeadBrushAddTime;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float m_fCountTime;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_iAngryTailCountTime;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int MAX_TAIL_BRUSH_ANGRY_COUNT;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool m_headBrushFlag;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float m_headBrushEndCount;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_headBrushTime;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float TALK_TIME;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float m_holoLookTime;

		[Token(Token = "0x400031C")]
		private const float MAX_VERY_LOOK_JUGUE_TIME = 1.25f;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_isLookHolo;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float m_holoTailLookTime;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool m_isTailLookHolo;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject m_catchPoint;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		public GameObject m_faceCollObject;

		[Token(Token = "0x4000322")]
		private const float JUGE_NEAR_LENGTH = 0.27f;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_isBreadEaten;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool m_isLockedDesk;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_LockObjLockTime;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public eMessageType m_eMessageType;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool m_pause;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_headDist;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_lookingTime;

		[Token(Token = "0x400032A")]
		private const float VERY_LOOK_TIME_MAX = 5f;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_rayFlag;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool m_isLookingLookObj;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private BreadCtrl m_breadCtrl;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_toWatch;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private EffectGroup m_effectLove;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private EffectGroup m_effectLightSphele;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private EffectGroup m_effectLoveMax;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int m_effectLevel;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		public HoloEar m_EarL;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		public HoloEar m_EarR;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private Transform m_neck;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 m_currentNeckAddPos;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 m_nextNeckAddPos;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int m_prevStateNo;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private CMotionName m_motionName;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private SkinnedMeshRenderer m_FaceMeshRenderer;

		[Token(Token = "0x400033B")]
		private const int SHAPE_RIGHT_EYE = 2;

		[Token(Token = "0x400033C")]
		private const int SHAPE_LEFT_EYE = 3;

		[Token(Token = "0x400033D")]
		private const int SHAPE_R_ANGRY_BROW = 62;

		[Token(Token = "0x400033E")]
		private const int SHAPE_L_ANGRY_BROW = 63;

		[Token(Token = "0x400033F")]
		private const int SHAPE_R_MOUSE = 45;

		[Token(Token = "0x4000340")]
		private const int SHAPE_L_MOUSE = 46;

		[Token(Token = "0x4000341")]
		private const int SHAPE_R_SADBROW = 66;

		[Token(Token = "0x4000342")]
		private const int SHAPE_L_SADBROW = 67;

		[Token(Token = "0x4000343")]
		private const int SHAPE_R_SMILE_EYE = 0;

		[Token(Token = "0x4000344")]
		private const int SHAPE_L_SMILE_EYE = 1;

		[Token(Token = "0x4000345")]
		private const int SHAPE_R_SAD_BROW = 66;

		[Token(Token = "0x4000346")]
		private const int SHAPE_L_SAD_BROW = 67;

		[Token(Token = "0x4000347")]
		private const int JITOME_LEFT = 6;

		[Token(Token = "0x4000348")]
		private const int JITOME_RIGHT = 7;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private Transform m_eyePos;

		[Token(Token = "0x400034A")]
		private const int EYE_LEFT_MOVE = 14;

		[Token(Token = "0x400034B")]
		private const int EYE_RIGHT_MOVE = 15;

		[Token(Token = "0x400034C")]
		private const int EYE_UP_MOVE = 16;

		[Token(Token = "0x400034D")]
		private const int EYE_DOWN_MOVE = 17;

		[Token(Token = "0x400034E")]
		private const int EYE_LIGHT_LEFT_MOVE = 88;

		[Token(Token = "0x400034F")]
		private const int EYE_LIGHT_RIGHT_MOVE = 89;

		[Token(Token = "0x4000350")]
		private const int EYE_LIGHT_UP_MOVE = 90;

		[Token(Token = "0x4000351")]
		private const int EYE_LIGHT_DOWN_MOVE = 91;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float m_nextEyeMoveLeftRate;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float m_nextEyeMoveRightRate;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float m_nextEyeMoveUpRate;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float m_nextEyeMoveDownRate;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float m_eyeMoveLeftRate;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float m_eyeMoveRightRate;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float m_eyeMoveUpRate;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float m_eyeMoveDownRate;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float m_randomEyeTime;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float m_randomEyeMaxTime;

		[Token(Token = "0x400035C")]
		private const float RandomEyeIdleTime = 2.25f;

		[Token(Token = "0x400035D")]
		private const float RandomEyeLookTime = 1.75f;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private eRandomLookState m_eRandomLookState;

		[Token(Token = "0x17000056")]
		private SimpleAnimation SimpleAnim
		{
			[Token(Token = "0x60002FE")]
			[Address(RVA = "0x386058", Offset = "0x386058", VA = "0x386058")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		public bool ToWatch
		{
			[Token(Token = "0x6000328")]
			[Address(RVA = "0x387CC8", Offset = "0x387CC8", VA = "0x387CC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000329")]
			[Address(RVA = "0x387CD0", Offset = "0x387CD0", VA = "0x387CD0")]
			set
			{
			}
		}

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x3859B0", Offset = "0x3859B0", VA = "0x3859B0")]
		public Holo()
		{
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x386030", Offset = "0x386030", VA = "0x386030")]
		public float GetShtToNextFuzzyRate()
		{
			return default(float);
		}

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x38603C", Offset = "0x38603C", VA = "0x38603C")]
		public float GetEffectStartFuzzyRate()
		{
			return default(float);
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x386048", Offset = "0x386048", VA = "0x386048")]
		public float GetHeadBrushUpFavoRate()
		{
			return default(float);
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x386050", Offset = "0x386050", VA = "0x386050")]
		public float GetTailBrushUpFavoRate()
		{
			return default(float);
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x38610C", Offset = "0x38610C", VA = "0x38610C")]
		public float GetFavorRate()
		{
			return default(float);
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x386114", Offset = "0x386114", VA = "0x386114")]
		public void SetFavorRate(float param)
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x38611C", Offset = "0x38611C", VA = "0x38611C")]
		public void AddFavorRate(float param)
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x38613C", Offset = "0x38613C", VA = "0x38613C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x3862D0", Offset = "0x3862D0", VA = "0x3862D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x38647C", Offset = "0x38647C", VA = "0x38647C")]
		public void AddRandomStateTime(float randomStateTime)
		{
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x386524", Offset = "0x386524", VA = "0x386524")]
		public float GetMaxHeadBrushAddTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x38652C", Offset = "0x38652C", VA = "0x38652C")]
		public void SetMaxHeadBrushAddTime(float param)
		{
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x386534", Offset = "0x386534", VA = "0x386534")]
		public void InitCountTime(ref float countTime)
		{
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0x386540", Offset = "0x386540", VA = "0x386540")]
		public bool CountUpdate(ref float countTime, float maxTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0x38659C", Offset = "0x38659C", VA = "0x38659C")]
		public void CountDown(ref float countTime, float down)
		{
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0x3865E4", Offset = "0x3865E4", VA = "0x3865E4")]
		public int GetMaxTailBrushAngryCount()
		{
			return default(int);
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0x3865EC", Offset = "0x3865EC", VA = "0x3865EC")]
		public void SetMaxTailBrushAngryCount(int param)
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0x3865F4", Offset = "0x3865F4", VA = "0x3865F4")]
		public void InitAngryTailCountTime()
		{
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x386600", Offset = "0x386600", VA = "0x386600")]
		public void AddAngryTailCountUp()
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0x386610", Offset = "0x386610", VA = "0x386610")]
		public int GetAngryTailCountTime()
		{
			return default(int);
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0x386618", Offset = "0x386618", VA = "0x386618")]
		public bool CheckAngryTail()
		{
			return default(bool);
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0x386630", Offset = "0x386630", VA = "0x386630")]
		public void LookTimeUpdate()
		{
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0x386670", Offset = "0x386670", VA = "0x386670")]
		public void AddLookTime()
		{
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0x386894", Offset = "0x386894", VA = "0x386894")]
		public bool IsHoloVeryLook()
		{
			return default(bool);
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0x3868B0", Offset = "0x3868B0", VA = "0x3868B0")]
		public void TailLookTimeUpdate()
		{
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0x3868F0", Offset = "0x3868F0", VA = "0x3868F0")]
		public void AddTailLookTime()
		{
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0x386938", Offset = "0x386938", VA = "0x386938")]
		public bool IsHoloTailVeryLook()
		{
			return default(bool);
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0x386954", Offset = "0x386954", VA = "0x386954")]
		public bool CheakPlayerLength()
		{
			return default(bool);
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0x386C28", Offset = "0x386C28", VA = "0x386C28")]
		public bool GetBreadEaten()
		{
			return default(bool);
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x386C30", Offset = "0x386C30", VA = "0x386C30")]
		public void SetBreadEaten(bool param)
		{
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0x386C38", Offset = "0x386C38", VA = "0x386C38")]
		public bool GetLockDesk()
		{
			return default(bool);
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0x386C40", Offset = "0x386C40", VA = "0x386C40")]
		public void SetLockDesk(bool param)
		{
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0x386C48", Offset = "0x386C48", VA = "0x386C48")]
		public float GetLockObjLockTime()
		{
			return default(float);
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x386C50", Offset = "0x386C50", VA = "0x386C50")]
		public void SetLockObjLockTime(float param)
		{
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0x386C58", Offset = "0x386C58", VA = "0x386C58")]
		public void LockObjReset()
		{
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x386C74", Offset = "0x386C74", VA = "0x386C74")]
		public void ActiveReactionLockObj()
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0x386F88", Offset = "0x386F88", VA = "0x386F88")]
		public void StopReactionLockObj()
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x3871AC", Offset = "0x3871AC", VA = "0x3871AC")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0x3871B8", Offset = "0x3871B8", VA = "0x3871B8")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x3871C4", Offset = "0x3871C4", VA = "0x3871C4")]
		private bool IsLookingLookObj()
		{
			return default(bool);
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x3871CC", Offset = "0x3871CC", VA = "0x3871CC")]
		public bool GetRayFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x3871D4", Offset = "0x3871D4", VA = "0x3871D4")]
		public void SetRayFlag(bool param)
		{
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0x3871DC", Offset = "0x3871DC", VA = "0x3871DC")]
		private void HeadRay()
		{
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x387A7C", Offset = "0x387A7C", VA = "0x387A7C")]
		private bool LookObj(RaycastHit hit, string tagName, eMessageID messageid, eMessageType messagetype)
		{
			return default(bool);
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x387CC0", Offset = "0x387CC0", VA = "0x387CC0")]
		public BreadCtrl GetBreadCtrl()
		{
			return null;
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x387CD8", Offset = "0x387CD8", VA = "0x387CD8")]
		private void Start()
		{
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0x387CDC", Offset = "0x387CDC", VA = "0x387CDC")]
		public void Finish()
		{
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x38856C", Offset = "0x38856C", VA = "0x38856C")]
		public void Init()
		{
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x388668", Offset = "0x388668", VA = "0x388668")]
		public void Intro()
		{
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0x388AC8", Offset = "0x388AC8", VA = "0x388AC8")]
		public void ActionLoveEffect(float point = 10f, float pointScale = 1.5f)
		{
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0x388CD8", Offset = "0x388CD8", VA = "0x388CD8")]
		public void CheckLoopEffect()
		{
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0x389098", Offset = "0x389098", VA = "0x389098")]
		private void Update()
		{
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0x3895FC", Offset = "0x3895FC", VA = "0x3895FC")]
		public void SetNeckAddPos(eLookAtType lookAtType)
		{
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0x3896F8", Offset = "0x3896F8", VA = "0x3896F8")]
		private void NeckUpdate()
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0x38990C", Offset = "0x38990C", VA = "0x38990C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0x38B1D4", Offset = "0x38B1D4", VA = "0x38B1D4")]
		public void SetMotion(string stateName, bool notBlend = false)
		{
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0x38B314", Offset = "0x38B314", VA = "0x38B314")]
		public bool IsEndMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x38B434", Offset = "0x38B434", VA = "0x38B434", Slot = "4")]
		public override void ReceiveMessage(eMessageType message, float extraParam1)
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x389004", Offset = "0x389004", VA = "0x389004")]
		public eFavorType FavorJudgment(ref float fuzzyValue)
		{
			return default(eFavorType);
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x38BF0C", Offset = "0x38BF0C", VA = "0x38BF0C")]
		public bool IdleToRandomState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0x38C418", Offset = "0x38C418", VA = "0x38C418")]
		public int Gacha()
		{
			return default(int);
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0x386764", Offset = "0x386764", VA = "0x386764")]
		public StateMachine<Holo> GetFSM()
		{
			return null;
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0x38CA70", Offset = "0x38CA70", VA = "0x38CA70")]
		public CMotionName GetMotionName()
		{
			return null;
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0x38CAEC", Offset = "0x38CAEC", VA = "0x38CAEC")]
		public void SetMotionName(CMotionName param)
		{
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0x389D54", Offset = "0x389D54", VA = "0x389D54")]
		private void FaceUpdate()
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0x38CAF4", Offset = "0x38CAF4", VA = "0x38CAF4")]
		public void FaceReset()
		{
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0x38CDE8", Offset = "0x38CDE8", VA = "0x38CDE8")]
		public void AllFaceReset()
		{
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0x38CE78", Offset = "0x38CE78", VA = "0x38CE78")]
		public void EyeReset()
		{
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x38CF14", Offset = "0x38CF14", VA = "0x38CF14")]
		public void EyeLookUser()
		{
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x38D230", Offset = "0x38D230", VA = "0x38D230")]
		public void EyeRandomLock()
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x38A700", Offset = "0x38A700", VA = "0x38A700")]
		private void EyeUpdate()
		{
		}
	}
	[Token(Token = "0x2000087")]
	public class HoloEar : MonoBehaviour
	{
		[Token(Token = "0x2000088")]
		private enum eStandup
		{
			[Token(Token = "0x40003BE")]
			Normal,
			[Token(Token = "0x40003BF")]
			Bounce
		}

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Transform m_ear;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AE15C", Offset = "0x1AE15C")]
		private float m_moveSpeed;

		[Token(Token = "0x40003B4")]
		private const float m_maxZRotate = 90f;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_ZRotate;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 m_defaultRotate;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_rotateEnableTime;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isActive;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private AnimationCurve m_animationCurve;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_rate;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private eStandup m_eStandupType;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_bounceState;

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x38E4D4", Offset = "0x38E4D4", VA = "0x38E4D4")]
		public HoloEar()
		{
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x38E53C", Offset = "0x38E53C", VA = "0x38E53C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x38E640", Offset = "0x38E640", VA = "0x38E640")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0x38E8AC", Offset = "0x38E8AC", VA = "0x38E8AC")]
		public void SetEnableTime(float time = 0.04f)
		{
		}
	}
}
namespace Game.HoloState
{
	[Token(Token = "0x2000089")]
	internal class Function
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x393488", Offset = "0x393488", VA = "0x393488")]
		public Function()
		{
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0x393490", Offset = "0x393490", VA = "0x393490")]
		public static bool ReceiveMessageToWatch(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x38EE08", Offset = "0x38EE08", VA = "0x38EE08")]
		public static bool ReceiveMessageWhenIdle(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x393E44", Offset = "0x393E44", VA = "0x393E44")]
		public static bool ReceiveMessageWhenHead(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x3943F8", Offset = "0x3943F8", VA = "0x3943F8")]
		public static bool ReceiveMessageWhenTailIdle(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x392D50", Offset = "0x392D50", VA = "0x392D50")]
		public static bool ReceiveMessageWhenBread(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x39474C", Offset = "0x39474C", VA = "0x39474C")]
		public static bool ReceiveMessageWhenTailLoop(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x394E98", Offset = "0x394E98", VA = "0x394E98")]
		public static bool ReceiveMessageWhenTail(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x39504C", Offset = "0x39504C", VA = "0x39504C")]
		public static bool ReceiveMessageUserHeadPat(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x3950EC", Offset = "0x3950EC", VA = "0x3950EC")]
		public static bool ReceiveMessageWhenTailLoopDummy(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200008A")]
	public class Global : BaseState<Holo>
	{
		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Global m_instance;

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x3952E4", Offset = "0x3952E4", VA = "0x3952E4")]
		public Global()
		{
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x388878", Offset = "0x388878", VA = "0x388878")]
		public static Global GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x395348", Offset = "0x395348", VA = "0x395348", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x3953D8", Offset = "0x3953D8", VA = "0x3953D8", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x3953DC", Offset = "0x3953DC", VA = "0x3953DC", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x39546C", Offset = "0x39546C", VA = "0x39546C", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200008B")]
	public class Intro : BaseState<Holo>
	{
		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Intro m_instance;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float time;

		[Token(Token = "0x40003C3")]
		private const float voice_time = 1.5f;

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x3964D4", Offset = "0x3964D4", VA = "0x3964D4")]
		public Intro()
		{
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x3889A0", Offset = "0x3889A0", VA = "0x3889A0")]
		public static Intro GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x396538", Offset = "0x396538", VA = "0x396538", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x396628", Offset = "0x396628", VA = "0x396628", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x39680C", Offset = "0x39680C", VA = "0x39680C", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x39689C", Offset = "0x39689C", VA = "0x39689C", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200008C")]
	public class Finish : BaseState<Holo>
	{
		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Finish m_instance;

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x393174", Offset = "0x393174", VA = "0x393174")]
		public Finish()
		{
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x388444", Offset = "0x388444", VA = "0x388444")]
		public static Finish GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x3931D8", Offset = "0x3931D8", VA = "0x3931D8", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x393368", Offset = "0x393368", VA = "0x393368", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x39336C", Offset = "0x39336C", VA = "0x39336C", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x3933FC", Offset = "0x3933FC", VA = "0x3933FC", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200008D")]
	public class Idle : BaseState<Holo>
	{
		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Idle m_instance;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_time;

		[Token(Token = "0x40003C7")]
		private const float CYCLE_TIME = 6f;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_RandomCount;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float effectTime;

		[Token(Token = "0x40003CA")]
		private const float effectTimeMax = 9f;

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x395AA4", Offset = "0x395AA4", VA = "0x395AA4")]
		public Idle()
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x387FA4", Offset = "0x387FA4", VA = "0x387FA4")]
		public static Idle GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x395B10", Offset = "0x395B10", VA = "0x395B10", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x395DAC", Offset = "0x395DAC", VA = "0x395DAC", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x39631C", Offset = "0x39631C", VA = "0x39631C", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x3964B8", Offset = "0x3964B8", VA = "0x3964B8", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200008E")]
	public class LookAround : BaseState<Holo>
	{
		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LookAround m_instance;

		[Token(Token = "0x600036F")]
		[Address(RVA = "0x3972D4", Offset = "0x3972D4", VA = "0x3972D4")]
		public LookAround()
		{
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0x3880CC", Offset = "0x3880CC", VA = "0x3880CC")]
		public static LookAround GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x397338", Offset = "0x397338", VA = "0x397338", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0x3974C8", Offset = "0x3974C8", VA = "0x3974C8", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x3975BC", Offset = "0x3975BC", VA = "0x3975BC", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x397664", Offset = "0x397664", VA = "0x397664", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200008F")]
	public class Nobi : BaseState<Holo>
	{
		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Nobi m_instance;

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x399024", Offset = "0x399024", VA = "0x399024")]
		public Nobi()
		{
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0x3881F4", Offset = "0x3881F4", VA = "0x3881F4")]
		public static Nobi GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x399088", Offset = "0x399088", VA = "0x399088", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x399294", Offset = "0x399294", VA = "0x399294", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0x399388", Offset = "0x399388", VA = "0x399388", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0x399498", Offset = "0x399498", VA = "0x399498", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000090")]
	public class Akubi : BaseState<Holo>
	{
		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Akubi m_instance;

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x38E8FC", Offset = "0x38E8FC", VA = "0x38E8FC")]
		public Akubi()
		{
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0x38831C", Offset = "0x38831C", VA = "0x38831C")]
		public static Akubi GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0x38E960", Offset = "0x38E960", VA = "0x38E960", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0x38EBA0", Offset = "0x38EBA0", VA = "0x38EBA0", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0x38EC94", Offset = "0x38EC94", VA = "0x38EC94", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0x38EDF0", Offset = "0x38EDF0", VA = "0x38EDF0", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000091")]
	public class Scary : BaseState<Holo>
	{
		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Scary m_instance;

		[Token(Token = "0x6000384")]
		[Address(RVA = "0x39B210", Offset = "0x39B210", VA = "0x39B210")]
		public Scary()
		{
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0x38C6F8", Offset = "0x38C6F8", VA = "0x38C6F8")]
		public static Scary GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0x39B274", Offset = "0x39B274", VA = "0x39B274", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0x39B480", Offset = "0x39B480", VA = "0x39B480", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x39B574", Offset = "0x39B574", VA = "0x39B574", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x39B684", Offset = "0x39B684", VA = "0x39B684", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000092")]
	public class LookIntoHead : BaseState<Holo>
	{
		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LookIntoHead m_instance;

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x397680", Offset = "0x397680", VA = "0x397680")]
		public LookIntoHead()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x38C820", Offset = "0x38C820", VA = "0x38C820")]
		public static LookIntoHead GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x3976E4", Offset = "0x3976E4", VA = "0x3976E4", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x397B30", Offset = "0x397B30", VA = "0x397B30", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0x397C24", Offset = "0x397C24", VA = "0x397C24", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x397CB4", Offset = "0x397CB4", VA = "0x397CB4", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000093")]
	public class Toliedown : BaseState<Holo>
	{
		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Toliedown m_instance;

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x235620", Offset = "0x235620", VA = "0x235620")]
		public Toliedown()
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x235684", Offset = "0x235684", VA = "0x235684")]
		public static Toliedown GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x2357AC", Offset = "0x2357AC", VA = "0x2357AC", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0x235898", Offset = "0x235898", VA = "0x235898", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x2359A4", Offset = "0x2359A4", VA = "0x2359A4", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x235A34", Offset = "0x235A34", VA = "0x235A34", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000094")]
	public class TolidownIdle : BaseState<Holo>
	{
		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TolidownIdle m_instance;

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x39F198", Offset = "0x39F198", VA = "0x39F198")]
		public TolidownIdle()
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x39F1FC", Offset = "0x39F1FC", VA = "0x39F1FC")]
		public static TolidownIdle GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x39F324", Offset = "0x39F324", VA = "0x39F324", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x39F498", Offset = "0x39F498", VA = "0x39F498", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0x39F5C8", Offset = "0x39F5C8", VA = "0x39F5C8", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x39F658", Offset = "0x39F658", VA = "0x39F658", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000095")]
	public class StandUp : BaseState<Holo>
	{
		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StandUp m_instance;

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x39D3C0", Offset = "0x39D3C0", VA = "0x39D3C0")]
		public StandUp()
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x39D424", Offset = "0x39D424", VA = "0x39D424")]
		public static StandUp GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x39D54C", Offset = "0x39D54C", VA = "0x39D54C", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x39D630", Offset = "0x39D630", VA = "0x39D630", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x39D724", Offset = "0x39D724", VA = "0x39D724", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x39D7B4", Offset = "0x39D7B4", VA = "0x39D7B4", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000096")]
	public class JumpUp : BaseState<Holo>
	{
		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JumpUp m_instance;

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x396DA8", Offset = "0x396DA8", VA = "0x396DA8")]
		public JumpUp()
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x396E0C", Offset = "0x396E0C", VA = "0x396E0C")]
		public static JumpUp GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x396F34", Offset = "0x396F34", VA = "0x396F34", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x3970C4", Offset = "0x3970C4", VA = "0x3970C4", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x3971B8", Offset = "0x3971B8", VA = "0x3971B8", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x397248", Offset = "0x397248", VA = "0x397248", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000097")]
	public class HappyFace : BaseState<Holo>
	{
		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HappyFace m_instance;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float time;

		[Token(Token = "0x40003D6")]
		private const float MAX_TIME = 4f;

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x395504", Offset = "0x395504", VA = "0x395504")]
		public HappyFace()
		{
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x395568", Offset = "0x395568", VA = "0x395568")]
		public static HappyFace GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x395690", Offset = "0x395690", VA = "0x395690", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x395864", Offset = "0x395864", VA = "0x395864", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x395970", Offset = "0x395970", VA = "0x395970", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x395A88", Offset = "0x395A88", VA = "0x395A88", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000098")]
	public class TailIdle : BaseState<Holo>
	{
		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TailIdle m_instance;

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x39D840", Offset = "0x39D840", VA = "0x39D840")]
		public TailIdle()
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x38C948", Offset = "0x38C948", VA = "0x38C948")]
		public static TailIdle GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x39D8A4", Offset = "0x39D8A4", VA = "0x39D8A4", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x39D9EC", Offset = "0x39D9EC", VA = "0x39D9EC", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x39DAE0", Offset = "0x39DAE0", VA = "0x39DAE0", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x39DB70", Offset = "0x39DB70", VA = "0x39DB70", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000099")]
	public class TailIdleLoop : BaseState<Holo>
	{
		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TailIdleLoop m_instance;

		[Token(Token = "0x40003D9")]
		private const float m_maxTime = 4f;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_time;

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x39DB8C", Offset = "0x39DB8C", VA = "0x39DB8C")]
		public TailIdleLoop()
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x38E15C", Offset = "0x38E15C", VA = "0x38E15C")]
		public static TailIdleLoop GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x39DBF0", Offset = "0x39DBF0", VA = "0x39DBF0", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x39DD44", Offset = "0x39DD44", VA = "0x39DD44", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x39DE50", Offset = "0x39DE50", VA = "0x39DE50", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x39DEE0", Offset = "0x39DEE0", VA = "0x39DEE0", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200009A")]
	public class TailIdleToIdle : BaseState<Holo>
	{
		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TailIdleToIdle m_instance;

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x39E304", Offset = "0x39E304", VA = "0x39E304")]
		public TailIdleToIdle()
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x38E284", Offset = "0x38E284", VA = "0x38E284")]
		public static TailIdleToIdle GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x39E368", Offset = "0x39E368", VA = "0x39E368", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x39E4B4", Offset = "0x39E4B4", VA = "0x39E4B4", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x39E5A8", Offset = "0x39E5A8", VA = "0x39E5A8", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x39E638", Offset = "0x39E638", VA = "0x39E638", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200009B")]
	public class TailIdleSosoWithTailTouch : BaseState<Holo>
	{
		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TailIdleSosoWithTailTouch m_instance;

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x39DEFC", Offset = "0x39DEFC", VA = "0x39DEFC")]
		public TailIdleSosoWithTailTouch()
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x38E3AC", Offset = "0x38E3AC", VA = "0x38E3AC")]
		public static TailIdleSosoWithTailTouch GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x39DF60", Offset = "0x39DF60", VA = "0x39DF60", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x39E0CC", Offset = "0x39E0CC", VA = "0x39E0CC", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x39E1C0", Offset = "0x39E1C0", VA = "0x39E1C0", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x39E278", Offset = "0x39E278", VA = "0x39E278", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200009C")]
	public class AngryWithBodyTouch : BaseState<Holo>
	{
		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AngryWithBodyTouch m_instance;

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x390B30", Offset = "0x390B30", VA = "0x390B30")]
		public AngryWithBodyTouch()
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x38DB94", Offset = "0x38DB94", VA = "0x38DB94")]
		public static AngryWithBodyTouch GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x390B94", Offset = "0x390B94", VA = "0x390B94", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x390DFC", Offset = "0x390DFC", VA = "0x390DFC", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x390EF0", Offset = "0x390EF0", VA = "0x390EF0", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x390FF0", Offset = "0x390FF0", VA = "0x390FF0", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200009D")]
	public class SosoWithBodyTouch : BaseState<Holo>
	{
		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SosoWithBodyTouch m_instance;

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x39CA64", Offset = "0x39CA64", VA = "0x39CA64")]
		public SosoWithBodyTouch()
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x393D1C", Offset = "0x393D1C", VA = "0x393D1C")]
		public static SosoWithBodyTouch GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x39CAC8", Offset = "0x39CAC8", VA = "0x39CAC8", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x39CCC0", Offset = "0x39CCC0", VA = "0x39CCC0", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x39CDB4", Offset = "0x39CDB4", VA = "0x39CDB4", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x39CE6C", Offset = "0x39CE6C", VA = "0x39CE6C", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200009E")]
	public class ShowTailIntro : BaseState<Holo>
	{
		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ShowTailIntro m_instance;

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x39BB20", Offset = "0x39BB20", VA = "0x39BB20")]
		public ShowTailIntro()
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x3961F4", Offset = "0x3961F4", VA = "0x3961F4")]
		public static ShowTailIntro GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x39BB84", Offset = "0x39BB84", VA = "0x39BB84", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x39BD78", Offset = "0x39BD78", VA = "0x39BD78", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x39BECC", Offset = "0x39BECC", VA = "0x39BECC", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x39BF9C", Offset = "0x39BF9C", VA = "0x39BF9C", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200009F")]
	public class ShowTailLoop : BaseState<Holo>
	{
		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ShowTailLoop m_instance;

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x39C028", Offset = "0x39C028", VA = "0x39C028")]
		public ShowTailLoop()
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x39231C", Offset = "0x39231C", VA = "0x39231C")]
		public static ShowTailLoop GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x39C08C", Offset = "0x39C08C", VA = "0x39C08C", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x39C1D4", Offset = "0x39C1D4", VA = "0x39C1D4", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x39C304", Offset = "0x39C304", VA = "0x39C304", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x39C394", Offset = "0x39C394", VA = "0x39C394", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A0")]
	public class ShowTailEnd : BaseState<Holo>
	{
		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ShowTailEnd m_instance;

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x39B6A0", Offset = "0x39B6A0", VA = "0x39B6A0")]
		public ShowTailEnd()
		{
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x39B704", Offset = "0x39B704", VA = "0x39B704")]
		public static ShowTailEnd GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x39B82C", Offset = "0x39B82C", VA = "0x39B82C", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x39B980", Offset = "0x39B980", VA = "0x39B980", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x39BA74", Offset = "0x39BA74", VA = "0x39BA74", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x39BB04", Offset = "0x39BB04", VA = "0x39BB04", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A1")]
	public class TicklishWithTailTouch : BaseState<Holo>
	{
		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TicklishWithTailTouch m_instance;

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x39EC04", Offset = "0x39EC04", VA = "0x39EC04")]
		public TicklishWithTailTouch()
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x394D70", Offset = "0x394D70", VA = "0x394D70")]
		public static TicklishWithTailTouch GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x39EC68", Offset = "0x39EC68", VA = "0x39EC68", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x39EDF8", Offset = "0x39EDF8", VA = "0x39EDF8", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x39EEEC", Offset = "0x39EEEC", VA = "0x39EEEC", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x39EFD8", Offset = "0x39EFD8", VA = "0x39EFD8", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A2")]
	public class PatienceWithTailTouch : BaseState<Holo>
	{
		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PatienceWithTailTouch m_instance;

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x39A8F8", Offset = "0x39A8F8", VA = "0x39A8F8")]
		public PatienceWithTailTouch()
		{
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x394C48", Offset = "0x394C48", VA = "0x394C48")]
		public static PatienceWithTailTouch GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x39A95C", Offset = "0x39A95C", VA = "0x39A95C", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x39AAEC", Offset = "0x39AAEC", VA = "0x39AAEC", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x39ABE0", Offset = "0x39ABE0", VA = "0x39ABE0", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x39ACCC", Offset = "0x39ACCC", VA = "0x39ACCC", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A3")]
	public class BadModeWithTailTouch : BaseState<Holo>
	{
		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BadModeWithTailTouch m_instance;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float time;

		[Token(Token = "0x40003E6")]
		private const float MAX_TIME = 3f;

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x391ECC", Offset = "0x391ECC", VA = "0x391ECC")]
		public BadModeWithTailTouch()
		{
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x391F30", Offset = "0x391F30", VA = "0x391F30")]
		public static BadModeWithTailTouch GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x392058", Offset = "0x392058", VA = "0x392058", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x392210", Offset = "0x392210", VA = "0x392210", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x392444", Offset = "0x392444", VA = "0x392444", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x392530", Offset = "0x392530", VA = "0x392530", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A4")]
	public class AngryWithTailTouch : BaseState<Holo>
	{
		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AngryWithTailTouch m_instance;

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x391554", Offset = "0x391554", VA = "0x391554")]
		public AngryWithTailTouch()
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x38DDE4", Offset = "0x38DDE4", VA = "0x38DDE4")]
		public static AngryWithTailTouch GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x3915B8", Offset = "0x3915B8", VA = "0x3915B8", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x3917B8", Offset = "0x3917B8", VA = "0x3917B8", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x3918AC", Offset = "0x3918AC", VA = "0x3918AC", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x3919AC", Offset = "0x3919AC", VA = "0x3919AC", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A5")]
	public class AngryWithQuickTailTouch : BaseState<Holo>
	{
		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AngryWithQuickTailTouch m_instance;

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x39107C", Offset = "0x39107C", VA = "0x39107C")]
		public AngryWithQuickTailTouch()
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x38DCBC", Offset = "0x38DCBC", VA = "0x38DCBC")]
		public static AngryWithQuickTailTouch GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x3910E0", Offset = "0x3910E0", VA = "0x3910E0", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x3912D4", Offset = "0x3912D4", VA = "0x3912D4", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x3913C8", Offset = "0x3913C8", VA = "0x3913C8", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x3914C8", Offset = "0x3914C8", VA = "0x3914C8", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A6")]
	public class SosoWithTailTouch : BaseState<Holo>
	{
		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SosoWithTailTouch m_instance;

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x39CEF8", Offset = "0x39CEF8", VA = "0x39CEF8")]
		public SosoWithTailTouch()
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x393BF4", Offset = "0x393BF4", VA = "0x393BF4")]
		public static SosoWithTailTouch GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x39CF5C", Offset = "0x39CF5C", VA = "0x39CF5C", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x39D150", Offset = "0x39D150", VA = "0x39D150", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x39D2A4", Offset = "0x39D2A4", VA = "0x39D2A4", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x39D334", Offset = "0x39D334", VA = "0x39D334", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A7")]
	public class TakeBread : BaseState<Holo>
	{
		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TakeBread m_instance;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_takeTime;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_takeFlag;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float TAKE_TIME;

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x39E654", Offset = "0x39E654", VA = "0x39E654")]
		public TakeBread()
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x38676C", Offset = "0x38676C", VA = "0x38676C")]
		public static TakeBread GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x39E6C4", Offset = "0x39E6C4", VA = "0x39E6C4", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x39E990", Offset = "0x39E990", VA = "0x39E990", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x39EB58", Offset = "0x39EB58", VA = "0x39EB58", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x39EBE8", Offset = "0x39EBE8", VA = "0x39EBE8", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A8")]
	public class EatBread : BaseState<Holo>
	{
		[Token(Token = "0x20000A9")]
		private enum EAT_STATE
		{
			[Token(Token = "0x40003F1")]
			EAT1,
			[Token(Token = "0x40003F2")]
			EAT2,
			[Token(Token = "0x40003F3")]
			EAT3
		}

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static EatBread m_instance;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_eatTime;

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x3925BC", Offset = "0x3925BC", VA = "0x3925BC")]
		public EatBread()
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x392620", Offset = "0x392620", VA = "0x392620")]
		public static EatBread GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x392748", Offset = "0x392748", VA = "0x392748", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x392954", Offset = "0x392954", VA = "0x392954", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x392C24", Offset = "0x392C24", VA = "0x392C24", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x392D38", Offset = "0x392D38", VA = "0x392D38", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000AA")]
	public class ItMainBread : BaseState<Holo>
	{
		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ItMainBread m_instance;

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x396928", Offset = "0x396928", VA = "0x396928")]
		public ItMainBread()
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x39698C", Offset = "0x39698C", VA = "0x39698C")]
		public static ItMainBread GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x396AB4", Offset = "0x396AB4", VA = "0x396AB4", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x396B98", Offset = "0x396B98", VA = "0x396B98", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x396C8C", Offset = "0x396C8C", VA = "0x396C8C", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x396D1C", Offset = "0x396D1C", VA = "0x396D1C", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000AB")]
	public class PresentBread : BaseState<Holo>
	{
		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PresentBread m_instance;

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x39ACE8", Offset = "0x39ACE8", VA = "0x39ACE8")]
		public PresentBread()
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x38D81C", Offset = "0x38D81C", VA = "0x38D81C")]
		public static PresentBread GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x39AD4C", Offset = "0x39AD4C", VA = "0x39AD4C", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x39AF78", Offset = "0x39AF78", VA = "0x39AF78", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x39B0F4", Offset = "0x39B0F4", VA = "0x39B0F4", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x39B184", Offset = "0x39B184", VA = "0x39B184", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000AC")]
	public class NotGiveBread : BaseState<Holo>
	{
		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NotGiveBread m_instance;

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x3994B4", Offset = "0x3994B4", VA = "0x3994B4")]
		public NotGiveBread()
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x38D944", Offset = "0x38D944", VA = "0x38D944")]
		public static NotGiveBread GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x399518", Offset = "0x399518", VA = "0x399518", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x3996DC", Offset = "0x3996DC", VA = "0x3996DC", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x3997D0", Offset = "0x3997D0", VA = "0x3997D0", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x399888", Offset = "0x399888", VA = "0x399888", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000AD")]
	public class EatenForIdle : BaseState<Holo>
	{
		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static EatenForIdle m_instance;

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x392E1C", Offset = "0x392E1C", VA = "0x392E1C")]
		public EatenForIdle()
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0x392AFC", Offset = "0x392AFC", VA = "0x392AFC")]
		public static EatenForIdle GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x392E80", Offset = "0x392E80", VA = "0x392E80", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x392F64", Offset = "0x392F64", VA = "0x392F64", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x393058", Offset = "0x393058", VA = "0x393058", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x3930E8", Offset = "0x3930E8", VA = "0x3930E8", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000AE")]
	public class AshamedToIdle : BaseState<Holo>
	{
		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AshamedToIdle m_instance;

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x391A38", Offset = "0x391A38", VA = "0x391A38")]
		public AshamedToIdle()
		{
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x38DA6C", Offset = "0x38DA6C", VA = "0x38DA6C")]
		public static AshamedToIdle GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x391A9C", Offset = "0x391A9C", VA = "0x391A9C", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x391C94", Offset = "0x391C94", VA = "0x391C94", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x391D88", Offset = "0x391D88", VA = "0x391D88", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x391E40", Offset = "0x391E40", VA = "0x391E40", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000AF")]
	public class ToWatch : BaseState<Holo>
	{
		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ToWatch m_instance;

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x39EFF4", Offset = "0x39EFF4", VA = "0x39EFF4")]
		public ToWatch()
		{
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x393ACC", Offset = "0x393ACC", VA = "0x393ACC")]
		public static ToWatch GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x39F058", Offset = "0x39F058", VA = "0x39F058", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x39F0E8", Offset = "0x39F0E8", VA = "0x39F0E8", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x39F0EC", Offset = "0x39F0EC", VA = "0x39F0EC", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x39F17C", Offset = "0x39F17C", VA = "0x39F17C", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000B0")]
	public class WatchLeft : BaseState<Holo>
	{
		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WatchLeft m_instance;

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x235AC0", Offset = "0x235AC0", VA = "0x235AC0")]
		public WatchLeft()
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x235B24", Offset = "0x235B24", VA = "0x235B24")]
		public static WatchLeft GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x235C4C", Offset = "0x235C4C", VA = "0x235C4C", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x23616C", Offset = "0x23616C", VA = "0x23616C", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x236398", Offset = "0x236398", VA = "0x236398", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x236428", Offset = "0x236428", VA = "0x236428", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000B1")]
	public class WatchLeftLoop : BaseState<Holo>
	{
		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WatchLeftLoop m_instance;

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x2364B4", Offset = "0x2364B4", VA = "0x2364B4")]
		public WatchLeftLoop()
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x236270", Offset = "0x236270", VA = "0x236270")]
		public static WatchLeftLoop GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x236518", Offset = "0x236518", VA = "0x236518", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x2370CC", Offset = "0x2370CC", VA = "0x2370CC", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x237334", Offset = "0x237334", VA = "0x237334", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x2373C4", Offset = "0x2373C4", VA = "0x2373C4", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000B2")]
	public class WatchLeftToFront : BaseState<Holo>
	{
		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WatchLeftToFront m_instance;

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x237450", Offset = "0x237450", VA = "0x237450")]
		public WatchLeftToFront()
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x23720C", Offset = "0x23720C", VA = "0x23720C")]
		public static WatchLeftToFront GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x2374B4", Offset = "0x2374B4", VA = "0x2374B4", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x237640", Offset = "0x237640", VA = "0x237640", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x23774C", Offset = "0x23774C", VA = "0x23774C", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x237808", Offset = "0x237808", VA = "0x237808", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000B3")]
	public class WatchRight : BaseState<Holo>
	{
		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WatchRight m_instance;

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x237894", Offset = "0x237894", VA = "0x237894")]
		public WatchRight()
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x2378F8", Offset = "0x2378F8", VA = "0x2378F8")]
		public static WatchRight GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x237A20", Offset = "0x237A20", VA = "0x237A20", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x237C30", Offset = "0x237C30", VA = "0x237C30", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x237E5C", Offset = "0x237E5C", VA = "0x237E5C", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x237EEC", Offset = "0x237EEC", VA = "0x237EEC", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000B4")]
	public class WatchRightLoop : BaseState<Holo>
	{
		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WatchRightLoop m_instance;

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x237F78", Offset = "0x237F78", VA = "0x237F78")]
		public WatchRightLoop()
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x237D34", Offset = "0x237D34", VA = "0x237D34")]
		public static WatchRightLoop GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x237FDC", Offset = "0x237FDC", VA = "0x237FDC", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x238764", Offset = "0x238764", VA = "0x238764", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x2389CC", Offset = "0x2389CC", VA = "0x2389CC", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x238A5C", Offset = "0x238A5C", VA = "0x238A5C", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000B5")]
	public class WatchRightToFront : BaseState<Holo>
	{
		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WatchRightToFront m_instance;

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x238AE8", Offset = "0x238AE8", VA = "0x238AE8")]
		public WatchRightToFront()
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x2388A4", Offset = "0x2388A4", VA = "0x2388A4")]
		public static WatchRightToFront GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x238B4C", Offset = "0x238B4C", VA = "0x238B4C", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x238CD8", Offset = "0x238CD8", VA = "0x238CD8", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x238DE4", Offset = "0x238DE4", VA = "0x238DE4", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x238EA0", Offset = "0x238EA0", VA = "0x238EA0", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000B6")]
	public class MyHeadTouching : BaseState<Holo>
	{
		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MyHeadTouching m_instance;

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x398708", Offset = "0x398708", VA = "0x398708")]
		public MyHeadTouching()
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x38D37C", Offset = "0x38D37C", VA = "0x38D37C")]
		public static MyHeadTouching GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x39876C", Offset = "0x39876C", VA = "0x39876C", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x398944", Offset = "0x398944", VA = "0x398944", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x398A38", Offset = "0x398A38", VA = "0x398A38", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x398AC8", Offset = "0x398AC8", VA = "0x398AC8", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000B7")]
	public class MyHeadTouchingLoop : BaseState<Holo>
	{
		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MyHeadTouchingLoop m_instance;

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x398B90", Offset = "0x398B90", VA = "0x398B90")]
		public MyHeadTouchingLoop()
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x38D4A4", Offset = "0x38D4A4", VA = "0x38D4A4")]
		public static MyHeadTouchingLoop GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x398BF4", Offset = "0x398BF4", VA = "0x398BF4", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x398E48", Offset = "0x398E48", VA = "0x398E48", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x398F78", Offset = "0x398F78", VA = "0x398F78", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x399008", Offset = "0x399008", VA = "0x399008", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000B8")]
	public class MyHeadTouchedFinish : BaseState<Holo>
	{
		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MyHeadTouchedFinish m_instance;

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x3981B4", Offset = "0x3981B4", VA = "0x3981B4")]
		public MyHeadTouchedFinish()
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x398218", Offset = "0x398218", VA = "0x398218")]
		public static MyHeadTouchedFinish GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x398340", Offset = "0x398340", VA = "0x398340", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x3984D0", Offset = "0x3984D0", VA = "0x3984D0", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x3985C4", Offset = "0x3985C4", VA = "0x3985C4", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x39867C", Offset = "0x39867C", VA = "0x39867C", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000B9")]
	public class MyHeadTouchedAngryFinish : BaseState<Holo>
	{
		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MyHeadTouchedAngryFinish m_instance;

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x397D40", Offset = "0x397D40", VA = "0x397D40")]
		public MyHeadTouchedAngryFinish()
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x38DF0C", Offset = "0x38DF0C", VA = "0x38DF0C")]
		public static MyHeadTouchedAngryFinish GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x397DA4", Offset = "0x397DA4", VA = "0x397DA4", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x397F34", Offset = "0x397F34", VA = "0x397F34", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x398028", Offset = "0x398028", VA = "0x398028", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x398128", Offset = "0x398128", VA = "0x398128", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000BA")]
	public class SitToNext : BaseState<Holo>
	{
		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SitToNext m_instance;

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x39C3B0", Offset = "0x39C3B0", VA = "0x39C3B0")]
		public SitToNext()
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x38D5CC", Offset = "0x38D5CC", VA = "0x38D5CC")]
		public static SitToNext GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x39C414", Offset = "0x39C414", VA = "0x39C414", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x39C5DC", Offset = "0x39C5DC", VA = "0x39C5DC", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x39C6D0", Offset = "0x39C6D0", VA = "0x39C6D0", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x39C760", Offset = "0x39C760", VA = "0x39C760", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000BB")]
	public class PatTheHead : BaseState<Holo>
	{
		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PatTheHead m_instance;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float failedCheckTime;

		[Token(Token = "0x4000407")]
		private const float failedCheckStartTime = 2f;

		[Token(Token = "0x4000408")]
		private const float failedCheckEndTime = 8f;

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x399914", Offset = "0x399914", VA = "0x399914")]
		public PatTheHead()
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x38D6F4", Offset = "0x38D6F4", VA = "0x38D6F4")]
		public static PatTheHead GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x399978", Offset = "0x399978", VA = "0x399978", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x399B7C", Offset = "0x399B7C", VA = "0x399B7C", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x39A098", Offset = "0x39A098", VA = "0x39A098", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x39A128", Offset = "0x39A128", VA = "0x39A128", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000BC")]
	public class PatTheHeadFailed : BaseState<Holo>
	{
		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PatTheHeadFailed m_instance;

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x39A144", Offset = "0x39A144", VA = "0x39A144")]
		public PatTheHeadFailed()
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x39A1A8", Offset = "0x39A1A8", VA = "0x39A1A8")]
		public static PatTheHeadFailed GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x39A2D0", Offset = "0x39A2D0", VA = "0x39A2D0", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x39A360", Offset = "0x39A360", VA = "0x39A360", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x39A364", Offset = "0x39A364", VA = "0x39A364", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x39A3F4", Offset = "0x39A3F4", VA = "0x39A3F4", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000BD")]
	public class PatTheHeadFinish : BaseState<Holo>
	{
		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PatTheHeadFinish m_instance;

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x39A410", Offset = "0x39A410", VA = "0x39A410")]
		public PatTheHeadFinish()
		{
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x38E034", Offset = "0x38E034", VA = "0x38E034")]
		public static PatTheHeadFinish GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x39A474", Offset = "0x39A474", VA = "0x39A474", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x39A5C0", Offset = "0x39A5C0", VA = "0x39A5C0", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x39A7DC", Offset = "0x39A7DC", VA = "0x39A7DC", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x39A8DC", Offset = "0x39A8DC", VA = "0x39A8DC", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000BE")]
	public class SitToStandUp : BaseState<Holo>
	{
		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SitToStandUp m_instance;

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x39C77C", Offset = "0x39C77C", VA = "0x39C77C")]
		public SitToStandUp()
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x39A6B4", Offset = "0x39A6B4", VA = "0x39A6B4")]
		public static SitToStandUp GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x39C7E0", Offset = "0x39C7E0", VA = "0x39C7E0", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x39C8C4", Offset = "0x39C8C4", VA = "0x39C8C4", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x39C9B8", Offset = "0x39C9B8", VA = "0x39C9B8", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x39CA48", Offset = "0x39CA48", VA = "0x39CA48", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000BF")]
	public class AllMotionPlay : BaseState<Holo>
	{
		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AllMotionPlay m_instance;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int motioncount;

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x38F93C", Offset = "0x38F93C", VA = "0x38F93C")]
		public AllMotionPlay()
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x38F9A0", Offset = "0x38F9A0", VA = "0x38F9A0")]
		public static AllMotionPlay GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x38FAC8", Offset = "0x38FAC8", VA = "0x38FAC8", Slot = "4")]
		public override void Enter(Holo main)
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x38FBB8", Offset = "0x38FBB8", VA = "0x38FBB8", Slot = "6")]
		public override void Execute(Holo main)
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x390A14", Offset = "0x390A14", VA = "0x390A14", Slot = "7")]
		public override void Exit(Holo main)
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x390AA4", Offset = "0x390AA4", VA = "0x390AA4", Slot = "8")]
		public override bool Message(Holo main, eMessageType messageType, float extraMessage1)
		{
			return default(bool);
		}
	}
}
namespace Game
{
	[Token(Token = "0x20000C0")]
	public class HureaiBreadShadowCheck : MonoBehaviour
	{
		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private MeshRenderer mesh01;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private MeshRenderer mesh02;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private MeshRenderer mesh03;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer meshShadow01;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private MeshRenderer meshShadow02;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer meshShadow03;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool mesh01Active;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool mesh02Active;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private bool mesh03Active;

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x238F2C", Offset = "0x238F2C", VA = "0x238F2C")]
		public HureaiBreadShadowCheck()
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x238F34", Offset = "0x238F34", VA = "0x238F34")]
		private void Start()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x239154", Offset = "0x239154", VA = "0x239154")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public class HureaiList : MonoBehaviour
	{
		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameObject m_group;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject m_plate;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private SetUIString m_hureaiListLookDoor;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SetUIString m_hureaiListLookHashigo;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private SetUIString m_hureaiListLookWaterMill;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SetUIString m_hureaiListLookDesk;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private SetUIString m_hureaiListLookBread;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SetUIString m_hureaiListApathyHolo;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SetUIString m_hureaiListBrush;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SetUIString m_hureaiListPresentBread;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private SetUIString m_hureaiListAshamedToIdle;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SetUIString m_hureaiListTouchHead;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private SetUIString m_hureaiListTouchTail;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpriteRenderer m_checkhureaiListLookDoor;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private SpriteRenderer m_checkhureaiListLookHashigo;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SpriteRenderer m_checkhureaiListLookWaterMill;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private SpriteRenderer m_checkhureaiListLookDesk;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SpriteRenderer m_checkhureaiListLookBread;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private SpriteRenderer m_checkhureaiListApathyHolo;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SpriteRenderer m_checkhureaiListBrush;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private SpriteRenderer m_checkhureaiListPresentBread;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SpriteRenderer m_checkhureaiListAshamedToIdle;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private SpriteRenderer m_checkhureaiListTouchHead;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SpriteRenderer m_checkhureaiListTouchTail;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private SpriteRenderer m_checkhureaiListTouchHeadCheckBox;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SpriteRenderer m_checkhureaiListTouchTailCheckBox;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_iCurrentLanguage;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_isTrophyCheck;

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x23C6C4", Offset = "0x23C6C4", VA = "0x23C6C4")]
		public HureaiList()
		{
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x23C6CC", Offset = "0x23C6CC", VA = "0x23C6CC")]
		public void Start()
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x23D0E4", Offset = "0x23D0E4", VA = "0x23D0E4")]
		public void Update()
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x23CCAC", Offset = "0x23CCAC", VA = "0x23CCAC")]
		public void ChangeLanguage()
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x23DF70", Offset = "0x23DF70", VA = "0x23DF70")]
		private void AllTrophyCheck()
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x23D55C", Offset = "0x23D55C", VA = "0x23D55C")]
		private void Check()
		{
		}
	}
}
[Token(Token = "0x20000C2")]
public class HureaiManager : MonoBehaviour
{
	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1D4180", Offset = "0x1D4180", VA = "0x1D4180")]
	public HureaiManager()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x1D4188", Offset = "0x1D4188", VA = "0x1D4188")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1D418C", Offset = "0x1D418C", VA = "0x1D418C")]
	private void Update()
	{
	}
}
namespace Game
{
	[Token(Token = "0x20000C3")]
	public class HureaiVoice : MonoBehaviour
	{
		[Token(Token = "0x4000433")]
		private const string m_voiceFilePath_JP = "Sounds/VOICE/jp/MiniGame/";

		[Token(Token = "0x4000434")]
		private const string m_voiceFilePath_EN = "Sounds/VOICE/en/MiniGame/";

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string[] m_soundNames;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_prevPlayNo;

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x241AD8", Offset = "0x241AD8", VA = "0x241AD8")]
		public HureaiVoice()
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x241AE8", Offset = "0x241AE8", VA = "0x241AE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x241C98", Offset = "0x241C98", VA = "0x241C98")]
		public void Play()
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x236CA0", Offset = "0x236CA0", VA = "0x236CA0")]
		public void Play(AudioSource source)
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public class HureaiVoiceManager : SingletonMonoBehaviour<HureaiVoiceManager>
	{
		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public AudioSource m_holoAudioSource;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public HureaiVoice m_intro;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public HureaiVoice m_finish;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public HureaiVoice m_idle_LookAround;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public HureaiVoice m_idle_Nobi;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public HureaiVoice m_idle_Akubi;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public HureaiVoice m_idle_Scary;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public HureaiVoice m_bodyTouchVoice_Dislike;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public HureaiVoice m_bodyTouchVoice_Like;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public HureaiVoice m_lockwindow;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public HureaiVoice m_lockDoor;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public HureaiVoice m_lockDesk;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public HureaiVoice m_lockWaterMill;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public HureaiVoice m_lockChair;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		public HureaiVoice m_lockAround;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public HureaiVoice m_eyestoEyes;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public HureaiVoice m_sitNextTo;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public HureaiVoice m_sitNextTo_brushToPlayer;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public HureaiVoice m_sitNextTo_brushToPlayer_Failed;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public HureaiVoice m_tailTouch_Like;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		public HureaiVoice m_tailTouch_Dislike;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public HureaiVoice m_tailLock;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		public HureaiVoice m_tailLock_LongTime;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public HureaiVoice m_tailBrush;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		public HureaiVoice m_tailBrush_Angry;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public HureaiVoice m_lockBread;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		public HureaiVoice m_presentBread;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public HureaiVoice m_notGiveBread;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		public HureaiVoice m_eatBread;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public HureaiVoice m_ashamedToIdle;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		public HureaiVoice m_headBrush;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public HureaiVoice m_headBrush_Finish;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		public HureaiVoice m_headBrush_AngryFinish;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public HureaiVoice m_extra_bon;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		public HureaiVoice m_extra_happy;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public HureaiVoice m_extra_angry;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		public HureaiVoice m_extra_sad;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public HureaiVoice m_tailBrushPatience;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		public HureaiVoice m_extra_surprised;

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x2425E4", Offset = "0x2425E4", VA = "0x2425E4")]
		public HureaiVoiceManager()
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x239D98", Offset = "0x239D98", VA = "0x239D98")]
		public bool IsTalk()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000C5")]
	public class Bread : LookObjComponent
	{
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x28AE0C", Offset = "0x28AE0C", VA = "0x28AE0C")]
		public Bread()
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x28AE14", Offset = "0x28AE14", VA = "0x28AE14")]
		private void Start()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	public class Chair : LookObjComponent
	{
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x28B7A0", Offset = "0x28B7A0", VA = "0x28B7A0")]
		public Chair()
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x28B7A8", Offset = "0x28B7A8", VA = "0x28B7A8")]
		private void Start()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	public class Desk : LookObjComponent
	{
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x373674", Offset = "0x373674", VA = "0x373674")]
		public Desk()
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x37367C", Offset = "0x37367C", VA = "0x37367C")]
		private void Start()
		{
		}
	}
	[Token(Token = "0x20000C8")]
	public class Door : LookObjComponent
	{
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x3736AC", Offset = "0x3736AC", VA = "0x3736AC")]
		public Door()
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x3736B4", Offset = "0x3736B4", VA = "0x3736B4")]
		private void Start()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public class JuteBag : LookObjComponent
	{
		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x2451BC", Offset = "0x2451BC", VA = "0x2451BC")]
		public JuteBag()
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x245284", Offset = "0x245284", VA = "0x245284")]
		private void Start()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public abstract class LookObjComponent : MessageComponent
	{
		[Token(Token = "0x400045E")]
		private const float VANISH_TIME = 1.1f;

		[Token(Token = "0x400045F")]
		private const float GAUGE_ACTIVE_TIME = 1f;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameObject[] m_childObjs;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_catchPoint;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_isInitItem;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool m_isReAction;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_fLookTime;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_isLook;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool m_isGaugeActive;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RimController m_rimController;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private GameObject m_keepPushEffectGameObject;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HureaiKeepPushEffect m_keepPushEffect;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Transform m_keepEffectPos;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public eMessageType eSendMessageToHolo;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_isPause;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_object;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private string m_objectSearchPath;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Collider m_collision;

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x2451C0", Offset = "0x2451C0", VA = "0x2451C0")]
		protected LookObjComponent()
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x249D54", Offset = "0x249D54", VA = "0x249D54")]
		public RimController GetRimController()
		{
			return null;
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x249D5C", Offset = "0x249D5C", VA = "0x249D5C")]
		public void ParamReset()
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x249D68", Offset = "0x249D68", VA = "0x249D68")]
		private void Start()
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x249D78", Offset = "0x249D78", VA = "0x249D78", Slot = "5")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x24A094", Offset = "0x24A094", VA = "0x24A094")]
		public void Update()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x24A0A4", Offset = "0x24A0A4", VA = "0x24A0A4")]
		public void LookCheck()
		{
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x24A304", Offset = "0x24A304", VA = "0x24A304")]
		public bool IsDicision()
		{
			return default(bool);
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x24A2E0", Offset = "0x24A2E0", VA = "0x24A2E0")]
		public bool IsDicisionEffectActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x24A380", Offset = "0x24A380", VA = "0x24A380")]
		public void ChangeForm(int iIndex)
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x24A5B4", Offset = "0x24A5B4", VA = "0x24A5B4", Slot = "4")]
		public override void ReceiveMessage(eMessageType message, float extraParam1)
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x24ADA4", Offset = "0x24ADA4", VA = "0x24ADA4")]
		public Transform GetCatchPoint()
		{
			return null;
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x24ADAC", Offset = "0x24ADAC", VA = "0x24ADAC")]
		public void SetCatchPoint(Transform param)
		{
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x24AD9C", Offset = "0x24AD9C", VA = "0x24AD9C")]
		public bool GetReAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x24A378", Offset = "0x24A378", VA = "0x24A378")]
		public void SetReAction(bool param)
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public class WaterMill : LookObjComponent
	{
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x1D3040", Offset = "0x1D3040", VA = "0x1D3040")]
		public WaterMill()
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x1D3048", Offset = "0x1D3048", VA = "0x1D3048")]
		private void Start()
		{
		}
	}
	[Token(Token = "0x20000CC")]
	public class Window : LookObjComponent
	{
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x1D3078", Offset = "0x1D3078", VA = "0x1D3078")]
		public Window()
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x1D3080", Offset = "0x1D3080", VA = "0x1D3080")]
		private void Start()
		{
		}
	}
}
[Token(Token = "0x20000CD")]
public class ScriptableCharacterFadeParameter : ScriptableObject
{
	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<CharacterFadeParameter> m_param;

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x2B9368", Offset = "0x2B9368", VA = "0x2B9368")]
	public ScriptableCharacterFadeParameter()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CE")]
public class CharacterFadeParameter
{
	[Serializable]
	[Token(Token = "0x20000CF")]
	public class Data
	{
		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CharacterFadeComponent.eType m_type;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_size;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_startPath;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string m_endPath;

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x26CA54", Offset = "0x26CA54", VA = "0x26CA54")]
		public Data()
		{
		}
	}

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string m_name;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<Data> m_data;

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x26CA4C", Offset = "0x26CA4C", VA = "0x26CA4C")]
	public CharacterFadeParameter()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D0")]
public class PA_CheckPoint : PlayableAsset
{
	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x2B68C4", Offset = "0x2B68C4", VA = "0x2B68C4")]
	public PA_CheckPoint()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x2B68CC", Offset = "0x2B68CC", VA = "0x2B68CC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}
}
namespace Game
{
	[Serializable]
	[Token(Token = "0x20000D1")]
	public class PA_Effect : PlayableAsset
	{
		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string m_resourceName;

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x252FE4", Offset = "0x252FE4", VA = "0x252FE4")]
		public PA_Effect()
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x253084", Offset = "0x253084", VA = "0x253084", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}
	}
	[Serializable]
	[Token(Token = "0x20000D2")]
	public class PA_IsHoloRun : PlayableAsset
	{
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x253240", Offset = "0x253240", VA = "0x253240")]
		public PA_IsHoloRun()
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x253248", Offset = "0x253248", VA = "0x253248", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}
	}
	[Serializable]
	[Token(Token = "0x20000D3")]
	public class PA_Marker : PlayableAsset
	{
		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public FlagManager.EVENT_FLAG_NAME m_eName;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_successParam;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ExposedReference<PlayableDirector> m_playableDirector;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_rewindTime;

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x253328", Offset = "0x253328", VA = "0x253328")]
		public PA_Marker()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x253340", Offset = "0x253340", VA = "0x253340", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}
	}
	[Serializable]
	[Token(Token = "0x20000D4")]
	public class PA_Message : PlayableAsset
	{
		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public eMessageID m_eMessageID;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eMessageType m_eMessageType;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_fExParam1;

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x253568", Offset = "0x253568", VA = "0x253568")]
		public PA_Message()
		{
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x253570", Offset = "0x253570", VA = "0x253570", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}
	}
	[Serializable]
	[Token(Token = "0x20000D5")]
	public class PA_Pause : PlayableAsset
	{
		[Token(Token = "0x6000502")]
		[Address(RVA = "0x2536DC", Offset = "0x2536DC", VA = "0x2536DC")]
		public PA_Pause()
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x2536E4", Offset = "0x2536E4", VA = "0x2536E4", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}
	}
	[Token(Token = "0x20000D6")]
	public class PA_Serif : PlayableAsset
	{
		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string m_serifID;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_morphName;

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x2537EC", Offset = "0x2537EC", VA = "0x2537EC")]
		public PA_Serif()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x25388C", Offset = "0x25388C", VA = "0x25388C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}
	}
}
[Token(Token = "0x20000D7")]
public class PB_CheckPoint : PlayableBehaviour
{
	[Token(Token = "0x6000506")]
	[Address(RVA = "0x2B6974", Offset = "0x2B6974", VA = "0x2B6974")]
	public PB_CheckPoint()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x2B697C", Offset = "0x2B697C", VA = "0x2B697C", Slot = "5")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x2B6980", Offset = "0x2B6980", VA = "0x2B6980", Slot = "6")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x2B6984", Offset = "0x2B6984", VA = "0x2B6984", Slot = "9")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x2B6988", Offset = "0x2B6988", VA = "0x2B6988", Slot = "10")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x2B698C", Offset = "0x2B698C", VA = "0x2B698C", Slot = "11")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}
}
namespace Game
{
	[Token(Token = "0x20000D8")]
	public class PB_Effect : PlayableBehaviour
	{
		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public EffectGroup m_refEffectGroup;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string m_resourceName;

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x2531A0", Offset = "0x2531A0", VA = "0x2531A0")]
		public PB_Effect()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x253A84", Offset = "0x253A84", VA = "0x253A84", Slot = "5")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x253A88", Offset = "0x253A88", VA = "0x253A88", Slot = "6")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x253A8C", Offset = "0x253A8C", VA = "0x253A8C", Slot = "9")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x253CC8", Offset = "0x253CC8", VA = "0x253CC8", Slot = "10")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x253CCC", Offset = "0x253CCC", VA = "0x253CCC", Slot = "11")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public class PB_IsHoloRun : PlayableBehaviour
	{
		[Token(Token = "0x6000512")]
		[Address(RVA = "0x253CD0", Offset = "0x253CD0", VA = "0x253CD0")]
		public PB_IsHoloRun()
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x253CD8", Offset = "0x253CD8", VA = "0x253CD8", Slot = "5")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x253CDC", Offset = "0x253CDC", VA = "0x253CDC", Slot = "6")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x253CE0", Offset = "0x253CE0", VA = "0x253CE0", Slot = "9")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x253D90", Offset = "0x253D90", VA = "0x253D90", Slot = "10")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x253E8C", Offset = "0x253E8C", VA = "0x253E8C", Slot = "11")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public class PB_Marker : PlayableBehaviour
	{
		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FlagManager.EVENT_FLAG_NAME m_eName;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_successParam;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayableDirector m_playableDirector;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_rewindTime;

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x253550", Offset = "0x253550", VA = "0x253550")]
		public PB_Marker()
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x253E90", Offset = "0x253E90", VA = "0x253E90", Slot = "5")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x253E94", Offset = "0x253E94", VA = "0x253E94", Slot = "6")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x253E98", Offset = "0x253E98", VA = "0x253E98", Slot = "9")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x253FD8", Offset = "0x253FD8", VA = "0x253FD8", Slot = "10")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x253FDC", Offset = "0x253FDC", VA = "0x253FDC", Slot = "11")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public class PB_Message : PlayableBehaviour
	{
		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public eMessageID m_eMessageID;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public eMessageType m_eMessageType;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_fExParam1;

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x2536D4", Offset = "0x2536D4", VA = "0x2536D4")]
		public PB_Message()
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x253FE0", Offset = "0x253FE0", VA = "0x253FE0", Slot = "5")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x253FE4", Offset = "0x253FE4", VA = "0x253FE4", Slot = "6")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x253FE8", Offset = "0x253FE8", VA = "0x253FE8", Slot = "9")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x2540C4", Offset = "0x2540C4", VA = "0x2540C4", Slot = "10")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x2540C8", Offset = "0x2540C8", VA = "0x2540C8", Slot = "11")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class PB_Pause : PlayableBehaviour
	{
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x2537E4", Offset = "0x2537E4", VA = "0x2537E4")]
		public PB_Pause()
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x2540CC", Offset = "0x2540CC", VA = "0x2540CC", Slot = "5")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x25420C", Offset = "0x25420C", VA = "0x25420C", Slot = "6")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x25434C", Offset = "0x25434C", VA = "0x25434C", Slot = "9")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x254350", Offset = "0x254350", VA = "0x254350", Slot = "10")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x254354", Offset = "0x254354", VA = "0x254354", Slot = "11")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}
	}
	[Token(Token = "0x20000DD")]
	public class PB_Serif : PlayableBehaviour
	{
		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string m_serifID;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string m_morphName;

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x2539C8", Offset = "0x2539C8", VA = "0x2539C8")]
		public PB_Serif()
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x254358", Offset = "0x254358", VA = "0x254358", Slot = "6")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x254578", Offset = "0x254578", VA = "0x254578", Slot = "9")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x2546E4", Offset = "0x2546E4", VA = "0x2546E4", Slot = "10")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x2547D8", Offset = "0x2547D8", VA = "0x2547D8", Slot = "11")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public class PostEffect : MonoBehaviour
	{
		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Material material;

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x258740", Offset = "0x258740", VA = "0x258740")]
		public PostEffect()
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x258748", Offset = "0x258748", VA = "0x258748")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public class MaruPekeChange : MonoBehaviour
	{
		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private SetUIString m_JPString;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private SetUIString m_ENString;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_change;

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x24B810", Offset = "0x24B810", VA = "0x24B810")]
		public MaruPekeChange()
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x24B818", Offset = "0x24B818", VA = "0x24B818")]
		private void Start()
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x24B974", Offset = "0x24B974", VA = "0x24B974")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class SAWSaveData : SingletonMonoBehaviour<SAWSaveData>
	{
		[Token(Token = "0x20000E1")]
		public enum eSubTitle
		{
			[Token(Token = "0x40004B6")]
			OFF,
			[Token(Token = "0x40004B7")]
			ON_MOVE_ENABLE,
			[Token(Token = "0x40004B8")]
			ON
		}

		[Token(Token = "0x20000E2")]
		public enum ePostProcess
		{
			[Token(Token = "0x40004BA")]
			LOW,
			[Token(Token = "0x40004BB")]
			HIGH
		}

		[Token(Token = "0x20000E3")]
		public enum eTessellation
		{
			[Token(Token = "0x40004BD")]
			OFF,
			[Token(Token = "0x40004BE")]
			ON
		}

		[Token(Token = "0x20000E4")]
		public enum eLanguage
		{
			[Token(Token = "0x40004C0")]
			JP,
			[Token(Token = "0x40004C1")]
			EN,
			[Token(Token = "0x40004C2")]
			TC,
			[Token(Token = "0x40004C3")]
			SC
		}

		[Token(Token = "0x20000E5")]
		public enum eResolutionType
		{
			[Token(Token = "0x40004C5")]
			_08,
			[Token(Token = "0x40004C6")]
			_10,
			[Token(Token = "0x40004C7")]
			_12,
			[Token(Token = "0x40004C8")]
			_14,
			[Token(Token = "0x40004C9")]
			_16,
			[Token(Token = "0x40004CA")]
			_18,
			[Token(Token = "0x40004CB")]
			_20,
			[Token(Token = "0x40004CC")]
			_Android
		}

		[Serializable]
		[Token(Token = "0x20000E6")]
		public class SaveData
		{
			[Token(Token = "0x40004CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public int m_firstPlayFlag;

			[Token(Token = "0x40004CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			public int m_chapterClearNum;

			[Token(Token = "0x40004CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public int m_languageType;

			[Token(Token = "0x40004D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			public float m_volumeBGM;

			[Token(Token = "0x40004D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public float m_volumeSE;

			[Token(Token = "0x40004D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			public float m_volumeHoloVoice;

			[Token(Token = "0x40004D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public float m_volumeLawrenceVoice;

			[Token(Token = "0x40004D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			public int m_subtitleType;

			[Token(Token = "0x40004D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public int m_postprocessType;

			[Token(Token = "0x40004D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[SerializeField]
			public int m_tessellationType;

			[Token(Token = "0x40004D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public int m_screenSizeType;

			[Token(Token = "0x40004D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			public int m_enableShadow;

			[Token(Token = "0x40004D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public int m_enablePostEffect;

			[Token(Token = "0x40004DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			public int m_selectChapterNum;

			[Token(Token = "0x40004DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			public float m_checkpointTime;

			[Token(Token = "0x40004DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			public int m_checkSelectChapterNo;

			[Token(Token = "0x40004DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			public int m_hureaiListLookDoor;

			[Token(Token = "0x40004DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[SerializeField]
			public int m_hureaiListLookHashigo;

			[Token(Token = "0x40004DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			public int m_hureaiListLookWaterMill;

			[Token(Token = "0x40004E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[SerializeField]
			public int m_hureaiListLookDesk;

			[Token(Token = "0x40004E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			public int m_hureaiListLookBread;

			[Token(Token = "0x40004E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[SerializeField]
			public int m_hureaiListApathyHolo;

			[Token(Token = "0x40004E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[SerializeField]
			public int m_hureaiListBrush;

			[Token(Token = "0x40004E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[SerializeField]
			public int m_hureaiListPresentBread;

			[Token(Token = "0x40004E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[SerializeField]
			public int m_hureaiListAshamedToIdle;

			[Token(Token = "0x40004E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[SerializeField]
			public int m_hureaiListTouchHead;

			[Token(Token = "0x40004E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			public int m_hureaiListTouchTail;

			[Token(Token = "0x40004E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[SerializeField]
			public int m_easterEggFlag;

			[Token(Token = "0x600057F")]
			[Address(RVA = "0x25CDBC", Offset = "0x25CDBC", VA = "0x25CDBC")]
			public SaveData()
			{
			}

			[Token(Token = "0x6000580")]
			[Address(RVA = "0x25DCF0", Offset = "0x25DCF0", VA = "0x25DCF0")]
			public void Init()
			{
			}
		}

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string SavePath;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string SaveName;

		[Token(Token = "0x4000492")]
		public const int LANGUAGE_MAX = 4;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private bool m_bDontLoad;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public int m_debugChapterClearNum;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private SaveData m_saveData;

		[Token(Token = "0x4000496")]
		private const string m_firstPlayFlagSavePath = "FIRST_PLAY";

		[Token(Token = "0x4000497")]
		private const string m_chapterClearNumSavePath = "CHAPTER_CLEAR_NUM";

		[Token(Token = "0x4000498")]
		private const string m_languageTypeSavePath = "LANGUAGE_TYPE";

		[Token(Token = "0x4000499")]
		private const string m_volumeBGMSavePath = "BGM";

		[Token(Token = "0x400049A")]
		private const string m_volumeSESavePath = "SE";

		[Token(Token = "0x400049B")]
		private const string m_volumeVoiceSavePath = "VOICE";

		[Token(Token = "0x400049C")]
		private const string m_volumeHoloVoiceSavePath = "HOLO_VOICE";

		[Token(Token = "0x400049D")]
		private const string m_volumeLawrenceVoiceSavePath = "LAWRENCE_VOICE";

		[Token(Token = "0x400049E")]
		private const string m_subtitleTypeSavePath = "SUBTITLE";

		[Token(Token = "0x400049F")]
		private const string m_postProcessTypeSavePath = "POSTPROCESS";

		[Token(Token = "0x40004A0")]
		private const string m_tessellationTypeSavePath = "TESSELLATION";

		[Token(Token = "0x40004A1")]
		private const string m_screenSizeTypeSavePath = "SCREEN_SIZE";

		[Token(Token = "0x40004A2")]
		private const string m_enableShadowSavePath = "SHADOW";

		[Token(Token = "0x40004A3")]
		private const string m_enablePostEffectSavePath = "POST_EFFECT";

		[Token(Token = "0x40004A4")]
		private const string m_checkpointTimeSavePath = "CHECK_POINT";

		[Token(Token = "0x40004A5")]
		private const string m_hureaiListLookDoorPath = "HURAILIST_LOOKDOAR";

		[Token(Token = "0x40004A6")]
		private const string m_hureaiListLookHashigoPath = "HURAILIST_LOOKHASHIGO";

		[Token(Token = "0x40004A7")]
		private const string m_hureaiListLookWaterMillPath = "HURAILIST_LOOKWATERMILL";

		[Token(Token = "0x40004A8")]
		private const string m_hureaiListLookDeskPath = "HURAILIST_LOOKDESK";

		[Token(Token = "0x40004A9")]
		private const string m_hureaiListLookBreadPath = "HURAILIST_LOOKBREAD";

		[Token(Token = "0x40004AA")]
		private const string m_hureaiListApathyHoloPath = "HURAILIST_APATHYHOLO";

		[Token(Token = "0x40004AB")]
		private const string m_hureaiListBrushPath = "HURAILIST_BRUSH";

		[Token(Token = "0x40004AC")]
		private const string m_hureaiListBreadPath = "HURAILIST_APATHYHOLO";

		[Token(Token = "0x40004AD")]
		private const string m_hureaiListPresentBreadPath = "HURAILIST_PRESENTBREAD";

		[Token(Token = "0x40004AE")]
		private const string m_hureaiListAshamedToIdlePath = "HURAILIST_ASHAMEDTOIDLE";

		[Token(Token = "0x40004AF")]
		private const string m_hureaiListTouchHeadPath = "HURAILIST_TOUCHHEAD";

		[Token(Token = "0x40004B0")]
		private const string m_hureaiListTouchTailPath = "HURAILIST_TOUCHTAIL";

		[Token(Token = "0x40004B1")]
		private const string m_easterEggFlagPath = "EASTEREGG_FLAG";

		[Token(Token = "0x40004B2")]
		public const int FIRST_CREDIT = 4;

		[Token(Token = "0x40004B3")]
		public const int HUREAI_UNLOCK = 5;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_isInit;

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x25CD08", Offset = "0x25CD08", VA = "0x25CD08")]
		public SAWSaveData()
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x25CDC4", Offset = "0x25CDC4", VA = "0x25CDC4")]
		public void DebugSetParametor()
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x25CDEC", Offset = "0x25CDEC", VA = "0x25CDEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x25CDF0", Offset = "0x25CDF0", VA = "0x25CDF0")]
		public void Init()
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x25D5AC", Offset = "0x25D5AC", VA = "0x25D5AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x25D5B0", Offset = "0x25D5B0", VA = "0x25D5B0")]
		private void DebugExpo()
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x25D5B4", Offset = "0x25D5B4", VA = "0x25D5B4")]
		private new void OnDestroy()
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x25D5B8", Offset = "0x25D5B8", VA = "0x25D5B8")]
		public void OnFirstPlay()
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x25B000", Offset = "0x25B000", VA = "0x25B000")]
		public void Save()
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x25CF74", Offset = "0x25CF74", VA = "0x25CF74")]
		public void Load()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x25D734", Offset = "0x25D734", VA = "0x25D734")]
		private void SaveBinary()
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x25D948", Offset = "0x25D948", VA = "0x25D948")]
		private void LoadBinary()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x25D62C", Offset = "0x25D62C", VA = "0x25D62C")]
		public void FirstPlayParamSetting()
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x25DE04", Offset = "0x25DE04", VA = "0x25DE04")]
		public void DeleteData()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x25DE10", Offset = "0x25DE10", VA = "0x25DE10")]
		public void ResetSoundSetting()
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x25DE88", Offset = "0x25DE88", VA = "0x25DE88")]
		public void ResetSubTitleSetting()
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x25AF1C", Offset = "0x25AF1C", VA = "0x25AF1C")]
		public void ResetRenderSetting()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x242DA4", Offset = "0x242DA4", VA = "0x242DA4")]
		public int GetFirstPlayFlag()
		{
			return default(int);
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x25D604", Offset = "0x25D604", VA = "0x25D604")]
		public void SetFirstPlayFlag(int param)
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x23F604", Offset = "0x23F604", VA = "0x23F604")]
		public int GetChapterClearNum()
		{
			return default(int);
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x23F628", Offset = "0x23F628", VA = "0x23F628")]
		public void SetChapterClearNum(int param)
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x23D538", Offset = "0x23D538", VA = "0x23D538")]
		public int GetLanguageType()
		{
			return default(int);
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x25DEB0", Offset = "0x25DEB0", VA = "0x25DEB0")]
		public void SetLanguageType(eLanguage param)
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x25DF88", Offset = "0x25DF88", VA = "0x25DF88")]
		public float GetVolumeBGM()
		{
			return default(float);
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x25DFAC", Offset = "0x25DFAC", VA = "0x25DFAC")]
		public void SetVolumeBGM(float param)
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x25DFDC", Offset = "0x25DFDC", VA = "0x25DFDC")]
		public float GetVolumeSE()
		{
			return default(float);
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x25E000", Offset = "0x25E000", VA = "0x25E000")]
		public void SetVolumeSE(float param)
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x25E030", Offset = "0x25E030", VA = "0x25E030")]
		public float GetVolumeHoloVoice()
		{
			return default(float);
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x25E054", Offset = "0x25E054", VA = "0x25E054")]
		public void SetVolumeHoloVoice(float param)
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0x25E084", Offset = "0x25E084", VA = "0x25E084")]
		public float GetVolumeLawrenceVoice()
		{
			return default(float);
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x25E0A8", Offset = "0x25E0A8", VA = "0x25E0A8")]
		public void SetVolumeLawrenceVoice(float param)
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x25E0D8", Offset = "0x25E0D8", VA = "0x25E0D8")]
		public int GetSubTitleType()
		{
			return default(int);
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x25E0FC", Offset = "0x25E0FC", VA = "0x25E0FC")]
		public void SetSubTitleType(int param)
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x25E124", Offset = "0x25E124", VA = "0x25E124")]
		public int GetPostProcessType()
		{
			return default(int);
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x25E148", Offset = "0x25E148", VA = "0x25E148")]
		public void SetPostProcessType(int param)
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x25B7C8", Offset = "0x25B7C8", VA = "0x25B7C8")]
		public int GetTessellationType()
		{
			return default(int);
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x25AFD8", Offset = "0x25AFD8", VA = "0x25AFD8")]
		public void SetTessellationType(int param)
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x25B7A4", Offset = "0x25B7A4", VA = "0x25B7A4")]
		public int GetScreenSizeType()
		{
			return default(int);
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x25AFB0", Offset = "0x25AFB0", VA = "0x25AFB0")]
		public void SetScreenSizeType(int param)
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x25E170", Offset = "0x25E170", VA = "0x25E170")]
		public int GetEnableShadow()
		{
			return default(int);
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x25E194", Offset = "0x25E194", VA = "0x25E194")]
		public void SetEnableShadow(int param)
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x25E1BC", Offset = "0x25E1BC", VA = "0x25E1BC")]
		public int GetPostEffect()
		{
			return default(int);
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x25E1E0", Offset = "0x25E1E0", VA = "0x25E1E0")]
		public void SetPostEffect(int param)
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x244F14", Offset = "0x244F14", VA = "0x244F14")]
		public int GetSelectChapterNum()
		{
			return default(int);
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x244F38", Offset = "0x244F38", VA = "0x244F38")]
		public void SetSelectChapterNum(int param)
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x25E208", Offset = "0x25E208", VA = "0x25E208")]
		public float GetCheckPointTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x252B78", Offset = "0x252B78", VA = "0x252B78")]
		public void SetCheckPointTime(float param)
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x25E22C", Offset = "0x25E22C", VA = "0x25E22C")]
		public int GetCheckSelectChapterNo()
		{
			return default(int);
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x252BA8", Offset = "0x252BA8", VA = "0x252BA8")]
		public void SetCheckSelectChapterNo(int param)
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x23E724", Offset = "0x23E724", VA = "0x23E724")]
		public int GetHureaiListLookDoor()
		{
			return default(int);
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x2360F4", Offset = "0x2360F4", VA = "0x2360F4")]
		public void SetHureaiListLookDoor(int param)
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x23E748", Offset = "0x23E748", VA = "0x23E748")]
		public int GetHureaiListLookHashigo()
		{
			return default(int);
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x236144", Offset = "0x236144", VA = "0x236144")]
		public void SetHureaiListLookHashigo(int param)
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x23E76C", Offset = "0x23E76C", VA = "0x23E76C")]
		public int GetHureaiListLookWaterMill()
		{
			return default(int);
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x23611C", Offset = "0x23611C", VA = "0x23611C")]
		public void SetHureaiListLookWaterMill(int param)
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x23E790", Offset = "0x23E790", VA = "0x23E790")]
		public int GetHureaiListLookDesk()
		{
			return default(int);
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x2360CC", Offset = "0x2360CC", VA = "0x2360CC")]
		public void SetHureaiListLookDesk(int param)
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x23E7B4", Offset = "0x23E7B4", VA = "0x23E7B4")]
		public int GetHureaiListLookBread()
		{
			return default(int);
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x25E250", Offset = "0x25E250", VA = "0x25E250")]
		public void SetHureaiListLookBread(int param)
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x23E7D8", Offset = "0x23E7D8", VA = "0x23E7D8")]
		public int GetHureaiListApathyHolo()
		{
			return default(int);
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x25E278", Offset = "0x25E278", VA = "0x25E278")]
		public void SetHureaiListApathyHolo(int param)
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x23E7FC", Offset = "0x23E7FC", VA = "0x23E7FC")]
		public int GetHureaiListBrush()
		{
			return default(int);
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x25E2A0", Offset = "0x25E2A0", VA = "0x25E2A0")]
		public void SetHureaiListBrush(int param)
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x23E820", Offset = "0x23E820", VA = "0x23E820")]
		public int GetHureaiListPresentBread()
		{
			return default(int);
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x25E2C8", Offset = "0x25E2C8", VA = "0x25E2C8")]
		public void SetHureaiListPresentBread(int param)
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x23E844", Offset = "0x23E844", VA = "0x23E844")]
		public int GetHureaiListAshamedToIdle()
		{
			return default(int);
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x25E2F0", Offset = "0x25E2F0", VA = "0x25E2F0")]
		public void SetHureaiListAshamedToIdle(int param)
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x23E868", Offset = "0x23E868", VA = "0x23E868")]
		public int GetHureaiListTouchHead()
		{
			return default(int);
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x25E318", Offset = "0x25E318", VA = "0x25E318")]
		public void SetHureaiListTouchHead(int param)
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x23E88C", Offset = "0x23E88C", VA = "0x23E88C")]
		public int GetHureaiListTouchTail()
		{
			return default(int);
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x25E340", Offset = "0x25E340", VA = "0x25E340")]
		public void SetHureaiListTouchTail(int param)
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x25E368", Offset = "0x25E368", VA = "0x25E368")]
		public bool GetEasterEgg(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x25E3A8", Offset = "0x25E3A8", VA = "0x25E3A8")]
		public void SetEasterEgg(int id)
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x25E400", Offset = "0x25E400", VA = "0x25E400")]
		public void CheckBitCount()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x25E56C", Offset = "0x25E56C", VA = "0x25E56C")]
		private int bitCount(int bits)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20000E7")]
	public class SawSceneManager : SingletonMonoBehaviour<SawSceneManager>
	{
		[Token(Token = "0x20000E8")]
		public enum SCENE_TYPE
		{
			[Token(Token = "0x40004EE")]
			TITLE,
			[Token(Token = "0x40004EF")]
			MAIN,
			[Token(Token = "0x40004F0")]
			CREDIT,
			[Token(Token = "0x40004F1")]
			TEST
		}

		[Token(Token = "0x20002BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AE914", Offset = "0x1AE914")]
		private sealed class <LoadSceneCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4000B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal AsyncOperation <async>__0;

			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal SawSceneManager $this;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x17000123")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x600114B")]
				[Address(RVA = "0x25EA7C", Offset = "0x25EA7C", VA = "0x25EA7C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000124")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600114C")]
				[Address(RVA = "0x25EA84", Offset = "0x25EA84", VA = "0x25EA84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001149")]
			[Address(RVA = "0x25E7D8", Offset = "0x25E7D8", VA = "0x25E7D8")]
			[DebuggerHidden]
			public <LoadSceneCoroutine>c__Iterator0()
			{
			}

			[Token(Token = "0x600114A")]
			[Address(RVA = "0x25E7E0", Offset = "0x25E7E0", VA = "0x25E7E0", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600114D")]
			[Address(RVA = "0x25EA8C", Offset = "0x25EA8C", VA = "0x25EA8C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600114E")]
			[Address(RVA = "0x25EAA0", Offset = "0x25EAA0", VA = "0x25EAA0", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Scene m_currentScene;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_nextSceneName;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AE85C", Offset = "0x1AE85C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1AE85C", Offset = "0x1AE85C")]
		private bool <IsFinishLoadScene>k__BackingField;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AE890", Offset = "0x1AE890")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1AE890", Offset = "0x1AE890")]
		private bool <IsNextSceneActive>k__BackingField;

		[Token(Token = "0x17000058")]
		public bool IsFinishLoadScene
		{
			[Token(Token = "0x6000584")]
			[Address(RVA = "0x25E634", Offset = "0x25E634", VA = "0x25E634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AE8C4", Offset = "0x1AE8C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000585")]
			[Address(RVA = "0x25E63C", Offset = "0x25E63C", VA = "0x25E63C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AE8D4", Offset = "0x1AE8D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000059")]
		public bool IsNextSceneActive
		{
			[Token(Token = "0x6000586")]
			[Address(RVA = "0x25E644", Offset = "0x25E644", VA = "0x25E644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AE8E4", Offset = "0x1AE8E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000587")]
			[Address(RVA = "0x25E64C", Offset = "0x25E64C", VA = "0x25E64C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AE8F4", Offset = "0x1AE8F4")]
			set
			{
			}
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x25E594", Offset = "0x25E594", VA = "0x25E594")]
		public SawSceneManager()
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x25E624", Offset = "0x25E624", VA = "0x25E624")]
		public Scene GetCurrentScene()
		{
			return default(Scene);
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x25E62C", Offset = "0x25E62C", VA = "0x25E62C")]
		public void SetCurrentScene(Scene param)
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x25E654", Offset = "0x25E654", VA = "0x25E654")]
		private void Start()
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x25E674", Offset = "0x25E674", VA = "0x25E674")]
		private void Update()
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x25E678", Offset = "0x25E678", VA = "0x25E678")]
		public void ChangeScene(SCENE_TYPE eType)
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x25E754", Offset = "0x25E754", VA = "0x25E754")]
		[DebuggerHidden]
		private IEnumerator LoadSceneCoroutine()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E9")]
	public class SceneBoot : MonoBehaviour
	{
		[Token(Token = "0x20000EA")]
		private enum eAssetBundleStep
		{
			[Token(Token = "0x40004F8")]
			ANIMATION,
			[Token(Token = "0x40004F9")]
			MATERIAL,
			[Token(Token = "0x40004FA")]
			OBJECTS,
			[Token(Token = "0x40004FB")]
			HOLO,
			[Token(Token = "0x40004FC")]
			LAWRENCE,
			[Token(Token = "0x40004FD")]
			PARAMETOR,
			[Token(Token = "0x40004FE")]
			PREFABS,
			[Token(Token = "0x40004FF")]
			SOUNDS,
			[Token(Token = "0x4000500")]
			SPRITES,
			[Token(Token = "0x4000501")]
			SCENES,
			[Token(Token = "0x4000502")]
			UIS
		}

		[Token(Token = "0x20000EB")]
		private enum eState
		{
			[Token(Token = "0x4000504")]
			ASSET_LOAD,
			[Token(Token = "0x4000505")]
			ASSET_INSTANCE,
			[Token(Token = "0x4000506")]
			LOGO_WAIT,
			[Token(Token = "0x4000507")]
			LOADING_POP,
			[Token(Token = "0x4000508")]
			CHANGE_SCENE
		}

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private eAssetBundleStep m_eAssetBundleStep;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InitLogo m_logo;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private eState m_state;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject m_mainObj;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private LoadingUI m_loading;

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x25EB28", Offset = "0x25EB28", VA = "0x25EB28")]
		public SceneBoot()
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x25EB30", Offset = "0x25EB30", VA = "0x25EB30")]
		private void Awake()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x25EDE0", Offset = "0x25EDE0", VA = "0x25EDE0")]
		private void Update()
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x25F1D8", Offset = "0x25F1D8", VA = "0x25F1D8")]
		private bool LoadAssetBundle2()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000EC")]
	public class InitLogo
	{
		[Token(Token = "0x20000ED")]
		public enum eLogoState
		{
			[Token(Token = "0x400050F")]
			IN,
			[Token(Token = "0x4000510")]
			WAIT,
			[Token(Token = "0x4000511")]
			OUT,
			[Token(Token = "0x4000512")]
			END
		}

		[Token(Token = "0x4000509")]
		private const float MIN_LOGO_TIME = 2f;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float m_logoTime;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AE984", Offset = "0x1AE984")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1AE984", Offset = "0x1AE984")]
		private eLogoState <State>k__BackingField;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Animator m_logoAnim;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AE9B8", Offset = "0x1AE9B8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1AE9B8", Offset = "0x1AE9B8")]
		private bool <CanClose>k__BackingField;

		[Token(Token = "0x1700005A")]
		public eLogoState State
		{
			[Token(Token = "0x6000591")]
			[Address(RVA = "0x2430D4", Offset = "0x2430D4", VA = "0x2430D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AE9EC", Offset = "0x1AE9EC")]
			get
			{
				return default(eLogoState);
			}
			[Token(Token = "0x6000592")]
			[Address(RVA = "0x2430DC", Offset = "0x2430DC", VA = "0x2430DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AE9FC", Offset = "0x1AE9FC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005B")]
		public bool CanClose
		{
			[Token(Token = "0x6000593")]
			[Address(RVA = "0x2430E4", Offset = "0x2430E4", VA = "0x2430E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AEA0C", Offset = "0x1AEA0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000594")]
			[Address(RVA = "0x2430EC", Offset = "0x2430EC", VA = "0x2430EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AEA1C", Offset = "0x1AEA1C")]
			set
			{
			}
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x2430CC", Offset = "0x2430CC", VA = "0x2430CC")]
		public InitLogo()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x2430F4", Offset = "0x2430F4", VA = "0x2430F4")]
		public void Init(Animator animator)
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x243104", Offset = "0x243104", VA = "0x243104")]
		public void OnUpdate()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class SceneCredit : MonoBehaviour
	{
		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject activeObj;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMesh textMesh;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextMesh textMesh2;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMesh textMesh3;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TextMesh textMesh4;

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x25FA1C", Offset = "0x25FA1C", VA = "0x25FA1C")]
		public SceneCredit()
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x25FA24", Offset = "0x25FA24", VA = "0x25FA24")]
		private void Start()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x25FA54", Offset = "0x25FA54", VA = "0x25FA54")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class SceneMain : MessageComponent
	{
		[Token(Token = "0x20000F0")]
		public enum eHoloShadowType
		{
			[Token(Token = "0x4000538")]
			Base,
			[Token(Token = "0x4000539")]
			Fire
		}

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GameObject m_titleLogo;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_map;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GameObject m_characters;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_story;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GameObject m_effect;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_easterEgg;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private BaseState<SceneMain> m_optionOpennedState;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterKeeper m_holo;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private CharacterKeeper m_Lawrence;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CharacterKeeper m_holoBakery;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Holo m_miniGameHolo;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EffectGroup m_fire;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private AudioSource m_rain;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_titleToOption;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool m_hureaiToOption;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool m_creditToOption;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int SHADER_ID_EXPOSURE;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AEA3C", Offset = "0x1AEA3C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1AEA3C", Offset = "0x1AEA3C")]
		private float <KeepSkyboxExposure>k__BackingField;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AEA70", Offset = "0x1AEA70")]
		public float m_maxTitleIntroWaitTime;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AEAAC", Offset = "0x1AEAAC")]
		public float m_maxOpenTitleWindowWaitTime;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AEAE8", Offset = "0x1AEAE8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1AEAE8", Offset = "0x1AEAE8")]
		private Transform <BgmTrans>k__BackingField;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private StateMachine<SceneMain> m_stateMachine;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_CameraGroup;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private ChapterTitleCall m_chapterTitleCall;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SphereCollider m_patCancelSphereCollider;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private Material m_holoShadowMat;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Material m_holoFireShadowMat;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_StartCameraPos;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool m_quitting;

		[Token(Token = "0x4000535")]
		private const float PUSH_FRAME = 1.5f;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_retrackFlag;

		[Token(Token = "0x1700005C")]
		public float KeepSkyboxExposure
		{
			[Token(Token = "0x60005A1")]
			[Address(RVA = "0x249D48", Offset = "0x249D48", VA = "0x249D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AEB6C", Offset = "0x1AEB6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005A2")]
			[Address(RVA = "0x25FE74", Offset = "0x25FE74", VA = "0x25FE74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AEB7C", Offset = "0x1AEB7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public CharacterKeeper Holo
		{
			[Token(Token = "0x60005A3")]
			[Address(RVA = "0x23A520", Offset = "0x23A520", VA = "0x23A520")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005A4")]
			[Address(RVA = "0x243F34", Offset = "0x243F34", VA = "0x243F34")]
			set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public Holo MiniGameHolo
		{
			[Token(Token = "0x60005A5")]
			[Address(RVA = "0x2397F0", Offset = "0x2397F0", VA = "0x2397F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0x243F3C", Offset = "0x243F3C", VA = "0x243F3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public CharacterKeeper Lawrence
		{
			[Token(Token = "0x60005A8")]
			[Address(RVA = "0x23AD18", Offset = "0x23AD18", VA = "0x23AD18")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005A9")]
			[Address(RVA = "0x243F44", Offset = "0x243F44", VA = "0x243F44")]
			set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public CharacterKeeper HoloBakery
		{
			[Token(Token = "0x60005AA")]
			[Address(RVA = "0x25FE7C", Offset = "0x25FE7C", VA = "0x25FE7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005AB")]
			[Address(RVA = "0x243F4C", Offset = "0x243F4C", VA = "0x243F4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public Transform BgmTrans
		{
			[Token(Token = "0x60005AC")]
			[Address(RVA = "0x25FE84", Offset = "0x25FE84", VA = "0x25FE84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AEB8C", Offset = "0x1AEB8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005AD")]
			[Address(RVA = "0x243D18", Offset = "0x243D18", VA = "0x243D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AEB9C", Offset = "0x1AEB9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public AudioSource RainSE
		{
			[Token(Token = "0x60005BB")]
			[Address(RVA = "0x260098", Offset = "0x260098", VA = "0x260098")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		public Material HoloShadowMat
		{
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x2601D4", Offset = "0x2601D4", VA = "0x2601D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		public Material HoloFireShadowMat
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0x2601DC", Offset = "0x2601DC", VA = "0x2601DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x25FA58", Offset = "0x25FA58", VA = "0x25FA58")]
		public SceneMain()
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x25FA6C", Offset = "0x25FA6C", VA = "0x25FA6C")]
		public GameObject GetTitleLogo()
		{
			return null;
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x25FA74", Offset = "0x25FA74", VA = "0x25FA74")]
		public void GetTitleLogoPlayOp()
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x25FB60", Offset = "0x25FB60", VA = "0x25FB60")]
		public void GetTitleLogoPlayFadeIn()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x25FC4C", Offset = "0x25FC4C", VA = "0x25FC4C")]
		public void GetTitleLogoPlayFadeOut()
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x25FD38", Offset = "0x25FD38", VA = "0x25FD38")]
		public void GetTitleLogoPlayIdle()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x25FE24", Offset = "0x25FE24", VA = "0x25FE24")]
		public void GetTitleLogoDisable()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x23A2C8", Offset = "0x23A2C8", VA = "0x23A2C8")]
		public void HureaiSetting(bool flag)
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x23D530", Offset = "0x23D530", VA = "0x23D530")]
		public BaseState<SceneMain> GetOptionOpennedState()
		{
			return null;
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x25FE8C", Offset = "0x25FE8C", VA = "0x25FE8C")]
		public void SetOptionOpennedState(BaseState<SceneMain> param)
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x252000", Offset = "0x252000", VA = "0x252000")]
		public bool GetTitleToOption()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x25FFC8", Offset = "0x25FFC8", VA = "0x25FFC8")]
		public void SetTitleToOption(bool param)
		{
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x252B70", Offset = "0x252B70", VA = "0x252B70")]
		public bool GetHureaiToOption()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x25FFD0", Offset = "0x25FFD0", VA = "0x25FFD0")]
		public void SetHureaiToOption(bool param)
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x252FDC", Offset = "0x252FDC", VA = "0x252FDC")]
		public bool GetCreditToOption()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x25FFD8", Offset = "0x25FFD8", VA = "0x25FFD8")]
		public void SetCreditToOption(bool param)
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x244434", Offset = "0x244434", VA = "0x244434")]
		public GameObject GetMap()
		{
			return null;
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x25FFE0", Offset = "0x25FFE0", VA = "0x25FFE0")]
		public GameObject GetEffect()
		{
			return null;
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x2445A4", Offset = "0x2445A4", VA = "0x2445A4")]
		public GameObject GetEasterEgg()
		{
			return null;
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x23AD10", Offset = "0x23AD10", VA = "0x23AD10")]
		public GameObject GetCharacters()
		{
			return null;
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x2444EC", Offset = "0x2444EC", VA = "0x2444EC")]
		public GameObject GetStory()
		{
			return null;
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x239C68", Offset = "0x239C68", VA = "0x239C68")]
		public StateMachine<SceneMain> GetFSM()
		{
			return null;
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x2601C4", Offset = "0x2601C4", VA = "0x2601C4")]
		public SphereCollider GetPatCancelSphereCollider()
		{
			return null;
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x2601CC", Offset = "0x2601CC", VA = "0x2601CC")]
		public ChapterTitleCall GetChapterTitleCall()
		{
			return null;
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x2601E4", Offset = "0x2601E4", VA = "0x2601E4")]
		public Vector3 GetStartCameraPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x23A528", Offset = "0x23A528", VA = "0x23A528")]
		public GameObject GetCameraGroup()
		{
			return null;
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x2601F8", Offset = "0x2601F8", VA = "0x2601F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x2412DC", Offset = "0x2412DC", VA = "0x2412DC")]
		public void OpenOptionCtrl()
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x2605FC", Offset = "0x2605FC", VA = "0x2605FC")]
		public void CloseWindowResumeCheck()
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x260778", Offset = "0x260778", VA = "0x260778")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x2404C0", Offset = "0x2404C0", VA = "0x2404C0")]
		public void CheckVRLost()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x260808", Offset = "0x260808", VA = "0x260808")]
		private void Update()
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x260BAC", Offset = "0x260BAC", VA = "0x260BAC", Slot = "4")]
		public override void ReceiveMessage(eMessageType message, float extraParam1)
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x261684", Offset = "0x261684", VA = "0x261684")]
		public bool LoadCheckByFade_A()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x26168C", Offset = "0x26168C", VA = "0x26168C")]
		public bool LoadCheckByFade_B()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x261694", Offset = "0x261694", VA = "0x261694")]
		public bool LoadCheckByFade_C()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x24300C", Offset = "0x24300C", VA = "0x24300C")]
		public bool LoadCheckByFade_RenderSetting()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x261784", Offset = "0x261784", VA = "0x261784")]
		public void InitChapter2()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x261788", Offset = "0x261788", VA = "0x261788")]
		public bool LoadCheckByFade_EndChapter2()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x261790", Offset = "0x261790", VA = "0x261790")]
		public bool LoadCheckByChapterTitleCall()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x240074", Offset = "0x240074", VA = "0x240074")]
		public void PauseLookObj(bool flag = true)
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x2609F4", Offset = "0x2609F4", VA = "0x2609F4")]
		private void PosReset()
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x26169C", Offset = "0x26169C", VA = "0x26169C")]
		private void ChangeTessMaterial()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x261848", Offset = "0x261848", VA = "0x261848")]
		private void ChangeTessMaterial(bool isTess, CharacterKeeper chara)
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x244F60", Offset = "0x244F60", VA = "0x244F60")]
		public void SetSkyboxExposure(float value)
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x23AF6C", Offset = "0x23AF6C", VA = "0x23AF6C")]
		public void ChangeHoloShadow(eHoloShadowType type)
		{
		}
	}
}
[Token(Token = "0x20000F1")]
public class SceneMainInstance : MonoBehaviour
{
	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x2B92B8", Offset = "0x2B92B8", VA = "0x2B92B8")]
	public SceneMainInstance()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x2B92C0", Offset = "0x2B92C0", VA = "0x2B92C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x2B9364", Offset = "0x2B9364", VA = "0x2B9364")]
	private void Update()
	{
	}
}
namespace Game
{
	[Token(Token = "0x20000F2")]
	public class SceneMainManager : SingletonMonoBehaviour<SceneMainManager>
	{
		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SceneMain m_sceneMain;

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x261DD8", Offset = "0x261DD8", VA = "0x261DD8")]
		public SceneMainManager()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x23D528", Offset = "0x23D528", VA = "0x23D528")]
		public SceneMain GetSceneMain()
		{
			return null;
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x261E68", Offset = "0x261E68", VA = "0x261E68")]
		private void Start()
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x261EF8", Offset = "0x261EF8", VA = "0x261EF8")]
		public bool IsMiniGame()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000F3")]
	public class InitState : BaseState<SceneMain>
	{
		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InitState m_instance;

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x243350", Offset = "0x243350", VA = "0x243350")]
		public InitState()
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x2433B4", Offset = "0x2433B4", VA = "0x2433B4")]
		public static InitState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x2434DC", Offset = "0x2434DC", VA = "0x2434DC", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x243BF0", Offset = "0x243BF0", VA = "0x243BF0", Slot = "5")]
		public override void Start(SceneMain main)
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x24362C", Offset = "0x24362C", VA = "0x24362C")]
		private void CreateChara(SceneMain main)
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x243F54", Offset = "0x243F54", VA = "0x243F54", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x243F58", Offset = "0x243F58", VA = "0x243F58", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class InitLightBakeState : BaseState<SceneMain>
	{
		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InitLightBakeState m_instance;

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x2427B0", Offset = "0x2427B0", VA = "0x2427B0")]
		public InitLightBakeState()
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x242814", Offset = "0x242814", VA = "0x242814")]
		public static InitLightBakeState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x24293C", Offset = "0x24293C", VA = "0x24293C", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x242B28", Offset = "0x242B28", VA = "0x242B28", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x242EF0", Offset = "0x242EF0", VA = "0x242EF0", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class TitleIntroState : BaseState<SceneMain>
	{
		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TitleIntroState m_instance;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool m_isFadeInOK;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_titleIntroWaitTime;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_openMenuWindowWaitTime;

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x1CBD40", Offset = "0x1CBD40", VA = "0x1CBD40")]
		public TitleIntroState()
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x1CBDA4", Offset = "0x1CBDA4", VA = "0x1CBDA4")]
		public static TitleIntroState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x1CBECC", Offset = "0x1CBECC", VA = "0x1CBECC", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x1CCC10", Offset = "0x1CCC10", VA = "0x1CCC10", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x1CD25C", Offset = "0x1CD25C", VA = "0x1CD25C", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class TitleState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TitleState m_instance;

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x1CD2F0", Offset = "0x1CD2F0", VA = "0x1CD2F0")]
		public TitleState()
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x1CD134", Offset = "0x1CD134", VA = "0x1CD134")]
		public static TitleState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x1CD354", Offset = "0x1CD354", VA = "0x1CD354", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x1CD970", Offset = "0x1CD970", VA = "0x1CD970", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x1CD974", Offset = "0x1CD974", VA = "0x1CD974", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class IntroHelpState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntroHelpState m_instance;

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x243FEC", Offset = "0x243FEC", VA = "0x243FEC")]
		public IntroHelpState()
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x242DC8", Offset = "0x242DC8", VA = "0x242DC8")]
		public static IntroHelpState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x244050", Offset = "0x244050", VA = "0x244050", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x24465C", Offset = "0x24465C", VA = "0x24465C", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x2447E8", Offset = "0x2447E8", VA = "0x2447E8", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class LanguageState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int m_pervLanguage;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LanguageState m_instance;

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x246634", Offset = "0x246634", VA = "0x246634")]
		public LanguageState()
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x246698", Offset = "0x246698", VA = "0x246698")]
		public static LanguageState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x2467C0", Offset = "0x2467C0", VA = "0x2467C0", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x24695C", Offset = "0x24695C", VA = "0x24695C", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x246AE8", Offset = "0x246AE8", VA = "0x246AE8", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class GameFinishPopupState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameFinishPopupState m_instance;

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x37BA9C", Offset = "0x37BA9C", VA = "0x37BA9C")]
		public GameFinishPopupState()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x37BB00", Offset = "0x37BB00", VA = "0x37BB00")]
		public static GameFinishPopupState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x37BC28", Offset = "0x37BC28", VA = "0x37BC28", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x37BD4C", Offset = "0x37BD4C", VA = "0x37BD4C", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x37BEE4", Offset = "0x37BEE4", VA = "0x37BEE4", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class IntroState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntroState m_instance;

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x24487C", Offset = "0x24487C", VA = "0x24487C")]
		public IntroState()
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x2448E0", Offset = "0x2448E0", VA = "0x2448E0")]
		public static IntroState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x244A08", Offset = "0x244A08", VA = "0x244A08", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x245124", Offset = "0x245124", VA = "0x245124", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x245128", Offset = "0x245128", VA = "0x245128", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public class ChapterTitleCallState : BaseState<SceneMain>
	{
		[Token(Token = "0x20000FC")]
		private enum eStepType
		{
			[Token(Token = "0x400054B")]
			INTRO,
			[Token(Token = "0x400054C")]
			FINISH,
			[Token(Token = "0x400054D")]
			FADE
		}

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ChapterTitleCallState m_instance;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_currentTime;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private eStepType m_eStepType;

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x28E1B4", Offset = "0x28E1B4", VA = "0x28E1B4")]
		public ChapterTitleCallState()
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x28E218", Offset = "0x28E218", VA = "0x28E218")]
		public static ChapterTitleCallState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x28E340", Offset = "0x28E340", VA = "0x28E340", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x28EE38", Offset = "0x28EE38", VA = "0x28EE38", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x28F5A8", Offset = "0x28F5A8", VA = "0x28F5A8", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class CheckPointStartState : BaseState<SceneMain>
	{
		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CheckPointStartState m_instance;

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x2924E0", Offset = "0x2924E0", VA = "0x2924E0")]
		public CheckPointStartState()
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x28C7BC", Offset = "0x28C7BC", VA = "0x28C7BC")]
		public static CheckPointStartState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x292544", Offset = "0x292544", VA = "0x292544", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x292A70", Offset = "0x292A70", VA = "0x292A70", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x292A74", Offset = "0x292A74", VA = "0x292A74", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class EndState : BaseState<SceneMain>
	{
		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static EndState m_instance;

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x376C38", Offset = "0x376C38", VA = "0x376C38")]
		public EndState()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x376C9C", Offset = "0x376C9C", VA = "0x376C9C")]
		public static EndState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x376DC4", Offset = "0x376DC4", VA = "0x376DC4", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x377174", Offset = "0x377174", VA = "0x377174", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x37725C", Offset = "0x37725C", VA = "0x37725C", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class Chapter1State : BaseState<SceneMain>
	{
		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Chapter1State m_instance;

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x28BE58", Offset = "0x28BE58", VA = "0x28BE58")]
		public Chapter1State()
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x28BEBC", Offset = "0x28BEBC", VA = "0x28BEBC")]
		public static Chapter1State GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x28BFE4", Offset = "0x28BFE4", VA = "0x28BFE4", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x28C8E4", Offset = "0x28C8E4", VA = "0x28C8E4", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x28CA90", Offset = "0x28CA90", VA = "0x28CA90", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class Chapter2State : BaseState<SceneMain>
	{
		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Chapter2State m_instance;

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x28CB24", Offset = "0x28CB24", VA = "0x28CB24")]
		public Chapter2State()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x28CB88", Offset = "0x28CB88", VA = "0x28CB88")]
		public static Chapter2State GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x28CCB0", Offset = "0x28CCB0", VA = "0x28CCB0", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x28D394", Offset = "0x28D394", VA = "0x28D394", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x28D540", Offset = "0x28D540", VA = "0x28D540", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class Chapter3State : BaseState<SceneMain>
	{
		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Chapter3State m_instance;

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x28D5D4", Offset = "0x28D5D4", VA = "0x28D5D4")]
		public Chapter3State()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x28D638", Offset = "0x28D638", VA = "0x28D638")]
		public static Chapter3State GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x28D760", Offset = "0x28D760", VA = "0x28D760", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x28DE14", Offset = "0x28DE14", VA = "0x28DE14", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x28DFC0", Offset = "0x28DFC0", VA = "0x28DFC0", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class CreditIntroState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CreditIntroState m_instance;

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x295B10", Offset = "0x295B10", VA = "0x295B10")]
		public CreditIntroState()
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x28ED10", Offset = "0x28ED10", VA = "0x28ED10")]
		public static CreditIntroState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x295B74", Offset = "0x295B74", VA = "0x295B74", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x296484", Offset = "0x296484", VA = "0x296484", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x296488", Offset = "0x296488", VA = "0x296488", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class CreditState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CreditState m_instance;

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x36F2DC", Offset = "0x36F2DC", VA = "0x36F2DC")]
		public CreditState()
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x36E7C4", Offset = "0x36E7C4", VA = "0x36E7C4")]
		public static CreditState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x36F340", Offset = "0x36F340", VA = "0x36F340", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x36F49C", Offset = "0x36F49C", VA = "0x36F49C", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x36F624", Offset = "0x36F624", VA = "0x36F624", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class HureaiIntroState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HureaiIntroState m_instance;

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x23A534", Offset = "0x23A534", VA = "0x23A534")]
		public HureaiIntroState()
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x23A598", Offset = "0x23A598", VA = "0x23A598")]
		public static HureaiIntroState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x23A6C0", Offset = "0x23A6C0", VA = "0x23A6C0", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x23B184", Offset = "0x23B184", VA = "0x23B184", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x23B420", Offset = "0x23B420", VA = "0x23B420", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class HureaiState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HureaiState m_instance;

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x23FD2C", Offset = "0x23FD2C", VA = "0x23FD2C")]
		public HureaiState()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x23B2F8", Offset = "0x23B2F8", VA = "0x23B2F8")]
		public static HureaiState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x23FD90", Offset = "0x23FD90", VA = "0x23FD90", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x2402A8", Offset = "0x2402A8", VA = "0x2402A8", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x2417F0", Offset = "0x2417F0", VA = "0x2417F0", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class HureaiFinishState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HureaiFinishState m_instance;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float fadeStartTime;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float FADE_START;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool fadeOutFlag;

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x239488", Offset = "0x239488", VA = "0x239488")]
		public HureaiFinishState()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x2394F8", Offset = "0x2394F8", VA = "0x2394F8")]
		public static HureaiFinishState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x239620", Offset = "0x239620", VA = "0x239620", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x2397F8", Offset = "0x2397F8", VA = "0x2397F8", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x239F0C", Offset = "0x239F0C", VA = "0x239F0C", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x2000107")]
	public class OptionState : BaseState<SceneMain>
	{
		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OptionState m_instance;

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x250524", Offset = "0x250524", VA = "0x250524")]
		public OptionState()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x24CB10", Offset = "0x24CB10", VA = "0x24CB10")]
		public static OptionState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x250588", Offset = "0x250588", VA = "0x250588", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x250AAC", Offset = "0x250AAC", VA = "0x250AAC", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x250C5C", Offset = "0x250C5C", VA = "0x250C5C", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class SettingsState : BaseState<SceneMain>
	{
		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SettingsState m_instance;

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x1B47A8", Offset = "0x1B47A8", VA = "0x1B47A8")]
		public SettingsState()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x1B480C", Offset = "0x1B480C", VA = "0x1B480C")]
		public static SettingsState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x1B4934", Offset = "0x1B4934", VA = "0x1B4934", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x1B4D04", Offset = "0x1B4D04", VA = "0x1B4D04", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x1B4D08", Offset = "0x1B4D08", VA = "0x1B4D08", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class HelpState : BaseState<SceneMain>
	{
		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HelpState m_instance;

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x383C94", Offset = "0x383C94", VA = "0x383C94")]
		public HelpState()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x383CF8", Offset = "0x383CF8", VA = "0x383CF8")]
		public static HelpState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x383E20", Offset = "0x383E20", VA = "0x383E20", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x383F70", Offset = "0x383F70", VA = "0x383F70", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x383F74", Offset = "0x383F74", VA = "0x383F74", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class OKPopupState : BaseState<SceneMain>
	{
		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OKPopupState m_instance;

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x24BC28", Offset = "0x24BC28", VA = "0x24BC28")]
		public OKPopupState()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x24BC8C", Offset = "0x24BC8C", VA = "0x24BC8C")]
		public static OKPopupState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x24BDB4", Offset = "0x24BDB4", VA = "0x24BDB4", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x24BED8", Offset = "0x24BED8", VA = "0x24BED8", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x24BEDC", Offset = "0x24BEDC", VA = "0x24BEDC", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class SoundSettingState : BaseState<SceneMain>
	{
		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SoundSettingState m_instance;

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x1BF820", Offset = "0x1BF820", VA = "0x1BF820")]
		public SoundSettingState()
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x1B4380", Offset = "0x1B4380", VA = "0x1B4380")]
		public static SoundSettingState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x1BF884", Offset = "0x1BF884", VA = "0x1BF884", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x1BFA04", Offset = "0x1BFA04", VA = "0x1BFA04", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x1BFA08", Offset = "0x1BFA08", VA = "0x1BFA08", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class RenderSettingState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RenderSettingState m_instance;

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x258BC4", Offset = "0x258BC4", VA = "0x258BC4")]
		public RenderSettingState()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x258C28", Offset = "0x258C28", VA = "0x258C28")]
		public static RenderSettingState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x258D50", Offset = "0x258D50", VA = "0x258D50", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x258E74", Offset = "0x258E74", VA = "0x258E74", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x258E78", Offset = "0x258E78", VA = "0x258E78", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class SubTitleSettingState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SubTitleSettingState m_instance;

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x1C38FC", Offset = "0x1C38FC", VA = "0x1C38FC")]
		public SubTitleSettingState()
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x1B44A8", Offset = "0x1B44A8", VA = "0x1B44A8")]
		public static SubTitleSettingState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x1C3960", Offset = "0x1C3960", VA = "0x1C3960", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x1C3A80", Offset = "0x1C3A80", VA = "0x1C3A80", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x1C3A84", Offset = "0x1C3A84", VA = "0x1C3A84", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class FadeState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FadeState m_instance;

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x379598", Offset = "0x379598", VA = "0x379598")]
		public FadeState()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x36EC34", Offset = "0x36EC34", VA = "0x36EC34")]
		public static FadeState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x3795FC", Offset = "0x3795FC", VA = "0x3795FC", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x3797E4", Offset = "0x3797E4", VA = "0x3797E4", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x37A250", Offset = "0x37A250", VA = "0x37A250", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class LoadLightmapState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LoadLightmapState m_instance;

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x249590", Offset = "0x249590", VA = "0x249590")]
		public LoadLightmapState()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x239C70", Offset = "0x239C70", VA = "0x239C70")]
		public static LoadLightmapState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x2495F4", Offset = "0x2495F4", VA = "0x2495F4", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x249A40", Offset = "0x249A40", VA = "0x249A40", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x249B8C", Offset = "0x249B8C", VA = "0x249B8C", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class GameEndState : BaseState<SceneMain>
	{
		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameEndState m_instance;

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x37B7DC", Offset = "0x37B7DC", VA = "0x37B7DC")]
		public GameEndState()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x37B840", Offset = "0x37B840", VA = "0x37B840")]
		public static GameEndState GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x37B968", Offset = "0x37B968", VA = "0x37B968", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x37BA04", Offset = "0x37BA04", VA = "0x37BA04", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x37BA08", Offset = "0x37BA08", VA = "0x37BA08", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class FirstPlayToChapter1State : BaseState<SceneMain>
	{
		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FirstPlayToChapter1State m_instance;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float time;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool flag;

		[Token(Token = "0x4000568")]
		private const float FADE_IN_TIME = 2f;

		[Token(Token = "0x4000569")]
		private const float MAX_TIME = 2f;

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x37A4C4", Offset = "0x37A4C4", VA = "0x37A4C4")]
		public FirstPlayToChapter1State()
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x37A528", Offset = "0x37A528", VA = "0x37A528")]
		public static FirstPlayToChapter1State GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x37A650", Offset = "0x37A650", VA = "0x37A650", Slot = "4")]
		public override void Enter(SceneMain main)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x37A774", Offset = "0x37A774", VA = "0x37A774", Slot = "6")]
		public override void Execute(SceneMain main)
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x37A96C", Offset = "0x37A96C", VA = "0x37A96C", Slot = "7")]
		public override void Exit(SceneMain main)
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class SceneTest : MonoBehaviour
	{
		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private DramaSelectWindowUI m_drama;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private ParticleSystem m_particleSyste;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private EffectGroup m_particleEffect;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource audioSource;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EffectGroup effectGroup;

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x261FD0", Offset = "0x261FD0", VA = "0x261FD0")]
		public SceneTest()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x261FD8", Offset = "0x261FD8", VA = "0x261FD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x261FDC", Offset = "0x261FDC", VA = "0x261FDC")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class SceneTitle : MonoBehaviour
	{
		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public PlayableDirector m_playableDirector;

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x262428", Offset = "0x262428", VA = "0x262428")]
		public SceneTitle()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x262430", Offset = "0x262430", VA = "0x262430")]
		private void Awake()
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x262544", Offset = "0x262544", VA = "0x262544")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000114")]
	public class SerifManager : SingletonMonoBehaviour<SerifManager>
	{
		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private UIStringData m_serifData;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private TextMeshPro m_textMesh;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GameObject m_subtitleGroup;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SAWSaveData.eSubTitle m_eSubTitle;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private TextMeshProUGUI m_textMeshPC;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AEC0C", Offset = "0x1AEC0C")]
		private float m_textCameraRange;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_cameraVecSpeedX;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_cameraVecSpeedY;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_viewPortRightRate;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_viewPortLeftRate;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_viewPortTopRate;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_viewPortDownRate;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool m_isSpecialMove;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool m_isHoldSubtitle;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AECC8", Offset = "0x1AECC8")]
		public float m_adjustTargetVecY;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public GameObject m_FixSubtitleTargetObj;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform m_CtrlCatchHand;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 m_CtrlCatchHandFirstPos;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_prevCameraWPos;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_cameraViewPortPos;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_cameraSaveVecSpeedX;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_cameraSaveVecSpeedY;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_dontRender;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_isXMove;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool m_isChangeBillBoard;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_billBoardChangeRate;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_billBoardBackRate;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Camera m_mainCam;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_previoulsSubtitleType;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private string m_saveCallvoiceID;

		[Token(Token = "0x17000065")]
		public TextMeshPro TextMesh
		{
			[Token(Token = "0x600069C")]
			[Address(RVA = "0x265628", Offset = "0x265628", VA = "0x265628")]
			get
			{
				return null;
			}
			[Token(Token = "0x600069D")]
			[Address(RVA = "0x265630", Offset = "0x265630", VA = "0x265630")]
			set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public float TextCameraRange
		{
			[Token(Token = "0x600069E")]
			[Address(RVA = "0x265638", Offset = "0x265638", VA = "0x265638")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600069F")]
			[Address(RVA = "0x265640", Offset = "0x265640", VA = "0x265640")]
			set
			{
			}
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x265500", Offset = "0x265500", VA = "0x265500")]
		public SerifManager()
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x265648", Offset = "0x265648", VA = "0x265648")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x265714", Offset = "0x265714", VA = "0x265714")]
		private void Start()
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x265718", Offset = "0x265718", VA = "0x265718")]
		public void SettingParamWithSaveData()
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x265A3C", Offset = "0x265A3C", VA = "0x265A3C")]
		public void Init()
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x265C90", Offset = "0x265C90", VA = "0x265C90")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x266E6C", Offset = "0x266E6C", VA = "0x266E6C")]
		public void FixSubtitle()
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x265D90", Offset = "0x265D90", VA = "0x265D90")]
		private void ChaseSubtitle()
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x23AD20", Offset = "0x23AD20", VA = "0x23AD20")]
		public void ResetSubtitlePos()
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x265D8C", Offset = "0x265D8C", VA = "0x265D8C")]
		private void SerifUpdatePC()
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x239E74", Offset = "0x239E74", VA = "0x239E74")]
		public void CloseText()
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x2544E0", Offset = "0x2544E0", VA = "0x2544E0")]
		public void OpenText()
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x239DC4", Offset = "0x239DC4", VA = "0x239DC4")]
		public void Again()
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x242070", Offset = "0x242070", VA = "0x242070")]
		public void Action(string callVoiceID)
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x2675A8", Offset = "0x2675A8", VA = "0x2675A8")]
		private void SetSerifData(UIStringData serifData)
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x2675B0", Offset = "0x2675B0", VA = "0x2675B0")]
		private void SetTextObj(TextMeshPro textMesh)
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x2675B8", Offset = "0x2675B8", VA = "0x2675B8")]
		public bool GetHoldSubtitle()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x2675C0", Offset = "0x2675C0", VA = "0x2675C0")]
		public void SetHoldSubtitle(bool param, [Optional] Transform handTransform)
		{
		}
	}
}
[Token(Token = "0x2000115")]
public class ShadowScript : MonoBehaviour
{
	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform m_target;

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x2B9864", Offset = "0x2B9864", VA = "0x2B9864")]
	public ShadowScript()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x2B986C", Offset = "0x2B986C", VA = "0x2B986C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x2B9870", Offset = "0x2B9870", VA = "0x2B9870")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000116")]
public static class CustomPlayableExtensions
{
	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x2717D4", Offset = "0x2717D4", VA = "0x2717D4")]
	public static void ResetTime(this Playable playable, float time)
	{
	}
}
[Token(Token = "0x2000117")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1AED00", Offset = "0x1AED00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1AED00", Offset = "0x1AED00")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1AED00", Offset = "0x1AED00")]
public class SimpleAnimation : MonoBehaviour
{
	[Token(Token = "0x2000118")]
	public interface State
	{
		[Token(Token = "0x1700006F")]
		bool enabled
		{
			[Token(Token = "0x60006E7")]
			get;
			[Token(Token = "0x60006E8")]
			set;
		}

		[Token(Token = "0x17000070")]
		bool isValid
		{
			[Token(Token = "0x60006E9")]
			get;
		}

		[Token(Token = "0x17000071")]
		float time
		{
			[Token(Token = "0x60006EA")]
			get;
			[Token(Token = "0x60006EB")]
			set;
		}

		[Token(Token = "0x17000072")]
		float normalizedTime
		{
			[Token(Token = "0x60006EC")]
			get;
			[Token(Token = "0x60006ED")]
			set;
		}

		[Token(Token = "0x17000073")]
		float speed
		{
			[Token(Token = "0x60006EE")]
			get;
			[Token(Token = "0x60006EF")]
			set;
		}

		[Token(Token = "0x17000074")]
		string name
		{
			[Token(Token = "0x60006F0")]
			get;
			[Token(Token = "0x60006F1")]
			set;
		}

		[Token(Token = "0x17000075")]
		float weight
		{
			[Token(Token = "0x60006F2")]
			get;
			[Token(Token = "0x60006F3")]
			set;
		}

		[Token(Token = "0x17000076")]
		float length
		{
			[Token(Token = "0x60006F4")]
			get;
		}

		[Token(Token = "0x17000077")]
		AnimationClip clip
		{
			[Token(Token = "0x60006F5")]
			get;
		}

		[Token(Token = "0x17000078")]
		WrapMode wrapMode
		{
			[Token(Token = "0x60006F6")]
			get;
			[Token(Token = "0x60006F7")]
			set;
		}
	}

	[Token(Token = "0x2000119")]
	private class StateEnumerable : IEnumerable<State>, IEnumerable
	{
		[Token(Token = "0x200011A")]
		private class StateEnumerator : IEnumerator<State>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400059D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private SimpleAnimation m_Owner;

			[Token(Token = "0x400059E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private IEnumerator<SimpleAnimationPlayable.IState> m_Impl;

			[Token(Token = "0x17000079")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006FD")]
				[Address(RVA = "0x2BD6EC", Offset = "0x2BD6EC", VA = "0x2BD6EC", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700007A")]
			private State System.Collections.Generic.IEnumerator<SimpleAnimation.State>.Current
			{
				[Token(Token = "0x60006FE")]
				[Address(RVA = "0x2BD6F0", Offset = "0x2BD6F0", VA = "0x2BD6F0", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006FB")]
			[Address(RVA = "0x2BD2FC", Offset = "0x2BD2FC", VA = "0x2BD2FC")]
			public StateEnumerator(SimpleAnimation owner)
			{
			}

			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x2BD5E0", Offset = "0x2BD5E0", VA = "0x2BD5E0")]
			private State GetCurrent()
			{
				return null;
			}

			[Token(Token = "0x60006FF")]
			[Address(RVA = "0x2BD6F4", Offset = "0x2BD6F4", VA = "0x2BD6F4", Slot = "8")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6000700")]
			[Address(RVA = "0x2BD6F8", Offset = "0x2BD6F8", VA = "0x2BD6F8", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000701")]
			[Address(RVA = "0x2BD508", Offset = "0x2BD508", VA = "0x2BD508", Slot = "7")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private SimpleAnimation m_Owner;

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x2BBC0C", Offset = "0x2BBC0C", VA = "0x2BBC0C")]
		public StateEnumerable(SimpleAnimation owner)
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x2BD288", Offset = "0x2BD288", VA = "0x2BD288", Slot = "4")]
		public IEnumerator<State> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x2BD420", Offset = "0x2BD420", VA = "0x2BD420", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x200011B")]
	private class StateImpl : State
	{
		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private SimpleAnimationPlayable.IState m_StateHandle;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private SimpleAnimation m_Component;

		[Token(Token = "0x1700007B")]
		private bool SimpleAnimation.State.enabled
		{
			[Token(Token = "0x6000703")]
			[Address(RVA = "0x2BD7D0", Offset = "0x2BD7D0", VA = "0x2BD7D0", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000704")]
			[Address(RVA = "0x2BD8A8", Offset = "0x2BD8A8", VA = "0x2BD8A8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		private bool SimpleAnimation.State.isValid
		{
			[Token(Token = "0x6000705")]
			[Address(RVA = "0x2BD9C4", Offset = "0x2BD9C4", VA = "0x2BD9C4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007D")]
		private float SimpleAnimation.State.time
		{
			[Token(Token = "0x6000706")]
			[Address(RVA = "0x2BDA9C", Offset = "0x2BDA9C", VA = "0x2BDA9C", Slot = "7")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000707")]
			[Address(RVA = "0x2BDB74", Offset = "0x2BDB74", VA = "0x2BDB74", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		private float SimpleAnimation.State.normalizedTime
		{
			[Token(Token = "0x6000708")]
			[Address(RVA = "0x2BDC88", Offset = "0x2BDC88", VA = "0x2BDC88", Slot = "9")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000709")]
			[Address(RVA = "0x2BDD60", Offset = "0x2BDD60", VA = "0x2BDD60", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		private float SimpleAnimation.State.speed
		{
			[Token(Token = "0x600070A")]
			[Address(RVA = "0x2BDE74", Offset = "0x2BDE74", VA = "0x2BDE74", Slot = "11")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600070B")]
			[Address(RVA = "0x2BDF4C", Offset = "0x2BDF4C", VA = "0x2BDF4C", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x17000080")]
		private string SimpleAnimation.State.name
		{
			[Token(Token = "0x600070C")]
			[Address(RVA = "0x2BE060", Offset = "0x2BE060", VA = "0x2BE060", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x600070D")]
			[Address(RVA = "0x2BE138", Offset = "0x2BE138", VA = "0x2BE138", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x17000081")]
		private float SimpleAnimation.State.weight
		{
			[Token(Token = "0x600070E")]
			[Address(RVA = "0x2BE218", Offset = "0x2BE218", VA = "0x2BE218", Slot = "15")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600070F")]
			[Address(RVA = "0x2BE2F0", Offset = "0x2BE2F0", VA = "0x2BE2F0", Slot = "16")]
			set
			{
			}
		}

		[Token(Token = "0x17000082")]
		private float SimpleAnimation.State.length
		{
			[Token(Token = "0x6000710")]
			[Address(RVA = "0x2BE404", Offset = "0x2BE404", VA = "0x2BE404", Slot = "17")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000083")]
		private AnimationClip SimpleAnimation.State.clip
		{
			[Token(Token = "0x6000711")]
			[Address(RVA = "0x2BE4DC", Offset = "0x2BE4DC", VA = "0x2BE4DC", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private WrapMode SimpleAnimation.State.wrapMode
		{
			[Token(Token = "0x6000712")]
			[Address(RVA = "0x2BE5B4", Offset = "0x2BE5B4", VA = "0x2BE5B4", Slot = "19")]
			get
			{
				return default(WrapMode);
			}
			[Token(Token = "0x6000713")]
			[Address(RVA = "0x2BE68C", Offset = "0x2BE68C", VA = "0x2BE68C", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x2BBB70", Offset = "0x2BBB70", VA = "0x2BBB70")]
		public StateImpl(SimpleAnimationPlayable.IState handle, SimpleAnimation component)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200011C")]
	public class EditorState
	{
		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AnimationClip clip;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string name;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool defaultState;

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x2BC314", Offset = "0x2BC314", VA = "0x2BC314")]
		public EditorState()
		{
		}
	}

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected PlayableGraph m_Graph;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected PlayableHandle m_LayerMixer;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PlayableHandle m_TransitionMixer;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected Animator m_Animator;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool m_Initialized;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	protected bool m_IsPlaying;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected SimpleAnimationPlayable m_Playable;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected bool m_PlayAutomatically;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	protected bool m_AnimatePhysics;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected AnimatorCullingMode m_CullingMode;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected WrapMode m_WrapMode;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected AnimationClip m_Clip;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private EditorState[] m_States;

	[Token(Token = "0x17000067")]
	public Animator animator
	{
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x2B9B1C", Offset = "0x2B9B1C", VA = "0x2B9B1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000068")]
	public bool animatePhysics
	{
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x2B9BD4", Offset = "0x2B9BD4", VA = "0x2B9BD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x2B9BDC", Offset = "0x2B9BDC", VA = "0x2B9BDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public AnimatorCullingMode cullingMode
	{
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x2B9C1C", Offset = "0x2B9C1C", VA = "0x2B9C1C")]
		get
		{
			return default(AnimatorCullingMode);
		}
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x2B9C4C", Offset = "0x2B9C4C", VA = "0x2B9C4C")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public bool isPlaying
	{
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x2B9C8C", Offset = "0x2B9C8C", VA = "0x2B9C8C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006B")]
	public bool playAutomatically
	{
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x2B9CE0", Offset = "0x2B9CE0", VA = "0x2B9CE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x2B9CE8", Offset = "0x2B9CE8", VA = "0x2B9CE8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public AnimationClip clip
	{
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x2B9CF0", Offset = "0x2B9CF0", VA = "0x2B9CF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x2B9CF8", Offset = "0x2B9CF8", VA = "0x2B9CF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public WrapMode wrapMode
	{
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x2B9F28", Offset = "0x2B9F28", VA = "0x2B9F28")]
		get
		{
			return default(WrapMode);
		}
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x2B9F30", Offset = "0x2B9F30", VA = "0x2B9F30")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public State Item
	{
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x2BBC2C", Offset = "0x2BBC2C", VA = "0x2BBC2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x2B9B08", Offset = "0x2B9B08", VA = "0x2B9B08")]
	public SimpleAnimation()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x2B9E60", Offset = "0x2B9E60", VA = "0x2B9E60")]
	public EditorState[] ForceGetStates()
	{
		return null;
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x2B9E68", Offset = "0x2B9E68", VA = "0x2B9E68")]
	public void ForceCopy(SimpleAnimation from)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x2B9F38", Offset = "0x2B9F38", VA = "0x2B9F38")]
	public void AddClip(AnimationClip clip, string newName)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x2B9FD4", Offset = "0x2B9FD4", VA = "0x2B9FD4")]
	public void Blend(string stateName, float targetWeight, float fadeLength)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x2BA1D8", Offset = "0x2BA1D8", VA = "0x2BA1D8")]
	public void CrossFade(string stateName, float fadeLength)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x2BA3AC", Offset = "0x2BA3AC", VA = "0x2BA3AC")]
	public void CrossFadeQueued(string stateName, float fadeLength, QueueMode queueMode)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x2BA580", Offset = "0x2BA580", VA = "0x2BA580")]
	public int GetClipCount()
	{
		return default(int);
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x2BA624", Offset = "0x2BA624", VA = "0x2BA624")]
	public bool IsPlaying(string stateName)
	{
		return default(bool);
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x2BA6C8", Offset = "0x2BA6C8", VA = "0x2BA6C8")]
	public void Stop()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x2BA7B0", Offset = "0x2BA7B0", VA = "0x2BA7B0")]
	public void Stop(string stateName)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x2BA914", Offset = "0x2BA914", VA = "0x2BA914")]
	public void Sample()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x2BA920", Offset = "0x2BA920", VA = "0x2BA920")]
	public bool Play()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x2B9F64", Offset = "0x2B9F64", VA = "0x2B9F64")]
	public void AddState(AnimationClip clip, string name)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x2BB19C", Offset = "0x2BB19C", VA = "0x2BB19C")]
	public void RemoveState(string name)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x2BB348", Offset = "0x2BB348", VA = "0x2BB348")]
	public bool Play(string stateName)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x2BB46C", Offset = "0x2BB46C", VA = "0x2BB46C")]
	public void PlayQueued(string stateName, QueueMode queueMode)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x2BB620", Offset = "0x2BB620", VA = "0x2BB620")]
	public void RemoveClip(AnimationClip clip)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x2BB780", Offset = "0x2BB780", VA = "0x2BB780")]
	public void Rewind()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x2BB868", Offset = "0x2BB868", VA = "0x2BB868")]
	public void Rewind(string stateName)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x2BB9DC", Offset = "0x2BB9DC", VA = "0x2BB9DC")]
	public State GetState(string stateName)
	{
		return null;
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x2BBB98", Offset = "0x2BBB98", VA = "0x2BBB98")]
	public IEnumerable<State> GetStates()
	{
		return null;
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x2BA064", Offset = "0x2BA064", VA = "0x2BA064")]
	protected void Kick()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x2BBC30", Offset = "0x2BBC30", VA = "0x2BBC30", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x2BC1D4", Offset = "0x2BC1D4", VA = "0x2BC1D4", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x2BC204", Offset = "0x2BC204", VA = "0x2BC204")]
	public void ForceInitialize()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x2BC220", Offset = "0x2BC220", VA = "0x2BC220")]
	private void Reset()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x2BBC6C", Offset = "0x2BBC6C", VA = "0x2BBC6C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x2BC31C", Offset = "0x2BC31C", VA = "0x2BC31C")]
	private void EnsureDefaultStateExists()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x2BC488", Offset = "0x2BC488", VA = "0x2BC488", Slot = "6")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x2BC48C", Offset = "0x2BC48C", VA = "0x2BC48C")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x2BC5F0", Offset = "0x2BC5F0", VA = "0x2BC5F0")]
	private void OnPlayableDone()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x2BACB0", Offset = "0x2BACB0", VA = "0x2BACB0")]
	private void RebuildStates()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x2BC614", Offset = "0x2BC614", VA = "0x2BC614")]
	private EditorState CreateDefaultEditorState()
	{
		return null;
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x2B9D14", Offset = "0x2B9D14", VA = "0x2B9D14")]
	private static void LegacyClipCheck(AnimationClip clip)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x2BC6F0", Offset = "0x2BC6F0", VA = "0x2BC6F0")]
	private void InvalidLegacyClipError(string clipName, string stateName)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x2BC87C", Offset = "0x2BC87C", VA = "0x2BC87C")]
	private void OnValidate()
	{
	}
}
[Token(Token = "0x200011D")]
public class SimpleAnimationPlayable : PlayableBehaviour
{
	[Token(Token = "0x200011E")]
	private class StateEnumerable : IEnumerable<IState>, IEnumerable
	{
		[Token(Token = "0x200011F")]
		private class StateEnumerator : IEnumerator<IState>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40005AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int m_Index;

			[Token(Token = "0x40005AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private int m_Version;

			[Token(Token = "0x40005AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private SimpleAnimationPlayable m_Owner;

			[Token(Token = "0x17000089")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600074F")]
				[Address(RVA = "0xA78F30", Offset = "0xA78F30", VA = "0xA78F30", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008A")]
			private IState System.Collections.Generic.IEnumerator<SimpleAnimationPlayable.IState>.Current
			{
				[Token(Token = "0x6000750")]
				[Address(RVA = "0xA78F38", Offset = "0xA78F38", VA = "0xA78F38", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600074C")]
			[Address(RVA = "0xA78AB0", Offset = "0xA78AB0", VA = "0xA78AB0")]
			public StateEnumerator(SimpleAnimationPlayable owner)
			{
			}

			[Token(Token = "0x600074D")]
			[Address(RVA = "0xA78C34", Offset = "0xA78C34", VA = "0xA78C34")]
			private bool IsValid()
			{
				return default(bool);
			}

			[Token(Token = "0x600074E")]
			[Address(RVA = "0xA78C60", Offset = "0xA78C60", VA = "0xA78C60")]
			private IState GetCurrentHandle(int index)
			{
				return null;
			}

			[Token(Token = "0x6000751")]
			[Address(RVA = "0xA78F40", Offset = "0xA78F40", VA = "0xA78F40", Slot = "8")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6000752")]
			[Address(RVA = "0xA78F44", Offset = "0xA78F44", VA = "0xA78F44", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000753")]
			[Address(RVA = "0xA78B70", Offset = "0xA78B70", VA = "0xA78B70", Slot = "7")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private SimpleAnimationPlayable m_Owner;

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xA78A1C", Offset = "0xA78A1C", VA = "0xA78A1C")]
		public StateEnumerable(SimpleAnimationPlayable owner)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xA78A3C", Offset = "0xA78A3C", VA = "0xA78A3C", Slot = "4")]
		public IEnumerator<IState> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xA78AFC", Offset = "0xA78AFC", VA = "0xA78AFC", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000120")]
	public interface IState
	{
		[Token(Token = "0x1700008B")]
		bool enabled
		{
			[Token(Token = "0x6000755")]
			get;
			[Token(Token = "0x6000756")]
			set;
		}

		[Token(Token = "0x1700008C")]
		float time
		{
			[Token(Token = "0x6000757")]
			get;
			[Token(Token = "0x6000758")]
			set;
		}

		[Token(Token = "0x1700008D")]
		float normalizedTime
		{
			[Token(Token = "0x6000759")]
			get;
			[Token(Token = "0x600075A")]
			set;
		}

		[Token(Token = "0x1700008E")]
		float speed
		{
			[Token(Token = "0x600075B")]
			get;
			[Token(Token = "0x600075C")]
			set;
		}

		[Token(Token = "0x1700008F")]
		string name
		{
			[Token(Token = "0x600075D")]
			get;
			[Token(Token = "0x600075E")]
			set;
		}

		[Token(Token = "0x17000090")]
		float weight
		{
			[Token(Token = "0x600075F")]
			get;
			[Token(Token = "0x6000760")]
			set;
		}

		[Token(Token = "0x17000091")]
		float length
		{
			[Token(Token = "0x6000761")]
			get;
		}

		[Token(Token = "0x17000092")]
		AnimationClip clip
		{
			[Token(Token = "0x6000762")]
			get;
		}

		[Token(Token = "0x17000093")]
		WrapMode wrapMode
		{
			[Token(Token = "0x6000763")]
			get;
		}

		[Token(Token = "0x6000754")]
		bool IsValid();
	}

	[Token(Token = "0x2000121")]
	public class StateHandle : IState
	{
		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private SimpleAnimationPlayable m_Parent;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int m_Index;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Playable m_Target;

		[Token(Token = "0x17000094")]
		public bool enabled
		{
			[Token(Token = "0x6000766")]
			[Address(RVA = "0xA79108", Offset = "0xA79108", VA = "0xA79108", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000767")]
			[Address(RVA = "0xA79214", Offset = "0xA79214", VA = "0xA79214", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public float time
		{
			[Token(Token = "0x6000768")]
			[Address(RVA = "0xA79468", Offset = "0xA79468", VA = "0xA79468", Slot = "7")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000769")]
			[Address(RVA = "0xA795F0", Offset = "0xA795F0", VA = "0xA795F0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public float normalizedTime
		{
			[Token(Token = "0x600076A")]
			[Address(RVA = "0xA79788", Offset = "0xA79788", VA = "0xA79788", Slot = "9")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600076B")]
			[Address(RVA = "0xA799D4", Offset = "0xA799D4", VA = "0xA799D4", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public float speed
		{
			[Token(Token = "0x600076C")]
			[Address(RVA = "0xA79B24", Offset = "0xA79B24", VA = "0xA79B24", Slot = "11")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600076D")]
			[Address(RVA = "0xA79CAC", Offset = "0xA79CAC", VA = "0xA79CAC", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public string name
		{
			[Token(Token = "0x600076E")]
			[Address(RVA = "0xA79E44", Offset = "0xA79E44", VA = "0xA79E44", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x600076F")]
			[Address(RVA = "0xA79FC8", Offset = "0xA79FC8", VA = "0xA79FC8", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public float weight
		{
			[Token(Token = "0x6000770")]
			[Address(RVA = "0xA7A1A4", Offset = "0xA7A1A4", VA = "0xA7A1A4", Slot = "15")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000771")]
			[Address(RVA = "0xA7A2B0", Offset = "0xA7A2B0", VA = "0xA7A2B0", Slot = "16")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public float length
		{
			[Token(Token = "0x6000772")]
			[Address(RVA = "0xA7A4A8", Offset = "0xA7A4A8", VA = "0xA7A4A8", Slot = "17")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700009B")]
		public AnimationClip clip
		{
			[Token(Token = "0x6000773")]
			[Address(RVA = "0xA7A718", Offset = "0xA7A718", VA = "0xA7A718", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		public WrapMode wrapMode
		{
			[Token(Token = "0x6000774")]
			[Address(RVA = "0xA7A89C", Offset = "0xA7A89C", VA = "0xA7A89C", Slot = "19")]
			get
			{
				return default(WrapMode);
			}
		}

		[Token(Token = "0x1700009D")]
		public int index
		{
			[Token(Token = "0x6000775")]
			[Address(RVA = "0xA7AA20", Offset = "0xA7AA20", VA = "0xA7AA20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xA78EF8", Offset = "0xA78EF8", VA = "0xA78EF8")]
		public StateHandle(SimpleAnimationPlayable s, int index, Playable target)
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xA790C0", Offset = "0xA790C0", VA = "0xA790C0", Slot = "4")]
		public bool IsValid()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000122")]
	private class StateInfo
	{
		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool m_Enabled;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int m_Index;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_StateName;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_Fading;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Time;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_TargetWeight;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_Weight;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_FadeSpeed;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationClip m_Clip;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Playable m_Playable;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private WrapMode m_WrapMode;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_IsClone;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public StateHandle m_ParentState;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_WeightDirty;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_EnabledDirty;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool m_TimeIsUpToDate;

		[Token(Token = "0x1700009E")]
		public bool enabled
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0xA7920C", Offset = "0xA7920C", VA = "0xA7920C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009F")]
		public int index
		{
			[Token(Token = "0x6000785")]
			[Address(RVA = "0xA78EDC", Offset = "0xA78EDC", VA = "0xA78EDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000786")]
			[Address(RVA = "0xA7AF60", Offset = "0xA7AF60", VA = "0xA7AF60")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public string stateName
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0xA7AF68", Offset = "0xA7AF68", VA = "0xA7AF68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000788")]
			[Address(RVA = "0xA7AF70", Offset = "0xA7AF70", VA = "0xA7AF70")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public bool fading
		{
			[Token(Token = "0x6000789")]
			[Address(RVA = "0xA7AF78", Offset = "0xA7AF78", VA = "0xA7AF78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A2")]
		public float targetWeight
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0xA7AF80", Offset = "0xA7AF80", VA = "0xA7AF80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A3")]
		public float weight
		{
			[Token(Token = "0x600078B")]
			[Address(RVA = "0xA7A2A8", Offset = "0xA7A2A8", VA = "0xA7A2A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A4")]
		public float fadeSpeed
		{
			[Token(Token = "0x600078C")]
			[Address(RVA = "0xA7AF88", Offset = "0xA7AF88", VA = "0xA7AF88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A5")]
		public float speed
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0xA7AF90", Offset = "0xA7AF90", VA = "0xA7AF90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600078E")]
			[Address(RVA = "0xA7B008", Offset = "0xA7B008", VA = "0xA7B008")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public float playableDuration
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0xA7B094", Offset = "0xA7B094", VA = "0xA7B094")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A7")]
		public AnimationClip clip
		{
			[Token(Token = "0x6000790")]
			[Address(RVA = "0xA7B10C", Offset = "0xA7B10C", VA = "0xA7B10C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public bool isDone
		{
			[Token(Token = "0x6000792")]
			[Address(RVA = "0xA7B120", Offset = "0xA7B120", VA = "0xA7B120")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A9")]
		public Playable playable
		{
			[Token(Token = "0x6000793")]
			[Address(RVA = "0xA78EE4", Offset = "0xA78EE4", VA = "0xA78EE4")]
			get
			{
				return default(Playable);
			}
		}

		[Token(Token = "0x170000AA")]
		public WrapMode wrapMode
		{
			[Token(Token = "0x6000794")]
			[Address(RVA = "0xA7B18C", Offset = "0xA7B18C", VA = "0xA7B18C")]
			get
			{
				return default(WrapMode);
			}
		}

		[Token(Token = "0x170000AB")]
		public bool isClone
		{
			[Token(Token = "0x6000795")]
			[Address(RVA = "0xA7B194", Offset = "0xA7B194", VA = "0xA7B194")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AC")]
		public StateHandle parentState
		{
			[Token(Token = "0x6000796")]
			[Address(RVA = "0xA7B19C", Offset = "0xA7B19C", VA = "0xA7B19C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		public bool enabledDirty
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0xA7B1A4", Offset = "0xA7B1A4", VA = "0xA7B1A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AE")]
		public bool weightDirty
		{
			[Token(Token = "0x6000798")]
			[Address(RVA = "0xA7B1AC", Offset = "0xA7B1AC", VA = "0xA7B1AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xA7AA28", Offset = "0xA7AA28", VA = "0xA7AA28")]
		public StateInfo()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xA7AA30", Offset = "0xA7AA30", VA = "0xA7AA30")]
		public void Initialize(string name, AnimationClip clip, WrapMode wrapMode)
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xA7AA40", Offset = "0xA7AA40", VA = "0xA7AA40")]
		public float GetTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xA7AAD8", Offset = "0xA7AAD8", VA = "0xA7AAD8")]
		public void SetTime(float newTime)
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xA7ABC4", Offset = "0xA7ABC4", VA = "0xA7ABC4")]
		public void Enable()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xA7ABDC", Offset = "0xA7ABDC", VA = "0xA7ABDC")]
		public void Disable()
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xA7ABF8", Offset = "0xA7ABF8", VA = "0xA7ABF8")]
		public void Pause()
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xA7AC74", Offset = "0xA7AC74", VA = "0xA7AC74")]
		public void Play()
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xA7ACF0", Offset = "0xA7ACF0", VA = "0xA7ACF0")]
		public void Stop()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xA7ADA4", Offset = "0xA7ADA4", VA = "0xA7ADA4")]
		public void ForceWeight(float weight)
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xA7ADC4", Offset = "0xA7ADC4", VA = "0xA7ADC4")]
		public void SetWeight(float weight)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xA7ADD4", Offset = "0xA7ADD4", VA = "0xA7ADD4")]
		public void FadeTo(float weight, float speed)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xA7AE84", Offset = "0xA7AE84", VA = "0xA7AE84")]
		public void DestroyPlayable()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xA7AF50", Offset = "0xA7AF50", VA = "0xA7AF50")]
		public void SetAsCloneOf(StateHandle handle)
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xA7B114", Offset = "0xA7B114", VA = "0xA7B114")]
		public void SetPlayable(Playable playable)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xA7B1B4", Offset = "0xA7B1B4", VA = "0xA7B1B4")]
		public void ResetDirtyFlags()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xA7B1C0", Offset = "0xA7B1C0", VA = "0xA7B1C0")]
		public void InvalidateTime()
		{
		}
	}

	[Token(Token = "0x2000123")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1AEE20", Offset = "0x1AEE20")]
	private class StateManagement
	{
		[Token(Token = "0x20002BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AEE94", Offset = "0x1AEE94")]
		private sealed class <FindState>c__AnonStorey0
		{
			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal string name;

			[Token(Token = "0x600114F")]
			[Address(RVA = "0xA7B8D0", Offset = "0xA7B8D0", VA = "0xA7B8D0")]
			public <FindState>c__AnonStorey0()
			{
			}

			[Token(Token = "0x6001150")]
			[Address(RVA = "0xA7BBBC", Offset = "0xA7BBBC", VA = "0xA7BBBC")]
			internal bool <>m__0(StateInfo s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<StateInfo> m_States;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int m_Count;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AEE54", Offset = "0x1AEE54")]
		private static Predicate<StateInfo> <>f__am$cache0;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AEE64", Offset = "0x1AEE64")]
		private static Predicate<StateInfo> <>f__am$cache1;

		[Token(Token = "0x170000AF")]
		public int Count
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0xA78E54", Offset = "0xA78E54", VA = "0xA78E54")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B0")]
		public StateInfo Item
		{
			[Token(Token = "0x600079D")]
			[Address(RVA = "0xA78E5C", Offset = "0xA78E5C", VA = "0xA78E5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xA7B1CC", Offset = "0xA7B1CC", VA = "0xA7B1CC")]
		public StateManagement()
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xA7B258", Offset = "0xA7B258", VA = "0xA7B258")]
		public StateInfo InsertState()
		{
			return null;
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xA7B434", Offset = "0xA7B434", VA = "0xA7B434")]
		public bool AnyStatePlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xA7B54C", Offset = "0xA7B54C", VA = "0xA7B54C")]
		public void RemoveState(int index)
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xA7B64C", Offset = "0xA7B64C", VA = "0xA7B64C")]
		public bool RemoveClip(AnimationClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xA7B794", Offset = "0xA7B794", VA = "0xA7B794")]
		public StateInfo FindState(string name)
		{
			return null;
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xA79314", Offset = "0xA79314", VA = "0xA79314")]
		public void EnableState(int index)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xA793BC", Offset = "0xA793BC", VA = "0xA793BC")]
		public void DisableState(int index)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xA7A3F8", Offset = "0xA7A3F8", VA = "0xA7A3F8")]
		public void SetInputWeight(int index, float weight)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xA796E4", Offset = "0xA796E4", VA = "0xA796E4")]
		public void SetStateTime(int index, float time)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xA79554", Offset = "0xA79554", VA = "0xA79554")]
		public float GetStateTime(int index)
		{
			return default(float);
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xA7B8D8", Offset = "0xA7B8D8", VA = "0xA7B8D8")]
		public bool IsCloneOf(int potentialCloneIndex, int originalIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xA79C10", Offset = "0xA79C10", VA = "0xA79C10")]
		public float GetStateSpeed(int index)
		{
			return default(float);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xA79DA0", Offset = "0xA79DA0", VA = "0xA79DA0")]
		public void SetStateSpeed(int index, float value)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xA7B9A4", Offset = "0xA7B9A4", VA = "0xA7B9A4")]
		public float GetInputWeight(int index)
		{
			return default(float);
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xA7A594", Offset = "0xA7A594", VA = "0xA7A594")]
		public float GetStateLength(int index)
		{
			return default(float);
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xA798D4", Offset = "0xA798D4", VA = "0xA798D4")]
		public float GetClipLength(int index)
		{
			return default(float);
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xA7BA3C", Offset = "0xA7BA3C", VA = "0xA7BA3C")]
		public float GetStatePlayableDuration(int index)
		{
			return default(float);
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xA7A804", Offset = "0xA7A804", VA = "0xA7A804")]
		public AnimationClip GetStateClip(int index)
		{
			return null;
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xA7A988", Offset = "0xA7A988", VA = "0xA7A988")]
		public WrapMode GetStateWrapMode(int index)
		{
			return default(WrapMode);
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xA79F30", Offset = "0xA79F30", VA = "0xA79F30")]
		public string GetStateName(int index)
		{
			return null;
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xA7A108", Offset = "0xA7A108", VA = "0xA7A108")]
		public void SetStateName(int index, string name)
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xA7BAD8", Offset = "0xA7BAD8", VA = "0xA7BAD8")]
		public void StopState(int index, bool cleanup)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xA7BB90", Offset = "0xA7BB90", VA = "0xA7BB90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AEE74", Offset = "0x1AEE74")]
		private static bool <InsertState>m__0(StateInfo s)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xA7BBA0", Offset = "0xA7BBA0", VA = "0xA7BBA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AEE84", Offset = "0x1AEE84")]
		private static bool <AnyStatePlaying>m__1(StateInfo s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000124")]
	private struct QueuedState
	{
		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public StateHandle state;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float fadeTime;

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xA78A10", Offset = "0xA78A10", VA = "0xA78A10")]
		public QueuedState(StateHandle s, float t)
		{
		}
	}

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private LinkedList<QueuedState> m_StateQueue;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private StateManagement m_States;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_Initialized;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool m_KeepStoppedPlayablesConnected;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected Playable m_ActualPlayable;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private AnimationMixerPlayable m_Mixer;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Action onDone;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_StatesVersion;

	[Token(Token = "0x17000085")]
	public bool keepStoppedPlayablesConnected
	{
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x2BE71C", Offset = "0x2BE71C", VA = "0x2BE71C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000717")]
		[Address(RVA = "0x2BE724", Offset = "0x2BE724", VA = "0x2BE724")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	protected Playable self
	{
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x2BE9F0", Offset = "0x2BE9F0", VA = "0x2BE9F0")]
		get
		{
			return default(Playable);
		}
	}

	[Token(Token = "0x17000087")]
	public Playable playable
	{
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x2BC474", Offset = "0x2BC474", VA = "0x2BC474")]
		get
		{
			return default(Playable);
		}
	}

	[Token(Token = "0x17000088")]
	protected PlayableGraph graph
	{
		[Token(Token = "0x600071B")]
		[Address(RVA = "0x2BEA04", Offset = "0x2BEA04", VA = "0x2BEA04")]
		get
		{
			return default(PlayableGraph);
		}
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x2BC25C", Offset = "0x2BC25C", VA = "0x2BC25C")]
	public SimpleAnimationPlayable()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x2BE73C", Offset = "0x2BE73C", VA = "0x2BE73C")]
	private void UpdateStoppedPlayablesConnections()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x2BEA84", Offset = "0x2BEA84", VA = "0x2BEA84")]
	public Playable GetInput(int index)
	{
		return default(Playable);
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x2BEB74", Offset = "0x2BEB74", VA = "0x2BEB74", Slot = "7")]
	public override void OnPlayableCreate(Playable playable)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x2BD494", Offset = "0x2BD494", VA = "0x2BD494")]
	public IEnumerable<IState> GetStates()
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x2BBA88", Offset = "0x2BBA88", VA = "0x2BBA88")]
	public IState GetState(string name)
	{
		return null;
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x2BECBC", Offset = "0x2BECBC", VA = "0x2BECBC")]
	private StateInfo DoAddClip(string name, AnimationClip clip)
	{
		return null;
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x2BAB70", Offset = "0x2BAB70", VA = "0x2BAB70")]
	public bool AddClip(AnimationClip clip, string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x2BB1E0", Offset = "0x2BB1E0", VA = "0x2BB1E0")]
	public bool RemoveClip(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x2BB740", Offset = "0x2BB740", VA = "0x2BB740")]
	public bool RemoveClip(AnimationClip clip)
	{
		return default(bool);
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x2BAA44", Offset = "0x2BAA44", VA = "0x2BAA44")]
	public bool Play(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x2BF25C", Offset = "0x2BF25C", VA = "0x2BF25C")]
	private bool Play(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x2BB4EC", Offset = "0x2BB4EC", VA = "0x2BB4EC")]
	public bool PlayQueued(string name, QueueMode queueMode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x2BF3EC", Offset = "0x2BF3EC", VA = "0x2BF3EC")]
	private bool PlayQueued(int index, QueueMode queueMode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x2BB8BC", Offset = "0x2BB8BC", VA = "0x2BB8BC")]
	public void Rewind(string name)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x2BF794", Offset = "0x2BF794", VA = "0x2BF794")]
	private void Rewind(int index)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x2BB7CC", Offset = "0x2BB7CC", VA = "0x2BB7CC")]
	public void Rewind()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x2BF070", Offset = "0x2BF070", VA = "0x2BF070")]
	private void RemoveClones(StateInfo state)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x2BA7E0", Offset = "0x2BA7E0", VA = "0x2BA7E0")]
	public bool Stop(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x2BF34C", Offset = "0x2BF34C", VA = "0x2BF34C")]
	private void DoStop(int index)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x2BA6F0", Offset = "0x2BA6F0", VA = "0x2BA6F0")]
	public bool StopAll()
	{
		return default(bool);
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x2B9CB4", Offset = "0x2B9CB4", VA = "0x2B9CB4")]
	public bool IsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x2BA654", Offset = "0x2BA654", VA = "0x2BA654")]
	public bool IsPlaying(string stateName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x2BF7CC", Offset = "0x2BF7CC", VA = "0x2BF7CC")]
	private bool IsClonePlaying(StateInfo state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x2BA5A8", Offset = "0x2BA5A8", VA = "0x2BA5A8")]
	public int GetClipCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x2BF8F4", Offset = "0x2BF8F4", VA = "0x2BF8F4")]
	private void SetupLerp(StateInfo state, float targetWeight, float time)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x2BFAAC", Offset = "0x2BFAAC", VA = "0x2BFAAC")]
	private bool Crossfade(int index, float time)
	{
		return default(bool);
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x2BF4EC", Offset = "0x2BF4EC", VA = "0x2BF4EC")]
	private StateInfo CloneState(int index)
	{
		return null;
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x2BA258", Offset = "0x2BA258", VA = "0x2BA258")]
	public bool Crossfade(string name, float time)
	{
		return default(bool);
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x2BA43C", Offset = "0x2BA43C", VA = "0x2BA43C")]
	public bool CrossfadeQueued(string name, float time, QueueMode queueMode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x2BFBC0", Offset = "0x2BFBC0", VA = "0x2BFBC0")]
	private bool CrossfadeQueued(int index, float time, QueueMode queueMode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x2BFCC8", Offset = "0x2BFCC8", VA = "0x2BFCC8")]
	private bool Blend(int index, float targetWeight, float time)
	{
		return default(bool);
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x2BA094", Offset = "0x2BA094", VA = "0x2BA094")]
	public bool Blend(string name, float targetWeight, float time)
	{
		return default(bool);
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x2BFDAC", Offset = "0x2BFDAC", VA = "0x2BFDAC", Slot = "6")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x2BEF74", Offset = "0x2BEF74", VA = "0x2BEF74")]
	private void UpdateDoneStatus()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x2BE904", Offset = "0x2BE904", VA = "0x2BE904")]
	private void DisconnectInput(int index)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x2BE7F4", Offset = "0x2BE7F4", VA = "0x2BE7F4")]
	private void ConnectInput(int index)
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x2BFF9C", Offset = "0x2BFF9C", VA = "0x2BFF9C")]
	private void UpdateStates(float deltaTime)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x2C04FC", Offset = "0x2C04FC", VA = "0x2C04FC")]
	private float CalculateQueueTimes()
	{
		return default(float);
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x2C06E4", Offset = "0x2C06E4", VA = "0x2C06E4")]
	private void ClearQueuedStates()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x2C0890", Offset = "0x2C0890", VA = "0x2C0890")]
	private void UpdateQueuedStates()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x2C09CC", Offset = "0x2C09CC", VA = "0x2C09CC")]
	private void InvalidateStateTimes()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x2C0A4C", Offset = "0x2C0A4C", VA = "0x2C0A4C", Slot = "11")]
	public override void PrepareFrame(Playable owner, FrameData data)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x2C0AF4", Offset = "0x2C0AF4", VA = "0x2C0AF4")]
	public bool ValidateInput(int index, Playable input)
	{
		return default(bool);
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x2C0C3C", Offset = "0x2C0C3C", VA = "0x2C0C3C")]
	public bool ValidateIndex(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x2BF060", Offset = "0x2BF060", VA = "0x2BF060")]
	private void InvalidateStates()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x2BF6B4", Offset = "0x2BF6B4", VA = "0x2BF6B4")]
	private StateHandle StateInfoToHandle(StateInfo info)
	{
		return null;
	}
}
namespace Game
{
	[Token(Token = "0x2000125")]
	public class AnimationEventSe : MonoBehaviour
	{
		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Transform m_head;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform m_leftHand;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Transform m_rightHand;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_body;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Transform m_tail;

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x285C0C", Offset = "0x285C0C", VA = "0x285C0C")]
		public AnimationEventSe()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x285C14", Offset = "0x285C14", VA = "0x285C14")]
		private void Start()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x285DD8", Offset = "0x285DD8", VA = "0x285DD8")]
		public void EventSe(string SeNameAndFromName = "NOTHING")
		{
		}
	}
	[Token(Token = "0x2000126")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1AEEF4", Offset = "0x1AEEF4")]
	public class AudioSourceComponent : MonoBehaviour
	{
		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string m_name;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AudioSource m_source;

		[Token(Token = "0x170000B1")]
		public string Name
		{
			[Token(Token = "0x60007BB")]
			[Address(RVA = "0x2868E8", Offset = "0x2868E8", VA = "0x2868E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007BC")]
			[Address(RVA = "0x2868F0", Offset = "0x2868F0", VA = "0x2868F0")]
			set
			{
			}
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x2868E0", Offset = "0x2868E0", VA = "0x2868E0")]
		public AudioSourceComponent()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x2868F8", Offset = "0x2868F8", VA = "0x2868F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x286A6C", Offset = "0x286A6C", VA = "0x286A6C")]
		private void OnDisable()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public enum RANDOM_SE_STEP
	{
		[Token(Token = "0x40005D1")]
		FOOTSTEP_STONE,
		[Token(Token = "0x40005D2")]
		FOOTSTEP_STONE_RUN,
		[Token(Token = "0x40005D3")]
		FOOTSTEP_STONE_LAWRENCE,
		[Token(Token = "0x40005D4")]
		FOOTSTEP_WOOD,
		[Token(Token = "0x40005D5")]
		FOOTSTEP_WOOD_RUN,
		[Token(Token = "0x40005D6")]
		CLOTH,
		[Token(Token = "0x40005D7")]
		ARRAY_END
	}
	[Token(Token = "0x2000128")]
	public class CharaEnvSEManager : SingletonMonoBehaviour<CharaEnvSEManager>
	{
		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool m_isInit;

		[Token(Token = "0x40005D9")]
		private const int SE_TYPE_MAX = 6;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RandomSE[] m_randomSE;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private string m_prefabsPath;

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x28F690", Offset = "0x28F690", VA = "0x28F690")]
		public CharaEnvSEManager()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x28F750", Offset = "0x28F750", VA = "0x28F750")]
		private void Start()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x26DAAC", Offset = "0x26DAAC", VA = "0x26DAAC")]
		public void LoadResourceInit()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x28F754", Offset = "0x28F754", VA = "0x28F754")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x28F758", Offset = "0x28F758", VA = "0x28F758")]
		public void Play(RANDOM_SE_STEP seType, Vector3 vSEPos, float pitch = 1f)
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class CollisonSE : MonoBehaviour
	{
		[Token(Token = "0x200012A")]
		public enum COLLISION_SE_TYPE
		{
			[Token(Token = "0x40005E6")]
			FOOT_STEP,
			[Token(Token = "0x40005E7")]
			CLOTH
		}

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool m_isPlay;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		private bool m_isAfterActive;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_activeTimer;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private bool m_isLawrence;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public COLLISION_SE_TYPE eCollSeType;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private SphereCollider m_footCollider;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_footCollSphereRadius;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_footCollSphereRadiusAddFureai;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Holo m_refHolo;

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x292B08", Offset = "0x292B08", VA = "0x292B08")]
		public CollisonSE()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x292B1C", Offset = "0x292B1C", VA = "0x292B1C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x293258", Offset = "0x293258", VA = "0x293258")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x293270", Offset = "0x293270", VA = "0x293270")]
		private void Start()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x293414", Offset = "0x293414", VA = "0x293414")]
		private void Update()
		{
		}
	}
}
[Token(Token = "0x200012B")]
public class MixerVolumeController : MonoBehaviour
{
	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform m_trans;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_beforeValue;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1AEF9C", Offset = "0x1AEF9C")]
	private AudioMixer m_audioMixer;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1AEFE4", Offset = "0x1AEFE4")]
	private string m_mixerPramName;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1AF02C", Offset = "0x1AF02C")]
	private bool m_isUseDecibel;

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x1D7418", Offset = "0x1D7418", VA = "0x1D7418")]
	public MixerVolumeController()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x1D74B8", Offset = "0x1D74B8", VA = "0x1D74B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x1D7614", Offset = "0x1D7614", VA = "0x1D7614")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x1D7594", Offset = "0x1D7594", VA = "0x1D7594")]
	private void SetValue(float value)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x1D7730", Offset = "0x1D7730", VA = "0x1D7730")]
	private float DecibelConversion(float volume)
	{
		return default(float);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1D7680", Offset = "0x1D7680", VA = "0x1D7680")]
	private float GetDecibelConversion(float value)
	{
		return default(float);
	}
}
namespace Game
{
	[Token(Token = "0x200012C")]
	public class RandomSE : MonoBehaviour
	{
		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int COUUNT_MAX;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_filePath;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string m_key;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_prevNo;

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x2587F0", Offset = "0x2587F0", VA = "0x2587F0")]
		public RandomSE()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x25886C", Offset = "0x25886C", VA = "0x25886C")]
		public void Init()
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x258A70", Offset = "0x258A70", VA = "0x258A70")]
		public void Play(Vector3 vSEPos, float pitch = 1f)
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class SoundManager : SingletonMonoBehaviour<SoundManager>
	{
		[Token(Token = "0x200012E")]
		public enum CHANNEL_NUM
		{
			[Token(Token = "0x4000610")]
			_1,
			[Token(Token = "0x4000611")]
			_2,
			[Token(Token = "0x4000612")]
			_3,
			[Token(Token = "0x4000613")]
			_4
		}

		[Token(Token = "0x200012F")]
		public enum TYPE
		{
			[Token(Token = "0x4000615")]
			BGM,
			[Token(Token = "0x4000616")]
			SE,
			[Token(Token = "0x4000617")]
			VOICE,
			[Token(Token = "0x4000618")]
			BGM_SYSTEM
		}

		[Token(Token = "0x2000130")]
		public enum VOICE_TYPE
		{
			[Token(Token = "0x400061A")]
			HOLO,
			[Token(Token = "0x400061B")]
			LAWRENCE
		}

		[Token(Token = "0x2000131")]
		public enum eFade
		{
			[Token(Token = "0x400061D")]
			DEFAULT,
			[Token(Token = "0x400061E")]
			IN,
			[Token(Token = "0x400061F")]
			OUT,
			[Token(Token = "0x4000620")]
			IN_END,
			[Token(Token = "0x4000621")]
			OUT_END
		}

		[Token(Token = "0x2000132")]
		private class CSoundData
		{
			[Token(Token = "0x4000622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string key;

			[Token(Token = "0x4000623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string resorceFilePath;

			[Token(Token = "0x4000624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioClip clip;

			[Token(Token = "0x4000625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool bLoadedFlag;

			[Token(Token = "0x600080E")]
			[Address(RVA = "0x1BCC54", Offset = "0x1BCC54", VA = "0x1BCC54")]
			public CSoundData(string key, string resorceFilePath)
			{
			}
		}

		[Token(Token = "0x40005F1")]
		private const float BGM_MUL_RATE = 0.37f;

		[Token(Token = "0x40005F2")]
		private const int CHANNEL = 8;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private GameObject m_object;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_isInitFlag;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private AudioSource m_sourceBgm;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_fFadeRate;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_fSpeed;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_isFadeStop;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private eFade m_eFade;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_isBGMFade;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool m_isSEFade;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool m_isVoiceFade;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private AnimationCurve fadeCurve;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject m_sourceSeGroup;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private GameObject m_sourceVoiceGroup;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, CSoundData> m_poolBgm;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_volumeBgm;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, CSoundData> m_poolSe;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_volumeSe;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_volumeHoloVoice;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_volumeLawrenceVoice;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, CSoundData> m_poolVoice;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_volumeVoice;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioMixer m_audioMixer;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Dictionary<string, AudioSource> m_sourceList;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioMixerGroup m_bgmGroup;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private AudioMixerGroup m_seGroup;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioMixerGroup m_holoGroup;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private AudioMixerGroup m_lawrenceGroup;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string savebgmstring;

		[Token(Token = "0x170000B2")]
		public AudioSource SourceBgm
		{
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x1B8F48", Offset = "0x1B8F48", VA = "0x1B8F48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		public float Se
		{
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x1B9E74", Offset = "0x1B9E74", VA = "0x1B9E74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B4")]
		public float Bgm
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x1B9E7C", Offset = "0x1B9E7C", VA = "0x1B9E7C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B5")]
		public float HoloVoice
		{
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0x1B9E84", Offset = "0x1B9E84", VA = "0x1B9E84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B6")]
		public float LawrenceVoice
		{
			[Token(Token = "0x60007E3")]
			[Address(RVA = "0x1B9E8C", Offset = "0x1B9E8C", VA = "0x1B9E8C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x1B8E0C", Offset = "0x1B8E0C", VA = "0x1B8E0C")]
		public SoundManager()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x1B8F50", Offset = "0x1B8F50", VA = "0x1B8F50")]
		public bool IsTalk()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x1B9090", Offset = "0x1B9090", VA = "0x1B9090")]
		public void FadeDontEnable()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x1B90A8", Offset = "0x1B90A8", VA = "0x1B90A8")]
		public bool GetFadeStop()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x1B90B0", Offset = "0x1B90B0", VA = "0x1B90B0")]
		public void FadeResume()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x1B90BC", Offset = "0x1B90BC", VA = "0x1B90BC")]
		public void FadePause()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x1B91EC", Offset = "0x1B91EC", VA = "0x1B91EC")]
		public eFade GetFadeType()
		{
			return default(eFade);
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x1B91F4", Offset = "0x1B91F4", VA = "0x1B91F4")]
		public void FadeIn(float time = 4f, bool isBGMFade = true, bool isSEFade = false, bool isVoiceFade = true)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x1B93CC", Offset = "0x1B93CC", VA = "0x1B93CC")]
		public void FadeOut(float time = 4f, bool isBGMFade = true, bool isSEFade = false, bool isVoiceFade = true)
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x1B95A4", Offset = "0x1B95A4", VA = "0x1B95A4")]
		private void FadeUpdate()
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x1B973C", Offset = "0x1B973C", VA = "0x1B973C")]
		private void FadeBGM()
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1B9894", Offset = "0x1B9894", VA = "0x1B9894")]
		private void FadeSE()
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x1B9E64", Offset = "0x1B9E64", VA = "0x1B9E64")]
		private void Update()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x1B9E94", Offset = "0x1B9E94", VA = "0x1B9E94")]
		private void Start()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x1B9E98", Offset = "0x1B9E98", VA = "0x1B9E98")]
		public void Init()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x1BB7B0", Offset = "0x1BB7B0", VA = "0x1BB7B0")]
		public void Load()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x1B9C20", Offset = "0x1B9C20", VA = "0x1B9C20")]
		public AudioSource GetAudioSourceSetting(TYPE type, CHANNEL_NUM eChannel = CHANNEL_NUM._1)
		{
			return null;
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x1BC2BC", Offset = "0x1BC2BC", VA = "0x1BC2BC")]
		public AudioSource GetAudioSource(TYPE type, Vector3 vSoundPos, CHANNEL_NUM eChannel = CHANNEL_NUM._1, bool isAuto = false, bool is3DSound = false, float pitch = 1f)
		{
			return null;
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x1BB338", Offset = "0x1BB338", VA = "0x1BB338")]
		public static void LoadBgm(string key, string resfilePath)
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x1BB0D8", Offset = "0x1BB0D8", VA = "0x1BB0D8")]
		public static void LoadSe(string key, string resfilePath)
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x1BB598", Offset = "0x1BB598", VA = "0x1BB598")]
		public static void LoadVoice(string key, string resfilePath)
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x1BCDC8", Offset = "0x1BCDC8", VA = "0x1BCDC8")]
		public static bool PlayBgm(string key, bool isLoop = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x1BCF58", Offset = "0x1BCF58", VA = "0x1BCF58")]
		private bool _PlayBgm(string key, bool isLoop)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x1BD444", Offset = "0x1BD444", VA = "0x1BD444")]
		public static bool StopBgm()
		{
			return default(bool);
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x1BD4F0", Offset = "0x1BD4F0", VA = "0x1BD4F0")]
		private bool _StopBgm()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x1BD580", Offset = "0x1BD580", VA = "0x1BD580")]
		public static bool StopSe(CHANNEL_NUM cannelNum)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x1BD634", Offset = "0x1BD634", VA = "0x1BD634")]
		private bool _StopSe(CHANNEL_NUM cannelNum)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x1BD6C4", Offset = "0x1BD6C4", VA = "0x1BD6C4")]
		public static bool StopVoice(CHANNEL_NUM cannelNum)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x1BD778", Offset = "0x1BD778", VA = "0x1BD778")]
		private bool _StopVoice(CHANNEL_NUM cannelNum)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x1BD808", Offset = "0x1BD808", VA = "0x1BD808")]
		public static bool PauseBgm()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x1BD8B4", Offset = "0x1BD8B4", VA = "0x1BD8B4")]
		private bool _PauseBgm()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x1BD944", Offset = "0x1BD944", VA = "0x1BD944")]
		public static bool PauseSe(CHANNEL_NUM cannelNum)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x1BD9F8", Offset = "0x1BD9F8", VA = "0x1BD9F8")]
		private bool _PauseSe(CHANNEL_NUM cannelNum)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x1BDA88", Offset = "0x1BDA88", VA = "0x1BDA88")]
		public static bool PauseVoice(CHANNEL_NUM cannelNum)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x1BDB3C", Offset = "0x1BDB3C", VA = "0x1BDB3C")]
		private bool _PauseVoice(CHANNEL_NUM cannelNum)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x1BDBCC", Offset = "0x1BDBCC", VA = "0x1BDBCC")]
		public static bool PlaySe(string key, Vector3 v3DPos, CHANNEL_NUM eChannel = CHANNEL_NUM._1, bool is3DSound = false, float pitch = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x1BE164", Offset = "0x1BE164", VA = "0x1BE164")]
		public static bool PlaySeAutoChannel(string key, Vector3 v3DPos, bool is3DSound = false, float pitch = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x1BDCC8", Offset = "0x1BDCC8", VA = "0x1BDCC8")]
		private bool _PlaySe(string key, Vector3 v3DPos, CHANNEL_NUM eChannel, bool is3DSound = false, bool isAuto = false, float pitch = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x1BE260", Offset = "0x1BE260", VA = "0x1BE260")]
		public static bool PlayVoice(string key, Vector3 v3DPos, CHANNEL_NUM eChannel = CHANNEL_NUM._1, bool is3DSound = false, bool isLawrenceVoice = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1BE7D4", Offset = "0x1BE7D4", VA = "0x1BE7D4")]
		public static bool PlayVoiceAutoChannel(string key, Vector3 v3DPos, CHANNEL_NUM eChannel = CHANNEL_NUM._1, bool is3DSound = false, bool isLawrenceVoice = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x1BE348", Offset = "0x1BE348", VA = "0x1BE348")]
		private bool _PlayVoice(string key, Vector3 v3DPos, CHANNEL_NUM eChannel, bool is3DSound = false, bool isAuto = false, bool isLawrenceVoice = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x1BE8C0", Offset = "0x1BE8C0", VA = "0x1BE8C0")]
		public bool _PlayVoiceSetAudioSource(AudioSource audioSource, string key, Vector3 v3DPos, CHANNEL_NUM eChannel, bool is3DSound = false, bool isAuto = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1B8C14", Offset = "0x1B8C14", VA = "0x1B8C14")]
		public static void VolumeBgm(float fVolume)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1BECF4", Offset = "0x1BECF4", VA = "0x1BECF4")]
		public static void VolumeBGMSystem(float fVolume)
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1B76A4", Offset = "0x1B76A4", VA = "0x1B76A4")]
		public static void VolumeSe(float fVolume)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1BEDA8", Offset = "0x1BEDA8", VA = "0x1BEDA8")]
		public void AllStop()
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x1BEE70", Offset = "0x1BEE70", VA = "0x1BEE70")]
		public void VoicePause()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1BF03C", Offset = "0x1BF03C", VA = "0x1BF03C")]
		public void AllPlay()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x1B9AD0", Offset = "0x1B9AD0", VA = "0x1B9AD0")]
		public void GetAudioMixer(TYPE type, float volume)
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1B8D04", Offset = "0x1B8D04", VA = "0x1B8D04")]
		public void GetAudioMixerEX(VOICE_TYPE voiceType, float volume)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x1BF210", Offset = "0x1BF210", VA = "0x1BF210")]
		private float DecibelConversion(float volume)
		{
			return default(float);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x1BB028", Offset = "0x1BB028", VA = "0x1BB028")]
		private float GetDecibelConversion(float value)
		{
			return default(float);
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x1BF2A0", Offset = "0x1BF2A0", VA = "0x1BF2A0")]
		public void AddSource(string key, AudioSource source)
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x1BF410", Offset = "0x1BF410", VA = "0x1BF410")]
		public void RemoveSource(string key)
		{
		}
	}
}
[Token(Token = "0x2000133")]
public class VolumeDirectionController : MonoBehaviour
{
	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AudioSource m_audioSource;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Transform m_transform;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private string m_targetPath;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform m_targetTrans;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly float COS_SMALL;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly float COS_LARGE;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_toVolume;

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xA7DF98", Offset = "0xA7DF98", VA = "0xA7DF98")]
	public VolumeDirectionController()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xA7E034", Offset = "0xA7E034", VA = "0xA7E034")]
	private void Update()
	{
	}
}
namespace Game
{
	[Token(Token = "0x2000134")]
	public class CharacterFadeComponent : MonoBehaviour
	{
		[Token(Token = "0x2000135")]
		public enum eType
		{
			[Token(Token = "0x4000630")]
			SPHERE,
			[Token(Token = "0x4000631")]
			CAPSULE
		}

		[Serializable]
		[Token(Token = "0x2000136")]
		public struct Param
		{
			[Token(Token = "0x4000632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public eType m_type;

			[Token(Token = "0x4000633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float m_size;

			[Token(Token = "0x4000634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform m_start;

			[Token(Token = "0x4000635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Transform m_end;
		}

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Param[] m_paramArray;

		[Token(Token = "0x400062E")]
		private const float FADE_START_DIST = 0.02f;

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x291768", Offset = "0x291768", VA = "0x291768")]
		public CharacterFadeComponent()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x291770", Offset = "0x291770", VA = "0x291770")]
		private void Update()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x291F20", Offset = "0x291F20", VA = "0x291F20")]
		private float CalcSphere(Vector3 cameraPos, Vector3 spherePos, float size)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000137")]
	public class CharacterKeeper : MonoBehaviour
	{
		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Transform m_hipTrans;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform m_rightHandTrans;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Transform m_catchPointTrans;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_windowCollision;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private AudioSource m_voiceSource;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_head;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private SphereCollider m_stickyFingers;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SkinnedMeshRenderer m_shadowRenderer;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private CharacterFadeComponent m_characterFade;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_transform;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private GameObject m_gameObject;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SkinnedMeshRenderer[] m_skinnedMeshRendererArray;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private DynamicBone m_dynamicBone;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LookPlayer m_lookPlayer;

		[Token(Token = "0x170000B7")]
		public Transform HipTrans
		{
			[Token(Token = "0x6000815")]
			[Address(RVA = "0x2907F8", Offset = "0x2907F8", VA = "0x2907F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		public Transform RightHandTrans
		{
			[Token(Token = "0x6000816")]
			[Address(RVA = "0x292128", Offset = "0x292128", VA = "0x292128")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		public Transform CatchPointTrans
		{
			[Token(Token = "0x6000817")]
			[Address(RVA = "0x292130", Offset = "0x292130", VA = "0x292130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		public GameObject WindowCollision
		{
			[Token(Token = "0x6000818")]
			[Address(RVA = "0x292138", Offset = "0x292138", VA = "0x292138")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		public AudioSource VoiceSource
		{
			[Token(Token = "0x6000819")]
			[Address(RVA = "0x28ED08", Offset = "0x28ED08", VA = "0x28ED08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		public Transform Head
		{
			[Token(Token = "0x600081A")]
			[Address(RVA = "0x289660", Offset = "0x289660", VA = "0x289660")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		public SphereCollider StickyFingers
		{
			[Token(Token = "0x600081B")]
			[Address(RVA = "0x292140", Offset = "0x292140", VA = "0x292140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		public SkinnedMeshRenderer ShadowRenderer
		{
			[Token(Token = "0x600081C")]
			[Address(RVA = "0x292148", Offset = "0x292148", VA = "0x292148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public CharacterFadeComponent CharacterFade
		{
			[Token(Token = "0x600081D")]
			[Address(RVA = "0x292150", Offset = "0x292150", VA = "0x292150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public new Transform transform
		{
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x292204", Offset = "0x292204", VA = "0x292204")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		public new GameObject gameObject
		{
			[Token(Token = "0x600081F")]
			[Address(RVA = "0x2895B8", Offset = "0x2895B8", VA = "0x2895B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		public SkinnedMeshRenderer[] SkinnedMeshRendererArray
		{
			[Token(Token = "0x6000820")]
			[Address(RVA = "0x291488", Offset = "0x291488", VA = "0x291488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		public DynamicBone DynamicBone
		{
			[Token(Token = "0x6000821")]
			[Address(RVA = "0x2922AC", Offset = "0x2922AC", VA = "0x2922AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public LookPlayer LookPlayer
		{
			[Token(Token = "0x6000822")]
			[Address(RVA = "0x292380", Offset = "0x292380", VA = "0x292380")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x292120", Offset = "0x292120", VA = "0x292120")]
		public CharacterKeeper()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x292454", Offset = "0x292454", VA = "0x292454")]
		private void Start()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x292458", Offset = "0x292458", VA = "0x292458")]
		internal void FaceReset()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class CharaLightManager : SingletonMonoBehaviour<CharaLightManager>
	{
		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int m_nowLightTypeIndex;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<CharaLightController> m_charaLightList;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1AF174", Offset = "0x1AF174")]
		private Color[] m_lightColorArray;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1AF1BC", Offset = "0x1AF1BC")]
		private AnimationCurve[] m_lightIntensityArray;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1AF204", Offset = "0x1AF204")]
		private Color[] m_1stShadeColorArray;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1AF24C", Offset = "0x1AF24C")]
		private Color[] m_2ndShadeColorArray;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Transform m_lightPoint;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SceneMain m_sceneMain;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int SHADER_ID_1ST_SHADECOLOR;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int SHADER_ID_2ND_SHADECOLOR;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private LightmapManager.LIGHTMAP_TYPE m_unSetType;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject m_shadowProjector;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Projector m_projector;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_woodboxLayer;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Dictionary<Material, Color[]> m_ShaderColorList;

		[Token(Token = "0x170000C5")]
		public Color[] LightColor
		{
			[Token(Token = "0x6000826")]
			[Address(RVA = "0x290120", Offset = "0x290120", VA = "0x290120")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		public AnimationCurve[] LightIntensity
		{
			[Token(Token = "0x6000827")]
			[Address(RVA = "0x290128", Offset = "0x290128", VA = "0x290128")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		public Color[] ShadeColor1st
		{
			[Token(Token = "0x6000828")]
			[Address(RVA = "0x27260C", Offset = "0x27260C", VA = "0x27260C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000829")]
			[Address(RVA = "0x290130", Offset = "0x290130", VA = "0x290130")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public Color[] ShadeColor2nd
		{
			[Token(Token = "0x600082A")]
			[Address(RVA = "0x272614", Offset = "0x272614", VA = "0x272614")]
			get
			{
				return null;
			}
			[Token(Token = "0x600082B")]
			[Address(RVA = "0x290138", Offset = "0x290138", VA = "0x290138")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public Transform LightPoint
		{
			[Token(Token = "0x600082C")]
			[Address(RVA = "0x28FEC8", Offset = "0x28FEC8", VA = "0x28FEC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		public GameObject ShadowProjector
		{
			[Token(Token = "0x600082D")]
			[Address(RVA = "0x28D38C", Offset = "0x28D38C", VA = "0x28D38C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x28FFC8", Offset = "0x28FFC8", VA = "0x28FFC8")]
		public CharaLightManager()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x290140", Offset = "0x290140", VA = "0x290140")]
		private void Start()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x28F9C8", Offset = "0x28F9C8", VA = "0x28F9C8")]
		public void AddList(CharaLightController controller)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x28FB7C", Offset = "0x28FB7C", VA = "0x28FB7C")]
		public void RemoveList(CharaLightController controller)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x290394", Offset = "0x290394", VA = "0x290394")]
		private void Update()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x2910A0", Offset = "0x2910A0", VA = "0x2910A0")]
		public void ChangeLight(LightmapManager.LIGHTMAP_TYPE type)
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x290800", Offset = "0x290800", VA = "0x290800")]
		private bool SetCharaShadeColor(CharacterKeeper chara, LightmapManager.LIGHTMAP_TYPE type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x291518", Offset = "0x291518", VA = "0x291518")]
		private Color CalcMultiple(Color bg, Color add)
		{
			return default(Color);
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x2915A0", Offset = "0x2915A0", VA = "0x2915A0")]
		private Color CalcSoftLight(Color bg, Color add)
		{
			return default(Color);
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x291628", Offset = "0x291628", VA = "0x291628")]
		private float CalcSoftLight(float bg, float add)
		{
			return default(float);
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x28FED0", Offset = "0x28FED0", VA = "0x28FED0")]
		public float CalcLightIntensity(float distance)
		{
			return default(float);
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x2916FC", Offset = "0x2916FC", VA = "0x2916FC")]
		public float CalcLightIntensity(LightmapManager.LIGHTMAP_TYPE type, float distance)
		{
			return default(float);
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x26C290", Offset = "0x26C290", VA = "0x26C290")]
		public void ChangeShadowWoodBox(bool isUse)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x26C394", Offset = "0x26C394", VA = "0x26C394")]
		public void ChangeShadowActive(bool isActive)
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class FadeManager : SingletonMonoBehaviour<FadeManager>
	{
		[Token(Token = "0x200013A")]
		public enum FADE_STATE
		{
			[Token(Token = "0x400066A")]
			DEFAULT,
			[Token(Token = "0x400066B")]
			IN,
			[Token(Token = "0x400066C")]
			OUT,
			[Token(Token = "0x400066D")]
			UV_OUT,
			[Token(Token = "0x400066E")]
			WHITE_IN,
			[Token(Token = "0x400066F")]
			WHITE_OUT,
			[Token(Token = "0x4000670")]
			FORCE_ON,
			[Token(Token = "0x4000671")]
			FORCE_OFF
		}

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Color m_whiteOutColor;

		[Token(Token = "0x4000654")]
		private const float MAX_COLOR_RATE = 1f;

		[Token(Token = "0x4000655")]
		private const float DEFAULT_TIME = 2f;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector2 UV_ANIM;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Vector2 UV_NORMAL;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private FADE_STATE m_fadeState;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve m_uvAnimSpeedCurve;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GameObject m_fadeObject;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material m_material;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_fadeTime;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_fadeRate;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector2 m_uvOffset;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_alphaShaderId;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_uvAnimTimer;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Transform m_target;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isPause;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool m_isAlreadyCalledNowFrame;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private GameObject m_specialFadeObject;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_specialMaterial;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AF2B4", Offset = "0x1AF2B4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1AF2B4", Offset = "0x1AF2B4")]
		private float <AreaValue>k__BackingField;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AF2E8", Offset = "0x1AF2E8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1AF2E8", Offset = "0x1AF2E8")]
		private float <CharaValue>k__BackingField;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Dictionary<string, Transform> m_targetList;

		[Token(Token = "0x170000CB")]
		public FADE_STATE FadeState
		{
			[Token(Token = "0x600083C")]
			[Address(RVA = "0x377D40", Offset = "0x377D40", VA = "0x377D40")]
			get
			{
				return default(FADE_STATE);
			}
		}

		[Token(Token = "0x170000CC")]
		public float FadeRate
		{
			[Token(Token = "0x600083D")]
			[Address(RVA = "0x377D48", Offset = "0x377D48", VA = "0x377D48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000CD")]
		public Transform Target
		{
			[Token(Token = "0x600083E")]
			[Address(RVA = "0x377D50", Offset = "0x377D50", VA = "0x377D50")]
			get
			{
				return null;
			}
			[Token(Token = "0x600083F")]
			[Address(RVA = "0x377D58", Offset = "0x377D58", VA = "0x377D58")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public bool IsPause
		{
			[Token(Token = "0x6000840")]
			[Address(RVA = "0x377D60", Offset = "0x377D60", VA = "0x377D60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000841")]
			[Address(RVA = "0x377D68", Offset = "0x377D68", VA = "0x377D68")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public bool IsUsing
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0x377D70", Offset = "0x377D70", VA = "0x377D70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D0")]
		public float AreaValue
		{
			[Token(Token = "0x6000843")]
			[Address(RVA = "0x377E30", Offset = "0x377E30", VA = "0x377E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AF31C", Offset = "0x1AF31C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000844")]
			[Address(RVA = "0x377E38", Offset = "0x377E38", VA = "0x377E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AF32C", Offset = "0x1AF32C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public float CharaValue
		{
			[Token(Token = "0x6000845")]
			[Address(RVA = "0x377E40", Offset = "0x377E40", VA = "0x377E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AF33C", Offset = "0x1AF33C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000846")]
			[Address(RVA = "0x377E48", Offset = "0x377E48", VA = "0x377E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1AF34C", Offset = "0x1AF34C")]
			set
			{
			}
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x377C28", Offset = "0x377C28", VA = "0x377C28")]
		public FadeManager()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x377E50", Offset = "0x377E50", VA = "0x377E50")]
		public void AddTarget(string label, Transform target)
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x377F10", Offset = "0x377F10", VA = "0x377F10")]
		public void RemoveTarget(string label)
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x377FC8", Offset = "0x377FC8", VA = "0x377FC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x378034", Offset = "0x378034", VA = "0x378034")]
		private bool CheckInit()
		{
			return default(bool);
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x3781FC", Offset = "0x3781FC", VA = "0x3781FC")]
		private void Update()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x3787A0", Offset = "0x3787A0", VA = "0x3787A0")]
		public void FadeIn(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x3789AC", Offset = "0x3789AC", VA = "0x3789AC")]
		public void FadeOut(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x378BBC", Offset = "0x378BBC", VA = "0x378BBC")]
		public void UVFadeOut([Optional] string targetLabel, float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x378E08", Offset = "0x378E08", VA = "0x378E08")]
		public void WhiteIn(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x379014", Offset = "0x379014", VA = "0x379014")]
		public void WhiteOut(float time = 2f, float startTime = 0f)
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x379224", Offset = "0x379224", VA = "0x379224")]
		public void ForceFadeOn(Color color)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x3793B0", Offset = "0x3793B0", VA = "0x3793B0")]
		public void ForceFadeOff()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x379414", Offset = "0x379414", VA = "0x379414")]
		public void SpecialFadeInit(GameObject obj)
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x3785EC", Offset = "0x3785EC", VA = "0x3785EC")]
		private void SpecialUpdate()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class FadeTargetComponent : MonoBehaviour
	{
		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string m_label;

		[Token(Token = "0x170000D2")]
		public string Label
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x37A2EC", Offset = "0x37A2EC", VA = "0x37A2EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000858")]
			[Address(RVA = "0x37A2F4", Offset = "0x37A2F4", VA = "0x37A2F4")]
			set
			{
			}
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x37A2E4", Offset = "0x37A2E4", VA = "0x37A2E4")]
		public FadeTargetComponent()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x37A2FC", Offset = "0x37A2FC", VA = "0x37A2FC")]
		private void Start()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x37A3C4", Offset = "0x37A3C4", VA = "0x37A3C4")]
		private void OnDestroy()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class FlagManager : SingletonMonoBehaviour<FlagManager>
	{
		[Token(Token = "0x200013D")]
		public enum PLATFORM
		{
			[Token(Token = "0x4000679")]
			INVALID,
			[Token(Token = "0x400067A")]
			PSVR,
			[Token(Token = "0x400067B")]
			OPEN_VR,
			[Token(Token = "0x400067C")]
			OCULUS_RIFT,
			[Token(Token = "0x400067D")]
			OCULUS_GO,
			[Token(Token = "0x400067E")]
			PC,
			[Token(Token = "0x400067F")]
			PS4,
			[Token(Token = "0x4000680")]
			OCULUS_QUEST,
			[Token(Token = "0x4000681")]
			ARRAY_MAX
		}

		[Token(Token = "0x200013E")]
		public enum EVENT_FLAG_NAME
		{
			[Token(Token = "0x4000683")]
			EVENT_1,
			[Token(Token = "0x4000684")]
			EVENT_2
		}

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private PLATFORM m_platform;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_eventParam;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_eventParam2;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_isVR;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool m_isHoloRun;

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x37AB3C", Offset = "0x37AB3C", VA = "0x37AB3C")]
		public FlagManager()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x370468", Offset = "0x370468", VA = "0x370468")]
		public PLATFORM GetPlatForm()
		{
			return default(PLATFORM);
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x37ABCC", Offset = "0x37ABCC", VA = "0x37ABCC")]
		public void SetPlatForm(PLATFORM param)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x37ABD4", Offset = "0x37ABD4", VA = "0x37ABD4")]
		public int GetIntEventFlag(EVENT_FLAG_NAME name)
		{
			return default(int);
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x37ABF8", Offset = "0x37ABF8", VA = "0x37ABF8")]
		public void SetIntEventFlag(EVENT_FLAG_NAME name, int param)
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x37AC18", Offset = "0x37AC18", VA = "0x37AC18")]
		public void AddIntEventFlag(EVENT_FLAG_NAME name, int addParam)
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x37AC48", Offset = "0x37AC48", VA = "0x37AC48")]
		public bool IsVR()
		{
			return default(bool);
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x37AC50", Offset = "0x37AC50", VA = "0x37AC50")]
		public void SetVR(bool param)
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x37AD58", Offset = "0x37AD58", VA = "0x37AD58")]
		public bool IsHoloRun()
		{
			return default(bool);
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x37AD60", Offset = "0x37AD60", VA = "0x37AD60")]
		public void SetIsHoloRun(bool param)
		{
		}
	}
}
[Token(Token = "0x200013F")]
public class PlatformChanger : MonoBehaviour
{
	[Token(Token = "0x6000865")]
	[Address(RVA = "0x2B6990", Offset = "0x2B6990", VA = "0x2B6990")]
	public PlatformChanger()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x2B6998", Offset = "0x2B6998", VA = "0x2B6998")]
	private void Start()
	{
	}
}
namespace Game
{
	[Token(Token = "0x2000140")]
	public class ResourcePath
	{
		[Token(Token = "0x4000685")]
		public const string HOLO_NAME = "Holo";

		[Token(Token = "0x4000686")]
		public const string LAWRENCE_NAME = "Lawrence";

		[Token(Token = "0x4000687")]
		public const string HOLO_BAKERY_NAME = "Holo_Bakery";

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static StringBuilder mStringBuilder;

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x25B7F0", Offset = "0x25B7F0", VA = "0x25B7F0")]
		public ResourcePath()
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x243D20", Offset = "0x243D20", VA = "0x243D20")]
		public static string GetCharacterPath(string name)
		{
			return null;
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x25B7F8", Offset = "0x25B7F8", VA = "0x25B7F8")]
		public static string GetTimelinePath(string name)
		{
			return null;
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x25B990", Offset = "0x25B990", VA = "0x25B990")]
		public static string GetParameterPath(string name)
		{
			return null;
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x25BB28", Offset = "0x25BB28", VA = "0x25BB28")]
		public static string GetEffectPath(string name)
		{
			return null;
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x25BD3C", Offset = "0x25BD3C", VA = "0x25BD3C")]
		public static string GetShadowProjectorPath()
		{
			return null;
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x25BD98", Offset = "0x25BD98", VA = "0x25BD98")]
		public static string GetVoicePath(string name)
		{
			return null;
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x25C1BC", Offset = "0x25C1BC", VA = "0x25C1BC")]
		public static string GetBGMPath(string name)
		{
			return null;
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x25C4CC", Offset = "0x25C4CC", VA = "0x25C4CC")]
		public static string GetSEPath(string name)
		{
			return null;
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x25C7DC", Offset = "0x25C7DC", VA = "0x25C7DC")]
		public static string GetSystemSEPath(string name)
		{
			return null;
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x25CAEC", Offset = "0x25CAEC", VA = "0x25CAEC")]
		public static string GetCreditPath(string name)
		{
			return null;
		}
	}
}
[Serializable]
[Token(Token = "0x2000141")]
public class AdjustSkyboxBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AnimationCurve ExposureCurve;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool m_isPlayBefore;

	[Token(Token = "0x170000D3")]
	public bool IsPlayBefore
	{
		[Token(Token = "0x6000874")]
		[Address(RVA = "0x267D84", Offset = "0x267D84", VA = "0x267D84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000875")]
		[Address(RVA = "0x267D8C", Offset = "0x267D8C", VA = "0x267D8C")]
		set
		{
		}
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x267D7C", Offset = "0x267D7C", VA = "0x267D7C")]
	public AdjustSkyboxBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000142")]
public class AdjustSkyboxClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AdjustSkyboxBehaviour template;

	[Token(Token = "0x170000D4")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000877")]
		[Address(RVA = "0x267E10", Offset = "0x267E10", VA = "0x267E10", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x267D94", Offset = "0x267D94", VA = "0x267D94")]
	public AdjustSkyboxClip()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x267E18", Offset = "0x267E18", VA = "0x267E18", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}
}
[Token(Token = "0x2000143")]
public class AdjustSkyboxMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int SHADER_ID;

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x267F04", Offset = "0x267F04", VA = "0x267F04")]
	public AdjustSkyboxMixerBehaviour()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x267F0C", Offset = "0x267F0C", VA = "0x267F0C", Slot = "12")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}
}
[Token(Token = "0x2000144")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1AF36C", Offset = "0x1AF36C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1AF36C", Offset = "0x1AF36C")]
public class AdjustSkyboxTrack : TrackAsset
{
	[Token(Token = "0x600087C")]
	[Address(RVA = "0x2683C0", Offset = "0x2683C0", VA = "0x2683C0")]
	public AdjustSkyboxTrack()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x268444", Offset = "0x268444", VA = "0x268444", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}
}
[Serializable]
[Token(Token = "0x2000145")]
public class AntiAliasingBehaviour : PlayableBehaviour
{
	[Token(Token = "0x2000146")]
	public enum eAAType
	{
		[Token(Token = "0x400068F")]
		Disable = 0,
		[Token(Token = "0x4000690")]
		x2 = 2,
		[Token(Token = "0x4000691")]
		x4 = 4,
		[Token(Token = "0x4000692")]
		x8 = 8
	}

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public eAAType m_aAType;

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x268524", Offset = "0x268524", VA = "0x268524")]
	public AntiAliasingBehaviour()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x26852C", Offset = "0x26852C", VA = "0x26852C", Slot = "5")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x268530", Offset = "0x268530", VA = "0x268530", Slot = "9")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}
}
[Serializable]
[Token(Token = "0x2000147")]
public class AntiAliasingClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AntiAliasingBehaviour template;

	[Token(Token = "0x170000D5")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000882")]
		[Address(RVA = "0x268634", Offset = "0x268634", VA = "0x268634", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x2685B8", Offset = "0x2685B8", VA = "0x2685B8")]
	public AntiAliasingClip()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x26863C", Offset = "0x26863C", VA = "0x26863C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}
}
[Token(Token = "0x2000148")]
public class AntiAliasingMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x6000884")]
	[Address(RVA = "0x26874C", Offset = "0x26874C", VA = "0x26874C")]
	public AntiAliasingMixerBehaviour()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x268754", Offset = "0x268754", VA = "0x268754", Slot = "12")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}
}
[Token(Token = "0x2000149")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1AF414", Offset = "0x1AF414")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1AF414", Offset = "0x1AF414")]
public class AntiAliasingTrack : TrackAsset
{
	[Token(Token = "0x6000886")]
	[Address(RVA = "0x268758", Offset = "0x268758", VA = "0x268758")]
	public AntiAliasingTrack()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x2687DC", Offset = "0x2687DC", VA = "0x2687DC", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}
}
[Serializable]
[Token(Token = "0x200014A")]
public class ChangeLightmapBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private LightmapManager.LIGHTMAP_TYPE m_type;

	[Token(Token = "0x170000D6")]
	public LightmapManager.LIGHTMAP_TYPE Type
	{
		[Token(Token = "0x6000889")]
		[Address(RVA = "0x26B950", Offset = "0x26B950", VA = "0x26B950")]
		get
		{
			return default(LightmapManager.LIGHTMAP_TYPE);
		}
		[Token(Token = "0x600088A")]
		[Address(RVA = "0x26B958", Offset = "0x26B958", VA = "0x26B958")]
		set
		{
		}
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x26B948", Offset = "0x26B948", VA = "0x26B948")]
	public ChangeLightmapBehaviour()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x26B960", Offset = "0x26B960", VA = "0x26B960", Slot = "9")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}
}
[Serializable]
[Token(Token = "0x200014B")]
public class ChangeLightmapClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ChangeLightmapBehaviour template;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LightmapManager.LIGHTMAP_TYPE m_type;

	[Token(Token = "0x170000D7")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600088D")]
		[Address(RVA = "0x26BD88", Offset = "0x26BD88", VA = "0x26BD88", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x26BD0C", Offset = "0x26BD0C", VA = "0x26BD0C")]
	public ChangeLightmapClip()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x26BD90", Offset = "0x26BD90", VA = "0x26BD90", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}
}
[Token(Token = "0x200014C")]
public class ChangeLightmapMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x600088F")]
	[Address(RVA = "0x26BEBC", Offset = "0x26BEBC", VA = "0x26BEBC")]
	public ChangeLightmapMixerBehaviour()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x26BEC4", Offset = "0x26BEC4", VA = "0x26BEC4", Slot = "12")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}
}
[Token(Token = "0x200014D")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1AF4C0", Offset = "0x1AF4C0")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1AF4C0", Offset = "0x1AF4C0")]
public class ChangeLightmapTrack : TrackAsset
{
	[Token(Token = "0x6000891")]
	[Address(RVA = "0x26BEC8", Offset = "0x26BEC8", VA = "0x26BEC8")]
	public ChangeLightmapTrack()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x26BF4C", Offset = "0x26BF4C", VA = "0x26BF4C", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}
}
[Serializable]
[Token(Token = "0x200014E")]
public class ChangeReceiveShadowBehaviour : PlayableBehaviour
{
	[Token(Token = "0x200014F")]
	public enum TYPE
	{
		[Token(Token = "0x400069B")]
		RECEIVE,
		[Token(Token = "0x400069C")]
		ACTIVE
	}

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool m_isFlag;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TYPE m_type;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_isActive;

	[Token(Token = "0x170000D8")]
	public bool IsFlag
	{
		[Token(Token = "0x6000894")]
		[Address(RVA = "0x26C034", Offset = "0x26C034", VA = "0x26C034")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000895")]
		[Address(RVA = "0x26C03C", Offset = "0x26C03C", VA = "0x26C03C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public TYPE Type
	{
		[Token(Token = "0x6000896")]
		[Address(RVA = "0x26C044", Offset = "0x26C044", VA = "0x26C044")]
		get
		{
			return default(TYPE);
		}
		[Token(Token = "0x6000897")]
		[Address(RVA = "0x26C04C", Offset = "0x26C04C", VA = "0x26C04C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public bool IsActive
	{
		[Token(Token = "0x6000898")]
		[Address(RVA = "0x26C054", Offset = "0x26C054", VA = "0x26C054")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000899")]
		[Address(RVA = "0x26C05C", Offset = "0x26C05C", VA = "0x26C05C")]
		set
		{
		}
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x26C02C", Offset = "0x26C02C", VA = "0x26C02C")]
	public ChangeReceiveShadowBehaviour()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x26C064", Offset = "0x26C064", VA = "0x26C064", Slot = "9")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x26C470", Offset = "0x26C470", VA = "0x26C470", Slot = "6")]
	public override void OnGraphStop(Playable playable)
	{
	}
}
[Serializable]
[Token(Token = "0x2000150")]
public class ChangeReceiveShadowClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ChangeReceiveShadowBehaviour template;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool m_isFlag;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ChangeReceiveShadowBehaviour.TYPE m_type;

	[Token(Token = "0x170000DB")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600089D")]
		[Address(RVA = "0x26C5F4", Offset = "0x26C5F4", VA = "0x26C5F4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x26C578", Offset = "0x26C578", VA = "0x26C578")]
	public ChangeReceiveShadowClip()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x26C5FC", Offset = "0x26C5FC", VA = "0x26C5FC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}
}
[Token(Token = "0x2000151")]
public class ChangeReceiveShadowMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x600089F")]
	[Address(RVA = "0x26C748", Offset = "0x26C748", VA = "0x26C748")]
	public ChangeReceiveShadowMixerBehaviour()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x26C750", Offset = "0x26C750", VA = "0x26C750", Slot = "12")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}
}
[Token(Token = "0x2000152")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1AF56C", Offset = "0x1AF56C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1AF56C", Offset = "0x1AF56C")]
public class ChangeReceiveShadowTrack : TrackAsset
{
	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x26C8E8", Offset = "0x26C8E8", VA = "0x26C8E8")]
	public ChangeReceiveShadowTrack()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x26C96C", Offset = "0x26C96C", VA = "0x26C96C", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}
}
[Serializable]
[Token(Token = "0x2000153")]
public class FadeEnableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x2850A4", Offset = "0x2850A4", VA = "0x2850A4")]
	public FadeEnableBehaviour()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x2850AC", Offset = "0x2850AC", VA = "0x2850AC", Slot = "5")]
	public override void OnGraphStart(Playable playable)
	{
	}
}
[Serializable]
[Token(Token = "0x2000154")]
public class FadeEnableClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public FadeEnableBehaviour template;

	[Token(Token = "0x170000DC")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x28512C", Offset = "0x28512C", VA = "0x28512C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x2850B0", Offset = "0x2850B0", VA = "0x2850B0")]
	public FadeEnableClip()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x285134", Offset = "0x285134", VA = "0x285134", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}
}
[Token(Token = "0x2000155")]
public class FadeEnableMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Material[] m_matArray;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool m_isInit;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool m_isEnable;

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x285244", Offset = "0x285244", VA = "0x285244")]
	public FadeEnableMixerBehaviour()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x28524C", Offset = "0x28524C", VA = "0x28524C", Slot = "12")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x2856EC", Offset = "0x2856EC", VA = "0x2856EC", Slot = "5")]
	public override void OnGraphStart(Playable playable)
	{
	}
}
[Token(Token = "0x2000156")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1AF610", Offset = "0x1AF610")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1AF610", Offset = "0x1AF610")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x1AF610", Offset = "0x1AF610")]
public class FadeEnableTrack : TrackAsset
{
	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x28570C", Offset = "0x28570C", VA = "0x28570C")]
	public FadeEnableTrack()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x285790", Offset = "0x285790", VA = "0x285790", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}
}
[Serializable]
[Token(Token = "0x2000157")]
public class LagCheckBehaviour : PlayableBehaviour
{
	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x1D4190", Offset = "0x1D4190", VA = "0x1D4190")]
	public LagCheckBehaviour()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x1D4198", Offset = "0x1D4198", VA = "0x1D4198", Slot = "5")]
	public override void OnGraphStart(Playable playable)
	{
	}
}
[Serializable]
[Token(Token = "0x2000158")]
public class LagCheckClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LagCheckBehaviour template;

	[Token(Token = "0x170000DD")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x1D4218", Offset = "0x1D4218", VA = "0x1D4218", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x1D419C", Offset = "0x1D419C", VA = "0x1D419C")]
	public LagCheckClip()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x1D4220", Offset = "0x1D4220", VA = "0x1D4220", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}
}
[Token(Token = "0x2000159")]
public class LagCheckMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private float m_startTime;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float m_baseTime;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int m_resetCounter;

	[Token(Token = "0x170000DE")]
	public static bool IsTimelineReset
	{
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1D4338", Offset = "0x1D4338", VA = "0x1D4338")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1C98C0", Offset = "0x1C98C0", VA = "0x1C98C0")]
		set
		{
		}
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x1D4330", Offset = "0x1D4330", VA = "0x1D4330")]
	public LagCheckMixerBehaviour()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1D43A8", Offset = "0x1D43A8", VA = "0x1D43A8", Slot = "12")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x1D467C", Offset = "0x1D467C", VA = "0x1D467C", Slot = "5")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x1D45BC", Offset = "0x1D45BC", VA = "0x1D45BC")]
	private void Reset()
	{
	}
}
[Token(Token = "0x200015A")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1AF6DC", Offset = "0x1AF6DC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1AF6DC", Offset = "0x1AF6DC")]
public class LagCheckTrack : TrackAsset
{
	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1D46B0", Offset = "0x1D46B0", VA = "0x1D46B0")]
	public LagCheckTrack()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x1D4734", Offset = "0x1D4734", VA = "0x1D4734", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}
}
[Serializable]
[Token(Token = "0x200015B")]
public class LightActiveBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool m_isCallSetAudioTrack;

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x1D4814", Offset = "0x1D4814", VA = "0x1D4814")]
	public LightActiveBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200015C")]
public class LightActiveClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LightActiveBehaviour template;

	[Token(Token = "0x170000DF")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1D4898", Offset = "0x1D4898", VA = "0x1D4898", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x1D481C", Offset = "0x1D481C", VA = "0x1D481C")]
	public LightActiveClip()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x1D48A0", Offset = "0x1D48A0", VA = "0x1D48A0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}
}
[Token(Token = "0x200015D")]
public class LightActiveMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool m_isInit;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private bool m_isActive;

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1D498C", Offset = "0x1D498C", VA = "0x1D498C")]
	public LightActiveMixerBehaviour()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x1D499C", Offset = "0x1D499C", VA = "0x1D499C", Slot = "12")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1D4CAC", Offset = "0x1D4CAC", VA = "0x1D4CAC", Slot = "5")]
	public override void OnGraphStart(Playable playable)
	{
	}
}
[Token(Token = "0x200015E")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1AF780", Offset = "0x1AF780")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1AF780", Offset = "0x1AF780")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x1AF780", Offset = "0x1AF780")]
public class LightActiveTrack : TrackAsset
{
	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1D4CCC", Offset = "0x1D4CCC", VA = "0x1D4CCC")]
	public LightActiveTrack()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1D4D50", Offset = "0x1D4D50", VA = "0x1D4D50", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}
}
[Serializable]
[Token(Token = "0x200015F")]
public class LipSyncBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool m_isPlayFirst;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private bool m_isPlayFinishFirst;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private double m_beforeTime;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip playAudio;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_clipIn;

	[Token(Token = "0x170000E0")]
	public bool IsPlayFirst
	{
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x1D4E4C", Offset = "0x1D4E4C", VA = "0x1D4E4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x1D4E54", Offset = "0x1D4E54", VA = "0x1D4E54")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public bool IsPlayFinishFirst
	{
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1D4E5C", Offset = "0x1D4E5C", VA = "0x1D4E5C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x1D4E64", Offset = "0x1D4E64", VA = "0x1D4E64")]
		set
		{
		}
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1D4E30", Offset = "0x1D4E30", VA = "0x1D4E30")]
	public LipSyncBehaviour()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1D4E6C", Offset = "0x1D4E6C", VA = "0x1D4E6C", Slot = "9")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1D4EEC", Offset = "0x1D4EEC", VA = "0x1D4EEC")]
	public void Play(AudioSource source)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1D4F8C", Offset = "0x1D4F8C", VA = "0x1D4F8C")]
	public void OnUpdate(AudioSource source, double time, float deltaTime)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x1D507C", Offset = "0x1D507C", VA = "0x1D507C", Slot = "10")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x1D50FC", Offset = "0x1D50FC", VA = "0x1D50FC")]
	public void Finish(AudioSource source, bool isStop)
	{
	}
}
[Serializable]
[Token(Token = "0x2000160")]
public class LipSyncClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LipSyncBehaviour template;

	[Token(Token = "0x170000E2")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x1D529C", Offset = "0x1D529C", VA = "0x1D529C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x1D520C", Offset = "0x1D520C", VA = "0x1D520C")]
	public LipSyncClip()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x1D52A4", Offset = "0x1D52A4", VA = "0x1D52A4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}
}
[Token(Token = "0x2000161")]
public class LipSyncMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private AudioSource m_audioSource;

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x1D5390", Offset = "0x1D5390", VA = "0x1D5390")]
	public LipSyncMixerBehaviour()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x1D5398", Offset = "0x1D5398", VA = "0x1D5398", Slot = "12")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x1D57E8", Offset = "0x1D57E8", VA = "0x1D57E8", Slot = "6")]
	public override void OnGraphStop(Playable playable)
	{
	}
}
[Token(Token = "0x2000162")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1AF858", Offset = "0x1AF858")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1AF858", Offset = "0x1AF858")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x1AF858", Offset = "0x1AF858")]
public class LipSyncTrack : TrackAsset
{
	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x1D58DC", Offset = "0x1D58DC", VA = "0x1D58DC")]
	public LipSyncTrack()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x1D5960", Offset = "0x1D5960", VA = "0x1D5960", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}
}
[Serializable]
[Token(Token = "0x2000163")]
public class LookUserBehaviour : PlayableBehaviour
{
	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x1D6E1C", Offset = "0x1D6E1C", VA = "0x1D6E1C")]
	public LookUserBehaviour()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x1D6E24", Offset = "0x1D6E24", VA = "0x1D6E24", Slot = "5")]
	public override void OnGraphStart(Playable playable)
	{
	}
}
[Serializable]
[Token(Token = "0x2000164")]
public class LookUserClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LookUserBehaviour template;

	[Token(Token = "0x170000E3")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1D6EA4", Offset = "0x1D6EA4", VA = "0x1D6EA4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x1D6E28", Offset = "0x1D6E28", VA = "0x1D6E28")]
	public LookUserClip()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x1D6EAC", Offset = "0x1D6EAC", VA = "0x1D6EAC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}
}
[Token(Token = "0x2000165")]
public class LookUserMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool m_isEnable;

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x1D6F98", Offset = "0x1D6F98", VA = "0x1D6F98")]
	public LookUserMixerBehaviour()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x1D6FA0", Offset = "0x1D6FA0", VA = "0x1D6FA0", Slot = "12")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}
}
[Token(Token = "0x2000166")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1AF92C", Offset = "0x1AF92C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1AF92C", Offset = "0x1AF92C")]
public class LookUserTrack : TrackAsset
{
	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x1D72B4", Offset = "0x1D72B4", VA = "0x1D72B4")]
	public LookUserTrack()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x1D7338", Offset = "0x1D7338", VA = "0x1D7338", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}
}
[Serializable]
[Token(Token = "0x2000167")]
public class PositionBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Vector3 m_charaPos;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 m_cameraPos;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 m_helpWindowPos;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 m_destroyHelpWindowPos;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform m_charaTrans;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Transform m_cameraTrans;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RectTransform m_backHelpWindowTrans;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 m_charaStart;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_cameraStart;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 m_backHelpWindowStart;

	[Token(Token = "0x170000E4")]
	public Vector3 CharaPos
	{
		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x2B6C68", Offset = "0x2B6C68", VA = "0x2B6C68")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x2B6C7C", Offset = "0x2B6C7C", VA = "0x2B6C7C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	public Vector3 CameraPos
	{
		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x2B6C88", Offset = "0x2B6C88", VA = "0x2B6C88")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x2B6C9C", Offset = "0x2B6C9C", VA = "0x2B6C9C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public Vector3 HelpWindowPos
	{
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x2B6CA8", Offset = "0x2B6CA8", VA = "0x2B6CA8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x2B6CBC", Offset = "0x2B6CBC", VA = "0x2B6CBC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public Vector3 DestroyHelpWindowPos
	{
		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x2B6CC8", Offset = "0x2B6CC8", VA = "0x2B6CC8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x2B6CDC", Offset = "0x2B6CDC", VA = "0x2B6CDC")]
		set
		{
		}
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x2B6C60", Offset = "0x2B6C60", VA = "0x2B6C60")]
	public PositionBehaviour()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x2B6CE8", Offset = "0x2B6CE8", VA = "0x2B6CE8", Slot = "5")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x2B6F80", Offset = "0x2B6F80", VA = "0x2B6F80", Slot = "9")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x2B73EC", Offset = "0x2B73EC", VA = "0x2B73EC", Slot = "8")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x2B7010", Offset = "0x2B7010", VA = "0x2B7010")]
	private void SetPos(Vector3 camera, Vector3 chara)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x2B7258", Offset = "0x2B7258", VA = "0x2B7258")]
	private void SetBackWindowPos(Vector3 pos)
	{
	}
}
[Serializable]
[Token(Token = "0x2000168")]
public class PositionClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public PositionBehaviour template;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 m_charaPos;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_cameraPos;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 m_HelpWindowPos;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 m_DestroyHelpWindowPos;

	[Token(Token = "0x170000E8")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x2B7494", Offset = "0x2B7494", VA = "0x2B7494", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x2B7418", Offset = "0x2B7418", VA = "0x2B7418")]
	public PositionClip()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x2B749C", Offset = "0x2B749C", VA = "0x2B749C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}
}
[Token(Token = "0x2000169")]
public class PositionMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x2B7638", Offset = "0x2B7638", VA = "0x2B7638")]
	public PositionMixerBehaviour()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x2B7640", Offset = "0x2B7640", VA = "0x2B7640", Slot = "12")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}
}
[Token(Token = "0x200016A")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1AF9D4", Offset = "0x1AF9D4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1AF9D4", Offset = "0x1AF9D4")]
public class PositionTrack : TrackAsset
{
	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x2B7644", Offset = "0x2B7644", VA = "0x2B7644")]
	public PositionTrack()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x2B76C8", Offset = "0x2B76C8", VA = "0x2B76C8", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}
}
[Serializable]
[Token(Token = "0x200016B")]
public class RenderResolutionBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float m_resolution;

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x2B77A8", Offset = "0x2B77A8", VA = "0x2B77A8")]
	public RenderResolutionBehaviour()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x2B77B0", Offset = "0x2B77B0", VA = "0x2B77B0", Slot = "5")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x2B77B4", Offset = "0x2B77B4", VA = "0x2B77B4", Slot = "9")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}
}
[Serializable]
[Token(Token = "0x200016C")]
public class RenderResolutionClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RenderResolutionBehaviour template;

	[Token(Token = "0x170000E9")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x2B78B8", Offset = "0x2B78B8", VA = "0x2B78B8", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x2B783C", Offset = "0x2B783C", VA = "0x2B783C")]
	public RenderResolutionClip()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x2B78C0", Offset = "0x2B78C0", VA = "0x2B78C0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}
}
[Token(Token = "0x200016D")]
public class RenderResolutionMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x2B79D0", Offset = "0x2B79D0", VA = "0x2B79D0")]
	public RenderResolutionMixerBehaviour()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x2B79D8", Offset = "0x2B79D8", VA = "0x2B79D8", Slot = "12")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}
}
[Token(Token = "0x200016E")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1AFA78", Offset = "0x1AFA78")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1AFA78", Offset = "0x1AFA78")]
public class RenderResolutionTrack : TrackAsset
{
	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x2B7B50", Offset = "0x2B7B50", VA = "0x2B7B50")]
	public RenderResolutionTrack()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x2B7BD4", Offset = "0x2B7BD4", VA = "0x2B7BD4", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}
}
namespace Game
{
	[Serializable]
	[Token(Token = "0x200016F")]
	public class ScriptableTimelineParameter : ScriptableObject
	{
		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<TimelineParameter> m_param;

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x262688", Offset = "0x262688", VA = "0x262688")]
		public ScriptableTimelineParameter()
		{
		}
	}
}
[Serializable]
[Token(Token = "0x2000170")]
public class TimelineFadeBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private FadeManager.FADE_STATE m_type;

	[Token(Token = "0x170000EA")]
	public FadeManager.FADE_STATE Type
	{
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xA7D6C0", Offset = "0xA7D6C0", VA = "0xA7D6C0")]
		get
		{
			return default(FadeManager.FADE_STATE);
		}
		[Token(Token = "0x6000900")]
		[Address(RVA = "0xA7D6C8", Offset = "0xA7D6C8", VA = "0xA7D6C8")]
		set
		{
		}
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xA7D6B8", Offset = "0xA7D6B8", VA = "0xA7D6B8")]
	public TimelineFadeBehaviour()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xA7D6D0", Offset = "0xA7D6D0", VA = "0xA7D6D0", Slot = "9")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xA7DAAC", Offset = "0xA7DAAC", VA = "0xA7DAAC", Slot = "10")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}
}
[Serializable]
[Token(Token = "0x2000171")]
public class TimelineFadeClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TimelineFadeBehaviour template;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FadeManager.FADE_STATE m_type;

	[Token(Token = "0x170000EB")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000904")]
		[Address(RVA = "0xA7DB9C", Offset = "0xA7DB9C", VA = "0xA7DB9C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xA7DB20", Offset = "0xA7DB20", VA = "0xA7DB20")]
	public TimelineFadeClip()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xA7DBA4", Offset = "0xA7DBA4", VA = "0xA7DBA4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}
}
[Token(Token = "0x2000172")]
public class TimelineFadeMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x6000906")]
	[Address(RVA = "0xA7DCD0", Offset = "0xA7DCD0", VA = "0xA7DCD0")]
	public TimelineFadeMixerBehaviour()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xA7DCD8", Offset = "0xA7DCD8", VA = "0xA7DCD8", Slot = "12")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}
}
[Token(Token = "0x2000173")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1AFB24", Offset = "0x1AFB24")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1AFB24", Offset = "0x1AFB24")]
public class TimelineFadeTrack : TrackAsset
{
	[Token(Token = "0x6000908")]
	[Address(RVA = "0xA7DCDC", Offset = "0xA7DCDC", VA = "0xA7DCDC")]
	public TimelineFadeTrack()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xA7DD60", Offset = "0xA7DD60", VA = "0xA7DD60", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}
}
namespace Game
{
	[Token(Token = "0x2000174")]
	public class TimelineManager : SingletonMonoBehaviour<TimelineManager>
	{
		[Token(Token = "0x2000175")]
		private struct KeepData
		{
			[Token(Token = "0x40006D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject m_obj;

			[Token(Token = "0x40006D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool m_isActive;
		}

		[Token(Token = "0x2000176")]
		private class AudioTrackBindData
		{
			[Token(Token = "0x40006D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PlayableBinding m_truck;

			[Token(Token = "0x40006D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject m_bindObj;

			[Token(Token = "0x600091C")]
			[Address(RVA = "0x1CB678", Offset = "0x1CB678", VA = "0x1CB678")]
			public AudioTrackBindData()
			{
			}
		}

		[Token(Token = "0x40006CA")]
		public const string PARENT_OBJ_NAME = "TimelineObject";

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private PlayableDirector m_playableDirector;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform m_effectParent;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private List<KeepData> m_keepList;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<AudioTrackBindData> m_audioTrackList;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_duration;

		[Token(Token = "0x170000EC")]
		private Transform EffectParent
		{
			[Token(Token = "0x600090B")]
			[Address(RVA = "0x1C8288", Offset = "0x1C8288", VA = "0x1C8288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		public float Duration
		{
			[Token(Token = "0x600090C")]
			[Address(RVA = "0x1B5604", Offset = "0x1B5604", VA = "0x1B5604")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x1C8190", Offset = "0x1C8190", VA = "0x1C8190")]
		public TimelineManager()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x1C83A4", Offset = "0x1C83A4", VA = "0x1C83A4")]
		private void CreateDirector()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x1C850C", Offset = "0x1C850C", VA = "0x1C850C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x1B5564", Offset = "0x1B5564", VA = "0x1B5564")]
		public PlayableDirector GetPlayableDirector()
		{
			return null;
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x1C85C0", Offset = "0x1C85C0", VA = "0x1C85C0")]
		public void PlayTimeline()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x1B6664", Offset = "0x1B6664", VA = "0x1B6664")]
		public void PauseTimeline()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x1B6584", Offset = "0x1B6584", VA = "0x1B6584")]
		public void ResumeTimeline()
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x1C86C8", Offset = "0x1C86C8", VA = "0x1C86C8")]
		public void StopTimeline()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x1C9528", Offset = "0x1C9528", VA = "0x1C9528")]
		private void ReleaseTimeline()
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x1C96E8", Offset = "0x1C96E8", VA = "0x1C96E8")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x1C9750", Offset = "0x1C9750", VA = "0x1C9750")]
		public float GetCurrentTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x1C981C", Offset = "0x1C981C", VA = "0x1C981C")]
		public void SetCurrentTime(float time)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x1C9928", Offset = "0x1C9928", VA = "0x1C9928")]
		public void SetTimelineAsset(string assetPath)
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x1CBB70", Offset = "0x1CBB70", VA = "0x1CBB70")]
		public void ReSetSEAudioTrack()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x1CB680", Offset = "0x1CB680", VA = "0x1CB680")]
		private void SetEffect()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x1C8FFC", Offset = "0x1C8FFC", VA = "0x1C8FFC")]
		private void RemoveEffect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000177")]
	public class TimelineParameter
	{
		[Serializable]
		[Token(Token = "0x2000178")]
		public class BindInfo
		{
			[Token(Token = "0x2000179")]
			public enum ResourceType
			{
				[Token(Token = "0x40006DA")]
				InScene,
				[Token(Token = "0x40006DB")]
				LoadProject
			}

			[Token(Token = "0x40006D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string m_trackName;

			[Token(Token = "0x40006D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string m_path;

			[Token(Token = "0x40006D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ResourceType m_resourceType;

			[Token(Token = "0x600091E")]
			[Address(RVA = "0x1CBD38", Offset = "0x1CBD38", VA = "0x1CBD38")]
			public BindInfo()
			{
			}
		}

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string m_name;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<BindInfo> m_infoList;

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x1CBD30", Offset = "0x1CBD30", VA = "0x1CBD30")]
		public TimelineParameter()
		{
		}
	}
}
[Token(Token = "0x200017A")]
public class FindToPlayTrophyCheck : MonoBehaviour
{
	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool m_isCheck;

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x285870", Offset = "0x285870", VA = "0x285870")]
	public FindToPlayTrophyCheck()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x285878", Offset = "0x285878", VA = "0x285878")]
	private void Start()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x285884", Offset = "0x285884", VA = "0x285884")]
	private void Update()
	{
	}
}
namespace Game
{
	[Token(Token = "0x200017B")]
	public class ChapterTitleCall : MonoBehaviour
	{
		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private SetUIString m_TextUGUI;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private SetUIString m_TextUGUI2;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_introTime;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_finishTime;

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x28E054", Offset = "0x28E054", VA = "0x28E054")]
		public ChapterTitleCall()
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x28E070", Offset = "0x28E070", VA = "0x28E070")]
		public SetUIString GetText()
		{
			return null;
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x28E078", Offset = "0x28E078", VA = "0x28E078")]
		public SetUIString GetText2()
		{
			return null;
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x28E080", Offset = "0x28E080", VA = "0x28E080")]
		public float GetIntroTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x28E088", Offset = "0x28E088", VA = "0x28E088")]
		public float GetFinishTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x28E090", Offset = "0x28E090", VA = "0x28E090")]
		public Animator GetAnimator()
		{
			return null;
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x28E098", Offset = "0x28E098", VA = "0x28E098")]
		private void Start()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x28E1B0", Offset = "0x28E1B0", VA = "0x28E1B0")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class FontManager : SingletonMonoBehaviour<FontManager>
	{
		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private TMP_FontAsset m_defaltFontAsset;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private TMP_FontAsset m_jpEnFont;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private TMP_FontAsset m_tcFont;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_FontAsset m_scFont;

		[Token(Token = "0x170000EE")]
		public TMP_FontAsset JpEnFont
		{
			[Token(Token = "0x600092B")]
			[Address(RVA = "0x37ADF8", Offset = "0x37ADF8", VA = "0x37ADF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		public TMP_FontAsset TcFont
		{
			[Token(Token = "0x600092C")]
			[Address(RVA = "0x37AE00", Offset = "0x37AE00", VA = "0x37AE00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		public TMP_FontAsset ScFont
		{
			[Token(Token = "0x600092D")]
			[Address(RVA = "0x37AE08", Offset = "0x37AE08", VA = "0x37AE08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x37AD68", Offset = "0x37AD68", VA = "0x37AD68")]
		public FontManager()
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x37AE10", Offset = "0x37AE10", VA = "0x37AE10")]
		public void ChangeFont(SAWSaveData.eLanguage language)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x37B144", Offset = "0x37B144", VA = "0x37B144")]
		private new void OnDestroy()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class HelpWindowBack : MonoBehaviour
	{
		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool isActive;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int currentPlatform;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GameObject m_Help_OculusGo;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_Help_PC;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private GameObject m_Help_PS4;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_Help_Rift;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private GameObject m_Help_Vive;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_Help_Xbox;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private GameObject m_Help_PS4_NONVR;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_Help_Quest;

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x384008", Offset = "0x384008", VA = "0x384008")]
		public HelpWindowBack()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x384020", Offset = "0x384020", VA = "0x384020")]
		private void Start()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x38428C", Offset = "0x38428C", VA = "0x38428C")]
		public void ActiveHelpImage(FlagManager.PLATFORM platform)
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x38448C", Offset = "0x38448C", VA = "0x38448C")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class InfluencePearentImageColor : MonoBehaviour
	{
		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Image image;

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x242674", Offset = "0x242674", VA = "0x242674")]
		public InfluencePearentImageColor()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x24267C", Offset = "0x24267C", VA = "0x24267C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x242740", Offset = "0x242740", VA = "0x242740")]
		private void LateUpdate()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class HureaiKeepPushEffect : MonoBehaviour
	{
		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameObject m_sircleGroup;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject m_sirclePlate;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Image m_sircleGauge;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_dissionEffect;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_PushMAXTime;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_length;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_MAXDelayTime;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_isChase;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool m_isSEChange;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AFD64", Offset = "0x1AFD64")]
		private float m_downSpeed;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_performanceMAXTime;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_performanceTime;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_closeCircleTime;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_isCloseCircle;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_PushTime;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_isPeformance;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool m_isEnable;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		private bool m_pause;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_delayTime;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_isClose;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool m_isDicision;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool m_isAuto;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_refPushTransform;

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x23B5DC", Offset = "0x23B5DC", VA = "0x23B5DC")]
		public HureaiKeepPushEffect()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x23B61C", Offset = "0x23B61C", VA = "0x23B61C")]
		public bool GetIsEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x23B624", Offset = "0x23B624", VA = "0x23B624")]
		public void SetIsEnable(bool param)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x23B62C", Offset = "0x23B62C", VA = "0x23B62C")]
		public void Close()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x23B714", Offset = "0x23B714", VA = "0x23B714")]
		private void CloseUpdate()
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x23B8AC", Offset = "0x23B8AC", VA = "0x23B8AC")]
		public bool GetIsAuto()
		{
			return default(bool);
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x23B8B4", Offset = "0x23B8B4", VA = "0x23B8B4")]
		public void SetIsAuto(bool param)
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x23B8BC", Offset = "0x23B8BC", VA = "0x23B8BC")]
		public float GetLength()
		{
			return default(float);
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x23B8C4", Offset = "0x23B8C4", VA = "0x23B8C4")]
		public void SetPosAndAngle(Vector3 vPos, Vector3 vLockAtPos)
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x23BA00", Offset = "0x23BA00", VA = "0x23BA00")]
		public void Active(Transform refTransform, bool isAuto = false, bool isChase = false, bool isSEChange = false)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x23BB38", Offset = "0x23BB38", VA = "0x23BB38")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x23BBB8", Offset = "0x23BBB8", VA = "0x23BBB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x23BC38", Offset = "0x23BC38", VA = "0x23BC38")]
		private void Start()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x23BC3C", Offset = "0x23BC3C", VA = "0x23BC3C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x23C518", Offset = "0x23C518", VA = "0x23C518")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x23C524", Offset = "0x23C524", VA = "0x23C524")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x23C184", Offset = "0x23C184", VA = "0x23C184")]
		private void AutoTypeUpdate()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x23C530", Offset = "0x23C530", VA = "0x23C530")]
		private void Performace()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x23C6AC", Offset = "0x23C6AC", VA = "0x23C6AC")]
		public bool IsPeformance()
		{
			return default(bool);
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x23C6B4", Offset = "0x23C6B4", VA = "0x23C6B4")]
		public bool IsDicision()
		{
			return default(bool);
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x23C6BC", Offset = "0x23C6BC", VA = "0x23C6BC")]
		public void SetDicision(bool flag)
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class KeepPushEffect : SingletonMonoBehaviour<KeepPushEffect>
	{
		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameObject m_sircleGroup;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Image m_sircleGauge;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Animator m_dissionEffect;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_PushMAXTime;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_length;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_PushTime;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_isPeformance;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool m_isEnable;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private bool m_isDicision;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		private bool m_isAuto;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_performanceMAXTime;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_performanceTime;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_refPushTransform;

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x245A74", Offset = "0x245A74", VA = "0x245A74")]
		public KeepPushEffect()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x245B20", Offset = "0x245B20", VA = "0x245B20")]
		public bool GetIsEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x245B28", Offset = "0x245B28", VA = "0x245B28")]
		public void SetIsEnable(bool param)
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x245B30", Offset = "0x245B30", VA = "0x245B30")]
		public bool GetIsAuto()
		{
			return default(bool);
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x245B38", Offset = "0x245B38", VA = "0x245B38")]
		public void SetIsAuto(bool param)
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x245B40", Offset = "0x245B40", VA = "0x245B40")]
		public float GetLength()
		{
			return default(float);
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x245B48", Offset = "0x245B48", VA = "0x245B48")]
		public void SetPosAndAngle(Vector3 vPos, Vector3 vLockAtPos)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x23FC44", Offset = "0x23FC44", VA = "0x23FC44")]
		public void Active(Transform refTransform, bool isAuto = false)
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x245C84", Offset = "0x245C84", VA = "0x245C84")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x245D08", Offset = "0x245D08", VA = "0x245D08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x245D88", Offset = "0x245D88", VA = "0x245D88")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x245DAC", Offset = "0x245DAC", VA = "0x245DAC")]
		private void CtrlTypeUpdate()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x245FCC", Offset = "0x245FCC", VA = "0x245FCC")]
		private void AutoTypeUpdate()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x2462EC", Offset = "0x2462EC", VA = "0x2462EC")]
		private void Exe()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x24653C", Offset = "0x24653C", VA = "0x24653C")]
		private void Performace()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x24662C", Offset = "0x24662C", VA = "0x24662C")]
		public bool IsPeformance()
		{
			return default(bool);
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x23FAC8", Offset = "0x23FAC8", VA = "0x23FAC8")]
		public bool IsDicision()
		{
			return default(bool);
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x23FAD0", Offset = "0x23FAD0", VA = "0x23FAD0")]
		public void SetDicision(bool flag)
		{
		}
	}
}
[Token(Token = "0x2000181")]
public class LoadingUI : MonoBehaviour
{
	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject m_obj;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Image m_frame;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Image m_image;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color m_color;

	[Token(Token = "0x400071A")]
	private const float POP_TIME = 0.5f;

	[Token(Token = "0x170000F1")]
	public bool Visible
	{
		[Token(Token = "0x600095F")]
		[Address(RVA = "0x1D6C2C", Offset = "0x1D6C2C", VA = "0x1D6C2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x1D6BE4", Offset = "0x1D6BE4", VA = "0x1D6BE4")]
	public LoadingUI()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x1D6C48", Offset = "0x1D6C48", VA = "0x1D6C48")]
	public void SetRate(float rate)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x1D6C7C", Offset = "0x1D6C7C", VA = "0x1D6C7C")]
	public void SetActive(bool isActive)
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x1D6D60", Offset = "0x1D6D60", VA = "0x1D6D60")]
	private void Update()
	{
	}
}
namespace Game
{
	[Token(Token = "0x2000182")]
	public class Plate : MonoBehaviour
	{
		[Token(Token = "0x6000963")]
		[Address(RVA = "0x2584D8", Offset = "0x2584D8", VA = "0x2584D8")]
		public Plate()
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x2584E0", Offset = "0x2584E0", VA = "0x2584E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x25873C", Offset = "0x25873C", VA = "0x25873C")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class SetUIString : MonoBehaviour
	{
		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string m_stringID;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string m_attachStringID;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private string m_attachStringID2;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SAWSaveData.eLanguage m_eCurrentLanguage;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_isDontUseScript;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool m_isNotUGUI;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool m_isInit;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_charSpacing;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextMeshPro m_tmp;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_tmpUgui;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_stringNum;

		[Token(Token = "0x170000F2")]
		public string StringID
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x26778C", Offset = "0x26778C", VA = "0x26778C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x267794", Offset = "0x267794", VA = "0x267794")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public float StringNum
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x26779C", Offset = "0x26779C", VA = "0x26779C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x2676C0", Offset = "0x2676C0", VA = "0x2676C0")]
		public SetUIString()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x26789C", Offset = "0x26789C", VA = "0x26789C")]
		private void Init()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x267A48", Offset = "0x267A48", VA = "0x267A48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x267B6C", Offset = "0x267B6C", VA = "0x267B6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x23E1A0", Offset = "0x23E1A0", VA = "0x23E1A0")]
		public void SetString(string ID, string AttachID = "", string AttachID2 = "")
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x267C90", Offset = "0x267C90", VA = "0x267C90")]
		public void Update()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x26499C", Offset = "0x26499C", VA = "0x26499C")]
		public void SetDontUseScript(bool flag)
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class SubTitleText : SingletonMonoBehaviour<SubTitleText>
	{
		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TextMeshPro Text;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject m_SubtitleSettingGroup;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject m_seriftext;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI m_pcText;

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x1C3B18", Offset = "0x1C3B18", VA = "0x1C3B18")]
		public SubTitleText()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x1C3BA8", Offset = "0x1C3BA8", VA = "0x1C3BA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x1C3D64", Offset = "0x1C3D64", VA = "0x1C3D64")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class TrackPadUI : MonoBehaviour
	{
		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private SpriteRenderer m_plate;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private SpriteRenderer m_touchPoint;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Sprite m_touchPointN;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite m_touchPointL;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Sprite m_touchPointR;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite m_touchPointU;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Sprite m_touchPointD;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AFF04", Offset = "0x1AFF04")]
		private float m_touchPointMovePower;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_cameraDist;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isActive;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_maxCloseTime;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_time;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Camera m_mainCam;

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x1CFB7C", Offset = "0x1CFB7C", VA = "0x1CFB7C")]
		public TrackPadUI()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x1CFBA0", Offset = "0x1CFBA0", VA = "0x1CFBA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x1CFED0", Offset = "0x1CFED0", VA = "0x1CFED0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x1D0A90", Offset = "0x1D0A90", VA = "0x1D0A90")]
		private void TrackPadPointCtrl()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class TrackPadUI2 : MonoBehaviour
	{
		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Image m_touchPoint;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject m_cross;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1AFF60", Offset = "0x1AFF60")]
		private float m_touchPointMovePower;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_isActive;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_maxCloseTime;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_time;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Camera m_mainCam;

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x1D0FBC", Offset = "0x1D0FBC", VA = "0x1D0FBC")]
		public TrackPadUI2()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x1D0FD8", Offset = "0x1D0FD8", VA = "0x1D0FD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x1D10D8", Offset = "0x1D10D8", VA = "0x1D10D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x1D10DC", Offset = "0x1D10DC", VA = "0x1D10DC")]
		private void TrackPadPointCtrl()
		{
		}
	}
}
[Serializable]
[Token(Token = "0x2000187")]
public class XMLStringData
{
	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	[Multiline]
	public string m_stringID;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	[Multiline]
	public string m_stringJP;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	[Multiline]
	public string m_stringEN;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	[Multiline]
	public string m_stringTC;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Multiline]
	public string m_stringSC;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[Multiline]
	public string m_stringEX1;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Multiline]
	public string m_stringEX2;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[Multiline]
	public string m_stringEX3;

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xA7F1D4", Offset = "0xA7F1D4", VA = "0xA7F1D4")]
	public XMLStringData()
	{
	}
}
[Token(Token = "0x2000188")]
public class UIStringData : ScriptableObject
{
	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<XMLStringData> m_texts;

	[Token(Token = "0x170000F4")]
	public List<XMLStringData> texts
	{
		[Token(Token = "0x600097D")]
		[Address(RVA = "0xA7DE48", Offset = "0xA7DE48", VA = "0xA7DE48")]
		get
		{
			return null;
		}
		[Token(Token = "0x600097E")]
		[Address(RVA = "0xA7DE50", Offset = "0xA7DE50", VA = "0xA7DE50")]
		set
		{
		}
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xA7DE40", Offset = "0xA7DE40", VA = "0xA7DE40")]
	public UIStringData()
	{
	}
}
namespace Game
{
	[Token(Token = "0x2000189")]
	public class UIStringManager : SingletonMonoBehaviour<UIStringManager>
	{
		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private UIStringData m_UIStringData;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool isLoad;

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x1D1738", Offset = "0x1D1738", VA = "0x1D1738")]
		public UIStringManager()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x1D17C8", Offset = "0x1D17C8", VA = "0x1D17C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x1D17CC", Offset = "0x1D17CC", VA = "0x1D17CC")]
		public void LoadStringData()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x1C4900", Offset = "0x1C4900", VA = "0x1C4900")]
		public string GetUIString(string stringID)
		{
			return null;
		}
	}
	[Token(Token = "0x200018A")]
	public class BaseWindowUI : MonoBehaviour
	{
		[Token(Token = "0x4000749")]
		private const float BACK_HELP_WINDOW_CENTER_Z = 0.816073f;

		[Token(Token = "0x400074A")]
		private const float BACK_HELP_WINDOW_CENTER_Z_CHECK_WIDTH = 0.9f;

		[Token(Token = "0x400074B")]
		private const float MIN_BORDER_LINE = 0.25f;

		[Token(Token = "0x400074C")]
		private const float BOX_SIZE = 0.3f;

		[Token(Token = "0x400074D")]
		private const float ABUJUST_RAY_VEC = 0.01f;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		protected bool m_receiveInput;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected int m_priority;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected GameObject m_buttonGroup;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected bool m_activeSickness;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		protected bool m_isStartOpenWindow;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected eWindowUIType m_eWindowUIType;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_cameraRange;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1B016C", Offset = "0x1B016C")]
		private float m_cameraVecSpeed;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_cameraVec;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected List<BaseUI> m_buttons;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected float m_buttonHeight;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected int m_selectButtonNo;

		[Token(Token = "0x400075A")]
		protected const string m_KeepPushButtonResourcePath = "Prefabs/Window/Button/KeepPushButton";

		[Token(Token = "0x400075B")]
		protected const string m_SeekBarButtonResourcePath = "Prefabs/Window/Button/SeekBarButton";

		[Token(Token = "0x400075C")]
		protected const string m_ParamChangeButtonResourcePath = "Prefabs/Window/Button/ParamChangeButton";

		[Token(Token = "0x400075D")]
		protected const string m_SkipButtonResourcePath = "Prefabs/Window/Button/SkipButton";

		[Token(Token = "0x400075E")]
		protected const string m_PopupButtonResourcePath = "Prefabs/Window/Button/PopupButton";

		[Token(Token = "0x400075F")]
		protected const string m_HureaiReleaseButtonResourcePath = "Prefabs/Window/Button/HureaiReleaseButton";

		[Token(Token = "0x4000760")]
		protected const string m_SoundMojiButtonResourcePath = "Prefabs/Window/Button/SoundMojiButton";

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Animator m_animator;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool m_isCloseAnim;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool m_isOpenAnim;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected Vector3 m_buttonGroupLocalPos;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 m_bigButtonPos;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 m_bigButtonSize;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1B01C4", Offset = "0x1B01C4")]
		protected float m_modoruRange;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1B0200", Offset = "0x1B0200")]
		protected float m_descriptionYPos;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected bool m_isChase;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected float m_leftShiftRate;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected float m_windowHeight;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool m_isCloseAnimation;

		[Token(Token = "0x400076D")]
		private const float WALL_BACK = 2.435f;

		[Token(Token = "0x400076E")]
		private const float WALL_FRONT = -1.5f;

		[Token(Token = "0x400076F")]
		private const float WALL_LEFT = -1.5f;

		[Token(Token = "0x4000770")]
		private const float WALL_RIGHT = 2.2f;

		[Token(Token = "0x4000771")]
		private const float WINDOW_SIZE = 0.25f;

		[Token(Token = "0x170000F5")]
		public bool IsCloseAnimation
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0x286ED0", Offset = "0x286ED0", VA = "0x286ED0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600098E")]
			[Address(RVA = "0x286ED8", Offset = "0x286ED8", VA = "0x286ED8")]
			set
			{
			}
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x286B70", Offset = "0x286B70", VA = "0x286B70")]
		public BaseWindowUI()
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x286CD0", Offset = "0x286CD0", VA = "0x286CD0")]
		public int GetPriority()
		{
			return default(int);
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x286CD8", Offset = "0x286CD8", VA = "0x286CD8")]
		public void SetPriority(int param)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x286CE0", Offset = "0x286CE0", VA = "0x286CE0")]
		public bool GetActiveSickness()
		{
			return default(bool);
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x286CE8", Offset = "0x286CE8", VA = "0x286CE8")]
		public void SetActiveSickness(bool param)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x286CF0", Offset = "0x286CF0", VA = "0x286CF0")]
		public eWindowUIType GetWindpwUIType()
		{
			return default(eWindowUIType);
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x286CF8", Offset = "0x286CF8", VA = "0x286CF8")]
		public void SetWindpwUIType(eWindowUIType param)
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x286D00", Offset = "0x286D00", VA = "0x286D00")]
		public int GetSelectButtonNo()
		{
			return default(int);
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x286D08", Offset = "0x286D08", VA = "0x286D08")]
		public void SettingSelectButtonNo(int param)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x286EC8", Offset = "0x286EC8", VA = "0x286EC8")]
		public void SetisChase(bool flag)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x286EE0", Offset = "0x286EE0", VA = "0x286EE0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x286FB4", Offset = "0x286FB4", VA = "0x286FB4", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x286FB8", Offset = "0x286FB8", VA = "0x286FB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x28829C", Offset = "0x28829C", VA = "0x28829C")]
		protected void CreateButtonGroup()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x2883F8", Offset = "0x2883F8", VA = "0x2883F8", Slot = "6")]
		protected virtual void SelfUpdate()
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x28850C", Offset = "0x28850C", VA = "0x28850C")]
		public void CloseCheck()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x2883FC", Offset = "0x2883FC", VA = "0x2883FC")]
		public void OpenCheck()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x288644", Offset = "0x288644", VA = "0x288644", Slot = "7")]
		public virtual void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x288834", Offset = "0x288834", VA = "0x288834", Slot = "8")]
		public virtual void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x286FD0", Offset = "0x286FD0", VA = "0x286FD0")]
		protected void RayPoint()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x288994", Offset = "0x288994", VA = "0x288994")]
		protected void CheckLeftShift()
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x289668", Offset = "0x289668", VA = "0x289668")]
		protected void Chase()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x28966C", Offset = "0x28966C", VA = "0x28966C")]
		public void OnAddInputReceiver()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x289798", Offset = "0x289798", VA = "0x289798")]
		public void OnRemoveInputReceiver()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x2898E4", Offset = "0x2898E4", VA = "0x2898E4")]
		public bool Input()
		{
			return default(bool);
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x289A5C", Offset = "0x289A5C", VA = "0x289A5C", Slot = "9")]
		public virtual bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x289A64", Offset = "0x289A64", VA = "0x289A64", Slot = "10")]
		public virtual void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x289A68", Offset = "0x289A68", VA = "0x289A68", Slot = "11")]
		public virtual void CreateButton()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x289A6C", Offset = "0x289A6C", VA = "0x289A6C", Slot = "12")]
		public virtual void HideCheck()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x289AFC", Offset = "0x289AFC", VA = "0x289AFC")]
		public void DefaultInput(int iSelectMax)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x28A1D0", Offset = "0x28A1D0", VA = "0x28A1D0")]
		private void ButtonCtrl(int no)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x28A278", Offset = "0x28A278", VA = "0x28A278")]
		public void PosUpdate(int iSelectMax)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x28AD70", Offset = "0x28AD70", VA = "0x28AD70", Slot = "13")]
		public virtual void BigButtonUpdate()
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x286E30", Offset = "0x286E30", VA = "0x286E30")]
		public bool IsSelectButtonisHide(int selectButton)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x28AD74", Offset = "0x28AD74", VA = "0x28AD74")]
		public bool IsRetracking()
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x200018B")]
public abstract class BaseUI : MonoBehaviour
{
	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool m_isSelected;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	protected bool m_isHide;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	protected bool m_isSkip;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	protected bool m_isDontSelect;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected Color m_dontSelectColor;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool m_isRetracking;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected Animator m_selectAnimator;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected SetUIString m_setUIString;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private SeekBarButton m_seekbarButtton;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected string m_discriptionID;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected Color m_notSelectColor;

	[Token(Token = "0x170000F6")]
	public SetUIString SetUIString
	{
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x269300", Offset = "0x269300", VA = "0x269300")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x269308", Offset = "0x269308", VA = "0x269308")]
		set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public SeekBarButton SeekBarButton
	{
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x269310", Offset = "0x269310", VA = "0x269310")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F8")]
	public Color notSelectColor
	{
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x2693C4", Offset = "0x2693C4", VA = "0x2693C4")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x2693D4", Offset = "0x2693D4", VA = "0x2693D4")]
		set
		{
		}
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x269204", Offset = "0x269204", VA = "0x269204")]
	protected BaseUI()
	{
	}

	[Token(Token = "0x60009AE")]
	public abstract string GetDiscriptionID();

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x2693E4", Offset = "0x2693E4", VA = "0x2693E4")]
	public void SetDiscriptionID(string discriptionID = "NONE")
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x2693EC", Offset = "0x2693EC", VA = "0x2693EC")]
	public bool GetDontSelect()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x2693F4", Offset = "0x2693F4", VA = "0x2693F4")]
	public void SetDontSelect(bool param)
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x2693FC", Offset = "0x2693FC", VA = "0x2693FC")]
	public bool GetSkip()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x269404", Offset = "0x269404", VA = "0x269404")]
	public void SetSkip(bool param)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x26940C", Offset = "0x26940C", VA = "0x26940C")]
	public bool GetHide()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x269414", Offset = "0x269414", VA = "0x269414")]
	public bool GetRetracking()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x26941C", Offset = "0x26941C", VA = "0x26941C", Slot = "5")]
	public virtual void SetHide(bool flag)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x2694BC", Offset = "0x2694BC", VA = "0x2694BC", Slot = "6")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x269664", Offset = "0x269664", VA = "0x269664")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x269668", Offset = "0x269668", VA = "0x269668")]
	private void Update()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x26966C", Offset = "0x26966C", VA = "0x26966C", Slot = "7")]
	public virtual void OnInit()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x2696FC", Offset = "0x2696FC", VA = "0x2696FC", Slot = "8")]
	public virtual void Ctrl()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x269700", Offset = "0x269700", VA = "0x269700", Slot = "9")]
	public virtual bool IsDicision()
	{
		return default(bool);
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x269708", Offset = "0x269708", VA = "0x269708", Slot = "10")]
	public virtual void OnSelect(bool isAnim = true)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x26983C", Offset = "0x26983C", VA = "0x26983C", Slot = "11")]
	public virtual void OnActive()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x269950", Offset = "0x269950", VA = "0x269950", Slot = "12")]
	public virtual void OnNotSelect()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x269968", Offset = "0x269968", VA = "0x269968", Slot = "13")]
	public virtual void OnClose()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x269830", Offset = "0x269830", VA = "0x269830")]
	public void BaseSelect()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x26995C", Offset = "0x26995C", VA = "0x26995C")]
	protected void BaseNotSelect()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x269A30", Offset = "0x269A30", VA = "0x269A30", Slot = "14")]
	public virtual void SetText(string text)
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x269A34", Offset = "0x269A34", VA = "0x269A34", Slot = "15")]
	public virtual void SetMaterial(string text, TMP_FontAsset font, Material mat)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x269A38", Offset = "0x269A38", VA = "0x269A38")]
	public void SetTitleString(string id)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x269CAC", Offset = "0x269CAC", VA = "0x269CAC", Slot = "16")]
	public virtual void ChangeUGUI(bool flag)
	{
	}
}
namespace Game
{
	[Token(Token = "0x200018C")]
	public class Button : BaseUI
	{
		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_InitPos;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_InitScale;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_InitEulerAngles;

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x28AE40", Offset = "0x28AE40", VA = "0x28AE40")]
		public Button()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x28AE44", Offset = "0x28AE44", VA = "0x28AE44", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x28AF1C", Offset = "0x28AF1C", VA = "0x28AF1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x28AF20", Offset = "0x28AF20", VA = "0x28AF20", Slot = "7")]
		public override void OnInit()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x28AF90", Offset = "0x28AF90", VA = "0x28AF90", Slot = "9")]
		public override bool IsDicision()
		{
			return default(bool);
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x28B0EC", Offset = "0x28B0EC", VA = "0x28B0EC", Slot = "8")]
		public override void Ctrl()
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x28B23C", Offset = "0x28B23C", VA = "0x28B23C", Slot = "10")]
		public override void OnSelect(bool isAnim)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x28B314", Offset = "0x28B314", VA = "0x28B314", Slot = "12")]
		public override void OnNotSelect()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x28B3E4", Offset = "0x28B3E4", VA = "0x28B3E4", Slot = "4")]
		public override string GetDiscriptionID()
		{
			return null;
		}
	}
	[Token(Token = "0x200018D")]
	public class ButtonNoAnimation : BaseUI
	{
		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_InitPos;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_InitScale;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_InitEulerAngles;

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x28B3EC", Offset = "0x28B3EC", VA = "0x28B3EC")]
		public ButtonNoAnimation()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x28B3F0", Offset = "0x28B3F0", VA = "0x28B3F0", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x28B4C8", Offset = "0x28B4C8", VA = "0x28B4C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x28B4CC", Offset = "0x28B4CC", VA = "0x28B4CC", Slot = "7")]
		public override void OnInit()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x28B4DC", Offset = "0x28B4DC", VA = "0x28B4DC", Slot = "9")]
		public override bool IsDicision()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x28B638", Offset = "0x28B638", VA = "0x28B638", Slot = "8")]
		public override void Ctrl()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x28B788", Offset = "0x28B788", VA = "0x28B788", Slot = "10")]
		public override void OnSelect(bool isAnim)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x28B78C", Offset = "0x28B78C", VA = "0x28B78C", Slot = "12")]
		public override void OnNotSelect()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x28B798", Offset = "0x28B798", VA = "0x28B798", Slot = "4")]
		public override string GetDiscriptionID()
		{
			return null;
		}
	}
	[Token(Token = "0x200018E")]
	public class HureaiReleaseButton : BaseUI
	{
		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private GameObject m_selectMark;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_MAXUnlockTime;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_time;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI m_meshProUGUI;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public TextMeshPro m_meshPro;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Animator m_anim;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Animator m_effect;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_bEffectAction;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1B02A8", Offset = "0x1B02A8")]
		private float m_rereaseTime;

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x23F1F0", Offset = "0x23F1F0", VA = "0x23F1F0")]
		public HureaiReleaseButton()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x23F210", Offset = "0x23F210", VA = "0x23F210")]
		public GameObject GetSelectMark()
		{
			return null;
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x23F218", Offset = "0x23F218", VA = "0x23F218")]
		public void SetSelectObject(GameObject param)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x23F220", Offset = "0x23F220", VA = "0x23F220")]
		public void ActionEffect()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x23F2F0", Offset = "0x23F2F0", VA = "0x23F2F0")]
		public void StopEffect()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x23F3B8", Offset = "0x23F3B8", VA = "0x23F3B8")]
		public void EffectUpdate()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x23F65C", Offset = "0x23F65C", VA = "0x23F65C", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x23F7F8", Offset = "0x23F7F8", VA = "0x23F7F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x23F970", Offset = "0x23F970", VA = "0x23F970", Slot = "7")]
		public override void OnInit()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x23F980", Offset = "0x23F980", VA = "0x23F980", Slot = "9")]
		public override bool IsDicision()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x23FAD8", Offset = "0x23FAD8", VA = "0x23FAD8", Slot = "8")]
		public override void Ctrl()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x23FCAC", Offset = "0x23FCAC", VA = "0x23FCAC", Slot = "10")]
		public override void OnSelect(bool isAnim)
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x23FCE8", Offset = "0x23FCE8", VA = "0x23FCE8", Slot = "12")]
		public override void OnNotSelect()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x23FD24", Offset = "0x23FD24", VA = "0x23FD24", Slot = "4")]
		public override string GetDiscriptionID()
		{
			return null;
		}
	}
	[Token(Token = "0x200018F")]
	public class KeepPushButton : BaseUI
	{
		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private GameObject m_selectMark;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI m_meshProUGUI;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public TextMeshPro m_meshPro;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_isInit;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_isNotUGUI;

		[Token(Token = "0x170000F9")]
		public TextMeshProUGUI meshProUGUI
		{
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0x2452CC", Offset = "0x2452CC", VA = "0x2452CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x2452D4", Offset = "0x2452D4", VA = "0x2452D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public TextMeshPro meshPro
		{
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x2452DC", Offset = "0x2452DC", VA = "0x2452DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x2452E4", Offset = "0x2452E4", VA = "0x2452E4")]
			set
			{
			}
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x2452B4", Offset = "0x2452B4", VA = "0x2452B4")]
		public KeepPushButton()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x2452BC", Offset = "0x2452BC", VA = "0x2452BC")]
		public GameObject GetSelectMark()
		{
			return null;
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x2452C4", Offset = "0x2452C4", VA = "0x2452C4")]
		public void SetSelectObject(GameObject param)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x2452EC", Offset = "0x2452EC", VA = "0x2452EC", Slot = "14")]
		public override void SetText(string moji)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x245454", Offset = "0x245454", VA = "0x245454", Slot = "15")]
		public override void SetMaterial(string text, TMP_FontAsset font, Material mat)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x245554", Offset = "0x245554", VA = "0x245554", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x24534C", Offset = "0x24534C", VA = "0x24534C")]
		private void Init()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x24559C", Offset = "0x24559C", VA = "0x24559C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x245730", Offset = "0x245730", VA = "0x245730", Slot = "7")]
		public override void OnInit()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x245740", Offset = "0x245740", VA = "0x245740", Slot = "9")]
		public override bool IsDicision()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x245888", Offset = "0x245888", VA = "0x245888", Slot = "8")]
		public override void Ctrl()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x2459F4", Offset = "0x2459F4", VA = "0x2459F4", Slot = "10")]
		public override void OnSelect(bool isAnim)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x245A30", Offset = "0x245A30", VA = "0x245A30", Slot = "12")]
		public override void OnNotSelect()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x245A6C", Offset = "0x245A6C", VA = "0x245A6C", Slot = "4")]
		public override string GetDiscriptionID()
		{
			return null;
		}
	}
	[Token(Token = "0x2000190")]
	public class ParamChangeButton : BaseUI
	{
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private GameObject m_selectMark;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isUGUI;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int m_selectNum;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_beforeSelectNum;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Image m_leftArrow;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Image m_rightArrow;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private TextMeshProUGUI m_selectNameUGUI;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TextMeshPro m_selectName;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private List<string> m_selectlist;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<string> m_selectlistDescription;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private List<string> m_selectlistDescription2;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color dontPushcColor;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Animator m_leftArrowAnim;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Animator m_rightArrowAnim;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject m_arrowLightL;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private GameObject m_arrowLightR;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_lightRate;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_lightRateSpeed;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1B0350", Offset = "0x1B0350")]
		private float m_lightRateSpeedLowerLimt;

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x256ED0", Offset = "0x256ED0", VA = "0x256ED0")]
		public ParamChangeButton()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x256FE8", Offset = "0x256FE8", VA = "0x256FE8")]
		public void AddStringList(string selectName, string selectNameDescription = "NONE", string selectNameDescription2 = "NONE")
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x2570D0", Offset = "0x2570D0", VA = "0x2570D0")]
		public int GetMaxSelectNum()
		{
			return default(int);
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x257148", Offset = "0x257148", VA = "0x257148")]
		public int GetSelectNum()
		{
			return default(int);
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x257150", Offset = "0x257150", VA = "0x257150")]
		public void SetSelectNum(int param)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x257158", Offset = "0x257158", VA = "0x257158", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x2574AC", Offset = "0x2574AC", VA = "0x2574AC", Slot = "16")]
		public override void ChangeUGUI(bool flag)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x2575A0", Offset = "0x2575A0", VA = "0x2575A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x25796C", Offset = "0x25796C", VA = "0x25796C")]
		private void CheckPushEffect()
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x257C70", Offset = "0x257C70", VA = "0x257C70", Slot = "7")]
		public override void OnInit()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x257C80", Offset = "0x257C80", VA = "0x257C80", Slot = "9")]
		public override bool IsDicision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x257DC8", Offset = "0x257DC8", VA = "0x257DC8", Slot = "8")]
		public override void Ctrl()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x25820C", Offset = "0x25820C", VA = "0x25820C", Slot = "10")]
		public override void OnSelect(bool isAnim)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x258358", Offset = "0x258358", VA = "0x258358", Slot = "12")]
		public override void OnNotSelect()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x25841C", Offset = "0x25841C", VA = "0x25841C", Slot = "4")]
		public override string GetDiscriptionID()
		{
			return null;
		}
	}
	[Token(Token = "0x2000191")]
	public class SeekBarButton : BaseUI
	{
		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_speedMiddleUpTime;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_speedUpTime;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_pushTime;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Slider m_slider;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int m_maxRate;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_rate;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private GameObject m_selectMark;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_selectMark2;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private TextMeshProUGUI m_number;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshPro m_numberSprite;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_powRate;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI m_text;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private TextMeshPro m_textSplite;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Image m_handle;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Image m_fill;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_beforeValue;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_leftPushedTime;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_rightPushedTime;

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x262690", Offset = "0x262690", VA = "0x262690")]
		public SeekBarButton()
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x2626C4", Offset = "0x2626C4", VA = "0x2626C4")]
		public float GetPowRate()
		{
			return default(float);
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x2626CC", Offset = "0x2626CC", VA = "0x2626CC")]
		public void SetPowRate(float param)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x2626D4", Offset = "0x2626D4", VA = "0x2626D4")]
		public float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x2626F0", Offset = "0x2626F0", VA = "0x2626F0")]
		public int GetRate()
		{
			return default(int);
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x2626F8", Offset = "0x2626F8", VA = "0x2626F8")]
		public void SetRate(int param)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x262738", Offset = "0x262738", VA = "0x262738")]
		public int GetMaxRate()
		{
			return default(int);
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x262740", Offset = "0x262740", VA = "0x262740")]
		public void SetMaxRate(int param)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x262748", Offset = "0x262748", VA = "0x262748", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x262778", Offset = "0x262778", VA = "0x262778")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x2629F0", Offset = "0x2629F0", VA = "0x2629F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x262AC8", Offset = "0x262AC8", VA = "0x262AC8", Slot = "7")]
		public override void OnInit()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x262AD8", Offset = "0x262AD8", VA = "0x262AD8", Slot = "8")]
		public override void Ctrl()
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x262D50", Offset = "0x262D50", VA = "0x262D50")]
		private void PiPiPi()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x263278", Offset = "0x263278", VA = "0x263278", Slot = "10")]
		public override void OnSelect(bool isAnim)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x2634F4", Offset = "0x2634F4", VA = "0x2634F4", Slot = "12")]
		public override void OnNotSelect()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x263720", Offset = "0x263720", VA = "0x263720", Slot = "4")]
		public override string GetDiscriptionID()
		{
			return null;
		}
	}
	[Token(Token = "0x2000192")]
	public class SkipButton : BaseUI
	{
		[Token(Token = "0x40007B6")]
		private const float ADJUST_END_TIME = 8f;

		[Token(Token = "0x40007B7")]
		private const float CHAPTER3_ADD_TIME = 4f;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_calcAdjustEndTime;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_speedMiddleUpTime;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_speedUpTime;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_pushTime;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Slider m_slider;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int m_maxRate;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_rate;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_selectMark;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private TextMeshProUGUI m_number;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI m_number2;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private TextMeshPro m_numberSprite;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshPro m_number2Sprite;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1B04E8", Offset = "0x1B04E8")]
		private float m_speed;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_playMark;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private GameObject m_pauseMark;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_arrowL;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private GameObject m_arrowR;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject m_arrowLightL;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private GameObject m_arrowLightR;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Animator m_arrowLAnim;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Animator m_arrowRAnim;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Animator m_arrowLightLAnim;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Animator m_arrowLightRAnim;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Image m_arrowLightLImage;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Image m_arrowLightRImage;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_defaultArrowScale;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float m_bigArrowScale;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_lightRate;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float m_lightRateSpeed;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1B0574", Offset = "0x1B0574")]
		private float m_lightRateSpeedLowerLimt;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_leftReleaseCount;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int m_rightReleaseCount;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool m_isPause;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private double m_temptime;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_tempBGM;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_tempSE;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float m_tempVoice;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_tempHoloVoice;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_tempLawrenceVoice;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int beforeNowTime;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int beforeTotalTime;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float m_leftPushedTime;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float m_rightPushedTime;

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x1B53E4", Offset = "0x1B53E4", VA = "0x1B53E4")]
		public SkipButton()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1B5440", Offset = "0x1B5440", VA = "0x1B5440")]
		public float GetTimelineRate()
		{
			return default(float);
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x1B560C", Offset = "0x1B560C", VA = "0x1B560C", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x1B5798", Offset = "0x1B5798", VA = "0x1B5798")]
		private void CalcAbjustTime()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x1B58E4", Offset = "0x1B58E4", VA = "0x1B58E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x1B5AE4", Offset = "0x1B5AE4", VA = "0x1B5AE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1B6470", Offset = "0x1B6470", VA = "0x1B6470")]
		private void TimelineUpdate()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x1B6744", Offset = "0x1B6744", VA = "0x1B6744", Slot = "7")]
		public override void OnInit()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x1B68E0", Offset = "0x1B68E0", VA = "0x1B68E0")]
		private void BackTimeLine()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1B6B94", Offset = "0x1B6B94", VA = "0x1B6B94")]
		private void NextTimeLine()
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x1B6DE8", Offset = "0x1B6DE8", VA = "0x1B6DE8", Slot = "8")]
		public override void Ctrl()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1B6778", Offset = "0x1B6778", VA = "0x1B6778")]
		private void CopyVolume()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x1B7980", Offset = "0x1B7980", VA = "0x1B7980")]
		private void PiPiPi()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x1B7C14", Offset = "0x1B7C14", VA = "0x1B7C14", Slot = "10")]
		public override void OnSelect(bool isAnim)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1B7840", Offset = "0x1B7840", VA = "0x1B7840")]
		private void ResetAnim()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1B7CF8", Offset = "0x1B7CF8", VA = "0x1B7CF8", Slot = "12")]
		public override void OnNotSelect()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x1B7DC4", Offset = "0x1B7DC4", VA = "0x1B7DC4", Slot = "4")]
		public override string GetDiscriptionID()
		{
			return null;
		}
	}
	[Token(Token = "0x2000193")]
	public class SoundMojiButton : BaseUI
	{
		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int m_maxRate;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_rate;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_powRate;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI m_text;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private TextMeshPro m_textSprite;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color m_selectColor;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool m_isSelectHoloAndLowrence;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private Color m_orgColor;

		[Token(Token = "0x170000FB")]
		public bool isSelectHoloAndLowrence
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x1BF614", Offset = "0x1BF614", VA = "0x1BF614")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x1BF61C", Offset = "0x1BF61C", VA = "0x1BF61C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x1BF56C", Offset = "0x1BF56C", VA = "0x1BF56C")]
		public SoundMojiButton()
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x1BF624", Offset = "0x1BF624", VA = "0x1BF624")]
		public float GetPowRate()
		{
			return default(float);
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x1BF62C", Offset = "0x1BF62C", VA = "0x1BF62C")]
		public void SetPowRate(float param)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x1BF634", Offset = "0x1BF634", VA = "0x1BF634")]
		public float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x1BF650", Offset = "0x1BF650", VA = "0x1BF650")]
		public int GetRate()
		{
			return default(int);
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x1BF658", Offset = "0x1BF658", VA = "0x1BF658")]
		public void SetRate(int param)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x1BF660", Offset = "0x1BF660", VA = "0x1BF660")]
		public int GetMaxRate()
		{
			return default(int);
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x1BF668", Offset = "0x1BF668", VA = "0x1BF668")]
		public void SetMaxRate(int param)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x1BF670", Offset = "0x1BF670", VA = "0x1BF670", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x1BF698", Offset = "0x1BF698", VA = "0x1BF698")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x1BF770", Offset = "0x1BF770", VA = "0x1BF770")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x1BF774", Offset = "0x1BF774", VA = "0x1BF774")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x1BF7F4", Offset = "0x1BF7F4", VA = "0x1BF7F4", Slot = "7")]
		public override void OnInit()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x1BF804", Offset = "0x1BF804", VA = "0x1BF804", Slot = "8")]
		public override void Ctrl()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x1BF808", Offset = "0x1BF808", VA = "0x1BF808", Slot = "10")]
		public override void OnSelect(bool isAnim)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x1BF810", Offset = "0x1BF810", VA = "0x1BF810", Slot = "12")]
		public override void OnNotSelect()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x1BF818", Offset = "0x1BF818", VA = "0x1BF818", Slot = "4")]
		public override string GetDiscriptionID()
		{
			return null;
		}
	}
	[Token(Token = "0x2000194")]
	public class ChangeWindow : MonoBehaviour
	{
		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private List<GameObject> m_windows;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_count;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_maxcount;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_prevcount;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Animator m_leftArrowAnim;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_rightArrowAnim;

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x28B7D4", Offset = "0x28B7D4", VA = "0x28B7D4")]
		public ChangeWindow()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x28B860", Offset = "0x28B860", VA = "0x28B860")]
		public void Init()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x28BC80", Offset = "0x28BC80", VA = "0x28BC80")]
		public void Start()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x28BC84", Offset = "0x28BC84", VA = "0x28BC84")]
		public void Update()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x28BC88", Offset = "0x28BC88", VA = "0x28BC88")]
		public void Ctrl()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x28BB60", Offset = "0x28BB60", VA = "0x28BB60")]
		public void Change()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class DebugWindowUI : BaseWindowUI
	{
		[Token(Token = "0x2000196")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x40007F6")]
			BACK,
			[Token(Token = "0x40007F7")]
			STORY2,
			[Token(Token = "0x40007F8")]
			STORY3,
			[Token(Token = "0x40007F9")]
			TEST_CHARA,
			[Token(Token = "0x40007FA")]
			PERFORMANCE_WINDOW,
			[Token(Token = "0x40007FB")]
			CREDIT,
			[Token(Token = "0x40007FC")]
			RESET_CAMERA,
			[Token(Token = "0x40007FD")]
			ARRAY_MAX
		}

		[Token(Token = "0x40007F1")]
		private const int SELECT_MAX = 7;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BaseUI baseUI;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public GameObject m_fpsUI;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SceneMain m_sceneMain;

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x371878", Offset = "0x371878", VA = "0x371878")]
		public DebugWindowUI()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x371880", Offset = "0x371880", VA = "0x371880", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x371BA8", Offset = "0x371BA8", VA = "0x371BA8")]
		private void AddButton(int index, string parent, string textId)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x371EB8", Offset = "0x371EB8", VA = "0x371EB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x371EC0", Offset = "0x371EC0", VA = "0x371EC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x371F08", Offset = "0x371F08", VA = "0x371F08")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x371F10", Offset = "0x371F10", VA = "0x371F10", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x371F2C", Offset = "0x371F2C", VA = "0x371F2C", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x3727A0", Offset = "0x3727A0", VA = "0x3727A0", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x372924", Offset = "0x372924", VA = "0x372924", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x37292C", Offset = "0x37292C", VA = "0x37292C", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class DescriptionWindowUI : SingletonMonoBehaviour<DescriptionWindowUI>
	{
		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string m_UIstringID;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1B064C", Offset = "0x1B064C")]
		private float m_scroolspeed;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_startPosX;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_maxRenderFontNum;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1B0698", Offset = "0x1B0698")]
		private float m_fontSize;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_text1;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Animator m_windowAnimator;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_textNum;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1B0708", Offset = "0x1B0708")]
		private float m_waitTime;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_time;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private RectTransform m_plateTransform;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_plateDefaultScale;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_newLineNum;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_plateScale;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_isActive;

		[Token(Token = "0x170000FC")]
		public float TextNum
		{
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x372A14", Offset = "0x372A14", VA = "0x372A14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0x372A1C", Offset = "0x372A1C", VA = "0x372A1C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x372930", Offset = "0x372930", VA = "0x372930")]
		public DescriptionWindowUI()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x372A24", Offset = "0x372A24", VA = "0x372A24")]
		public void SetTransform(Transform _transform, float addY)
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x372D4C", Offset = "0x372D4C", VA = "0x372D4C")]
		public void Open()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x372DE8", Offset = "0x372DE8", VA = "0x372DE8")]
		public void Close()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x372E88", Offset = "0x372E88", VA = "0x372E88")]
		public void SetString(string stringID, string AttachID = "")
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x373194", Offset = "0x373194", VA = "0x373194")]
		private void ScroolUpdate()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x37310C", Offset = "0x37310C", VA = "0x37310C")]
		private void PosReset()
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x373418", Offset = "0x373418", VA = "0x373418")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x3735C0", Offset = "0x3735C0", VA = "0x3735C0")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class DramaSelectWindowUI : BaseWindowUI
	{
		[Token(Token = "0x2000199")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x4000812")]
			CHAPTER1,
			[Token(Token = "0x4000813")]
			CHAPTER2,
			[Token(Token = "0x4000814")]
			CHAPTER3,
			[Token(Token = "0x4000815")]
			BACK_WINDOW,
			[Token(Token = "0x4000816")]
			ARRAY_MAX
		}

		[Token(Token = "0x400080D")]
		private const int SELECT_MAX = 4;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject window1;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public GameObject window2;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject window3;

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x3736E4", Offset = "0x3736E4", VA = "0x3736E4")]
		public DramaSelectWindowUI()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x3736EC", Offset = "0x3736EC", VA = "0x3736EC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x374504", Offset = "0x374504", VA = "0x374504")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x37450C", Offset = "0x37450C", VA = "0x37450C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x374530", Offset = "0x374530", VA = "0x374530", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x3746E0", Offset = "0x3746E0", VA = "0x3746E0", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x374E84", Offset = "0x374E84", VA = "0x374E84", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x375048", Offset = "0x375048", VA = "0x375048", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x375050", Offset = "0x375050", VA = "0x375050", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class GameFinishWindowUI : BaseWindowUI
	{
		[Token(Token = "0x200019B")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x4000819")]
			OK,
			[Token(Token = "0x400081A")]
			BACK,
			[Token(Token = "0x400081B")]
			ARRAY_MAX
		}

		[Token(Token = "0x4000817")]
		private const int SELECT_MAX = 2;

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x37BF78", Offset = "0x37BF78", VA = "0x37BF78")]
		public GameFinishWindowUI()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x37BF80", Offset = "0x37BF80", VA = "0x37BF80", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x37C7C0", Offset = "0x37C7C0", VA = "0x37C7C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x37C7C8", Offset = "0x37C7C8", VA = "0x37C7C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x37C810", Offset = "0x37C810", VA = "0x37C810")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x37C824", Offset = "0x37C824", VA = "0x37C824", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x37C9EC", Offset = "0x37C9EC", VA = "0x37C9EC", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x37CCA0", Offset = "0x37CCA0", VA = "0x37CCA0", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x37CDD0", Offset = "0x37CDD0", VA = "0x37CDD0", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x37CDD8", Offset = "0x37CDD8", VA = "0x37CDD8", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class HelpWindowUI : BaseWindowUI
	{
		[Token(Token = "0x200019D")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x4000825")]
			BACK_CURRENTSCENE,
			[Token(Token = "0x4000826")]
			ARRAY_MAX
		}

		[Token(Token = "0x400081C")]
		private const int SELECT_MAX = 1;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_Help_OculusGo;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private GameObject m_Help_PC;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject m_Help_PS4;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private GameObject m_Help_Rift;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject m_Help_Vive;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private GameObject m_Help_PS4_NonVR;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject m_Help_Quest;

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x384A4C", Offset = "0x384A4C", VA = "0x384A4C")]
		public HelpWindowUI()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x384A54", Offset = "0x384A54", VA = "0x384A54")]
		private void InitPlatform()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x384C38", Offset = "0x384C38", VA = "0x384C38")]
		public void ActiveHelpImage(FlagManager.PLATFORM platform)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x384DE0", Offset = "0x384DE0", VA = "0x384DE0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x38526C", Offset = "0x38526C", VA = "0x38526C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x385274", Offset = "0x385274", VA = "0x385274")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x3852BC", Offset = "0x3852BC", VA = "0x3852BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x3852D0", Offset = "0x3852D0", VA = "0x3852D0", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x385598", Offset = "0x385598", VA = "0x385598", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x38580C", Offset = "0x38580C", VA = "0x38580C", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x3859A4", Offset = "0x3859A4", VA = "0x3859A4", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x3859AC", Offset = "0x3859AC", VA = "0x3859AC", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class HureaiPopupMessageWindowUI : BaseWindowUI
	{
		[Token(Token = "0x200019F")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x400082B")]
			OK,
			[Token(Token = "0x400082C")]
			ARRAY_MAX
		}

		[Token(Token = "0x4000827")]
		private const int SELECT_MAX = 1;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_window1;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private GameObject m_window2;

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x23E8B0", Offset = "0x23E8B0", VA = "0x23E8B0")]
		public HureaiPopupMessageWindowUI()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x23E8B8", Offset = "0x23E8B8", VA = "0x23E8B8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x23EE70", Offset = "0x23EE70", VA = "0x23EE70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x23EE78", Offset = "0x23EE78", VA = "0x23EE78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x23EEC0", Offset = "0x23EEC0", VA = "0x23EEC0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x23EED4", Offset = "0x23EED4", VA = "0x23EED4", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x23EFF0", Offset = "0x23EFF0", VA = "0x23EFF0", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x23F0C4", Offset = "0x23F0C4", VA = "0x23F0C4", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x23F1E4", Offset = "0x23F1E4", VA = "0x23F1E4", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x23F1EC", Offset = "0x23F1EC", VA = "0x23F1EC", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class OKWindowUI : BaseWindowUI
	{
		[Token(Token = "0x20001A1")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x400082F")]
			OK,
			[Token(Token = "0x4000830")]
			BACK,
			[Token(Token = "0x4000831")]
			ARRAY_MAX
		}

		[Token(Token = "0x400082D")]
		private const int SELECT_MAX = 2;

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x24BF70", Offset = "0x24BF70", VA = "0x24BF70")]
		public OKWindowUI()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x24BF78", Offset = "0x24BF78", VA = "0x24BF78", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x24C7B4", Offset = "0x24C7B4", VA = "0x24C7B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x24C7BC", Offset = "0x24C7BC", VA = "0x24C7BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x24C804", Offset = "0x24C804", VA = "0x24C804")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x24C818", Offset = "0x24C818", VA = "0x24C818", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x24CC38", Offset = "0x24CC38", VA = "0x24CC38", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x24D1A8", Offset = "0x24D1A8", VA = "0x24D1A8", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x24D2D8", Offset = "0x24D2D8", VA = "0x24D2D8", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x24D2E0", Offset = "0x24D2E0", VA = "0x24D2E0", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class OptionWindowUI : BaseWindowUI
	{
		[Token(Token = "0x20001A3")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x4000839")]
			SETTINGS,
			[Token(Token = "0x400083A")]
			HELP,
			[Token(Token = "0x400083B")]
			SKIP,
			[Token(Token = "0x400083C")]
			BACK_TITLE,
			[Token(Token = "0x400083D")]
			BACK_CURRENTSCENE,
			[Token(Token = "0x400083E")]
			ARRAY_MAX
		}

		[Token(Token = "0x4000832")]
		private const int SELECT_MAX = 5;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject m_fpsUI;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float m_rewindTime;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject window1;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public GameObject window2;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject window3;

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x250CF0", Offset = "0x250CF0", VA = "0x250CF0")]
		public OptionWindowUI()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x250D00", Offset = "0x250D00", VA = "0x250D00", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x251DF4", Offset = "0x251DF4", VA = "0x251DF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x251DFC", Offset = "0x251DFC", VA = "0x251DFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x251E44", Offset = "0x251E44", VA = "0x251E44")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x251E58", Offset = "0x251E58", VA = "0x251E58", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x252008", Offset = "0x252008", VA = "0x252008", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x2524B4", Offset = "0x2524B4", VA = "0x2524B4", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x252BD0", Offset = "0x252BD0", VA = "0x252BD0", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x252BD8", Offset = "0x252BD8", VA = "0x252BD8", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class RenderSettingWindowUI : BaseWindowUI
	{
		[Token(Token = "0x20001A5")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x4000841")]
			RESOLUTION_SETTINGS,
			[Token(Token = "0x4000842")]
			TESSE_SETTINGS,
			[Token(Token = "0x4000843")]
			RESET_PARAM,
			[Token(Token = "0x4000844")]
			BACK_DICISION,
			[Token(Token = "0x4000845")]
			BACK,
			[Token(Token = "0x4000846")]
			ARRAY_MAX
		}

		[Token(Token = "0x400083F")]
		private const int SELECT_MAX = 5;

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x258F0C", Offset = "0x258F0C", VA = "0x258F0C")]
		public RenderSettingWindowUI()
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x258F14", Offset = "0x258F14", VA = "0x258F14", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x25A418", Offset = "0x25A418", VA = "0x25A418")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x25A420", Offset = "0x25A420", VA = "0x25A420")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x25A698", Offset = "0x25A698", VA = "0x25A698")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x25A6AC", Offset = "0x25A6AC", VA = "0x25A6AC", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x25AA04", Offset = "0x25AA04", VA = "0x25AA04", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x25B5A0", Offset = "0x25B5A0", VA = "0x25B5A0", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x25B6E0", Offset = "0x25B6E0", VA = "0x25B6E0", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x25A230", Offset = "0x25A230", VA = "0x25A230")]
		public void ChangeButtonStateWithSaveData()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x25B7EC", Offset = "0x25B7EC", VA = "0x25B7EC", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class SelectLanguageWindowUI : BaseWindowUI
	{
		[Token(Token = "0x20001A7")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x400084C")]
			JAPAN,
			[Token(Token = "0x400084D")]
			ENGLISH,
			[Token(Token = "0x400084E")]
			TC,
			[Token(Token = "0x400084F")]
			SC,
			[Token(Token = "0x4000850")]
			BACK,
			[Token(Token = "0x4000851")]
			ARRAY_MAX
		}

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Material m_jpenMat;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Material m_tcMat;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Material m_scMat;

		[Token(Token = "0x400084A")]
		private const int SELECT_MAX = 5;

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x263728", Offset = "0x263728", VA = "0x263728")]
		public SelectLanguageWindowUI()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x263730", Offset = "0x263730", VA = "0x263730", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x2649A4", Offset = "0x2649A4", VA = "0x2649A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x2649AC", Offset = "0x2649AC", VA = "0x2649AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x2649F4", Offset = "0x2649F4", VA = "0x2649F4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x264BDC", Offset = "0x264BDC", VA = "0x264BDC", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x264DE4", Offset = "0x264DE4", VA = "0x264DE4", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x26516C", Offset = "0x26516C", VA = "0x26516C", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x2653CC", Offset = "0x2653CC", VA = "0x2653CC", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x2653D4", Offset = "0x2653D4", VA = "0x2653D4", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class SettingWindowUI : BaseWindowUI
	{
		[Token(Token = "0x20001A9")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x4000854")]
			SOUND_SETTINGS,
			[Token(Token = "0x4000855")]
			RENDER_SETTINGS,
			[Token(Token = "0x4000856")]
			OPTION_SETTINGS,
			[Token(Token = "0x4000857")]
			BACK,
			[Token(Token = "0x4000858")]
			ARRAY_MAX
		}

		[Token(Token = "0x4000852")]
		private const int SELECT_MAX = 4;

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x1B2E48", Offset = "0x1B2E48", VA = "0x1B2E48")]
		public SettingWindowUI()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x1B2E50", Offset = "0x1B2E50", VA = "0x1B2E50", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x1B3C58", Offset = "0x1B3C58", VA = "0x1B3C58")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x1B3C60", Offset = "0x1B3C60", VA = "0x1B3C60")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x1B3CA8", Offset = "0x1B3CA8", VA = "0x1B3CA8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x1B3CBC", Offset = "0x1B3CBC", VA = "0x1B3CBC", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x1B3EDC", Offset = "0x1B3EDC", VA = "0x1B3EDC", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x1B45D0", Offset = "0x1B45D0", VA = "0x1B45D0", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x1B46F8", Offset = "0x1B46F8", VA = "0x1B46F8", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x1B4700", Offset = "0x1B4700", VA = "0x1B4700", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class SkipWindowUI : BaseWindowUI
	{
		[Token(Token = "0x20001AB")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x400085D")]
			SKIP,
			[Token(Token = "0x400085E")]
			BACK_CURRENTSCENE,
			[Token(Token = "0x400085F")]
			ARRAY_MAX
		}

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_plate;

		[Token(Token = "0x400085A")]
		private const int SELECT_MAX = 2;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		public float m_fPCPlateHeight;

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x1B7DCC", Offset = "0x1B7DCC", VA = "0x1B7DCC")]
		public SkipWindowUI()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x1B7DE0", Offset = "0x1B7DE0", VA = "0x1B7DE0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x1B8530", Offset = "0x1B8530", VA = "0x1B8530")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x1B8538", Offset = "0x1B8538", VA = "0x1B8538")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x1B8580", Offset = "0x1B8580", VA = "0x1B8580")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x1B8594", Offset = "0x1B8594", VA = "0x1B8594", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x1B86B0", Offset = "0x1B86B0", VA = "0x1B86B0", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x1B8784", Offset = "0x1B8784", VA = "0x1B8784", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x1B89BC", Offset = "0x1B89BC", VA = "0x1B89BC", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x1B8E08", Offset = "0x1B8E08", VA = "0x1B8E08", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class SoundSettingWindowUI : BaseWindowUI
	{
		[Token(Token = "0x20001AD")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x4000866")]
			BGM,
			[Token(Token = "0x4000867")]
			SE,
			[Token(Token = "0x4000868")]
			VOICE,
			[Token(Token = "0x4000869")]
			HOLO,
			[Token(Token = "0x400086A")]
			LAWRENCE,
			[Token(Token = "0x400086B")]
			RESET,
			[Token(Token = "0x400086C")]
			BACK,
			[Token(Token = "0x400086D")]
			CANSEL,
			[Token(Token = "0x400086E")]
			ARRAY_MAX
		}

		[Token(Token = "0x20001AE")]
		private enum VOLUME_TYPE
		{
			[Token(Token = "0x4000870")]
			BGM,
			[Token(Token = "0x4000871")]
			SE,
			[Token(Token = "0x4000872")]
			HOLO,
			[Token(Token = "0x4000873")]
			LAWRENCE,
			[Token(Token = "0x4000874")]
			MAX
		}

		[Token(Token = "0x4000860")]
		private const int SELECT_MAX = 8;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SeekBarButton[] m_volumeSeekBarArray;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int[] m_prevRateArray;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float voiceCount;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float voiceCountMAX;

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x1BFA9C", Offset = "0x1BFA9C", VA = "0x1BFA9C")]
		public SoundSettingWindowUI()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x1BFB2C", Offset = "0x1BFB2C", VA = "0x1BFB2C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x1C12C8", Offset = "0x1C12C8", VA = "0x1C12C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x1C12D0", Offset = "0x1C12D0", VA = "0x1C12D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x1C144C", Offset = "0x1C144C", VA = "0x1C144C")]
		private void CheckChangeVolume()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x1C186C", Offset = "0x1C186C", VA = "0x1C186C", Slot = "13")]
		public override void BigButtonUpdate()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x1C21A0", Offset = "0x1C21A0", VA = "0x1C21A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x1C21B4", Offset = "0x1C21B4", VA = "0x1C21B4", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1C2CE8", Offset = "0x1C2CE8", VA = "0x1C2CE8", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x1C35D4", Offset = "0x1C35D4", VA = "0x1C35D4", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x1C378C", Offset = "0x1C378C", VA = "0x1C378C")]
		private void PrevParamInit()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x1C37E8", Offset = "0x1C37E8", VA = "0x1C37E8", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x1C3164", Offset = "0x1C3164", VA = "0x1C3164")]
		public void ChangeButtonStateWithSaveData()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1C37F0", Offset = "0x1C37F0", VA = "0x1C37F0", Slot = "12")]
		public override void HideCheck()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x1C2AA8", Offset = "0x1C2AA8", VA = "0x1C2AA8")]
		private void SetVolumeFromSaveData()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x1C12A8", Offset = "0x1C12A8", VA = "0x1C12A8")]
		private int GetVolumeIndex(SELECT_TYPE type)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001AF")]
	public class SubtitleSettingWindowUI : BaseWindowUI
	{
		[Token(Token = "0x20001B0")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x400087C")]
			SUBTITLE_TYPE,
			[Token(Token = "0x400087D")]
			RESET_PARAM,
			[Token(Token = "0x400087E")]
			BACK,
			[Token(Token = "0x400087F")]
			ARRAY_MAX
		}

		[Token(Token = "0x4000875")]
		private const int SELECT_MAX = 3;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_window1;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private GameObject m_window2;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_saveSelectNO;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int m_prevSelectNo;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ParamChangeButton m_paramChangeButton;

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x1C4D30", Offset = "0x1C4D30", VA = "0x1C4D30")]
		public SubtitleSettingWindowUI()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x1C4D38", Offset = "0x1C4D38", VA = "0x1C4D38", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x1C65C4", Offset = "0x1C65C4", VA = "0x1C65C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x1C65CC", Offset = "0x1C65CC", VA = "0x1C65CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x1C7470", Offset = "0x1C7470", VA = "0x1C7470")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x1C7484", Offset = "0x1C7484", VA = "0x1C7484", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x1C7730", Offset = "0x1C7730", VA = "0x1C7730", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x1C7B58", Offset = "0x1C7B58", VA = "0x1C7B58", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x1C7CA0", Offset = "0x1C7CA0", VA = "0x1C7CA0", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x1C7E38", Offset = "0x1C7E38", VA = "0x1C7E38")]
		private void Save()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x1C7358", Offset = "0x1C7358", VA = "0x1C7358")]
		private void SetSubtitle(int num)
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x1C635C", Offset = "0x1C635C", VA = "0x1C635C")]
		public void ChangeButtonStateWithSaveData()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x1C800C", Offset = "0x1C800C", VA = "0x1C800C", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class TitleWindowUI2 : BaseWindowUI
	{
		[Token(Token = "0x20001B2")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x4000883")]
			DORAMA,
			[Token(Token = "0x4000884")]
			HUREAI,
			[Token(Token = "0x4000885")]
			OPTION,
			[Token(Token = "0x4000886")]
			LANGUAGE,
			[Token(Token = "0x4000887")]
			GAME_END,
			[Token(Token = "0x4000888")]
			ARRAY_MAX
		}

		[Token(Token = "0x4000880")]
		private const int SELECT_MAX = 5;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SceneMain m_scenemain;

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1CDA8C", Offset = "0x1CDA8C", VA = "0x1CDA8C")]
		public TitleWindowUI2()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x1CDA94", Offset = "0x1CDA94", VA = "0x1CDA94", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x1CEAB4", Offset = "0x1CEAB4", VA = "0x1CEAB4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x1CEABC", Offset = "0x1CEABC", VA = "0x1CEABC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x1CEB04", Offset = "0x1CEB04", VA = "0x1CEB04", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x1CEF8C", Offset = "0x1CEF8C", VA = "0x1CEF8C", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x1CF730", Offset = "0x1CF730", VA = "0x1CF730", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x1CF8D0", Offset = "0x1CF8D0", VA = "0x1CF8D0", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x1CF8D8", Offset = "0x1CF8D8", VA = "0x1CF8D8", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class VRorPCWindowUI : BaseWindowUI
	{
		[Token(Token = "0x20001B4")]
		private enum SELECT_TYPE
		{
			[Token(Token = "0x400088B")]
			VR,
			[Token(Token = "0x400088C")]
			PC,
			[Token(Token = "0x400088D")]
			ARRAY_MAX
		}

		[Token(Token = "0x4000889")]
		private const int SELECT_MAX = 2;

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x1D233C", Offset = "0x1D233C", VA = "0x1D233C")]
		public VRorPCWindowUI()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x1D2344", Offset = "0x1D2344", VA = "0x1D2344", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x1D2B94", Offset = "0x1D2B94", VA = "0x1D2B94")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x1D2B9C", Offset = "0x1D2B9C", VA = "0x1D2B9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x1D2BE4", Offset = "0x1D2BE4", VA = "0x1D2BE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x1D2BF8", Offset = "0x1D2BF8", VA = "0x1D2BF8", Slot = "9")]
		public override bool OnInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x1D2C14", Offset = "0x1D2C14", VA = "0x1D2C14", Slot = "10")]
		public override void OnKeepPushDisisionCheck()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1D2E94", Offset = "0x1D2E94", VA = "0x1D2E94", Slot = "7")]
		public override void OpenWindow(bool dontinitNo = false)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x1D3034", Offset = "0x1D3034", VA = "0x1D3034", Slot = "8")]
		public override void CloseWindow(bool isCloseAnimation = false)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x1D303C", Offset = "0x1D303C", VA = "0x1D303C", Slot = "12")]
		public override void HideCheck()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class WindowOffset : SingletonMonoBehaviour<WindowOffset>
	{
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public Transform m_WindowGroup;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 m_offset;

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x1D30B0", Offset = "0x1D30B0", VA = "0x1D30B0")]
		public WindowOffset()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x1D3140", Offset = "0x1D3140", VA = "0x1D3140")]
		public Vector3 GetOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x1D3154", Offset = "0x1D3154", VA = "0x1D3154")]
		public void SetOffset(Vector3 param)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x1D3160", Offset = "0x1D3160", VA = "0x1D3160")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x1D3164", Offset = "0x1D3164", VA = "0x1D3164")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public enum eWindowUIType
	{
		[Token(Token = "0x4000891")]
		INVARID,
		[Token(Token = "0x4000892")]
		TITLE,
		[Token(Token = "0x4000893")]
		OPTION,
		[Token(Token = "0x4000894")]
		SOUND_SETTING,
		[Token(Token = "0x4000895")]
		VR_OR_PC,
		[Token(Token = "0x4000896")]
		LANGUAGE_SETTING,
		[Token(Token = "0x4000897")]
		RENDER_SETTING,
		[Token(Token = "0x4000898")]
		SUBTITLE_SETTING,
		[Token(Token = "0x4000899")]
		DRAMA_SELECT,
		[Token(Token = "0x400089A")]
		SKIP,
		[Token(Token = "0x400089B")]
		HELP,
		[Token(Token = "0x400089C")]
		SETTINGS,
		[Token(Token = "0x400089D")]
		OK_POPUP,
		[Token(Token = "0x400089E")]
		HUREAI_POPUP,
		[Token(Token = "0x400089F")]
		GAME_FINISH,
		[Token(Token = "0x40008A0")]
		DEBUG
	}
	[Token(Token = "0x20001B7")]
	public class WindowUIManager : SingletonMonoBehaviour<WindowUIManager>
	{
		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private List<BaseWindowUI> m_gameUIs;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<BaseWindowUI> m_sortingGameUIs;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_isInitFlag;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool m_isSortUpdate;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B0894", Offset = "0x1B0894")]
		private static Comparison<BaseWindowUI> <>f__am$cache0;

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x1D31AC", Offset = "0x1D31AC", VA = "0x1D31AC")]
		public WindowUIManager()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x1D323C", Offset = "0x1D323C", VA = "0x1D323C")]
		public void AddInputReceiver(BaseWindowUI ui)
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x1D32FC", Offset = "0x1D32FC", VA = "0x1D32FC")]
		public void RemoveInputReceiver(BaseWindowUI ui)
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x1D33BC", Offset = "0x1D33BC", VA = "0x1D33BC")]
		public void Init()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x1D3470", Offset = "0x1D3470", VA = "0x1D3470")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x1D3474", Offset = "0x1D3474", VA = "0x1D3474")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x1D3478", Offset = "0x1D3478", VA = "0x1D3478")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x1B4AF4", Offset = "0x1B4AF4", VA = "0x1B4AF4")]
		public BaseWindowUI GetWindowUI(eWindowUIType windoutype)
		{
			return null;
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x1D3700", Offset = "0x1D3700", VA = "0x1D3700")]
		public bool IsAnyOpenWindow()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x1D3824", Offset = "0x1D3824", VA = "0x1D3824")]
		public void AllCloseWindow()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x1D3910", Offset = "0x1D3910", VA = "0x1D3910")]
		public bool IsRetracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x1D3A70", Offset = "0x1D3A70", VA = "0x1D3A70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B08A4", Offset = "0x1B08A4")]
		private static int <Update>m__0(BaseWindowUI a, BaseWindowUI b)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001B8")]
	public class DebugCameraController : MonoBehaviour
	{
		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject m_cameraGroup;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera m_camera;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_mouseRotateSpeed;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_padRotateSpeed;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_padMoveSpeed;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_isInverse;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_pastCameraPos;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_pastCameraPos2;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_cameraAngle;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_cameraPos;

		[Token(Token = "0x170000FD")]
		public Vector3 CameraPos
		{
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x36F7B0", Offset = "0x36F7B0", VA = "0x36F7B0")]
			set
			{
			}
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x36F788", Offset = "0x36F788", VA = "0x36F788")]
		public DebugCameraController()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x36F7BC", Offset = "0x36F7BC", VA = "0x36F7BC")]
		public void SetTransform(Transform trans)
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x36F9F0", Offset = "0x36F9F0", VA = "0x36F9F0")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x36FBB8", Offset = "0x36FBB8", VA = "0x36FBB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x36FC74", Offset = "0x36FC74", VA = "0x36FC74")]
		private void _0125()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x37029C", Offset = "0x37029C", VA = "0x37029C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x370470", Offset = "0x370470", VA = "0x370470")]
		public void MouseAndKeyBoardUpdate()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x370914", Offset = "0x370914", VA = "0x370914")]
		public void GamePadUpdate()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x370B80", Offset = "0x370B80", VA = "0x370B80")]
		public void ChangeDirection()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x370B90", Offset = "0x370B90", VA = "0x370B90")]
		public void VRCameraTransformUpddate()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class VRManager : SingletonMonoBehaviour<VRManager>
	{
		[Token(Token = "0x20002BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B08C4", Offset = "0x1B08C4")]
		private sealed class <LoadDevice>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4000B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal string newDevice;

			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal string <loadDevice>__1;

			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x17000125")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001153")]
				[Address(RVA = "0x1D2290", Offset = "0x1D2290", VA = "0x1D2290", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000126")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001154")]
				[Address(RVA = "0x1D2298", Offset = "0x1D2298", VA = "0x1D2298", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001151")]
			[Address(RVA = "0x1D1F8C", Offset = "0x1D1F8C", VA = "0x1D1F8C")]
			[DebuggerHidden]
			public <LoadDevice>c__Iterator0()
			{
			}

			[Token(Token = "0x6001152")]
			[Address(RVA = "0x1D2018", Offset = "0x1D2018", VA = "0x1D2018", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001155")]
			[Address(RVA = "0x1D22A0", Offset = "0x1D22A0", VA = "0x1D22A0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001156")]
			[Address(RVA = "0x1D22B4", Offset = "0x1D22B4", VA = "0x1D22B4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40008B0")]
		public const float RENDER_SCALE_TITLE = 1f;

		[Token(Token = "0x40008B1")]
		public const float RENDER_SCALE_1 = 0.75f;

		[Token(Token = "0x40008B2")]
		public const float RENDER_SCALE_2 = 0.7f;

		[Token(Token = "0x40008B3")]
		public const float RENDER_SCALE_3_1 = 0.75f;

		[Token(Token = "0x40008B4")]
		public const float RENDER_SCALE_3_2 = 0.75f;

		[Token(Token = "0x40008B5")]
		public const float RENDER_SCALE_3_3 = 0.8f;

		[Token(Token = "0x40008B6")]
		public const float RENDER_SCALE_CREDIT = 1.35f;

		[Token(Token = "0x40008B7")]
		public const float RENDER_SCALE_MINIGAME = 0.8f;

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x1D18F0", Offset = "0x1D18F0", VA = "0x1D18F0")]
		public VRManager()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x1D1980", Offset = "0x1D1980", VA = "0x1D1980")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x1D1984", Offset = "0x1D1984", VA = "0x1D1984")]
		public static void SetFFR(OVRManager.FixedFoveatedRenderingLevel level)
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x1D1A0C", Offset = "0x1D1A0C", VA = "0x1D1A0C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x1D1A10", Offset = "0x1D1A10", VA = "0x1D1A10")]
		public void Init()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x1D1F08", Offset = "0x1D1F08", VA = "0x1D1F08")]
		[DebuggerHidden]
		private IEnumerator LoadDevice(string newDevice)
		{
			return null;
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x1D1F94", Offset = "0x1D1F94", VA = "0x1D1F94")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x1CCB40", Offset = "0x1CCB40", VA = "0x1CCB40")]
		public void ChangeParamWithSaveData()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x1D1F98", Offset = "0x1D1F98", VA = "0x1D1F98")]
		public static void Recenter()
		{
		}
	}
}
[Token(Token = "0x20001BA")]
public static class XML
{
	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xA7E41C", Offset = "0xA7E41C", VA = "0xA7E41C")]
	public static void ShowData(XElement i_element, ref List<XMLStringData> texts, ref int arrayCount, ref bool isSkip, string countUpStringID)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xA7F1DC", Offset = "0xA7F1DC", VA = "0xA7F1DC")]
	public static void ShowDataCredit(XElement i_element, ref List<XMLCreditCFData> texts, ref int arrayCount, ref bool isSkip, string countUpStringID)
	{
	}
}
namespace Game
{
	[Token(Token = "0x20001BB")]
	public class MapChange : MonoBehaviour
	{
		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameObject[] mHouseArray;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int nowSelect;

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x24B63C", Offset = "0x24B63C", VA = "0x24B63C")]
		public MapChange()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x24B644", Offset = "0x24B644", VA = "0x24B644")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x24B648", Offset = "0x24B648", VA = "0x24B648")]
		private void Update()
		{
		}
	}
}
namespace Common
{
	[Token(Token = "0x20001BC")]
	public class DebugPerformance : MonoBehaviour
	{
		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x26D490", Offset = "0x26D490", VA = "0x26D490")]
		public DebugPerformance()
		{
		}
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x20001BD")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x1D82DC", Offset = "0x1D82DC", VA = "0x1D82DC")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x1D8434", Offset = "0x1D8434", VA = "0x1D8434")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x1D8594", Offset = "0x1D8594", VA = "0x1D8594")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x1D86F4", Offset = "0x1D86F4", VA = "0x1D86F4")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x1D874C", Offset = "0x1D874C", VA = "0x1D874C", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public enum AbuseReportType
	{
		[Token(Token = "0x40008BC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0934", Offset = "0x1B0934")]
		Unknown,
		[Token(Token = "0x40008BD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0968", Offset = "0x1B0968")]
		Object,
		[Token(Token = "0x40008BE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B099C", Offset = "0x1B099C")]
		User
	}
	[Token(Token = "0x20001BF")]
	public enum AchievementType
	{
		[Token(Token = "0x40008C0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B09D0", Offset = "0x1B09D0")]
		Unknown,
		[Token(Token = "0x40008C1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0A04", Offset = "0x1B0A04")]
		Simple,
		[Token(Token = "0x40008C2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0A38", Offset = "0x1B0A38")]
		Bitfield,
		[Token(Token = "0x40008C3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0A6C", Offset = "0x1B0A6C")]
		Count
	}
	[Token(Token = "0x20001C0")]
	public class AndroidPlatform
	{
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x1D9D00", Offset = "0x1D9D00", VA = "0x1D9D00")]
		public AndroidPlatform()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x1D9D08", Offset = "0x1D9D08", VA = "0x1D9D08")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x1D9F28", Offset = "0x1D9F28", VA = "0x1D9F28")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C1")]
	public class ApplicationOptions
	{
		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1DA820", Offset = "0x1DA820", VA = "0x1DA820")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1DA974", Offset = "0x1DA974", VA = "0x1DA974")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x1DA4E0", Offset = "0x1DA4E0", VA = "0x1DA4E0")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x1DAAD0", Offset = "0x1DAAD0", VA = "0x1DAAD0", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
}
[Token(Token = "0x20001C2")]
public class BufferedAudioStream
{
	[Token(Token = "0x40008C5")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private AudioSource audio;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float[] audioBuffer;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int writePos;

	[Token(Token = "0x40008C9")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x40008CA")]
	private const int sampleRate = 48000;

	[Token(Token = "0x40008CB")]
	private const int bufferSize = 12000;

	[Token(Token = "0x40008CC")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float playbackDelayRemaining;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float remainingBufferTime;

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x26AA14", Offset = "0x26AA14", VA = "0x26AA14")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x26ABB0", Offset = "0x26ABB0", VA = "0x26ABB0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x26AB48", Offset = "0x26AB48", VA = "0x26AB48")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x26AE84", Offset = "0x26AE84", VA = "0x26AE84")]
	public void AddData(float[] samples)
	{
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x20001C3")]
	public static class Callback
	{
		[Token(Token = "0x20001C4")]
		private class RequestCallback
		{
			[Token(Token = "0x40008D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Message.Callback messageCallback;

			[Token(Token = "0x6000B35")]
			[Address(RVA = "0x298570", Offset = "0x298570", VA = "0x298570")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6000B36")]
			[Address(RVA = "0x297B00", Offset = "0x297B00", VA = "0x297B00")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x6000B37")]
			[Address(RVA = "0x298578", Offset = "0x298578", VA = "0x298578", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x20001C5")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x40008D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x6000B38")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6000B39")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, RequestCallback> requestIDsToCallbacks;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x6000B2B")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x2979B8", Offset = "0x2979B8", VA = "0x2979B8")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x6000B2D")]
		internal static void OnComplete<T>(Request<T> request, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x297B20", Offset = "0x297B20", VA = "0x297B20")]
		internal static void OnComplete(Request request, Message.Callback callback)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x297C38", Offset = "0x297C38", VA = "0x297C38")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x298064", Offset = "0x298064", VA = "0x298064")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x298134", Offset = "0x298134", VA = "0x298134")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x298228", Offset = "0x298228", VA = "0x298228")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x297DB4", Offset = "0x297DB4", VA = "0x297DB4")]
		private static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x29892C", Offset = "0x29892C", VA = "0x29892C")]
		public CallbackRunner()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x298940", Offset = "0x298940", VA = "0x298940")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x298A04", Offset = "0x298A04", VA = "0x298A04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x298B50", Offset = "0x298B50", VA = "0x298B50")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x298C08", Offset = "0x298C08", VA = "0x298C08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x298C0C", Offset = "0x298C0C", VA = "0x298C0C")]
		private void OnApplicationQuit()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class CAPI
	{
		[Token(Token = "0x20001C8")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x40008D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string stringValue_;

			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int intValue_;

			[Token(Token = "0x40008DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double doubleValue_;

			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x297824", Offset = "0x297824", VA = "0x297824")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x297864", Offset = "0x297864", VA = "0x297864")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x2978A4", Offset = "0x2978A4", VA = "0x2978A4")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x20001C9")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x40008DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40008DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x40008E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr parameterArray;

			[Token(Token = "0x40008E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint parameterArrayCount;

			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x297950", Offset = "0x297950", VA = "0x297950")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x20001CA")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x40008E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x40008E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public uint dataArrayCount;

			[Token(Token = "0x40008E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr criterionArray;

			[Token(Token = "0x40008E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x20001CB")]
		public struct OculusInitParams
		{
			[Token(Token = "0x40008E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x40008E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public string email;

			[Token(Token = "0x40008E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string password;

			[Token(Token = "0x40008E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ulong appId;

			[Token(Token = "0x40008EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x20001CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x1B0AA0", Offset = "0x1B0AA0")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x40008D6")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x40008D8")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x1DC61C", Offset = "0x1DC61C", VA = "0x1DC61C")]
		public CAPI()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x1DC624", Offset = "0x1DC624", VA = "0x1DC624")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1DC860", Offset = "0x1DC860", VA = "0x1DC860")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x1DD038", Offset = "0x1DD038", VA = "0x1DD038")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x1DD150", Offset = "0x1DD150", VA = "0x1DD150")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x1DD534", Offset = "0x1DD534", VA = "0x1DD534")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x1DD690", Offset = "0x1DD690", VA = "0x1DD690")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x1DD730", Offset = "0x1DD730", VA = "0x1DD730")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x1DD7D0", Offset = "0x1DD7D0", VA = "0x1DD7D0")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x1DD8D8", Offset = "0x1DD8D8", VA = "0x1DD8D8")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x1DD99C", Offset = "0x1DD99C", VA = "0x1DD99C")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x1D9E30", Offset = "0x1D9E30", VA = "0x1D9E30")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x1DDBB0", Offset = "0x1DDBB0", VA = "0x1DDBB0")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x1DA0A0", Offset = "0x1DA0A0", VA = "0x1DA0A0")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x1DDC90", Offset = "0x1DDC90", VA = "0x1DDC90")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x1DDDA0", Offset = "0x1DDDA0", VA = "0x1DDDA0")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1DDEF0", Offset = "0x1DDEF0", VA = "0x1DDEF0")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1DE000", Offset = "0x1DE000", VA = "0x1DE000")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1DE110", Offset = "0x1DE110", VA = "0x1DE110")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x1DE220", Offset = "0x1DE220", VA = "0x1DE220")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x1DE318", Offset = "0x1DE318", VA = "0x1DE318")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x1DE3A0", Offset = "0x1DE3A0", VA = "0x1DE3A0")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x1DE470", Offset = "0x1DE470", VA = "0x1DE470")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x1DE540", Offset = "0x1DE540", VA = "0x1DE540")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x1DE620", Offset = "0x1DE620", VA = "0x1DE620")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x1DE700", Offset = "0x1DE700", VA = "0x1DE700")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x1DE7D0", Offset = "0x1DE7D0", VA = "0x1DE7D0")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x1DE8B0", Offset = "0x1DE8B0", VA = "0x1DE8B0")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x1DE980", Offset = "0x1DE980", VA = "0x1DE980")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x1DEA60", Offset = "0x1DEA60", VA = "0x1DEA60")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x1DEB50", Offset = "0x1DEB50", VA = "0x1DEB50")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x1DEC20", Offset = "0x1DEC20", VA = "0x1DEC20")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x1DED00", Offset = "0x1DED00", VA = "0x1DED00")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x1DEDE0", Offset = "0x1DEDE0", VA = "0x1DEDE0")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x1DEEC0", Offset = "0x1DEEC0", VA = "0x1DEEC0")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x1D9A30", Offset = "0x1D9A30", VA = "0x1D9A30")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x1DEF90", Offset = "0x1DEF90", VA = "0x1DEF90")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x1DF060", Offset = "0x1DF060", VA = "0x1DF060")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x1DF140", Offset = "0x1DF140", VA = "0x1DF140")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x1DF228", Offset = "0x1DF228", VA = "0x1DF228")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x1DF650", Offset = "0x1DF650", VA = "0x1DF650")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x1DA6C0", Offset = "0x1DA6C0", VA = "0x1DA6C0")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x1DF734", Offset = "0x1DF734", VA = "0x1DF734")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x1DF880", Offset = "0x1DF880", VA = "0x1DF880")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x1DFA40", Offset = "0x1DFA40", VA = "0x1DFA40")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x1DFB40", Offset = "0x1DFB40", VA = "0x1DFB40")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x1DFC14", Offset = "0x1DFC14", VA = "0x1DFC14")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x1DFCA0", Offset = "0x1DFCA0", VA = "0x1DFCA0")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1DFD80", Offset = "0x1DFD80", VA = "0x1DFD80")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x1DFE60", Offset = "0x1DFE60", VA = "0x1DFE60")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x1DFF30", Offset = "0x1DFF30", VA = "0x1DFF30")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x1E0010", Offset = "0x1E0010", VA = "0x1E0010")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x1E00E0", Offset = "0x1E00E0", VA = "0x1E00E0")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x1E01C0", Offset = "0x1E01C0", VA = "0x1E01C0")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x1E02B0", Offset = "0x1E02B0", VA = "0x1E02B0")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1E0390", Offset = "0x1E0390", VA = "0x1E0390")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x1E0460", Offset = "0x1E0460", VA = "0x1E0460")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x1E0560", Offset = "0x1E0560", VA = "0x1E0560")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x1E0660", Offset = "0x1E0660", VA = "0x1E0660")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x1E0730", Offset = "0x1E0730", VA = "0x1E0730")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x1E0800", Offset = "0x1E0800", VA = "0x1E0800")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x1E08D0", Offset = "0x1E08D0", VA = "0x1E08D0")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x1E09A0", Offset = "0x1E09A0", VA = "0x1E09A0")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x1E0A80", Offset = "0x1E0A80", VA = "0x1E0A80")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x1E0B60", Offset = "0x1E0B60", VA = "0x1E0B60")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x1E0C40", Offset = "0x1E0C40", VA = "0x1E0C40")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x1E0D10", Offset = "0x1E0D10", VA = "0x1E0D10")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x1E0E00", Offset = "0x1E0E00", VA = "0x1E0E00")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x1E0EF0", Offset = "0x1E0EF0", VA = "0x1E0EF0")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x1E0FD0", Offset = "0x1E0FD0", VA = "0x1E0FD0")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x1E10D0", Offset = "0x1E10D0", VA = "0x1E10D0")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x1E11D0", Offset = "0x1E11D0", VA = "0x1E11D0")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x1E12B0", Offset = "0x1E12B0", VA = "0x1E12B0")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x1E1390", Offset = "0x1E1390", VA = "0x1E1390")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x1E1470", Offset = "0x1E1470", VA = "0x1E1470")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x1E1540", Offset = "0x1E1540", VA = "0x1E1540")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x1E1610", Offset = "0x1E1610", VA = "0x1E1610")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x1E16F0", Offset = "0x1E16F0", VA = "0x1E16F0")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x1E17D0", Offset = "0x1E17D0", VA = "0x1E17D0")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x1E18B0", Offset = "0x1E18B0", VA = "0x1E18B0")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x1E1990", Offset = "0x1E1990", VA = "0x1E1990")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1D8A18", Offset = "0x1D8A18", VA = "0x1D8A18")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x1E1A70", Offset = "0x1E1A70", VA = "0x1E1A70")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x1D8C24", Offset = "0x1D8C24", VA = "0x1D8C24")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x1E1B60", Offset = "0x1E1B60", VA = "0x1E1B60")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x1D8E30", Offset = "0x1D8E30", VA = "0x1D8E30")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x1D9000", Offset = "0x1D9000", VA = "0x1D9000")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1D91F0", Offset = "0x1D91F0", VA = "0x1D91F0")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1D94D0", Offset = "0x1D94D0", VA = "0x1D94D0")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x1D9790", Offset = "0x1D9790", VA = "0x1D9790")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x1E1C40", Offset = "0x1E1C40", VA = "0x1E1C40")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x1E1D20", Offset = "0x1E1D20", VA = "0x1E1D20")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x1E1E10", Offset = "0x1E1E10", VA = "0x1E1E10")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x1DA2B0", Offset = "0x1DA2B0", VA = "0x1DA2B0")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x1DA540", Offset = "0x1DA540", VA = "0x1DA540")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x1E1EE0", Offset = "0x1E1EE0", VA = "0x1E1EE0")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x1E1FB0", Offset = "0x1E1FB0", VA = "0x1E1FB0")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x1E2074", Offset = "0x1E2074", VA = "0x1E2074")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x1E2150", Offset = "0x1E2150", VA = "0x1E2150")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x1DAD90", Offset = "0x1DAD90", VA = "0x1DAD90")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x1DAF80", Offset = "0x1DAF80", VA = "0x1DAF80")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x1DB168", Offset = "0x1DB168", VA = "0x1DB168")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x1E2230", Offset = "0x1E2230", VA = "0x1E2230")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x1DB360", Offset = "0x1DB360", VA = "0x1DB360")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x1DB550", Offset = "0x1DB550", VA = "0x1DB550")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x1DB738", Offset = "0x1DB738", VA = "0x1DB738")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x1E2310", Offset = "0x1E2310", VA = "0x1E2310")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x1DB930", Offset = "0x1DB930", VA = "0x1DB930")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x1DBB20", Offset = "0x1DBB20", VA = "0x1DBB20")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x1DBD08", Offset = "0x1DBD08", VA = "0x1DBD08")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x1E23F0", Offset = "0x1E23F0", VA = "0x1E23F0")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x1DBEF0", Offset = "0x1DBEF0", VA = "0x1DBEF0")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x1DC0D0", Offset = "0x1DC0D0", VA = "0x1DC0D0")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x1DC2C0", Offset = "0x1DC2C0", VA = "0x1DC2C0")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x1DC4A8", Offset = "0x1DC4A8", VA = "0x1DC4A8")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x1E24D0", Offset = "0x1E24D0", VA = "0x1E24D0")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x1E25A4", Offset = "0x1E25A4", VA = "0x1E25A4")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x1E26A0", Offset = "0x1E26A0", VA = "0x1E26A0")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x1E2780", Offset = "0x1E2780", VA = "0x1E2780")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x1E2880", Offset = "0x1E2880", VA = "0x1E2880")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x1E2970", Offset = "0x1E2970", VA = "0x1E2970")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x1E2A64", Offset = "0x1E2A64", VA = "0x1E2A64")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x1E2B60", Offset = "0x1E2B60", VA = "0x1E2B60")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x1E2C34", Offset = "0x1E2C34", VA = "0x1E2C34")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x1E2D30", Offset = "0x1E2D30", VA = "0x1E2D30")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x1E2E04", Offset = "0x1E2E04", VA = "0x1E2E04")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x1E2EE0", Offset = "0x1E2EE0", VA = "0x1E2EE0")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x1E2FB4", Offset = "0x1E2FB4", VA = "0x1E2FB4")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x1E30B0", Offset = "0x1E30B0", VA = "0x1E30B0")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x1E3184", Offset = "0x1E3184", VA = "0x1E3184")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x1E3260", Offset = "0x1E3260", VA = "0x1E3260")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x1E3334", Offset = "0x1E3334", VA = "0x1E3334")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x1E3430", Offset = "0x1E3430", VA = "0x1E3430")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x1E3504", Offset = "0x1E3504", VA = "0x1E3504")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x1E3630", Offset = "0x1E3630", VA = "0x1E3630")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x1E3714", Offset = "0x1E3714", VA = "0x1E3714")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x1E3840", Offset = "0x1E3840", VA = "0x1E3840")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x1E3924", Offset = "0x1E3924", VA = "0x1E3924")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x1E3A70", Offset = "0x1E3A70", VA = "0x1E3A70")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x1E3B80", Offset = "0x1E3B80", VA = "0x1E3B80")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1E3C50", Offset = "0x1E3C50", VA = "0x1E3C50")]
		public static extern ulong ovr_Colocation_GetCurrentMapUuid();

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x1E3D14", Offset = "0x1E3D14", VA = "0x1E3D14")]
		public static ulong ovr_Colocation_RequestMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1E3DF0", Offset = "0x1E3DF0", VA = "0x1E3DF0")]
		private static extern ulong ovr_Colocation_RequestMap_Native(IntPtr uuid);

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x1E3EC4", Offset = "0x1E3EC4", VA = "0x1E3EC4")]
		public static ulong ovr_Colocation_ShareMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1E3FA0", Offset = "0x1E3FA0", VA = "0x1E3FA0")]
		private static extern ulong ovr_Colocation_ShareMap_Native(IntPtr uuid);

		[PreserveSig]
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x1E4080", Offset = "0x1E4080", VA = "0x1E4080")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1E4144", Offset = "0x1E4144", VA = "0x1E4144")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x1E4220", Offset = "0x1E4220", VA = "0x1E4220")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x1E42F4", Offset = "0x1E42F4", VA = "0x1E42F4")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x1E43D0", Offset = "0x1E43D0", VA = "0x1E43D0")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x1E44A4", Offset = "0x1E44A4", VA = "0x1E44A4")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x1E4580", Offset = "0x1E4580", VA = "0x1E4580")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x1E4654", Offset = "0x1E4654", VA = "0x1E4654")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x1E4750", Offset = "0x1E4750", VA = "0x1E4750")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x1E4824", Offset = "0x1E4824", VA = "0x1E4824")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x1E49D0", Offset = "0x1E49D0", VA = "0x1E49D0")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x1E4BA8", Offset = "0x1E4BA8", VA = "0x1E4BA8")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x1E4C80", Offset = "0x1E4C80", VA = "0x1E4C80")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x1E4D54", Offset = "0x1E4D54", VA = "0x1E4D54")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x1E4E30", Offset = "0x1E4E30", VA = "0x1E4E30")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x1E4F10", Offset = "0x1E4F10", VA = "0x1E4F10")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x1E50C0", Offset = "0x1E50C0", VA = "0x1E50C0")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[PreserveSig]
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x1E5190", Offset = "0x1E5190", VA = "0x1E5190")]
		public static extern ulong ovr_IAP_GetViewerPurchasesDurableCache();

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x1E5254", Offset = "0x1E5254", VA = "0x1E5254")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x1E5330", Offset = "0x1E5330", VA = "0x1E5330")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x1E5410", Offset = "0x1E5410", VA = "0x1E5410")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x1E54D4", Offset = "0x1E54D4", VA = "0x1E54D4")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x1E55B0", Offset = "0x1E55B0", VA = "0x1E55B0")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x1E5684", Offset = "0x1E5684", VA = "0x1E5684")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x1E5780", Offset = "0x1E5780", VA = "0x1E5780")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x1E5864", Offset = "0x1E5864", VA = "0x1E5864")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x1E5960", Offset = "0x1E5960", VA = "0x1E5960")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x1E5A50", Offset = "0x1E5A50", VA = "0x1E5A50")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x1E5B30", Offset = "0x1E5B30", VA = "0x1E5B30")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x1E5C04", Offset = "0x1E5C04", VA = "0x1E5C04")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x1E5D10", Offset = "0x1E5D10", VA = "0x1E5D10")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x1E5E20", Offset = "0x1E5E20", VA = "0x1E5E20")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x1E5EE4", Offset = "0x1E5EE4", VA = "0x1E5EE4")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x1E5FC0", Offset = "0x1E5FC0", VA = "0x1E5FC0")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x1E60A0", Offset = "0x1E60A0", VA = "0x1E60A0")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x1E6170", Offset = "0x1E6170", VA = "0x1E6170")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x1E6240", Offset = "0x1E6240", VA = "0x1E6240")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x1E6310", Offset = "0x1E6310", VA = "0x1E6310")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x1E63E0", Offset = "0x1E63E0", VA = "0x1E63E0")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1E64B0", Offset = "0x1E64B0", VA = "0x1E64B0")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x1E6584", Offset = "0x1E6584", VA = "0x1E6584")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1E6670", Offset = "0x1E6670", VA = "0x1E6670")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1E6744", Offset = "0x1E6744", VA = "0x1E6744")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1E6830", Offset = "0x1E6830", VA = "0x1E6830")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x1E6904", Offset = "0x1E6904", VA = "0x1E6904")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1E6A00", Offset = "0x1E6A00", VA = "0x1E6A00")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1E6AE0", Offset = "0x1E6AE0", VA = "0x1E6AE0")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x1E6BA4", Offset = "0x1E6BA4", VA = "0x1E6BA4")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1E6CA0", Offset = "0x1E6CA0", VA = "0x1E6CA0")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x1E6D84", Offset = "0x1E6D84", VA = "0x1E6D84")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x1E6E70", Offset = "0x1E6E70", VA = "0x1E6E70")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x1E6F44", Offset = "0x1E6F44", VA = "0x1E6F44")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x1E7040", Offset = "0x1E7040", VA = "0x1E7040")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x1E7124", Offset = "0x1E7124", VA = "0x1E7124")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x1E7210", Offset = "0x1E7210", VA = "0x1E7210")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x1E72E4", Offset = "0x1E72E4", VA = "0x1E72E4")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1E73D0", Offset = "0x1E73D0", VA = "0x1E73D0")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1E74A4", Offset = "0x1E74A4", VA = "0x1E74A4")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1E7590", Offset = "0x1E7590", VA = "0x1E7590")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1E7670", Offset = "0x1E7670", VA = "0x1E7670")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1E7750", Offset = "0x1E7750", VA = "0x1E7750")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x1E7830", Offset = "0x1E7830", VA = "0x1E7830")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x1E78F4", Offset = "0x1E78F4", VA = "0x1E78F4")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x1E79F0", Offset = "0x1E79F0", VA = "0x1E79F0")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x1E7AE0", Offset = "0x1E7AE0", VA = "0x1E7AE0")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x1E7BB4", Offset = "0x1E7BB4", VA = "0x1E7BB4")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1E7CB0", Offset = "0x1E7CB0", VA = "0x1E7CB0")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x1E7E70", Offset = "0x1E7E70", VA = "0x1E7E70")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1E7F44", Offset = "0x1E7F44", VA = "0x1E7F44")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1E8050", Offset = "0x1E8050", VA = "0x1E8050")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x1E8140", Offset = "0x1E8140", VA = "0x1E8140")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x1E8210", Offset = "0x1E8210", VA = "0x1E8210")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x1E82F0", Offset = "0x1E82F0", VA = "0x1E82F0")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x1E83C0", Offset = "0x1E83C0", VA = "0x1E83C0")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x1E84B0", Offset = "0x1E84B0", VA = "0x1E84B0")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1E8590", Offset = "0x1E8590", VA = "0x1E8590")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x1E8660", Offset = "0x1E8660", VA = "0x1E8660")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x1E8740", Offset = "0x1E8740", VA = "0x1E8740")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x1E8830", Offset = "0x1E8830", VA = "0x1E8830")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x1E8910", Offset = "0x1E8910", VA = "0x1E8910")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x1E89F0", Offset = "0x1E89F0", VA = "0x1E89F0")]
		public static extern ulong ovr_RichPresence_Clear();

		[PreserveSig]
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x1E8AC0", Offset = "0x1E8AC0", VA = "0x1E8AC0")]
		public static extern ulong ovr_RichPresence_Set(IntPtr richPresenceOptions);

		[PreserveSig]
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x1E8BA0", Offset = "0x1E8BA0", VA = "0x1E8BA0")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x1E8C90", Offset = "0x1E8C90", VA = "0x1E8C90")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x1E8D80", Offset = "0x1E8D80", VA = "0x1E8D80")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x1E8E60", Offset = "0x1E8E60", VA = "0x1E8E60")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x1E8F30", Offset = "0x1E8F30", VA = "0x1E8F30")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x1E9010", Offset = "0x1E9010", VA = "0x1E9010")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x1E90E0", Offset = "0x1E90E0", VA = "0x1E90E0")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x1E91C0", Offset = "0x1E91C0", VA = "0x1E91C0")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x1E9290", Offset = "0x1E9290", VA = "0x1E9290")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x1E9364", Offset = "0x1E9364", VA = "0x1E9364")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x1E9460", Offset = "0x1E9460", VA = "0x1E9460")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x1E9540", Offset = "0x1E9540", VA = "0x1E9540")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1E9620", Offset = "0x1E9620", VA = "0x1E9620")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x1E9700", Offset = "0x1E9700", VA = "0x1E9700")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x1E97F0", Offset = "0x1E97F0", VA = "0x1E97F0")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x1E98D0", Offset = "0x1E98D0", VA = "0x1E98D0")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x1E99A4", Offset = "0x1E99A4", VA = "0x1E99A4")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x1E9AA0", Offset = "0x1E9AA0", VA = "0x1E9AA0")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x1E9B74", Offset = "0x1E9B74", VA = "0x1E9B74")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x1E9C70", Offset = "0x1E9C70", VA = "0x1E9C70")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x1E9E30", Offset = "0x1E9E30", VA = "0x1E9E30")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1E9F10", Offset = "0x1E9F10", VA = "0x1E9F10")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1EA000", Offset = "0x1EA000", VA = "0x1EA000")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1EA0E0", Offset = "0x1EA0E0", VA = "0x1EA0E0")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1EA1C0", Offset = "0x1EA1C0", VA = "0x1EA1C0")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1EA294", Offset = "0x1EA294", VA = "0x1EA294")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x1EA370", Offset = "0x1EA370", VA = "0x1EA370")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x1EA450", Offset = "0x1EA450", VA = "0x1EA450")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1EA530", Offset = "0x1EA530", VA = "0x1EA530")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x1EA600", Offset = "0x1EA600", VA = "0x1EA600")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1EA6E0", Offset = "0x1EA6E0", VA = "0x1EA6E0")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1EA7B0", Offset = "0x1EA7B0", VA = "0x1EA7B0")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x1EA880", Offset = "0x1EA880", VA = "0x1EA880")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1EA950", Offset = "0x1EA950", VA = "0x1EA950")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1EAA30", Offset = "0x1EAA30", VA = "0x1EAA30")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1EAB10", Offset = "0x1EAB10", VA = "0x1EAB10")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x1EABE0", Offset = "0x1EABE0", VA = "0x1EABE0")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1EACB0", Offset = "0x1EACB0", VA = "0x1EACB0")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1EAD90", Offset = "0x1EAD90", VA = "0x1EAD90")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x1EAE70", Offset = "0x1EAE70", VA = "0x1EAE70")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1EAF50", Offset = "0x1EAF50", VA = "0x1EAF50")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x1EB030", Offset = "0x1EB030", VA = "0x1EB030")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1EB110", Offset = "0x1EB110", VA = "0x1EB110")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1EB1F0", Offset = "0x1EB1F0", VA = "0x1EB1F0")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1EB2C0", Offset = "0x1EB2C0", VA = "0x1EB2C0")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x1EB390", Offset = "0x1EB390", VA = "0x1EB390")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x1EB460", Offset = "0x1EB460", VA = "0x1EB460")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x1EB524", Offset = "0x1EB524", VA = "0x1EB524")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1EB620", Offset = "0x1EB620", VA = "0x1EB620")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x1EB6F4", Offset = "0x1EB6F4", VA = "0x1EB6F4")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x1EB7F0", Offset = "0x1EB7F0", VA = "0x1EB7F0")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x1EB8D4", Offset = "0x1EB8D4", VA = "0x1EB8D4")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1EB9D0", Offset = "0x1EB9D0", VA = "0x1EB9D0")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x1EBAC0", Offset = "0x1EBAC0", VA = "0x1EBAC0")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1EBB94", Offset = "0x1EBB94", VA = "0x1EBB94")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1EBC20", Offset = "0x1EBC20", VA = "0x1EBC20")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x1EBD00", Offset = "0x1EBD00", VA = "0x1EBD00")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x1EBDD4", Offset = "0x1EBDD4", VA = "0x1EBDD4")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1EBE60", Offset = "0x1EBE60", VA = "0x1EBE60")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x1EBF40", Offset = "0x1EBF40", VA = "0x1EBF40")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1EC020", Offset = "0x1EC020", VA = "0x1EC020")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1EC100", Offset = "0x1EC100", VA = "0x1EC100")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1EC1D4", Offset = "0x1EC1D4", VA = "0x1EC1D4")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1EC260", Offset = "0x1EC260", VA = "0x1EC260")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x1EC340", Offset = "0x1EC340", VA = "0x1EC340")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x1EC420", Offset = "0x1EC420", VA = "0x1EC420")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x1EC4F4", Offset = "0x1EC4F4", VA = "0x1EC4F4")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x1EC580", Offset = "0x1EC580", VA = "0x1EC580")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x1EC660", Offset = "0x1EC660", VA = "0x1EC660")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x1EC740", Offset = "0x1EC740", VA = "0x1EC740")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x1EC814", Offset = "0x1EC814", VA = "0x1EC814")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x1EC8A0", Offset = "0x1EC8A0", VA = "0x1EC8A0")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1EC974", Offset = "0x1EC974", VA = "0x1EC974")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1ECA20", Offset = "0x1ECA20", VA = "0x1ECA20")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x1ECB00", Offset = "0x1ECB00", VA = "0x1ECB00")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1ECBD4", Offset = "0x1ECBD4", VA = "0x1ECBD4")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1ECC60", Offset = "0x1ECC60", VA = "0x1ECC60")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1ECD40", Offset = "0x1ECD40", VA = "0x1ECD40")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1ECE20", Offset = "0x1ECE20", VA = "0x1ECE20")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x1ECF00", Offset = "0x1ECF00", VA = "0x1ECF00")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x1ECFD4", Offset = "0x1ECFD4", VA = "0x1ECFD4")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1ED060", Offset = "0x1ED060", VA = "0x1ED060")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1ED140", Offset = "0x1ED140", VA = "0x1ED140")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1ED220", Offset = "0x1ED220", VA = "0x1ED220")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x1ED2F4", Offset = "0x1ED2F4", VA = "0x1ED2F4")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1ED380", Offset = "0x1ED380", VA = "0x1ED380")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1ED460", Offset = "0x1ED460", VA = "0x1ED460")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x1ED534", Offset = "0x1ED534", VA = "0x1ED534")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1ED5C0", Offset = "0x1ED5C0", VA = "0x1ED5C0")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1ED6A0", Offset = "0x1ED6A0", VA = "0x1ED6A0")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1ED774", Offset = "0x1ED774", VA = "0x1ED774")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1ED800", Offset = "0x1ED800", VA = "0x1ED800")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1ED8D4", Offset = "0x1ED8D4", VA = "0x1ED8D4")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x1ED960", Offset = "0x1ED960", VA = "0x1ED960")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x1EDA34", Offset = "0x1EDA34", VA = "0x1EDA34")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1EDAC0", Offset = "0x1EDAC0", VA = "0x1EDAC0")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1EDB94", Offset = "0x1EDB94", VA = "0x1EDB94")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1EDC20", Offset = "0x1EDC20", VA = "0x1EDC20")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1EDD00", Offset = "0x1EDD00", VA = "0x1EDD00")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1EDDD4", Offset = "0x1EDDD4", VA = "0x1EDDD4")]
		public static string ovr_AssetDetails_GetMetadata(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1EDE60", Offset = "0x1EDE60", VA = "0x1EDE60")]
		private static extern IntPtr ovr_AssetDetails_GetMetadata_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1EDF40", Offset = "0x1EDF40", VA = "0x1EDF40")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1EE020", Offset = "0x1EE020", VA = "0x1EE020")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1EE100", Offset = "0x1EE100", VA = "0x1EE100")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1EE1E0", Offset = "0x1EE1E0", VA = "0x1EE1E0")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1EE2B4", Offset = "0x1EE2B4", VA = "0x1EE2B4")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1EE340", Offset = "0x1EE340", VA = "0x1EE340")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x1EE420", Offset = "0x1EE420", VA = "0x1EE420")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x1EE500", Offset = "0x1EE500", VA = "0x1EE500")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x1EE5E0", Offset = "0x1EE5E0", VA = "0x1EE5E0")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x1EE6B4", Offset = "0x1EE6B4", VA = "0x1EE6B4")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x1EE740", Offset = "0x1EE740", VA = "0x1EE740")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x1EE820", Offset = "0x1EE820", VA = "0x1EE820")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x1EE900", Offset = "0x1EE900", VA = "0x1EE900")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x1EE9D4", Offset = "0x1EE9D4", VA = "0x1EE9D4")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x1EEA60", Offset = "0x1EEA60", VA = "0x1EEA60")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x1EEB40", Offset = "0x1EEB40", VA = "0x1EEB40")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x1EEC20", Offset = "0x1EEC20", VA = "0x1EEC20")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1EED00", Offset = "0x1EED00", VA = "0x1EED00")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1EEDE0", Offset = "0x1EEDE0", VA = "0x1EEDE0")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1EEEC0", Offset = "0x1EEEC0", VA = "0x1EEEC0")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x1EEFA0", Offset = "0x1EEFA0", VA = "0x1EEFA0")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1EF080", Offset = "0x1EF080", VA = "0x1EF080")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1EF154", Offset = "0x1EF154", VA = "0x1EF154")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1EF1E0", Offset = "0x1EF1E0", VA = "0x1EF1E0")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x1EF2C0", Offset = "0x1EF2C0", VA = "0x1EF2C0")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x1EF3A0", Offset = "0x1EF3A0", VA = "0x1EF3A0")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1EF474", Offset = "0x1EF474", VA = "0x1EF474")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x1EF500", Offset = "0x1EF500", VA = "0x1EF500")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x1EF5E0", Offset = "0x1EF5E0", VA = "0x1EF5E0")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1EF6C0", Offset = "0x1EF6C0", VA = "0x1EF6C0")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x1EF794", Offset = "0x1EF794", VA = "0x1EF794")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x1EF820", Offset = "0x1EF820", VA = "0x1EF820")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x1EF900", Offset = "0x1EF900", VA = "0x1EF900")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x1EF9E0", Offset = "0x1EF9E0", VA = "0x1EF9E0")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x1EFAB4", Offset = "0x1EFAB4", VA = "0x1EFAB4")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x1EFB40", Offset = "0x1EFB40", VA = "0x1EFB40")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x1EFC14", Offset = "0x1EFC14", VA = "0x1EFC14")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x1EFD90", Offset = "0x1EFD90", VA = "0x1EFD90")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1EFCB0", Offset = "0x1EFCB0", VA = "0x1EFCB0")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1EFE64", Offset = "0x1EFE64", VA = "0x1EFE64")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1EFEF0", Offset = "0x1EFEF0", VA = "0x1EFEF0")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x1EFFC4", Offset = "0x1EFFC4", VA = "0x1EFFC4")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1F0050", Offset = "0x1F0050", VA = "0x1F0050")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x1F0130", Offset = "0x1F0130", VA = "0x1F0130")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1F0210", Offset = "0x1F0210", VA = "0x1F0210")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x1F02E4", Offset = "0x1F02E4", VA = "0x1F02E4")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x1F0370", Offset = "0x1F0370", VA = "0x1F0370")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x1F0444", Offset = "0x1F0444", VA = "0x1F0444")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x1F04D0", Offset = "0x1F04D0", VA = "0x1F04D0")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x1F05B0", Offset = "0x1F05B0", VA = "0x1F05B0")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x1F0690", Offset = "0x1F0690", VA = "0x1F0690")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x1F0764", Offset = "0x1F0764", VA = "0x1F0764")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1F07F0", Offset = "0x1F07F0", VA = "0x1F07F0")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x1F08D0", Offset = "0x1F08D0", VA = "0x1F08D0")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1F09A4", Offset = "0x1F09A4", VA = "0x1F09A4")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x1F0A30", Offset = "0x1F0A30", VA = "0x1F0A30")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1F0B10", Offset = "0x1F0B10", VA = "0x1F0B10")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1F0BF0", Offset = "0x1F0BF0", VA = "0x1F0BF0")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x1F0CC4", Offset = "0x1F0CC4", VA = "0x1F0CC4")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x1F0D50", Offset = "0x1F0D50", VA = "0x1F0D50")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1F0E24", Offset = "0x1F0E24", VA = "0x1F0E24")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1F0EB0", Offset = "0x1F0EB0", VA = "0x1F0EB0")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1F0F90", Offset = "0x1F0F90", VA = "0x1F0F90")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x1F1064", Offset = "0x1F1064", VA = "0x1F1064")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x1F10F0", Offset = "0x1F10F0", VA = "0x1F10F0")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x1F11C4", Offset = "0x1F11C4", VA = "0x1F11C4")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x1F12A0", Offset = "0x1F12A0", VA = "0x1F12A0")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1DD3C4", Offset = "0x1DD3C4", VA = "0x1DD3C4")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1F1380", Offset = "0x1F1380", VA = "0x1F1380")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x1DD2F0", Offset = "0x1DD2F0", VA = "0x1DD2F0")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1DD454", Offset = "0x1DD454", VA = "0x1DD454")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x1F1460", Offset = "0x1F1460", VA = "0x1F1460")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[PreserveSig]
		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x1F1540", Offset = "0x1F1540", VA = "0x1F1540")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x1F1614", Offset = "0x1F1614", VA = "0x1F1614")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x1F16A0", Offset = "0x1F16A0", VA = "0x1F16A0")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x1F1780", Offset = "0x1F1780", VA = "0x1F1780")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x1F1854", Offset = "0x1F1854", VA = "0x1F1854")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x1F18E0", Offset = "0x1F18E0", VA = "0x1F18E0")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x1F19C0", Offset = "0x1F19C0", VA = "0x1F19C0")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x1F1AA0", Offset = "0x1F1AA0", VA = "0x1F1AA0")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x1F1B80", Offset = "0x1F1B80", VA = "0x1F1B80")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x1F1C60", Offset = "0x1F1C60", VA = "0x1F1C60")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x1F1D34", Offset = "0x1F1D34", VA = "0x1F1D34")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x1F1DC0", Offset = "0x1F1DC0", VA = "0x1F1DC0")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x1F1E94", Offset = "0x1F1E94", VA = "0x1F1E94")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x1F1F20", Offset = "0x1F1F20", VA = "0x1F1F20")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x1F1FF4", Offset = "0x1F1FF4", VA = "0x1F1FF4")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x1F2080", Offset = "0x1F2080", VA = "0x1F2080")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x1F2160", Offset = "0x1F2160", VA = "0x1F2160")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x1F2234", Offset = "0x1F2234", VA = "0x1F2234")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x1F22C0", Offset = "0x1F22C0", VA = "0x1F22C0")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x1F23A0", Offset = "0x1F23A0", VA = "0x1F23A0")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x1F2480", Offset = "0x1F2480", VA = "0x1F2480")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x1F2554", Offset = "0x1F2554", VA = "0x1F2554")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x1F25E0", Offset = "0x1F25E0", VA = "0x1F25E0")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x1F26B4", Offset = "0x1F26B4", VA = "0x1F26B4")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x1F2740", Offset = "0x1F2740", VA = "0x1F2740")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x1F2814", Offset = "0x1F2814", VA = "0x1F2814")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x1F28A0", Offset = "0x1F28A0", VA = "0x1F28A0")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x1F2980", Offset = "0x1F2980", VA = "0x1F2980")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x1F2A60", Offset = "0x1F2A60", VA = "0x1F2A60")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x1F2B34", Offset = "0x1F2B34", VA = "0x1F2B34")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x1F2BC0", Offset = "0x1F2BC0", VA = "0x1F2BC0")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x1F2C94", Offset = "0x1F2C94", VA = "0x1F2C94")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x1F2D20", Offset = "0x1F2D20", VA = "0x1F2D20")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1F2E00", Offset = "0x1F2E00", VA = "0x1F2E00")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x1F2EE0", Offset = "0x1F2EE0", VA = "0x1F2EE0")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x1F2FC0", Offset = "0x1F2FC0", VA = "0x1F2FC0")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x1F30A0", Offset = "0x1F30A0", VA = "0x1F30A0")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x1F3180", Offset = "0x1F3180", VA = "0x1F3180")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x1F3260", Offset = "0x1F3260", VA = "0x1F3260")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x1F3340", Offset = "0x1F3340", VA = "0x1F3340")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x1F3420", Offset = "0x1F3420", VA = "0x1F3420")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x1F3500", Offset = "0x1F3500", VA = "0x1F3500")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x1F35D4", Offset = "0x1F35D4", VA = "0x1F35D4")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x1F3750", Offset = "0x1F3750", VA = "0x1F3750")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1F3670", Offset = "0x1F3670", VA = "0x1F3670")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x1F3830", Offset = "0x1F3830", VA = "0x1F3830")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x1F3910", Offset = "0x1F3910", VA = "0x1F3910")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x1F39E4", Offset = "0x1F39E4", VA = "0x1F39E4")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x1F3A90", Offset = "0x1F3A90", VA = "0x1F3A90")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x1F3B70", Offset = "0x1F3B70", VA = "0x1F3B70")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x1F3C50", Offset = "0x1F3C50", VA = "0x1F3C50")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1F3D24", Offset = "0x1F3D24", VA = "0x1F3D24")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x1F3DB0", Offset = "0x1F3DB0", VA = "0x1F3DB0")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x1F3E84", Offset = "0x1F3E84", VA = "0x1F3E84")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x1F3F10", Offset = "0x1F3F10", VA = "0x1F3F10")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x1F3FF0", Offset = "0x1F3FF0", VA = "0x1F3FF0")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x1F40D0", Offset = "0x1F40D0", VA = "0x1F40D0")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x1F41B0", Offset = "0x1F41B0", VA = "0x1F41B0")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x1F4290", Offset = "0x1F4290", VA = "0x1F4290")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x1F4370", Offset = "0x1F4370", VA = "0x1F4370")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x1F4444", Offset = "0x1F4444", VA = "0x1F4444")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x1F44D0", Offset = "0x1F44D0", VA = "0x1F44D0")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x1F45B0", Offset = "0x1F45B0", VA = "0x1F45B0")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x1F4684", Offset = "0x1F4684", VA = "0x1F4684")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x1F4710", Offset = "0x1F4710", VA = "0x1F4710")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1F47F0", Offset = "0x1F47F0", VA = "0x1F47F0")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1F48D0", Offset = "0x1F48D0", VA = "0x1F48D0")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1F49B0", Offset = "0x1F49B0", VA = "0x1F49B0")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x1F4A90", Offset = "0x1F4A90", VA = "0x1F4A90")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x1F4B70", Offset = "0x1F4B70", VA = "0x1F4B70")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x1F4C50", Offset = "0x1F4C50", VA = "0x1F4C50")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x1F4D30", Offset = "0x1F4D30", VA = "0x1F4D30")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x1F4E10", Offset = "0x1F4E10", VA = "0x1F4E10")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x1F4EF0", Offset = "0x1F4EF0", VA = "0x1F4EF0")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x1F4FD0", Offset = "0x1F4FD0", VA = "0x1F4FD0")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x1F50A4", Offset = "0x1F50A4", VA = "0x1F50A4")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x1F5130", Offset = "0x1F5130", VA = "0x1F5130")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x1F5210", Offset = "0x1F5210", VA = "0x1F5210")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x1F52F0", Offset = "0x1F52F0", VA = "0x1F52F0")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x1F53D0", Offset = "0x1F53D0", VA = "0x1F53D0")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x1F54B0", Offset = "0x1F54B0", VA = "0x1F54B0")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x1F5590", Offset = "0x1F5590", VA = "0x1F5590")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x1F5670", Offset = "0x1F5670", VA = "0x1F5670")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x1F5744", Offset = "0x1F5744", VA = "0x1F5744")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x1F57D0", Offset = "0x1F57D0", VA = "0x1F57D0")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x1F58B0", Offset = "0x1F58B0", VA = "0x1F58B0")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x1F5990", Offset = "0x1F5990", VA = "0x1F5990")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x1F5A70", Offset = "0x1F5A70", VA = "0x1F5A70")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x1F5B50", Offset = "0x1F5B50", VA = "0x1F5B50")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x1F5C24", Offset = "0x1F5C24", VA = "0x1F5C24")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x1F5CB0", Offset = "0x1F5CB0", VA = "0x1F5CB0")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x1F5D90", Offset = "0x1F5D90", VA = "0x1F5D90")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x1F5E70", Offset = "0x1F5E70", VA = "0x1F5E70")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x1F5F44", Offset = "0x1F5F44", VA = "0x1F5F44")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x1F5FD0", Offset = "0x1F5FD0", VA = "0x1F5FD0")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x1F60B0", Offset = "0x1F60B0", VA = "0x1F60B0")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x1F6190", Offset = "0x1F6190", VA = "0x1F6190")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x1F6270", Offset = "0x1F6270", VA = "0x1F6270")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x1F6350", Offset = "0x1F6350", VA = "0x1F6350")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x1F6430", Offset = "0x1F6430", VA = "0x1F6430")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x1F6510", Offset = "0x1F6510", VA = "0x1F6510")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x1F65E4", Offset = "0x1F65E4", VA = "0x1F65E4")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x1F6670", Offset = "0x1F6670", VA = "0x1F6670")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x1F6750", Offset = "0x1F6750", VA = "0x1F6750")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x1F6824", Offset = "0x1F6824", VA = "0x1F6824")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x1F68B0", Offset = "0x1F68B0", VA = "0x1F68B0")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x1F6990", Offset = "0x1F6990", VA = "0x1F6990")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x1F6A70", Offset = "0x1F6A70", VA = "0x1F6A70")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x1F6B50", Offset = "0x1F6B50", VA = "0x1F6B50")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x1F6C30", Offset = "0x1F6C30", VA = "0x1F6C30")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x1F6D10", Offset = "0x1F6D10", VA = "0x1F6D10")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x1F6DF0", Offset = "0x1F6DF0", VA = "0x1F6DF0")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x1F6ED0", Offset = "0x1F6ED0", VA = "0x1F6ED0")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x1F6FB0", Offset = "0x1F6FB0", VA = "0x1F6FB0")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x1F7090", Offset = "0x1F7090", VA = "0x1F7090")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1F7170", Offset = "0x1F7170", VA = "0x1F7170")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x1F7244", Offset = "0x1F7244", VA = "0x1F7244")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x1F72D0", Offset = "0x1F72D0", VA = "0x1F72D0")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1F73B0", Offset = "0x1F73B0", VA = "0x1F73B0")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1F7490", Offset = "0x1F7490", VA = "0x1F7490")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1F7570", Offset = "0x1F7570", VA = "0x1F7570")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1F7650", Offset = "0x1F7650", VA = "0x1F7650")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1F7730", Offset = "0x1F7730", VA = "0x1F7730")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x1F7810", Offset = "0x1F7810", VA = "0x1F7810")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x1F78F0", Offset = "0x1F78F0", VA = "0x1F78F0")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x1F79D0", Offset = "0x1F79D0", VA = "0x1F79D0")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x1F7AB0", Offset = "0x1F7AB0", VA = "0x1F7AB0")]
		public static extern double ovr_MatchmakingStats_GetSkillMean(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x1F7B90", Offset = "0x1F7B90", VA = "0x1F7B90")]
		public static extern double ovr_MatchmakingStats_GetSkillStandardDeviation(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x1F7C70", Offset = "0x1F7C70", VA = "0x1F7C70")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x1F7D50", Offset = "0x1F7D50", VA = "0x1F7D50")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1F7E30", Offset = "0x1F7E30", VA = "0x1F7E30")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x1F7F10", Offset = "0x1F7F10", VA = "0x1F7F10")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x1F7FF0", Offset = "0x1F7FF0", VA = "0x1F7FF0")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x1F80D0", Offset = "0x1F80D0", VA = "0x1F80D0")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1F81B0", Offset = "0x1F81B0", VA = "0x1F81B0")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1F8290", Offset = "0x1F8290", VA = "0x1F8290")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x1F8370", Offset = "0x1F8370", VA = "0x1F8370")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x1F8450", Offset = "0x1F8450", VA = "0x1F8450")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x1F8530", Offset = "0x1F8530", VA = "0x1F8530")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x1F8610", Offset = "0x1F8610", VA = "0x1F8610")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x1F86F0", Offset = "0x1F86F0", VA = "0x1F86F0")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x1F87D0", Offset = "0x1F87D0", VA = "0x1F87D0")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1F88B0", Offset = "0x1F88B0", VA = "0x1F88B0")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1F8990", Offset = "0x1F8990", VA = "0x1F8990")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x1F8A70", Offset = "0x1F8A70", VA = "0x1F8A70")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x1F8B50", Offset = "0x1F8B50", VA = "0x1F8B50")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x1F8C30", Offset = "0x1F8C30", VA = "0x1F8C30")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x1F8D10", Offset = "0x1F8D10", VA = "0x1F8D10")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x1F8DF0", Offset = "0x1F8DF0", VA = "0x1F8DF0")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x1F8ED0", Offset = "0x1F8ED0", VA = "0x1F8ED0")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x1F8FB0", Offset = "0x1F8FB0", VA = "0x1F8FB0")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x1F9090", Offset = "0x1F9090", VA = "0x1F9090")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1F9170", Offset = "0x1F9170", VA = "0x1F9170")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x1F9250", Offset = "0x1F9250", VA = "0x1F9250")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x1F9330", Offset = "0x1F9330", VA = "0x1F9330")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x1F9410", Offset = "0x1F9410", VA = "0x1F9410")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x1F94F0", Offset = "0x1F94F0", VA = "0x1F94F0")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x1F95D0", Offset = "0x1F95D0", VA = "0x1F95D0")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x1F96B0", Offset = "0x1F96B0", VA = "0x1F96B0")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x1F9790", Offset = "0x1F9790", VA = "0x1F9790")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1F9870", Offset = "0x1F9870", VA = "0x1F9870")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x1F9950", Offset = "0x1F9950", VA = "0x1F9950")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x1F9A30", Offset = "0x1F9A30", VA = "0x1F9A30")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x1F9B10", Offset = "0x1F9B10", VA = "0x1F9B10")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x1F9BF0", Offset = "0x1F9BF0", VA = "0x1F9BF0")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1F9CD0", Offset = "0x1F9CD0", VA = "0x1F9CD0")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x1F9DB0", Offset = "0x1F9DB0", VA = "0x1F9DB0")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x1F9E90", Offset = "0x1F9E90", VA = "0x1F9E90")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x1F9F70", Offset = "0x1F9F70", VA = "0x1F9F70")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x1FA050", Offset = "0x1FA050", VA = "0x1FA050")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x1FA130", Offset = "0x1FA130", VA = "0x1FA130")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x1FA210", Offset = "0x1FA210", VA = "0x1FA210")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x1FA2F0", Offset = "0x1FA2F0", VA = "0x1FA2F0")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x1FA3D0", Offset = "0x1FA3D0", VA = "0x1FA3D0")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x1FA4B0", Offset = "0x1FA4B0", VA = "0x1FA4B0")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x1FA590", Offset = "0x1FA590", VA = "0x1FA590")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x1FA670", Offset = "0x1FA670", VA = "0x1FA670")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x1FA750", Offset = "0x1FA750", VA = "0x1FA750")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x1FA830", Offset = "0x1FA830", VA = "0x1FA830")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x1FA910", Offset = "0x1FA910", VA = "0x1FA910")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1FA9F0", Offset = "0x1FA9F0", VA = "0x1FA9F0")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x1FAAD0", Offset = "0x1FAAD0", VA = "0x1FAAD0")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x1FABB0", Offset = "0x1FABB0", VA = "0x1FABB0")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x1FAC90", Offset = "0x1FAC90", VA = "0x1FAC90")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x1FAD70", Offset = "0x1FAD70", VA = "0x1FAD70")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x1FAE50", Offset = "0x1FAE50", VA = "0x1FAE50")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x1FAF30", Offset = "0x1FAF30", VA = "0x1FAF30")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x1FB004", Offset = "0x1FB004", VA = "0x1FB004")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1FB090", Offset = "0x1FB090", VA = "0x1FB090")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x1FB170", Offset = "0x1FB170", VA = "0x1FB170")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1FB250", Offset = "0x1FB250", VA = "0x1FB250")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1FB330", Offset = "0x1FB330", VA = "0x1FB330")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x1FB410", Offset = "0x1FB410", VA = "0x1FB410")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x1FB4F0", Offset = "0x1FB4F0", VA = "0x1FB4F0")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x1FB5D0", Offset = "0x1FB5D0", VA = "0x1FB5D0")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x1FB6B0", Offset = "0x1FB6B0", VA = "0x1FB6B0")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x1FB790", Offset = "0x1FB790", VA = "0x1FB790")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x1FB870", Offset = "0x1FB870", VA = "0x1FB870")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x1FB950", Offset = "0x1FB950", VA = "0x1FB950")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x1FBA30", Offset = "0x1FBA30", VA = "0x1FBA30")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x1FBB10", Offset = "0x1FBB10", VA = "0x1FBB10")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x1FBC00", Offset = "0x1FBC00", VA = "0x1FBC00")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x1FBCF0", Offset = "0x1FBCF0", VA = "0x1FBCF0")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x1FBDE0", Offset = "0x1FBDE0", VA = "0x1FBDE0")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x1FBEC0", Offset = "0x1FBEC0", VA = "0x1FBEC0")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x1FBFA0", Offset = "0x1FBFA0", VA = "0x1FBFA0")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x1FC080", Offset = "0x1FC080", VA = "0x1FC080")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x1FC160", Offset = "0x1FC160", VA = "0x1FC160")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x1FC240", Offset = "0x1FC240", VA = "0x1FC240")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x1FC320", Offset = "0x1FC320", VA = "0x1FC320")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x1FC400", Offset = "0x1FC400", VA = "0x1FC400")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x1FC4E0", Offset = "0x1FC4E0", VA = "0x1FC4E0")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x1FC5C0", Offset = "0x1FC5C0", VA = "0x1FC5C0")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x1FC6A0", Offset = "0x1FC6A0", VA = "0x1FC6A0")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x1FC780", Offset = "0x1FC780", VA = "0x1FC780")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x1FC860", Offset = "0x1FC860", VA = "0x1FC860")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x1FC940", Offset = "0x1FC940", VA = "0x1FC940")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x1FCA20", Offset = "0x1FCA20", VA = "0x1FCA20")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x1FCB00", Offset = "0x1FCB00", VA = "0x1FCB00")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1FCBE0", Offset = "0x1FCBE0", VA = "0x1FCBE0")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x1FCCC0", Offset = "0x1FCCC0", VA = "0x1FCCC0")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x1FCDA0", Offset = "0x1FCDA0", VA = "0x1FCDA0")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x1FCE80", Offset = "0x1FCE80", VA = "0x1FCE80")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x1FCF54", Offset = "0x1FCF54", VA = "0x1FCF54")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x1FCFE0", Offset = "0x1FCFE0", VA = "0x1FCFE0")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x1FD0B4", Offset = "0x1FD0B4", VA = "0x1FD0B4")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x1FD140", Offset = "0x1FD140", VA = "0x1FD140")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x1FD220", Offset = "0x1FD220", VA = "0x1FD220")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x1FD2F4", Offset = "0x1FD2F4", VA = "0x1FD2F4")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1FD380", Offset = "0x1FD380", VA = "0x1FD380")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x1FD454", Offset = "0x1FD454", VA = "0x1FD454")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x1FD4E0", Offset = "0x1FD4E0", VA = "0x1FD4E0")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x1FD5C0", Offset = "0x1FD5C0", VA = "0x1FD5C0")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1FD6A0", Offset = "0x1FD6A0", VA = "0x1FD6A0")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1FD780", Offset = "0x1FD780", VA = "0x1FD780")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x1FD860", Offset = "0x1FD860", VA = "0x1FD860")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1FD940", Offset = "0x1FD940", VA = "0x1FD940")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1FDA20", Offset = "0x1FDA20", VA = "0x1FDA20")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1FDB00", Offset = "0x1FDB00", VA = "0x1FDB00")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1FDBD4", Offset = "0x1FDBD4", VA = "0x1FDBD4")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1FDC60", Offset = "0x1FDC60", VA = "0x1FDC60")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1FDD34", Offset = "0x1FDD34", VA = "0x1FDD34")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1FDDC0", Offset = "0x1FDDC0", VA = "0x1FDDC0")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1FDE94", Offset = "0x1FDE94", VA = "0x1FDE94")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1FDF20", Offset = "0x1FDF20", VA = "0x1FDF20")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x1FDFF4", Offset = "0x1FDFF4", VA = "0x1FDFF4")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x1FE080", Offset = "0x1FE080", VA = "0x1FE080")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x1FE154", Offset = "0x1FE154", VA = "0x1FE154")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x1FE1E0", Offset = "0x1FE1E0", VA = "0x1FE1E0")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x1FE2B4", Offset = "0x1FE2B4", VA = "0x1FE2B4")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1FE340", Offset = "0x1FE340", VA = "0x1FE340")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x1FE420", Offset = "0x1FE420", VA = "0x1FE420")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x1FE4F4", Offset = "0x1FE4F4", VA = "0x1FE4F4")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x1FE580", Offset = "0x1FE580", VA = "0x1FE580")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1FE660", Offset = "0x1FE660", VA = "0x1FE660")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x1FE740", Offset = "0x1FE740", VA = "0x1FE740")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x1FE814", Offset = "0x1FE814", VA = "0x1FE814")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1FE8C0", Offset = "0x1FE8C0", VA = "0x1FE8C0")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x1FE994", Offset = "0x1FE994", VA = "0x1FE994")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x1FEA40", Offset = "0x1FEA40", VA = "0x1FEA40")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x1FEB20", Offset = "0x1FEB20", VA = "0x1FEB20")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x1FEBF4", Offset = "0x1FEBF4", VA = "0x1FEBF4")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x1FEC80", Offset = "0x1FEC80", VA = "0x1FEC80")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x1FED60", Offset = "0x1FED60", VA = "0x1FED60")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x1FEE34", Offset = "0x1FEE34", VA = "0x1FEE34")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1FEEC0", Offset = "0x1FEEC0", VA = "0x1FEEC0")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x1FEFA0", Offset = "0x1FEFA0", VA = "0x1FEFA0")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x1FF080", Offset = "0x1FF080", VA = "0x1FF080")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x1FF160", Offset = "0x1FF160", VA = "0x1FF160")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x1FF240", Offset = "0x1FF240", VA = "0x1FF240")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x1FF314", Offset = "0x1FF314", VA = "0x1FF314")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x1FF3A0", Offset = "0x1FF3A0", VA = "0x1FF3A0")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x1FF480", Offset = "0x1FF480", VA = "0x1FF480")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x1FF560", Offset = "0x1FF560", VA = "0x1FF560")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x1FF640", Offset = "0x1FF640", VA = "0x1FF640")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x1FF720", Offset = "0x1FF720", VA = "0x1FF720")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x1FF800", Offset = "0x1FF800", VA = "0x1FF800")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x1FF8E0", Offset = "0x1FF8E0", VA = "0x1FF8E0")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x1FF9C0", Offset = "0x1FF9C0", VA = "0x1FF9C0")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x1FFA94", Offset = "0x1FFA94", VA = "0x1FFA94")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x1FFB20", Offset = "0x1FFB20", VA = "0x1FFB20")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x1FFC00", Offset = "0x1FFC00", VA = "0x1FFC00")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x1FFCE0", Offset = "0x1FFCE0", VA = "0x1FFCE0")]
		public static extern IntPtr ovr_Room_GetTeams(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x1FFDC0", Offset = "0x1FFDC0", VA = "0x1FFDC0")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x1FFEA0", Offset = "0x1FFEA0", VA = "0x1FFEA0")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x1FFF80", Offset = "0x1FFF80", VA = "0x1FFF80")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x200060", Offset = "0x200060", VA = "0x200060")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x200134", Offset = "0x200134", VA = "0x200134")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x2001C0", Offset = "0x2001C0", VA = "0x2001C0")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x2002A0", Offset = "0x2002A0", VA = "0x2002A0")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x200380", Offset = "0x200380", VA = "0x200380")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x200460", Offset = "0x200460", VA = "0x200460")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x200540", Offset = "0x200540", VA = "0x200540")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x200620", Offset = "0x200620", VA = "0x200620")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x2006F4", Offset = "0x2006F4", VA = "0x2006F4")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x2007A0", Offset = "0x2007A0", VA = "0x2007A0")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x200880", Offset = "0x200880", VA = "0x200880")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x200954", Offset = "0x200954", VA = "0x200954")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x2009E0", Offset = "0x2009E0", VA = "0x2009E0")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x200AC0", Offset = "0x200AC0", VA = "0x200AC0")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x200BA0", Offset = "0x200BA0", VA = "0x200BA0")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x200C80", Offset = "0x200C80", VA = "0x200C80")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x200D60", Offset = "0x200D60", VA = "0x200D60")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x200E40", Offset = "0x200E40", VA = "0x200E40")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x200F20", Offset = "0x200F20", VA = "0x200F20")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x201000", Offset = "0x201000", VA = "0x201000")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x2010E0", Offset = "0x2010E0", VA = "0x2010E0")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x2011C0", Offset = "0x2011C0", VA = "0x2011C0")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x2012A0", Offset = "0x2012A0", VA = "0x2012A0")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x201380", Offset = "0x201380", VA = "0x201380")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x201460", Offset = "0x201460", VA = "0x201460")]
		public static extern IntPtr ovr_Team_GetAssignedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x201540", Offset = "0x201540", VA = "0x201540")]
		public static extern int ovr_Team_GetMaxUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x201620", Offset = "0x201620", VA = "0x201620")]
		public static extern int ovr_Team_GetMinUsers(IntPtr obj);

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x2016F4", Offset = "0x2016F4", VA = "0x2016F4")]
		public static string ovr_Team_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x201780", Offset = "0x201780", VA = "0x201780")]
		private static extern IntPtr ovr_Team_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x201860", Offset = "0x201860", VA = "0x201860")]
		public static extern IntPtr ovr_TeamArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x201940", Offset = "0x201940", VA = "0x201940")]
		public static extern UIntPtr ovr_TeamArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x201A14", Offset = "0x201A14", VA = "0x201A14")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x201AA0", Offset = "0x201AA0", VA = "0x201AA0")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x201B80", Offset = "0x201B80", VA = "0x201B80")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x201C60", Offset = "0x201C60", VA = "0x201C60")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x201D34", Offset = "0x201D34", VA = "0x201D34")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x201DC0", Offset = "0x201DC0", VA = "0x201DC0")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x201EA0", Offset = "0x201EA0", VA = "0x201EA0")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x201F74", Offset = "0x201F74", VA = "0x201F74")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x202000", Offset = "0x202000", VA = "0x202000")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x2020E0", Offset = "0x2020E0", VA = "0x2020E0")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x2021C0", Offset = "0x2021C0", VA = "0x2021C0")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x202294", Offset = "0x202294", VA = "0x202294")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x202320", Offset = "0x202320", VA = "0x202320")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x202400", Offset = "0x202400", VA = "0x202400")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x2024E0", Offset = "0x2024E0", VA = "0x2024E0")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x2025C0", Offset = "0x2025C0", VA = "0x2025C0")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x2026A0", Offset = "0x2026A0", VA = "0x2026A0")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x202780", Offset = "0x202780", VA = "0x202780")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x202854", Offset = "0x202854", VA = "0x202854")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x2028E0", Offset = "0x2028E0", VA = "0x2028E0")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x2029B4", Offset = "0x2029B4", VA = "0x2029B4")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x202A40", Offset = "0x202A40", VA = "0x202A40")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x202B14", Offset = "0x202B14", VA = "0x202B14")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x202BA0", Offset = "0x202BA0", VA = "0x202BA0")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x202C74", Offset = "0x202C74", VA = "0x202C74")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x202D00", Offset = "0x202D00", VA = "0x202D00")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x202DD4", Offset = "0x202DD4", VA = "0x202DD4")]
		public static string ovr_User_GetPresenceDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x202E60", Offset = "0x202E60", VA = "0x202E60")]
		private static extern IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x202F40", Offset = "0x202F40", VA = "0x202F40")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x203014", Offset = "0x203014", VA = "0x203014")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x2030A0", Offset = "0x2030A0", VA = "0x2030A0")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x203180", Offset = "0x203180", VA = "0x203180")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x203260", Offset = "0x203260", VA = "0x203260")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x203340", Offset = "0x203340", VA = "0x203340")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x203414", Offset = "0x203414", VA = "0x203414")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x2034A0", Offset = "0x2034A0", VA = "0x2034A0")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x203580", Offset = "0x203580", VA = "0x203580")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x203660", Offset = "0x203660", VA = "0x203660")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x203740", Offset = "0x203740", VA = "0x203740")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x203814", Offset = "0x203814", VA = "0x203814")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x2038A0", Offset = "0x2038A0", VA = "0x2038A0")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x203980", Offset = "0x203980", VA = "0x203980")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x203A60", Offset = "0x203A60", VA = "0x203A60")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x203B34", Offset = "0x203B34", VA = "0x203B34")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x203BC0", Offset = "0x203BC0", VA = "0x203BC0")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x203CA0", Offset = "0x203CA0", VA = "0x203CA0")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x203D80", Offset = "0x203D80", VA = "0x203D80")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x203E60", Offset = "0x203E60", VA = "0x203E60")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x203F50", Offset = "0x203F50", VA = "0x203F50")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x204040", Offset = "0x204040", VA = "0x204040")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x204130", Offset = "0x204130", VA = "0x204130")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x204220", Offset = "0x204220", VA = "0x204220")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x1D8370", Offset = "0x1D8370", VA = "0x1D8370")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x1D8820", Offset = "0x1D8820", VA = "0x1D8820")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x1D84C0", Offset = "0x1D84C0", VA = "0x1D84C0")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x1D8620", Offset = "0x1D8620", VA = "0x1D8620")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x1DA8B0", Offset = "0x1DA8B0", VA = "0x1DA8B0")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x1DABA0", Offset = "0x1DABA0", VA = "0x1DABA0")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x1DAA00", Offset = "0x1DAA00", VA = "0x1DAA00")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x204300", Offset = "0x204300", VA = "0x204300")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x2043E0", Offset = "0x2043E0", VA = "0x2043E0")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x2044B0", Offset = "0x2044B0", VA = "0x2044B0")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x204584", Offset = "0x204584", VA = "0x204584")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x204680", Offset = "0x204680", VA = "0x204680")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x204770", Offset = "0x204770", VA = "0x204770")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x204850", Offset = "0x204850", VA = "0x204850")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x204930", Offset = "0x204930", VA = "0x204930")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x204A10", Offset = "0x204A10", VA = "0x204A10")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x204B00", Offset = "0x204B00", VA = "0x204B00")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x204BD4", Offset = "0x204BD4", VA = "0x204BD4")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x204CC0", Offset = "0x204CC0", VA = "0x204CC0")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x204DA4", Offset = "0x204DA4", VA = "0x204DA4")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x204E90", Offset = "0x204E90", VA = "0x204E90")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x204F74", Offset = "0x204F74", VA = "0x204F74")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x205070", Offset = "0x205070", VA = "0x205070")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x205160", Offset = "0x205160", VA = "0x205160")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x205240", Offset = "0x205240", VA = "0x205240")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x205314", Offset = "0x205314", VA = "0x205314")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x2053F0", Offset = "0x2053F0", VA = "0x2053F0")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x2054D0", Offset = "0x2054D0", VA = "0x2054D0")]
		public static extern IntPtr ovr_RichPresenceOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x2055A0", Offset = "0x2055A0", VA = "0x2055A0")]
		public static extern void ovr_RichPresenceOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x205674", Offset = "0x205674", VA = "0x205674")]
		public static void ovr_RichPresenceOptions_SetApiName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x205750", Offset = "0x205750", VA = "0x205750")]
		private static extern void ovr_RichPresenceOptions_SetApiName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x205824", Offset = "0x205824", VA = "0x205824")]
		public static void ovr_RichPresenceOptions_SetArgsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x205920", Offset = "0x205920", VA = "0x205920")]
		private static extern void ovr_RichPresenceOptions_SetArgsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x205A10", Offset = "0x205A10", VA = "0x205A10")]
		public static extern void ovr_RichPresenceOptions_ClearArgs(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x205AF0", Offset = "0x205AF0", VA = "0x205AF0")]
		public static extern void ovr_RichPresenceOptions_SetCurrentCapacity(IntPtr handle, uint value);

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x205BC4", Offset = "0x205BC4", VA = "0x205BC4")]
		public static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x205CA0", Offset = "0x205CA0", VA = "0x205CA0")]
		private static extern void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x205D74", Offset = "0x205D74", VA = "0x205D74")]
		public static extern void ovr_RichPresenceOptions_SetEndTime(IntPtr handle, DateTime value);

		[PreserveSig]
		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x205DA0", Offset = "0x205DA0", VA = "0x205DA0")]
		public static extern void ovr_RichPresenceOptions_SetExtraContext(IntPtr handle, RichPresenceExtraContext value);

		[PreserveSig]
		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x205E80", Offset = "0x205E80", VA = "0x205E80")]
		public static extern void ovr_RichPresenceOptions_SetIsIdle(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x205F60", Offset = "0x205F60", VA = "0x205F60")]
		public static extern void ovr_RichPresenceOptions_SetIsJoinable(IntPtr handle, bool value);

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x206034", Offset = "0x206034", VA = "0x206034")]
		public static void ovr_RichPresenceOptions_SetJoinableId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x206110", Offset = "0x206110", VA = "0x206110")]
		private static extern void ovr_RichPresenceOptions_SetJoinableId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x2061F0", Offset = "0x2061F0", VA = "0x2061F0")]
		public static extern void ovr_RichPresenceOptions_SetMaxCapacity(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x2062C4", Offset = "0x2062C4", VA = "0x2062C4")]
		public static extern void ovr_RichPresenceOptions_SetStartTime(IntPtr handle, DateTime value);

		[PreserveSig]
		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x2062F0", Offset = "0x2062F0", VA = "0x2062F0")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x2063C0", Offset = "0x2063C0", VA = "0x2063C0")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x206494", Offset = "0x206494", VA = "0x206494")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x206590", Offset = "0x206590", VA = "0x206590")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x206680", Offset = "0x206680", VA = "0x206680")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x206760", Offset = "0x206760", VA = "0x206760")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x206840", Offset = "0x206840", VA = "0x206840")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x206920", Offset = "0x206920", VA = "0x206920")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x206A00", Offset = "0x206A00", VA = "0x206A00")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x206AE0", Offset = "0x206AE0", VA = "0x206AE0")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x206BD0", Offset = "0x206BD0", VA = "0x206BD0")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x206CB0", Offset = "0x206CB0", VA = "0x206CB0")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x206D80", Offset = "0x206D80", VA = "0x206D80")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x206E60", Offset = "0x206E60", VA = "0x206E60")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x206F40", Offset = "0x206F40", VA = "0x206F40")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x207020", Offset = "0x207020", VA = "0x207020")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x207100", Offset = "0x207100", VA = "0x207100")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x2071E0", Offset = "0x2071E0", VA = "0x2071E0")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x2072B0", Offset = "0x2072B0", VA = "0x2072B0")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x207390", Offset = "0x207390", VA = "0x207390")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x207470", Offset = "0x207470", VA = "0x207470")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);
	}
	[Token(Token = "0x20001CD")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x40008EC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0AB4", Offset = "0x1B0AB4")]
		Unknown,
		[Token(Token = "0x40008ED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0AE8", Offset = "0x1B0AE8")]
		InSync,
		[Token(Token = "0x40008EE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0B1C", Offset = "0x1B0B1C")]
		NeedsDownload,
		[Token(Token = "0x40008EF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0B50", Offset = "0x1B0B50")]
		RemoteDownloading,
		[Token(Token = "0x40008F0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0B84", Offset = "0x1B0B84")]
		NeedsUpload,
		[Token(Token = "0x40008F1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0BB8", Offset = "0x1B0BB8")]
		LocalUploading,
		[Token(Token = "0x40008F2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0BEC", Offset = "0x1B0BEC")]
		InConflict
	}
	[Token(Token = "0x20001CE")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x40008F4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0C20", Offset = "0x1B0C20")]
		Unknown,
		[Token(Token = "0x40008F5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0C54", Offset = "0x1B0C54")]
		Ok,
		[Token(Token = "0x40008F6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0C88", Offset = "0x1B0C88")]
		BetterVersionStored,
		[Token(Token = "0x40008F7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0CBC", Offset = "0x1B0CBC")]
		ManualMergeRequired
	}
	[Token(Token = "0x20001CF")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x6000E8C")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x6000E8D")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x6000E8E")]
		void Update();

		[Token(Token = "0x6000E8F")]
		int PeekSizeElements();
	}
	[Token(Token = "0x20001D0")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x40008F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0CF0", Offset = "0x1B0CF0")]
		String,
		[Token(Token = "0x40008FA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0D24", Offset = "0x1B0D24")]
		Int,
		[Token(Token = "0x40008FB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0D58", Offset = "0x1B0D58")]
		Double,
		[Token(Token = "0x40008FC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0D8C", Offset = "0x1B0D8C")]
		Unknown
	}
	[Token(Token = "0x20001D1")]
	public enum LaunchType
	{
		[Token(Token = "0x40008FE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0DC0", Offset = "0x1B0DC0")]
		Unknown,
		[Token(Token = "0x40008FF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0DF4", Offset = "0x1B0DF4")]
		Normal,
		[Token(Token = "0x4000900")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0E28", Offset = "0x1B0E28")]
		Invite,
		[Token(Token = "0x4000901")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0E5C", Offset = "0x1B0E5C")]
		Coordinated,
		[Token(Token = "0x4000902")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0E90", Offset = "0x1B0E90")]
		Deeplink
	}
	[Token(Token = "0x20001D2")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x4000904")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0EC4", Offset = "0x1B0EC4")]
		None,
		[Token(Token = "0x4000905")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0EF8", Offset = "0x1B0EF8")]
		Friends,
		[Token(Token = "0x4000906")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0F2C", Offset = "0x1B0F2C")]
		Unknown
	}
	[Token(Token = "0x20001D3")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x4000908")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0F60", Offset = "0x1B0F60")]
		Top,
		[Token(Token = "0x4000909")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0F94", Offset = "0x1B0F94")]
		CenteredOnViewer,
		[Token(Token = "0x400090A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0FC8", Offset = "0x1B0FC8")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x400090B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B0FFC", Offset = "0x1B0FFC")]
		Unknown
	}
	[Token(Token = "0x20001D4")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x400090D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1030", Offset = "0x1B1030")]
		Unknown,
		[Token(Token = "0x400090E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1064", Offset = "0x1B1064")]
		Public,
		[Token(Token = "0x400090F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1098", Offset = "0x1B1098")]
		Friends,
		[Token(Token = "0x4000910")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B10CC", Offset = "0x1B10CC")]
		OnlyMe
	}
	[Token(Token = "0x20001D5")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x4000912")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1100", Offset = "0x1B1100")]
		Success = 1,
		[Token(Token = "0x4000913")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1134", Offset = "0x1B1134")]
		Unknown = 0,
		[Token(Token = "0x4000914")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1168", Offset = "0x1B1168")]
		NoPackageSet = -1,
		[Token(Token = "0x4000915")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B119C", Offset = "0x1B119C")]
		NoFbConnect = -2,
		[Token(Token = "0x4000916")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B11D0", Offset = "0x1B11D0")]
		NoSessionId = -3,
		[Token(Token = "0x4000917")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1204", Offset = "0x1B1204")]
		MissingParameters = -4
	}
	[Token(Token = "0x20001D6")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x4000919")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1238", Offset = "0x1B1238")]
		Required,
		[Token(Token = "0x400091A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B126C", Offset = "0x1B126C")]
		High,
		[Token(Token = "0x400091B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B12A0", Offset = "0x1B12A0")]
		Medium,
		[Token(Token = "0x400091C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B12D4", Offset = "0x1B12D4")]
		Low,
		[Token(Token = "0x400091D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1308", Offset = "0x1B1308")]
		Unknown
	}
	[Token(Token = "0x20001D7")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x29DE98", Offset = "0x29DE98", VA = "0x29DE98")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x29DF2C", Offset = "0x29DF2C", VA = "0x29DF2C")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x29DFD4", Offset = "0x29DFD4", VA = "0x29DFD4")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x29E060", Offset = "0x29E060", VA = "0x29E060")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x29E0F4", Offset = "0x29E0F4", VA = "0x29E0F4")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x29E188", Offset = "0x29E188", VA = "0x29E188")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x29E230", Offset = "0x29E230", VA = "0x29E230")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x29E2BC", Offset = "0x29E2BC", VA = "0x29E2BC")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x29E364", Offset = "0x29E364", VA = "0x29E364")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x29E41C", Offset = "0x29E41C", VA = "0x29E41C")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x29E4C4", Offset = "0x29E4C4", VA = "0x29E4C4")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x29E550", Offset = "0x29E550", VA = "0x29E550")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x29E5E4", Offset = "0x29E5E4", VA = "0x29E5E4")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x29CD94", Offset = "0x29CD94", VA = "0x29CD94")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x29E678", Offset = "0x29E678", VA = "0x29E678", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x4000920")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B133C", Offset = "0x1B133C")]
		Unknown,
		[Token(Token = "0x4000921")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1370", Offset = "0x1B1370")]
		Trailing,
		[Token(Token = "0x4000922")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B13A4", Offset = "0x1B13A4")]
		Swingy
	}
	[Token(Token = "0x20001D9")]
	public enum MediaContentType
	{
		[Token(Token = "0x4000924")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B13D8", Offset = "0x1B13D8")]
		Unknown,
		[Token(Token = "0x4000925")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B140C", Offset = "0x1B140C")]
		Photo
	}
	[Token(Token = "0x20001DA")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x20001DB")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x170000FE")]
		public T Data
		{
			[Token(Token = "0x6000EA0")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000E9F")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EA1")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x20001DC")]
	public class Message
	{
		[Token(Token = "0x20001DD")]
		public delegate void Callback(Message message);

		[Token(Token = "0x20001DE")]
		public enum MessageType : uint
		{
			[Token(Token = "0x400092C")]
			Unknown = 0u,
			[Token(Token = "0x400092D")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x400092E")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x400092F")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4000930")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4000931")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4000932")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4000933")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4000934")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4000935")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4000936")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x4000937")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4000938")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4000939")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x400093A")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x400093B")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x400093C")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x400093D")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x400093E")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x400093F")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x4000940")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x4000941")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x4000942")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x4000943")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x4000944")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x4000945")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x4000946")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x4000947")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x4000948")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4000949")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x400094A")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x400094B")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x400094C")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x400094D")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x400094E")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x400094F")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4000950")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4000951")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4000952")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x4000953")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x4000954")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x4000955")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x4000956")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x4000957")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x4000958")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4000959")]
			IAP_GetViewerPurchasesDurableCache = 1666817579u,
			[Token(Token = "0x400095A")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x400095B")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x400095C")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x400095D")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x400095E")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x400095F")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4000960")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4000961")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4000962")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x4000963")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x4000964")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x4000965")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x4000966")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x4000967")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x4000968")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x4000969")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x400096A")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x400096B")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x400096C")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x400096D")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x400096E")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x400096F")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4000970")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4000971")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4000972")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x4000973")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x4000974")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x4000975")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x4000976")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x4000977")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x4000978")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x4000979")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x400097A")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x400097B")]
			RichPresence_Clear = 1471632051u,
			[Token(Token = "0x400097C")]
			RichPresence_Set = 1007973641u,
			[Token(Token = "0x400097D")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x400097E")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x400097F")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4000980")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4000981")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x4000982")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x4000983")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x4000984")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x4000985")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x4000986")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x4000987")]
			Room_Join = 382373641u,
			[Token(Token = "0x4000988")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4000989")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x400098A")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x400098B")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x400098C")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x400098D")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x400098E")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x400098F")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4000990")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4000991")]
			User_Get = 1808768583u,
			[Token(Token = "0x4000992")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x4000993")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x4000994")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x4000995")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x4000996")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x4000997")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x4000998")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x4000999")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x400099A")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x400099B")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x400099C")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x400099D")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x400099E")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x400099F")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x40009A0")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x40009A1")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x40009A2")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x40009A3")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x40009A4")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x40009A5")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x40009A6")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x40009A7")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x40009A8")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x40009A9")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x40009AA")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x40009AB")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x40009AC")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x40009AD")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x40009AE")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x40009AF")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x40009B0")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x40009B1")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x40009B2")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x40009B3")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x20001DF")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private MessageType type;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong requestID;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Error error;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B1440", Offset = "0x1B1440")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1B1440", Offset = "0x1B1440")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x170000FF")]
		public MessageType Type
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x298450", Offset = "0x298450", VA = "0x298450")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000100")]
		public bool IsError
		{
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x29EBB8", Offset = "0x29EBB8", VA = "0x29EBB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000101")]
		public ulong RequestID
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x298448", Offset = "0x298448", VA = "0x298448")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000102")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x2A2054", Offset = "0x2A2054", VA = "0x2A2054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B1484", Offset = "0x1B1484")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x2A1FF0", Offset = "0x2A1FF0", VA = "0x2A1FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B1474", Offset = "0x1B1474")]
			set
			{
			}
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x29E878", Offset = "0x29E878", VA = "0x29E878")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x29EBB0", Offset = "0x29EBB0", VA = "0x29EBB0", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x29EBC8", Offset = "0x29EBC8", VA = "0x29EBC8", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x29EBD0", Offset = "0x29EBD0", VA = "0x29EBD0", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x29EBD8", Offset = "0x29EBD8", VA = "0x29EBD8", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x29EBE0", Offset = "0x29EBE0", VA = "0x29EBE0", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x29EBE8", Offset = "0x29EBE8", VA = "0x29EBE8", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x29EBF0", Offset = "0x29EBF0", VA = "0x29EBF0", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x29EBF8", Offset = "0x29EBF8", VA = "0x29EBF8", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x29EC00", Offset = "0x29EC00", VA = "0x29EC00", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x29EC08", Offset = "0x29EC08", VA = "0x29EC08", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x29EC10", Offset = "0x29EC10", VA = "0x29EC10", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x29EC18", Offset = "0x29EC18", VA = "0x29EC18", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x29EC20", Offset = "0x29EC20", VA = "0x29EC20", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x29EC28", Offset = "0x29EC28", VA = "0x29EC28", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x29EC30", Offset = "0x29EC30", VA = "0x29EC30", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x29EC38", Offset = "0x29EC38", VA = "0x29EC38", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x29EC40", Offset = "0x29EC40", VA = "0x29EC40", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x29EC48", Offset = "0x29EC48", VA = "0x29EC48", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x29EC50", Offset = "0x29EC50", VA = "0x29EC50", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x29EC58", Offset = "0x29EC58", VA = "0x29EC58", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x29EC60", Offset = "0x29EC60", VA = "0x29EC60", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x29EC68", Offset = "0x29EC68", VA = "0x29EC68", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x29EC70", Offset = "0x29EC70", VA = "0x29EC70", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x29EC78", Offset = "0x29EC78", VA = "0x29EC78", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x29EC80", Offset = "0x29EC80", VA = "0x29EC80", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x29EC88", Offset = "0x29EC88", VA = "0x29EC88", Slot = "28")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x29EC90", Offset = "0x29EC90", VA = "0x29EC90", Slot = "29")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x29EC98", Offset = "0x29EC98", VA = "0x29EC98", Slot = "30")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x29ECA0", Offset = "0x29ECA0", VA = "0x29ECA0", Slot = "31")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x29ECA8", Offset = "0x29ECA8", VA = "0x29ECA8", Slot = "32")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x29ECB0", Offset = "0x29ECB0", VA = "0x29ECB0", Slot = "33")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x29ECB8", Offset = "0x29ECB8", VA = "0x29ECB8", Slot = "34")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x29ECC0", Offset = "0x29ECC0", VA = "0x29ECC0", Slot = "35")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x29ECC8", Offset = "0x29ECC8", VA = "0x29ECC8", Slot = "36")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x29ECD0", Offset = "0x29ECD0", VA = "0x29ECD0", Slot = "37")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x29ECD8", Offset = "0x29ECD8", VA = "0x29ECD8", Slot = "38")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x29ECE0", Offset = "0x29ECE0", VA = "0x29ECE0", Slot = "39")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x29ECE8", Offset = "0x29ECE8", VA = "0x29ECE8", Slot = "40")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x29ECF0", Offset = "0x29ECF0", VA = "0x29ECF0", Slot = "41")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x29ECF8", Offset = "0x29ECF8", VA = "0x29ECF8", Slot = "42")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x29ED00", Offset = "0x29ED00", VA = "0x29ED00", Slot = "43")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x29ED08", Offset = "0x29ED08", VA = "0x29ED08", Slot = "44")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x29ED10", Offset = "0x29ED10", VA = "0x29ED10", Slot = "45")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x29ED18", Offset = "0x29ED18", VA = "0x29ED18", Slot = "46")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x29ED20", Offset = "0x29ED20", VA = "0x29ED20", Slot = "47")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x29ED28", Offset = "0x29ED28", VA = "0x29ED28", Slot = "48")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x29ED30", Offset = "0x29ED30", VA = "0x29ED30", Slot = "49")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x29ED38", Offset = "0x29ED38", VA = "0x29ED38", Slot = "50")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x29ED40", Offset = "0x29ED40", VA = "0x29ED40", Slot = "51")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x29ED48", Offset = "0x29ED48", VA = "0x29ED48", Slot = "52")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x29ED50", Offset = "0x29ED50", VA = "0x29ED50", Slot = "53")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x29ED58", Offset = "0x29ED58", VA = "0x29ED58", Slot = "54")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x29ED60", Offset = "0x29ED60", VA = "0x29ED60", Slot = "55")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x29ED68", Offset = "0x29ED68", VA = "0x29ED68", Slot = "56")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x29ED70", Offset = "0x29ED70", VA = "0x29ED70", Slot = "57")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x29ED78", Offset = "0x29ED78", VA = "0x29ED78", Slot = "58")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x29ED80", Offset = "0x29ED80", VA = "0x29ED80", Slot = "59")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x29ED88", Offset = "0x29ED88", VA = "0x29ED88", Slot = "60")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x29ED90", Offset = "0x29ED90", VA = "0x29ED90", Slot = "61")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x29ED98", Offset = "0x29ED98", VA = "0x29ED98", Slot = "62")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x29EDA0", Offset = "0x29EDA0", VA = "0x29EDA0", Slot = "63")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x29EDA8", Offset = "0x29EDA8", VA = "0x29EDA8", Slot = "64")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x29EDB0", Offset = "0x29EDB0", VA = "0x29EDB0", Slot = "65")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x29EDB8", Offset = "0x29EDB8", VA = "0x29EDB8", Slot = "66")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x29EDC0", Offset = "0x29EDC0", VA = "0x29EDC0")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x297CD4", Offset = "0x297CD4", VA = "0x297CD4")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20001E0")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x2A240C", Offset = "0x2A240C", VA = "0x2A240C")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x2A2478", Offset = "0x2A2478", VA = "0x2A2478", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x2A24DC", Offset = "0x2A24DC", VA = "0x2A24DC", Slot = "67")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E1")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x2A02F0", Offset = "0x2A02F0", VA = "0x2A02F0")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x2A2638", Offset = "0x2A2638", VA = "0x2A2638", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x2A269C", Offset = "0x2A269C", VA = "0x2A269C", Slot = "67")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E2")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x2A035C", Offset = "0x2A035C", VA = "0x2A035C")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x2A29D8", Offset = "0x2A29D8", VA = "0x2A29D8", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x2A2A3C", Offset = "0x2A2A3C", VA = "0x2A2A3C", Slot = "67")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E3")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x2A03C8", Offset = "0x2A03C8", VA = "0x2A03C8")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x2A2D78", Offset = "0x2A2D78", VA = "0x2A2D78", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x2A2DDC", Offset = "0x2A2DDC", VA = "0x2A2DDC", Slot = "67")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E4")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x2A0434", Offset = "0x2A0434", VA = "0x2A0434")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x2A2F4C", Offset = "0x2A2F4C", VA = "0x2A2F4C", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x2A2FB0", Offset = "0x2A2FB0", VA = "0x2A2FB0", Slot = "67")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E5")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x2A04A0", Offset = "0x2A04A0", VA = "0x2A04A0")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x2A3148", Offset = "0x2A3148", VA = "0x2A3148", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x2A31AC", Offset = "0x2A31AC", VA = "0x2A31AC", Slot = "67")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E6")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x2A050C", Offset = "0x2A050C", VA = "0x2A050C")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x2A33F8", Offset = "0x2A33F8", VA = "0x2A33F8", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x2A345C", Offset = "0x2A345C", VA = "0x2A345C", Slot = "67")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E7")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x2A0578", Offset = "0x2A0578", VA = "0x2A0578")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x2A3754", Offset = "0x2A3754", VA = "0x2A3754", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x2A37B8", Offset = "0x2A37B8", VA = "0x2A37B8", Slot = "67")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E8")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x2A05E4", Offset = "0x2A05E4", VA = "0x2A05E4")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x2A3950", Offset = "0x2A3950", VA = "0x2A3950", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x2A39B4", Offset = "0x2A39B4", VA = "0x2A39B4", Slot = "67")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E9")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x2A0650", Offset = "0x2A0650", VA = "0x2A0650")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x2A3B4C", Offset = "0x2A3B4C", VA = "0x2A3B4C", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x2A3BB0", Offset = "0x2A3BB0", VA = "0x2A3BB0", Slot = "67")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EA")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x2A06BC", Offset = "0x2A06BC", VA = "0x2A06BC")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x2A3D20", Offset = "0x2A3D20", VA = "0x2A3D20", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x2A3D84", Offset = "0x2A3D84", VA = "0x2A3D84", Slot = "67")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EB")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x2A0728", Offset = "0x2A0728", VA = "0x2A0728")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x2A3F30", Offset = "0x2A3F30", VA = "0x2A3F30", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x2A3F94", Offset = "0x2A3F94", VA = "0x2A3F94", Slot = "67")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EC")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x2A0794", Offset = "0x2A0794", VA = "0x2A0794")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x2A4118", Offset = "0x2A4118", VA = "0x2A4118", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x2A417C", Offset = "0x2A417C", VA = "0x2A417C", Slot = "67")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001ED")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x2A42D8", Offset = "0x2A42D8", VA = "0x2A42D8")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x2A4344", Offset = "0x2A4344", VA = "0x2A4344", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x2A43A8", Offset = "0x2A43A8", VA = "0x2A43A8", Slot = "67")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EE")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x2A0800", Offset = "0x2A0800", VA = "0x2A0800")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x2A46A0", Offset = "0x2A46A0", VA = "0x2A46A0", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x2A4704", Offset = "0x2A4704", VA = "0x2A4704", Slot = "67")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EF")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x2A086C", Offset = "0x2A086C", VA = "0x2A086C")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x2A48B0", Offset = "0x2A48B0", VA = "0x2A48B0", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x2A4914", Offset = "0x2A4914", VA = "0x2A4914", Slot = "67")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F0")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x2A08D8", Offset = "0x2A08D8", VA = "0x2A08D8")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x2A4E4C", Offset = "0x2A4E4C", VA = "0x2A4E4C", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x2A4EB0", Offset = "0x2A4EB0", VA = "0x2A4EB0", Slot = "67")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F1")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x2A0944", Offset = "0x2A0944", VA = "0x2A0944")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x2A4AAC", Offset = "0x2A4AAC", VA = "0x2A4AAC", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x2A4B10", Offset = "0x2A4B10", VA = "0x2A4B10", Slot = "67")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F2")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x2A09B0", Offset = "0x2A09B0", VA = "0x2A09B0")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x2A5098", Offset = "0x2A5098", VA = "0x2A5098", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x2A50FC", Offset = "0x2A50FC", VA = "0x2A50FC", Slot = "67")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F3")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x2A5594", Offset = "0x2A5594", VA = "0x2A5594")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x2A5600", Offset = "0x2A5600", VA = "0x2A5600", Slot = "28")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x2A5664", Offset = "0x2A5664", VA = "0x2A5664", Slot = "67")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F4")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x2A595C", Offset = "0x2A595C", VA = "0x2A595C")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x2A59C8", Offset = "0x2A59C8", VA = "0x2A59C8", Slot = "29")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x2A5A2C", Offset = "0x2A5A2C", VA = "0x2A5A2C", Slot = "67")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F5")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x2A0A1C", Offset = "0x2A0A1C", VA = "0x2A0A1C")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x2A5B9C", Offset = "0x2A5B9C", VA = "0x2A5B9C", Slot = "30")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x2A5C00", Offset = "0x2A5C00", VA = "0x2A5C00", Slot = "67")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F6")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x2A5D70", Offset = "0x2A5D70", VA = "0x2A5D70")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x2A5DDC", Offset = "0x2A5DDC", VA = "0x2A5DDC", Slot = "31")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x2A5E40", Offset = "0x2A5E40", VA = "0x2A5E40", Slot = "67")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F7")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x2A5FB0", Offset = "0x2A5FB0", VA = "0x2A5FB0")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x2A601C", Offset = "0x2A601C", VA = "0x2A601C", Slot = "32")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x2A6080", Offset = "0x2A6080", VA = "0x2A6080", Slot = "67")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F8")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x2A0A88", Offset = "0x2A0A88", VA = "0x2A0A88")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x2A62FC", Offset = "0x2A62FC", VA = "0x2A62FC", Slot = "34")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x2A6360", Offset = "0x2A6360", VA = "0x2A6360", Slot = "67")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F9")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x2A66C8", Offset = "0x2A66C8", VA = "0x2A66C8")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x2A6734", Offset = "0x2A6734", VA = "0x2A6734", Slot = "35")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x2A6798", Offset = "0x2A6798", VA = "0x2A6798", Slot = "67")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FA")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x2A6A90", Offset = "0x2A6A90", VA = "0x2A6A90")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x2A6AFC", Offset = "0x2A6AFC", VA = "0x2A6AFC", Slot = "36")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x2A6B60", Offset = "0x2A6B60", VA = "0x2A6B60", Slot = "67")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FB")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x2A6CBC", Offset = "0x2A6CBC", VA = "0x2A6CBC")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x2A6D28", Offset = "0x2A6D28", VA = "0x2A6D28", Slot = "37")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x2A6D8C", Offset = "0x2A6D8C", VA = "0x2A6D8C", Slot = "67")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FC")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x2A0B60", Offset = "0x2A0B60", VA = "0x2A0B60")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x2A6E50", Offset = "0x2A6E50", VA = "0x2A6E50", Slot = "38")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x2A6EB4", Offset = "0x2A6EB4", VA = "0x2A6EB4", Slot = "67")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FD")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x2A7060", Offset = "0x2A7060", VA = "0x2A7060")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x2A70CC", Offset = "0x2A70CC", VA = "0x2A70CC", Slot = "39")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x2A7130", Offset = "0x2A7130", VA = "0x2A7130", Slot = "67")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FE")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x2A0BCC", Offset = "0x2A0BCC", VA = "0x2A0BCC")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x2A72B4", Offset = "0x2A72B4", VA = "0x2A72B4", Slot = "40")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x2A7318", Offset = "0x2A7318", VA = "0x2A7318", Slot = "67")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FF")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x2A0CA4", Offset = "0x2A0CA4", VA = "0x2A0CA4")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x2A775C", Offset = "0x2A775C", VA = "0x2A775C", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x2A77C0", Offset = "0x2A77C0", VA = "0x2A77C0", Slot = "67")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000200")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x2A0D10", Offset = "0x2A0D10", VA = "0x2A0D10")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x2A7A0C", Offset = "0x2A7A0C", VA = "0x2A7A0C", Slot = "43")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x2A7A70", Offset = "0x2A7A70", VA = "0x2A7A70", Slot = "67")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000201")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x2A0D7C", Offset = "0x2A0D7C", VA = "0x2A0D7C")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x2A817C", Offset = "0x2A817C", VA = "0x2A817C", Slot = "44")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x2A81E0", Offset = "0x2A81E0", VA = "0x2A81E0", Slot = "67")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000202")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x2A0DE8", Offset = "0x2A0DE8", VA = "0x2A0DE8")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x2A851C", Offset = "0x2A851C", VA = "0x2A851C", Slot = "45")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x2A8580", Offset = "0x2A8580", VA = "0x2A8580", Slot = "67")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000203")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x2A86DC", Offset = "0x2A86DC", VA = "0x2A86DC")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x2A8748", Offset = "0x2A8748", VA = "0x2A8748", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x2A87AC", Offset = "0x2A87AC", VA = "0x2A87AC", Slot = "67")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000204")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x2A0E54", Offset = "0x2A0E54", VA = "0x2A0E54")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x2A8D40", Offset = "0x2A8D40", VA = "0x2A8D40", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x2A8DA4", Offset = "0x2A8DA4", VA = "0x2A8DA4", Slot = "67")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000205")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x2A8B14", Offset = "0x2A8B14", VA = "0x2A8B14")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x2A8B80", Offset = "0x2A8B80", VA = "0x2A8B80", Slot = "47")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x2A8BE4", Offset = "0x2A8BE4", VA = "0x2A8BE4", Slot = "67")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000206")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x2A0EC0", Offset = "0x2A0EC0", VA = "0x2A0EC0")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x2A8E64", Offset = "0x2A8E64", VA = "0x2A8E64", Slot = "48")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x2A8EC8", Offset = "0x2A8EC8", VA = "0x2A8EC8", Slot = "67")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000207")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x2A0F2C", Offset = "0x2A0F2C", VA = "0x2A0F2C")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x2A909C", Offset = "0x2A909C", VA = "0x2A909C", Slot = "49")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x2A9100", Offset = "0x2A9100", VA = "0x2A9100", Slot = "67")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000208")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x2A0F98", Offset = "0x2A0F98", VA = "0x2A0F98")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x2A97EC", Offset = "0x2A97EC", VA = "0x2A97EC", Slot = "50")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x2A9850", Offset = "0x2A9850", VA = "0x2A9850", Slot = "67")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000209")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x2A1004", Offset = "0x2A1004", VA = "0x2A1004")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x2A9B8C", Offset = "0x2A9B8C", VA = "0x2A9B8C", Slot = "51")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x2A9BF0", Offset = "0x2A9BF0", VA = "0x2A9BF0", Slot = "67")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200020A")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x2A1070", Offset = "0x2A1070", VA = "0x2A1070")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x2A9DB0", Offset = "0x2A9DB0", VA = "0x2A9DB0", Slot = "52")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x2A9E14", Offset = "0x2A9E14", VA = "0x2A9E14", Slot = "67")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200020B")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x2A10DC", Offset = "0x2A10DC", VA = "0x2A10DC")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x2AA150", Offset = "0x2AA150", VA = "0x2AA150", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x2AA1B4", Offset = "0x2AA1B4", VA = "0x2AA1B4", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200020C")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x2A1148", Offset = "0x2A1148", VA = "0x2A1148")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x2AABC8", Offset = "0x2AABC8", VA = "0x2AABC8", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x2AAC2C", Offset = "0x2AAC2C", VA = "0x2AAC2C", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200020D")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x2A11B4", Offset = "0x2A11B4", VA = "0x2A11B4")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x2AACEC", Offset = "0x2AACEC", VA = "0x2AACEC", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x2AAD50", Offset = "0x2AAD50", VA = "0x2AAD50", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200020E")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x2A1220", Offset = "0x2A1220", VA = "0x2A1220")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x2AA828", Offset = "0x2AA828", VA = "0x2AA828", Slot = "56")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x2AA88C", Offset = "0x2AA88C", VA = "0x2AA88C", Slot = "67")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200020F")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x2A128C", Offset = "0x2A128C", VA = "0x2A128C")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x2AA274", Offset = "0x2AA274", VA = "0x2AA274", Slot = "54")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x2AA2D8", Offset = "0x2AA2D8", VA = "0x2AA2D8", Slot = "67")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000210")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x2A12F8", Offset = "0x2A12F8", VA = "0x2A12F8")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x2AA488", Offset = "0x2AA488", VA = "0x2AA488", Slot = "55")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x2AA4EC", Offset = "0x2AA4EC", VA = "0x2AA4EC", Slot = "67")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000211")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x2A1364", Offset = "0x2A1364", VA = "0x2A1364")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x2AAE10", Offset = "0x2AAE10", VA = "0x2AAE10", Slot = "57")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x2AAE74", Offset = "0x2AAE74", VA = "0x2AAE74", Slot = "67")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000212")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x2A13D0", Offset = "0x2A13D0", VA = "0x2A13D0")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x2AB16C", Offset = "0x2AB16C", VA = "0x2AB16C", Slot = "58")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x2AB1D0", Offset = "0x2AB1D0", VA = "0x2AB1D0", Slot = "67")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000213")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x2A143C", Offset = "0x2A143C", VA = "0x2A143C")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x2AB32C", Offset = "0x2AB32C", VA = "0x2AB32C", Slot = "59")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x2AB390", Offset = "0x2AB390", VA = "0x2AB390", Slot = "67")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000214")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x2AB418", Offset = "0x2AB418", VA = "0x2AB418")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x2AB484", Offset = "0x2AB484", VA = "0x2AB484", Slot = "60")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x2AB4E8", Offset = "0x2AB4E8", VA = "0x2AB4E8", Slot = "67")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000215")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x2A14A8", Offset = "0x2A14A8", VA = "0x2A14A8")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x2AB658", Offset = "0x2AB658", VA = "0x2AB658", Slot = "61")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x2AB6BC", Offset = "0x2AB6BC", VA = "0x2AB6BC", Slot = "67")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000216")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x2A1514", Offset = "0x2A1514", VA = "0x2A1514")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x2AB82C", Offset = "0x2AB82C", VA = "0x2AB82C", Slot = "62")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x2AB890", Offset = "0x2AB890", VA = "0x2AB890", Slot = "67")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000217")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x2A1580", Offset = "0x2A1580", VA = "0x2A1580")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x2ABA78", Offset = "0x2ABA78", VA = "0x2ABA78", Slot = "63")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x2ABADC", Offset = "0x2ABADC", VA = "0x2ABADC", Slot = "67")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000218")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x2A15EC", Offset = "0x2A15EC", VA = "0x2A15EC")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x2ABE18", Offset = "0x2ABE18", VA = "0x2ABE18", Slot = "64")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x2ABE7C", Offset = "0x2ABE7C", VA = "0x2ABE7C", Slot = "67")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000219")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x2A1658", Offset = "0x2A1658", VA = "0x2A1658")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x2AC1B8", Offset = "0x2AC1B8", VA = "0x2AC1B8", Slot = "65")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x2AC21C", Offset = "0x2AC21C", VA = "0x2AC21C", Slot = "67")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200021A")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x2AC378", Offset = "0x2AC378", VA = "0x2AC378")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x2AC3E4", Offset = "0x2AC3E4", VA = "0x2AC3E4", Slot = "66")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x2AC448", Offset = "0x2AC448", VA = "0x2AC448", Slot = "67")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200021B")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x2A16C4", Offset = "0x2A16C4", VA = "0x2A16C4")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x2A83A0", Offset = "0x2A83A0", VA = "0x2A83A0", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x2A8404", Offset = "0x2A8404", VA = "0x2A8404", Slot = "67")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200021C")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x2A1730", Offset = "0x2A1730", VA = "0x2A1730")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x2A93F8", Offset = "0x2A93F8", VA = "0x2A93F8", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x2A945C", Offset = "0x2A945C", VA = "0x2A945C", Slot = "67")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200021D")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x2A0AF4", Offset = "0x2A0AF4", VA = "0x2A0AF4")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x2A61F0", Offset = "0x2A61F0", VA = "0x2A61F0", Slot = "33")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x2A6254", Offset = "0x2A6254", VA = "0x2A6254", Slot = "67")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200021E")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x2A179C", Offset = "0x2A179C", VA = "0x2A179C")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x2A7C28", Offset = "0x2A7C28", VA = "0x2A7C28", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x2A7C8C", Offset = "0x2A7C8C", VA = "0x2A7C8C", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200021F")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x2A0C38", Offset = "0x2A0C38", VA = "0x2A0C38")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x2A74AC", Offset = "0x2A74AC", VA = "0x2A74AC", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x2A7528", Offset = "0x2A7528", VA = "0x2A7528", Slot = "56")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x2A75A4", Offset = "0x2A75A4", VA = "0x2A75A4", Slot = "67")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000220")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x2A1808", Offset = "0x2A1808", VA = "0x2A1808")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x2A5294", Offset = "0x2A5294", VA = "0x2A5294", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x2A52F8", Offset = "0x2A52F8", VA = "0x2A52F8", Slot = "67")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000221")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x2A1874", Offset = "0x2A1874", VA = "0x2A1874")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x2A962C", Offset = "0x2A962C", VA = "0x2A962C", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x2A9690", Offset = "0x2A9690", VA = "0x2A9690", Slot = "67")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x2000222")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x2A259C", Offset = "0x2A259C", VA = "0x2A259C")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class AchievementDefinition
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly AchievementType Type;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Target;

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x2AC5B8", Offset = "0x2AC5B8", VA = "0x2AC5B8")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x2A275C", Offset = "0x2A275C", VA = "0x2A275C")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class AchievementProgress
	{
		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bitfield;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong Count;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Name;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x2AC690", Offset = "0x2AC690", VA = "0x2AC690")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x2A2AFC", Offset = "0x2A2AFC", VA = "0x2A2AFC")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class AchievementUpdate
	{
		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x2A2E9C", Offset = "0x2A2E9C", VA = "0x2A2E9C")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class ApplicationVersion
	{
		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int CurrentCode;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string CurrentName;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int LatestCode;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string LatestName;

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x2A3070", Offset = "0x2A3070", VA = "0x2A3070")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class AssetDetails
	{
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetId;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AssetType;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string DownloadStatus;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string IapStatus;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B1494", Offset = "0x1B1494")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Metadata;

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x2A326C", Offset = "0x2A326C", VA = "0x2A326C")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x2A351C", Offset = "0x2A351C", VA = "0x2A351C")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly bool Success;

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x2A3878", Offset = "0x2A3878", VA = "0x2A3878")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly bool Success;

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x2A3A74", Offset = "0x2A3A74", VA = "0x2A3A74")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetId;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Filepath;

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x2A3C70", Offset = "0x2A3C70", VA = "0x2A3C70")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint BytesTotal;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int BytesTransferred;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool Completed;

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x2A3E44", Offset = "0x2A3E44", VA = "0x2A3E44")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int CountdownMS;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x2A4054", Offset = "0x2A4054", VA = "0x2A4054")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x2A423C", Offset = "0x2A423C", VA = "0x2A423C")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string SocialContext;

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x2AC858", Offset = "0x2AC858", VA = "0x2AC858")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x2A4468", Offset = "0x2A4468", VA = "0x2A4468")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x2A47C4", Offset = "0x2A47C4", VA = "0x2A47C4")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class CloudStorageData
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly byte[] Data;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DataSize;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Key;

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x2A49D4", Offset = "0x2A49D4", VA = "0x2A49D4")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long Counter;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint DataSize;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string ExtraData;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Key;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong SaveTime;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x2A4F70", Offset = "0x2A4F70", VA = "0x2A4F70")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x2A4BD0", Offset = "0x2A4BD0", VA = "0x2A4BD0")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Key;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x2A51BC", Offset = "0x2A51BC", VA = "0x2A51BC")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1B14C8", Offset = "0x1B14C8")]
	public class DeserializableList<T> : IList<T>, IEnumerable, ICollection<T>, IEnumerable<T>
	{
		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x17000103")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6000FD5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000104")]
		public int Count
		{
			[Token(Token = "0x6000FD4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000105")]
		public T Item
		{
			[Token(Token = "0x6000FD7")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000FD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B14FC", Offset = "0x1B14FC")]
		public List<T> Data
		{
			[Token(Token = "0x6000FE3")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000107")]
		public bool HasNextPage
		{
			[Token(Token = "0x6000FE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000108")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6000FE5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000109")]
		public string NextUrl
		{
			[Token(Token = "0x6000FE6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		public string PreviousUrl
		{
			[Token(Token = "0x6000FE7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD3")]
		public DeserializableList()
		{
		}

		[Token(Token = "0x6000FD6")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000FD9")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000FDA")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000FDB")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDC")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000FDD")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FDE")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000FDF")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE0")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000FE1")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6000FE2")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000239")]
	public class Error
	{
		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int Code;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int HttpCode;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Message;

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x29EB80", Offset = "0x29EB80", VA = "0x29EB80")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] Payload;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x2A53B8", Offset = "0x2A53B8", VA = "0x2A53B8")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class InstalledApplication
	{
		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string ApplicationId;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string PackageName;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Status;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int VersionCode;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string VersionName;

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x2AC908", Offset = "0x2AC908", VA = "0x2AC908")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x2A5724", Offset = "0x2A5724", VA = "0x2A5724")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string EnglishName;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string NativeName;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Tag;

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x2AC794", Offset = "0x2AC794", VA = "0x2AC794")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidBlock;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool DidCancel;

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x2A5AEC", Offset = "0x2A5AEC", VA = "0x2A5AEC")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class LaunchDetails
	{
		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string LaunchSource;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B1534", Offset = "0x1B1534")]
		public readonly UserList Users;

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x2AC9F4", Offset = "0x2AC9F4", VA = "0x2AC9F4")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x2A5CC0", Offset = "0x2A5CC0", VA = "0x2A5CC0")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong UserReportId;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x2A5F00", Offset = "0x2A5F00", VA = "0x2A5F00")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x2A6140", Offset = "0x2A6140", VA = "0x2A6140")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int Rank;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long Score;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User User;

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x2ACB30", Offset = "0x2ACB30", VA = "0x2ACB30")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x2A6420", Offset = "0x2A6420", VA = "0x2A6420")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class LinkedAccount
	{
		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string AccessToken;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string UserId;

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x2ACC58", Offset = "0x2ACC58", VA = "0x2ACC58")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x2A6858", Offset = "0x2A6858", VA = "0x2A6858")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x2A6C20", Offset = "0x2A6C20", VA = "0x2A6C20")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x2A6E48", Offset = "0x2A6E48", VA = "0x2A6E48")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool IsPaused;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int LivestreamingType;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x2A6F74", Offset = "0x2A6F74", VA = "0x2A6F74")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int CommentCount;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int ReactionCount;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string TotalViews;

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x2A71F0", Offset = "0x2A71F0", VA = "0x2A71F0")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x2A73D8", Offset = "0x2A73D8", VA = "0x2A73D8")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool CanMatch;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string TraceId;

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x2ACF54", Offset = "0x2ACF54", VA = "0x2ACF54")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x2ACD1C", Offset = "0x2ACD1C", VA = "0x2ACD1C")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x2A7664", Offset = "0x2A7664", VA = "0x2A7664")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly User UserOptional;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B1568", Offset = "0x1B1568")]
		public readonly User User;

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x2AD040", Offset = "0x2AD040", VA = "0x2AD040")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x2AD150", Offset = "0x2AD150", VA = "0x2AD150")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B159C", Offset = "0x1B159C")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint AverageWait;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Pool;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly string RequestHash;

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x2A7880", Offset = "0x2A7880", VA = "0x2A7880")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly Room Room;

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x2A7B30", Offset = "0x2A7B30", VA = "0x2A7B30")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly uint DrawCount;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly uint LossCount;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint SkillLevel;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double SkillMean;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double SkillStandardDeviation;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint WinCount;

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x2A82A0", Offset = "0x2A82A0", VA = "0x2A82A0")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class NetworkingPeer
	{
		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B15D0", Offset = "0x1B15D0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1B15D0", Offset = "0x1B15D0")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B1604", Offset = "0x1B1604")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1B1604", Offset = "0x1B1604")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x1700010B")]
		public ulong ID
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0x2AD3A0", Offset = "0x2AD3A0", VA = "0x2AD3A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B1638", Offset = "0x1B1638")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x2AD388", Offset = "0x2AD388", VA = "0x2AD388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B1648", Offset = "0x1B1648")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public PeerConnectionState State
		{
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x2AD3A8", Offset = "0x2AD3A8", VA = "0x2AD3A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B1658", Offset = "0x1B1658")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x6001007")]
			[Address(RVA = "0x2AD398", Offset = "0x2AD398", VA = "0x2AD398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B1668", Offset = "0x1B1668")]
			private set
			{
			}
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x2A84EC", Offset = "0x2A84EC", VA = "0x2A84EC")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class OrgScopedID
	{
		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x2A8640", Offset = "0x2A8640", VA = "0x2A8640")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class Party
	{
		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B1678", Offset = "0x1B1678")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User LeaderOptional;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B16AC", Offset = "0x1B16AC")]
		public readonly User Leader;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B16E0", Offset = "0x1B16E0")]
		public readonly Room Room;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B1714", Offset = "0x1B1714")]
		public readonly UserList Users;

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x2A886C", Offset = "0x2A886C", VA = "0x2A886C")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class PartyID
	{
		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x2A8CA4", Offset = "0x2A8CA4", VA = "0x2A8CA4")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong PartyId;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong SenderId;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly string UserAlias;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong UserId;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserName;

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x2A8F88", Offset = "0x2A8F88", VA = "0x2A8F88")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class Pid
	{
		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Id;

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x2AD3B0", Offset = "0x2AD3B0", VA = "0x2AD3B0")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x600100D")]
		[Address(RVA = "0x2A91C0", Offset = "0x2A91C0", VA = "0x2A91C0")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class PingResult
	{
		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B1748", Offset = "0x1B1748")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1B1748", Offset = "0x1B1748")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x1700010D")]
		public ulong ID
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0x2AD45C", Offset = "0x2AD45C", VA = "0x2AD45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B177C", Offset = "0x1B177C")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001010")]
			[Address(RVA = "0x2AD44C", Offset = "0x2AD44C", VA = "0x2AD44C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B178C", Offset = "0x1B178C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0x2AD464", Offset = "0x2AD464", VA = "0x2AD464")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700010F")]
		public bool IsTimeout
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0x2AD4F8", Offset = "0x2AD4F8", VA = "0x2AD4F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x2A95E4", Offset = "0x2A95E4", VA = "0x2A95E4")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class PlatformInitialize
	{
		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x2A9750", Offset = "0x2A9750", VA = "0x2A9750")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class Product
	{
		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Description;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Sku;

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x2AD560", Offset = "0x2AD560", VA = "0x2AD560")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x6001015")]
		[Address(RVA = "0x2A9910", Offset = "0x2A9910", VA = "0x2A9910")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class Purchase
	{
		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Sku;

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x2A9CB0", Offset = "0x2A9CB0", VA = "0x2A9CB0")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x6001017")]
		[Address(RVA = "0x2A9ED4", Offset = "0x2A9ED4", VA = "0x2A9ED4")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class Room
	{
		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Description;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B179C", Offset = "0x1B179C")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B17D0", Offset = "0x1B17D0")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public readonly uint MaxUsers;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string Name;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly User OwnerOptional;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B1804", Offset = "0x1B1804")]
		public readonly User Owner;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public readonly TeamList TeamsOptional;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B1838", Offset = "0x1B1838")]
		public readonly TeamList Teams;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public readonly RoomType Type;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B186C", Offset = "0x1B186C")]
		public readonly UserList Users;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint Version;

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x2A7D4C", Offset = "0x2A7D4C", VA = "0x2A7D4C")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6001019")]
		[Address(RVA = "0x2AA94C", Offset = "0x2AA94C", VA = "0x2AA94C")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong SenderID;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly DateTime SentTime;

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x2AA398", Offset = "0x2AA398", VA = "0x2AA398")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x600101B")]
		[Address(RVA = "0x2AA5AC", Offset = "0x2AA5AC", VA = "0x2AA5AC")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class SdkAccount
	{
		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong UserId;

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x2AD870", Offset = "0x2AD870", VA = "0x2AD870")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x600101D")]
		[Address(RVA = "0x2AAF34", Offset = "0x2AAF34", VA = "0x2AAF34")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class ShareMediaResult
	{
		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x2AB290", Offset = "0x2AB290", VA = "0x2AB290")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class SystemPermission
	{
		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool HasPermission;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x2AB5A8", Offset = "0x2AB5A8", VA = "0x2AB5A8")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class SystemVoipState
	{
		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x2AB77C", Offset = "0x2AB77C", VA = "0x2AB77C")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class Team
	{
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly UserList AssignedUsers;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int MaxUsers;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int MinUsers;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Name;

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x2AD920", Offset = "0x2AD920", VA = "0x2AD920")]
		public Team(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class TeamList : DeserializableList<Team>
	{
		[Token(Token = "0x6001022")]
		[Address(RVA = "0x2AD638", Offset = "0x2AD638", VA = "0x2AD638")]
		public TeamList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class User
	{
		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ImageURL;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string InviteToken;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string OculusID;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Presence;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string PresenceDeeplinkMessage;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x2AB950", Offset = "0x2AB950", VA = "0x2AB950")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x6001024")]
		[Address(RVA = "0x2ABF3C", Offset = "0x2ABF3C", VA = "0x2ABF3C")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class UserAndRoom
	{
		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B18A0", Offset = "0x1B18A0")]
		public readonly Room Room;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly User User;

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x2ADA1C", Offset = "0x2ADA1C", VA = "0x2ADA1C")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x6001026")]
		[Address(RVA = "0x2ABB9C", Offset = "0x2ABB9C", VA = "0x2ABB9C")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class UserProof
	{
		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Value;

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x2AC2DC", Offset = "0x2AC2DC", VA = "0x2AC2DC")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class UserReportID
	{
		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x2AC508", Offset = "0x2AC508", VA = "0x2AC508")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000272")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly ulong size;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x17000110")]
		public ulong SenderID
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0x2AED50", Offset = "0x2AED50", VA = "0x2AED50")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000111")]
		public ulong Size
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0x2AEDDC", Offset = "0x2AEDDC", VA = "0x2AEDDC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000112")]
		public SendPolicy Policy
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x2AEDE4", Offset = "0x2AEDE4", VA = "0x2AEDE4")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x2ADC6C", Offset = "0x2ADC6C", VA = "0x2ADC6C")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x2AEB5C", Offset = "0x2AEB5C", VA = "0x2AEB5C")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x2AEE70", Offset = "0x2AEE70", VA = "0x2AEE70", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x2AEED0", Offset = "0x2AEED0", VA = "0x2AEED0", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x4000A96")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B18D4", Offset = "0x1B18D4")]
		Unknown,
		[Token(Token = "0x4000A97")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1908", Offset = "0x1B1908")]
		Join,
		[Token(Token = "0x4000A98")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B193C", Offset = "0x1B193C")]
		Leave,
		[Token(Token = "0x4000A99")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1970", Offset = "0x1B1970")]
		Invite,
		[Token(Token = "0x4000A9A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B19A4", Offset = "0x1B19A4")]
		Uninvite
	}
	[Token(Token = "0x2000274")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x4000A9C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B19D8", Offset = "0x1B19D8")]
		Unknown,
		[Token(Token = "0x4000A9D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1A0C", Offset = "0x1B1A0C")]
		Connected,
		[Token(Token = "0x4000A9E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1A40", Offset = "0x1B1A40")]
		Timeout,
		[Token(Token = "0x4000A9F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1A74", Offset = "0x1B1A74")]
		Closed
	}
	[Token(Token = "0x2000275")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4000AA1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1AA8", Offset = "0x1B1AA8")]
		Unknown,
		[Token(Token = "0x4000AA2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1ADC", Offset = "0x1B1ADC")]
		Granted,
		[Token(Token = "0x4000AA3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1B10", Offset = "0x1B1B10")]
		Denied,
		[Token(Token = "0x4000AA4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1B44", Offset = "0x1B1B44")]
		Blocked
	}
	[Token(Token = "0x2000276")]
	public enum PermissionType
	{
		[Token(Token = "0x4000AA6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1B78", Offset = "0x1B1B78")]
		Unknown,
		[Token(Token = "0x4000AA7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1BAC", Offset = "0x1B1BAC")]
		Microphone,
		[Token(Token = "0x4000AA8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1BE0", Offset = "0x1B1BE0")]
		WriteExternalStorage
	}
	[Token(Token = "0x2000277")]
	public sealed class Core
	{
		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x299A1C", Offset = "0x299A1C", VA = "0x299A1C")]
		public Core()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x298DA0", Offset = "0x298DA0", VA = "0x298DA0")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x299A24", Offset = "0x299A24", VA = "0x299A24")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x299AB4", Offset = "0x299AB4", VA = "0x299AB4")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x299DA0", Offset = "0x299DA0", VA = "0x299DA0")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x29A4D0", Offset = "0x29A4D0", VA = "0x29A4D0")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x299D74", Offset = "0x299D74", VA = "0x299D74")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}
	}
	[Token(Token = "0x2000278")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6001038")]
		[Address(RVA = "0x1DA614", Offset = "0x1DA614", VA = "0x1DA614")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x1DA784", Offset = "0x1DA784", VA = "0x1DA784")]
		public static void SetLaunchIntentChangedNotificationCallback(Message<string>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000279")]
	public static class Rooms
	{
		[Token(Token = "0x600103A")]
		[Address(RVA = "0x2B0DF4", Offset = "0x2B0DF4", VA = "0x2B0DF4")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x2B10FC", Offset = "0x2B10FC", VA = "0x2B10FC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1B1C14", Offset = "0x1B1C14")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x2B119C", Offset = "0x2B119C", VA = "0x2B119C")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x2B12C4", Offset = "0x2B12C4", VA = "0x2B12C4")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x2B1434", Offset = "0x2B1434", VA = "0x2B1434")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x2B1554", Offset = "0x2B1554", VA = "0x2B1554")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x2B1660", Offset = "0x2B1660", VA = "0x2B1660")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x2B1780", Offset = "0x2B1780", VA = "0x2B1780")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x2B188C", Offset = "0x2B188C", VA = "0x2B188C")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x2B19E8", Offset = "0x2B19E8", VA = "0x2B19E8")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x2B1AF4", Offset = "0x2B1AF4", VA = "0x2B1AF4")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x2B1C1C", Offset = "0x2B1C1C", VA = "0x2B1C1C")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x2B1D44", Offset = "0x2B1D44", VA = "0x2B1D44")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x2B1EB4", Offset = "0x2B1EB4", VA = "0x2B1EB4")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x2B1FE8", Offset = "0x2B1FE8", VA = "0x2B1FE8")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x2B20F0", Offset = "0x2B20F0", VA = "0x2B20F0")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x2B2210", Offset = "0x2B2210", VA = "0x2B2210")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x2B2338", Offset = "0x2B2338", VA = "0x2B2338")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x2B2460", Offset = "0x2B2460", VA = "0x2B2460")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x2B2578", Offset = "0x2B2578", VA = "0x2B2578")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x2B1100", Offset = "0x2B1100", VA = "0x2B1100")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x2B26A0", Offset = "0x2B26A0", VA = "0x2B26A0")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x2B273C", Offset = "0x2B273C", VA = "0x2B273C")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x2B27D8", Offset = "0x2B27D8", VA = "0x2B27D8")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200027A")]
	public static class Matchmaking
	{
		[Token(Token = "0x200027B")]
		public class CustomQuery
		{
			[Token(Token = "0x200027C")]
			public struct Criterion
			{
				[Token(Token = "0x4000AAD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4000AAE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4000AAF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x6001066")]
				[Address(RVA = "0x29DE88", Offset = "0x29DE88", VA = "0x29DE88")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x4000AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Dictionary<string, object> data;

			[Token(Token = "0x4000AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Criterion[] criteria;

			[Token(Token = "0x6001064")]
			[Address(RVA = "0x29DE24", Offset = "0x29DE24", VA = "0x29DE24")]
			public CustomQuery()
			{
			}

			[Token(Token = "0x6001065")]
			[Address(RVA = "0x29C698", Offset = "0x29C698", VA = "0x29C698")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x29C148", Offset = "0x29C148", VA = "0x29C148")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x29C43C", Offset = "0x29C43C", VA = "0x29C43C")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x29C564", Offset = "0x29C564", VA = "0x29C564")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x29CC30", Offset = "0x29CC30", VA = "0x29CC30")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x29CDEC", Offset = "0x29CDEC", VA = "0x29CDEC")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x29CEE8", Offset = "0x29CEE8", VA = "0x29CEE8")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x29CFD4", Offset = "0x29CFD4", VA = "0x29CFD4")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x29D118", Offset = "0x29D118", VA = "0x29D118")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x29D27C", Offset = "0x29D27C", VA = "0x29D27C")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x29D3A4", Offset = "0x29D3A4", VA = "0x29D3A4")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x29D508", Offset = "0x29D508", VA = "0x29D508")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x29D63C", Offset = "0x29D63C", VA = "0x29D63C")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x29D7A0", Offset = "0x29D7A0", VA = "0x29D7A0")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x29D8DC", Offset = "0x29D8DC", VA = "0x29D8DC")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x29DA4C", Offset = "0x29DA4C", VA = "0x29DA4C")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x29DB58", Offset = "0x29DB58", VA = "0x29DB58")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x29DC80", Offset = "0x29DC80", VA = "0x29DC80")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x29DD88", Offset = "0x29DD88", VA = "0x29DD88")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200027D")]
	public static class Net
	{
		[Token(Token = "0x6001067")]
		[Address(RVA = "0x2ADB68", Offset = "0x2ADB68", VA = "0x2ADB68")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x2ADD4C", Offset = "0x2ADD4C", VA = "0x2ADD4C")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x2ADE88", Offset = "0x2ADE88", VA = "0x2ADE88")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x2ADF5C", Offset = "0x2ADF5C", VA = "0x2ADF5C")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x2AE030", Offset = "0x2AE030", VA = "0x2AE030")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x2AE104", Offset = "0x2AE104", VA = "0x2AE104")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x2AE1E0", Offset = "0x2AE1E0", VA = "0x2AE1E0")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x2AE314", Offset = "0x2AE314", VA = "0x2AE314")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x2AE3D4", Offset = "0x2AE3D4", VA = "0x2AE3D4")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x2AE48C", Offset = "0x2AE48C", VA = "0x2AE48C")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x2AE5AC", Offset = "0x2AE5AC", VA = "0x2AE5AC")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x2AE648", Offset = "0x2AE648", VA = "0x2AE648")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x2AE6E4", Offset = "0x2AE6E4", VA = "0x2AE6E4")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200027E")]
	public static class Leaderboards
	{
		[Token(Token = "0x6001074")]
		[Address(RVA = "0x29B74C", Offset = "0x29B74C", VA = "0x29B74C")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x29B894", Offset = "0x29B894", VA = "0x29B894")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x29B9DC", Offset = "0x29B9DC", VA = "0x29B9DC")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x29BB0C", Offset = "0x29BB0C", VA = "0x29BB0C")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x29BC3C", Offset = "0x29BC3C", VA = "0x29BC3C")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x200027F")]
	public static class Voip
	{
		[Token(Token = "0x6001079")]
		[Address(RVA = "0x2B4090", Offset = "0x2B4090", VA = "0x2B4090")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x2B4164", Offset = "0x2B4164", VA = "0x2B4164")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x2B4238", Offset = "0x2B4238", VA = "0x2B4238")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x2B430C", Offset = "0x2B430C", VA = "0x2B430C")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x2B4424", Offset = "0x2B4424", VA = "0x2B4424")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x2B44E4", Offset = "0x2B44E4", VA = "0x2B44E4")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x2B45A0", Offset = "0x2B45A0", VA = "0x2B45A0")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x2B465C", Offset = "0x2B465C", VA = "0x2B465C")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x2B473C", Offset = "0x2B473C", VA = "0x2B473C")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x2B481C", Offset = "0x2B481C", VA = "0x2B481C")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x2B48FC", Offset = "0x2B48FC", VA = "0x2B48FC")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x2B4A5C", Offset = "0x2B4A5C", VA = "0x2B4A5C")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x2B4B70", Offset = "0x2B4B70", VA = "0x2B4B70")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x2B4C0C", Offset = "0x2B4C0C", VA = "0x2B4C0C")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x2B4CA8", Offset = "0x2B4CA8", VA = "0x2B4CA8")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000280")]
	public static class Achievements
	{
		[Token(Token = "0x6001088")]
		[Address(RVA = "0x1D88F4", Offset = "0x1D88F4", VA = "0x1D88F4")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x1D8B08", Offset = "0x1D8B08", VA = "0x1D8B08")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x1D8D20", Offset = "0x1D8D20", VA = "0x1D8D20")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x1D8EF4", Offset = "0x1D8EF4", VA = "0x1D8EF4")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x1D90C4", Offset = "0x1D90C4", VA = "0x1D90C4")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x1D939C", Offset = "0x1D939C", VA = "0x1D939C")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x1D967C", Offset = "0x1D967C", VA = "0x1D967C")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x1D9868", Offset = "0x1D9868", VA = "0x1D9868")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x1D9B38", Offset = "0x1D9B38", VA = "0x1D9B38")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000281")]
	public static class Application
	{
		[Token(Token = "0x6001091")]
		[Address(RVA = "0x1DA198", Offset = "0x1DA198", VA = "0x1DA198")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x1DA374", Offset = "0x1DA374", VA = "0x1DA374")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x2000282")]
	public static class AssetFile
	{
		[Token(Token = "0x6001093")]
		[Address(RVA = "0x1DAC74", Offset = "0x1DAC74", VA = "0x1DAC74")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x1DAE64", Offset = "0x1DAE64", VA = "0x1DAE64")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x1DB054", Offset = "0x1DB054", VA = "0x1DB054")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x1DB240", Offset = "0x1DB240", VA = "0x1DB240")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x1DB434", Offset = "0x1DB434", VA = "0x1DB434")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x1DB624", Offset = "0x1DB624", VA = "0x1DB624")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x1DB810", Offset = "0x1DB810", VA = "0x1DB810")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x1DBA04", Offset = "0x1DBA04", VA = "0x1DBA04")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x1DBBF4", Offset = "0x1DBBF4", VA = "0x1DBBF4")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x1DBDE0", Offset = "0x1DBDE0", VA = "0x1DBDE0")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x1DBFB4", Offset = "0x1DBFB4", VA = "0x1DBFB4")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x1DC1A4", Offset = "0x1DC1A4", VA = "0x1DC1A4")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x1DC394", Offset = "0x1DC394", VA = "0x1DC394")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x1DC580", Offset = "0x1DC580", VA = "0x1DC580")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000283")]
	public static class Avatar
	{
	}
	[Token(Token = "0x2000284")]
	public static class Cal
	{
	}
	[Token(Token = "0x2000285")]
	public static class CloudStorage
	{
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x298C84", Offset = "0x298C84", VA = "0x298C84")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x298E2C", Offset = "0x298E2C", VA = "0x298E2C")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x298F48", Offset = "0x298F48", VA = "0x298F48")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x29905C", Offset = "0x29905C", VA = "0x29905C")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x299178", Offset = "0x299178", VA = "0x299178")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x29928C", Offset = "0x29928C", VA = "0x29928C")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x2993A8", Offset = "0x2993A8", VA = "0x2993A8")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x2994D0", Offset = "0x2994D0", VA = "0x2994D0")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x2995F8", Offset = "0x2995F8", VA = "0x2995F8")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x299748", Offset = "0x299748", VA = "0x299748")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000286")]
	public static class CloudStorage2
	{
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x299910", Offset = "0x299910", VA = "0x299910")]
		public static Request<string> GetUserDirectoryPath()
		{
			return null;
		}
	}
	[Token(Token = "0x2000287")]
	public static class Colocation
	{
	}
	[Token(Token = "0x2000288")]
	public static class Entitlements
	{
		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x29AACC", Offset = "0x29AACC", VA = "0x29AACC")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x2000289")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x200028A")]
	public static class HTTP
	{
	}
	[Token(Token = "0x200028B")]
	public static class IAP
	{
		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x29ABE0", Offset = "0x29ABE0", VA = "0x29ABE0")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x29ACD8", Offset = "0x29ACD8", VA = "0x29ACD8")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x29AE04", Offset = "0x29AE04", VA = "0x29AE04")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x29AF10", Offset = "0x29AF10", VA = "0x29AF10")]
		public static Request<PurchaseList> GetViewerPurchasesDurableCache()
		{
			return null;
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x29B01C", Offset = "0x29B01C", VA = "0x29B01C")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x29B19C", Offset = "0x29B19C", VA = "0x29B19C")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x29B364", Offset = "0x29B364", VA = "0x29B364")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200028C")]
	public static class LanguagePack
	{
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x29B52C", Offset = "0x29B52C", VA = "0x29B52C")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x29B638", Offset = "0x29B638", VA = "0x29B638")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x200028D")]
	public static class Livestreaming
	{
		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x29BD88", Offset = "0x29BD88", VA = "0x29BD88")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x29BE94", Offset = "0x29BE94", VA = "0x29BE94")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x29BFA0", Offset = "0x29BFA0", VA = "0x29BFA0")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x29C0AC", Offset = "0x29C0AC", VA = "0x29C0AC")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200028E")]
	public static class Media
	{
		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x29E750", Offset = "0x29E750", VA = "0x29E750")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x200028F")]
	public static class Notifications
	{
		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x2AE780", Offset = "0x2AE780", VA = "0x2AE780")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x2AE88C", Offset = "0x2AE88C", VA = "0x2AE88C")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x2AE994", Offset = "0x2AE994", VA = "0x2AE994")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000290")]
	public static class Parties
	{
		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x2AEF6C", Offset = "0x2AEF6C", VA = "0x2AEF6C")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x2AF078", Offset = "0x2AF078", VA = "0x2AF078")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000291")]
	public static class RichPresence
	{
		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x2AFC44", Offset = "0x2AFC44", VA = "0x2AFC44")]
		public static Request Clear()
		{
			return null;
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x2AFD30", Offset = "0x2AFD30", VA = "0x2AFD30")]
		public static Request Set(RichPresenceOptions richPresenceOptions)
		{
			return null;
		}
	}
	[Token(Token = "0x2000292")]
	public static class Users
	{
		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x2B30F4", Offset = "0x2B30F4", VA = "0x2B30F4")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x2B3214", Offset = "0x2B3214", VA = "0x2B3214")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x2B3320", Offset = "0x2B3320", VA = "0x2B3320")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x2B342C", Offset = "0x2B342C", VA = "0x2B342C")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x2B3538", Offset = "0x2B3538", VA = "0x2B3538")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x2B3644", Offset = "0x2B3644", VA = "0x2B3644")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x2B37A0", Offset = "0x2B37A0", VA = "0x2B37A0")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x2B38C0", Offset = "0x2B38C0", VA = "0x2B38C0")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x2B39CC", Offset = "0x2B39CC", VA = "0x2B39CC")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x2B3AD8", Offset = "0x2B3AD8", VA = "0x2B3AD8")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x2B3BF8", Offset = "0x2B3BF8", VA = "0x2B3BF8")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x2B3D00", Offset = "0x2B3D00", VA = "0x2B3D00")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x2B3EC8", Offset = "0x2B3EC8", VA = "0x2B3EC8")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000293")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4000AB1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1C48", Offset = "0x1B1C48")]
		Success = 0,
		[Token(Token = "0x4000AB2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1C7C", Offset = "0x1B1C7C")]
		Uninitialized = -1,
		[Token(Token = "0x4000AB3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1CB0", Offset = "0x1B1CB0")]
		PreLoaded = -2,
		[Token(Token = "0x4000AB4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1CE4", Offset = "0x1B1CE4")]
		FileInvalid = -3,
		[Token(Token = "0x4000AB5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1D18", Offset = "0x1B1D18")]
		SignatureInvalid = -4,
		[Token(Token = "0x4000AB6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1D4C", Offset = "0x1B1D4C")]
		UnableToVerify = -5,
		[Token(Token = "0x4000AB7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1D80", Offset = "0x1B1D80")]
		VersionMismatch = -6,
		[Token(Token = "0x4000AB8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1DB4", Offset = "0x1B1DB4")]
		Unknown = -7,
		[Token(Token = "0x4000AB9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1DE8", Offset = "0x1B1DE8")]
		InvalidCredentials = -8,
		[Token(Token = "0x4000ABA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1E1C", Offset = "0x1B1E1C")]
		NotEntitled = -9
	}
	[Token(Token = "0x2000294")]
	public static class PlatformInternal
	{
		[Token(Token = "0x2000295")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x4000ABC")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x4000ABD")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x4000ABE")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x4000ABF")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x4000AC0")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x4000AC1")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x4000AC2")]
			Colocation_GetCurrentMapUuid = 878018226u,
			[Token(Token = "0x4000AC3")]
			Colocation_RequestMap = 840263277u,
			[Token(Token = "0x4000AC4")]
			Colocation_ShareMap = 409847005u,
			[Token(Token = "0x4000AC5")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4000AC6")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4000AC7")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4000AC8")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4000AC9")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x4000ACA")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4000ACB")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x4000ACC")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x4000ACD")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x4000ACE")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x4000ACF")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x4000AD0")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x4000AD1")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x4000AD2")]
			Party_Create = 450042703u,
			[Token(Token = "0x4000AD3")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x4000AD4")]
			Party_Get = 1586058173u,
			[Token(Token = "0x4000AD5")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x4000AD6")]
			Party_Invite = 901104867u,
			[Token(Token = "0x4000AD7")]
			Party_Join = 1744993395u,
			[Token(Token = "0x4000AD8")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4000AD9")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4000ADA")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x4000ADB")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x4000ADC")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x4000ADD")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x4000ADE")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x4000ADF")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x4000AE0")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x4000AE1")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x4000AE2")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x4000AE3")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x4000AE4")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4000AE5")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4000AE6")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4000AE7")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4000AE8")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4000AE9")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x4000AEA")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x2000296")]
		public static class HTTP
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x2AF428", Offset = "0x2AF428", VA = "0x2AF428")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x2000297")]
		public static class Users
		{
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0x2AF4C4", Offset = "0x2AF4C4", VA = "0x2AF4C4")]
			public static Request<LinkedAccountList> GetLinkedAccounts(ServiceProvider[] providers)
			{
				return null;
			}
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x2AF114", Offset = "0x2AF114", VA = "0x2AF114")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x2A18E0", Offset = "0x2A18E0", VA = "0x2A18E0")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x2AF194", Offset = "0x2AF194", VA = "0x2AF194")]
		public static Request<PlatformInitialize> InitializeStandaloneAsync(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x2000298")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[SerializeField]
		private bool ovrEnableARM64Support;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x17000113")]
		public static string AppID
		{
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x29AAA0", Offset = "0x29AAA0", VA = "0x29AAA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x2AFA6C", Offset = "0x2AFA6C", VA = "0x2AFA6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public static string MobileAppID
		{
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0x29AA78", Offset = "0x29AA78", VA = "0x29AA78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0x2AFA98", Offset = "0x2AFA98", VA = "0x2AFA98")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x60010D9")]
			[Address(RVA = "0x29A130", Offset = "0x29A130", VA = "0x29A130")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010DA")]
			[Address(RVA = "0x2AFAC4", Offset = "0x2AFAC4", VA = "0x2AFAC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public static bool EnableARM64Support
		{
			[Token(Token = "0x60010DB")]
			[Address(RVA = "0x2AFAF0", Offset = "0x2AFAF0", VA = "0x2AFAF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010DC")]
			[Address(RVA = "0x2AFB18", Offset = "0x2AFB18", VA = "0x2AFB18")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x60010DD")]
			[Address(RVA = "0x2AF8E8", Offset = "0x2AF8E8", VA = "0x2AF8E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x2AFB44", Offset = "0x2AFB44", VA = "0x2AFB44")]
			set
			{
			}
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x2AF824", Offset = "0x2AF824", VA = "0x2AF824")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x60010DF")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x60010E0")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}
	}
	[Token(Token = "0x200029A")]
	public class Request
	{
		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B1E90", Offset = "0x1B1E90")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1B1E90", Offset = "0x1B1E90")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x17000118")]
		public ulong RequestID
		{
			[Token(Token = "0x60010E2")]
			[Address(RVA = "0x297C30", Offset = "0x297C30", VA = "0x297C30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B1EC4", Offset = "0x1B1EC4")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0x2AFBA8", Offset = "0x2AFBA8", VA = "0x2AFBA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1B1ED4", Offset = "0x1B1ED4")]
			set
			{
			}
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x29ABB8", Offset = "0x29ABB8", VA = "0x29ABB8")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x2AFBB8", Offset = "0x2AFBB8", VA = "0x2AFBB8")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x298B58", Offset = "0x298B58", VA = "0x298B58")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x200029B")]
	public enum RichPresenceExtraContext
	{
		[Token(Token = "0x4000AF2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1EE4", Offset = "0x1B1EE4")]
		Unknown,
		[Token(Token = "0x4000AF3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1F18", Offset = "0x1B1F18")]
		None,
		[Token(Token = "0x4000AF4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1F4C", Offset = "0x1B1F4C")]
		CurrentCapacity,
		[Token(Token = "0x4000AF5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1F80", Offset = "0x1B1F80")]
		StartedAgo,
		[Token(Token = "0x4000AF6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1FB4", Offset = "0x1B1FB4")]
		EndingIn,
		[Token(Token = "0x4000AF7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B1FE8", Offset = "0x1B1FE8")]
		LookingForAMatch
	}
	[Token(Token = "0x200029C")]
	public class RichPresenceOptions
	{
		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x2AFEC8", Offset = "0x2AFEC8", VA = "0x2AFEC8")]
		public RichPresenceOptions()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x2AFF5C", Offset = "0x2AFF5C", VA = "0x2AFF5C")]
		public void SetApiName(string value)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x2AFFF0", Offset = "0x2AFFF0", VA = "0x2AFFF0")]
		public void SetArgs(string key, string value)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x2B0098", Offset = "0x2B0098", VA = "0x2B0098")]
		public void ClearArgs()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x2B0124", Offset = "0x2B0124", VA = "0x2B0124")]
		public void SetCurrentCapacity(uint value)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x2B01B8", Offset = "0x2B01B8", VA = "0x2B01B8")]
		public void SetDeeplinkMessageOverride(string value)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x2B024C", Offset = "0x2B024C", VA = "0x2B024C")]
		public void SetEndTime(DateTime value)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x2B0300", Offset = "0x2B0300", VA = "0x2B0300")]
		public void SetExtraContext(RichPresenceExtraContext value)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x2B0394", Offset = "0x2B0394", VA = "0x2B0394")]
		public void SetIsIdle(bool value)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x2B0428", Offset = "0x2B0428", VA = "0x2B0428")]
		public void SetIsJoinable(bool value)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x2B04BC", Offset = "0x2B04BC", VA = "0x2B04BC")]
		public void SetJoinableId(string value)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x2B0550", Offset = "0x2B0550", VA = "0x2B0550")]
		public void SetMaxCapacity(uint value)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x2B05E4", Offset = "0x2B05E4", VA = "0x2B05E4")]
		public void SetStartTime(DateTime value)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x2AFE70", Offset = "0x2AFE70", VA = "0x2AFE70")]
		public static explicit operator IntPtr(RichPresenceOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x2B0698", Offset = "0x2B0698", VA = "0x2B0698", Slot = "1")]
		~RichPresenceOptions()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public enum RoomJoinability
	{
		[Token(Token = "0x4000AFA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B201C", Offset = "0x1B201C")]
		Unknown,
		[Token(Token = "0x4000AFB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2050", Offset = "0x1B2050")]
		AreIn,
		[Token(Token = "0x4000AFC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2084", Offset = "0x1B2084")]
		AreKicked,
		[Token(Token = "0x4000AFD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B20B8", Offset = "0x1B20B8")]
		CanJoin,
		[Token(Token = "0x4000AFE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B20EC", Offset = "0x1B20EC")]
		IsFull,
		[Token(Token = "0x4000AFF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2120", Offset = "0x1B2120")]
		NoViewer,
		[Token(Token = "0x4000B00")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2154", Offset = "0x1B2154")]
		PolicyPrevents
	}
	[Token(Token = "0x200029E")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x4000B02")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2188", Offset = "0x1B2188")]
		None,
		[Token(Token = "0x4000B03")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B21BC", Offset = "0x1B21BC")]
		Everyone,
		[Token(Token = "0x4000B04")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B21F0", Offset = "0x1B21F0")]
		FriendsOfMembers,
		[Token(Token = "0x4000B05")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2224", Offset = "0x1B2224")]
		FriendsOfOwner,
		[Token(Token = "0x4000B06")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2258", Offset = "0x1B2258")]
		InvitedUsers,
		[Token(Token = "0x4000B07")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B228C", Offset = "0x1B228C")]
		Unknown
	}
	[Token(Token = "0x200029F")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x4000B09")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B22C0", Offset = "0x1B22C0")]
		Unknown,
		[Token(Token = "0x4000B0A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B22F4", Offset = "0x1B22F4")]
		Lock,
		[Token(Token = "0x4000B0B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2328", Offset = "0x1B2328")]
		Unlock
	}
	[Token(Token = "0x20002A0")]
	public class RoomOptions
	{
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x2B0770", Offset = "0x2B0770", VA = "0x2B0770")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x2B0804", Offset = "0x2B0804", VA = "0x2B0804")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x2B08AC", Offset = "0x2B08AC", VA = "0x2B08AC")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x2B0938", Offset = "0x2B0938", VA = "0x2B0938")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x2B09CC", Offset = "0x2B09CC", VA = "0x2B09CC")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x2B0A60", Offset = "0x2B0A60", VA = "0x2B0A60")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x2B0AF4", Offset = "0x2B0AF4", VA = "0x2B0AF4")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x2B0B88", Offset = "0x2B0B88", VA = "0x2B0B88")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x2B0C30", Offset = "0x2B0C30", VA = "0x2B0C30")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x2B0CC4", Offset = "0x2B0CC4", VA = "0x2B0CC4")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x2B0D1C", Offset = "0x2B0D1C", VA = "0x2B0D1C", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public enum RoomType
	{
		[Token(Token = "0x4000B0E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B235C", Offset = "0x1B235C")]
		Unknown,
		[Token(Token = "0x4000B0F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2390", Offset = "0x1B2390")]
		Matchmaking,
		[Token(Token = "0x4000B10")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B23C4", Offset = "0x1B23C4")]
		Moderated,
		[Token(Token = "0x4000B11")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B23F8", Offset = "0x1B23F8")]
		Private,
		[Token(Token = "0x4000B12")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B242C", Offset = "0x1B242C")]
		Solo
	}
	[Token(Token = "0x20002A2")]
	public enum SdkAccountType
	{
		[Token(Token = "0x4000B14")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2460", Offset = "0x1B2460")]
		Unknown,
		[Token(Token = "0x4000B15")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2494", Offset = "0x1B2494")]
		Oculus,
		[Token(Token = "0x4000B16")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B24C8", Offset = "0x1B24C8")]
		FacebookGameroom
	}
	[Token(Token = "0x20002A3")]
	public enum SendPolicy
	{
		[Token(Token = "0x4000B18")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B24FC", Offset = "0x1B24FC")]
		Unreliable,
		[Token(Token = "0x4000B19")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2530", Offset = "0x1B2530")]
		Reliable,
		[Token(Token = "0x4000B1A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2564", Offset = "0x1B2564")]
		Unknown
	}
	[Token(Token = "0x20002A4")]
	public enum ServiceProvider
	{
		[Token(Token = "0x4000B1C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2598", Offset = "0x1B2598")]
		Unknown,
		[Token(Token = "0x4000B1D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B25CC", Offset = "0x1B25CC")]
		Dropbox,
		[Token(Token = "0x4000B1E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2600", Offset = "0x1B2600")]
		Facebook,
		[Token(Token = "0x4000B1F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2634", Offset = "0x1B2634")]
		Google,
		[Token(Token = "0x4000B20")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2668", Offset = "0x1B2668")]
		Instagram,
		[Token(Token = "0x4000B21")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B269C", Offset = "0x1B269C")]
		RemoteMedia
	}
	[Token(Token = "0x20002A5")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x4000B23")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B26D0", Offset = "0x1B26D0")]
		Unknown,
		[Token(Token = "0x4000B24")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2704", Offset = "0x1B2704")]
		Shared,
		[Token(Token = "0x4000B25")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2738", Offset = "0x1B2738")]
		Canceled
	}
	[Token(Token = "0x20002A6")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x20002A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x1B276C", Offset = "0x1B276C")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x29A158", Offset = "0x29A158", VA = "0x29A158")]
		public StandalonePlatform()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x29A160", Offset = "0x29A160", VA = "0x29A160")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x2AF324", Offset = "0x2AF324", VA = "0x2AF324")]
		public Request<PlatformInitialize> AsyncInitialize(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A8")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x17000119")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x2B2D44", Offset = "0x2B2D44", VA = "0x2B2D44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x2B2DD0", Offset = "0x2B2DD0", VA = "0x2B2DD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x600110A")]
			[Address(RVA = "0x2B2DD4", Offset = "0x2B2DD4", VA = "0x2B2DD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600110B")]
			[Address(RVA = "0x2B2E60", Offset = "0x2B2E60", VA = "0x2B2E60")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x600110C")]
			[Address(RVA = "0x2B29A0", Offset = "0x2B29A0", VA = "0x2B29A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600110D")]
			[Address(RVA = "0x2B2E64", Offset = "0x2B2E64", VA = "0x2B2E64")]
			set
			{
			}
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x2B2D3C", Offset = "0x2B2D3C", VA = "0x2B2D3C")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x4000B27")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2780", Offset = "0x1B2780")]
		Unknown,
		[Token(Token = "0x4000B28")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B27B4", Offset = "0x1B27B4")]
		Unavailable,
		[Token(Token = "0x4000B29")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B27E8", Offset = "0x1B27E8")]
		Suppressed,
		[Token(Token = "0x4000B2A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B281C", Offset = "0x1B281C")]
		Active
	}
	[Token(Token = "0x20002AA")]
	public enum TimeWindow
	{
		[Token(Token = "0x4000B2C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2850", Offset = "0x1B2850")]
		Unknown,
		[Token(Token = "0x4000B2D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2884", Offset = "0x1B2884")]
		OneHour,
		[Token(Token = "0x4000B2E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B28B8", Offset = "0x1B28B8")]
		OneDay,
		[Token(Token = "0x4000B2F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B28EC", Offset = "0x1B28EC")]
		OneWeek,
		[Token(Token = "0x4000B30")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2920", Offset = "0x1B2920")]
		ThirtyDays,
		[Token(Token = "0x4000B31")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2954", Offset = "0x1B2954")]
		NinetyDays
	}
	[Token(Token = "0x20002AB")]
	public class UserOptions
	{
		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x2AF6A4", Offset = "0x2AF6A4", VA = "0x2AF6A4")]
		public UserOptions()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x2B2E68", Offset = "0x2B2E68", VA = "0x2B2E68")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x2AF738", Offset = "0x2AF738", VA = "0x2AF738")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x2B2EFC", Offset = "0x2B2EFC", VA = "0x2B2EFC")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x2B2F88", Offset = "0x2B2F88", VA = "0x2B2F88")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x2AF7CC", Offset = "0x2AF7CC", VA = "0x2AF7CC")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x2B301C", Offset = "0x2B301C", VA = "0x2B301C", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public enum UserOrdering
	{
		[Token(Token = "0x4000B34")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2988", Offset = "0x1B2988")]
		Unknown,
		[Token(Token = "0x4000B35")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B29BC", Offset = "0x1B29BC")]
		None,
		[Token(Token = "0x4000B36")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B29F0", Offset = "0x1B29F0")]
		PresenceAlphabetical
	}
	[Token(Token = "0x20002AD")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x4000B38")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2A24", Offset = "0x1B2A24")]
		Unknown,
		[Token(Token = "0x4000B39")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2A58", Offset = "0x1B2A58")]
		Online,
		[Token(Token = "0x4000B3A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2A8C", Offset = "0x1B2A8C")]
		Offline
	}
	[Token(Token = "0x20002AE")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x20002AF")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float[] scratchBuffer;

			[Token(Token = "0x600111F")]
			[Address(RVA = "0x2B5754", Offset = "0x2B5754", VA = "0x2B5754")]
			public FilterReadDelegate()
			{
			}

			[Token(Token = "0x6001120")]
			[Address(RVA = "0x2B575C", Offset = "0x2B575C", VA = "0x2B575C")]
			private void Awake()
			{
			}

			[Token(Token = "0x6001121")]
			[Address(RVA = "0x2B583C", Offset = "0x2B583C", VA = "0x2B583C")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}
		}

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource audioSource;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float peakAmplitude;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x1700011C")]
		public ulong senderID
		{
			[Token(Token = "0x6001116")]
			[Address(RVA = "0x2B4D4C", Offset = "0x2B4D4C", VA = "0x2B4D4C")]
			set
			{
			}
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x2B4D44", Offset = "0x2B4D44", VA = "0x2B4D44")]
		public VoipAudioSourceHiLevel()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x2B4E40", Offset = "0x2B4E40", VA = "0x2B4E40")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x2B4E44", Offset = "0x2B4E44", VA = "0x2B4E44")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x2B4E78", Offset = "0x2B4E78", VA = "0x2B4E78")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x2B524C", Offset = "0x2B524C", VA = "0x2B524C")]
		private void Start()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x2B5278", Offset = "0x2B5278", VA = "0x2B5278", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x2B52F0", Offset = "0x2B52F0", VA = "0x2B52F0")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x2B5398", Offset = "0x2B5398", VA = "0x2B5398")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public enum VoipBitrate
	{
		[Token(Token = "0x4000B44")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2AC0", Offset = "0x1B2AC0")]
		Unknown,
		[Token(Token = "0x4000B45")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2AF4", Offset = "0x1B2AF4")]
		B16000,
		[Token(Token = "0x4000B46")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2B28", Offset = "0x1B2B28")]
		B24000,
		[Token(Token = "0x4000B47")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2B5C", Offset = "0x1B2B5C")]
		B32000,
		[Token(Token = "0x4000B48")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2B90", Offset = "0x1B2B90")]
		B64000,
		[Token(Token = "0x4000B49")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2BC4", Offset = "0x1B2BC4")]
		B96000,
		[Token(Token = "0x4000B4A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2BF8", Offset = "0x1B2BF8")]
		B128000
	}
	[Token(Token = "0x20002B1")]
	public enum VoipDtxState
	{
		[Token(Token = "0x4000B4C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2C2C", Offset = "0x1B2C2C")]
		Unknown,
		[Token(Token = "0x4000B4D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2C60", Offset = "0x1B2C60")]
		Enabled,
		[Token(Token = "0x4000B4E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2C94", Offset = "0x1B2C94")]
		Disabled
	}
	[Token(Token = "0x20002B2")]
	public enum VoipMuteState
	{
		[Token(Token = "0x4000B50")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2CC8", Offset = "0x1B2CC8")]
		Unknown,
		[Token(Token = "0x4000B51")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2CFC", Offset = "0x1B2CFC")]
		Muted,
		[Token(Token = "0x4000B52")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2D30", Offset = "0x1B2D30")]
		Unmuted
	}
	[Token(Token = "0x20002B3")]
	public class VoipOptions
	{
		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x2B5FA0", Offset = "0x2B5FA0", VA = "0x2B5FA0")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x2B6034", Offset = "0x2B6034", VA = "0x2B6034")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x2B60C8", Offset = "0x2B60C8", VA = "0x2B60C8")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x2B4A04", Offset = "0x2B4A04", VA = "0x2B4A04")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x2B615C", Offset = "0x2B615C", VA = "0x2B615C", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong senderID;

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x2B52E8", Offset = "0x2B52E8", VA = "0x2B52E8")]
		public VoipPCMSourceNative()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x2B6234", Offset = "0x2B6234", VA = "0x2B6234", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x2B6334", Offset = "0x2B6334", VA = "0x2B6334", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x2B6344", Offset = "0x2B6344", VA = "0x2B6344", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x2B6420", Offset = "0x2B6420", VA = "0x2B6420", Slot = "6")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x4000B56")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2D64", Offset = "0x1B2D64")]
		Unknown,
		[Token(Token = "0x4000B57")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2D98", Offset = "0x1B2D98")]
		HZ24000,
		[Token(Token = "0x4000B58")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2DCC", Offset = "0x1B2DCC")]
		HZ44100,
		[Token(Token = "0x4000B59")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x1B2E00", Offset = "0x1B2E00")]
		HZ48000
	}
	[Token(Token = "0x20002B6")]
	public class WindowsPlatform
	{
		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x1B2E34", Offset = "0x1B2E34")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x29A314", Offset = "0x29A314", VA = "0x29A314")]
		public WindowsPlatform()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x2B6424", Offset = "0x2B6424", VA = "0x2B6424")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x2B6564", Offset = "0x2B6564", VA = "0x2B6564")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x29A910", Offset = "0x29A910", VA = "0x29A910")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x29A31C", Offset = "0x29A31C", VA = "0x29A31C")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}
	}
}
