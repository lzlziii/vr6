using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Assets.Scripts.ToyBlastPuzzle.DataManager;
using Assets.Scripts.ToyBlastPuzzle.Debug;
using Assets.Scripts.ToyBlastPuzzle.Effect;
using Assets.Scripts.ToyBlastPuzzle.Effect.Common;
using Assets.Scripts.ToyBlastPuzzle.Effect.ExplodeBomb;
using Assets.Scripts.ToyBlastPuzzle.Effect.QualitySetting;
using Assets.Scripts.ToyBlastPuzzle.ExplodeBomb;
using Assets.Scripts.ToyBlastPuzzle.Info;
using Assets.Scripts.ToyBlastPuzzle.Ornament;
using Assets.Scripts.ToyBlastPuzzle.Ornament.Model;
using Assets.Scripts.ToyBlastPuzzle.Ornament.Model.HpGauge;
using Assets.Scripts.ToyBlastPuzzle.Other;
using Assets.Scripts.ToyBlastPuzzle.Panel;
using Assets.Scripts.ToyBlastPuzzle.Panel.Model;
using Assets.Scripts.ToyBlastPuzzle.PuzzleFunc;
using Assets.Scripts.ToyBlastPuzzle.Sound;
using Assets.Scripts.ToyBlastPuzzle.Stage;
using Assets.Scripts.ToyBlastPuzzle.Tile;
using Assets.Scripts.ToyBlastPuzzle.TileFrame;
using Assets.Scripts.ToyBlastPuzzle.Tutorial;
using Assets.Scripts.ToyBlastPuzzle.Ui;
using Assets.Scripts.ToyBlastPuzzle.Ui.DescriptionGimmick;
using Assets.Scripts.ToyBlastPuzzle.Ui.EndProduction;
using Assets.Scripts.ToyBlastPuzzle.Ui.StartProduction;
using Assets.Scripts.ToyBlastPuzzle.VR;
using Assets.Scripts.ToyBlastPuzzle.VR.Gun;
using Assets.Scripts.ToyBlastPuzzle.VR.Trigger;
using Common;
using Common.Define;
using Common.SaveData;
using Common.Utility;
using DG.Tweening;
using DeckBrush;
using DigitalOpus.MB.Core;
using FSG.MeshAnimator;
using HandOperation;
using Il2CppDummyDll;
using Kiteretsu.VR;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Pathfinding;
using ResidentSystem;
using Spine.Unity;
using TMPro;
using UniRx;
using UniRx.Async;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.LowLevel;
using UnityEngine.Playables;
using UnityEngine.Profiling;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using Utility;
using ZookeeperVR.Animal;
using ZookeeperVR.AnimalStates;
using ZookeeperVR.Data;
using ZookeeperVR.Episode;
using ZookeeperVR.Object;
using ZookeeperVR.Visitor;
using ZookeeperVR.Zoo;

[assembly: AssemblyVersion("3.7.1.6")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000002")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F754", Offset = "0x87F754")]
	[AttributeAttribute(Name = "EmbeddedAttribute", RVA = "0x87F754", Offset = "0x87F754")]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0x12312F0", Offset = "0x12312F0", VA = "0x12312F0")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000003")]
	[AttributeAttribute(Name = "EmbeddedAttribute", RVA = "0x87F78C", Offset = "0x87F78C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F78C", Offset = "0x87F78C")]
	internal sealed class IsReadOnlyAttribute : Attribute
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0x1792508", Offset = "0x1792508", VA = "0x1792508")]
		public IsReadOnlyAttribute()
		{
		}
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x87F7C4", Offset = "0x87F7C4")]
public class FastList<T>
{
	[Token(Token = "0x2000005")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000006")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F7FC", Offset = "0x87F7FC")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000003")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000024")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000026")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000021")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000022")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000023")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000025")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x6000005")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000006")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x6000007")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000008")]
		set
		{
		}
	}

	[Token(Token = "0x6000003")]
	public FastList()
	{
	}

	[Token(Token = "0x6000004")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000009")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x600000A")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x600000B")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600000C")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600000D")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600000E")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600000F")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000010")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000011")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000012")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000013")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000014")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000015")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000016")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000017")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88F8D4", Offset = "0x88F8D4")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000019")]
	private void Allocate()
	{
	}

	[Token(Token = "0x600001A")]
	private void Trim()
	{
	}

	[Token(Token = "0x600001B")]
	public void Clear()
	{
	}

	[Token(Token = "0x600001C")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000007")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x179000C", Offset = "0x179000C", VA = "0x179000C")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000008")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x178FFE0", Offset = "0x178FFE0", VA = "0x178FFE0")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000009")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x11103D0", Offset = "0x11103D0", VA = "0x11103D0")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x1110534", Offset = "0x1110534", VA = "0x1110534")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x11108D0", Offset = "0x11108D0", VA = "0x11108D0")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1110A74", Offset = "0x1110A74", VA = "0x1110A74", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1110AA0", Offset = "0x1110AA0", VA = "0x1110AA0")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200000A")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x1017B30", Offset = "0x1017B30", VA = "0x1017B30")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1017BB8", Offset = "0x1017BB8", VA = "0x1017BB8")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1017D2C", Offset = "0x1017D2C", VA = "0x1017D2C")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200000B")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000005")]
	public bool IsVisible
	{
		[Token(Token = "0x6000031")]
		[Address(RVA = "0x12B5080", Offset = "0x12B5080", VA = "0x12B5080")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000032")]
		[Address(RVA = "0x12B5088", Offset = "0x12B5088", VA = "0x12B5088")]
		set
		{
		}
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x12B51C4", Offset = "0x12B51C4", VA = "0x12B51C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x12B538C", Offset = "0x12B538C", VA = "0x12B538C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x12B5394", Offset = "0x12B5394", VA = "0x12B5394")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200000C")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200000D")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x600003C")]
		[Address(RVA = "0xF8D2AC", Offset = "0xF8D2AC", VA = "0xF8D2AC")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200000E")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8822CC", Offset = "0x8822CC")]
		public float FakeLatencyMax;

		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8822E4", Offset = "0x8822E4")]
		public float FakeLatencyMin;

		[Token(Token = "0x400001B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8822FC", Offset = "0x8822FC")]
		public float LatencyWeight;

		[Token(Token = "0x400001C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x882314", Offset = "0x882314")]
		public int MaxSamples;

		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x400001E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x400001F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x600003D")]
		[Address(RVA = "0xF8D2B4", Offset = "0xF8D2B4", VA = "0xF8D2B4")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x600003E")]
		[Address(RVA = "0xF8D3EC", Offset = "0xF8D3EC", VA = "0xF8D3EC")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1021254", Offset = "0x1021254", VA = "0x1021254")]
	private void Start()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x1021398", Offset = "0x1021398", VA = "0x1021398")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x1021770", Offset = "0x1021770", VA = "0x1021770")]
	private void Update()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x10216C8", Offset = "0x10216C8", VA = "0x10216C8")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1021AA0", Offset = "0x1021AA0", VA = "0x1021AA0")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1021D88", Offset = "0x1021D88", VA = "0x1021D88")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200000F")]
public class P2PManager
{
	[Token(Token = "0x2000010")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000021")]
		Update = 1
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x11114B4", Offset = "0x11114B4", VA = "0x11114B4")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x1111594", Offset = "0x1111594", VA = "0x1111594")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1111678", Offset = "0x1111678", VA = "0x1111678")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x11116F8", Offset = "0x11116F8", VA = "0x11116F8")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1111868", Offset = "0x1111868", VA = "0x1111868")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1111AA8", Offset = "0x1111AA8", VA = "0x1111AA8")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1111E98", Offset = "0x1111E98", VA = "0x1111E98")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1112154", Offset = "0x1112154", VA = "0x1112154")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1111C74", Offset = "0x1111C74", VA = "0x1111C74")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1112088", Offset = "0x1112088", VA = "0x1112088")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1111D58", Offset = "0x1111D58", VA = "0x1111D58")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x111238C", Offset = "0x111238C", VA = "0x111238C")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x1111CBC", Offset = "0x1111CBC", VA = "0x1111CBC")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x11120CC", Offset = "0x11120CC", VA = "0x11120CC")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x1111DFC", Offset = "0x1111DFC", VA = "0x1111DFC")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x1112414", Offset = "0x1112414", VA = "0x1112414")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000011")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1115ED4", Offset = "0x1115ED4", VA = "0x1115ED4", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1115F10", Offset = "0x1115F10", VA = "0x1115F10", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1115F48", Offset = "0x1115F48", VA = "0x1115F48", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1115F70", Offset = "0x1115F70", VA = "0x1115F70")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x111610C", Offset = "0x111610C", VA = "0x111610C")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x111618C", Offset = "0x111618C", VA = "0x111618C")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x11161E0", Offset = "0x11161E0", VA = "0x11161E0")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000012")]
public class RemotePlayer
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1021E2C", Offset = "0x1021E2C", VA = "0x1021E2C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000013")]
public class RoomManager
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x10245D8", Offset = "0x10245D8", VA = "0x10245D8")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x10246DC", Offset = "0x10246DC", VA = "0x10246DC")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x102485C", Offset = "0x102485C", VA = "0x102485C")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x1024998", Offset = "0x1024998", VA = "0x1024998")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1024A6C", Offset = "0x1024A6C", VA = "0x1024A6C")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x1024BA8", Offset = "0x1024BA8", VA = "0x1024BA8")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x102488C", Offset = "0x102488C", VA = "0x102488C")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1024C30", Offset = "0x1024C30", VA = "0x1024C30")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1025388", Offset = "0x1025388", VA = "0x1025388")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1025688", Offset = "0x1025688", VA = "0x1025688")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1024F10", Offset = "0x1024F10", VA = "0x1024F10")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000014")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000015")]
	public enum State
	{
		[Token(Token = "0x4000059")]
		INITIALIZING,
		[Token(Token = "0x400005A")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x400005B")]
		CREATING_A_ROOM,
		[Token(Token = "0x400005C")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x400005D")]
		JOINING_A_ROOM,
		[Token(Token = "0x400005E")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x400005F")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000060")]
		SHUTDOWN
	}

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000006")]
	public static State CurrentState
	{
		[Token(Token = "0x600006E")]
		[Address(RVA = "0xE0EFB4", Offset = "0xE0EFB4", VA = "0xE0EFB4")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000007")]
	public static ulong MyID
	{
		[Token(Token = "0x600006F")]
		[Address(RVA = "0xE0F024", Offset = "0xE0F024", VA = "0xE0F024")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000008")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000070")]
		[Address(RVA = "0xE0F104", Offset = "0xE0F104", VA = "0xE0F104")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xE0D1D4", Offset = "0xE0D1D4", VA = "0xE0D1D4", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xE0D564", Offset = "0xE0D564", VA = "0xE0D564", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xE0DC70", Offset = "0xE0DC70", VA = "0xE0DC70")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xE0DF90", Offset = "0xE0DF90", VA = "0xE0DF90", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xE0DF94", Offset = "0xE0DF94", VA = "0xE0DF94")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xE0E0B4", Offset = "0xE0E0B4", VA = "0xE0E0B4")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xE0E7BC", Offset = "0xE0E7BC", VA = "0xE0E7BC")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xE0EBB0", Offset = "0xE0EBB0", VA = "0xE0EBB0")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xE0EDC0", Offset = "0xE0EDC0", VA = "0xE0EDC0")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xE0EF48", Offset = "0xE0EF48", VA = "0xE0EF48")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE0D8FC", Offset = "0xE0D8FC", VA = "0xE0D8FC")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xE0DE18", Offset = "0xE0DE18", VA = "0xE0DE18")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xE0D9B0", Offset = "0xE0D9B0", VA = "0xE0D9B0")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xE0F22C", Offset = "0xE0F22C", VA = "0xE0F22C")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xE0F3A8", Offset = "0xE0F3A8", VA = "0xE0F3A8")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xE0F48C", Offset = "0xE0F48C", VA = "0xE0F48C")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xE0F5E8", Offset = "0xE0F5E8", VA = "0xE0F5E8")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xE0F6CC", Offset = "0xE0F6CC", VA = "0xE0F6CC")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xE0DED0", Offset = "0xE0DED0", VA = "0xE0DED0")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xE0FC14", Offset = "0xE0FC14", VA = "0xE0FC14")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xE0FCA8", Offset = "0xE0FCA8", VA = "0xE0FCA8")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xE0FA00", Offset = "0xE0FA00", VA = "0xE0FA00")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xE0FE98", Offset = "0xE0FE98", VA = "0xE0FE98")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xE0D150", Offset = "0xE0D150", VA = "0xE0D150")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x88F984", Offset = "0x88F984")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xE0FFDC", Offset = "0xE0FFDC", VA = "0xE0FFDC")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xE100B8", Offset = "0xE100B8", VA = "0xE100B8")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000016")]
public class VoipManager
{
	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1167918", Offset = "0x1167918", VA = "0x1167918")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x11679F8", Offset = "0x11679F8", VA = "0x11679F8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1167ADC", Offset = "0x1167ADC", VA = "0x1167ADC")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1167B5C", Offset = "0x1167B5C", VA = "0x1167B5C")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1167CCC", Offset = "0x1167CCC", VA = "0x1167CCC")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000017")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x12B4D4C", Offset = "0x12B4D4C", VA = "0x12B4D4C")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x12B4DC4", Offset = "0x12B4DC4", VA = "0x12B4DC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x12B4F38", Offset = "0x12B4F38", VA = "0x12B4F38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x12B4F9C", Offset = "0x12B4F9C", VA = "0x12B4F9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x12B4E00", Offset = "0x12B4E00", VA = "0x12B4E00")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x12B5060", Offset = "0x12B5060", VA = "0x12B5060")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x12B5078", Offset = "0x12B5078", VA = "0x12B5078")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000018")]
public class AvatarLayer
{
	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xE2FD48", Offset = "0xE2FD48", VA = "0xE2FD48")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000019")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x111249C", Offset = "0x111249C", VA = "0x111249C")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200001A")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200001B")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xC1379C", Offset = "0xC1379C", VA = "0xC1379C")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200001C")]
	public enum HandType
	{
		[Token(Token = "0x40000C2")]
		Right,
		[Token(Token = "0x40000C3")]
		Left,
		[Token(Token = "0x40000C4")]
		Max
	}

	[Token(Token = "0x200001D")]
	public enum HandJoint
	{
		[Token(Token = "0x40000C6")]
		HandBase,
		[Token(Token = "0x40000C7")]
		IndexBase,
		[Token(Token = "0x40000C8")]
		IndexTip,
		[Token(Token = "0x40000C9")]
		ThumbBase,
		[Token(Token = "0x40000CA")]
		ThumbTip,
		[Token(Token = "0x40000CB")]
		Max
	}

	[Token(Token = "0x200001E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F80C", Offset = "0x87F80C")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C6")]
			[Address(RVA = "0xC1374C", Offset = "0xC1374C", VA = "0xC1374C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C8")]
			[Address(RVA = "0xC13794", Offset = "0xC13794", VA = "0xC13794", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xC1357C", Offset = "0xC1357C", VA = "0xC1357C")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60000C4")]
		[Address(RVA = "0xC135A8", Offset = "0xC135A8", VA = "0xC135A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0xC135AC", Offset = "0xC135AC", VA = "0xC135AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0xC13754", Offset = "0xC13754", VA = "0xC13754", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88232C", Offset = "0x88232C")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x882364", Offset = "0x882364")]
	public bool EnableBody;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88239C", Offset = "0x88239C")]
	public bool RecordPackets;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8823D4", Offset = "0x8823D4")]
	public bool StartWithControllers;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88240C", Offset = "0x88240C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88240C", Offset = "0x88240C")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88247C", Offset = "0x88247C")]
	private bool CombineMeshes;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8824B4", Offset = "0x8824B4")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8824EC", Offset = "0x8824EC")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x882524", Offset = "0x882524")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88255C", Offset = "0x88255C")]
	public bool EnableLaughter;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40000A2")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000A4")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000A5")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000A6")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000A7")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000A8")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xF716F0", Offset = "0xF716F0", VA = "0xF716F0")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xF71ADC", Offset = "0xF71ADC", VA = "0xF71ADC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xF71B70", Offset = "0xF71B70", VA = "0xF71B70")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xF71BD8", Offset = "0xF71BD8", VA = "0xF71BD8")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xF71D08", Offset = "0xF71D08", VA = "0xF71D08")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xF71DE8", Offset = "0xF71DE8", VA = "0xF71DE8")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xF71EC4", Offset = "0xF71EC4", VA = "0xF71EC4")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xF720A8", Offset = "0xF720A8", VA = "0xF720A8")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xF72184", Offset = "0xF72184", VA = "0xF72184")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xF721FC", Offset = "0xF721FC", VA = "0xF721FC")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xF722E4", Offset = "0xF722E4", VA = "0xF722E4")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xF72370", Offset = "0xF72370", VA = "0xF72370")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xF723F8", Offset = "0xF723F8", VA = "0xF723F8")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xF72410", Offset = "0xF72410", VA = "0xF72410")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x600009C")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xF728C0", Offset = "0xF728C0", VA = "0xF728C0")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xF72C40", Offset = "0xF72C40", VA = "0xF72C40")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xF72DE8", Offset = "0xF72DE8", VA = "0xF72DE8")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xF73034", Offset = "0xF73034", VA = "0xF73034")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xF73128", Offset = "0xF73128", VA = "0xF73128")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xF73530", Offset = "0xF73530", VA = "0xF73530")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xF7385C", Offset = "0xF7385C", VA = "0xF7385C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xF74294", Offset = "0xF74294", VA = "0xF74294")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xF742E8", Offset = "0xF742E8", VA = "0xF742E8")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xF733E8", Offset = "0xF733E8", VA = "0xF733E8")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xF7348C", Offset = "0xF7348C", VA = "0xF7348C")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xF74318", Offset = "0xF74318", VA = "0xF74318")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xF73C34", Offset = "0xF73C34", VA = "0xF73C34")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xF7458C", Offset = "0xF7458C", VA = "0xF7458C")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xF7437C", Offset = "0xF7437C", VA = "0xF7437C")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xF7483C", Offset = "0xF7483C", VA = "0xF7483C")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xF74CB8", Offset = "0xF74CB8", VA = "0xF74CB8")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xF74F50", Offset = "0xF74F50", VA = "0xF74F50")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xF750A4", Offset = "0xF750A4", VA = "0xF750A4")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xF75288", Offset = "0xF75288", VA = "0xF75288")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xF73E14", Offset = "0xF73E14", VA = "0xF73E14")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xF7535C", Offset = "0xF7535C", VA = "0xF7535C")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xF73C44", Offset = "0xF73C44", VA = "0xF73C44")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xF7544C", Offset = "0xF7544C", VA = "0xF7544C")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xF75AA4", Offset = "0xF75AA4", VA = "0xF75AA4")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xF75F88", Offset = "0xF75F88", VA = "0xF75F88")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xF75FB0", Offset = "0xF75FB0", VA = "0xF75FB0")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xF75FD8", Offset = "0xF75FD8", VA = "0xF75FD8")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xF74120", Offset = "0xF74120", VA = "0xF74120")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xF75510", Offset = "0xF75510", VA = "0xF75510")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xF763F8", Offset = "0xF763F8", VA = "0xF763F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88F9E4", Offset = "0x88F9E4")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xF76464", Offset = "0xF76464", VA = "0xF76464")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xF762B8", Offset = "0xF762B8", VA = "0xF762B8")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xF76528", Offset = "0xF76528", VA = "0xF76528")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xF7660C", Offset = "0xF7660C", VA = "0xF7660C")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xF76014", Offset = "0xF76014", VA = "0xF76014")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xF766F0", Offset = "0xF766F0", VA = "0xF766F0")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200001F")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1103ABC", Offset = "0x1103ABC", VA = "0x1103ABC")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000020")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1103B80", Offset = "0x1103B80", VA = "0x1103B80")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x1104E04", Offset = "0x1104E04", VA = "0x1104E04")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x11049D8", Offset = "0x11049D8", VA = "0x11049D8")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1104768", Offset = "0x1104768", VA = "0x1104768")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1104844", Offset = "0x1104844", VA = "0x1104844")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x1105094", Offset = "0x1105094", VA = "0x1105094")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000021")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000D4")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x110561C", Offset = "0x110561C", VA = "0x110561C")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000022")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1105888", Offset = "0x1105888", VA = "0x1105888")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1105CD4", Offset = "0x1105CD4", VA = "0x1105CD4")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000023")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x1105DEC", Offset = "0x1105DEC", VA = "0x1105DEC")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1105F5C", Offset = "0x1105F5C", VA = "0x1105F5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x1106080", Offset = "0x1106080", VA = "0x1106080")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000024")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x11060E0", Offset = "0x11060E0", VA = "0x11060E0")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x11059AC", Offset = "0x11059AC", VA = "0x11059AC")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x1106730", Offset = "0x1106730", VA = "0x1106730")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x1106790", Offset = "0x1106790", VA = "0x1106790")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x1106F44", Offset = "0x1106F44", VA = "0x1106F44")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x1105D34", Offset = "0x1105D34", VA = "0x1105D34")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000025")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000026")]
	public enum PacketMode
	{
		[Token(Token = "0x40000E8")]
		SDK,
		[Token(Token = "0x40000E9")]
		Unity
	}

	[Token(Token = "0x2000027")]
	public struct ControllerPose
	{
		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xC13814", Offset = "0xC13814", VA = "0xC13814")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000028")]
	public struct PoseFrame
	{
		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60000E4")]
		[Address(RVA = "0xC138F0", Offset = "0xC138F0", VA = "0xC138F0")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x11085F0", Offset = "0x11085F0", VA = "0x11085F0")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60000DE")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x1108600", Offset = "0x1108600", VA = "0x1108600")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x1108688", Offset = "0x1108688", VA = "0x1108688")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x1108904", Offset = "0x1108904", VA = "0x1108904")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x110890C", Offset = "0x110890C", VA = "0x110890C")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000029")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x110891C", Offset = "0x110891C", VA = "0x110891C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1108A80", Offset = "0x1108A80", VA = "0x1108A80")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200002A")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1108AE8", Offset = "0x1108AE8", VA = "0x1108AE8")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x1108C4C", Offset = "0x1108C4C", VA = "0x1108C4C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x1108FE8", Offset = "0x1108FE8", VA = "0x1108FE8")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x110920C", Offset = "0x110920C", VA = "0x110920C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1109238", Offset = "0x1109238", VA = "0x1109238")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200002B")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200002C")]
	public enum TextureType
	{
		[Token(Token = "0x400011F")]
		DiffuseTextures,
		[Token(Token = "0x4000120")]
		NormalMaps,
		[Token(Token = "0x4000121")]
		RoughnessMaps,
		[Token(Token = "0x4000122")]
		Count
	}

	[Token(Token = "0x200002D")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200002E")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200002F")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000030")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60000FB")]
		[Address(RVA = "0xC142EC", Offset = "0xC142EC", VA = "0xC142EC")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000031")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F81C", Offset = "0x87F81C")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000FF")]
			[Address(RVA = "0xC1429C", Offset = "0xC1429C", VA = "0xC1429C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000101")]
			[Address(RVA = "0xC142E4", Offset = "0xC142E4", VA = "0xC142E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0xC13BF4", Offset = "0xC13BF4", VA = "0xC13BF4")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0xC13C20", Offset = "0xC13C20", VA = "0xC13C20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xC13C24", Offset = "0xC13C24", VA = "0xC13C24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0xC142A4", Offset = "0xC142A4", VA = "0xC142A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x400011A")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x400011B")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x400011C")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x400011D")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1109284", Offset = "0x1109284", VA = "0x1109284")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1109410", Offset = "0x1109410", VA = "0x1109410")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1109438", Offset = "0x1109438", VA = "0x1109438")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1109B94", Offset = "0x1109B94", VA = "0x1109B94")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1109E7C", Offset = "0x1109E7C", VA = "0x1109E7C")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x11094D4", Offset = "0x11094D4", VA = "0x11094D4")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x1109F68", Offset = "0x1109F68", VA = "0x1109F68")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x110990C", Offset = "0x110990C", VA = "0x110990C")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x110A1F8", Offset = "0x110A1F8", VA = "0x110A1F8")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x110A49C", Offset = "0x110A49C", VA = "0x110A49C")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x110A5C4", Offset = "0x110A5C4", VA = "0x110A5C4")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x110A5FC", Offset = "0x110A5FC", VA = "0x110A5FC")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1109B1C", Offset = "0x1109B1C", VA = "0x1109B1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88FA94", Offset = "0x88FA94")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x110B474", Offset = "0x110B474", VA = "0x110B474")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000032")]
public class OvrAvatarPacket
{
	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700000D")]
	public float Duration
	{
		[Token(Token = "0x6000102")]
		[Address(RVA = "0x110B9B8", Offset = "0x110B9B8", VA = "0x110B9B8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000E")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000103")]
		[Address(RVA = "0x110BA2C", Offset = "0x110BA2C", VA = "0x110BA2C")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x110BABC", Offset = "0x110BABC", VA = "0x110BABC")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x110BBC4", Offset = "0x110BBC4", VA = "0x110BBC4")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x110BD60", Offset = "0x110BD60", VA = "0x110BD60")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x110BE80", Offset = "0x110BE80", VA = "0x110BE80")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x110BF58", Offset = "0x110BF58", VA = "0x110BF58")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x110C188", Offset = "0x110C188", VA = "0x110C188")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x110C464", Offset = "0x110C464", VA = "0x110C464")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000033")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600010B")]
	[Address(RVA = "0xE32160", Offset = "0xE32160", VA = "0xE32160")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xE32274", Offset = "0xE32274", VA = "0xE32274")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xE32420", Offset = "0xE32420", VA = "0xE32420")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xE322E4", Offset = "0xE322E4", VA = "0xE322E4")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xE32378", Offset = "0xE32378", VA = "0xE32378")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000034")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000110")]
	[Address(RVA = "0xE31D60", Offset = "0xE31D60", VA = "0xE31D60")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xE32104", Offset = "0xE32104", VA = "0xE32104")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xE31F00", Offset = "0xE31F00", VA = "0xE31F00")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xE31F78", Offset = "0xE31F78", VA = "0xE31F78")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xE32014", Offset = "0xE32014", VA = "0xE32014")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000035")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000144")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000145")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x110C68C", Offset = "0x110C68C", VA = "0x110C68C")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x110C714", Offset = "0x110C714", VA = "0x110C714", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x110C730", Offset = "0x110C730", VA = "0x110C730")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x110C8D4", Offset = "0x110C8D4", VA = "0x110C8D4")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x110CA84", Offset = "0x110CA84", VA = "0x110CA84")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000036")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x110CB18", Offset = "0x110CB18", VA = "0x110CB18")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x110CBFC", Offset = "0x110CBFC", VA = "0x110CBFC")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x110CDF0", Offset = "0x110CDF0", VA = "0x110CDF0")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x110D1B0", Offset = "0x110D1B0", VA = "0x110D1B0")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x110D2BC", Offset = "0x110D2BC", VA = "0x110D2BC")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000037")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x400014E")]
	Body = 1,
	[Token(Token = "0x400014F")]
	Hands = 2,
	[Token(Token = "0x4000150")]
	Base = 4,
	[Token(Token = "0x4000151")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000152")]
	Expressive = 0x20,
	[Token(Token = "0x4000153")]
	All = -1
}
[Token(Token = "0x2000038")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000155")]
	AvatarSpecification,
	[Token(Token = "0x4000156")]
	AssetLoaded,
	[Token(Token = "0x4000157")]
	Count
}
[Token(Token = "0x2000039")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200003A")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200003B")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x400015D")]
	Mesh,
	[Token(Token = "0x400015E")]
	Texture,
	[Token(Token = "0x400015F")]
	Pose,
	[Token(Token = "0x4000160")]
	Material,
	[Token(Token = "0x4000161")]
	CombinedMesh,
	[Token(Token = "0x4000162")]
	PBSMaterial,
	[Token(Token = "0x4000163")]
	FailedLoad,
	[Token(Token = "0x4000164")]
	Count
}
[Token(Token = "0x200003C")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200003D")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200003E")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200003F")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000040")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000041")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000199")]
	RGB24,
	[Token(Token = "0x400019A")]
	DXT1,
	[Token(Token = "0x400019B")]
	DXT5,
	[Token(Token = "0x400019C")]
	ASTC_RGB_6x6,
	[Token(Token = "0x400019D")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400019E")]
	Count
}
[Token(Token = "0x2000042")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000043")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40001A6")]
	SkinnedMeshRender,
	[Token(Token = "0x40001A7")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001A8")]
	ProjectorRender,
	[Token(Token = "0x40001A9")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001AA")]
	Count
}
[Token(Token = "0x2000044")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001AC")]
	Unknown,
	[Token(Token = "0x40001AD")]
	Default,
	[Token(Token = "0x40001AE")]
	Verbose,
	[Token(Token = "0x40001AF")]
	Debug,
	[Token(Token = "0x40001B0")]
	Info,
	[Token(Token = "0x40001B1")]
	Warn,
	[Token(Token = "0x40001B2")]
	Error,
	[Token(Token = "0x40001B3")]
	Fatal,
	[Token(Token = "0x40001B4")]
	Silent
}
[Token(Token = "0x2000045")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000046")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001B9")]
	One = 1,
	[Token(Token = "0x40001BA")]
	Two = 2,
	[Token(Token = "0x40001BB")]
	Three = 4,
	[Token(Token = "0x40001BC")]
	Joystick = 8
}
[Token(Token = "0x2000047")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001BE")]
	One = 1,
	[Token(Token = "0x40001BF")]
	Two = 2,
	[Token(Token = "0x40001C0")]
	Joystick = 4,
	[Token(Token = "0x40001C1")]
	ThumbRest = 8,
	[Token(Token = "0x40001C2")]
	Index = 0x10,
	[Token(Token = "0x40001C3")]
	Pointing = 0x40,
	[Token(Token = "0x40001C4")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000048")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000049")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x200004A")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200004B")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004C")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x200004D")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200004E")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004F")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000050")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001E4")]
	Add,
	[Token(Token = "0x40001E5")]
	Multiply,
	[Token(Token = "0x40001E6")]
	Count
}
[Token(Token = "0x2000051")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001E8")]
	Color,
	[Token(Token = "0x40001E9")]
	Texture,
	[Token(Token = "0x40001EA")]
	TextureSingleChannel,
	[Token(Token = "0x40001EB")]
	Parallax,
	[Token(Token = "0x40001EC")]
	Count
}
[Token(Token = "0x2000052")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001EE")]
	None,
	[Token(Token = "0x40001EF")]
	Positional,
	[Token(Token = "0x40001F0")]
	ViewReflection,
	[Token(Token = "0x40001F1")]
	Fresnel,
	[Token(Token = "0x40001F2")]
	Pulse,
	[Token(Token = "0x40001F3")]
	Count
}
[Token(Token = "0x2000053")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001F5")]
	Touch,
	[Token(Token = "0x40001F6")]
	Malibu,
	[Token(Token = "0x40001F7")]
	Go,
	[Token(Token = "0x40001F8")]
	Quest,
	[Token(Token = "0x40001F9")]
	Count
}
[Token(Token = "0x2000054")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40001FB")]
	Lowest = 1,
	[Token(Token = "0x40001FC")]
	Medium = 3,
	[Token(Token = "0x40001FD")]
	Highest = 5
}
[Token(Token = "0x2000055")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40001FF")]
	Unknown = -1,
	[Token(Token = "0x4000200")]
	One,
	[Token(Token = "0x4000201")]
	Two
}
[Token(Token = "0x2000056")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xC007B8", Offset = "0xC007B8", VA = "0xC007B8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xC007E8", Offset = "0xC007E8", VA = "0xC007E8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xC00A04", Offset = "0xC00A04", VA = "0xC00A04", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000057")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xC00AE8", Offset = "0xC00AE8", VA = "0xC00AE8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xC00B18", Offset = "0xC00B18", VA = "0xC00B18", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xC00EB4", Offset = "0xC00EB4", VA = "0xC00EB4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000058")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1176630", Offset = "0x1176630", VA = "0x1176630")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1176660", Offset = "0x1176660", VA = "0x1176660", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x11768F0", Offset = "0x11768F0", VA = "0x11768F0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000059")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xC0101C", Offset = "0xC0101C", VA = "0xC0101C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xC0104C", Offset = "0xC0104C", VA = "0xC0104C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xC0123C", Offset = "0xC0123C", VA = "0xC0123C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200005A")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x1103AC4", Offset = "0x1103AC4", VA = "0x1103AC4")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200005B")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200005C")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000236")]
	FirstPerson = 1,
	[Token(Token = "0x4000237")]
	ThirdPerson = 2,
	[Token(Token = "0x4000238")]
	SelfOccluding = 4
}
[Token(Token = "0x200005D")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005E")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005F")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000060")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000061")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x400024E")]
	Default,
	[Token(Token = "0x400024F")]
	GripSphere,
	[Token(Token = "0x4000250")]
	GripCube,
	[Token(Token = "0x4000251")]
	Count
}
[Token(Token = "0x2000062")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000253")]
	Body,
	[Token(Token = "0x4000254")]
	Clothing,
	[Token(Token = "0x4000255")]
	Eyewear,
	[Token(Token = "0x4000256")]
	Hair,
	[Token(Token = "0x4000257")]
	Beard,
	[Token(Token = "0x4000258")]
	Count
}
[Token(Token = "0x2000063")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x2000064")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000065")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x2000066")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000067")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000262")]
	AvatarHead,
	[Token(Token = "0x4000263")]
	AvatarHand,
	[Token(Token = "0x4000264")]
	Object,
	[Token(Token = "0x4000265")]
	ObjectStatic,
	[Token(Token = "0x4000266")]
	Count
}
[Token(Token = "0x2000068")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x2000069")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200006A")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x200006B")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200006C")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000272")]
	Point,
	[Token(Token = "0x4000273")]
	Direction,
	[Token(Token = "0x4000274")]
	Spot,
	[Token(Token = "0x4000275")]
	Count
}
[Token(Token = "0x200006D")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x200006E")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200006F")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x2000070")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000071")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x400028B")]
	None = 0u,
	[Token(Token = "0x400028C")]
	GazeTarget = 1u,
	[Token(Token = "0x400028D")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000072")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000073")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000074")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000075")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000076")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000077")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000078")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000151")]
		[Address(RVA = "0xC142F4", Offset = "0xC142F4", VA = "0xC142F4")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40002A2")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700000F")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000140")]
		[Address(RVA = "0x1106FD4", Offset = "0x1106FD4", VA = "0x1106FD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x110D2CC", Offset = "0x110D2CC", VA = "0x110D2CC")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x110D5D4", Offset = "0x110D5D4", VA = "0x110D5D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x110D644", Offset = "0x110D644", VA = "0x110D644")]
	private void Update()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x110E014", Offset = "0x110E014", VA = "0x110E014")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x110E068", Offset = "0x110E068", VA = "0x110E068")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x110E0BC", Offset = "0x110E0BC", VA = "0x110E0BC")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x110E120", Offset = "0x110E120", VA = "0x110E120")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x110E184", Offset = "0x110E184", VA = "0x110E184")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x110DE14", Offset = "0x110DE14", VA = "0x110DE14")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x110E260", Offset = "0x110E260", VA = "0x110E260")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x110E3B4", Offset = "0x110E3B4", VA = "0x110E3B4")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x11071A8", Offset = "0x11071A8", VA = "0x11071A8")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x110E4A8", Offset = "0x110E4A8", VA = "0x110E4A8")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x110D588", Offset = "0x110D588", VA = "0x110D588")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1109BF4", Offset = "0x1109BF4", VA = "0x1109BF4")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x110E588", Offset = "0x110E588", VA = "0x110E588")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000079")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000010")]
	public static string AppID
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x110E548", Offset = "0x110E548", VA = "0x110E548")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x110E6E0", Offset = "0x110E6E0", VA = "0x110E6E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000154")]
		[Address(RVA = "0x110E568", Offset = "0x110E568", VA = "0x110E568")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000155")]
		[Address(RVA = "0x110E70C", Offset = "0x110E70C", VA = "0x110E70C")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000156")]
		[Address(RVA = "0x110E5A0", Offset = "0x110E5A0", VA = "0x110E5A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000157")]
		[Address(RVA = "0x110E738", Offset = "0x110E738", VA = "0x110E738")]
		set
		{
		}
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x110E788", Offset = "0x110E788", VA = "0x110E788")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200007A")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x110FFAC", Offset = "0x110FFAC", VA = "0x110FFAC")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x11060E8", Offset = "0x11060E8", VA = "0x11060E8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1110104", Offset = "0x1110104", VA = "0x1110104")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x111026C", Offset = "0x111026C", VA = "0x111026C")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200007B")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x111027C", Offset = "0x111027C", VA = "0x111027C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1106324", Offset = "0x1106324", VA = "0x1106324")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x11103C0", Offset = "0x11103C0", VA = "0x11103C0")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200007C")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40002B9")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40002BA")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40002BB")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x110E7DC", Offset = "0x110E7DC", VA = "0x110E7DC")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x11064F4", Offset = "0x11064F4", VA = "0x11064F4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x110F730", Offset = "0x110F730", VA = "0x110F730")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x110EEA4", Offset = "0x110EEA4", VA = "0x110EEA4")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x110EBC8", Offset = "0x110EBC8", VA = "0x110EBC8")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x110ED2C", Offset = "0x110ED2C", VA = "0x110ED2C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x110FF9C", Offset = "0x110FF9C", VA = "0x110FF9C")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200007D")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200007E")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200007F")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000171")]
		[Address(RVA = "0xC14988", Offset = "0xC14988", VA = "0xC14988")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000080")]
	public struct TextureSet
	{
		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000172")]
		[Address(RVA = "0xC14998", Offset = "0xC14998", VA = "0xC14998")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000081")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F89C", Offset = "0x87F89C")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000013")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000176")]
			[Address(RVA = "0xC14938", Offset = "0xC14938", VA = "0xC14938", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000178")]
			[Address(RVA = "0xC14980", Offset = "0xC14980", VA = "0xC14980", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0xC14320", Offset = "0xC14320", VA = "0xC14320")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0xC1434C", Offset = "0xC1434C", VA = "0xC1434C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0xC14350", Offset = "0xC14350", VA = "0xC14350", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0xC14940", Offset = "0xC14940", VA = "0xC14940", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40002BF")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40002C0")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40002C3")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40002C4")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40002C5")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40002C6")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40002C7")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40002C8")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40002C9")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1110AEC", Offset = "0x1110AEC", VA = "0x1110AEC")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1110ED4", Offset = "0x1110ED4", VA = "0x1110ED4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x11110D4", Offset = "0x11110D4", VA = "0x11110D4")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x110A04C", Offset = "0x110A04C", VA = "0x110A04C")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1111048", Offset = "0x1111048", VA = "0x1111048")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1109C74", Offset = "0x1109C74", VA = "0x1109C74")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x1109EC4", Offset = "0x1109EC4", VA = "0x1109EC4")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1111120", Offset = "0x1111120", VA = "0x1111120")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88FBE4", Offset = "0x88FBE4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x110E214", Offset = "0x110E214", VA = "0x110E214")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x11111B0", Offset = "0x11111B0", VA = "0x11111B0")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000082")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x11112E8", Offset = "0x11112E8", VA = "0x11112E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x111144C", Offset = "0x111144C", VA = "0x111144C")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000083")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x600017B")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x12312F8", Offset = "0x12312F8", VA = "0x12312F8")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000084")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8825B4", Offset = "0x8825B4")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8825EC", Offset = "0x8825EC")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882624", Offset = "0x882624")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x107F084", Offset = "0x107F084", VA = "0x107F084")]
	private void Start()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x107F088", Offset = "0x107F088", VA = "0x107F088")]
	private void Update()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x107F108", Offset = "0x107F108", VA = "0x107F108")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x107F314", Offset = "0x107F314", VA = "0x107F314")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x2000085")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x107F344", Offset = "0x107F344", VA = "0x107F344")]
	private void Start()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x107F474", Offset = "0x107F474", VA = "0x107F474")]
	private void Update()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x107F7CC", Offset = "0x107F7CC", VA = "0x107F7CC")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x107FA6C", Offset = "0x107FA6C", VA = "0x107FA6C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x107FABC", Offset = "0x107FABC", VA = "0x107FABC")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x2000086")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000015")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0xF67654", Offset = "0xF67654", VA = "0xF67654")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xF67950", Offset = "0xF67950", VA = "0xF67950")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xF67AA8", Offset = "0xF67AA8", VA = "0xF67AA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xF679BC", Offset = "0xF679BC", VA = "0xF679BC")]
	public void Init()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xF65714", Offset = "0xF65714", VA = "0xF65714")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xF67C28", Offset = "0xF67C28", VA = "0xF67C28")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xF656B0", Offset = "0xF656B0", VA = "0xF656B0")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xF65790", Offset = "0xF65790", VA = "0xF65790")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xF67B3C", Offset = "0xF67B3C", VA = "0xF67B3C")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xF67CC4", Offset = "0xF67CC4", VA = "0xF67CC4")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xF67D00", Offset = "0xF67D00", VA = "0xF67D00")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xF67F14", Offset = "0xF67F14", VA = "0xF67F14")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xF67D10", Offset = "0xF67D10", VA = "0xF67D10")]
	private void Display()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xF67FC4", Offset = "0xF67FC4", VA = "0xF67FC4")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x2000087")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xF68A58", Offset = "0xF68A58", VA = "0xF68A58")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000088")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000089")]
	public enum TouchEvent
	{
		[Token(Token = "0x40002F2")]
		SingleTap,
		[Token(Token = "0x40002F3")]
		DoubleTap,
		[Token(Token = "0x40002F4")]
		Left,
		[Token(Token = "0x40002F5")]
		Right,
		[Token(Token = "0x40002F6")]
		Up,
		[Token(Token = "0x40002F7")]
		Down
	}

	[Token(Token = "0x200008A")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xF64408", Offset = "0xF64408", VA = "0xF64408")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xF6B544", Offset = "0xF6B544", VA = "0xF6B544")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xF6B7F4", Offset = "0xF6B7F4", VA = "0xF6B7F4")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xF6B664", Offset = "0xF6B664", VA = "0xF6B664")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xF651DC", Offset = "0xF651DC", VA = "0xF651DC")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x200008B")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xF6B8C4", Offset = "0xF6B8C4", VA = "0xF6B8C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xF6B93C", Offset = "0xF6B93C", VA = "0xF6B93C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xF6B9F4", Offset = "0xF6B9F4", VA = "0xF6B9F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xF6BA4C", Offset = "0xF6BA4C", VA = "0xF6BA4C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xF6BAAC", Offset = "0xF6BAAC", VA = "0xF6BAAC")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xF6BAB0", Offset = "0xF6BAB0", VA = "0xF6BAB0")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x200008C")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x200008D")]
	public enum Result
	{
		[Token(Token = "0x40002FE")]
		Success = 0,
		[Token(Token = "0x40002FF")]
		Unknown = -2200,
		[Token(Token = "0x4000300")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4000301")]
		InvalidParam = -2202,
		[Token(Token = "0x4000302")]
		BadSampleRate = -2203,
		[Token(Token = "0x4000303")]
		MissingDLL = -2204,
		[Token(Token = "0x4000304")]
		BadVersion = -2205,
		[Token(Token = "0x4000305")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x200008E")]
	public enum AudioDataType
	{
		[Token(Token = "0x4000307")]
		S16_Mono,
		[Token(Token = "0x4000308")]
		S16_Stereo,
		[Token(Token = "0x4000309")]
		F32_Mono,
		[Token(Token = "0x400030A")]
		F32_Stereo
	}

	[Token(Token = "0x200008F")]
	public enum Viseme
	{
		[Token(Token = "0x400030C")]
		sil,
		[Token(Token = "0x400030D")]
		PP,
		[Token(Token = "0x400030E")]
		FF,
		[Token(Token = "0x400030F")]
		TH,
		[Token(Token = "0x4000310")]
		DD,
		[Token(Token = "0x4000311")]
		kk,
		[Token(Token = "0x4000312")]
		CH,
		[Token(Token = "0x4000313")]
		SS,
		[Token(Token = "0x4000314")]
		nn,
		[Token(Token = "0x4000315")]
		RR,
		[Token(Token = "0x4000316")]
		aa,
		[Token(Token = "0x4000317")]
		E,
		[Token(Token = "0x4000318")]
		ih,
		[Token(Token = "0x4000319")]
		oh,
		[Token(Token = "0x400031A")]
		ou
	}

	[Token(Token = "0x2000090")]
	public enum Signals
	{
		[Token(Token = "0x400031C")]
		VisemeOn,
		[Token(Token = "0x400031D")]
		VisemeOff,
		[Token(Token = "0x400031E")]
		VisemeAmount,
		[Token(Token = "0x400031F")]
		VisemeSmoothing,
		[Token(Token = "0x4000320")]
		LaughterAmount
	}

	[Token(Token = "0x2000091")]
	public enum ContextProviders
	{
		[Token(Token = "0x4000322")]
		Original,
		[Token(Token = "0x4000323")]
		Enhanced,
		[Token(Token = "0x4000324")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x2000092")]
	public class Frame
	{
		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xC12560", Offset = "0xC12560", VA = "0xC12560")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0xC125B8", Offset = "0xC125B8", VA = "0xC125B8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xC12644", Offset = "0xC12644", VA = "0xC12644")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40002FA")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xF63978", Offset = "0xF63978", VA = "0xF63978")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xF63A08", Offset = "0xF63A08", VA = "0xF63A08")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xF63A78", Offset = "0xF63A78", VA = "0xF63A78")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xF63B0C", Offset = "0xF63B0C", VA = "0xF63B0C")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xF63BB4", Offset = "0xF63BB4", VA = "0xF63BB4")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xF63C80", Offset = "0xF63C80", VA = "0xF63C80")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xF63D00", Offset = "0xF63D00", VA = "0xF63D00")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xF63D80", Offset = "0xF63D80", VA = "0xF63D80")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xF63E28", Offset = "0xF63E28", VA = "0xF63E28")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xF63F30", Offset = "0xF63F30", VA = "0xF63F30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xF6440C", Offset = "0xF6440C", VA = "0xF6440C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xF642B0", Offset = "0xF642B0", VA = "0xF642B0")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xF6450C", Offset = "0xF6450C", VA = "0xF6450C")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xF64640", Offset = "0xF64640", VA = "0xF64640")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xF646AC", Offset = "0xF646AC", VA = "0xF646AC")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xF64710", Offset = "0xF64710", VA = "0xF64710")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xF6482C", Offset = "0xF6482C", VA = "0xF6482C")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xF6495C", Offset = "0xF6495C", VA = "0xF6495C")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xF64A34", Offset = "0xF64A34", VA = "0xF64A34")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xF64B0C", Offset = "0xF64B0C", VA = "0xF64B0C")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xF64C08", Offset = "0xF64C08", VA = "0xF64C08")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xF64DA4", Offset = "0xF64DA4", VA = "0xF64DA4")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xF64F38", Offset = "0xF64F38", VA = "0xF64F38")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x2000093")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87F8AC", Offset = "0x87F8AC")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88265C", Offset = "0x88265C")]
	public bool enableKeyboardInput;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882694", Offset = "0x882694")]
	public bool enableTouchInput;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8826CC", Offset = "0x8826CC")]
	public bool audioLoopback;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882704", Offset = "0x882704")]
	public KeyCode loopbackKey;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88273C", Offset = "0x88273C")]
	public bool showVisemes;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882774", Offset = "0x882774")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8827AC", Offset = "0x8827AC")]
	public bool skipAudioSource;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8827E4", Offset = "0x8827E4")]
	public float gain;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xF6507C", Offset = "0xF6507C", VA = "0xF6507C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xF652A4", Offset = "0xF652A4", VA = "0xF652A4")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xF6580C", Offset = "0xF6580C", VA = "0xF6580C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xF65AFC", Offset = "0xF65AFC", VA = "0xF65AFC")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xF65B60", Offset = "0xF65B60", VA = "0xF65B60")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xF65BCC", Offset = "0xF65BCC", VA = "0xF65BCC")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xF65D70", Offset = "0xF65D70", VA = "0xF65D70")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xF65F14", Offset = "0xF65F14", VA = "0xF65F14")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xF6604C", Offset = "0xF6604C", VA = "0xF6604C")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xF65850", Offset = "0xF65850", VA = "0xF65850")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xF655C8", Offset = "0xF655C8", VA = "0xF655C8")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xF6605C", Offset = "0xF6605C", VA = "0xF6605C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xF6617C", Offset = "0xF6617C", VA = "0xF6617C")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87F90C", Offset = "0x87F90C")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88281C", Offset = "0x88281C")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882854", Offset = "0x882854")]
	public bool enableAcceleration;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x17000016")]
	public int Smoothing
	{
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xF6631C", Offset = "0xF6631C", VA = "0xF6631C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xF66210", Offset = "0xF66210", VA = "0xF66210")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public uint Context
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xF66324", Offset = "0xF66324", VA = "0xF66324")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000018")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xF6632C", Offset = "0xF6632C", VA = "0xF6632C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xF66334", Offset = "0xF66334", VA = "0xF66334")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xF6651C", Offset = "0xF6651C", VA = "0xF6651C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xF66680", Offset = "0xF66680", VA = "0xF66680")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xF66688", Offset = "0xF66688", VA = "0xF66688")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xF6679C", Offset = "0xF6679C", VA = "0xF6679C")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xF66878", Offset = "0xF66878", VA = "0xF66878")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xF661A0", Offset = "0xF661A0", VA = "0xF661A0")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87F96C", Offset = "0x87F96C")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88288C", Offset = "0x88288C")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xF668F0", Offset = "0xF668F0", VA = "0xF668F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xF66A68", Offset = "0xF66A68", VA = "0xF66A68")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000096")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8828C4", Offset = "0x8828C4")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8828FC", Offset = "0x8828FC")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882934", Offset = "0x882934")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88296C", Offset = "0x88296C")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8829A4", Offset = "0x8829A4")]
	public KeyCode laughterKey;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8829DC", Offset = "0x8829DC")]
	public int laughterBlendTarget;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x882A14", Offset = "0x882A14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882A14", Offset = "0x882A14")]
	public float laughterThreshold;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x882A68", Offset = "0x882A68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882A68", Offset = "0x882A68")]
	public float laughterMultiplier;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882ABC", Offset = "0x882ABC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x882ABC", Offset = "0x882ABC")]
	public int smoothAmount;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xF66A6C", Offset = "0xF66A6C", VA = "0xF66A6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xF66BDC", Offset = "0xF66BDC", VA = "0xF66BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xF66E34", Offset = "0xF66E34", VA = "0xF66E34")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xF66CE4", Offset = "0xF66CE4", VA = "0xF66CE4")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xF66D98", Offset = "0xF66D98", VA = "0xF66D98")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xF66F00", Offset = "0xF66F00", VA = "0xF66F00")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xF66FC4", Offset = "0xF66FC4", VA = "0xF66FC4")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xF6702C", Offset = "0xF6702C", VA = "0xF6702C")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000097")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x882B14", Offset = "0x882B14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882B14", Offset = "0x882B14")]
	public Texture[] Textures;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882C8C", Offset = "0x882C8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x882C8C", Offset = "0x882C8C")]
	public int smoothAmount;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xF67144", Offset = "0xF67144", VA = "0xF67144")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xF672C4", Offset = "0xF672C4", VA = "0xF672C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xF67464", Offset = "0xF67464", VA = "0xF67464")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xF67590", Offset = "0xF67590", VA = "0xF67590")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000098")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87F9CC", Offset = "0x87F9CC")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x2000099")]
	public enum micActivation
	{
		[Token(Token = "0x4000359")]
		HoldToSpeak,
		[Token(Token = "0x400035A")]
		PushToSpeak,
		[Token(Token = "0x400035B")]
		ConstantSpeak
	}

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882CE4", Offset = "0x882CE4")]
	public AudioSource audioSource;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882D1C", Offset = "0x882D1C")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882D54", Offset = "0x882D54")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x882D8C", Offset = "0x882D8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882D8C", Offset = "0x882D8C")]
	private float micInputVolume;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882DF4", Offset = "0x882DF4")]
	private int micFrequency;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882E40", Offset = "0x882E40")]
	public micActivation micControl;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882E78", Offset = "0x882E78")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882EB0", Offset = "0x882EB0")]
	public string selectedDevice;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000019")]
	public float MicFrequency
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xF68034", Offset = "0xF68034", VA = "0xF68034")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xF68040", Offset = "0xF68040", VA = "0xF68040")]
		set
		{
		}
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xF68078", Offset = "0xF68078", VA = "0xF68078")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xF68140", Offset = "0xF68140", VA = "0xF68140")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xF6818C", Offset = "0xF6818C", VA = "0xF6818C")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xF682D8", Offset = "0xF682D8", VA = "0xF682D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xF68724", Offset = "0xF68724", VA = "0xF68724")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xF68738", Offset = "0xF68738", VA = "0xF68738")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xF68750", Offset = "0xF68750", VA = "0xF68750")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xF68754", Offset = "0xF68754", VA = "0xF68754")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xF687CC", Offset = "0xF687CC", VA = "0xF687CC")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xF68214", Offset = "0xF68214", VA = "0xF68214")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xF68590", Offset = "0xF68590", VA = "0xF68590")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xF68434", Offset = "0xF68434", VA = "0xF68434")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xF689A8", Offset = "0xF689A8", VA = "0xF689A8")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xF689B0", Offset = "0xF689B0", VA = "0xF689B0")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x200009A")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xF669BC", Offset = "0xF669BC", VA = "0xF669BC")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xF689E0", Offset = "0xF689E0", VA = "0xF689E0")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x200009B")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200009C")]
	public delegate void OnClick();

	[Token(Token = "0x200009D")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200009E")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200009F")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FA2C", Offset = "0x87FA2C")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000217")]
		[Address(RVA = "0xC05378", Offset = "0xC05378", VA = "0xC05378")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0xC05380", Offset = "0xC05380", VA = "0xC05380")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20000A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FA3C", Offset = "0x87FA3C")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000219")]
		[Address(RVA = "0xC055A4", Offset = "0xC055A4", VA = "0xC055A4")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0xC055AC", Offset = "0xC055AC", VA = "0xC055AC")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20000A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FA4C", Offset = "0x87FA4C")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600021B")]
		[Address(RVA = "0xC057F8", Offset = "0xC057F8", VA = "0xC057F8")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0xC05800", Offset = "0xC05800", VA = "0xC05800")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FA5C", Offset = "0x87FA5C")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600021D")]
		[Address(RVA = "0xC05B94", Offset = "0xC05B94", VA = "0xC05B94")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0xC05B9C", Offset = "0xC05B9C", VA = "0xC05B9C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FA6C", Offset = "0x87FA6C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x600021F")]
		[Address(RVA = "0xC05BBC", Offset = "0xC05BBC", VA = "0xC05BBC")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000220")]
		[Address(RVA = "0xC05BC4", Offset = "0xC05BC4", VA = "0xC05BC4")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400035E")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400035F")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000360")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x400036D")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x400036E")]
	private const float marginH = 16f;

	[Token(Token = "0x400036F")]
	private const float marginV = 16f;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1225494", Offset = "0x1225494", VA = "0x1225494")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x1225948", Offset = "0x1225948", VA = "0x1225948")]
	public void Show()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1225F0C", Offset = "0x1225F0C", VA = "0x1225F0C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1225CEC", Offset = "0x1225CEC", VA = "0x1225CEC")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x12260C8", Offset = "0x12260C8", VA = "0x12260C8")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x12263A0", Offset = "0x12263A0", VA = "0x12263A0")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1226630", Offset = "0x1226630", VA = "0x1226630")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1226734", Offset = "0x1226734", VA = "0x1226734")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x122690C", Offset = "0x122690C", VA = "0x122690C")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x12269B0", Offset = "0x12269B0", VA = "0x12269B0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1226B80", Offset = "0x1226B80", VA = "0x1226B80")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x1226D68", Offset = "0x1226D68", VA = "0x1226D68")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1227050", Offset = "0x1227050", VA = "0x1227050")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x12270FC", Offset = "0x12270FC", VA = "0x12270FC")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000A5")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x12B7FA8", Offset = "0x12B7FA8", VA = "0x12B7FA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x12B8044", Offset = "0x12B8044", VA = "0x12B8044")]
	private void Update()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x12B8104", Offset = "0x12B8104", VA = "0x12B8104")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x12B8140", Offset = "0x12B8140", VA = "0x12B8140")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000A6")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20000A7")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x400038C")]
		On,
		[Token(Token = "0x400038D")]
		Off,
		[Token(Token = "0x400038E")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700001A")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x107D730", Offset = "0x107D730", VA = "0x107D730")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x107D6EC", Offset = "0x107D6EC", VA = "0x107D6EC")]
		set
		{
		}
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x107D738", Offset = "0x107D738", VA = "0x107D738")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x107D78C", Offset = "0x107D78C", VA = "0x107D78C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x107D8D0", Offset = "0x107D8D0", VA = "0x107D8D0", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x107D8EC", Offset = "0x107D8EC", VA = "0x107D8EC", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x107D940", Offset = "0x107D940", VA = "0x107D940")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x107DAFC", Offset = "0x107DAFC", VA = "0x107DAFC")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x107DC10", Offset = "0x107DC10", VA = "0x107DC10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x107DCA0", Offset = "0x107DCA0", VA = "0x107DCA0")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x107DD6C", Offset = "0x107DD6C", VA = "0x107DD6C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x107DE20", Offset = "0x107DE20", VA = "0x107DE20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x107DF0C", Offset = "0x107DF0C", VA = "0x107DF0C")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000A8")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400038F")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000390")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000391")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882F88", Offset = "0x882F88")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882FC0", Offset = "0x882FC0")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x882FF8", Offset = "0x882FF8")]
	public float HeightOffset;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883030", Offset = "0x883030")]
	public float MinimumHeight;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883068", Offset = "0x883068")]
	public float MaximumHeight;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x12770AC", Offset = "0x12770AC", VA = "0x12770AC")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x12770B4", Offset = "0x12770B4", VA = "0x12770B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x127712C", Offset = "0x127712C", VA = "0x127712C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x12771C0", Offset = "0x12771C0", VA = "0x12771C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1277254", Offset = "0x1277254", VA = "0x1277254")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1277580", Offset = "0x1277580", VA = "0x1277580")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x12777B0", Offset = "0x12777B0", VA = "0x12777B0")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000A9")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x107FCFC", Offset = "0x107FCFC", VA = "0x107FCFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x107FDB0", Offset = "0x107FDB0", VA = "0x107FDB0")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000AA")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20000AB")]
	public enum States
	{
		[Token(Token = "0x40003BF")]
		Ready,
		[Token(Token = "0x40003C0")]
		Aim,
		[Token(Token = "0x40003C1")]
		CancelAim,
		[Token(Token = "0x40003C2")]
		PreTeleport,
		[Token(Token = "0x40003C3")]
		CancelTeleport,
		[Token(Token = "0x40003C4")]
		Teleporting,
		[Token(Token = "0x40003C5")]
		PostTeleport
	}

	[Token(Token = "0x20000AC")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40003C7")]
		None,
		[Token(Token = "0x40003C8")]
		Aim,
		[Token(Token = "0x40003C9")]
		PreTeleport,
		[Token(Token = "0x40003CA")]
		Teleport
	}

	[Token(Token = "0x20000AD")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40003CC")]
		Point,
		[Token(Token = "0x40003CD")]
		Sphere,
		[Token(Token = "0x40003CE")]
		Capsule
	}

	[Token(Token = "0x20000AE")]
	public class AimData
	{
		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883480", Offset = "0x883480")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700001E")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000270")]
			[Address(RVA = "0xC0E7C4", Offset = "0xC0E7C4", VA = "0xC0E7C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89010C", Offset = "0x89010C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000271")]
			[Address(RVA = "0xC0E7CC", Offset = "0xC0E7CC", VA = "0xC0E7CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89011C", Offset = "0x89011C")]
			private set
			{
			}
		}

		[Token(Token = "0x600026F")]
		[Address(RVA = "0xC0E748", Offset = "0xC0E748", VA = "0xC0E748")]
		public AimData()
		{
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0xC0E7D4", Offset = "0xC0E7D4", VA = "0xC0E7D4")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FA7C", Offset = "0x87FA7C")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000276")]
			[Address(RVA = "0xC0E5A0", Offset = "0xC0E5A0", VA = "0xC0E5A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000278")]
			[Address(RVA = "0xC0E5E8", Offset = "0xC0E5E8", VA = "0xC0E5E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000273")]
		[Address(RVA = "0xC0E484", Offset = "0xC0E484", VA = "0xC0E484")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0xC0E4B0", Offset = "0xC0E4B0", VA = "0xC0E4B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0xC0E4B4", Offset = "0xC0E4B4", VA = "0xC0E4B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000277")]
		[Address(RVA = "0xC0E5A8", Offset = "0xC0E5A8", VA = "0xC0E5A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FA8C", Offset = "0x87FA8C")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600027C")]
			[Address(RVA = "0xC0DF2C", Offset = "0xC0DF2C", VA = "0xC0DF2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027E")]
			[Address(RVA = "0xC0DF74", Offset = "0xC0DF74", VA = "0xC0DF74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000279")]
		[Address(RVA = "0xC0DDBC", Offset = "0xC0DDBC", VA = "0xC0DDBC")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0xC0DDE8", Offset = "0xC0DDE8", VA = "0xC0DDE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0xC0DDEC", Offset = "0xC0DDEC", VA = "0xC0DDEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0xC0DF34", Offset = "0xC0DF34", VA = "0xC0DF34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FA9C", Offset = "0x87FA9C")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000282")]
			[Address(RVA = "0xC0E04C", Offset = "0xC0E04C", VA = "0xC0E04C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000284")]
			[Address(RVA = "0xC0E094", Offset = "0xC0E094", VA = "0xC0E094", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027F")]
		[Address(RVA = "0xC0DF7C", Offset = "0xC0DF7C", VA = "0xC0DF7C")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0xC0DFA8", Offset = "0xC0DFA8", VA = "0xC0DFA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0xC0DFAC", Offset = "0xC0DFAC", VA = "0xC0DFAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0xC0E054", Offset = "0xC0E054", VA = "0xC0E054", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FAAC", Offset = "0x87FAAC")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000288")]
			[Address(RVA = "0xC0E434", Offset = "0xC0E434", VA = "0xC0E434", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600028A")]
			[Address(RVA = "0xC0E47C", Offset = "0xC0E47C", VA = "0xC0E47C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0xC0E324", Offset = "0xC0E324", VA = "0xC0E324")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0xC0E350", Offset = "0xC0E350", VA = "0xC0E350", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0xC0E354", Offset = "0xC0E354", VA = "0xC0E354", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0xC0E43C", Offset = "0xC0E43C", VA = "0xC0E43C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FABC", Offset = "0x87FABC")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600028E")]
			[Address(RVA = "0xC0E16C", Offset = "0xC0E16C", VA = "0xC0E16C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000290")]
			[Address(RVA = "0xC0E1B4", Offset = "0xC0E1B4", VA = "0xC0E1B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0xC0E09C", Offset = "0xC0E09C", VA = "0xC0E09C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0xC0E0C8", Offset = "0xC0E0C8", VA = "0xC0E0C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600028D")]
		[Address(RVA = "0xC0E0CC", Offset = "0xC0E0CC", VA = "0xC0E0CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0xC0E174", Offset = "0xC0E174", VA = "0xC0E174", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FACC", Offset = "0x87FACC")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000294")]
			[Address(RVA = "0xC0E6F8", Offset = "0xC0E6F8", VA = "0xC0E6F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000296")]
			[Address(RVA = "0xC0E740", Offset = "0xC0E740", VA = "0xC0E740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0xC0E5F0", Offset = "0xC0E5F0", VA = "0xC0E5F0")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0xC0E61C", Offset = "0xC0E61C", VA = "0xC0E61C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000293")]
		[Address(RVA = "0xC0E620", Offset = "0xC0E620", VA = "0xC0E620", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0xC0E700", Offset = "0xC0E700", VA = "0xC0E700", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FADC", Offset = "0x87FADC")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600029A")]
			[Address(RVA = "0xC0E2D4", Offset = "0xC0E2D4", VA = "0xC0E2D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600029C")]
			[Address(RVA = "0xC0E31C", Offset = "0xC0E31C", VA = "0xC0E31C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000297")]
		[Address(RVA = "0xC0E1BC", Offset = "0xC0E1BC", VA = "0xC0E1BC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0xC0E1E8", Offset = "0xC0E1E8", VA = "0xC0E1E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0xC0E1EC", Offset = "0xC0E1EC", VA = "0xC0E1EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0xC0E2DC", Offset = "0xC0E2DC", VA = "0xC0E2DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8830A0", Offset = "0x8830A0")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8830D8", Offset = "0x8830D8")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883110", Offset = "0x883110")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883148", Offset = "0x883148")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883180", Offset = "0x883180")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8831B8", Offset = "0x8831B8")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8831F0", Offset = "0x8831F0")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883228", Offset = "0x883228")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883260", Offset = "0x883260")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883270", Offset = "0x883270")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8832A8", Offset = "0x8832A8")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8832F0", Offset = "0x8832F0")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883300", Offset = "0x883300")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883338", Offset = "0x883338")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883370", Offset = "0x883370")]
	public float AimCollisionRadius;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8833A8", Offset = "0x8833A8")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700001B")]
	public States CurrentState
	{
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x1080880", Offset = "0x1080880", VA = "0x1080880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FC94", Offset = "0x88FC94")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x1080888", Offset = "0x1080888", VA = "0x1080888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FCA4", Offset = "0x88FCA4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000242")]
		[Address(RVA = "0x1080AAC", Offset = "0x1080AAC", VA = "0x1080AAC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700001D")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0x1080AD4", Offset = "0x1080AD4", VA = "0x1080AD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FCD4", Offset = "0x88FCD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000244")]
		[Address(RVA = "0x1080ADC", Offset = "0x1080ADC", VA = "0x1080ADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FCE4", Offset = "0x88FCE4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x1080890", Offset = "0x1080890", VA = "0x1080890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FCB4", Offset = "0x88FCB4")]
		add
		{
		}
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x1080930", Offset = "0x1080930", VA = "0x1080930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FCC4", Offset = "0x88FCC4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600024E")]
		[Address(RVA = "0x10810D4", Offset = "0x10810D4", VA = "0x10810D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FD2C", Offset = "0x88FD2C")]
		add
		{
		}
		[Token(Token = "0x600024F")]
		[Address(RVA = "0x1081174", Offset = "0x1081174", VA = "0x1081174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FD3C", Offset = "0x88FD3C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x1081214", Offset = "0x1081214", VA = "0x1081214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FDAC", Offset = "0x88FDAC")]
		add
		{
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0x10812B4", Offset = "0x10812B4", VA = "0x10812B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FDBC", Offset = "0x88FDBC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000253")]
		[Address(RVA = "0x1081354", Offset = "0x1081354", VA = "0x1081354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FDCC", Offset = "0x88FDCC")]
		add
		{
		}
		[Token(Token = "0x6000254")]
		[Address(RVA = "0x10813F4", Offset = "0x10813F4", VA = "0x10813F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FDDC", Offset = "0x88FDDC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0x1081504", Offset = "0x1081504", VA = "0x1081504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FDEC", Offset = "0x88FDEC")]
		add
		{
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0x10815A4", Offset = "0x10815A4", VA = "0x10815A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FDFC", Offset = "0x88FDFC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x10816B0", Offset = "0x10816B0", VA = "0x10816B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FE6C", Offset = "0x88FE6C")]
		add
		{
		}
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x1081750", Offset = "0x1081750", VA = "0x1081750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FE7C", Offset = "0x88FE7C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x108185C", Offset = "0x108185C", VA = "0x108185C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FEEC", Offset = "0x88FEEC")]
		add
		{
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x10818FC", Offset = "0x10818FC", VA = "0x10818FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FEFC", Offset = "0x88FEFC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x1081A08", Offset = "0x1081A08", VA = "0x1081A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FF6C", Offset = "0x88FF6C")]
		add
		{
		}
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x1081AA8", Offset = "0x1081AA8", VA = "0x1081AA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FF7C", Offset = "0x88FF7C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x1081BB4", Offset = "0x1081BB4", VA = "0x1081BB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FFEC", Offset = "0x88FFEC")]
		add
		{
		}
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x1081C54", Offset = "0x1081C54", VA = "0x1081C54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88FFFC", Offset = "0x88FFFC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x1081D60", Offset = "0x1081D60", VA = "0x1081D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89006C", Offset = "0x89006C")]
		add
		{
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x1081E00", Offset = "0x1081E00", VA = "0x1081E00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89007C", Offset = "0x89007C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0x1081F0C", Offset = "0x1081F0C", VA = "0x1081F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8900EC", Offset = "0x8900EC")]
		add
		{
		}
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x1081FAC", Offset = "0x1081FAC", VA = "0x1081FAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8900FC", Offset = "0x8900FC")]
		remove
		{
		}
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x108052C", Offset = "0x108052C", VA = "0x108052C")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1080550", Offset = "0x1080550", VA = "0x1080550")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x10809D0", Offset = "0x10809D0", VA = "0x10809D0")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1080AE4", Offset = "0x1080AE4", VA = "0x1080AE4")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1080D30", Offset = "0x1080D30", VA = "0x1080D30")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x88FCF4", Offset = "0x88FCF4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1080DE4", Offset = "0x1080DE4", VA = "0x1080DE4")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1080EB4", Offset = "0x1080EB4", VA = "0x1080EB4")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1080ED0", Offset = "0x1080ED0", VA = "0x1080ED0")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1080F94", Offset = "0x1080F94", VA = "0x1080F94")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1080FD8", Offset = "0x1080FD8", VA = "0x1080FD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1081030", Offset = "0x1081030", VA = "0x1081030", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x10810CC", Offset = "0x10810CC", VA = "0x10810CC", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1081060", Offset = "0x1081060", VA = "0x1081060")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88FD4C", Offset = "0x88FD4C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1081494", Offset = "0x1081494", VA = "0x1081494")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x1081644", Offset = "0x1081644", VA = "0x1081644")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88FE0C", Offset = "0x88FE0C")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x10817F0", Offset = "0x10817F0", VA = "0x10817F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88FE8C", Offset = "0x88FE8C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x108199C", Offset = "0x108199C", VA = "0x108199C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88FF0C", Offset = "0x88FF0C")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1081B48", Offset = "0x1081B48", VA = "0x1081B48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88FF8C", Offset = "0x88FF8C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x1081CF4", Offset = "0x1081CF4", VA = "0x1081CF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89000C", Offset = "0x89000C")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x1081EA0", Offset = "0x1081EA0", VA = "0x1081EA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89008C", Offset = "0x89008C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x108204C", Offset = "0x108204C", VA = "0x108204C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x108218C", Offset = "0x108218C", VA = "0x108218C")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x10821C0", Offset = "0x10821C0", VA = "0x10821C0")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1082288", Offset = "0x1082288", VA = "0x1082288")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1082380", Offset = "0x1082380", VA = "0x1082380")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000B6")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xE0C23C", Offset = "0xE0C23C", VA = "0xE0C23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89035C", Offset = "0x89035C")]
		add
		{
		}
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xE0C2DC", Offset = "0xE0C2DC", VA = "0xE0C2DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89036C", Offset = "0x89036C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600029F")]
		[Address(RVA = "0xE0C37C", Offset = "0xE0C37C", VA = "0xE0C37C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89037C", Offset = "0x89037C")]
		add
		{
		}
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xE0C41C", Offset = "0xE0C41C", VA = "0xE0C41C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89038C", Offset = "0x89038C")]
		remove
		{
		}
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xE0C4BC", Offset = "0xE0C4BC", VA = "0xE0C4BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xE0C578", Offset = "0xE0C578", VA = "0xE0C578")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xE0C57C", Offset = "0xE0C57C", VA = "0xE0C57C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xE0C5F0", Offset = "0xE0C5F0", VA = "0xE0C5F0")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xE0C714", Offset = "0xE0C714", VA = "0xE0C714")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xE0C8FC", Offset = "0xE0C8FC", VA = "0xE0C8FC")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xE0CAC4", Offset = "0xE0CAC4", VA = "0xE0CAC4")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000B7")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xE1C028", Offset = "0xE1C028", VA = "0xE1C028", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xE1C05C", Offset = "0xE1C05C", VA = "0xE1C05C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60002AA")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xE1C0F0", Offset = "0xE1C0F0", VA = "0xE1C0F0")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000B8")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8834B0", Offset = "0x8834B0")]
	public float Range;

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xE1C0F8", Offset = "0xE1C0F8", VA = "0xE1C0F8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xE1C1F4", Offset = "0xE1C1F4", VA = "0xE1C1F4")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000B9")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8834E8", Offset = "0x8834E8")]
	public float Range;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883520", Offset = "0x883520")]
	public float MinimumElevation;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883558", Offset = "0x883558")]
	public float Gravity;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883590", Offset = "0x883590")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x883590", Offset = "0x883590")]
	public float AimVelocity;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8835EC", Offset = "0x8835EC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8835EC", Offset = "0x8835EC")]
	public float AimStep;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xE1C204", Offset = "0xE1C204", VA = "0xE1C204", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xE1C394", Offset = "0xE1C394", VA = "0xE1C394")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000BA")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883644", Offset = "0x883644")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xE1C3A8", Offset = "0xE1C3A8", VA = "0xE1C3A8")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xE1C4C4", Offset = "0xE1C4C4", VA = "0xE1C4C4")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xE1C4F4", Offset = "0xE1C4F4", VA = "0xE1C4F4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xE1C524", Offset = "0xE1C524", VA = "0xE1C524")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xE1C5CC", Offset = "0xE1C5CC", VA = "0xE1C5CC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xE1C62C", Offset = "0xE1C62C", VA = "0xE1C62C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xE1C690", Offset = "0xE1C690", VA = "0xE1C690")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000BB")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88367C", Offset = "0x88367C")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88368C", Offset = "0x88368C")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8836C4", Offset = "0x8836C4")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8836FC", Offset = "0x8836FC")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700002D")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xE1C7B4", Offset = "0xE1C7B4", VA = "0xE1C7B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89039C", Offset = "0x89039C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xE1C7BC", Offset = "0xE1C7BC", VA = "0xE1C7BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8903AC", Offset = "0x8903AC")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xE1C970", Offset = "0xE1C970", VA = "0xE1C970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8903BC", Offset = "0x8903BC")]
		add
		{
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xE1CA10", Offset = "0xE1CA10", VA = "0xE1CA10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8903CC", Offset = "0x8903CC")]
		remove
		{
		}
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xE1C7C8", Offset = "0xE1C7C8", VA = "0xE1C7C8")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xE1C858", Offset = "0xE1C858", VA = "0xE1C858")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xE1C92C", Offset = "0xE1C92C", VA = "0xE1C92C")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xE1C96C", Offset = "0xE1C96C", VA = "0xE1C96C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xE1CAB0", Offset = "0xE1CAB0", VA = "0xE1CAB0")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xE1CB14", Offset = "0xE1CB14", VA = "0xE1CB14")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xE1CB34", Offset = "0xE1CB34", VA = "0xE1CB34", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000BC")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FAEC", Offset = "0x87FAEC")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002CE")]
			[Address(RVA = "0xF9401C", Offset = "0xF9401C", VA = "0xF9401C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D0")]
			[Address(RVA = "0xF94064", Offset = "0xF94064", VA = "0xF94064", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xF93F60", Offset = "0xF93F60", VA = "0xF93F60")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xF93F8C", Offset = "0xF93F8C", VA = "0xF93F8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xF93F90", Offset = "0xF93F90", VA = "0xF93F90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xF94024", Offset = "0xF94024", VA = "0xF94024", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FAFC", Offset = "0x87FAFC")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002D4")]
			[Address(RVA = "0xF93F10", Offset = "0xF93F10", VA = "0xF93F10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D6")]
			[Address(RVA = "0xF93F58", Offset = "0xF93F58", VA = "0xF93F58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xF93E50", Offset = "0xF93E50", VA = "0xF93E50")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xF93E7C", Offset = "0xF93E7C", VA = "0xF93E7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xF93E80", Offset = "0xF93E80", VA = "0xF93E80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xF93F18", Offset = "0xF93F18", VA = "0xF93F18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xF9E98C", Offset = "0xF9E98C", VA = "0xF9E98C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xF9EA54", Offset = "0xF9EA54", VA = "0xF9EA54", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xF9EAB8", Offset = "0xF9EAB8", VA = "0xF9EAB8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xF9EB78", Offset = "0xF9EB78", VA = "0xF9EB78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8903DC", Offset = "0x8903DC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xF9EBE4", Offset = "0xF9EBE4", VA = "0xF9EBE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89043C", Offset = "0x89043C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C7")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002C8")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xF9EC50", Offset = "0xF9EC50", VA = "0xF9EC50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89049C", Offset = "0x89049C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xF9EC7C", Offset = "0xF9EC7C", VA = "0xF9EC7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8904AC", Offset = "0x8904AC")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000BF")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883744", Offset = "0x883744")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883754", Offset = "0x883754")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88378C", Offset = "0x88378C")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8837C4", Offset = "0x8837C4")]
	public bool FastTeleport;

	[Token(Token = "0x17000032")]
	public Transform Pointer
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xF9ECA8", Offset = "0xF9ECA8", VA = "0xF9ECA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89055C", Offset = "0x89055C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xF9ECB0", Offset = "0xF9ECB0", VA = "0xF9ECB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89056C", Offset = "0x89056C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xF9ECB8", Offset = "0xF9ECB8", VA = "0xF9ECB8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xF9EE10", Offset = "0xF9EE10", VA = "0xF9EE10", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xF9EEC8", Offset = "0xF9EEC8", VA = "0xF9EEC8")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000C0")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000C1")]
	public enum InputModes
	{
		[Token(Token = "0x400041F")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000420")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000421")]
		ThumbstickTeleport,
		[Token(Token = "0x4000422")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000C2")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000424")]
		A,
		[Token(Token = "0x4000425")]
		B,
		[Token(Token = "0x4000426")]
		LeftTrigger,
		[Token(Token = "0x4000427")]
		LeftThumbstick,
		[Token(Token = "0x4000428")]
		RightTrigger,
		[Token(Token = "0x4000429")]
		RightThumbstick,
		[Token(Token = "0x400042A")]
		X,
		[Token(Token = "0x400042B")]
		Y
	}

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8837FC", Offset = "0x8837FC")]
	public InputModes InputMode;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883834", Offset = "0x883834")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88386C", Offset = "0x88386C")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8838A4", Offset = "0x8838A4")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xF9EECC", Offset = "0xF9EECC", VA = "0xF9EECC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xF9EED0", Offset = "0xF9EED0", VA = "0xF9EED0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xF9F2B8", Offset = "0xF9F2B8", VA = "0xF9F2B8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xF9F378", Offset = "0xF9F378", VA = "0xF9F378")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000C3")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000C4")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000430")]
		HeadRelative,
		[Token(Token = "0x4000431")]
		ForwardFacing
	}

	[Token(Token = "0x20000C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FB0C", Offset = "0x87FB0C")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002EC")]
			[Address(RVA = "0xF94140", Offset = "0xF94140", VA = "0xF94140", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002EE")]
			[Address(RVA = "0xF94188", Offset = "0xF94188", VA = "0xF94188", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xF9406C", Offset = "0xF9406C", VA = "0xF9406C")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xF94098", Offset = "0xF94098", VA = "0xF94098", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xF9409C", Offset = "0xF9409C", VA = "0xF9409C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xF94148", Offset = "0xF94148", VA = "0xF94148", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xF9F680", Offset = "0xF9F680", VA = "0xF9F680")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xF9F760", Offset = "0xF9F760", VA = "0xF9F760")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xF9F768", Offset = "0xF9F768", VA = "0xF9F768", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xF9F7B4", Offset = "0xF9F7B4", VA = "0xF9F7B4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xF9F7FC", Offset = "0xF9F7FC", VA = "0xF9F7FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89057C", Offset = "0x89057C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E5")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002E6")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xF9F868", Offset = "0xF9F868", VA = "0xF9F868")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xF9F924", Offset = "0xF9F924", VA = "0xF9F924")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8905DC", Offset = "0x8905DC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000C6")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xF9F950", Offset = "0xF9F950", VA = "0xF9F950", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xF9F954", Offset = "0xF9F954", VA = "0xF9F954", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xF9F9D0", Offset = "0xF9F9D0", VA = "0xF9F9D0")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000C7")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8838DC", Offset = "0x8838DC")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883914", Offset = "0x883914")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88394C", Offset = "0x88394C")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883984", Offset = "0x883984")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xF9F9D4", Offset = "0xF9F9D4", VA = "0xF9F9D4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xF9FA00", Offset = "0xF9FA00", VA = "0xF9FA00", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xF9FDB0", Offset = "0xF9FDB0", VA = "0xF9FDB0")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000C8")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8839BC", Offset = "0x8839BC")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8839F4", Offset = "0x8839F4")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883A2C", Offset = "0x883A2C")]
	public float RotateStickThreshold;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xF9FDB4", Offset = "0xF9FDB4", VA = "0xF9FDB4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xF9FDF8", Offset = "0xF9FDF8", VA = "0xF9FDF8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xFA01A0", Offset = "0xFA01A0", VA = "0xFA01A0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000C9")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xFA01B0", Offset = "0xFA01B0", VA = "0xFA01B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xFA01B4", Offset = "0xFA01B4", VA = "0xFA01B4")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xFA01BC", Offset = "0xFA01BC", VA = "0xFA01BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xFA0278", Offset = "0xFA0278", VA = "0xFA0278")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xFA02A0", Offset = "0xFA02A0", VA = "0xFA02A0")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000CA")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883A64", Offset = "0x883A64")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000035")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xFA02B8", Offset = "0xFA02B8", VA = "0xFA02B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89063C", Offset = "0x89063C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xFA02C0", Offset = "0xFA02C0", VA = "0xFA02C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89064C", Offset = "0x89064C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xFA02C8", Offset = "0xFA02C8", VA = "0xFA02C8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xFA0328", Offset = "0xFA0328", VA = "0xFA0328", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xFA0354", Offset = "0xFA0354", VA = "0xFA0354")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x89065C", Offset = "0x89065C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xF9EAAC", Offset = "0xF9EAAC", VA = "0xF9EAAC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xF9EB70", Offset = "0xF9EB70", VA = "0xF9EB70", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xF9EA4C", Offset = "0xF9EA4C", VA = "0xF9EA4C")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000CB")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FB1C", Offset = "0x87FB1C")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000310")]
			[Address(RVA = "0xF94454", Offset = "0xF94454", VA = "0xF94454", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000312")]
			[Address(RVA = "0xF9449C", Offset = "0xF9449C", VA = "0xF9449C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0xF94190", Offset = "0xF94190", VA = "0xF94190")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0xF941BC", Offset = "0xF941BC", VA = "0xF941BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0xF941C0", Offset = "0xF941C0", VA = "0xF941C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0xF9445C", Offset = "0xF9445C", VA = "0xF9445C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883A74", Offset = "0x883A74")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400044B")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xFA0430", Offset = "0xFA0430", VA = "0xFA0430")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xFA0520", Offset = "0xFA0520", VA = "0xFA0520", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xFA054C", Offset = "0xFA054C", VA = "0xFA054C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xFA0574", Offset = "0xFA0574", VA = "0xFA0574")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x890694", Offset = "0x890694")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xFA05E0", Offset = "0xFA05E0", VA = "0xFA05E0", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600030A")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xFA05FC", Offset = "0xFA05FC", VA = "0xFA05FC", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xFA071C", Offset = "0xFA071C", VA = "0xFA071C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8906F4", Offset = "0x8906F4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000CD")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xFA0748", Offset = "0xFA0748", VA = "0xFA0748")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xFA07A4", Offset = "0xFA07A4", VA = "0xFA07A4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xFA089C", Offset = "0xFA089C", VA = "0xFA089C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xFA0994", Offset = "0xFA0994", VA = "0xFA0994")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x890754", Offset = "0x890754")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xFA0998", Offset = "0xFA0998", VA = "0xFA0998")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000CE")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883AAC", Offset = "0x883AAC")]
	public float LOSOffset;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883AE4", Offset = "0x883AE4")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xFA09A4", Offset = "0xFA09A4", VA = "0xFA09A4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xFA0BB0", Offset = "0xFA0BB0", VA = "0xFA0BB0")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000CF")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600031A")]
	[Address(RVA = "0xFA0BBC", Offset = "0xFA0BBC", VA = "0xFA0BBC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xFA0CB4", Offset = "0xFA0CB4", VA = "0xFA0CB4")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000D0")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600031C")]
	[Address(RVA = "0xFA0CB8", Offset = "0xFA0CB8", VA = "0xFA0CB8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xFA0D4C", Offset = "0xFA0D4C", VA = "0xFA0D4C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600031E")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xFA0DDC", Offset = "0xFA0DDC", VA = "0xFA0DDC")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000D1")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FB2C", Offset = "0x87FB2C")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000326")]
			[Address(RVA = "0xF945D0", Offset = "0xF945D0", VA = "0xF945D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000328")]
			[Address(RVA = "0xF94618", Offset = "0xF94618", VA = "0xF94618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0xF944A4", Offset = "0xF944A4", VA = "0xF944A4")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0xF944D0", Offset = "0xF944D0", VA = "0xF944D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0xF944D4", Offset = "0xF944D4", VA = "0xF944D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0xF945D8", Offset = "0xF945D8", VA = "0xF945D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x883B1C", Offset = "0x883B1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883B1C", Offset = "0x883B1C")]
	public float TransitionDuration;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x883B74", Offset = "0x883B74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883B74", Offset = "0x883B74")]
	public float TeleportDelay;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883BC8", Offset = "0x883BC8")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xFA0DE4", Offset = "0xFA0DE4", VA = "0xFA0DE4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xFA0E10", Offset = "0xFA0E10", VA = "0xFA0E10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89078C", Offset = "0x89078C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xFA0E7C", Offset = "0xFA0E7C", VA = "0xFA0E7C")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000D3")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000329")]
	[Address(RVA = "0xFA101C", Offset = "0xFA101C", VA = "0xFA101C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xFA1038", Offset = "0xFA1038", VA = "0xFA1038")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000D4")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FB3C", Offset = "0x87FB3C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000331")]
			[Address(RVA = "0xF94780", Offset = "0xF94780", VA = "0xF94780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000333")]
			[Address(RVA = "0xF947C8", Offset = "0xF947C8", VA = "0xF947C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0xF94620", Offset = "0xF94620", VA = "0xF94620")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0xF9464C", Offset = "0xF9464C", VA = "0xF9464C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0xF94650", Offset = "0xF94650", VA = "0xF94650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0xF94788", Offset = "0xF94788", VA = "0xF94788", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x883C00", Offset = "0x883C00")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883C00", Offset = "0x883C00")]
	public float TransitionDuration;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x883C58", Offset = "0x883C58")]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xFA1040", Offset = "0xFA1040", VA = "0xFA1040", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xFA106C", Offset = "0xFA106C", VA = "0xFA106C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89083C", Offset = "0x89083C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xFA10D8", Offset = "0xFA10D8", VA = "0xFA10D8")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000D6")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000D7")]
	public enum PlabackState
	{
		[Token(Token = "0x400047B")]
		Idle = 1,
		[Token(Token = "0x400047C")]
		Preparing,
		[Token(Token = "0x400047D")]
		Buffering,
		[Token(Token = "0x400047E")]
		Ready,
		[Token(Token = "0x400047F")]
		Ended
	}

	[Token(Token = "0x20000D8")]
	public enum StereoMode
	{
		[Token(Token = "0x4000481")]
		Unknown = -1,
		[Token(Token = "0x4000482")]
		Mono,
		[Token(Token = "0x4000483")]
		TopBottom,
		[Token(Token = "0x4000484")]
		LeftRight,
		[Token(Token = "0x4000485")]
		Mesh
	}

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700003C")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000334")]
		[Address(RVA = "0x13A7C94", Offset = "0x13A7C94", VA = "0x13A7C94")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003D")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000335")]
		[Address(RVA = "0x13A7FC4", Offset = "0x13A7FC4", VA = "0x13A7FC4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003E")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000336")]
		[Address(RVA = "0x13A4F28", Offset = "0x13A4F28", VA = "0x13A4F28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003F")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0x13A6668", Offset = "0x13A6668", VA = "0x13A6668")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000040")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000338")]
		[Address(RVA = "0x13A8294", Offset = "0x13A8294", VA = "0x13A8294")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000041")]
	public static long Duration
	{
		[Token(Token = "0x6000339")]
		[Address(RVA = "0x13A688C", Offset = "0x13A688C", VA = "0x13A688C")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000042")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x13A5550", Offset = "0x13A5550", VA = "0x13A5550")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000043")]
	public static int VideoWidth
	{
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x13A5328", Offset = "0x13A5328", VA = "0x13A5328")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000044")]
	public static int VideoHeight
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0x13A543C", Offset = "0x13A543C", VA = "0x13A543C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000045")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600033D")]
		[Address(RVA = "0x13A6778", Offset = "0x13A6778", VA = "0x13A6778")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600033E")]
		[Address(RVA = "0x13A5DB8", Offset = "0x13A5DB8", VA = "0x13A5DB8")]
		set
		{
		}
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x13A83A8", Offset = "0x13A83A8", VA = "0x13A83A8")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x13A6C54", Offset = "0x13A6C54", VA = "0x13A6C54")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x13A5A04", Offset = "0x13A5A04", VA = "0x13A5A04")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x13A5BA4", Offset = "0x13A5BA4", VA = "0x13A5BA4")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x13A6A54", Offset = "0x13A6A54", VA = "0x13A6A54")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x13A85C8", Offset = "0x13A85C8", VA = "0x13A85C8")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x13A6480", Offset = "0x13A6480", VA = "0x13A6480")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000D9")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000347")]
		[Address(RVA = "0xE33814", Offset = "0xE33814", VA = "0xE33814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8908EC", Offset = "0x8908EC")]
		add
		{
		}
		[Token(Token = "0x6000348")]
		[Address(RVA = "0xE338B4", Offset = "0xE338B4", VA = "0xE338B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8908FC", Offset = "0x8908FC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xE33954", Offset = "0xE33954", VA = "0xE33954", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xE33968", Offset = "0xE33968", VA = "0xE33968")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000DA")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000DB")]
	public enum ButtonType
	{
		[Token(Token = "0x4000489")]
		Play,
		[Token(Token = "0x400048A")]
		Pause,
		[Token(Token = "0x400048B")]
		FastForward,
		[Token(Token = "0x400048C")]
		Rewind,
		[Token(Token = "0x400048D")]
		SkipForward,
		[Token(Token = "0x400048E")]
		SkipBack,
		[Token(Token = "0x400048F")]
		Stop
	}

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000046")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x1088EF4", Offset = "0x1088EF4", VA = "0x1088EF4")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x1088EFC", Offset = "0x1088EFC", VA = "0x1088EFC")]
		set
		{
		}
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1088F20", Offset = "0x1088F20", VA = "0x1088F20", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x108A3B8", Offset = "0x108A3B8", VA = "0x108A3B8")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000DC")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000DD")]
	public enum VideoShape
	{
		[Token(Token = "0x40004A4")]
		_360,
		[Token(Token = "0x40004A5")]
		_180,
		[Token(Token = "0x40004A6")]
		Quad
	}

	[Token(Token = "0x20000DE")]
	public enum VideoStereo
	{
		[Token(Token = "0x40004A8")]
		Mono,
		[Token(Token = "0x40004A9")]
		TopBottom,
		[Token(Token = "0x40004AA")]
		LeftRight,
		[Token(Token = "0x40004AB")]
		BottomTop
	}

	[Token(Token = "0x20000DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FB4C", Offset = "0x87FB4C")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000365")]
			[Address(RVA = "0xC0F5DC", Offset = "0xC0F5DC", VA = "0xC0F5DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000367")]
			[Address(RVA = "0xC0F624", Offset = "0xC0F624", VA = "0xC0F624", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0xC0F3F4", Offset = "0xC0F3F4", VA = "0xC0F3F4")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0xC0F420", Offset = "0xC0F420", VA = "0xC0F420", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0xC0F424", Offset = "0xC0F424", VA = "0xC0F424", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0xC0F5E4", Offset = "0xC0F5E4", VA = "0xC0F5E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FB5C", Offset = "0x87FB5C")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000368")]
		[Address(RVA = "0xC0F2FC", Offset = "0xC0F2FC", VA = "0xC0F2FC")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0xC0F304", Offset = "0xC0F304", VA = "0xC0F304")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883C88", Offset = "0x883C88")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883C98", Offset = "0x883C98")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883CA8", Offset = "0x883CA8")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000047")]
	public bool IsPlaying
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x13A4C80", Offset = "0x13A4C80", VA = "0x13A4C80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89090C", Offset = "0x89090C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000350")]
		[Address(RVA = "0x13A4C88", Offset = "0x13A4C88", VA = "0x13A4C88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89091C", Offset = "0x89091C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public long Duration
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0x13A4C94", Offset = "0x13A4C94", VA = "0x13A4C94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89092C", Offset = "0x89092C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x13A4C9C", Offset = "0x13A4C9C", VA = "0x13A4C9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89093C", Offset = "0x89093C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0x13A4CA4", Offset = "0x13A4CA4", VA = "0x13A4CA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89094C", Offset = "0x89094C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x13A4CAC", Offset = "0x13A4CAC", VA = "0x13A4CAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89095C", Offset = "0x89095C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x13A4CB4", Offset = "0x13A4CB4", VA = "0x13A4CB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x13A4F98", Offset = "0x13A4F98", VA = "0x13A4F98")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x13A4FFC", Offset = "0x13A4FFC", VA = "0x13A4FFC")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x13A5664", Offset = "0x13A5664", VA = "0x13A5664")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89096C", Offset = "0x89096C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x13A56D0", Offset = "0x13A56D0", VA = "0x13A56D0")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x13A5974", Offset = "0x13A5974", VA = "0x13A5974")]
	public void Play()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x13A5B18", Offset = "0x13A5B18", VA = "0x13A5B18")]
	public void Pause()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x13A5CB8", Offset = "0x13A5CB8", VA = "0x13A5CB8")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x13A5F24", Offset = "0x13A5F24", VA = "0x13A5F24")]
	private void Update()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x13A69A0", Offset = "0x13A69A0", VA = "0x13A69A0")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x13A6BC8", Offset = "0x13A6BC8", VA = "0x13A6BC8")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x13A6D68", Offset = "0x13A6D68", VA = "0x13A6D68")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x13A6E54", Offset = "0x13A6E54", VA = "0x13A6E54")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000E1")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000E2")]
	private enum PlaybackState
	{
		[Token(Token = "0x40004C8")]
		Playing,
		[Token(Token = "0x40004C9")]
		Paused,
		[Token(Token = "0x40004CA")]
		Rewinding,
		[Token(Token = "0x40004CB")]
		FastForwarding
	}

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x13A6E64", Offset = "0x13A6E64", VA = "0x13A6E64")]
	private void Start()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x13A7170", Offset = "0x13A7170", VA = "0x13A7170")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x13A729C", Offset = "0x13A729C", VA = "0x13A729C")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x13A73A8", Offset = "0x13A73A8", VA = "0x13A73A8")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x13A7488", Offset = "0x13A7488", VA = "0x13A7488")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x13A737C", Offset = "0x13A737C", VA = "0x13A737C")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x13A74D0", Offset = "0x13A74D0", VA = "0x13A74D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x13A705C", Offset = "0x13A705C", VA = "0x13A705C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x13A7810", Offset = "0x13A7810", VA = "0x13A7810")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000E3")]
public static class VectorUtil
{
	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1164C74", Offset = "0x1164C74", VA = "0x1164C74")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000E4")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1227174", Offset = "0x1227174", VA = "0x1227174")]
	private void Start()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1227678", Offset = "0x1227678", VA = "0x1227678")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1227738", Offset = "0x1227738", VA = "0x1227738")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1227964", Offset = "0x1227964", VA = "0x1227964")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1227A44", Offset = "0x1227A44", VA = "0x1227A44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1227B28", Offset = "0x1227B28", VA = "0x1227B28")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1227B9C", Offset = "0x1227B9C", VA = "0x1227B9C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1227BA4", Offset = "0x1227BA4", VA = "0x1227BA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890A2C", Offset = "0x890A2C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1227C08", Offset = "0x1227C08", VA = "0x1227C08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890A3C", Offset = "0x890A3C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1227C6C", Offset = "0x1227C6C", VA = "0x1227C6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890A4C", Offset = "0x890A4C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1227CD0", Offset = "0x1227CD0", VA = "0x1227CD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890A5C", Offset = "0x890A5C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000E5")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FB7C", Offset = "0x87FB7C")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000386")]
			[Address(RVA = "0xC0A850", Offset = "0xC0A850", VA = "0xC0A850", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000388")]
			[Address(RVA = "0xC0A898", Offset = "0xC0A898", VA = "0xC0A898", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0xC0A700", Offset = "0xC0A700", VA = "0xC0A700")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0xC0A72C", Offset = "0xC0A72C", VA = "0xC0A72C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0xC0A730", Offset = "0xC0A730", VA = "0xC0A730", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0xC0A858", Offset = "0xC0A858", VA = "0xC0A858", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x12B8148", Offset = "0x12B8148", VA = "0x12B8148")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x12B824C", Offset = "0x12B824C", VA = "0x12B824C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x12B81E0", Offset = "0x12B81E0", VA = "0x12B81E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x890A6C", Offset = "0x890A6C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x12B83F8", Offset = "0x12B83F8", VA = "0x12B83F8")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000E7")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x87FB8C", Offset = "0x87FB8C")]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x883CC8", Offset = "0x883CC8")]
	public int SubdivisionsU;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x883CE4", Offset = "0x883CE4")]
	public int SubdivisionsV;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x1277C7C", Offset = "0x1277C7C", VA = "0x1277C7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1278688", Offset = "0x1278688", VA = "0x1278688")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000E8")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700004E")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x107FDB8", Offset = "0x107FDB8", VA = "0x107FDB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x107FE0C", Offset = "0x107FE0C", VA = "0x107FE0C")]
	public void Start()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1080208", Offset = "0x1080208", VA = "0x1080208")]
	public void Update()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x10802F4", Offset = "0x10802F4", VA = "0x10802F4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x890B1C", Offset = "0x890B1C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600038F")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000390")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000391")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000392")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000393")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000394")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000395")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000396")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1080358", Offset = "0x1080358", VA = "0x1080358")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1080394", Offset = "0x1080394", VA = "0x1080394")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1080404", Offset = "0x1080404", VA = "0x1080404")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1080574", Offset = "0x1080574", VA = "0x1080574")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1080650", Offset = "0x1080650", VA = "0x1080650")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1080100", Offset = "0x1080100", VA = "0x1080100")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1080718", Offset = "0x1080718", VA = "0x1080718")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1080780", Offset = "0x1080780", VA = "0x1080780")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1080878", Offset = "0x1080878", VA = "0x1080878")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000E9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87FB9C", Offset = "0x87FB9C")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000EA")]
	public enum DrawMode
	{
		[Token(Token = "0x40004F6")]
		Opaque,
		[Token(Token = "0x40004F7")]
		OpaqueWithClip,
		[Token(Token = "0x40004F8")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40004F9")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x883D00", Offset = "0x883D00")]
	private Shader _transparentShader;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x883D38", Offset = "0x883D38")]
	private Shader _opaqueShader;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700004F")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xF69F4C", Offset = "0xF69F4C", VA = "0xF69F4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xF69FDC", Offset = "0xF69FDC", VA = "0xF69FDC")]
		set
		{
		}
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xF68A84", Offset = "0xF68A84", VA = "0xF68A84")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xF695B8", Offset = "0xF695B8", VA = "0xF695B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xF69638", Offset = "0xF69638", VA = "0xF69638")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xF69728", Offset = "0xF69728", VA = "0xF69728")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xF69818", Offset = "0xF69818", VA = "0xF69818", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xF69A24", Offset = "0xF69A24", VA = "0xF69A24")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xF6A0A8", Offset = "0xF6A0A8", VA = "0xF6A0A8")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000EB")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FBFC", Offset = "0x87FBFC")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xF92420", Offset = "0xF92420", VA = "0xF92420")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xF92428", Offset = "0xF92428", VA = "0xF92428")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xE156FC", Offset = "0xE156FC", VA = "0xE156FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xE15900", Offset = "0xE15900", VA = "0xE15900")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xE15A10", Offset = "0xE15A10", VA = "0xE15A10")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000ED")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87FC0C", Offset = "0x87FC0C")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20000EE")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000508")]
		MouseXAndY,
		[Token(Token = "0x4000509")]
		MouseX,
		[Token(Token = "0x400050A")]
		MouseY
	}

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x13A47CC", Offset = "0x13A47CC", VA = "0x13A47CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x13A49A4", Offset = "0x13A49A4", VA = "0x13A49A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x13A4A6C", Offset = "0x13A4A6C", VA = "0x13A4A6C")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000EF")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20000F0")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000510")]
		Uninitialized = -1,
		[Token(Token = "0x4000511")]
		NotEnabled,
		[Token(Token = "0x4000512")]
		Success,
		[Token(Token = "0x4000513")]
		StreamError,
		[Token(Token = "0x4000514")]
		ProcessError,
		[Token(Token = "0x4000515")]
		MaxStatValue
	}

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x13A87CC", Offset = "0x13A87CC", VA = "0x13A87CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x13A8A50", Offset = "0x13A8A50", VA = "0x13A8A50")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x13A8C8C", Offset = "0x13A8C8C", VA = "0x13A8C8C")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000F1")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20000F2")]
	private enum Parameters
	{
		[Token(Token = "0x4000521")]
		P_GAIN,
		[Token(Token = "0x4000522")]
		P_USEINVSQR,
		[Token(Token = "0x4000523")]
		P_NEAR,
		[Token(Token = "0x4000524")]
		P_FAR,
		[Token(Token = "0x4000525")]
		P_RADIUS,
		[Token(Token = "0x4000526")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000527")]
		P_AMBISTAT,
		[Token(Token = "0x4000528")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000529")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x400052A")]
		P_SENDLEVEL,
		[Token(Token = "0x400052B")]
		P_NUM
	}

	[Token(Token = "0x4000516")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000050")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x13A8ED0", Offset = "0x13A8ED0", VA = "0x13A8ED0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x13A8ED8", Offset = "0x13A8ED8", VA = "0x13A8ED8")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public float Gain
	{
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x13A8EE4", Offset = "0x13A8EE4", VA = "0x13A8EE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x13A8EEC", Offset = "0x13A8EEC", VA = "0x13A8EEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x13A8F1C", Offset = "0x13A8F1C", VA = "0x13A8F1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x13A8F24", Offset = "0x13A8F24", VA = "0x13A8F24")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public float Near
	{
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x13A8F30", Offset = "0x13A8F30", VA = "0x13A8F30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x13A8F38", Offset = "0x13A8F38", VA = "0x13A8F38")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public float Far
	{
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x13A8F6C", Offset = "0x13A8F6C", VA = "0x13A8F6C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x13A8F74", Offset = "0x13A8F74", VA = "0x13A8F74")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x13A8FA8", Offset = "0x13A8FA8", VA = "0x13A8FA8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x13A8FB0", Offset = "0x13A8FB0", VA = "0x13A8FB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public float ReverbSend
	{
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x13A8FE4", Offset = "0x13A8FE4", VA = "0x13A8FE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x13A8FEC", Offset = "0x13A8FEC", VA = "0x13A8FEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public bool EnableRfl
	{
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x13A9020", Offset = "0x13A9020", VA = "0x13A9020")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x13A9028", Offset = "0x13A9028", VA = "0x13A9028")]
		set
		{
		}
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x13A8CFC", Offset = "0x13A8CFC", VA = "0x13A8CFC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x890B54", Offset = "0x890B54")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x13A8DF0", Offset = "0x13A8DF0", VA = "0x13A8DF0")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x13A9034", Offset = "0x13A9034", VA = "0x13A9034")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x13A91A4", Offset = "0x13A91A4", VA = "0x13A91A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x13A91A8", Offset = "0x13A91A8", VA = "0x13A91A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x13A909C", Offset = "0x13A909C", VA = "0x13A909C")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x13A926C", Offset = "0x13A926C", VA = "0x13A926C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x13A965C", Offset = "0x13A965C", VA = "0x13A965C")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x13A8D70", Offset = "0x13A8D70", VA = "0x13A8D70")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x13A9734", Offset = "0x13A9734", VA = "0x13A9734")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000F3")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x400052D")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x400052F")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x13A9754", Offset = "0x13A9754", VA = "0x13A9754")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x13A9760", Offset = "0x13A9760", VA = "0x13A9760")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x13A9818", Offset = "0x13A9818", VA = "0x13A9818")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x13A9798", Offset = "0x13A9798", VA = "0x13A9798")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x13A9898", Offset = "0x13A9898", VA = "0x13A9898")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000F4")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20000F5")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20000F6")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000536")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000058")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x13A9BA4", Offset = "0x13A9BA4", VA = "0x13A9BA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000059")]
	public string filePath
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x13A9C38", Offset = "0x13A9C38", VA = "0x13A9C38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x13A9CB8", Offset = "0x13A9CB8", VA = "0x13A9CB8")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x13A9E20", Offset = "0x13A9E20", VA = "0x13A9E20")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x13A9E24", Offset = "0x13A9E24", VA = "0x13A9E24")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x13AA3FC", Offset = "0x13AA3FC", VA = "0x13AA3FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x13AA7A8", Offset = "0x13AA7A8", VA = "0x13AA7A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x13AA924", Offset = "0x13AA924", VA = "0x13AA924")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x13AB0C8", Offset = "0x13AB0C8", VA = "0x13AB0C8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x13AB104", Offset = "0x13AB104", VA = "0x13AB104")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x13AC90C", Offset = "0x13AC90C", VA = "0x13AC90C")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x13AC7E4", Offset = "0x13AC7E4", VA = "0x13AC7E4")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x13AA214", Offset = "0x13AA214", VA = "0x13AA214")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x13AA01C", Offset = "0x13AA01C", VA = "0x13AA01C")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x13ACF94", Offset = "0x13ACF94", VA = "0x13ACF94")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x13AD42C", Offset = "0x13AD42C", VA = "0x13AD42C")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000F7")]
internal class ONSPPropagation
{
	[Token(Token = "0x20000F8")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400053F")]
		Int8,
		[Token(Token = "0x4000540")]
		UInt8,
		[Token(Token = "0x4000541")]
		Int16,
		[Token(Token = "0x4000542")]
		UInt16,
		[Token(Token = "0x4000543")]
		Int32,
		[Token(Token = "0x4000544")]
		UInt32,
		[Token(Token = "0x4000545")]
		Int64,
		[Token(Token = "0x4000546")]
		UInt64,
		[Token(Token = "0x4000547")]
		Float16,
		[Token(Token = "0x4000548")]
		Float32,
		[Token(Token = "0x4000549")]
		Float64
	}

	[Token(Token = "0x20000F9")]
	public class ClientType
	{
		[Token(Token = "0x400054A")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x400054B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x400054C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x400054D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x400054E")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x400054F")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000550")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000551")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000552")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000553")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000554")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000555")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000556")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000557")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000558")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xC0F7E8", Offset = "0xC0F7E8", VA = "0xC0F7E8")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20000FA")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60003EB")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60003EC")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60003ED")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60003EE")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60003EF")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60003F0")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60003F1")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60003F2")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60003F3")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60003F4")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60003F5")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60003F6")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x60003F7")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60003F8")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60003F9")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20000FB")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000559")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700005B")]
		private IntPtr context
		{
			[Token(Token = "0x60003FA")]
			[Address(RVA = "0xC10524", Offset = "0xC10524", VA = "0xC10524")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xC10584", Offset = "0xC10584", VA = "0xC10584")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xC10614", Offset = "0xC10614", VA = "0xC10614")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xC106A4", Offset = "0xC106A4", VA = "0xC106A4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xC106C8", Offset = "0xC106C8", VA = "0xC106C8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xC10758", Offset = "0xC10758", VA = "0xC10758", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000400")]
		[Address(RVA = "0xC1077C", Offset = "0xC1077C", VA = "0xC1077C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000401")]
		[Address(RVA = "0xC10808", Offset = "0xC10808", VA = "0xC10808", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000402")]
		[Address(RVA = "0xC1082C", Offset = "0xC1082C", VA = "0xC1082C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000403")]
		[Address(RVA = "0xC108AC", Offset = "0xC108AC", VA = "0xC108AC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000404")]
		[Address(RVA = "0xC108B4", Offset = "0xC108B4", VA = "0xC108B4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000405")]
		[Address(RVA = "0xC109D4", Offset = "0xC109D4", VA = "0xC109D4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000406")]
		[Address(RVA = "0xC10AC8", Offset = "0xC10AC8", VA = "0xC10AC8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000407")]
		[Address(RVA = "0xC10B60", Offset = "0xC10B60", VA = "0xC10B60", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000408")]
		[Address(RVA = "0xC10B6C", Offset = "0xC10B6C", VA = "0xC10B6C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000409")]
		[Address(RVA = "0xC10C94", Offset = "0xC10C94", VA = "0xC10C94", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600040A")]
		[Address(RVA = "0xC10CA0", Offset = "0xC10CA0", VA = "0xC10CA0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600040B")]
		[Address(RVA = "0xC10D4C", Offset = "0xC10D4C", VA = "0xC10D4C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600040C")]
		[Address(RVA = "0xC10D58", Offset = "0xC10D58", VA = "0xC10D58")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600040D")]
		[Address(RVA = "0xC10E04", Offset = "0xC10E04", VA = "0xC10E04", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600040E")]
		[Address(RVA = "0xC10E10", Offset = "0xC10E10", VA = "0xC10E10")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600040F")]
		[Address(RVA = "0xC10EBC", Offset = "0xC10EBC", VA = "0xC10EBC", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000410")]
		[Address(RVA = "0xC10EC8", Offset = "0xC10EC8", VA = "0xC10EC8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000411")]
		[Address(RVA = "0xC10F54", Offset = "0xC10F54", VA = "0xC10F54", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000412")]
		[Address(RVA = "0xC10F78", Offset = "0xC10F78", VA = "0xC10F78")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000413")]
		[Address(RVA = "0xC10FF8", Offset = "0xC10FF8", VA = "0xC10FF8", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000414")]
		[Address(RVA = "0xC11000", Offset = "0xC11000", VA = "0xC11000")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000415")]
		[Address(RVA = "0xC110A8", Offset = "0xC110A8", VA = "0xC110A8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000416")]
		[Address(RVA = "0xC110B4", Offset = "0xC110B4", VA = "0xC110B4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000417")]
		[Address(RVA = "0xC1115C", Offset = "0xC1115C", VA = "0xC1115C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000418")]
		[Address(RVA = "0xC1116C", Offset = "0xC1116C", VA = "0xC1116C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000419")]
		[Address(RVA = "0xC111FC", Offset = "0xC111FC", VA = "0xC111FC", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xC11208", Offset = "0xC11208", VA = "0xC11208")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20000FC")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x400055B")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700005C")]
		private IntPtr context
		{
			[Token(Token = "0x600041B")]
			[Address(RVA = "0xC11250", Offset = "0xC11250", VA = "0xC11250")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600041C")]
		[Address(RVA = "0xC112B0", Offset = "0xC112B0", VA = "0xC112B0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600041D")]
		[Address(RVA = "0xC11340", Offset = "0xC11340", VA = "0xC11340")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xC113D0", Offset = "0xC113D0", VA = "0xC113D0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600041F")]
		[Address(RVA = "0xC113F4", Offset = "0xC113F4", VA = "0xC113F4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xC11484", Offset = "0xC11484", VA = "0xC11484", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000421")]
		[Address(RVA = "0xC114A8", Offset = "0xC114A8", VA = "0xC114A8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xC11538", Offset = "0xC11538", VA = "0xC11538", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000423")]
		[Address(RVA = "0xC1155C", Offset = "0xC1155C", VA = "0xC1155C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xC115DC", Offset = "0xC115DC", VA = "0xC115DC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000425")]
		[Address(RVA = "0xC115E4", Offset = "0xC115E4", VA = "0xC115E4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xC11704", Offset = "0xC11704", VA = "0xC11704", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000427")]
		[Address(RVA = "0xC117F8", Offset = "0xC117F8", VA = "0xC117F8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xC11890", Offset = "0xC11890", VA = "0xC11890", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000429")]
		[Address(RVA = "0xC1189C", Offset = "0xC1189C", VA = "0xC1189C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xC119C4", Offset = "0xC119C4", VA = "0xC119C4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600042B")]
		[Address(RVA = "0xC119D0", Offset = "0xC119D0", VA = "0xC119D0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600042C")]
		[Address(RVA = "0xC11A7C", Offset = "0xC11A7C", VA = "0xC11A7C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600042D")]
		[Address(RVA = "0xC11A88", Offset = "0xC11A88", VA = "0xC11A88")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600042E")]
		[Address(RVA = "0xC11B34", Offset = "0xC11B34", VA = "0xC11B34", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600042F")]
		[Address(RVA = "0xC11B40", Offset = "0xC11B40", VA = "0xC11B40")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000430")]
		[Address(RVA = "0xC11BEC", Offset = "0xC11BEC", VA = "0xC11BEC", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000431")]
		[Address(RVA = "0xC11BF8", Offset = "0xC11BF8", VA = "0xC11BF8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000432")]
		[Address(RVA = "0xC11C88", Offset = "0xC11C88", VA = "0xC11C88", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000433")]
		[Address(RVA = "0xC11CAC", Offset = "0xC11CAC", VA = "0xC11CAC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000434")]
		[Address(RVA = "0xC11D2C", Offset = "0xC11D2C", VA = "0xC11D2C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000435")]
		[Address(RVA = "0xC11D34", Offset = "0xC11D34", VA = "0xC11D34")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000436")]
		[Address(RVA = "0xC11DDC", Offset = "0xC11DDC", VA = "0xC11DDC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000437")]
		[Address(RVA = "0xC11DE8", Offset = "0xC11DE8", VA = "0xC11DE8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000438")]
		[Address(RVA = "0xC11E90", Offset = "0xC11E90", VA = "0xC11E90", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000439")]
		[Address(RVA = "0xC11EA0", Offset = "0xC11EA0", VA = "0xC11EA0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600043A")]
		[Address(RVA = "0xC11F30", Offset = "0xC11F30", VA = "0xC11F30", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xC11F3C", Offset = "0xC11F3C", VA = "0xC11F3C")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20000FD")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x400055D")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700005D")]
		private IntPtr context
		{
			[Token(Token = "0x600043C")]
			[Address(RVA = "0xC0F7F0", Offset = "0xC0F7F0", VA = "0xC0F7F0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600043D")]
		[Address(RVA = "0xC0F850", Offset = "0xC0F850", VA = "0xC0F850")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600043E")]
		[Address(RVA = "0xC0F8E0", Offset = "0xC0F8E0", VA = "0xC0F8E0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600043F")]
		[Address(RVA = "0xC0F970", Offset = "0xC0F970", VA = "0xC0F970", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000440")]
		[Address(RVA = "0xC0F994", Offset = "0xC0F994", VA = "0xC0F994")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000441")]
		[Address(RVA = "0xC0FA24", Offset = "0xC0FA24", VA = "0xC0FA24", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000442")]
		[Address(RVA = "0xC0FA48", Offset = "0xC0FA48", VA = "0xC0FA48")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000443")]
		[Address(RVA = "0xC0FAD8", Offset = "0xC0FAD8", VA = "0xC0FAD8", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000444")]
		[Address(RVA = "0xC0FAFC", Offset = "0xC0FAFC", VA = "0xC0FAFC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000445")]
		[Address(RVA = "0xC0FB7C", Offset = "0xC0FB7C", VA = "0xC0FB7C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000446")]
		[Address(RVA = "0xC0FB84", Offset = "0xC0FB84", VA = "0xC0FB84")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000447")]
		[Address(RVA = "0xC0FCA4", Offset = "0xC0FCA4", VA = "0xC0FCA4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000448")]
		[Address(RVA = "0xC0FD98", Offset = "0xC0FD98", VA = "0xC0FD98")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000449")]
		[Address(RVA = "0xC0FE30", Offset = "0xC0FE30", VA = "0xC0FE30", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600044A")]
		[Address(RVA = "0xC0FE3C", Offset = "0xC0FE3C", VA = "0xC0FE3C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600044B")]
		[Address(RVA = "0xC0FF64", Offset = "0xC0FF64", VA = "0xC0FF64", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600044C")]
		[Address(RVA = "0xC0FF70", Offset = "0xC0FF70", VA = "0xC0FF70")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600044D")]
		[Address(RVA = "0xC1001C", Offset = "0xC1001C", VA = "0xC1001C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600044E")]
		[Address(RVA = "0xC10028", Offset = "0xC10028", VA = "0xC10028")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600044F")]
		[Address(RVA = "0xC100D4", Offset = "0xC100D4", VA = "0xC100D4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000450")]
		[Address(RVA = "0xC100E0", Offset = "0xC100E0", VA = "0xC100E0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000451")]
		[Address(RVA = "0xC1018C", Offset = "0xC1018C", VA = "0xC1018C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000452")]
		[Address(RVA = "0xC10198", Offset = "0xC10198", VA = "0xC10198")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000453")]
		[Address(RVA = "0xC10228", Offset = "0xC10228", VA = "0xC10228", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000454")]
		[Address(RVA = "0xC1024C", Offset = "0xC1024C", VA = "0xC1024C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000455")]
		[Address(RVA = "0xC102CC", Offset = "0xC102CC", VA = "0xC102CC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000456")]
		[Address(RVA = "0xC102D4", Offset = "0xC102D4", VA = "0xC102D4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000457")]
		[Address(RVA = "0xC1037C", Offset = "0xC1037C", VA = "0xC1037C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000458")]
		[Address(RVA = "0xC10388", Offset = "0xC10388", VA = "0xC10388")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000459")]
		[Address(RVA = "0xC10430", Offset = "0xC10430", VA = "0xC10430", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xC10440", Offset = "0xC10440", VA = "0xC10440")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600045B")]
		[Address(RVA = "0xC104D0", Offset = "0xC104D0", VA = "0xC104D0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0xC104DC", Offset = "0xC104DC", VA = "0xC104DC")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700005A")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x13A98A8", Offset = "0x13A98A8", VA = "0x13A98A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x13A9914", Offset = "0x13A9914", VA = "0x13A9914")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x13A9B9C", Offset = "0x13A9B9C", VA = "0x13A9B9C")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000FE")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20000FF")]
	public enum Preset
	{
		[Token(Token = "0x4000565")]
		Custom,
		[Token(Token = "0x4000566")]
		AcousticTile,
		[Token(Token = "0x4000567")]
		Brick,
		[Token(Token = "0x4000568")]
		BrickPainted,
		[Token(Token = "0x4000569")]
		Carpet,
		[Token(Token = "0x400056A")]
		CarpetHeavy,
		[Token(Token = "0x400056B")]
		CarpetHeavyPadded,
		[Token(Token = "0x400056C")]
		CeramicTile,
		[Token(Token = "0x400056D")]
		Concrete,
		[Token(Token = "0x400056E")]
		ConcreteRough,
		[Token(Token = "0x400056F")]
		ConcreteBlock,
		[Token(Token = "0x4000570")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000571")]
		Curtain,
		[Token(Token = "0x4000572")]
		Foliage,
		[Token(Token = "0x4000573")]
		Glass,
		[Token(Token = "0x4000574")]
		GlassHeavy,
		[Token(Token = "0x4000575")]
		Grass,
		[Token(Token = "0x4000576")]
		Gravel,
		[Token(Token = "0x4000577")]
		GypsumBoard,
		[Token(Token = "0x4000578")]
		PlasterOnBrick,
		[Token(Token = "0x4000579")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x400057A")]
		Soil,
		[Token(Token = "0x400057B")]
		SoundProof,
		[Token(Token = "0x400057C")]
		Snow,
		[Token(Token = "0x400057D")]
		Steel,
		[Token(Token = "0x400057E")]
		Water,
		[Token(Token = "0x400057F")]
		WoodThin,
		[Token(Token = "0x4000580")]
		WoodThick,
		[Token(Token = "0x4000581")]
		WoodFloor,
		[Token(Token = "0x4000582")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000100")]
	public sealed class Point
	{
		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xC11F84", Offset = "0xC11F84", VA = "0xC11F84")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xC11FBC", Offset = "0xC11FBC", VA = "0xC11FBC")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xC12028", Offset = "0xC12028", VA = "0xC12028")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000101")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x87FC44", Offset = "0x87FC44")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000102")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FC7C", Offset = "0x87FC7C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6000489")]
			[Address(RVA = "0xF9D628", Offset = "0xF9D628", VA = "0xF9D628")]
			public <>c()
			{
			}

			[Token(Token = "0x600048A")]
			[Address(RVA = "0xF9D630", Offset = "0xF9D630", VA = "0xF9D630")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x600048B")]
			[Address(RVA = "0xF9D648", Offset = "0xF9D648", VA = "0xF9D648")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x1700005F")]
		public float Item
		{
			[Token(Token = "0x6000486")]
			[Address(RVA = "0xC12040", Offset = "0xC12040", VA = "0xC12040")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0xC12494", Offset = "0xC12494", VA = "0xC12494")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883DF0", Offset = "0x883DF0")]
	public Spectrum absorption;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883E28", Offset = "0x883E28")]
	public Spectrum transmission;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883E60", Offset = "0x883E60")]
	public Spectrum scattering;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700005E")]
	public Preset preset
	{
		[Token(Token = "0x600045D")]
		[Address(RVA = "0x13AD514", Offset = "0x13AD514", VA = "0x13AD514")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600045E")]
		[Address(RVA = "0x13AD51C", Offset = "0x13AD51C", VA = "0x13AD51C")]
		set
		{
		}
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x13AD544", Offset = "0x13AD544", VA = "0x13AD544")]
	private void Start()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x13ACE08", Offset = "0x13ACE08", VA = "0x13ACE08")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x13ADBB4", Offset = "0x13ADBB4", VA = "0x13ADBB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x13ADBB8", Offset = "0x13ADBB8", VA = "0x13ADBB8")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x13AD548", Offset = "0x13AD548", VA = "0x13AD548")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x13AC650", Offset = "0x13AC650", VA = "0x13AC650")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x13ADCA4", Offset = "0x13ADCA4", VA = "0x13ADCA4")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x13AE164", Offset = "0x13AE164", VA = "0x13AE164")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x13AE628", Offset = "0x13AE628", VA = "0x13AE628")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x13AEAE8", Offset = "0x13AEAE8", VA = "0x13AEAE8")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x13AEFBC", Offset = "0x13AEFBC", VA = "0x13AEFBC")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x13AF47C", Offset = "0x13AF47C", VA = "0x13AF47C")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x13AF93C", Offset = "0x13AF93C", VA = "0x13AF93C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x13AFE04", Offset = "0x13AFE04", VA = "0x13AFE04")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x13B02CC", Offset = "0x13B02CC", VA = "0x13B02CC")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x13B0798", Offset = "0x13B0798", VA = "0x13B0798")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x13B0C60", Offset = "0x13B0C60", VA = "0x13B0C60")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x13B1130", Offset = "0x13B1130", VA = "0x13B1130")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x13B15F0", Offset = "0x13B15F0", VA = "0x13B15F0")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x13B1ABC", Offset = "0x13B1ABC", VA = "0x13B1ABC")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x13B1F6C", Offset = "0x13B1F6C", VA = "0x13B1F6C")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x13B2428", Offset = "0x13B2428", VA = "0x13B2428")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x13B27D0", Offset = "0x13B27D0", VA = "0x13B27D0")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x13B2B70", Offset = "0x13B2B70", VA = "0x13B2B70")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x13B3040", Offset = "0x13B3040", VA = "0x13B3040")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x13B350C", Offset = "0x13B350C", VA = "0x13B350C")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x13B39D0", Offset = "0x13B39D0", VA = "0x13B39D0")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x13B3D7C", Offset = "0x13B3D7C", VA = "0x13B3D7C")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x13B3F00", Offset = "0x13B3F00", VA = "0x13B3F00")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x13B429C", Offset = "0x13B429C", VA = "0x13B429C")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x13B474C", Offset = "0x13B474C", VA = "0x13B474C")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x13B4C10", Offset = "0x13B4C10", VA = "0x13B4C10")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x13B50C8", Offset = "0x13B50C8", VA = "0x13B50C8")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x13B5588", Offset = "0x13B5588", VA = "0x13B5588")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x13B5A50", Offset = "0x13B5A50", VA = "0x13B5A50")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x13B5F14", Offset = "0x13B5F14", VA = "0x13B5F14")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000103")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xF5DC8C", Offset = "0xF5DC8C", VA = "0xF5DC8C")]
	private void Update()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xF5DD5C", Offset = "0xF5DD5C", VA = "0xF5DD5C")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000104")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000060")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0xF5E39C", Offset = "0xF5E39C", VA = "0xF5E39C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xF5E4DC", Offset = "0xF5E4DC", VA = "0xF5E4DC")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000105")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x400058D")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000490")]
	[Address(RVA = "0xF5E4EC", Offset = "0xF5E4EC", VA = "0xF5E4EC")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xF5E584", Offset = "0xF5E584", VA = "0xF5E584")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xF5E6A4", Offset = "0xF5E6A4", VA = "0xF5E6A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xF5E6A8", Offset = "0xF5E6A8", VA = "0xF5E6A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xF5E6AC", Offset = "0xF5E6AC", VA = "0xF5E6AC")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000106")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000107")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x400059C")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40005A2")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xF6C118", Offset = "0xF6C118", VA = "0xF6C118")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xF6BFA8", Offset = "0xF6BFA8", VA = "0xF6BFA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x890B68", Offset = "0x890B68")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xF6C120", Offset = "0xF6C120", VA = "0xF6C120")]
	private void Start()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xF6C264", Offset = "0xF6C264", VA = "0xF6C264")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xF6C360", Offset = "0xF6C360", VA = "0xF6C360")]
	private void Update()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xF6CC7C", Offset = "0xF6CC7C", VA = "0xF6CC7C")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600049B")]
	[Address(RVA = "0xF6C1D0", Offset = "0xF6C1D0", VA = "0xF6C1D0")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600049C")]
	[Address(RVA = "0xF6C2D0", Offset = "0xF6C2D0", VA = "0xF6C2D0")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600049D")]
	[Address(RVA = "0xF6C9E4", Offset = "0xF6C9E4", VA = "0xF6C9E4")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x600049E")]
	[Address(RVA = "0xF6CA64", Offset = "0xF6CA64", VA = "0xF6CA64")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x600049F")]
	[Address(RVA = "0xF6CAEC", Offset = "0xF6CAEC", VA = "0xF6CAEC")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xF6CB74", Offset = "0xF6CB74", VA = "0xF6CB74")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xF6CBF4", Offset = "0xF6CBF4", VA = "0xF6CBF4")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xF6D944", Offset = "0xF6D944", VA = "0xF6D944")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xF6D9EC", Offset = "0xF6D9EC", VA = "0xF6D9EC")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xF6DA94", Offset = "0xF6DA94", VA = "0xF6DA94")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000108")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000109")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xF5DD6C", Offset = "0xF5DD6C", VA = "0xF5DD6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xF5DD70", Offset = "0xF5DD70", VA = "0xF5DD70")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xF5DD74", Offset = "0xF5DD74", VA = "0xF5DD74")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xF5DEEC", Offset = "0xF5DEEC", VA = "0xF5DEEC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xF5DDC0", Offset = "0xF5DDC0", VA = "0xF5DDC0")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xF5DE58", Offset = "0xF5DE58", VA = "0xF5DE58")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xF5DF38", Offset = "0xF5DF38", VA = "0xF5DF38")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xF5DFD8", Offset = "0xF5DFD8", VA = "0xF5DFD8")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xF5E16C", Offset = "0xF5E16C", VA = "0xF5E16C")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xF5E300", Offset = "0xF5E300", VA = "0xF5E300")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x200010A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87FC8C", Offset = "0x87FC8C")]
public class StencilOutlinePostEffect : MonoBehaviour
{
	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Shader _shader;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color _outlineColor;

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xE16174", Offset = "0xE16174", VA = "0xE16174")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xE16178", Offset = "0xE16178", VA = "0xE16178")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xE163C8", Offset = "0xE163C8", VA = "0xE163C8")]
	public StencilOutlinePostEffect()
	{
	}
}
[Token(Token = "0x200010B")]
public static class CrcUtility
{
	[Token(Token = "0x40005AB")]
	private const int TableLength = 256;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static uint[] _crcTable;

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x127E254", Offset = "0x127E254", VA = "0x127E254")]
	private static void BuildCrc32Table()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x127E33C", Offset = "0x127E33C", VA = "0x127E33C")]
	public static uint Calc32(byte[] buf)
	{
		return default(uint);
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x127E41C", Offset = "0x127E41C", VA = "0x127E41C")]
	public static string Uint2String(uint crc)
	{
		return null;
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x127E4A0", Offset = "0x127E4A0", VA = "0x127E4A0")]
	public static uint String2Uint(string data)
	{
		return default(uint);
	}
}
[Token(Token = "0x200010C")]
public sealed class NonEditableAttribute : PropertyAttribute
{
	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x13A87C4", Offset = "0x13A87C4", VA = "0x13A87C4")]
	public NonEditableAttribute()
	{
	}
}
[Token(Token = "0x200010D")]
public static class ButtonExtension
{
}
[Token(Token = "0x200010E")]
public static class CanvasGroupExtension
{
	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1274754", Offset = "0x1274754", VA = "0x1274754")]
	public static void Show(this CanvasGroup canvasGroup)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x127488C", Offset = "0x127488C", VA = "0x127488C")]
	public static void Hide(this CanvasGroup canvasGroup)
	{
	}
}
[Token(Token = "0x200010F")]
public static class DictionaryExtensions
{
	[Token(Token = "0x60004BF")]
	public static bool IsEmpty<TKey, TValue>(this IDictionary<TKey, TValue> source)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C0")]
	public static void AddOrReplace<TKey, TValue>(this Dictionary<TKey, TValue> self, TKey key, TValue value)
	{
	}

	[Token(Token = "0x60004C1")]
	public static TValue SafeGet<TKey, TValue>(this IDictionary<TKey, TValue> source, TKey key) where TValue : new()
	{
		return (TValue)null;
	}

	[Token(Token = "0x60004C2")]
	public static TValue NullGet<TKey, TValue>(this IDictionary<TKey, TValue> source, TKey key) where TValue : class
	{
		return null;
	}

	[Token(Token = "0x60004C3")]
	public static TValue DefaultGet<TKey, TValue>(this IDictionary<TKey, TValue> source, TKey key) where TValue : struct
	{
		return (TValue)null;
	}

	[Token(Token = "0x60004C4")]
	public static void MergeSecond<TKey, TValue>(this IDictionary<TKey, TValue> first, IDictionary<TKey, TValue> second)
	{
	}
}
[Token(Token = "0x2000110")]
public static class GameObjectExtension
{
	[Token(Token = "0x60004C5")]
	public static T GetOrAddComponent<T>(this GameObject target) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60004C6")]
	public static Dictionary<string, T> GetComponentsToDictionary<T>(this GameObject target) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60004C7")]
	public static Dictionary<string, T> GetComponentsChildrenToDictionary<T>(this GameObject target) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x12B4524", Offset = "0x12B4524", VA = "0x12B4524")]
	public static void DestroyAllChildren(this GameObject target)
	{
	}
}
[Token(Token = "0x2000111")]
public static class InputFieldExtension
{
	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x178E988", Offset = "0x178E988", VA = "0x178E988")]
	public static void SetTextExtension(this InputField inputField, string message, bool isRayCastTarget = false)
	{
	}
}
[Token(Token = "0x2000112")]
public static class LinqExtension
{
	[Token(Token = "0x2000113")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FD3C", Offset = "0x87FD3C")]
	private sealed class <>c__DisplayClass0_0<TItem, TKey>
	{
		[Token(Token = "0x2000114")]
		private sealed class <<Distinct>g__Enumerate|0>d : IEnumerable<TItem>, IEnumerable, IEnumerator<TItem>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40005AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40005B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TItem <>2__current;

			[Token(Token = "0x40005B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40005B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass0_0<TItem, TKey> <>4__this;

			[Token(Token = "0x40005B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private HashSet<TKey> <set>5__2;

			[Token(Token = "0x40005B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<TItem> <>7__wrap2;

			[Token(Token = "0x17000061")]
			private TItem System.Collections.Generic.IEnumerator<TItem>.Current
			{
				[Token(Token = "0x60004D2")]
				[DebuggerHidden]
				get
				{
					return (TItem)null;
				}
			}

			[Token(Token = "0x17000062")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004D4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004CE")]
			[DebuggerHidden]
			public <<Distinct>g__Enumerate|0>d(int <>1__state)
			{
			}

			[Token(Token = "0x60004CF")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004D0")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004D1")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60004D3")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60004D5")]
			[DebuggerHidden]
			private IEnumerator<TItem> System.Collections.Generic.IEnumerable<TItem>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60004D6")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerable<TItem> source;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<TItem, TKey> keySelector;

		[Token(Token = "0x60004CC")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x60004CD")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x890CB8", Offset = "0x890CB8")]
		internal IEnumerable<TItem> <Distinct>g__Enumerate|0()
		{
			return null;
		}
	}

	[Token(Token = "0x60004CA")]
	public static IEnumerable<TItem> Distinct<TItem, TKey>(this IEnumerable<TItem> source, Func<TItem, TKey> keySelector)
	{
		return null;
	}

	[Token(Token = "0x60004CB")]
	public static T RandomAt<T>(this IEnumerable<T> ie)
	{
		return (T)null;
	}
}
[Token(Token = "0x2000115")]
public static class ListExtension
{
	[Token(Token = "0x60004D7")]
	public static void AddToNotDuplicate<T>(this List<T> list, T t)
	{
	}

	[Token(Token = "0x60004D8")]
	public static void RemoveDuplicate<T>(this List<T> list)
	{
	}

	[Token(Token = "0x60004D9")]
	public static List<T> Shuffle<T>(this List<T> list)
	{
		return null;
	}

	[Token(Token = "0x60004DA")]
	public static T GetAndRemove<T>(this List<T> list, int targetNo)
	{
		return (T)null;
	}

	[Token(Token = "0x60004DB")]
	public static T PopTop<T>(this List<T> list)
	{
		return (T)null;
	}

	[Token(Token = "0x60004DC")]
	public static T PopBottom<T>(this List<T> list)
	{
		return (T)null;
	}

	[Token(Token = "0x60004DD")]
	public static T GetAtRandom<T>(this List<T> list)
	{
		return (T)null;
	}

	[Token(Token = "0x60004DE")]
	public static T GetAndRemoveAtRandom<T>(this List<T> list)
	{
		return (T)null;
	}

	[Token(Token = "0x60004DF")]
	public static bool DuplicateListValue<T>(this List<T> list, List<T> checkList)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E0")]
	public static void RemoveValueFromList<T>(this List<T> list, List<T> checkList)
	{
	}

	[Token(Token = "0x60004E1")]
	public static bool IsEmpty<T>(this List<T> source)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E2")]
	public static T SafeGet<T>(this List<T> list, int index) where T : new()
	{
		return (T)null;
	}

	[Token(Token = "0x60004E3")]
	public static T NullGet<T>(this List<T> list, int index) where T : class
	{
		return null;
	}

	[Token(Token = "0x60004E4")]
	public static T DefaultGet<T>(this List<T> list, int index) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x60004E5")]
	public static void Swap<T>(this List<T> list, int baseIndex, int targetIndex)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x107FACC", Offset = "0x107FACC", VA = "0x107FACC")]
	public static bool ContainsByGameObject(this List<GameObject> source, GameObject check)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000116")]
public static class SkeletonAnimationExtension
{
	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xE0CF7C", Offset = "0xE0CF7C", VA = "0xE0CF7C")]
	public static void ChangeSlotSprite(this SkeletonAnimation skeletonAnimation, string slotName, Sprite changeSprite)
	{
	}
}
[Token(Token = "0x2000117")]
public static class StringExtensions
{
	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xE0B968", Offset = "0xE0B968", VA = "0xE0B968")]
	public static bool IsEmpty(this string source)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xE16484", Offset = "0xE16484", VA = "0xE16484")]
	public static bool IsExistNewLineCode(this string source)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xE164DC", Offset = "0xE164DC", VA = "0xE164DC")]
	public static int ToInt(this string source, int defaultValue = 0)
	{
		return default(int);
	}
}
[Token(Token = "0x2000118")]
public static class TextExtensionFroGame
{
	[Token(Token = "0x40005B5")]
	private const string DefaultFont1 = "FOT-RodinWanpakuPro-B";

	[Token(Token = "0x40005B6")]
	private const string DefaultFont2 = "LITHOSPRO-BLACK";

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xFA1484", Offset = "0xFA1484", VA = "0xFA1484")]
	public static void SetTextExtension(this Text text, string message, bool isRayCastTarget = false)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xFA1630", Offset = "0xFA1630", VA = "0xFA1630")]
	public static void SetTextExtension(this Text text, MessageId messageId)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xFA16A8", Offset = "0xFA16A8", VA = "0xFA16A8")]
	public static void SetTextExtension(this Text text, int messageId)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xFA1720", Offset = "0xFA1720", VA = "0xFA1720")]
	public static void SetTextExtension(this Text text, MessageId messageId, string k, string v)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xFA17B0", Offset = "0xFA17B0", VA = "0xFA17B0")]
	public static void SetTextExtension(this Text text, int messageId, string k, string v)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xFA1840", Offset = "0xFA1840", VA = "0xFA1840")]
	public static void SetTextExtension(this Text text, MessageId messageId, string[] k, string[] v)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xFA18D0", Offset = "0xFA18D0", VA = "0xFA18D0")]
	public static void SetTextExtension(this Text text, int messageId, string[] k, string[] v)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xFA14E8", Offset = "0xFA14E8", VA = "0xFA14E8")]
	private static void UpdateTextFont(Text text)
	{
	}
}
[Token(Token = "0x2000119")]
public static class Vector3Extension
{
	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1164AAC", Offset = "0x1164AAC", VA = "0x1164AAC")]
	public static Vector3 Clone(this Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x1164AB0", Offset = "0x1164AB0", VA = "0x1164AB0")]
	public static Vector3 Negative(this Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x1164AC0", Offset = "0x1164AC0", VA = "0x1164AC0")]
	public static float Volume(this Vector3 vec)
	{
		return default(float);
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x1164AD0", Offset = "0x1164AD0", VA = "0x1164AD0")]
	public static float VolumeForGame(this Vector3 vec)
	{
		return default(float);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x1164B00", Offset = "0x1164B00", VA = "0x1164B00")]
	public static string ToStringGame(this Vector3 vec, string format)
	{
		return null;
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1164C54", Offset = "0x1164C54", VA = "0x1164C54")]
	public static Vector3 ScaleVector(this Vector3 vec, Vector3 scale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x1164C64", Offset = "0x1164C64", VA = "0x1164C64")]
	public static Vector3 AbsVector(this Vector3 vec)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200011A")]
public class ZVRDistanceGrabbable : ZVRGrabbable, ITeleportMessageReciever, IEventSystemHandler, IGrabAfterMessageReciever
{
	[Token(Token = "0x200011B")]
	private enum CollisionFlag
	{
		[Token(Token = "0x40005BE")]
		Teleport,
		[Token(Token = "0x40005BF")]
		GrabberGravitation
	}

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly BitFlag _disableCollision;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ZVRDistanceGrabber _zvrDistanceGrabber;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _grabberGravitation;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool _storeIsKinematicTeleport;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool _reserveUpdateGrabbedDistance;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883ED8", Offset = "0x883ED8")]
	private bool <IsMovingObjectToHand>k__BackingField;

	[Token(Token = "0x17000063")]
	public bool IsMovingObjectToHand
	{
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x11695F4", Offset = "0x11695F4", VA = "0x11695F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890FA8", Offset = "0x890FA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x11695FC", Offset = "0x11695FC", VA = "0x11695FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890FB8", Offset = "0x890FB8")]
		private set
		{
		}
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x1169608", Offset = "0x1169608", VA = "0x1169608", Slot = "10")]
	public void OnGrabBeginAfter(OVRGrabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x1169754", Offset = "0x1169754", VA = "0x1169754", Slot = "5")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x116989C", Offset = "0x116989C", VA = "0x116989C", Slot = "7")]
	protected override void CheckReleaseByDistance()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x11699CC", Offset = "0x11699CC", VA = "0x11699CC", Slot = "8")]
	public void OnPreTeleport()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1169AA4", Offset = "0x1169AA4", VA = "0x1169AA4", Slot = "9")]
	public void OnPostTeleport()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1169704", Offset = "0x1169704", VA = "0x1169704")]
	private void BeginGrabberGravitation()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1169838", Offset = "0x1169838", VA = "0x1169838")]
	private void EndGrabberGravitation()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x1169B74", Offset = "0x1169B74", VA = "0x1169B74")]
	public void OnMovingObjectToHand()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x1169C38", Offset = "0x1169C38", VA = "0x1169C38")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x890FC8", Offset = "0x890FC8")]
	private void DebugLog(string text)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x1169C9C", Offset = "0x1169C9C", VA = "0x1169C9C")]
	public ZVRDistanceGrabbable()
	{
	}
}
[Token(Token = "0x200011C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87FD9C", Offset = "0x87FD9C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87FD9C", Offset = "0x87FD9C")]
public class ZVRDistanceGrabber : ZVRGrabber
{
	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x883EE8", Offset = "0x883EE8")]
	private float m_noSnapThreshhold;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float m_objectPullVelocity;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private int m_grabObjectsInLayer;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float m_objectPullMaxRotationRate;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool m_movingObjectToHand;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ZVRDistanceGrabbable _grabbedDistanceGrabbable;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool _enableInput;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ZVRLaserPointer _laserPointer;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool _directPositionToGrabbed;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject _forceMovingObject;

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x1169D74", Offset = "0x1169D74", VA = "0x1169D74", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x1169ED8", Offset = "0x1169ED8", VA = "0x1169ED8")]
	public void SetEnableInput(bool flag)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x1169EE4", Offset = "0x1169EE4", VA = "0x1169EE4", Slot = "13")]
	public override bool IsGrabbingInHand()
	{
		return default(bool);
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x1169F6C", Offset = "0x1169F6C", VA = "0x1169F6C")]
	public bool IsMovingObjectToHand()
	{
		return default(bool);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x1169F74", Offset = "0x1169F74", VA = "0x1169F74", Slot = "7")]
	protected override void GrabBegin()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x116A570", Offset = "0x116A570", VA = "0x116A570")]
	private void GrabAttachHand(ZVRDistanceGrabbable targetDistanceGrabbable, Collider targetCollider)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x116A9C8", Offset = "0x116A9C8", VA = "0x116A9C8", Slot = "8")]
	protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x116A068", Offset = "0x116A068", VA = "0x116A068")]
	private void FindTargetTouchByColliderTrigger(out ZVRDistanceGrabbable dgOut, out Collider collOut)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x116A3C0", Offset = "0x116A3C0", VA = "0x116A3C0")]
	private void FindTargetDistanceByLaserPointer(out ZVRDistanceGrabbable dgOut, out Collider collOut)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x116AD80", Offset = "0x116AD80", VA = "0x116AD80")]
	public void DistanceForceGrabAndNotRelease(ZVRDistanceGrabbable targetDistanceGrabbable)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x116AE54", Offset = "0x116AE54", VA = "0x116AE54")]
	public void SetDirectPositionToGrabbed()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x116AE60", Offset = "0x116AE60", VA = "0x116AE60")]
	public void SetForceMovingObject(GameObject obj)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x116AE68", Offset = "0x116AE68", VA = "0x116AE68")]
	public void ReleaseForceMovingObject()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x116AE70", Offset = "0x116AE70", VA = "0x116AE70")]
	public void SetLocalScale(float scaleSize = 1f)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x116AEE4", Offset = "0x116AEE4", VA = "0x116AEE4")]
	public ZVRDistanceGrabber()
	{
	}
}
[Token(Token = "0x200011D")]
public class ZVRGrabbable : OVRGrabbable
{
	[Serializable]
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FE30", Offset = "0x87FE30")]
	private sealed class <>c
	{
		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Collider, bool> <>9__18_0;

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xF9BC90", Offset = "0xF9BC90", VA = "0xF9BC90")]
		public <>c()
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0xF9BC98", Offset = "0xF9BC98", VA = "0xF9BC98")]
		internal bool <Awake>b__18_0(Collider c)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883F54", Offset = "0x883F54")]
	protected bool _releaseByDistance;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883FA0", Offset = "0x883FA0")]
	protected bool _enablePhysicsGrabbed;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x883FEC", Offset = "0x883FEC")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x883FEC", Offset = "0x883FEC")]
	protected float _acceptableDistance;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884050", Offset = "0x884050")]
	private readonly StateGameObjectNotify <DestroyGameObjectNotify>k__BackingField;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884060", Offset = "0x884060")]
	private Rigidbody <MyRigidbody>k__BackingField;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IDisposable _updateGrabDisposable;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _sqrAcceptableDistance;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _firstGrabbedDistance;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _isCollision;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool _storeUseGravityGrab;

	[Token(Token = "0x17000064")]
	public StateGameObjectNotify DestroyGameObjectNotify
	{
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x116AF1C", Offset = "0x116AF1C", VA = "0x116AF1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891000", Offset = "0x891000")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000065")]
	protected Rigidbody MyRigidbody
	{
		[Token(Token = "0x6000516")]
		[Address(RVA = "0x116AF24", Offset = "0x116AF24", VA = "0x116AF24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891010", Offset = "0x891010")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000517")]
		[Address(RVA = "0x116AF2C", Offset = "0x116AF2C", VA = "0x116AF2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891020", Offset = "0x891020")]
		private set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public new bool allowOffhandGrab
	{
		[Token(Token = "0x6000518")]
		[Address(RVA = "0x116AF34", Offset = "0x116AF34", VA = "0x116AF34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000519")]
		[Address(RVA = "0x116AF3C", Offset = "0x116AF3C", VA = "0x116AF3C")]
		set
		{
		}
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x116AF48", Offset = "0x116AF48", VA = "0x116AF48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x116B0CC", Offset = "0x116B0CC", VA = "0x116B0CC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x116B160", Offset = "0x116B160", VA = "0x116B160", Slot = "4")]
	public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x116977C", Offset = "0x116977C", VA = "0x116977C", Slot = "5")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x116B624", Offset = "0x116B624", VA = "0x116B624")]
	private void ThrowOnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x116B3AC", Offset = "0x116B3AC", VA = "0x116B3AC")]
	private void EnablePhysicsOnGrab()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x116B550", Offset = "0x116B550", VA = "0x116B550")]
	private void DisablePhysicsOnGrab()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x116B7A0", Offset = "0x116B7A0", VA = "0x116B7A0")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x116B7AC", Offset = "0x116B7AC", VA = "0x116B7AC")]
	private void OnCollisionExit(Collision other)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x116B7B4", Offset = "0x116B7B4", VA = "0x116B7B4")]
	private void OnGrabUpdate()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x1169918", Offset = "0x1169918", VA = "0x1169918", Slot = "7")]
	protected virtual void CheckReleaseByDistance()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x116B700", Offset = "0x116B700", VA = "0x116B700")]
	private float CalcHandGrabDistanceSqr()
	{
		return default(float);
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x11698F4", Offset = "0x11698F4", VA = "0x11698F4")]
	protected void SetupFirstGrabbedDistance()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x116B1CC", Offset = "0x116B1CC", VA = "0x116B1CC")]
	private void SetPlayerIgnoreCollision(GameObject grabbable, bool ignore)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x116B7C0", Offset = "0x116B7C0", VA = "0x116B7C0")]
	public bool IsReleaseByDistance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x116B7C8", Offset = "0x116B7C8", VA = "0x116B7C8")]
	public bool IsEnablePhysicsGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x116B7D0", Offset = "0x116B7D0", VA = "0x116B7D0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x891030", Offset = "0x891030")]
	private void DebugLog(string text)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x1169CFC", Offset = "0x1169CFC", VA = "0x1169CFC")]
	public ZVRGrabbable()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x116B834", Offset = "0x116B834", VA = "0x116B834")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891068", Offset = "0x891068")]
	private void <EnablePhysicsOnGrab>b__23_0(UniRx.Unit unit)
	{
	}
}
[Token(Token = "0x200011F")]
public class ZVRGrabber : OVRGrabber, ITeleportMessageReciever, IEventSystemHandler
{
	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _prevFlexIndexTrigger;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _isHandTriggerPressing;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool _isIndexTriggerPressing;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool _isTeleportation;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
	private bool _notifyGrabberBegin;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool _notifyGrabberEnd;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	private bool _enableCheckGrabOrRelease;

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x116B840", Offset = "0x116B840", VA = "0x116B840", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x116B9A8", Offset = "0x116B9A8", VA = "0x116B9A8", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x116BC44", Offset = "0x116BC44", VA = "0x116BC44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x116B9D8", Offset = "0x116B9D8", VA = "0x116B9D8")]
	private void OnUpdatedAnchors()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x116BC48", Offset = "0x116BC48", VA = "0x116BC48")]
	protected void CheckForGrabOrRelease(float prevHandTrigger, float prevIndexTrigger)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x116BDE8", Offset = "0x116BDE8", VA = "0x116BDE8", Slot = "13")]
	public virtual bool IsGrabbingInHand()
	{
		return default(bool);
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x116A9BC", Offset = "0x116A9BC", VA = "0x116A9BC")]
	public void OffhandGrabbedPublic(OVRGrabbable grabbable)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x116BE54", Offset = "0x116BE54", VA = "0x116BE54")]
	public void SetEnableCheckGrabOrRelease(bool flag)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x116BBCC", Offset = "0x116BBCC", VA = "0x116BBCC")]
	private void CheckNotifyGrabber()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x116BE60", Offset = "0x116BE60", VA = "0x116BE60", Slot = "11")]
	public void OnPreTeleport()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x116BF00", Offset = "0x116BF00", VA = "0x116BF00", Slot = "12")]
	public void OnPostTeleport()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x116AF0C", Offset = "0x116AF0C", VA = "0x116AF0C")]
	public ZVRGrabber()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x116BF9C", Offset = "0x116BF9C", VA = "0x116BF9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891078", Offset = "0x891078")]
	private void <Awake>b__7_0(OVRCameraRig r)
	{
	}
}
[Token(Token = "0x2000120")]
public class ZVRHand : MonoBehaviour, IGrabberMessageReciever, IEventSystemHandler
{
	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884070", Offset = "0x884070")]
	[SerializeField]
	private HandLR _leftRightHand;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8840BC", Offset = "0x8840BC")]
	[SerializeField]
	private SkinnedMeshRenderer handMesh;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _enableGrabbedItemHideHand;

	[Token(Token = "0x17000067")]
	public HandLR LeftRightHand
	{
		[Token(Token = "0x600053D")]
		[Address(RVA = "0x116BFA0", Offset = "0x116BFA0", VA = "0x116BFA0")]
		get
		{
			return default(HandLR);
		}
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x116BFA8", Offset = "0x116BFA8", VA = "0x116BFA8")]
	public void SetEnableGrabbedItemHideHand(bool flag)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x116BFB4", Offset = "0x116BFB4", VA = "0x116BFB4", Slot = "4")]
	public void OnGrabberBegin()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x116C00C", Offset = "0x116C00C", VA = "0x116C00C", Slot = "5")]
	public void OnGrabberEnd()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x116C064", Offset = "0x116C064", VA = "0x116C064")]
	public ZVRHand()
	{
	}
}
[Token(Token = "0x2000121")]
public class ZVRInputModule : OVRInputModuleOrigin
{
	[Token(Token = "0x40005E0")]
	public const int kLaserHandLeftId = 100;

	[Token(Token = "0x40005E1")]
	public const int kLaserHandRightId = 102;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private readonly MouseState _mouseState;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _enableInput;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private HandLR _latestHitHand;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private HandLR _latestPushButtonHand;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool _disableNeutralButtonLeft;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	private bool _disableNeutralButtonRight;

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x116C074", Offset = "0x116C074", VA = "0x116C074", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x116C150", Offset = "0x116C150", VA = "0x116C150")]
	public Transform GetRayTransformLeft()
	{
		return null;
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x116C158", Offset = "0x116C158", VA = "0x116C158")]
	public Transform GetRayTransformRight()
	{
		return null;
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x116C160", Offset = "0x116C160", VA = "0x116C160")]
	public void SetRayTransformLeft(Transform transform)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x116C168", Offset = "0x116C168", VA = "0x116C168")]
	public void SetRayTransformRight(Transform transform)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x116C170", Offset = "0x116C170", VA = "0x116C170")]
	public void SetEnableInput(bool flag)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x116C17C", Offset = "0x116C17C", VA = "0x116C17C", Slot = "30")]
	protected override MouseState GetGazePointerData()
	{
		return null;
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x116C4F4", Offset = "0x116C4F4", VA = "0x116C4F4")]
	private void RayCastAll(int pointerDataId, Transform targetTransform, ZVRLaserPointer targetOvrCursor, out OVRPointerEventData leftClick, out bool hitObject)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x116CBDC", Offset = "0x116CBDC", VA = "0x116CBDC")]
	private static Vector3 GetRectTransformNormal(RectTransform rectTransform)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x116CCFC", Offset = "0x116CCFC", VA = "0x116CCFC", Slot = "31")]
	protected override PointerEventData.FramePressState GetGazeButtonState()
	{
		return default(PointerEventData.FramePressState);
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x116CDCC", Offset = "0x116CDCC", VA = "0x116CDCC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x891088", Offset = "0x891088")]
	public void DebugSetPressed()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x116CE20", Offset = "0x116CE20", VA = "0x116CE20")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8910C0", Offset = "0x8910C0")]
	public void DebugSetReleased()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x116CE74", Offset = "0x116CE74", VA = "0x116CE74")]
	public ZVRInputModule()
	{
	}
}
[Token(Token = "0x2000122")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87FE40", Offset = "0x87FE40")]
public class ZVRLaserPointer : OVRCursor
{
	[Token(Token = "0x2000123")]
	public enum Reason
	{
		[Token(Token = "0x40005F7")]
		None,
		[Token(Token = "0x40005F8")]
		Operation,
		[Token(Token = "0x40005F9")]
		SwitchScene,
		[Token(Token = "0x40005FA")]
		Teleport,
		[Token(Token = "0x40005FB")]
		ItemGrabbed,
		[Token(Token = "0x40005FC")]
		GamePause
	}

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float lineLength;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884118", Offset = "0x884118")]
	private bool isAlwaysShowTarget;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884164", Offset = "0x884164")]
	[SerializeField]
	private HandLR _handLr;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8841B0", Offset = "0x8841B0")]
	private GameObject <HitObject>k__BackingField;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _startPoint;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _forward;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _endPoint;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject _lastHitObject;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _isPointerTarget;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _isTargetActive;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool _isInactiveLineRenderer;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PointerTarget _pointerTarget;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly BitFlag _hideLineFlag;

	[Token(Token = "0x17000068")]
	public HandLR HandLR
	{
		[Token(Token = "0x600054F")]
		[Address(RVA = "0x116CEE0", Offset = "0x116CEE0", VA = "0x116CEE0")]
		get
		{
			return default(HandLR);
		}
	}

	[Token(Token = "0x17000069")]
	public GameObject HitObject
	{
		[Token(Token = "0x6000550")]
		[Address(RVA = "0x116CEE8", Offset = "0x116CEE8", VA = "0x116CEE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8910F8", Offset = "0x8910F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000551")]
		[Address(RVA = "0x116CEF0", Offset = "0x116CEF0", VA = "0x116CEF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891108", Offset = "0x891108")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public bool IsPointerTargetActive
	{
		[Token(Token = "0x6000552")]
		[Address(RVA = "0x116C984", Offset = "0x116C984", VA = "0x116C984")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x116CEF8", Offset = "0x116CEF8", VA = "0x116CEF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x116CFDC", Offset = "0x116CFDC", VA = "0x116CFDC")]
	public void SetVisible(bool flag, Reason reason)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x116D12C", Offset = "0x116D12C", VA = "0x116D12C", Slot = "4")]
	public override void SetCursorRay(Transform ray)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x116D180", Offset = "0x116D180", VA = "0x116D180", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x116C9A4", Offset = "0x116C9A4", VA = "0x116C9A4")]
	public void SetCursorStartDestHitObject(Vector3 start, Vector3 dest, GameObject hitObject)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x116D054", Offset = "0x116D054", VA = "0x116D054")]
	private void SetShowLineRenderer(bool flag)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x116D184", Offset = "0x116D184", VA = "0x116D184")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x116AE88", Offset = "0x116AE88", VA = "0x116AE88")]
	public void SetLocalScale(float scaleSize = 1f)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x116D3BC", Offset = "0x116D3BC", VA = "0x116D3BC")]
	public ZVRLaserPointer()
	{
	}
}
[Token(Token = "0x2000124")]
public class ZVRLocomotionController : MonoBehaviour
{
	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public ZVRSimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x116D430", Offset = "0x116D430", VA = "0x116D430")]
	public ZVRLocomotionController()
	{
	}
}
[Token(Token = "0x2000125")]
public class ZVRLocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000126")]
	public enum States
	{
		[Token(Token = "0x4000621")]
		Ready,
		[Token(Token = "0x4000622")]
		Aim,
		[Token(Token = "0x4000623")]
		CancelAim,
		[Token(Token = "0x4000624")]
		PreTeleport,
		[Token(Token = "0x4000625")]
		CancelTeleport,
		[Token(Token = "0x4000626")]
		Teleporting,
		[Token(Token = "0x4000627")]
		PostTeleport
	}

	[Token(Token = "0x2000127")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000629")]
		None,
		[Token(Token = "0x400062A")]
		Aim,
		[Token(Token = "0x400062B")]
		PreTeleport,
		[Token(Token = "0x400062C")]
		Teleport
	}

	[Token(Token = "0x2000128")]
	public class AimData
	{
		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 Start;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float Radius;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884588", Offset = "0x884588")]
		private List<Vector3> <PointsForLaser>k__BackingField;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884598", Offset = "0x884598")]
		private List<Vector3> <ShowLaserPointList>k__BackingField;

		[Token(Token = "0x1700006E")]
		public List<Vector3> PointsForLaser
		{
			[Token(Token = "0x6000590")]
			[Address(RVA = "0xF9C674", Offset = "0xF9C674", VA = "0xF9C674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891590", Offset = "0x891590")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000591")]
			[Address(RVA = "0xF9C67C", Offset = "0xF9C67C", VA = "0xF9C67C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8915A0", Offset = "0x8915A0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public List<Vector3> ShowLaserPointList
		{
			[Token(Token = "0x6000592")]
			[Address(RVA = "0xF9C684", Offset = "0xF9C684", VA = "0xF9C684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8915B0", Offset = "0x8915B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000593")]
			[Address(RVA = "0xF9C68C", Offset = "0xF9C68C", VA = "0xF9C68C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8915C0", Offset = "0x8915C0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xF9C694", Offset = "0xF9C694", VA = "0xF9C694")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xF9C704", Offset = "0xF9C704", VA = "0xF9C704")]
		public AimData()
		{
		}
	}

	[Token(Token = "0x2000129")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FEA0", Offset = "0x87FEA0")]
	private sealed class <ReadyStateCoroutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZVRLocomotionTeleport <>4__this;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000599")]
			[Address(RVA = "0xF9C4CC", Offset = "0xF9C4CC", VA = "0xF9C4CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059B")]
			[Address(RVA = "0xF9C514", Offset = "0xF9C514", VA = "0xF9C514", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xF9C3B0", Offset = "0xF9C3B0", VA = "0xF9C3B0")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0xF9C3DC", Offset = "0xF9C3DC", VA = "0xF9C3DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xF9C3E0", Offset = "0xF9C3E0", VA = "0xF9C3E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xF9C4D4", Offset = "0xF9C4D4", VA = "0xF9C4D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FEB0", Offset = "0x87FEB0")]
	private sealed class <AimStateCoroutine>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZVRLocomotionTeleport <>4__this;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059F")]
			[Address(RVA = "0xF9BE58", Offset = "0xF9BE58", VA = "0xF9BE58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A1")]
			[Address(RVA = "0xF9BEA0", Offset = "0xF9BEA0", VA = "0xF9BEA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xF9BCE8", Offset = "0xF9BCE8", VA = "0xF9BCE8")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xF9BD14", Offset = "0xF9BD14", VA = "0xF9BD14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xF9BD18", Offset = "0xF9BD18", VA = "0xF9BD18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xF9BE60", Offset = "0xF9BE60", VA = "0xF9BE60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FEC0", Offset = "0x87FEC0")]
	private sealed class <CancelAimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZVRLocomotionTeleport <>4__this;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A5")]
			[Address(RVA = "0xF9BF78", Offset = "0xF9BF78", VA = "0xF9BF78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A7")]
			[Address(RVA = "0xF9BFC0", Offset = "0xF9BFC0", VA = "0xF9BFC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xF9BEA8", Offset = "0xF9BEA8", VA = "0xF9BEA8")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xF9BED4", Offset = "0xF9BED4", VA = "0xF9BED4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xF9BED8", Offset = "0xF9BED8", VA = "0xF9BED8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xF9BF80", Offset = "0xF9BF80", VA = "0xF9BF80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FED0", Offset = "0x87FED0")]
	private sealed class <PreTeleportStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZVRLocomotionTeleport <>4__this;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005AB")]
			[Address(RVA = "0xF9C360", Offset = "0xF9C360", VA = "0xF9C360", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AD")]
			[Address(RVA = "0xF9C3A8", Offset = "0xF9C3A8", VA = "0xF9C3A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xF9C250", Offset = "0xF9C250", VA = "0xF9C250")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xF9C27C", Offset = "0xF9C27C", VA = "0xF9C27C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xF9C280", Offset = "0xF9C280", VA = "0xF9C280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xF9C368", Offset = "0xF9C368", VA = "0xF9C368", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FEE0", Offset = "0x87FEE0")]
	private sealed class <CancelTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZVRLocomotionTeleport <>4__this;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0xF9C098", Offset = "0xF9C098", VA = "0xF9C098", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0xF9C0E0", Offset = "0xF9C0E0", VA = "0xF9C0E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xF9BFC8", Offset = "0xF9BFC8", VA = "0xF9BFC8")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xF9BFF4", Offset = "0xF9BFF4", VA = "0xF9BFF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xF9BFF8", Offset = "0xF9BFF8", VA = "0xF9BFF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xF9C0A0", Offset = "0xF9C0A0", VA = "0xF9C0A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FEF0", Offset = "0x87FEF0")]
	private sealed class <TeleportingStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZVRLocomotionTeleport <>4__this;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0xF9C624", Offset = "0xF9C624", VA = "0xF9C624", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B9")]
			[Address(RVA = "0xF9C66C", Offset = "0xF9C66C", VA = "0xF9C66C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xF9C51C", Offset = "0xF9C51C", VA = "0xF9C51C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xF9C548", Offset = "0xF9C548", VA = "0xF9C548", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xF9C54C", Offset = "0xF9C54C", VA = "0xF9C54C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xF9C62C", Offset = "0xF9C62C", VA = "0xF9C62C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FF00", Offset = "0x87FF00")]
	private sealed class <PostTeleportStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZVRLocomotionTeleport <>4__this;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0xF9C200", Offset = "0xF9C200", VA = "0xF9C200", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0xF9C248", Offset = "0xF9C248", VA = "0xF9C248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xF9C0E8", Offset = "0xF9C0E8", VA = "0xF9C0E8")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xF9C114", Offset = "0xF9C114", VA = "0xF9C114", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xF9C118", Offset = "0xF9C118", VA = "0xF9C118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xF9C208", Offset = "0xF9C208", VA = "0xF9C208", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8841F0", Offset = "0x8841F0")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884228", Offset = "0x884228")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884260", Offset = "0x884260")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884298", Offset = "0x884298")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8842D0", Offset = "0x8842D0")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884308", Offset = "0x884308")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884340", Offset = "0x884340")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884378", Offset = "0x884378")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8843B0", Offset = "0x8843B0")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ZVRTeleportAimHandler AimHandler;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8843C0", Offset = "0x8843C0")]
	public ZVRTeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8843F8", Offset = "0x8843F8")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ZVRTeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ZVRTeleportDestination _teleportDestination;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884440", Offset = "0x884440")]
	private ZVRLocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884450", Offset = "0x884450")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88449C", Offset = "0x88449C")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700006B")]
	public States CurrentState
	{
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x116D480", Offset = "0x116D480", VA = "0x116D480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891118", Offset = "0x891118")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x116D488", Offset = "0x116D488", VA = "0x116D488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891128", Offset = "0x891128")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x116D6AC", Offset = "0x116D6AC", VA = "0x116D6AC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700006D")]
	public ZVRLocomotionController LocomotionController
	{
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x116D6D4", Offset = "0x116D6D4", VA = "0x116D6D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891158", Offset = "0x891158")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x116D6DC", Offset = "0x116D6DC", VA = "0x116D6DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891168", Offset = "0x891168")]
		private set
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x116D490", Offset = "0x116D490", VA = "0x116D490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891138", Offset = "0x891138")]
		add
		{
		}
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x116D530", Offset = "0x116D530", VA = "0x116D530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891148", Offset = "0x891148")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600056F")]
		[Address(RVA = "0x116DBE8", Offset = "0x116DBE8", VA = "0x116DBE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8911B0", Offset = "0x8911B0")]
		add
		{
		}
		[Token(Token = "0x6000570")]
		[Address(RVA = "0x116DC88", Offset = "0x116DC88", VA = "0x116DC88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8911C0", Offset = "0x8911C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000572")]
		[Address(RVA = "0x116DD28", Offset = "0x116DD28", VA = "0x116DD28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891230", Offset = "0x891230")]
		add
		{
		}
		[Token(Token = "0x6000573")]
		[Address(RVA = "0x116DDC8", Offset = "0x116DDC8", VA = "0x116DDC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891240", Offset = "0x891240")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000574")]
		[Address(RVA = "0x116DE68", Offset = "0x116DE68", VA = "0x116DE68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891250", Offset = "0x891250")]
		add
		{
		}
		[Token(Token = "0x6000575")]
		[Address(RVA = "0x116DF08", Offset = "0x116DF08", VA = "0x116DF08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891260", Offset = "0x891260")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000577")]
		[Address(RVA = "0x116E018", Offset = "0x116E018", VA = "0x116E018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891270", Offset = "0x891270")]
		add
		{
		}
		[Token(Token = "0x6000578")]
		[Address(RVA = "0x116E0B8", Offset = "0x116E0B8", VA = "0x116E0B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891280", Offset = "0x891280")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0x116E1C4", Offset = "0x116E1C4", VA = "0x116E1C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8912F0", Offset = "0x8912F0")]
		add
		{
		}
		[Token(Token = "0x600057B")]
		[Address(RVA = "0x116E264", Offset = "0x116E264", VA = "0x116E264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891300", Offset = "0x891300")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x600057D")]
		[Address(RVA = "0x116E370", Offset = "0x116E370", VA = "0x116E370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891370", Offset = "0x891370")]
		add
		{
		}
		[Token(Token = "0x600057E")]
		[Address(RVA = "0x116E410", Offset = "0x116E410", VA = "0x116E410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891380", Offset = "0x891380")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000580")]
		[Address(RVA = "0x116E51C", Offset = "0x116E51C", VA = "0x116E51C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8913F0", Offset = "0x8913F0")]
		add
		{
		}
		[Token(Token = "0x6000581")]
		[Address(RVA = "0x116E5BC", Offset = "0x116E5BC", VA = "0x116E5BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891400", Offset = "0x891400")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000583")]
		[Address(RVA = "0x116E6C8", Offset = "0x116E6C8", VA = "0x116E6C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891470", Offset = "0x891470")]
		add
		{
		}
		[Token(Token = "0x6000584")]
		[Address(RVA = "0x116E768", Offset = "0x116E768", VA = "0x116E768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891480", Offset = "0x891480")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000586")]
		[Address(RVA = "0x116E874", Offset = "0x116E874", VA = "0x116E874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8914F0", Offset = "0x8914F0")]
		add
		{
		}
		[Token(Token = "0x6000587")]
		[Address(RVA = "0x116E914", Offset = "0x116E914", VA = "0x116E914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891500", Offset = "0x891500")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000589")]
		[Address(RVA = "0x116EA20", Offset = "0x116EA20", VA = "0x116EA20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891570", Offset = "0x891570")]
		add
		{
		}
		[Token(Token = "0x600058A")]
		[Address(RVA = "0x116EAC0", Offset = "0x116EAC0", VA = "0x116EAC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891580", Offset = "0x891580")]
		remove
		{
		}
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x116D438", Offset = "0x116D438", VA = "0x116D438")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x116D45C", Offset = "0x116D45C", VA = "0x116D45C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x116D5D0", Offset = "0x116D5D0", VA = "0x116D5D0")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x116D6E4", Offset = "0x116D6E4", VA = "0x116D6E4")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x116D7B0", Offset = "0x116D7B0", VA = "0x116D7B0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x891178", Offset = "0x891178")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x116D864", Offset = "0x116D864", VA = "0x116D864")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x116D988", Offset = "0x116D988", VA = "0x116D988")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x116DA04", Offset = "0x116DA04", VA = "0x116DA04")]
	public void RecycleTeleportDestination(ZVRTeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x116DAC8", Offset = "0x116DAC8", VA = "0x116DAC8")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x116DAF4", Offset = "0x116DAF4", VA = "0x116DAF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x116DB4C", Offset = "0x116DB4C", VA = "0x116DB4C", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x116DB7C", Offset = "0x116DB7C", VA = "0x116DB7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8911D0", Offset = "0x8911D0")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x116DFA8", Offset = "0x116DFA8", VA = "0x116DFA8")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x116E158", Offset = "0x116E158", VA = "0x116E158")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891290", Offset = "0x891290")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x116E304", Offset = "0x116E304", VA = "0x116E304")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891310", Offset = "0x891310")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x116E4B0", Offset = "0x116E4B0", VA = "0x116E4B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891390", Offset = "0x891390")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x116E65C", Offset = "0x116E65C", VA = "0x116E65C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891410", Offset = "0x891410")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x116E808", Offset = "0x116E808", VA = "0x116E808")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891490", Offset = "0x891490")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x116E9B4", Offset = "0x116E9B4", VA = "0x116E9B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891510", Offset = "0x891510")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x116EB60", Offset = "0x116EB60", VA = "0x116EB60")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x116ECA0", Offset = "0x116ECA0", VA = "0x116ECA0")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x116ECD4", Offset = "0x116ECD4", VA = "0x116ECD4")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x116ED9C", Offset = "0x116ED9C", VA = "0x116ED9C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x116EE94", Offset = "0x116EE94", VA = "0x116EE94")]
	public ZVRLocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000130")]
public class ZVRScreenFade : StaticAccessBehaviour<ZVRScreenFade>
{
	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FF10", Offset = "0x87FF10")]
	private sealed class <CoFade>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZVRScreenFade <>4__this;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeTime;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action finishCallback;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005CB")]
			[Address(RVA = "0xF9C8E8", Offset = "0xF9C8E8", VA = "0xF9C8E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005CD")]
			[Address(RVA = "0xF9C930", Offset = "0xF9C930", VA = "0xF9C930", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xF9C79C", Offset = "0xF9C79C", VA = "0xF9C79C")]
		[DebuggerHidden]
		public <CoFade>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xF9C7C8", Offset = "0xF9C7C8", VA = "0xF9C7C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xF9C7CC", Offset = "0xF9C7CC", VA = "0xF9C7CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xF9C8F0", Offset = "0xF9C8F0", VA = "0xF9C8F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000649")]
	public const float DefaultFadeTime = 2f;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int renderQueue;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8845B8", Offset = "0x8845B8")]
	[SerializeField]
	private int _sortingOrder;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884604", Offset = "0x884604")]
	private int _sortingLayerID;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly Color _fadeColor;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer fadeRenderer;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter fadeMesh;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material fadeMaterial;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _isFading;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _currentAlpha;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x116EEA4", Offset = "0x116EEA4", VA = "0x116EEA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x116F27C", Offset = "0x116F27C", VA = "0x116F27C", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x116F3FC", Offset = "0x116F3FC", VA = "0x116F3FC")]
	public void FadeOut(float fadeTime)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x116F4D4", Offset = "0x116F4D4", VA = "0x116F4D4")]
	public void FadeIn(float fadeTime, Action finishCallback)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x116F274", Offset = "0x116F274", VA = "0x116F274")]
	private void SetFadeLevel(float level)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x116F434", Offset = "0x116F434", VA = "0x116F434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891800", Offset = "0x891800")]
	private IEnumerator CoFade(float fadeTime, float startAlpha, float endAlpha, Action finishCallback)
	{
		return null;
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x116F508", Offset = "0x116F508", VA = "0x116F508")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x116F614", Offset = "0x116F614", VA = "0x116F614")]
	public ZVRScreenFade()
	{
	}
}
[Token(Token = "0x2000132")]
public class ZVRSimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float RotationAngle;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884670", Offset = "0x884670")]
	private bool <EnableRotation>k__BackingField;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884680", Offset = "0x884680")]
	private bool <HMDRotatesPlayer>k__BackingField;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool _readyToSnapTurn;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884690", Offset = "0x884690")]
	private bool <EnableInput>k__BackingField;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8846A0", Offset = "0x8846A0")]
	private bool <EnableLeftHandInput>k__BackingField;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8846B0", Offset = "0x8846B0")]
	private bool <EnableRightHandInput>k__BackingField;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ZVRDistanceGrabber[] _distanceGrabberArray;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ZVRLaserPointer[] _laserPointerArray;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVRInputModuleOrigin _inputModule;

	[Token(Token = "0x17000080")]
	public bool EnableRotation
	{
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x116F69C", Offset = "0x116F69C", VA = "0x116F69C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8918B0", Offset = "0x8918B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x116F6A4", Offset = "0x116F6A4", VA = "0x116F6A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8918C0", Offset = "0x8918C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public bool HMDRotatesPlayer
	{
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x116F6B0", Offset = "0x116F6B0", VA = "0x116F6B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8918D0", Offset = "0x8918D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x116F6B8", Offset = "0x116F6B8", VA = "0x116F6B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8918E0", Offset = "0x8918E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public bool EnableInput
	{
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x116F6C4", Offset = "0x116F6C4", VA = "0x116F6C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8918F0", Offset = "0x8918F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x116F6CC", Offset = "0x116F6CC", VA = "0x116F6CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891900", Offset = "0x891900")]
		private set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public bool EnableLeftHandInput
	{
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x116F6D8", Offset = "0x116F6D8", VA = "0x116F6D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891910", Offset = "0x891910")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x116F6E0", Offset = "0x116F6E0", VA = "0x116F6E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891920", Offset = "0x891920")]
		private set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public bool EnableRightHandInput
	{
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x116F6EC", Offset = "0x116F6EC", VA = "0x116F6EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891930", Offset = "0x891930")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x116F6F4", Offset = "0x116F6F4", VA = "0x116F6F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891940", Offset = "0x891940")]
		private set
		{
		}
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x116F700", Offset = "0x116F700", VA = "0x116F700")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x116F7C4", Offset = "0x116F7C4", VA = "0x116F7C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x116FB9C", Offset = "0x116FB9C", VA = "0x116FB9C")]
	public void SetEnableInput(bool flag)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x116FBA8", Offset = "0x116FBA8", VA = "0x116FBA8")]
	public void SetEnableLeftRightInput(HandLR handLr, bool flag)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x116F808", Offset = "0x116F808", VA = "0x116F808")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x116F92C", Offset = "0x116F92C", VA = "0x116F92C")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x116FBCC", Offset = "0x116FBCC", VA = "0x116FBCC")]
	private void SnapTurnToApplyGrab()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x116FC30", Offset = "0x116FC30", VA = "0x116FC30")]
	private void SnapTurnToApplyLaser()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x116FCDC", Offset = "0x116FCDC", VA = "0x116FCDC")]
	public ZVRSimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000133")]
public abstract class ZVRTeleportAimHandler : ZVRTeleportSupport
{
	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x116FD00", Offset = "0x116FD00", VA = "0x116FD00", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x116FD90", Offset = "0x116FD90", VA = "0x116FD90", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60005E3")]
	public abstract void GetPoints(List<Vector3> points, out Vector3 startPosition);

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x116FE5C", Offset = "0x116FE5C", VA = "0x116FE5C")]
	protected ZVRTeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000134")]
public class ZVRTeleportAimHandlerParabolic : ZVRTeleportAimHandler
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8846C0", Offset = "0x8846C0")]
	public float Range;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8846F8", Offset = "0x8846F8")]
	public float MinimumElevation;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884730", Offset = "0x884730")]
	public float Gravity;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884768", Offset = "0x884768")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x884768", Offset = "0x884768")]
	public float AimVelocity;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8847C4", Offset = "0x8847C4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8847C4", Offset = "0x8847C4")]
	public float AimStep;

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x116FE6C", Offset = "0x116FE6C", VA = "0x116FE6C", Slot = "8")]
	public override void GetPoints(List<Vector3> points, out Vector3 startPosition)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1170014", Offset = "0x1170014", VA = "0x1170014")]
	public ZVRTeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000135")]
public class ZVRTeleportAimVisualLaser : ZVRTeleportSupport
{
	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88481C", Offset = "0x88481C")]
	private LineRenderer LaserPrefab;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x1170028", Offset = "0x1170028", VA = "0x1170028")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x1170058", Offset = "0x1170058", VA = "0x1170058")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x1170088", Offset = "0x1170088", VA = "0x1170088")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x1170168", Offset = "0x1170168", VA = "0x1170168", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x11702BC", Offset = "0x11702BC", VA = "0x11702BC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x117040C", Offset = "0x117040C", VA = "0x117040C")]
	private void UpdateAimData(ZVRLocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1170530", Offset = "0x1170530", VA = "0x1170530")]
	public ZVRTeleportAimVisualLaser()
	{
	}
}
[Token(Token = "0x2000136")]
public class ZVRTeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884868", Offset = "0x884868")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884878", Offset = "0x884878")]
	public Transform PositionIndicator;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8848B0", Offset = "0x8848B0")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8848E8", Offset = "0x8848E8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ZVRLocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ZVRLocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000085")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x1170538", Offset = "0x1170538", VA = "0x1170538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891950", Offset = "0x891950")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x1170540", Offset = "0x1170540", VA = "0x1170540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891960", Offset = "0x891960")]
		private set
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event Action<ZVRTeleportDestination> Deactivated
	{
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x11706EC", Offset = "0x11706EC", VA = "0x11706EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891970", Offset = "0x891970")]
		add
		{
		}
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x117078C", Offset = "0x117078C", VA = "0x117078C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891980", Offset = "0x891980")]
		remove
		{
		}
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x117054C", Offset = "0x117054C", VA = "0x117054C")]
	private ZVRTeleportDestination()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x11705DC", Offset = "0x11705DC", VA = "0x11705DC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x11706AC", Offset = "0x11706AC", VA = "0x11706AC")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x11706E8", Offset = "0x11706E8", VA = "0x11706E8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x116D9A0", Offset = "0x116D9A0", VA = "0x116D9A0")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x117082C", Offset = "0x117082C", VA = "0x117082C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x1170848", Offset = "0x1170848", VA = "0x1170848", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000137")]
public class ZVRTeleportGrabberHandler : ZVRTeleportSupport
{
	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x1170A54", Offset = "0x1170A54", VA = "0x1170A54", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x1170B30", Offset = "0x1170B30", VA = "0x1170B30", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x1170C08", Offset = "0x1170C08", VA = "0x1170C08")]
	private void OnEnterStatePreTeleport()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x1170C4C", Offset = "0x1170C4C", VA = "0x1170C4C")]
	private void OnEnterStatePostTeleport()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x1170C90", Offset = "0x1170C90", VA = "0x1170C90")]
	public ZVRTeleportGrabberHandler()
	{
	}
}
[Token(Token = "0x2000138")]
public abstract class ZVRTeleportInputHandler : ZVRTeleportSupport
{
	[Token(Token = "0x2000139")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FF20", Offset = "0x87FF20")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZVRTeleportInputHandler <>4__this;

		[Token(Token = "0x17000086")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600060A")]
			[Address(RVA = "0xF9CB04", Offset = "0xF9CB04", VA = "0xF9CB04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600060C")]
			[Address(RVA = "0xF9CB4C", Offset = "0xF9CB4C", VA = "0xF9CB4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0xF9CA48", Offset = "0xF9CA48", VA = "0xF9CA48")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0xF9CA74", Offset = "0xF9CA74", VA = "0xF9CA74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xF9CA78", Offset = "0xF9CA78", VA = "0xF9CA78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xF9CB0C", Offset = "0xF9CB0C", VA = "0xF9CB0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FF30", Offset = "0x87FF30")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZVRTeleportInputHandler <>4__this;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000610")]
			[Address(RVA = "0xF9C9F8", Offset = "0xF9C9F8", VA = "0xF9C9F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000612")]
			[Address(RVA = "0xF9CA40", Offset = "0xF9CA40", VA = "0xF9CA40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xF9C938", Offset = "0xF9C938", VA = "0xF9C938")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xF9C964", Offset = "0xF9C964", VA = "0xF9C964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xF9C968", Offset = "0xF9C968", VA = "0xF9C968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0xF9CA00", Offset = "0xF9CA00", VA = "0xF9CA00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x1170C98", Offset = "0x1170C98", VA = "0x1170C98")]
	protected ZVRTeleportInputHandler()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x1170D58", Offset = "0x1170D58", VA = "0x1170D58", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x1170DA8", Offset = "0x1170DA8", VA = "0x1170DA8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x1170E58", Offset = "0x1170E58", VA = "0x1170E58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891990", Offset = "0x891990")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x1170EC4", Offset = "0x1170EC4", VA = "0x1170EC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8919F0", Offset = "0x8919F0")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000603")]
	public abstract ZVRLocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000604")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x1170F30", Offset = "0x1170F30", VA = "0x1170F30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891A50", Offset = "0x891A50")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x1170F5C", Offset = "0x1170F5C", VA = "0x1170F5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891A60", Offset = "0x891A60")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200013B")]
public class ZVRTeleportInputHandlerCustomHands : ZVRTeleportInputHandler
{
	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884930", Offset = "0x884930")]
	public Transform LHand;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88497C", Offset = "0x88497C")]
	[SerializeField]
	public Transform RHand;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8849C8", Offset = "0x8849C8")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private HandLR _myHandLr;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884A00", Offset = "0x884A00")]
	private bool <EnableInput>k__BackingField;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884A10", Offset = "0x884A10")]
	private bool <EnableLeftHandInput>k__BackingField;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884A20", Offset = "0x884A20")]
	private bool <EnableRightHandInput>k__BackingField;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ZVRLaserPointer _laserPointerLeft;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ZVRLaserPointer _laserPointerRight;

	[Token(Token = "0x1700008A")]
	public bool EnableInput
	{
		[Token(Token = "0x6000613")]
		[Address(RVA = "0x1170F88", Offset = "0x1170F88", VA = "0x1170F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891B10", Offset = "0x891B10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000614")]
		[Address(RVA = "0x1170F90", Offset = "0x1170F90", VA = "0x1170F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891B20", Offset = "0x891B20")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public bool EnableLeftHandInput
	{
		[Token(Token = "0x6000615")]
		[Address(RVA = "0x1170F9C", Offset = "0x1170F9C", VA = "0x1170F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891B30", Offset = "0x891B30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000616")]
		[Address(RVA = "0x1170FA4", Offset = "0x1170FA4", VA = "0x1170FA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891B40", Offset = "0x891B40")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public bool EnableRightHandInput
	{
		[Token(Token = "0x6000617")]
		[Address(RVA = "0x1170FB0", Offset = "0x1170FB0", VA = "0x1170FB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891B50", Offset = "0x891B50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000618")]
		[Address(RVA = "0x1170FB8", Offset = "0x1170FB8", VA = "0x1170FB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891B60", Offset = "0x891B60")]
		private set
		{
		}
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1170FC4", Offset = "0x1170FC4", VA = "0x1170FC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x1171088", Offset = "0x1171088", VA = "0x1171088")]
	public void SetEnableInput(bool flag)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1171094", Offset = "0x1171094", VA = "0x1171094")]
	public void SetEnableLeftRightInput(HandLR handLr, bool flag)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x11710B8", Offset = "0x11710B8", VA = "0x11710B8", Slot = "8")]
	public override ZVRLocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(ZVRLocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1171294", Offset = "0x1171294", VA = "0x1171294", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1171348", Offset = "0x1171348", VA = "0x1171348")]
	public ZVRTeleportInputHandlerCustomHands()
	{
	}
}
[Token(Token = "0x200013C")]
public abstract class ZVRTeleportOrientationHandler : ZVRTeleportSupport
{
	[Token(Token = "0x200013D")]
	public enum OrientationModes
	{
		[Token(Token = "0x400068A")]
		HeadRelative,
		[Token(Token = "0x400068B")]
		ForwardFacing
	}

	[Token(Token = "0x200013E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FF40", Offset = "0x87FF40")]
	private sealed class <UpdateOrientationCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZVRTeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600062B")]
			[Address(RVA = "0xF9CC28", Offset = "0xF9CC28", VA = "0xF9CC28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600062D")]
			[Address(RVA = "0xF9CC70", Offset = "0xF9CC70", VA = "0xF9CC70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xF9CB54", Offset = "0xF9CB54", VA = "0xF9CB54")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xF9CB80", Offset = "0xF9CB80", VA = "0xF9CB80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xF9CB84", Offset = "0xF9CB84", VA = "0xF9CB84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xF9CC30", Offset = "0xF9CC30", VA = "0xF9CC30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ZVRLocomotionTeleport.AimData AimData;

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1171368", Offset = "0x1171368", VA = "0x1171368")]
	protected ZVRTeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x11713EC", Offset = "0x11713EC", VA = "0x11713EC")]
	private void UpdateAimData(ZVRLocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x11713F4", Offset = "0x11713F4", VA = "0x11713F4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x11714B0", Offset = "0x11714B0", VA = "0x11714B0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x1171568", Offset = "0x1171568", VA = "0x1171568")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891B70", Offset = "0x891B70")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000625")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x11715D4", Offset = "0x11715D4", VA = "0x11715D4")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x1171690", Offset = "0x1171690", VA = "0x1171690")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891BD0", Offset = "0x891BD0")]
	private void <.ctor>b__2_0()
	{
	}
}
[Token(Token = "0x200013F")]
public class ZVRTeleportOrientationHandlerThumbstick : ZVRTeleportOrientationHandler
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884A30", Offset = "0x884A30")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884A68", Offset = "0x884A68")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion _initialRotationZvr;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _currentRotationZvr;

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x11716BC", Offset = "0x11716BC", VA = "0x11716BC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x11716F8", Offset = "0x11716F8", VA = "0x11716F8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x1171878", Offset = "0x1171878", VA = "0x1171878")]
	private Quaternion CalcHitNormalRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x11718FC", Offset = "0x11718FC", VA = "0x11718FC")]
	public ZVRTeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000140")]
public class ZVRTeleportSoundHandler : ZVRTeleportSupport
{
	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884AA0", Offset = "0x884AA0")]
	[SerializeField]
	private AudioSource _seTeleportMove;

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x117190C", Offset = "0x117190C", VA = "0x117190C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x11719A4", Offset = "0x11719A4", VA = "0x11719A4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x1171A38", Offset = "0x1171A38", VA = "0x1171A38")]
	private void OnEnterStatePreTeleport()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x1171A54", Offset = "0x1171A54", VA = "0x1171A54")]
	public ZVRTeleportSoundHandler()
	{
	}
}
[Token(Token = "0x2000141")]
public abstract class ZVRTeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x884AEC", Offset = "0x884AEC")]
	private ZVRLocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700008F")]
	protected ZVRLocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000636")]
		[Address(RVA = "0x1171A5C", Offset = "0x1171A5C", VA = "0x1171A5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891C30", Offset = "0x891C30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x1171A64", Offset = "0x1171A64", VA = "0x1171A64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x891C40", Offset = "0x891C40")]
		private set
		{
		}
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x116FD30", Offset = "0x116FD30", VA = "0x116FD30", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x116FE30", Offset = "0x116FE30", VA = "0x116FE30", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1171A6C", Offset = "0x1171A6C", VA = "0x1171A6C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x891C50", Offset = "0x891C50")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x11702B0", Offset = "0x11702B0", VA = "0x11702B0", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x1170404", Offset = "0x1170404", VA = "0x1170404", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x116FE64", Offset = "0x116FE64", VA = "0x116FE64")]
	protected ZVRTeleportSupport()
	{
	}
}
[Token(Token = "0x2000142")]
public abstract class ZVRTeleportTargetHandler : ZVRTeleportSupport
{
	[Token(Token = "0x2000143")]
	public enum ShowLaserCurveType
	{
		[Token(Token = "0x400069D")]
		SplineCurve,
		[Token(Token = "0x400069E")]
		AimPointOnly,
		[Token(Token = "0x400069F")]
		AimPointAddDestination,
		[Token(Token = "0x40006A0")]
		ProjectDestination
	}

	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FF50", Offset = "0x87FF50")]
	private sealed class <TargetAimCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZVRTeleportTargetHandler <>4__this;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000652")]
			[Address(RVA = "0xF9D28C", Offset = "0xF9D28C", VA = "0xF9D28C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000654")]
			[Address(RVA = "0xF9D2D4", Offset = "0xF9D2D4", VA = "0xF9D2D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xF9CC78", Offset = "0xF9CC78", VA = "0xF9CC78")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0xF9CCA4", Offset = "0xF9CCA4", VA = "0xF9CCA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xF9CCA8", Offset = "0xF9CCA8", VA = "0xF9CCA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xF9D294", Offset = "0xF9D294", VA = "0xF9D294", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000696")]
	private const int AimCollisionDivCount = 15;

	[Token(Token = "0x4000697")]
	private const ShowLaserCurveType _showLaserCurveType = ShowLaserCurveType.ProjectDestination;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly ZVRLocomotionTeleport.AimData AimData;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _checkAimTargetValidFroSE;

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x1171B48", Offset = "0x1171B48", VA = "0x1171B48", Slot = "8")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x1171D18", Offset = "0x1171D18", VA = "0x1171D18", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x1171DB0", Offset = "0x1171DB0", VA = "0x1171DB0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x1171E44", Offset = "0x1171E44", VA = "0x1171E44")]
	private void OnStartAimAction()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x1171E70", Offset = "0x1171E70", VA = "0x1171E70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891C88", Offset = "0x891C88")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x1171EDC", Offset = "0x1171EDC", VA = "0x1171EDC", Slot = "9")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000644")]
	protected abstract void ConsiderTeleport(Vector3 start, Vector3 end, out bool collisionHit, out bool targetValid);

	[Token(Token = "0x6000645")]
	protected abstract bool RaycastResultCheck(RaycastHit raycastHit);

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x1171EF8", Offset = "0x1171EF8", VA = "0x1171EF8")]
	private bool FindEnableDestination(Vector3 aimHitPoint, List<Vector3> aimPoints, int curIndex, out RaycastHit resultRaycastHit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x1172138", Offset = "0x1172138", VA = "0x1172138")]
	private void CheckCantMoveSoundPlay()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x11721D4", Offset = "0x11721D4", VA = "0x11721D4")]
	private void MakeShowLaserPointList(ZVRLocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x1172524", Offset = "0x1172524", VA = "0x1172524")]
	private void MakeLaserPointListAimPointOnly(ZVRLocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x11725A4", Offset = "0x11725A4", VA = "0x11725A4")]
	private void MakeLaserPointListAimPointAddDestination(ZVRLocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x11721D8", Offset = "0x11721D8", VA = "0x11721D8")]
	private void MakeLaserPointListProjectDestination(ZVRLocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x117268C", Offset = "0x117268C", VA = "0x117268C")]
	private void MakeLaserPointListSplineCurve(ZVRLocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x1172A78", Offset = "0x1172A78", VA = "0x1172A78")]
	private Vector3 CatmullRom(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1172B84", Offset = "0x1172B84", VA = "0x1172B84")]
	protected ZVRTeleportTargetHandler()
	{
	}
}
[Token(Token = "0x2000145")]
public class ZVRTeleportTargetHandlerPhysical : ZVRTeleportTargetHandler
{
	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _layerNpc;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _layerAnimal;

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x1172C28", Offset = "0x1172C28", VA = "0x1172C28", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x1172CA8", Offset = "0x1172CA8", VA = "0x1172CA8", Slot = "10")]
	protected override void ConsiderTeleport(Vector3 start, Vector3 end, out bool collisionHit, out bool targetValid)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x1172D58", Offset = "0x1172D58", VA = "0x1172D58")]
	private static bool CheckNormalAngle(RaycastHit raycastHit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x1172D9C", Offset = "0x1172D9C", VA = "0x1172D9C")]
	private static bool CheckNocCollider(RaycastHit raycastHit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x1172EB4", Offset = "0x1172EB4", VA = "0x1172EB4")]
	private bool CheckNpcVisitorAnimalCollider(RaycastHit raycastHit)
	{
		return default(bool);
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x1172FA4", Offset = "0x1172FA4", VA = "0x1172FA4")]
	private bool ConsiderDestination(Vector3 location)
	{
		return default(bool);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x1173034", Offset = "0x1173034", VA = "0x1173034", Slot = "11")]
	protected override bool RaycastResultCheck(RaycastHit raycastHit)
	{
		return default(bool);
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x11730D4", Offset = "0x11730D4", VA = "0x11730D4")]
	public ZVRTeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000146")]
public abstract class ZVRTeleportTransition : ZVRTeleportSupport
{
	[Token(Token = "0x600065D")]
	[Address(RVA = "0x11730D8", Offset = "0x11730D8", VA = "0x11730D8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x1173168", Offset = "0x1173168", VA = "0x1173168", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600065F")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x11731F4", Offset = "0x11731F4", VA = "0x11731F4")]
	protected ZVRTeleportTransition()
	{
	}
}
[Token(Token = "0x2000147")]
public class ZVRTeleportTransitionBlink : ZVRTeleportTransition
{
	[Token(Token = "0x2000148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FF60", Offset = "0x87FF60")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZVRTeleportTransitionBlink <>4__this;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000667")]
			[Address(RVA = "0xF9D408", Offset = "0xF9D408", VA = "0xF9D408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000669")]
			[Address(RVA = "0xF9D450", Offset = "0xF9D450", VA = "0xF9D450", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xF9D2DC", Offset = "0xF9D2DC", VA = "0xF9D2DC")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xF9D308", Offset = "0xF9D308", VA = "0xF9D308", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0xF9D30C", Offset = "0xF9D30C", VA = "0xF9D30C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0xF9D410", Offset = "0xF9D410", VA = "0xF9D410", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884AFC", Offset = "0x884AFC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x884AFC", Offset = "0x884AFC")]
	public float TransitionDuration;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884B54", Offset = "0x884B54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x884B54", Offset = "0x884B54")]
	public float TeleportDelay;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884BA8", Offset = "0x884BA8")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x11731FC", Offset = "0x11731FC", VA = "0x11731FC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x1173228", Offset = "0x1173228", VA = "0x1173228")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891D38", Offset = "0x891D38")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x1173294", Offset = "0x1173294", VA = "0x1173294")]
	public ZVRTeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000149")]
public class PointerTarget : MonoBehaviour
{
	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _offsetFromHitPoint;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884BF0", Offset = "0x884BF0")]
	private float _defaultSpriteScale;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite spriteOff;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884C4C", Offset = "0x884C4C")]
	[SerializeField]
	private SpriteRenderer _pointSpriteReference;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884C98", Offset = "0x884C98")]
	private ParticleSystem _pointOnParticleSystem;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884CE4", Offset = "0x884CE4")]
	private HandLR _handLr;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _minPositionFromStartPoint;

	[Token(Token = "0x17000094")]
	public HandLR HandLR
	{
		[Token(Token = "0x600066A")]
		[Address(RVA = "0x1015418", Offset = "0x1015418", VA = "0x1015418")]
		get
		{
			return default(HandLR);
		}
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x1015420", Offset = "0x1015420", VA = "0x1015420")]
	private void Awake()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x1015484", Offset = "0x1015484", VA = "0x1015484")]
	public void Show(Vector3 startPoint, Vector3 hitPoint, bool isActive)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x1015690", Offset = "0x1015690", VA = "0x1015690")]
	public void Hide()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x10156E0", Offset = "0x10156E0", VA = "0x10156E0")]
	public PointerTarget()
	{
	}
}
[Token(Token = "0x200014A")]
public class MainLoopProfilingProfilingMeter : MonoBehaviour
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform[] meters;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int meterLength;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] parameters;

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x10868FC", Offset = "0x10868FC", VA = "0x10868FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x1086960", Offset = "0x1086960", VA = "0x1086960")]
	private void Update()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x1086A84", Offset = "0x1086A84", VA = "0x1086A84")]
	public void SetParameter(int idx, float param)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x1086AC0", Offset = "0x1086AC0", VA = "0x1086AC0")]
	public MainLoopProfilingProfilingMeter()
	{
	}
}
[Token(Token = "0x200014B")]
public class TestDebugController : MonoBehaviour
{
	[Token(Token = "0x6000673")]
	[Address(RVA = "0xFA1120", Offset = "0xFA1120", VA = "0xFA1120")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xFA1184", Offset = "0xFA1184", VA = "0xFA1184")]
	public TestDebugController()
	{
	}
}
[Token(Token = "0x200014C")]
public class ZooDebugController : MonoBehaviour
{
	[Token(Token = "0x6000675")]
	[Address(RVA = "0x1173454", Offset = "0x1173454", VA = "0x1173454")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x11734B8", Offset = "0x11734B8", VA = "0x11734B8")]
	public ZooDebugController()
	{
	}
}
[Token(Token = "0x200014D")]
public class ShapeKeyAnimation : MonoBehaviour
{
	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MotionSpeed;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float keyVol;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float count;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float PointNum;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _elapsedTime;

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xE09658", Offset = "0xE09658", VA = "0xE09658")]
	private void Start()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xE096E4", Offset = "0xE096E4", VA = "0xE096E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xE096E8", Offset = "0xE096E8", VA = "0xE096E8")]
	private void AnimationOpen()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xE097AC", Offset = "0xE097AC", VA = "0xE097AC")]
	private void NaturalDeath()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xE09860", Offset = "0xE09860", VA = "0xE09860")]
	public ShapeKeyAnimation()
	{
	}
}
[Token(Token = "0x200014E")]
public class GraphSetting : MonoBehaviour
{
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FF70", Offset = "0x87FF70")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GraphSetting <>4__this;

		[Token(Token = "0x17000095")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000681")]
			[Address(RVA = "0xC0A61C", Offset = "0xC0A61C", VA = "0xC0A61C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000683")]
			[Address(RVA = "0xC0A664", Offset = "0xC0A664", VA = "0xC0A664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xC0A4A0", Offset = "0xC0A4A0", VA = "0xC0A4A0")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0xC0A4CC", Offset = "0xC0A4CC", VA = "0xC0A4CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0xC0A4D0", Offset = "0xC0A4D0", VA = "0xC0A4D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xC0A624", Offset = "0xC0A624", VA = "0xC0A624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextAsset visitorGraph;

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x12B5FC0", Offset = "0x12B5FC0", VA = "0x12B5FC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891DE8", Offset = "0x891DE8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x12B602C", Offset = "0x12B602C", VA = "0x12B602C")]
	public GraphSetting()
	{
	}
}
[Token(Token = "0x2000150")]
public class Unit : MonoBehaviour
{
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FF80", Offset = "0x87FF80")]
	private sealed class <CoLookingTarget>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Unit <>4__this;

		[Token(Token = "0x17000098")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0xF9A574", Offset = "0xF9A574", VA = "0xF9A574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000692")]
			[Address(RVA = "0xF9A5BC", Offset = "0xF9A5BC", VA = "0xF9A5BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xF9A478", Offset = "0xF9A478", VA = "0xF9A478")]
		[DebuggerHidden]
		public <CoLookingTarget>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xF9A4A4", Offset = "0xF9A4A4", VA = "0xF9A4A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xF9A4A8", Offset = "0xF9A4A8", VA = "0xF9A4A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0xF9A57C", Offset = "0xF9A57C", VA = "0xF9A57C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Transform lookingTarget;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly LodAnimatorAdapter _animatorAdapter;

	[Token(Token = "0x17000097")]
	public LodAnimatorAdapter LodAnimatorAdapter
	{
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x1874A40", Offset = "0x1874A40", VA = "0x1874A40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x1874A48", Offset = "0x1874A48", VA = "0x1874A48", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x1874A68", Offset = "0x1874A68", VA = "0x1874A68")]
	public void LookAt(Vector3 position)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x1874B10", Offset = "0x1874B10", VA = "0x1874B10")]
	public void LookAtCamera()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x1874B54", Offset = "0x1874B54", VA = "0x1874B54")]
	public void StartLookingAtTarget(Transform target)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x1874BF0", Offset = "0x1874BF0", VA = "0x1874BF0")]
	public void StopLookinAtTarget()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x1874B84", Offset = "0x1874B84", VA = "0x1874B84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891E98", Offset = "0x891E98")]
	private IEnumerator CoLookingTarget()
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1874BF8", Offset = "0x1874BF8", VA = "0x1874BF8")]
	public void SetAnimation(string argName)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x1874C14", Offset = "0x1874C14", VA = "0x1874C14")]
	public Unit()
	{
	}
}
[Token(Token = "0x2000152")]
public class AnimationScript : MonoBehaviour
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isAnimated;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isRotating;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isFloating;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool isScaling;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotationAngle;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotationSpeed;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float floatSpeed;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool goingUp;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float floatRate;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float floatTimer;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 startScale;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 endScale;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool scalingUp;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float scaleSpeed;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float scaleRate;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float scaleTimer;

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xE244CC", Offset = "0xE244CC", VA = "0xE244CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xE244D0", Offset = "0xE244D0", VA = "0xE244D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xE246D4", Offset = "0xE246D4", VA = "0xE246D4")]
	public AnimationScript()
	{
	}
}
[Token(Token = "0x2000153")]
public enum FogUpdateMode
{
	[Token(Token = "0x40006D9")]
	OnLoad,
	[Token(Token = "0x40006DA")]
	Realtime
}
[Token(Token = "0x2000154")]
public enum FogAxisMode
{
	[Token(Token = "0x40006DC")]
	XAxis,
	[Token(Token = "0x40006DD")]
	YAxis,
	[Token(Token = "0x40006DE")]
	ZAxis
}
[Token(Token = "0x2000155")]
public enum FogDirectionalMode
{
	[Token(Token = "0x40006E0")]
	Off,
	[Token(Token = "0x40006E1")]
	On
}
[Token(Token = "0x2000156")]
public enum FogNoiseMode
{
	[Token(Token = "0x40006E3")]
	Off = 0,
	[Token(Token = "0x40006E4")]
	Procedural3D = 3
}
[Token(Token = "0x2000157")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87FF90", Offset = "0x87FF90")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x87FF90", Offset = "0x87FF90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87FF90", Offset = "0x87FF90")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x87FF90", Offset = "0x87FF90")]
public class HeightFogGlobal : StyledMonoBehaviour
{
	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StyledBanner", RVA = "0x884D40", Offset = "0x884D40")]
	public bool styledBanner;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "StyledMessage", RVA = "0x884DC0", Offset = "0x884DC0")]
	public bool messageUpdate;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "StyledCategory", RVA = "0x884E14", Offset = "0x884E14")]
	public bool categoryUpdate;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884E4C", Offset = "0x884E4C")]
	public FogUpdateMode updateMode;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "StyledCategory", RVA = "0x884E84", Offset = "0x884E84")]
	public bool categoryFog;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x884EBC", Offset = "0x884EBC")]
	public Material fogPreset;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x884EF4", Offset = "0x884EF4")]
	public Material fogPresetOld;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "StyledMessage", RVA = "0x884F04", Offset = "0x884F04")]
	public bool messageInvalidPreset;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x884F58", Offset = "0x884F58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x884F58", Offset = "0x884F58")]
	public float fogIntensity;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x884F9C", Offset = "0x884F9C")]
	public FogAxisMode fogAxisMode;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x884FB0", Offset = "0x884FB0")]
	public Color fogColor;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float fogDistanceStart;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float fogDistanceEnd;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float fogHeightStart;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float fogHeightEnd;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "StyledCategory", RVA = "0x884FC8", Offset = "0x884FC8")]
	public bool categorySkybox;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x885000", Offset = "0x885000")]
	public float skyboxFogHeight;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x885018", Offset = "0x885018")]
	public float skyboxFogFill;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "StyledCategory", RVA = "0x885030", Offset = "0x885030")]
	public bool categoryDirectional;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	public FogDirectionalMode directionalMode;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x885078", Offset = "0x885078")]
	public float directionalIntensity;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x885090", Offset = "0x885090")]
	public Color directionalColor;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "StyledCategory", RVA = "0x8850A8", Offset = "0x8850A8")]
	public bool categoryNoise;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public FogNoiseMode noiseMode;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8850E0", Offset = "0x8850E0")]
	public float noiseIntensity;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float noiseDistanceEnd;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float noiseScale;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 noiseSpeed;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "StyledSpace", RVA = "0x8850F8", Offset = "0x8850F8")]
	public bool styledSpace0;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x88510C", Offset = "0x88510C")]
	public Material heightFogMaterial;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x88511C", Offset = "0x88511C")]
	public Material blendMaterial;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x88512C", Offset = "0x88512C")]
	public Material localMaterial;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x88513C", Offset = "0x88513C")]
	public Material overrideMaterial;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x88514C", Offset = "0x88514C")]
	public float overrideCamToVolumeDistance;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x88515C", Offset = "0x88515C")]
	public float overrideVolumeDistanceFade;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x88516C", Offset = "0x88516C")]
	public float updater;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Camera cam;

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x12BC990", Offset = "0x12BC990", VA = "0x12BC990")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x12BDAD4", Offset = "0x12BDAD4", VA = "0x12BDAD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x12BDB40", Offset = "0x12BDB40", VA = "0x12BDB40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x12BDBCC", Offset = "0x12BDBCC", VA = "0x12BDBCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x12BDC14", Offset = "0x12BDC14", VA = "0x12BDC14")]
	private void Update()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x12BCD7C", Offset = "0x12BCD7C", VA = "0x12BCD7C")]
	private void GetCamera()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x12BDD74", Offset = "0x12BDD74", VA = "0x12BDD74")]
	private void SetPresetToScript()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x12BCF20", Offset = "0x12BCF20", VA = "0x12BCF20")]
	private void SetLocalMaterial()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x12BD3D0", Offset = "0x12BD3D0", VA = "0x12BD3D0")]
	private void SetGlobalShader()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x12BD964", Offset = "0x12BD964", VA = "0x12BD964")]
	private void SetGlobalKeywords()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x12BCE5C", Offset = "0x12BCE5C", VA = "0x12BCE5C")]
	private void SetFogSphereSize()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x12BCEC8", Offset = "0x12BCEC8", VA = "0x12BCEC8")]
	private void SetFogSpherePosition()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x12BD354", Offset = "0x12BD354", VA = "0x12BD354")]
	private void RenderPipelineSetTransparentQueue()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x12BE110", Offset = "0x12BE110", VA = "0x12BE110")]
	public HeightFogGlobal()
	{
	}
}
[Token(Token = "0x2000158")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x880058", Offset = "0x880058")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x880058", Offset = "0x880058")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x880058", Offset = "0x880058")]
public class HeightFogOverride : StyledMonoBehaviour
{
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StyledBanner", RVA = "0x88517C", Offset = "0x88517C")]
	public bool styledBanner;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "StyledMessage", RVA = "0x8851FC", Offset = "0x8851FC")]
	public bool messageUpdate;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "StyledMessage", RVA = "0x885250", Offset = "0x885250")]
	public bool messageNoHeightFogGlobal;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "StyledCategory", RVA = "0x8852A4", Offset = "0x8852A4")]
	public bool categorySettings;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8852DC", Offset = "0x8852DC")]
	public FogUpdateMode updateMode;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "StyledCategory", RVA = "0x885314", Offset = "0x885314")]
	public bool categoryVolume;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float volumeDistanceFade;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88534C", Offset = "0x88534C")]
	public float volumeVisibility;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "StyledCategory", RVA = "0x885364", Offset = "0x885364")]
	public bool categoryFog;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88539C", Offset = "0x88539C")]
	public Material fogPreset;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x8853D4", Offset = "0x8853D4")]
	public Material fogPresetOld;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "StyledMessage", RVA = "0x8853E4", Offset = "0x8853E4")]
	public bool messageInvalidPreset;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x885438", Offset = "0x885438")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x885438", Offset = "0x885438")]
	public float fogIntensity;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x88547C", Offset = "0x88547C")]
	public FogAxisMode fogAxisMode;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x885490", Offset = "0x885490")]
	public Color fogColor;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float fogDistanceStart;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float fogDistanceEnd;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float fogHeightStart;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float fogHeightEnd;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "StyledCategory", RVA = "0x8854A8", Offset = "0x8854A8")]
	public bool categotySkybox;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8854E0", Offset = "0x8854E0")]
	public float skyboxFogHeight;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8854F8", Offset = "0x8854F8")]
	public float skyboxFogFill;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "StyledCategory", RVA = "0x885510", Offset = "0x885510")]
	public bool categoryDirectional;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public FogDirectionalMode directionalMode;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x885548", Offset = "0x885548")]
	public float directionalIntensity;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x885560", Offset = "0x885560")]
	public Color directionalColor;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "StyledCategory", RVA = "0x885578", Offset = "0x885578")]
	public bool categoryNoise;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public FogNoiseMode noiseMode;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8855B0", Offset = "0x8855B0")]
	public float noiseIntensity;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float noiseDistanceEnd;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float noiseScale;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 noiseSpeed;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "StyledSpace", RVA = "0x8855C8", Offset = "0x8855C8")]
	public bool styledSpace0;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x8855DC", Offset = "0x8855DC")]
	public bool firstTime;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x8855EC", Offset = "0x8855EC")]
	public bool upgradedTo100;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material localMaterial;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Collider volumeCollider;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private HeightFogGlobal globalFog;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Camera cam;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool distanceSent;

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x12BE1F8", Offset = "0x12BE1F8", VA = "0x12BE1F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x12BE830", Offset = "0x12BE830", VA = "0x12BE830")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x12BEACC", Offset = "0x12BEACC", VA = "0x12BEACC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x12BE9EC", Offset = "0x12BE9EC", VA = "0x12BE9EC")]
	private void GetCamera()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x12BEC80", Offset = "0x12BEC80", VA = "0x12BEC80")]
	private void SetPresetToScript()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x12BE3FC", Offset = "0x12BE3FC", VA = "0x12BE3FC")]
	private void SetLocalMaterial()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x12BF01C", Offset = "0x12BF01C", VA = "0x12BF01C")]
	public HeightFogOverride()
	{
	}
}
[Token(Token = "0x2000159")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x8800EC", Offset = "0x8800EC")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x8800EC", Offset = "0x8800EC")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8800EC", Offset = "0x8800EC")]
public class HeightFogPerObject : StyledMonoBehaviour
{
	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StyledBanner", RVA = "0x8855FC", Offset = "0x8855FC")]
	public bool styledBanner;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "StyledMessage", RVA = "0x88567C", Offset = "0x88567C")]
	public bool messageNoRenderer;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "StyledMessage", RVA = "0x8856D0", Offset = "0x8856D0")]
	public bool messageMultiMaterials;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "StyledMessage", RVA = "0x885724", Offset = "0x885724")]
	public bool messageNoMaterial;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "StyledMessage", RVA = "0x885778", Offset = "0x885778")]
	public bool messageTransparencySupport;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "StyledCategory", RVA = "0x8857CC", Offset = "0x8857CC")]
	public bool categoryMaterial;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material customFogMaterial;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "StyledMessage", RVA = "0x885804", Offset = "0x885804")]
	public bool messageInvalidFogMaterial;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "StyledSpace", RVA = "0x885858", Offset = "0x885858")]
	public bool styledSpace0;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int transparencyRenderQueue;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material originalMaterial;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material instanceMaterial;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material transparencyMaterial;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject transparencyGO;

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x17822E0", Offset = "0x17822E0", VA = "0x17822E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1782804", Offset = "0x1782804", VA = "0x1782804")]
	private bool GameObjectIsInvalid()
	{
		return default(bool);
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x1782968", Offset = "0x1782968", VA = "0x1782968")]
	public HeightFogPerObject()
	{
	}
}
[Token(Token = "0x200015A")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x880148", Offset = "0x880148")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x880148", Offset = "0x880148")]
public class PolyverseProp : StyledMonoBehaviour
{
	[Token(Token = "0x200015B")]
	public enum GradientMaskEnum
	{
		[Token(Token = "0x400074B")]
		VertexPosX,
		[Token(Token = "0x400074C")]
		VertexPosY,
		[Token(Token = "0x400074D")]
		VertexPosZ
	}

	[Token(Token = "0x200015C")]
	public enum MotionMaskEnum
	{
		[Token(Token = "0x400074F")]
		VertexPosX,
		[Token(Token = "0x4000750")]
		VertexPosY,
		[Token(Token = "0x4000751")]
		VertexPosZ,
		[Token(Token = "0x4000752")]
		VertexRed,
		[Token(Token = "0x4000753")]
		VertexGreen,
		[Token(Token = "0x4000754")]
		VertexBlue,
		[Token(Token = "0x4000755")]
		VertexAlpha
	}

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StyledBanner", RVA = "0x88586C", Offset = "0x88586C")]
	public bool styledBanner;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "StyledMessage", RVA = "0x8858EC", Offset = "0x8858EC")]
	public bool warningMissingMesh;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GradientMaskEnum gradientMask;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x885940", Offset = "0x885940")]
	public GradientMaskEnum gradientMaskOld;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MotionMaskEnum motionMask;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x885950", Offset = "0x885950")]
	public MotionMaskEnum motionMaskOld;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public MotionMaskEnum detailMask;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x885960", Offset = "0x885960")]
	public MotionMaskEnum detailMaskOld;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "StyledSpace", RVA = "0x885970", Offset = "0x885970")]
	public bool styledSpace;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x885984", Offset = "0x885984")]
	public Mesh sharedMesh;

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x1016964", Offset = "0x1016964", VA = "0x1016964")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x1017694", Offset = "0x1017694", VA = "0x1017694")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1016B50", Offset = "0x1016B50", VA = "0x1016B50")]
	private void MaskDataToTexCoord(Mesh inputMesh, bool changeName)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x1017774", Offset = "0x1017774", VA = "0x1017774")]
	private void UpdatePropsWithSharedMesh()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x101789C", Offset = "0x101789C", VA = "0x101789C")]
	public PolyverseProp()
	{
	}
}
[Token(Token = "0x200015D")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x880180", Offset = "0x880180")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x880180", Offset = "0x880180")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x880180", Offset = "0x880180")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x880180", Offset = "0x880180")]
public class PolyverseWind : StyledMonoBehaviour
{
	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StyledBanner", RVA = "0x885994", Offset = "0x885994")]
	public bool styledBanner;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float windAmplitude;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float windSpeed;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turbulenceSpeed;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "StyledSpace", RVA = "0x885A14", Offset = "0x885A14")]
	public bool styledSpace;

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x10178B4", Offset = "0x10178B4", VA = "0x10178B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x1017970", Offset = "0x1017970", VA = "0x1017970")]
	private void SetGlobalShaderProperties()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x1017A64", Offset = "0x1017A64", VA = "0x1017A64")]
	public PolyverseWind()
	{
	}
}
[Token(Token = "0x200015E")]
[AttributeAttribute(Name = "StyledMonoHideScriptField", RVA = "0x880234", Offset = "0x880234")]
public class StyledMonoBehaviour : MonoBehaviour
{
	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xE16760", Offset = "0xE16760", VA = "0xE16760")]
	public StyledMonoBehaviour()
	{
	}
}
[Token(Token = "0x200015F")]
public class DemoToonVFX : MonoBehaviour
{
	[Token(Token = "0x2000160")]
	public struct SVA
	{
		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float S;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float V;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float A;
	}

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Holder;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float currDistance;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xRotate;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yRotate;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float prevDistance;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float x;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float y;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885A28", Offset = "0x885A28")]
	private float windowDpi;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int Prefab;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject Instance;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float StartColor;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float HueColor;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture HueTexture;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float[] activationTime;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Animator animObject;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<SVA> svList;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float H;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool useAnimation;

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x122CC48", Offset = "0x122CC48", VA = "0x122CC48")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x122D0BC", Offset = "0x122D0BC", VA = "0x122D0BC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x122CD10", Offset = "0x122CD10", VA = "0x122CD10")]
	private void Counter(int count)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x122D4F0", Offset = "0x122D4F0", VA = "0x122D4F0")]
	private void Activate()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x122D510", Offset = "0x122D510", VA = "0x122D510")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x122D914", Offset = "0x122D914", VA = "0x122D914")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x122D944", Offset = "0x122D944", VA = "0x122D944")]
	public DemoToonVFX()
	{
	}
}
[Token(Token = "0x2000161")]
public class FrontMover : MonoBehaviour
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pivot;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem effect;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float drug;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float repeatingTime;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startSpeed;

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x12B3D7C", Offset = "0x12B3D7C", VA = "0x12B3D7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x12B3DF4", Offset = "0x12B3DF4", VA = "0x12B3DF4")]
	private void StartAgain()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x12B3E48", Offset = "0x12B3E48", VA = "0x12B3E48")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x12B3F10", Offset = "0x12B3F10", VA = "0x12B3F10")]
	public FrontMover()
	{
	}
}
[Token(Token = "0x2000162")]
public class EGA_EffectSound : MonoBehaviour
{
	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Repeating;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RepeatTime;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartTime;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool RandomVolume;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minVolume;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxVolume;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioClip clip;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource soundComponent;

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x1230BF8", Offset = "0x1230BF8", VA = "0x1230BF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x1230C60", Offset = "0x1230C60", VA = "0x1230C60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1230D1C", Offset = "0x1230D1C", VA = "0x1230D1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x1230D6C", Offset = "0x1230D6C", VA = "0x1230D6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1230CF8", Offset = "0x1230CF8", VA = "0x1230CF8")]
	private void RepeatSound()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x1230DBC", Offset = "0x1230DBC", VA = "0x1230DBC")]
	public EGA_EffectSound()
	{
	}
}
[Token(Token = "0x2000163")]
public class ParticleCollisionInstance : MonoBehaviour
{
	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] EffectsOnCollision;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DestroyTimeDelay;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool UseWorldSpacePosition;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Offset;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 rotationOffset;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useOnlyRotationOffset;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool UseFirePointRotation;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool DestoyMainEffect;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem part;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem ps;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x111342C", Offset = "0x111342C", VA = "0x111342C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x1113480", Offset = "0x1113480", VA = "0x1113480")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x1113960", Offset = "0x1113960", VA = "0x1113960")]
	public ParticleCollisionInstance()
	{
	}
}
[Token(Token = "0x2000164")]
public class DemoShooting : MonoBehaviour
{
	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject FirePoint;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera Cam;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MaxLength;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray RayMouse;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 direction;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion rotation;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x885A60", Offset = "0x885A60")]
	private float windowDpi;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int Prefab;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject Instance;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float hSliderValue;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float fireCountdown;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float buttonSaver;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Animation camAnim;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x122C3D4", Offset = "0x122C3D4", VA = "0x122C3D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x122C48C", Offset = "0x122C48C", VA = "0x122C48C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x122CA0C", Offset = "0x122CA0C", VA = "0x122CA0C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x122C444", Offset = "0x122C444", VA = "0x122C444")]
	private void Counter(int count)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x122C930", Offset = "0x122C930", VA = "0x122C930")]
	private void RotateToMouseDirection(GameObject obj, Vector3 destination)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x122CC34", Offset = "0x122CC34", VA = "0x122CC34")]
	public DemoShooting()
	{
	}
}
[Token(Token = "0x2000165")]
public class AutoDestroyPS : MonoBehaviour
{
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timeLeft;

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xE2FC58", Offset = "0xE2FC58", VA = "0xE2FC58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xE2FD40", Offset = "0xE2FD40", VA = "0xE2FD40")]
	public AutoDestroyPS()
	{
	}
}
[Token(Token = "0x2000166")]
public class ProjectileMover : MonoBehaviour
{
	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float hitOffset;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UseFirePointRotation;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotationOffset;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hit;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject flash;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] Detached;

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x101C420", Offset = "0x101C420", VA = "0x101C420")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x101C6C4", Offset = "0x101C6C4", VA = "0x101C6C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x101C730", Offset = "0x101C730", VA = "0x101C730")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x101CC20", Offset = "0x101CC20", VA = "0x101CC20")]
	public ProjectileMover()
	{
	}
}
[Token(Token = "0x2000167")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x880244", Offset = "0x880244")]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x1272A20", Offset = "0x1272A20", VA = "0x1272A20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x1272A2C", Offset = "0x1272A2C", VA = "0x1272A2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x1272B50", Offset = "0x1272B50", VA = "0x1272B50")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x2000168")]
public class CFX_Demo_New : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000169")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8802A4", Offset = "0x8802A4")]
	private sealed class <>c
	{
		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<GameObject> <>9__16_0;

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xC0486C", Offset = "0xC0486C", VA = "0xC0486C")]
		public <>c()
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xC04874", Offset = "0xC04874", VA = "0xC04874")]
		internal int <Awake>b__16_0(GameObject o1, GameObject o2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8802B4", Offset = "0x8802B4")]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x1700009A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006EE")]
			[Address(RVA = "0xC04A80", Offset = "0xC04A80", VA = "0xC04A80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006F0")]
			[Address(RVA = "0xC04AC8", Offset = "0xC04AC8", VA = "0xC04AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xC048C8", Offset = "0xC048C8", VA = "0xC048C8")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xC048F4", Offset = "0xC048F4", VA = "0xC048F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xC048F8", Offset = "0xC048F8", VA = "0xC048F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xC04A88", Offset = "0xC04A88", VA = "0xC04A88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x885A98", Offset = "0x885A98")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x885A98", Offset = "0x885A98")]
	public Image slowMoBtn;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x885AD0", Offset = "0x885AD0")]
	public Text EffectLabel;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exampleIndex;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool slowMo;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x1272B60", Offset = "0x1272B60", VA = "0x1272B60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x1272F20", Offset = "0x1272F20", VA = "0x1272F20")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x1273564", Offset = "0x1273564", VA = "0x1273564")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x1273644", Offset = "0x1273644", VA = "0x1273644")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x1273748", Offset = "0x1273748", VA = "0x1273748")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x1273814", Offset = "0x1273814", VA = "0x1273814")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x1273818", Offset = "0x1273818", VA = "0x1273818")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x1272DE8", Offset = "0x1272DE8", VA = "0x1272DE8")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x127337C", Offset = "0x127337C", VA = "0x127337C")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x127381C", Offset = "0x127381C", VA = "0x127381C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891F48", Offset = "0x891F48")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x12731A8", Offset = "0x12731A8", VA = "0x12731A8")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x12731E0", Offset = "0x12731E0", VA = "0x12731E0")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x1273214", Offset = "0x1273214", VA = "0x1273214")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x1273888", Offset = "0x1273888", VA = "0x1273888")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x200016B")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x1273900", Offset = "0x1273900", VA = "0x1273900")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x127398C", Offset = "0x127398C", VA = "0x127398C")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x200016C")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 baseDir;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x12739A4", Offset = "0x12739A4", VA = "0x12739A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x1273A58", Offset = "0x1273A58", VA = "0x1273A58")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x1273B38", Offset = "0x1273B38", VA = "0x1273B38")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x200016D")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1273B84", Offset = "0x1273B84", VA = "0x1273B84")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x1273CA8", Offset = "0x1273CA8", VA = "0x1273CA8")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x200016E")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1273D08", Offset = "0x1273D08", VA = "0x1273D08")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1273DB4", Offset = "0x1273DB4", VA = "0x1273DB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1273E30", Offset = "0x1273E30", VA = "0x1273E30")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x200016F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8802C4", Offset = "0x8802C4")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x2000170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880324", Offset = "0x880324")]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x1700009C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000702")]
			[Address(RVA = "0xC047BC", Offset = "0xC047BC", VA = "0xC047BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000704")]
			[Address(RVA = "0xC04804", Offset = "0xC04804", VA = "0xC04804", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xC04600", Offset = "0xC04600", VA = "0xC04600")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xC0462C", Offset = "0xC0462C", VA = "0xC0462C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xC04630", Offset = "0xC04630", VA = "0xC04630", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xC047C4", Offset = "0xC047C4", VA = "0xC047C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x12728E0", Offset = "0x12728E0", VA = "0x12728E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x1272930", Offset = "0x1272930", VA = "0x1272930")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x891FF8", Offset = "0x891FF8")]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x127299C", Offset = "0x127299C", VA = "0x127299C")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x2000171")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x12729A4", Offset = "0x12729A4", VA = "0x12729A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1272A10", Offset = "0x1272A10", VA = "0x1272A10")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x2000172")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x880334", Offset = "0x880334")]
public class CFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loop;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothFactor;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float addIntensity;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minIntensity;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float baseIntensity;

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x1273E7C", Offset = "0x1273E7C", VA = "0x1273E7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x1273EE0", Offset = "0x1273EE0", VA = "0x1273EE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1273EF4", Offset = "0x1273EF4", VA = "0x1273EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1273F94", Offset = "0x1273F94", VA = "0x1273F94")]
	public CFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000173")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x880394", Offset = "0x880394")]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x1273FA4", Offset = "0x1273FA4", VA = "0x1273FA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x1274008", Offset = "0x1274008", VA = "0x1274008")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1274088", Offset = "0x1274088", VA = "0x1274088")]
	private void Update()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x12741F4", Offset = "0x12741F4", VA = "0x12741F4")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000174")]
public class Rotator : MonoBehaviour
{
	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Speed;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _defaultEulerAngles;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _transformCash;

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x1025C68", Offset = "0x1025C68", VA = "0x1025C68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1025CA8", Offset = "0x1025CA8", VA = "0x1025CA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x1025CF8", Offset = "0x1025CF8", VA = "0x1025CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x1025D70", Offset = "0x1025D70", VA = "0x1025D70")]
	public Rotator()
	{
	}
}
[Token(Token = "0x2000175")]
public class CallbackShowcase : MonoBehaviour
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PresentAnimator presentAnimator;

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x1274204", Offset = "0x1274204", VA = "0x1274204")]
	private void Start()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x1274414", Offset = "0x1274414", VA = "0x1274414")]
	public void IdleHandler()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x1274474", Offset = "0x1274474", VA = "0x1274474")]
	public void MouseOverHandler()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x12744D4", Offset = "0x12744D4", VA = "0x12744D4")]
	public void OpeningHandler()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1274534", Offset = "0x1274534", VA = "0x1274534")]
	public void ClosingHandler()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1274594", Offset = "0x1274594", VA = "0x1274594")]
	public CallbackShowcase()
	{
	}
}
[Token(Token = "0x2000176")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8803F4", Offset = "0x8803F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8803F4", Offset = "0x8803F4")]
public class PresentAnimator : MonoBehaviour
{
	[Token(Token = "0x2000177")]
	public enum AnimNames
	{
		[Token(Token = "0x400080B")]
		Idle,
		[Token(Token = "0x400080C")]
		Breath,
		[Token(Token = "0x400080D")]
		Jump,
		[Token(Token = "0x400080E")]
		Open,
		[Token(Token = "0x400080F")]
		Explode,
		[Token(Token = "0x4000810")]
		Close
	}

	[Token(Token = "0x2000178")]
	private enum presentStates
	{
		[Token(Token = "0x4000812")]
		Idle,
		[Token(Token = "0x4000813")]
		MouseOver,
		[Token(Token = "0x4000814")]
		Opening,
		[Token(Token = "0x4000815")]
		Closing
	}

	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880488", Offset = "0x880488")]
	private sealed class <PlayFX>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem[] fxs;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem[] fxPool;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PresentAnimator <>4__this;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isLoop;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float delay;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600072F")]
			[Address(RVA = "0xC16168", Offset = "0xC16168", VA = "0xC16168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000731")]
			[Address(RVA = "0xC161B0", Offset = "0xC161B0", VA = "0xC161B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xC1600C", Offset = "0xC1600C", VA = "0xC1600C")]
		[DebuggerHidden]
		public <PlayFX>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xC16038", Offset = "0xC16038", VA = "0xC16038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xC1603C", Offset = "0xC1603C", VA = "0xC1603C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xC16170", Offset = "0xC16170", VA = "0xC16170", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880498", Offset = "0x880498")]
	private sealed class <CloseBackDelayed>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PresentAnimator <>4__this;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000735")]
			[Address(RVA = "0xC15FBC", Offset = "0xC15FBC", VA = "0xC15FBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000737")]
			[Address(RVA = "0xC16004", Offset = "0xC16004", VA = "0xC16004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xC15EBC", Offset = "0xC15EBC", VA = "0xC15EBC")]
		[DebuggerHidden]
		public <CloseBackDelayed>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xC15EE8", Offset = "0xC15EE8", VA = "0xC15EE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xC15EEC", Offset = "0xC15EEC", VA = "0xC15EEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xC15FC4", Offset = "0xC15FC4", VA = "0xC15FC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animatorComponent;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject FXRoot;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] ContainedItems;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsPreloadContainedItems;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] containedItemsPool;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimNames IdleAnim;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem[] IdleFX;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool IsPreLoadIdleFX;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float IdleFXDelay;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool IsIdleFXLoop;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem[] IdleFXPool;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action IdleHandler;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool EnableMouseOver;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public AnimNames MouseOverAnim;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float MouseOverFadeOut;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ParticleSystem[] MouseOverFX;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool IsPreLoadMouseOverFX;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float MouseOverFXDelay;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool IsMouseOverFXLoop;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ParticleSystem[] MouseOverFXPool;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Action MouseOverHandler;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool EnableClick;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public AnimNames ClickedAnim;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem[] ClickedFX;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool IsPreLoadClickedFX;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float ClickedFXDelay;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool IsClickedFXLoop;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ParticleSystem[] ClickedFXPool;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Action OpeningHandler;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool EnableCloseBack;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	public bool ClickToCloseBack;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	public bool AutoCloseBack;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float CloseBackDelay;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ParticleSystem[] CloseBackFX;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool IsPreLoadCloseBackFX;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float CloseBackFXDelay;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool IsCloseBackFXLoop;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ParticleSystem[] CloseBackFXPool;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Action ClosingHandler;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private presentStates _presentState;

	[Token(Token = "0x1700009E")]
	private presentStates presentState
	{
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x101B620", Offset = "0x101B620", VA = "0x101B620")]
		get
		{
			return default(presentStates);
		}
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x101B1A8", Offset = "0x101B1A8", VA = "0x101B1A8")]
		set
		{
		}
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x101B628", Offset = "0x101B628", VA = "0x101B628")]
	private void Start()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x101B70C", Offset = "0x101B70C", VA = "0x101B70C")]
	private void PreloadFX(ParticleSystem[] fxs, bool isLoop, ref ParticleSystem[] fxPool)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x101B57C", Offset = "0x101B57C", VA = "0x101B57C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8920A8", Offset = "0x8920A8")]
	private IEnumerator PlayFX(ParticleSystem[] fxs, float delay, bool isLoop, ParticleSystem[] fxPool)
	{
		return null;
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x101B498", Offset = "0x101B498", VA = "0x101B498")]
	private void StopFX(ParticleSystem[] fxs)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x101BC30", Offset = "0x101BC30", VA = "0x101BC30")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x101BC4C", Offset = "0x101BC4C", VA = "0x101BC4C")]
	private void OnMouseOver()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x101BC68", Offset = "0x101BC68", VA = "0x101BC68")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x101BC88", Offset = "0x101BC88", VA = "0x101BC88")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x101BCC0", Offset = "0x101BCC0", VA = "0x101BCC0")]
	public void IsOpened()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x101BE1C", Offset = "0x101BE1C", VA = "0x101BE1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x892108", Offset = "0x892108")]
	private IEnumerator CloseBackDelayed()
	{
		return null;
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x101BE88", Offset = "0x101BE88", VA = "0x101BE88")]
	public void IsClosed()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x101B9EC", Offset = "0x101B9EC", VA = "0x101B9EC")]
	private void PreloadGameObjects(GameObject[] gameObjects, ref GameObject[] gameObjectsPool)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x101BCFC", Offset = "0x101BCFC", VA = "0x101BCFC")]
	private void ActivateGameObjects(GameObject[] gameObjects, ref GameObject[] gameObjectsPool)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x101BE90", Offset = "0x101BE90", VA = "0x101BE90")]
	public void SetStateIdle()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x101BEB0", Offset = "0x101BEB0", VA = "0x101BEB0")]
	public void SetStateSelected()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x101BECC", Offset = "0x101BECC", VA = "0x101BECC")]
	public void SetStateOpen()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x101BEE4", Offset = "0x101BEE4", VA = "0x101BEE4")]
	public PresentAnimator()
	{
	}
}
[Token(Token = "0x200017B")]
public class handanimations : MonoBehaviour
{
	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ViveController;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject OculusController;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject StickUp;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject StickFront;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator anim;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int Idle;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int Point;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int GrabLarge;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int GrabSmall;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int GrabStickUp;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int GrabStickFront;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int ThumbUp;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int Fist;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int Gun;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int GunShoot;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int PushButton;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int Spread;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int MiddleFinger;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int Peace;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int OK;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int Phone;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int Rock;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int Natural;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int Number3;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int Number4;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int Number3V2;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int HoldViveController;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int PressTriggerViveController;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int HoldOculusController;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int PressTriggerOculusController;

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x117578C", Offset = "0x117578C", VA = "0x117578C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x1175834", Offset = "0x1175834", VA = "0x1175834")]
	private void Update()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x1175CB8", Offset = "0x1175CB8", VA = "0x1175CB8")]
	public handanimations()
	{
	}
}
[Token(Token = "0x200017C")]
public class QuickStart : MonoBehaviour
{
	[Token(Token = "0x600073B")]
	[Address(RVA = "0x101EFEC", Offset = "0x101EFEC", VA = "0x101EFEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x101F05C", Offset = "0x101F05C", VA = "0x101F05C")]
	public QuickStart()
	{
	}
}
[Token(Token = "0x200017D")]
public class TweenFragment : MonoBehaviour
{
	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform TargetPos;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LerpTime;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initPos;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x1874818", Offset = "0x1874818", VA = "0x1874818")]
	private void Start()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x1874858", Offset = "0x1874858", VA = "0x1874858")]
	private void Update()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x1874934", Offset = "0x1874934", VA = "0x1874934")]
	public TweenFragment()
	{
	}
}
[Token(Token = "0x200017E")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureCombiner.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xE30568", Offset = "0xE30568", VA = "0xE30568")]
	public string GetShaderNameForPipeline()
	{
		return null;
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xE305F8", Offset = "0xE305F8", VA = "0xE305F8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xE30BC4", Offset = "0xE30BC4", VA = "0xE30BC4")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xE30DCC", Offset = "0xE30DCC", VA = "0xE30DCC")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x200017F")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000744")]
	[Address(RVA = "0x1082E48", Offset = "0x1082E48", VA = "0x1082E48")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1082F28", Offset = "0x1082F28", VA = "0x1082F28")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000180")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1084898", Offset = "0x1084898", VA = "0x1084898")]
	private void Start()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x10849E0", Offset = "0x10849E0", VA = "0x10849E0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1084C54", Offset = "0x1084C54", VA = "0x1084C54")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x10851E0", Offset = "0x10851E0", VA = "0x10851E0")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x2000181")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x600074A")]
	[Address(RVA = "0x10838C8", Offset = "0x10838C8", VA = "0x10838C8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x10839A8", Offset = "0x10839A8", VA = "0x10839A8")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000182")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8804A8", Offset = "0x8804A8")]
	private sealed class <largeNumber>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000754")]
			[Address(RVA = "0xC0E9C4", Offset = "0xC0E9C4", VA = "0xC0E9C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000756")]
			[Address(RVA = "0xC0EA0C", Offset = "0xC0EA0C", VA = "0xC0EA0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xC0E834", Offset = "0xC0E834", VA = "0xC0E834")]
		[DebuggerHidden]
		public <largeNumber>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xC0E860", Offset = "0xC0E860", VA = "0xC0E860", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xC0E864", Offset = "0xC0E864", VA = "0xC0E864", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xC0E9CC", Offset = "0xC0E9CC", VA = "0xC0E9CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MultiMeshBaker mbd;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x1082F30", Offset = "0x1082F30", VA = "0x1082F30")]
	private float GaussianValue()
	{
		return default(float);
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x1082FC8", Offset = "0x1082FC8", VA = "0x1082FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x10833A4", Offset = "0x10833A4", VA = "0x10833A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x892208", Offset = "0x892208")]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x1083410", Offset = "0x1083410", VA = "0x1083410")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x10834F0", Offset = "0x10834F0", VA = "0x10834F0")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x2000184")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x1083568", Offset = "0x1083568", VA = "0x1083568")]
	private void Start()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x10835C4", Offset = "0x10835C4", VA = "0x10835C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x1083650", Offset = "0x1083650", VA = "0x1083650")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x1083730", Offset = "0x1083730", VA = "0x1083730")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x2000185")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x1083738", Offset = "0x1083738", VA = "0x1083738")]
	private void Update()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x10837D0", Offset = "0x10837D0", VA = "0x10837D0")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x2000186")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x600075D")]
	[Address(RVA = "0x10837D8", Offset = "0x10837D8", VA = "0x10837D8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x10838B8", Offset = "0x10838B8", VA = "0x10838B8")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x2000187")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x8804B8", Offset = "0x8804B8")]
public class MB_MigrateMaterialsToDifferentPipeline : MonoBehaviour
{
	[Token(Token = "0x600075F")]
	[Address(RVA = "0x10838C0", Offset = "0x10838C0", VA = "0x10838C0")]
	public MB_MigrateMaterialsToDifferentPipeline()
	{
	}
}
[Token(Token = "0x2000188")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x10839B0", Offset = "0x10839B0", VA = "0x10839B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x1083BA4", Offset = "0x1083BA4", VA = "0x1083BA4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x1084778", Offset = "0x1084778", VA = "0x1084778")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x1084890", Offset = "0x1084890", VA = "0x1084890")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Token(Token = "0x2000189")]
public class MB_SwitchBakedObjectsTexture : MonoBehaviour
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer targetRenderer;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x10851E8", Offset = "0x10851E8", VA = "0x10851E8")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x10852C8", Offset = "0x10852C8", VA = "0x10852C8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x108536C", Offset = "0x108536C", VA = "0x108536C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x108560C", Offset = "0x108560C", VA = "0x108560C")]
	public MB_SwitchBakedObjectsTexture()
	{
	}
}
[Token(Token = "0x200018A")]
public class SABoneColliderCommon
{
	[Token(Token = "0x200018B")]
	public enum BoneWeightType
	{
		[Token(Token = "0x4000860")]
		Bone2,
		[Token(Token = "0x4000861")]
		Bone4
	}

	[Token(Token = "0x200018C")]
	public enum BoneTriangleExtent
	{
		[Token(Token = "0x4000863")]
		Disable,
		[Token(Token = "0x4000864")]
		Vertex2,
		[Token(Token = "0x4000865")]
		Vertex1
	}

	[Serializable]
	[Token(Token = "0x200018D")]
	public class BoneProperty
	{
		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool recursivery;

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xF8DB1C", Offset = "0xF8DB1C", VA = "0xF8DB1C")]
		public BoneProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xF8DBA0", Offset = "0xF8DBA0", VA = "0xF8DBA0")]
		public BoneProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200018E")]
	public class SplitProperty
	{
		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BoneWeightType boneWeightType;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int boneWeight2;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int boneWeight3;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int boneWeight4;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool greaterBoneWeight;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public BoneTriangleExtent boneTriangleExtent;

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xF8DD90", Offset = "0xF8DD90", VA = "0xF8DD90")]
		public SplitProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xF8E1B4", Offset = "0xF8E1B4", VA = "0xF8E1B4")]
		public SplitProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200018F")]
	public class SABoneColliderProperty
	{
		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BoneProperty boneProperty;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SplitProperty splitProperty;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAColliderBuilderCommon.ReducerProperty reducerProperty;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SAColliderBuilderCommon.ColliderProperty colliderProperty;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool modifyNameEnabled;

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xF8E2B0", Offset = "0xF8E2B0", VA = "0xF8E2B0")]
		public SABoneColliderProperty Copy()
		{
			return null;
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xF8E05C", Offset = "0xF8E05C", VA = "0xF8E05C")]
		public SABoneColliderProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000190")]
	public class SABoneColliderBuilderProperty
	{
		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplitProperty splitProperty;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SAColliderBuilderCommon.ReducerProperty reducerProperty;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAColliderBuilderCommon.ColliderProperty colliderProperty;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool modifyNameEnabled;

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xF8DBA8", Offset = "0xF8DBA8", VA = "0xF8DBA8")]
		public SABoneColliderBuilderProperty Copy()
		{
			return null;
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xF8DFA0", Offset = "0xF8DFA0", VA = "0xF8DFA0")]
		public SABoneColliderProperty ToSABoneColliderProperty()
		{
			return null;
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xF8DC64", Offset = "0xF8DC64", VA = "0xF8DC64")]
		public SABoneColliderBuilderProperty()
		{
		}
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x10263A0", Offset = "0x10263A0", VA = "0x10263A0")]
	public SABoneColliderCommon()
	{
	}
}
[Token(Token = "0x2000191")]
public class SAColliderBuilderCommon
{
	[Token(Token = "0x2000192")]
	public enum ShapeType
	{
		[Token(Token = "0x4000879")]
		None,
		[Token(Token = "0x400087A")]
		Mesh,
		[Token(Token = "0x400087B")]
		Box,
		[Token(Token = "0x400087C")]
		Capsule,
		[Token(Token = "0x400087D")]
		Sphere
	}

	[Token(Token = "0x2000193")]
	public enum FitType
	{
		[Token(Token = "0x400087F")]
		Outer,
		[Token(Token = "0x4000880")]
		Inner
	}

	[Token(Token = "0x2000194")]
	public enum MeshType
	{
		[Token(Token = "0x4000882")]
		Raw,
		[Token(Token = "0x4000883")]
		ConvexBoxes,
		[Token(Token = "0x4000884")]
		ConvexHull,
		[Token(Token = "0x4000885")]
		Box
	}

	[Token(Token = "0x2000195")]
	public enum SliceMode
	{
		[Token(Token = "0x4000887")]
		Auto,
		[Token(Token = "0x4000888")]
		X,
		[Token(Token = "0x4000889")]
		Y,
		[Token(Token = "0x400088A")]
		Z
	}

	[Token(Token = "0x2000196")]
	public enum ElementType
	{
		[Token(Token = "0x400088C")]
		X,
		[Token(Token = "0x400088D")]
		XYZ
	}

	[Serializable]
	[Token(Token = "0x2000197")]
	public struct Bool3
	{
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool x;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool y;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool z;

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xF8E380", Offset = "0xF8E380", VA = "0xF8E380")]
		public Bool3(bool x, bool y, bool z)
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xF8E39C", Offset = "0xF8E39C", VA = "0xF8E39C")]
		public void SetValue(bool x, bool y, bool z)
		{
		}
	}

	[Token(Token = "0x2000198")]
	public enum ColliderToChild
	{
		[Token(Token = "0x4000892")]
		Auto,
		[Token(Token = "0x4000893")]
		On,
		[Token(Token = "0x4000894")]
		Off
	}

	[Serializable]
	[Token(Token = "0x2000199")]
	public class ReducerProperty
	{
		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShapeType shapeType;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FitType fitType;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshType meshType;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxTriangles;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SliceMode sliceMode;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 scale;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ElementType scaleElementType;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 minThickness;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ElementType minThicknessElementType;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Bool3 optimizeRotation;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ElementType optimizeRotationElementType;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ColliderToChild colliderToChild;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 offset;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 thicknessA;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 thicknessB;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool viewAdvanced;

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xF8DE14", Offset = "0xF8DE14", VA = "0xF8DE14")]
		public ReducerProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xF8E1DC", Offset = "0xF8E1DC", VA = "0xF8E1DC")]
		public ReducerProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200019A")]
	public class ColliderProperty
	{
		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool convex;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isTrigger;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PhysicMaterial material;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isCreateAsset;

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xF8DE98", Offset = "0xF8DE98", VA = "0xF8DE98")]
		public ColliderProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xF8E278", Offset = "0xF8E278", VA = "0xF8E278")]
		public ColliderProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200019B")]
	public class RigidbodyProperty
	{
		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float mass;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float drag;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angularDrag;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isKinematic;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool useGravity;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RigidbodyInterpolation interpolation;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public CollisionDetectionMode collisionDetectionMode;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isCreate;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool viewAdvanced;

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xF8DF1C", Offset = "0xF8DF1C", VA = "0xF8DF1C")]
		public RigidbodyProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xF8E288", Offset = "0xF8E288", VA = "0xF8E288")]
		public RigidbodyProperty()
		{
		}
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x10263A8", Offset = "0x10263A8", VA = "0x10263A8")]
	public SAColliderBuilderCommon()
	{
	}
}
[Token(Token = "0x200019C")]
public class SAMeshColliderCommon
{
	[Token(Token = "0x200019D")]
	public enum SplitMode
	{
		[Token(Token = "0x40008B3")]
		None,
		[Token(Token = "0x40008B4")]
		Material,
		[Token(Token = "0x40008B5")]
		Primitive,
		[Token(Token = "0x40008B6")]
		Polygon
	}

	[Serializable]
	[Token(Token = "0x200019E")]
	public class SplitMesh
	{
		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int subMeshCount;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int subMesh;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int triangle;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 triangleVertex;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] polygonTriangles;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] polygonVertices;

		[NonSerialized]
		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] triangles;

		[NonSerialized]
		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3[] vertices;

		[NonSerialized]
		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3[] triangleNormals;

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xF8E8D0", Offset = "0xF8E8D0", VA = "0xF8E8D0")]
		public void PurgeTemporary()
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xF8E8DC", Offset = "0xF8E8DC", VA = "0xF8E8DC")]
		public SplitMesh()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200019F")]
	public class SplitProperty
	{
		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool splitMaterialEnabled;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool splitPrimitiveEnabled;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool splitPolygonNormalEnabled;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float splitPolygonNormalAngle;

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xF8E598", Offset = "0xF8E598", VA = "0xF8E598")]
		public SplitProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xF8E7FC", Offset = "0xF8E7FC", VA = "0xF8E7FC")]
		public SplitProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001A0")]
	public class SAMeshColliderProperty
	{
		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplitProperty splitProperty;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SAColliderBuilderCommon.ReducerProperty reducerProperty;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAColliderBuilderCommon.ColliderProperty colliderProperty;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool modifyNameEnabled;

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xF8E814", Offset = "0xF8E814", VA = "0xF8E814")]
		public SAMeshColliderProperty Copy()
		{
			return null;
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xF8E6D8", Offset = "0xF8E6D8", VA = "0xF8E6D8")]
		public SAMeshColliderProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001A1")]
	public class SAMeshColliderBuilderProperty
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplitProperty splitProperty;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SAColliderBuilderCommon.ReducerProperty reducerProperty;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAColliderBuilderCommon.ColliderProperty colliderProperty;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool modifyNameEnabled;

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xF8E3B8", Offset = "0xF8E3B8", VA = "0xF8E3B8")]
		public SAMeshColliderBuilderProperty Copy()
		{
			return null;
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xF8E61C", Offset = "0xF8E61C", VA = "0xF8E61C")]
		public SAMeshColliderProperty ToSAMeshColliderProperty()
		{
			return null;
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xF8E474", Offset = "0xF8E474", VA = "0xF8E474")]
		public SAMeshColliderBuilderProperty()
		{
		}
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x1026AE4", Offset = "0x1026AE4", VA = "0x1026AE4")]
	public SAMeshColliderCommon()
	{
	}
}
[Token(Token = "0x20001A2")]
public class SABoneCollider : MonoBehaviour
{
	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SABoneColliderCommon.SABoneColliderProperty boneColliderProperty;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string defaultName;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SABoneColliderCommon.SABoneColliderProperty defaultBoneColliderProperty;

	[NonSerialized]
	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SABoneColliderCommon.SABoneColliderProperty edittingBoneColliderProperty;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool modified;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool modifiedChildren;

	[NonSerialized]
	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool cleanupModified;

	[NonSerialized]
	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool isDebug;

	[Token(Token = "0x170000A5")]
	public SABoneColliderCommon.BoneProperty boneProperty
	{
		[Token(Token = "0x6000785")]
		[Address(RVA = "0x1025D78", Offset = "0x1025D78", VA = "0x1025D78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A6")]
	public SABoneColliderCommon.SplitProperty splitProperty
	{
		[Token(Token = "0x6000786")]
		[Address(RVA = "0x1025D90", Offset = "0x1025D90", VA = "0x1025D90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A7")]
	public SAColliderBuilderCommon.ReducerProperty reducerProperty
	{
		[Token(Token = "0x6000787")]
		[Address(RVA = "0x1025DA8", Offset = "0x1025DA8", VA = "0x1025DA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A8")]
	public SAColliderBuilderCommon.ColliderProperty colliderProperty
	{
		[Token(Token = "0x6000788")]
		[Address(RVA = "0x1025DC0", Offset = "0x1025DC0", VA = "0x1025DC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A9")]
	public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty
	{
		[Token(Token = "0x6000789")]
		[Address(RVA = "0x1025DD8", Offset = "0x1025DD8", VA = "0x1025DD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AA")]
	public bool recursivery
	{
		[Token(Token = "0x600078A")]
		[Address(RVA = "0x1025DF0", Offset = "0x1025DF0", VA = "0x1025DF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AB")]
	public bool modifyNameEnalbed
	{
		[Token(Token = "0x600078B")]
		[Address(RVA = "0x1025E18", Offset = "0x1025E18", VA = "0x1025E18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x1025E38", Offset = "0x1025E38", VA = "0x1025E38")]
	public void ChangeDefaultName(string defaultName)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x102605C", Offset = "0x102605C", VA = "0x102605C")]
	public void ChangeModified(bool modified)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x10260DC", Offset = "0x10260DC", VA = "0x10260DC")]
	public void ChangeModifiedChildren(bool modifiedChildren)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x102615C", Offset = "0x102615C", VA = "0x102615C")]
	public void ResetModified()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x10261D4", Offset = "0x10261D4", VA = "0x10261D4")]
	public void ResetModifyName()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x1025F5C", Offset = "0x1025F5C", VA = "0x1025F5C")]
	public string _ComputeModifyName()
	{
		return null;
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x1025EB4", Offset = "0x1025EB4", VA = "0x1025EB4")]
	public bool _IsModifyName()
	{
		return default(bool);
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x1026234", Offset = "0x1026234", VA = "0x1026234")]
	public SABoneCollider()
	{
	}
}
[Token(Token = "0x20001A3")]
public class SABoneColliderBuilder : MonoBehaviour
{
	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SABoneColliderCommon.SABoneColliderBuilderProperty boneColliderBuilderProperty;

	[NonSerialized]
	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SABoneColliderCommon.SABoneColliderBuilderProperty edittingBoneColliderBuilderProperty;

	[NonSerialized]
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool cleanupModified;

	[NonSerialized]
	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isDebug;

	[Token(Token = "0x170000AC")]
	public SABoneColliderCommon.SplitProperty splitProperty
	{
		[Token(Token = "0x6000794")]
		[Address(RVA = "0x10262D4", Offset = "0x10262D4", VA = "0x10262D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AD")]
	public SAColliderBuilderCommon.ReducerProperty reducerProperty
	{
		[Token(Token = "0x6000795")]
		[Address(RVA = "0x10262EC", Offset = "0x10262EC", VA = "0x10262EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AE")]
	public SAColliderBuilderCommon.ColliderProperty colliderProperty
	{
		[Token(Token = "0x6000796")]
		[Address(RVA = "0x1026304", Offset = "0x1026304", VA = "0x1026304")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AF")]
	public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty
	{
		[Token(Token = "0x6000797")]
		[Address(RVA = "0x102631C", Offset = "0x102631C", VA = "0x102631C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x1026334", Offset = "0x1026334", VA = "0x1026334")]
	public SABoneColliderBuilder()
	{
	}
}
[Token(Token = "0x20001A4")]
public class SABoneColliderChild : MonoBehaviour
{
	[Token(Token = "0x6000799")]
	[Address(RVA = "0x1026398", Offset = "0x1026398", VA = "0x1026398")]
	public SABoneColliderChild()
	{
	}
}
[Token(Token = "0x20001A5")]
public class SAMeshCollider : MonoBehaviour
{
	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SAMeshColliderCommon.SplitMesh splitMesh;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SAMeshColliderCommon.SplitMode splitMode;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SAMeshColliderCommon.SAMeshColliderProperty meshColliderProperty;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string defaultName;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SAMeshColliderCommon.SAMeshColliderProperty defaultMeshColliderProperty;

	[NonSerialized]
	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SAMeshColliderCommon.SAMeshColliderProperty edittingMeshCollidertProperty;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool modified;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool modifiedChildren;

	[NonSerialized]
	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool cleanupModified;

	[NonSerialized]
	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool isDebug;

	[Token(Token = "0x170000B0")]
	public SAMeshColliderCommon.SplitProperty splitProperty
	{
		[Token(Token = "0x600079A")]
		[Address(RVA = "0x10263B0", Offset = "0x10263B0", VA = "0x10263B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B1")]
	public SAColliderBuilderCommon.ReducerProperty reducerProperty
	{
		[Token(Token = "0x600079B")]
		[Address(RVA = "0x10263C8", Offset = "0x10263C8", VA = "0x10263C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B2")]
	public SAColliderBuilderCommon.ColliderProperty colliderProperty
	{
		[Token(Token = "0x600079C")]
		[Address(RVA = "0x10263E0", Offset = "0x10263E0", VA = "0x10263E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B3")]
	public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty
	{
		[Token(Token = "0x600079D")]
		[Address(RVA = "0x10263F8", Offset = "0x10263F8", VA = "0x10263F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B4")]
	public bool splitMaterialEnabled
	{
		[Token(Token = "0x600079E")]
		[Address(RVA = "0x1026410", Offset = "0x1026410", VA = "0x1026410")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B5")]
	public bool splitPrimitiveEnabled
	{
		[Token(Token = "0x600079F")]
		[Address(RVA = "0x1026438", Offset = "0x1026438", VA = "0x1026438")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B6")]
	public bool splitPolygonNormalEnabled
	{
		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x1026460", Offset = "0x1026460", VA = "0x1026460")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B7")]
	public float splitPolygonNormalAngle
	{
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x1026488", Offset = "0x1026488", VA = "0x1026488")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B8")]
	public bool modifyNameEnalbed
	{
		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x10264A4", Offset = "0x10264A4", VA = "0x10264A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x10264C4", Offset = "0x10264C4", VA = "0x10264C4")]
	public void ChangeDefaultName(string defaultName)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x10266E8", Offset = "0x10266E8", VA = "0x10266E8")]
	public void ChangeModified(bool modified)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x1026768", Offset = "0x1026768", VA = "0x1026768")]
	public void ChangeModifiedChildren(bool modifiedChildren)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x10267E8", Offset = "0x10267E8", VA = "0x10267E8")]
	public void ResetModified()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x1026860", Offset = "0x1026860", VA = "0x1026860")]
	public void ResetModifyName()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x10265E8", Offset = "0x10265E8", VA = "0x10265E8")]
	public string _ComputeModifyName()
	{
		return null;
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x1026540", Offset = "0x1026540", VA = "0x1026540")]
	public bool _IsModifyName()
	{
		return default(bool);
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x10268C0", Offset = "0x10268C0", VA = "0x10268C0")]
	public SAMeshCollider()
	{
	}
}
[Token(Token = "0x20001A6")]
public class SAMeshColliderBuilder : MonoBehaviour
{
	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SAMeshColliderCommon.SAMeshColliderBuilderProperty meshColliderBuilderProperty;

	[NonSerialized]
	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SAMeshColliderCommon.SAMeshColliderBuilderProperty edittingMeshColliderBuilderProperty;

	[NonSerialized]
	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool cleanupModified;

	[NonSerialized]
	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isDebug;

	[Token(Token = "0x170000B9")]
	public SAMeshColliderCommon.SplitProperty splitProperty
	{
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x102698C", Offset = "0x102698C", VA = "0x102698C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BA")]
	public SAColliderBuilderCommon.ReducerProperty reducerProperty
	{
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x10269A4", Offset = "0x10269A4", VA = "0x10269A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BB")]
	public SAColliderBuilderCommon.ColliderProperty colliderProperty
	{
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x10269BC", Offset = "0x10269BC", VA = "0x10269BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BC")]
	public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty
	{
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x10269D4", Offset = "0x10269D4", VA = "0x10269D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BD")]
	public bool splitMaterialEnabled
	{
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x10269EC", Offset = "0x10269EC", VA = "0x10269EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BE")]
	public bool splitPrimitiveEnabled
	{
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x1026A14", Offset = "0x1026A14", VA = "0x1026A14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BF")]
	public bool splitPolygonNormalEnabled
	{
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x1026A3C", Offset = "0x1026A3C", VA = "0x1026A3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C0")]
	public float splitPolygonNormalAngle
	{
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x1026A64", Offset = "0x1026A64", VA = "0x1026A64")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x1026A80", Offset = "0x1026A80", VA = "0x1026A80")]
	public SAMeshColliderBuilder()
	{
	}
}
[Token(Token = "0x20001A7")]
public class Wave : MonoBehaviour
{
	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MaterialPropertyBlock _propertyBlock;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _elapsedTime;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpriteRenderer _renderer;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int loopCount;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int countBK;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Duration;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x885AF0", Offset = "0x885AF0")]
	public AnimationCurve ScaleProgress;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 ScalePower;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x885B00", Offset = "0x885B00")]
	public AnimationCurve PropertyProgress;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float PropertyPower;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x885B10", Offset = "0x885B10")]
	public AnimationCurve AlphaProgress;

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x116833C", Offset = "0x116833C", VA = "0x116833C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x11683BC", Offset = "0x11683BC", VA = "0x11683BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x11683C8", Offset = "0x11683C8", VA = "0x11683C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x1168570", Offset = "0x1168570", VA = "0x1168570")]
	public Wave()
	{
	}
}
[Token(Token = "0x20001A8")]
public class Homing : MonoBehaviour
{
	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _target;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float easeing;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _speed;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _rotSpeed;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _inspeed;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool autoDel;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bomb_pre;

	[Token(Token = "0x170000C1")]
	public GameObject Target
	{
		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x178CC9C", Offset = "0x178CC9C", VA = "0x178CC9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x178CC94", Offset = "0x178CC94", VA = "0x178CC94")]
		set
		{
		}
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x178CCA4", Offset = "0x178CCA4", VA = "0x178CCA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x178CFAC", Offset = "0x178CFAC", VA = "0x178CFAC")]
	private void bomb()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x178D110", Offset = "0x178D110", VA = "0x178D110")]
	public Homing()
	{
	}
}
[Token(Token = "0x20001A9")]
public class Homing_particle : MonoBehaviour
{
	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _rotSpeed;

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x178D12C", Offset = "0x178D12C", VA = "0x178D12C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x178D180", Offset = "0x178D180", VA = "0x178D180")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x178D510", Offset = "0x178D510", VA = "0x178D510")]
	public Homing_particle()
	{
	}
}
[Token(Token = "0x20001AA")]
public class Rotation_planet : MonoBehaviour
{
	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x1025BC0", Offset = "0x1025BC0", VA = "0x1025BC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x1025C5C", Offset = "0x1025C5C", VA = "0x1025C5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x1025C60", Offset = "0x1025C60", VA = "0x1025C60")]
	public Rotation_planet()
	{
	}
}
[Token(Token = "0x20001AB")]
public class StarLine_Homing : MonoBehaviour
{
	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MainEff_obj;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Linn_pre;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Finish_obj;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bomb_pre;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> TGTList;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _LineEFF;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> LineList;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject _target;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float easeing;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float _speed;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _rotSpeed;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _inspeed;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float DelTime;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject MainStarObj;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool flg;

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xE14978", Offset = "0xE14978", VA = "0xE14978")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xE14BDC", Offset = "0xE14BDC", VA = "0xE14BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xE14F28", Offset = "0xE14F28", VA = "0xE14F28")]
	private void ALLbomb()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xE15298", Offset = "0xE15298", VA = "0xE15298")]
	private void thisDel()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xE15310", Offset = "0xE15310", VA = "0xE15310")]
	public StarLine_Homing()
	{
	}
}
[Token(Token = "0x20001AC")]
public class objectRotation : MonoBehaviour
{
	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool freezX;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool freezY;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool freezZ;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Rspeed;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float XS;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float YS;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float ZS;

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x1176074", Offset = "0x1176074", VA = "0x1176074")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x11760A4", Offset = "0x11760A4", VA = "0x11760A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x1176118", Offset = "0x1176118", VA = "0x1176118")]
	public objectRotation()
	{
	}
}
[Token(Token = "0x20001AD")]
public class enchoRoboDmg : MonoBehaviour
{
	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int DamageVol;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Num1;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Num2;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Num3;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem ps1;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem ps2;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem ps3;

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x1175230", Offset = "0x1175230", VA = "0x1175230")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x1175698", Offset = "0x1175698", VA = "0x1175698")]
	public void DamageStart()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x1175784", Offset = "0x1175784", VA = "0x1175784")]
	public enchoRoboDmg()
	{
	}
}
[Token(Token = "0x20001AE")]
public class prefabParticle : MonoBehaviour
{
	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject obj;

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xC014C0", Offset = "0xC014C0", VA = "0xC014C0")]
	public void bombOpen()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xC01604", Offset = "0xC01604", VA = "0xC01604")]
	public prefabParticle()
	{
	}
}
[Token(Token = "0x20001AF")]
public class OnePlaySE : MonoBehaviour
{
	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayTime;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioClip clip;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minVolume;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxVolume;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource soundComponent;

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xF6E7B8", Offset = "0xF6E7B8", VA = "0xF6E7B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xF6E844", Offset = "0xF6E844", VA = "0xF6E844")]
	private void playSE()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xF6E868", Offset = "0xF6E868", VA = "0xF6E868")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xF6E8BC", Offset = "0xF6E8BC", VA = "0xF6E8BC")]
	public OnePlaySE()
	{
	}
}
[Token(Token = "0x20001B0")]
public class OpeningAudioChange : MonoBehaviour
{
	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] clips;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audios;

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xF6F464", Offset = "0xF6F464", VA = "0xF6F464")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xF6F4B8", Offset = "0xF6F4B8", VA = "0xF6F4B8")]
	public void AudioSet(int Vno)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xF6F51C", Offset = "0xF6F51C", VA = "0xF6F51C")]
	public OpeningAudioChange()
	{
	}
}
[Token(Token = "0x20001B1")]
public class RotateSkyBox2 : MonoBehaviour
{
	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float rotateSpeed;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material skyboxMaterial;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float tilX;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float tilY;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float OffsetY;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x1025700", Offset = "0x1025700", VA = "0x1025700")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x1025770", Offset = "0x1025770", VA = "0x1025770")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x10257DC", Offset = "0x10257DC", VA = "0x10257DC")]
	public RotateSkyBox2()
	{
	}
}
[Token(Token = "0x20001B2")]
public class RotationVector : MonoBehaviour
{
	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float SpeedX;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float SpeedY;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float SpeedZ;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool PlayFlf;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool Loop;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DelayTime;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float EndTime;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool StartRotationLock;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 StartRotationVol;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool DefFLG;

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x10257EC", Offset = "0x10257EC", VA = "0x10257EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x102589C", Offset = "0x102589C", VA = "0x102589C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x10257F0", Offset = "0x10257F0", VA = "0x10257F0")]
	private void Def()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x10258AC", Offset = "0x10258AC", VA = "0x10258AC")]
	private void FlgCheck()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x10258BC", Offset = "0x10258BC", VA = "0x10258BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x10258CC", Offset = "0x10258CC", VA = "0x10258CC")]
	private void RotetionOn()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x102597C", Offset = "0x102597C", VA = "0x102597C")]
	public RotationVector()
	{
	}
}
[Token(Token = "0x20001B3")]
public class ScreenShot : MonoBehaviour
{
	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8804C8", Offset = "0x8804C8")]
	private sealed class <CaptureWithAlpha>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenShot <>4__this;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0xF8F594", Offset = "0xF8F594", VA = "0xF8F594", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007EA")]
			[Address(RVA = "0xF8F5DC", Offset = "0xF8F5DC", VA = "0xF8F5DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xF8F278", Offset = "0xF8F278", VA = "0xF8F278")]
		[DebuggerHidden]
		public <CaptureWithAlpha>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xF8F2A4", Offset = "0xF8F2A4", VA = "0xF8F2A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xF8F2A8", Offset = "0xF8F2A8", VA = "0xF8F2A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xF8F59C", Offset = "0xF8F59C", VA = "0xF8F59C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Alpha;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Floder;

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xE084DC", Offset = "0xE084DC", VA = "0xE084DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8922B8", Offset = "0x8922B8")]
	private IEnumerator CaptureWithAlpha()
	{
		return null;
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xE08548", Offset = "0xE08548", VA = "0xE08548")]
	public static DirectoryInfo SafeCreateDirectory(string path)
	{
		return null;
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xE08588", Offset = "0xE08588", VA = "0xE08588")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x892318", Offset = "0x892318")]
	public void Screenshot()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xE085B4", Offset = "0xE085B4", VA = "0xE085B4")]
	public ScreenShot()
	{
	}
}
[Token(Token = "0x20001B5")]
public class StarResult : MonoBehaviour
{
	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_Animator;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Gun;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bulletSpace _bulletSpace;

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xE153C4", Offset = "0xE153C4", VA = "0xE153C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xE15428", Offset = "0xE15428", VA = "0xE15428")]
	public void ResultStart(int StarVol)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xE15504", Offset = "0xE15504", VA = "0xE15504")]
	public StarResult()
	{
	}
}
[Token(Token = "0x20001B6")]
public class TexScroll : MonoBehaviour
{
	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float rotateSpeed;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float yScrollSpeed;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material skyboxMaterial;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float tilX;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float tilY;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float OffsetY;

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xFA1354", Offset = "0xFA1354", VA = "0xFA1354")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xFA13C4", Offset = "0xFA13C4", VA = "0xFA13C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xFA1474", Offset = "0xFA1474", VA = "0xFA1474")]
	public TexScroll()
	{
	}
}
[Token(Token = "0x20001B7")]
public class UpDownObj : MonoBehaviour
{
	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MovingDistance;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StartPos;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MovSpeed;

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x1874C78", Offset = "0x1874C78", VA = "0x1874C78")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1874CB0", Offset = "0x1874CB0", VA = "0x1874CB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1874D58", Offset = "0x1874D58", VA = "0x1874D58")]
	public UpDownObj()
	{
	}
}
[Token(Token = "0x20001B8")]
public class VirtualSkyAnimationController : MonoBehaviour
{
	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material material;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Sky_1;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Sky_2;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Sky_3;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Sky_4;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x1165290", Offset = "0x1165290", VA = "0x1165290")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x1165300", Offset = "0x1165300", VA = "0x1165300")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x116542C", Offset = "0x116542C", VA = "0x116542C")]
	public VirtualSkyAnimationController()
	{
	}
}
[Token(Token = "0x20001B9")]
internal class bulletSpace : MonoBehaviour
{
	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform BulletPanel;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text bulletText;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float BulletVol;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float BulletVol_MAX;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Z_MAX;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Z_BK;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float DeepOffset;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ScaleOffset;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Scale_BK;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool setCheck;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color TextColor_A;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color TextColor_B;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color TextColor_C;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float BulletVol_BK;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float alphaBK;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float alphaTGT;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float alphaGen;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image BulletBarImage;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject StarImage_A;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject StarImage_B;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject StarImage_C;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject StarImage_base_A;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject StarImage_base_B;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject StarImage_base_C;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885B80", Offset = "0x885B80")]
	private int <StarBulletCount_A>k__BackingField;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885B90", Offset = "0x885B90")]
	private int <StarBulletCount_B>k__BackingField;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885BA0", Offset = "0x885BA0")]
	private int <StarBulletCount_C>k__BackingField;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885BB0", Offset = "0x885BB0")]
	private float <StarPos_A>k__BackingField;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885BC0", Offset = "0x885BC0")]
	private float <StarPos_B>k__BackingField;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885BD0", Offset = "0x885BD0")]
	private float <StarPos_C>k__BackingField;

	[Token(Token = "0x170000C4")]
	public int StarBulletCount_A
	{
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x117451C", Offset = "0x117451C", VA = "0x117451C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8923A0", Offset = "0x8923A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x1174524", Offset = "0x1174524", VA = "0x1174524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8923B0", Offset = "0x8923B0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public int StarBulletCount_B
	{
		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x117452C", Offset = "0x117452C", VA = "0x117452C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8923C0", Offset = "0x8923C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x1174534", Offset = "0x1174534", VA = "0x1174534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8923D0", Offset = "0x8923D0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public int StarBulletCount_C
	{
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x117453C", Offset = "0x117453C", VA = "0x117453C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8923E0", Offset = "0x8923E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x1174544", Offset = "0x1174544", VA = "0x1174544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8923F0", Offset = "0x8923F0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public float StarPos_A
	{
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x117454C", Offset = "0x117454C", VA = "0x117454C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892400", Offset = "0x892400")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1174554", Offset = "0x1174554", VA = "0x1174554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892410", Offset = "0x892410")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public float StarPos_B
	{
		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x117455C", Offset = "0x117455C", VA = "0x117455C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892420", Offset = "0x892420")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000800")]
		[Address(RVA = "0x1174564", Offset = "0x1174564", VA = "0x1174564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892430", Offset = "0x892430")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public float StarPos_C
	{
		[Token(Token = "0x6000801")]
		[Address(RVA = "0x117456C", Offset = "0x117456C", VA = "0x117456C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892440", Offset = "0x892440")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1174574", Offset = "0x1174574", VA = "0x1174574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892450", Offset = "0x892450")]
		private set
		{
		}
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x117457C", Offset = "0x117457C", VA = "0x117457C")]
	public void Init(ToyBlastPuzzleStageInfo stageInfo)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x1174614", Offset = "0x1174614", VA = "0x1174614")]
	private void SetVol()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x11748A4", Offset = "0x11748A4", VA = "0x11748A4")]
	private void BulletBarMov(float current, float max)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x1174AB8", Offset = "0x1174AB8", VA = "0x1174AB8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x1174F44", Offset = "0x1174F44", VA = "0x1174F44")]
	public bulletSpace()
	{
	}
}
[Token(Token = "0x20001BA")]
public class subEmitterSetting : MonoBehaviour
{
	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_Timer;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_Interval;

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xC018DC", Offset = "0xC018DC", VA = "0xC018DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xC01CB4", Offset = "0xC01CB4", VA = "0xC01CB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xC01D1C", Offset = "0xC01D1C", VA = "0xC01D1C")]
	public subEmitterSetting()
	{
	}
}
[Token(Token = "0x20001BB")]
public class tweenjump : MonoBehaviour
{
	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpriteRenderer TGT;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float animeTime;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float jumpPower;

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xC01D2C", Offset = "0xC01D2C", VA = "0xC01D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xC01E38", Offset = "0xC01E38", VA = "0xC01E38")]
	public tweenjump()
	{
	}
}
[Token(Token = "0x20001BC")]
public class tweenjump_3d : MonoBehaviour
{
	[Token(Token = "0x20001BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8804D8", Offset = "0x8804D8")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource audioSource;

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xF9D568", Offset = "0xF9D568", VA = "0xF9D568")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xF9D570", Offset = "0xF9D570", VA = "0xF9D570")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject TGT;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float animeTime;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float jumpPower;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Sequence _sequence;

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xC01E48", Offset = "0xC01E48", VA = "0xC01E48")]
	private void Start()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xC020B0", Offset = "0xC020B0", VA = "0xC020B0")]
	public tweenjump_3d()
	{
	}
}
namespace FSG.MeshAnimator
{
	[Token(Token = "0x20001BE")]
	public class AnimatorStateMachine : MonoBehaviour
	{
		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xE246E8", Offset = "0xE246E8", VA = "0xE246E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xE247A0", Offset = "0xE247A0", VA = "0xE247A0")]
		private void OnAnimationFinished(string anim)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xE248D8", Offset = "0xE248D8", VA = "0xE248D8")]
		public AnimatorStateMachine()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class CrowdSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] options;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] optionsDesc;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int sizeOfCrowd;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int selectedOption;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int maxSize;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string fps;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int previousFrame;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> spawnedObjects;

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x127E4D0", Offset = "0x127E4D0", VA = "0x127E4D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x127EAC8", Offset = "0x127EAC8", VA = "0x127EAC8")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x127E534", Offset = "0x127E534", VA = "0x127E534")]
		private void SpawnCrowd()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x127EB4C", Offset = "0x127EB4C", VA = "0x127EB4C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x127F9FC", Offset = "0x127F9FC", VA = "0x127F9FC")]
		public CrowdSpawner()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class PerformanceTester : MonoBehaviour
	{
		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] animObjects;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] options;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cameraSpeed;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 spawnOffset;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] spawnedMeshes;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> meshes;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string fps;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int previousFrame;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 offset;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool crossFade;

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x1113B00", Offset = "0x1113B00", VA = "0x1113B00")]
		private void Start()
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x1113B5C", Offset = "0x1113B5C", VA = "0x1113B5C")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x1113BE0", Offset = "0x1113BE0", VA = "0x1113BE0")]
		private void Update()
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x1113E4C", Offset = "0x1113E4C", VA = "0x1113E4C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x1114D68", Offset = "0x1114D68", VA = "0x1114D68")]
		public PerformanceTester()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x8804E8", Offset = "0x8804E8")]
	public class AttachObjectToFace : MonoBehaviour
	{
		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int faceIndex;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 offset;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 rotationOffset;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool drawFaceDebugInfo;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color debugColor;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform mTransform;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform mMeshAnimatorTransform;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] triangles;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] vertices;

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xE29740", Offset = "0xE29740", VA = "0xE29740")]
		private void Awake()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xE2984C", Offset = "0xE2984C", VA = "0xE2984C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xE29DFC", Offset = "0xE29DFC", VA = "0xE29DFC")]
		public AttachObjectToFace()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class MecanimMeshAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, string> animHashes;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string cAnim;

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x1088AB0", Offset = "0x1088AB0", VA = "0x1088AB0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x1088C84", Offset = "0x1088C84", VA = "0x1088C84", Slot = "5")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x1088E58", Offset = "0x1088E58", VA = "0x1088E58")]
		public MecanimMeshAnimatorController()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8804F8", Offset = "0x8804F8")]
	public class MeshAnimPlayMixer : MonoBehaviour
	{
		[Token(Token = "0x20001C4")]
		public class RuntimeInfo
		{
			[Token(Token = "0x400099F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ConditionInfo CauseInfo;

			[Token(Token = "0x40009A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public StateInfo StateInfo;

			[Token(Token = "0x40009A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConditionInfo AnimationEnd;

			[Token(Token = "0x6000833")]
			[Address(RVA = "0xC0ECDC", Offset = "0xC0ECDC", VA = "0xC0ECDC")]
			public RuntimeInfo(ConditionInfo argInfo)
			{
			}
		}

		[Token(Token = "0x20001C5")]
		public class ParameterInfo
		{
			[Token(Token = "0x40009A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Trigger;

			[Token(Token = "0x6000834")]
			[Address(RVA = "0xC0EC98", Offset = "0xC0EC98", VA = "0xC0EC98")]
			public ParameterInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001C6")]
		public class StateInfo
		{
			[Token(Token = "0x40009A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string StateName;

			[Token(Token = "0x40009A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int AnimIndex;

			[Token(Token = "0x6000835")]
			[Address(RVA = "0xC0ED18", Offset = "0xC0ED18", VA = "0xC0ED18")]
			public StateInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001C7")]
		public class ConditionInfo
		{
			[Token(Token = "0x40009A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ConditionName;

			[Token(Token = "0x40009A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ConditionType ConditionType;

			[Token(Token = "0x40009A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string DestinationStateName;

			[Token(Token = "0x40009A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public StateType SourceStateType;

			[Token(Token = "0x40009A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string SourceStateName;

			[Token(Token = "0x40009AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MathematicalSign ValueSign;

			[Token(Token = "0x40009AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public TransitionType TransitionType;

			[Token(Token = "0x40009AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public FadeType AfterFadeType;

			[Token(Token = "0x40009AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float AfterFadeTime;

			[Token(Token = "0x40009AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int Priority;

			[NonSerialized]
			[Token(Token = "0x40009AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "HideInInspector", RVA = "0x885CE4", Offset = "0x885CE4")]
			public StateInfo RefDestinationState;

			[NonSerialized]
			[Token(Token = "0x40009B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "HideInInspector", RVA = "0x885CF4", Offset = "0x885CF4")]
			public StateInfo RefSourceState;

			[NonSerialized]
			[Token(Token = "0x40009B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "HideInInspector", RVA = "0x885D04", Offset = "0x885D04")]
			public ParameterInfo RefParameter;

			[Token(Token = "0x6000836")]
			[Address(RVA = "0xC0EC90", Offset = "0xC0EC90", VA = "0xC0EC90")]
			public ConditionInfo()
			{
			}
		}

		[Token(Token = "0x20001C8")]
		public enum FadeType
		{
			[Token(Token = "0x40009B3")]
			None,
			[Token(Token = "0x40009B4")]
			CrossFade
		}

		[Token(Token = "0x20001C9")]
		public enum MathematicalSign
		{
			[Token(Token = "0x40009B6")]
			None,
			[Token(Token = "0x40009B7")]
			Less,
			[Token(Token = "0x40009B8")]
			Greater
		}

		[Token(Token = "0x20001CA")]
		public enum StateType
		{
			[Token(Token = "0x40009BA")]
			None,
			[Token(Token = "0x40009BB")]
			Normal,
			[Token(Token = "0x40009BC")]
			Any
		}

		[Token(Token = "0x20001CB")]
		public enum ConditionType
		{
			[Token(Token = "0x40009BE")]
			None,
			[Token(Token = "0x40009BF")]
			Trigger,
			[Token(Token = "0x40009C0")]
			___UnusedAbolished___,
			[Token(Token = "0x40009C1")]
			Transition
		}

		[Token(Token = "0x20001CC")]
		public enum TransitionType
		{
			[Token(Token = "0x40009C3")]
			None,
			[Token(Token = "0x40009C4")]
			FirstEntry,
			[Token(Token = "0x40009C5")]
			AnimationEnd
		}

		[Token(Token = "0x20001CD")]
		public class PlayHistory
		{
			[Token(Token = "0x40009C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ConditionInfo ConditionInfo;

			[Token(Token = "0x40009C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int GameFrameCount;

			[Token(Token = "0x6000837")]
			[Address(RVA = "0xC0ECA0", Offset = "0xC0ECA0", VA = "0xC0ECA0")]
			public PlayHistory(ConditionInfo argInfo, int argFrameCount)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880558", Offset = "0x880558")]
		private sealed class <>c
		{
			[Token(Token = "0x40009C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40009C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RuntimeInfo> <>9__20_0;

			[Token(Token = "0x6000839")]
			[Address(RVA = "0xC0EC50", Offset = "0xC0EC50", VA = "0xC0EC50")]
			public <>c()
			{
			}

			[Token(Token = "0x600083A")]
			[Address(RVA = "0xC0EC58", Offset = "0xC0EC58", VA = "0xC0EC58")]
			internal int <CheckPlayAnimation>b__20_0(RuntimeInfo a, RuntimeInfo b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885C00", Offset = "0x885C00")]
		[SerializeField]
		private StateInfo[] _stateInfoArray;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885C4C", Offset = "0x885C4C")]
		private ConditionInfo[] _conditionInfoArray;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885C98", Offset = "0x885C98")]
		[SerializeField]
		private MeshAnimator _meshAnimator;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<string, List<ConditionInfo>> _conditionDict;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<string, StateInfo> _stateDict;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Dictionary<string, ParameterInfo> _parameterDict;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<ConditionInfo> _animationEndList;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly List<RuntimeInfo> _runtimeInfoList;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RuntimeInfo _currentPlayInfo;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<PlayHistory> _playHistoryList;

		[Token(Token = "0x400099C")]
		private const int PlayHistoryMax = 10;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _initialized;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _checkFirstEntry;

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x108A41C", Offset = "0x108A41C", VA = "0x108A41C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x108A440", Offset = "0x108A440", VA = "0x108A440")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x108AA54", Offset = "0x108AA54", VA = "0x108AA54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x108AB60", Offset = "0x108AB60", VA = "0x108AB60")]
		public void SetAnimationTrigger(string argName)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x108B070", Offset = "0x108B070", VA = "0x108B070")]
		public void ResetAnimationTrigger(string argName)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x108A948", Offset = "0x108A948", VA = "0x108A948")]
		private void CheckFirstEntry()
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x108AD5C", Offset = "0x108AD5C", VA = "0x108AD5C")]
		private void MakeCheckInfoList()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x108AEC4", Offset = "0x108AEC4", VA = "0x108AEC4")]
		private void CheckPlayAnimation()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x108B248", Offset = "0x108B248", VA = "0x108B248")]
		private void SetCurrentPlayAnimation(RuntimeInfo runtimeInfo)
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x108AA58", Offset = "0x108AA58", VA = "0x108AA58")]
		private void CheckPlayAnimationFinish()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x108B480", Offset = "0x108B480", VA = "0x108B480")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x892460", Offset = "0x892460")]
		public void SetupStateInfoForEditor(StateInfo[] infos)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x108B488", Offset = "0x108B488", VA = "0x108B488")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x892498", Offset = "0x892498")]
		public void SetupConditionInfoForEditor(ConditionInfo[] infos)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x108B490", Offset = "0x108B490", VA = "0x108B490")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8924D0", Offset = "0x8924D0")]
		public void SetupMeshForEditor(MeshAnimator meshAnimator)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x108B498", Offset = "0x108B498", VA = "0x108B498")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x892508", Offset = "0x892508")]
		private void DebugAddHistory(RuntimeInfo runtimeInfo)
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x108B5A0", Offset = "0x108B5A0", VA = "0x108B5A0")]
		public MeshAnimPlayMixer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001CF")]
	public class MeshAnimation : ScriptableObject
	{
		[Token(Token = "0x20001D0")]
		public enum RootMotionMode
		{
			[Token(Token = "0x40009E1")]
			None,
			[Token(Token = "0x40009E2")]
			Baked,
			[Token(Token = "0x40009E3")]
			AppliedToTransform
		}

		[Token(Token = "0x20001D1")]
		private sealed class VertexEntry
		{
			[Token(Token = "0x40009E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _reserved;

			[Token(Token = "0x40009E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] TriangleIndex;

			[Token(Token = "0x40009E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] VertexIndex;

			[Token(Token = "0x40009E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _count;

			[Token(Token = "0x170000CD")]
			public int Count
			{
				[Token(Token = "0x600084E")]
				[Address(RVA = "0xC0EEFC", Offset = "0xC0EEFC", VA = "0xC0EEFC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600084F")]
			[Address(RVA = "0xC0EF04", Offset = "0xC0EF04", VA = "0xC0EF04")]
			public VertexEntry()
			{
			}

			[Token(Token = "0x6000850")]
			[Address(RVA = "0xC0EF14", Offset = "0xC0EF14", VA = "0xC0EF14")]
			public void Add(int vertIndex, int triIndex)
			{
			}

			[Token(Token = "0x6000851")]
			[Address(RVA = "0xC0F00C", Offset = "0xC0F00C", VA = "0xC0F00C")]
			public void PopulateArrays()
			{
			}

			[Token(Token = "0x6000852")]
			[Address(RVA = "0xC0F0A8", Offset = "0xC0F0A8", VA = "0xC0F0A8")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x20001D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880568", Offset = "0x880568")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x40009E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshAnimation <>4__this;

			[Token(Token = "0x40009E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh mesh;

			[Token(Token = "0x40009EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float angle;

			[Token(Token = "0x40009EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] triangles;

			[Token(Token = "0x40009EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3[] vertices;

			[Token(Token = "0x6000853")]
			[Address(RVA = "0xC0EDDC", Offset = "0xC0EDDC", VA = "0xC0EDDC")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6000854")]
			[Address(RVA = "0xC0EDE4", Offset = "0xC0EDE4", VA = "0xC0EDE4")]
			internal void <RecalculateNormals>b__0(object <p0>)
			{
			}
		}

		[Token(Token = "0x20001D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880578", Offset = "0x880578")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x40009ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh mesh;

			[Token(Token = "0x40009EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x6000855")]
			[Address(RVA = "0xC0EE14", Offset = "0xC0EE14", VA = "0xC0EE14")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6000856")]
			[Address(RVA = "0xC0EE1C", Offset = "0xC0EE1C", VA = "0xC0EE1C")]
			internal void <RecalculateNormals>b__0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880588", Offset = "0x880588")]
		private sealed class <>c
		{
			[Token(Token = "0x40009EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6000858")]
			[Address(RVA = "0xC0ED80", Offset = "0xC0ED80", VA = "0xC0ED80")]
			public <>c()
			{
			}

			[Token(Token = "0x6000859")]
			[Address(RVA = "0xC0ED88", Offset = "0xC0ED88", VA = "0xC0ED88")]
			internal bool <.cctor>b__45_0(Vector3 x, Vector3 y)
			{
				return default(bool);
			}

			[Token(Token = "0x600085A")]
			[Address(RVA = "0xC0EDB0", Offset = "0xC0EDB0", VA = "0xC0EDB0")]
			internal int <.cctor>b__45_1(Vector3 x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x885D14", Offset = "0x885D14")]
		[SerializeField]
		public string animationName;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool preGenerateFrames;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float playbackSpeed;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x885D4C", Offset = "0x885D4C")]
		public int smoothNormalsAngle;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool instantNormalCalculation;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool recalculateNormalsOnRotation;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WrapMode wrapMode;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x885D84", Offset = "0x885D84")]
		[SerializeField]
		public RootMotionMode rootMotionMode;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x885DBC", Offset = "0x885DBC")]
		[SerializeField]
		public DeltaCompressedFrameData compressedFrameData;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x885DF4", Offset = "0x885DF4")]
		public string[] exposedTransforms;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshAnimationEvent[] events;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x885E2C", Offset = "0x885E2C")]
		[SerializeField]
		public float length;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x885E64", Offset = "0x885E64")]
		public int frameSkip;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Mesh[] _frames;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _totalFrames;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool[] _generatedMeshes;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _completelyGenerated;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshFrameData[] _decompressedFrameData;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion _lastRotation;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Queue<Action> _mainThreadActions;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<Mesh, KeyValuePair<int[], Vector3[]>> _meshInfoCache;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static IEqualityComparer<Vector3> VectorComparer;

		[Token(Token = "0x170000CA")]
		public Mesh[] frames
		{
			[Token(Token = "0x600083B")]
			[Address(RVA = "0x108B760", Offset = "0x108B760", VA = "0x108B760")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		public int totalFrames
		{
			[Token(Token = "0x600083C")]
			[Address(RVA = "0x108B768", Offset = "0x108B768", VA = "0x108B768")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CC")]
		private MeshFrameData[] frameData
		{
			[Token(Token = "0x600083D")]
			[Address(RVA = "0x108B770", Offset = "0x108B770", VA = "0x108B770")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x108B818", Offset = "0x108B818", VA = "0x108B818")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x108B8AC", Offset = "0x108B8AC", VA = "0x108B8AC")]
		public void GenerateFrames(Mesh baseMesh)
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x108BF1C", Offset = "0x108BF1C", VA = "0x108BF1C")]
		public void GenerateFrameIfNeeded(Mesh baseMesh, int frame)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x108C3A8", Offset = "0x108C3A8", VA = "0x108C3A8")]
		public Vector3[] GetFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x108C694", Offset = "0x108C694", VA = "0x108C694")]
		public float GetInterpolatingFrames(int frame, out MeshFrameData previousFrame, out MeshFrameData nextFrame)
		{
			return default(float);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x108C898", Offset = "0x108C898", VA = "0x108C898")]
		public MeshFrameData GetNearestFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x108C950", Offset = "0x108C950", VA = "0x108C950")]
		public void DisplayFrame(MeshFilter meshFilter, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x108D758", Offset = "0x108D758", VA = "0x108D758")]
		public void FireEvents(GameObject eventReciever, int frame)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x108D8F0", Offset = "0x108D8F0", VA = "0x108D8F0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x108DA30", Offset = "0x108DA30", VA = "0x108DA30")]
		public bool IsName(string animationName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x108C318", Offset = "0x108C318", VA = "0x108C318")]
		private void CheckFullGeneration(int newFrame)
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x108BAF8", Offset = "0x108BAF8", VA = "0x108BAF8")]
		private Mesh GenerateFrame(Mesh baseMesh, int frame)
		{
			return null;
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x108DA80", Offset = "0x108DA80", VA = "0x108DA80")]
		private void RecalculateNormals(Mesh mesh, float angle)
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x108CA80", Offset = "0x108CA80", VA = "0x108CA80")]
		private void RecalculateNormals(Mesh mesh, float angle, int[] triangles, Vector3[] vertices, bool instant = false)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x108DCA4", Offset = "0x108DCA4", VA = "0x108DCA4")]
		public MeshAnimation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D5")]
	public class MeshAnimationEvent
	{
		[Token(Token = "0x20001D6")]
		public enum Mode : byte
		{
			[Token(Token = "0x40009F7")]
			Data,
			[Token(Token = "0x40009F8")]
			String,
			[Token(Token = "0x40009F9")]
			Float
		}

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string methodName;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int frame;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Mode eventType;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stringValue;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float floatValue;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Object data;

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x108D7E0", Offset = "0x108D7E0", VA = "0x108D7E0")]
		public void FireEvent(GameObject eventReciever)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x108DEAC", Offset = "0x108DEAC", VA = "0x108DEAC")]
		public MeshAnimationEvent()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x880598", Offset = "0x880598")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x880598", Offset = "0x880598")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x880598", Offset = "0x880598")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x880598", Offset = "0x880598")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x880598", Offset = "0x880598")]
	public class MeshAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880680", Offset = "0x880680")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<string> <>9__65_0;

			[Token(Token = "0x600087C")]
			[Address(RVA = "0xC0F1B0", Offset = "0xC0F1B0", VA = "0xC0F1B0")]
			public <>c()
			{
			}

			[Token(Token = "0x600087D")]
			[Address(RVA = "0xC0F1B8", Offset = "0xC0F1B8", VA = "0xC0F1B8")]
			internal void <.ctor>b__65_0(string <p0>)
			{
			}
		}

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x885E9C", Offset = "0x885E9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885E9C", Offset = "0x885E9C")]
		public Mesh baseMesh;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885EF8", Offset = "0x885EF8")]
		private int _defaultAnimationIndex;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885F44", Offset = "0x885F44")]
		public MeshAnimation[] animations;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885F90", Offset = "0x885F90")]
		[SerializeField]
		private bool updateWhenOffscreen;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x885FDC", Offset = "0x885FDC")]
		private bool playAutomatically;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886028", Offset = "0x886028")]
		private GameObject eventReciever;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x886074", Offset = "0x886074")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886074", Offset = "0x886074")]
		public int FPS;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8860D0", Offset = "0x8860D0")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x8860D0", Offset = "0x8860D0")]
		[SerializeField]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88612C", Offset = "0x88612C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88612C", Offset = "0x88612C")]
		public MeshTriangleData[] meshTriangleData;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x886188", Offset = "0x886188")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886188", Offset = "0x886188")]
		public Vector2[] uv1Data;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8861E4", Offset = "0x8861E4")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x8861E4", Offset = "0x8861E4")]
		[SerializeField]
		public Vector2[] uv2Data;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886240", Offset = "0x886240")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x886240", Offset = "0x886240")]
		public Vector2[] uv3Data;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88629C", Offset = "0x88629C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88629C", Offset = "0x88629C")]
		public Vector2[] uv4Data;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886308", Offset = "0x886308")]
		private float <nextTick>k__BackingField;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886318", Offset = "0x886318")]
		private int <currentFrame>k__BackingField;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886328", Offset = "0x886328")]
		private float <speed>k__BackingField;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886338", Offset = "0x886338")]
		private MeshAnimation <currentAnimation>k__BackingField;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _currentAnimIndex;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool _isVisible;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastFrameTime;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool pingPong;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		private bool _isPaused;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float _currentAnimTime;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _currentAnimTotalTime;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Mesh crossFadeMesh;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Queue<string> queuedAnims;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Dictionary<string, Transform> childMap;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool initialized;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int previousEventFrame;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool hasExposedTransforms;

		[Token(Token = "0x170000CE")]
		public float nextTick
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0x108DFF4", Offset = "0x108DFF4", VA = "0x108DFF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892560", Offset = "0x892560")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000860")]
			[Address(RVA = "0x108DFFC", Offset = "0x108DFFC", VA = "0x108DFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892570", Offset = "0x892570")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public int currentFrame
		{
			[Token(Token = "0x6000861")]
			[Address(RVA = "0x108E004", Offset = "0x108E004", VA = "0x108E004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892580", Offset = "0x892580")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000862")]
			[Address(RVA = "0x108E00C", Offset = "0x108E00C", VA = "0x108E00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892590", Offset = "0x892590")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public float CurrentAnimationTime
		{
			[Token(Token = "0x6000863")]
			[Address(RVA = "0x108E014", Offset = "0x108E014", VA = "0x108E014")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D1")]
		public float speed
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0x108E01C", Offset = "0x108E01C", VA = "0x108E01C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8925A0", Offset = "0x8925A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000865")]
			[Address(RVA = "0x108E024", Offset = "0x108E024", VA = "0x108E024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8925B0", Offset = "0x8925B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public MeshAnimation currentAnimation
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0x108E02C", Offset = "0x108E02C", VA = "0x108E02C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8925C0", Offset = "0x8925C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000867")]
			[Address(RVA = "0x108E034", Offset = "0x108E034", VA = "0x108E034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8925D0", Offset = "0x8925D0")]
			private set
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action<string> OnAnimationFinished
		{
			[Token(Token = "0x600085D")]
			[Address(RVA = "0x108DEB4", Offset = "0x108DEB4", VA = "0x108DEB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892540", Offset = "0x892540")]
			add
			{
			}
			[Token(Token = "0x600085E")]
			[Address(RVA = "0x108DF54", Offset = "0x108DF54", VA = "0x108DF54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892550", Offset = "0x892550")]
			remove
			{
			}
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x108E03C", Offset = "0x108E03C", VA = "0x108E03C")]
		private void FireAnimationEvents(MeshAnimation cAnim, float totalSpeed, bool finished)
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x108E1C0", Offset = "0x108E1C0", VA = "0x108E1C0")]
		private static Matrix4x4 MatrixLerp(Matrix4x4 from, Matrix4x4 to, float time)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x108E274", Offset = "0x108E274", VA = "0x108E274")]
		public void UpdateTick(float time)
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x108EA7C", Offset = "0x108EA7C", VA = "0x108EA7C")]
		public void Resume()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x1088DC4", Offset = "0x1088DC4", VA = "0x1088DC4")]
		public void PlayByName(string animationName)
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x108B3A0", Offset = "0x108B3A0", VA = "0x108B3A0")]
		public void PlayByIndex(int index)
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x108EA84", Offset = "0x108EA84", VA = "0x108EA84")]
		public void Pause()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x108EA90", Offset = "0x108EA90", VA = "0x108EA90")]
		public void RestartAnim()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x108EA98", Offset = "0x108EA98", VA = "0x108EA98")]
		public void SetTime(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x108EB68", Offset = "0x108EB68", VA = "0x108EB68")]
		public void SetTimeNormalized(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x108EC44", Offset = "0x108EC44", VA = "0x108EC44")]
		public void SetCurrentAnimTime(float animTime)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x108EC4C", Offset = "0x108EC4C", VA = "0x108EC4C")]
		public int GetCurrentAnimLoopCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x108ECE4", Offset = "0x108ECE4", VA = "0x108ECE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x108F048", Offset = "0x108F048", VA = "0x108F048")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x108F054", Offset = "0x108F054", VA = "0x108F054")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x108F05C", Offset = "0x108F05C", VA = "0x108F05C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x108F12C", Offset = "0x108F12C", VA = "0x108F12C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x108F280", Offset = "0x108F280", VA = "0x108F280")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x108F5AC", Offset = "0x108F5AC", VA = "0x108F5AC")]
		public MeshAnimator()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class MeshCacheAnimatorManager : MonoBehaviour
	{
		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MeshCacheAnimatorManager _instance;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<MeshAnimator> _mAnimators;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<Mesh, Dictionary<MeshAnimation, Mesh[]>> _generatedFrames;

		[Token(Token = "0x170000D3")]
		public static MeshCacheAnimatorManager Instance
		{
			[Token(Token = "0x600087E")]
			[Address(RVA = "0x108F6D8", Offset = "0x108F6D8", VA = "0x108F6D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		public int AnimatorCount
		{
			[Token(Token = "0x600087F")]
			[Address(RVA = "0x108F724", Offset = "0x108F724", VA = "0x108F724")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x108F770", Offset = "0x108F770", VA = "0x108F770")]
		public Dictionary<Mesh, Dictionary<MeshAnimation, Mesh[]>> GetGeneratedFrames()
		{
			return null;
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x108F778", Offset = "0x108F778", VA = "0x108F778", Slot = "4")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x108F7C4", Offset = "0x108F7C4", VA = "0x108F7C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x108F9BC", Offset = "0x108F9BC", VA = "0x108F9BC")]
		public static void CreateInstance(GameObject targetScene)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x108F0C8", Offset = "0x108F0C8", VA = "0x108F0C8")]
		public void AddAnimator(MeshAnimator animator)
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x108F21C", Offset = "0x108F21C", VA = "0x108F21C")]
		public void RemoveAnimator(MeshAnimator animator)
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x108F7EC", Offset = "0x108F7EC", VA = "0x108F7EC")]
		private void UpdateTick(float time)
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x108FBB0", Offset = "0x108FBB0", VA = "0x108FBB0")]
		public MeshCacheAnimatorManager()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class MeshFrameData
	{
		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3[] decompressed;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4[] exposedTransforms;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 rootMotionPosition;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion rootMotionRotation;

		[Token(Token = "0x170000D5")]
		public Vector3[] verts
		{
			[Token(Token = "0x6000888")]
			[Address(RVA = "0x13A1D64", Offset = "0x13A1D64", VA = "0x13A1D64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x13A1D6C", Offset = "0x13A1D6C", VA = "0x13A1D6C")]
		public void SetVerts(Vector3[] v)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x13A1D74", Offset = "0x13A1D74", VA = "0x13A1D74", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x13A1EBC", Offset = "0x13A1EBC", VA = "0x13A1EBC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x13A1EC4", Offset = "0x13A1EC4", VA = "0x13A1EC4")]
		public MeshFrameData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DB")]
	public class MeshTriangleData
	{
		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int submesh;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x13A1F48", Offset = "0x13A1F48", VA = "0x13A1F48")]
		public MeshTriangleData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DC")]
	public class DeltaCompressedFrameData
	{
		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float compressionAccuracy;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float accuracy;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sizeOffset;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int vertLength;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int exposedLength;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x886348", Offset = "0x886348")]
		public short[] positionsUShort;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x886358", Offset = "0x886358")]
		public int[] positions;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x886368", Offset = "0x886368")]
		public int[] frameIndexes;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x886378", Offset = "0x886378")]
		public Matrix4x4[] exposedTransforms;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x886388", Offset = "0x886388")]
		public Vector3[] rootMotionPositions;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x886398", Offset = "0x886398")]
		public Quaternion[] rootMotionRotations;

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x122AD90", Offset = "0x122AD90", VA = "0x122AD90")]
		public static implicit operator MeshFrameData[](DeltaCompressedFrameData s)
		{
			return null;
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x122B1A8", Offset = "0x122B1A8", VA = "0x122B1A8")]
		public static implicit operator DeltaCompressedFrameData(MeshFrameData[] frames)
		{
			return null;
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x122BAB4", Offset = "0x122BAB4", VA = "0x122BAB4")]
		public DeltaCompressedFrameData()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public static class AllocatedArray<T>
	{
		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T defaultValue;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<T[]> allocatedArrays;

		[Token(Token = "0x6000892")]
		private static T[] AllocateArray(int size)
		{
			return null;
		}

		[Token(Token = "0x6000893")]
		public static T[] Get(int size)
		{
			return null;
		}

		[Token(Token = "0x6000894")]
		public static void Return(T[] array, bool resetValues = true)
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public static class Comparers
	{
		[Serializable]
		[Token(Token = "0x20001DF")]
		public class StringComparer : IEqualityComparer<string>
		{
			[Token(Token = "0x6000898")]
			[Address(RVA = "0xC0516C", Offset = "0xC0516C", VA = "0xC0516C", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.String>.Equals(string x, string y)
			{
				return default(bool);
			}

			[Token(Token = "0x6000899")]
			[Address(RVA = "0xC0517C", Offset = "0xC0517C", VA = "0xC0517C", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(string obj)
			{
				return default(int);
			}

			[Token(Token = "0x600089A")]
			[Address(RVA = "0xC0519C", Offset = "0xC0519C", VA = "0xC0519C")]
			public StringComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E0")]
		public class FloatComparer : IEqualityComparer<float>
		{
			[Token(Token = "0x600089B")]
			[Address(RVA = "0xC050F4", Offset = "0xC050F4", VA = "0xC050F4", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Single>.Equals(float x, float y)
			{
				return default(bool);
			}

			[Token(Token = "0x600089C")]
			[Address(RVA = "0xC05100", Offset = "0xC05100", VA = "0xC05100", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Single>.GetHashCode(float obj)
			{
				return default(int);
			}

			[Token(Token = "0x600089D")]
			[Address(RVA = "0xC05128", Offset = "0xC05128", VA = "0xC05128")]
			public FloatComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E1")]
		public class IntComparer : IEqualityComparer<int>
		{
			[Token(Token = "0x600089E")]
			[Address(RVA = "0xC05130", Offset = "0xC05130", VA = "0xC05130", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Int32>.Equals(int x, int y)
			{
				return default(bool);
			}

			[Token(Token = "0x600089F")]
			[Address(RVA = "0xC0513C", Offset = "0xC0513C", VA = "0xC0513C", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Int32>.GetHashCode(int obj)
			{
				return default(int);
			}

			[Token(Token = "0x60008A0")]
			[Address(RVA = "0xC05164", Offset = "0xC05164", VA = "0xC05164")]
			public IntComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E2")]
		public class ByteComparer : IEqualityComparer<byte>
		{
			[Token(Token = "0x60008A1")]
			[Address(RVA = "0xC050B4", Offset = "0xC050B4", VA = "0xC050B4", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Byte>.Equals(byte x, byte y)
			{
				return default(bool);
			}

			[Token(Token = "0x60008A2")]
			[Address(RVA = "0xC050C4", Offset = "0xC050C4", VA = "0xC050C4", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Byte>.GetHashCode(byte obj)
			{
				return default(int);
			}

			[Token(Token = "0x60008A3")]
			[Address(RVA = "0xC050EC", Offset = "0xC050EC", VA = "0xC050EC")]
			public ByteComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E3")]
		public class BoolComparer : IEqualityComparer<bool>
		{
			[Token(Token = "0x60008A4")]
			[Address(RVA = "0xC05074", Offset = "0xC05074", VA = "0xC05074", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Boolean>.Equals(bool x, bool y)
			{
				return default(bool);
			}

			[Token(Token = "0x60008A5")]
			[Address(RVA = "0xC05080", Offset = "0xC05080", VA = "0xC05080", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Boolean>.GetHashCode(bool obj)
			{
				return default(int);
			}

			[Token(Token = "0x60008A6")]
			[Address(RVA = "0xC050AC", Offset = "0xC050AC", VA = "0xC050AC")]
			public BoolComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E4")]
		private class FuncEqualityComparer<T> : EqualityComparer<T>
		{
			[Token(Token = "0x4000A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, T, bool> equals;

			[Token(Token = "0x4000A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, int> hash;

			[Token(Token = "0x60008A7")]
			public FuncEqualityComparer(Func<T, T, bool> equals, Func<T, int> hash)
			{
			}

			[Token(Token = "0x60008A8")]
			public override bool Equals(T a, T b)
			{
				return default(bool);
			}

			[Token(Token = "0x60008A9")]
			public override int GetHashCode(T obj)
			{
				return default(int);
			}
		}

		[Serializable]
		[Token(Token = "0x20001E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880690", Offset = "0x880690")]
		private sealed class <>c__10<T>
		{
			[Token(Token = "0x4000A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__10<T> <>9;

			[Token(Token = "0x4000A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, int> <>9__10_0;

			[Token(Token = "0x60008AB")]
			public <>c__10()
			{
			}

			[Token(Token = "0x60008AC")]
			internal int <Create>b__10_0(T t)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly StringComparer String;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly FloatComparer Float;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly IntComparer Int;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly ByteComparer Byte;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly BoolComparer Bool;

		[Token(Token = "0x6000896")]
		public static IEqualityComparer<T> Create<T>(Func<T, T, bool> equals, [Optional] Func<T, int> hash)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E6")]
	public static class GenericObjectPool<T>
	{
		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<T> pool;

		[Token(Token = "0x170000D6")]
		public static int Count
		{
			[Token(Token = "0x60008AD")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60008AE")]
		public static void InitPool(int count)
		{
		}

		[Token(Token = "0x60008AF")]
		public static T Get()
		{
			return (T)null;
		}

		[Token(Token = "0x60008B0")]
		public static void Return(T obj)
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public static class MatrixUtils
	{
		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1088850", Offset = "0x1088850", VA = "0x1088850")]
		public static void FromMatrix4x4(Transform transform, Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x108890C", Offset = "0x108890C", VA = "0x108890C")]
		public static Quaternion GetRotation(Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x10888EC", Offset = "0x10888EC", VA = "0x10888EC")]
		public static Vector3 GetPosition(Matrix4x4 matrix)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1088A08", Offset = "0x1088A08", VA = "0x1088A08")]
		public static Vector3 GetScale(Matrix4x4 m)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20001E8")]
	public class PooledDictionary<T, T2> : Dictionary<T, T2>
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<PooledDictionary<T, T2>> stack;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint checkedOut;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint returned;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8863A8", Offset = "0x8863A8")]
		private bool <recycleable>k__BackingField;

		[Token(Token = "0x170000D7")]
		public bool recycleable
		{
			[Token(Token = "0x60008B6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8925E0", Offset = "0x8925E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008B7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8925F0", Offset = "0x8925F0")]
			set
			{
			}
		}

		[Token(Token = "0x60008B8")]
		public static void Init(int initialPoolSize = 10)
		{
		}

		[Token(Token = "0x60008B9")]
		public static PooledDictionary<T, T2> Get(int capacity, [Optional] IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x60008BA")]
		public static PooledDictionary<T, T2> Get()
		{
			return null;
		}

		[Token(Token = "0x60008BB")]
		public static PooledDictionary<T, T2> Get(IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x60008BC")]
		public PooledDictionary()
		{
		}

		[Token(Token = "0x60008BD")]
		public PooledDictionary(int capacity)
		{
		}

		[Token(Token = "0x60008BE")]
		public PooledDictionary(int capacity, IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x60008BF")]
		public void ReturnToPool(bool force = false)
		{
		}
	}
}
namespace HighlightPlus
{
	[Token(Token = "0x20001E9")]
	public delegate bool OnObjectHighlightStartEvent(GameObject obj);
	[Token(Token = "0x20001EA")]
	public delegate void OnObjectHighlightEndEvent(GameObject obj);
	[Token(Token = "0x20001EB")]
	public delegate bool OnRendererHighlightEvent(Renderer renderer);
	[Token(Token = "0x20001EC")]
	public enum SeeThroughMode
	{
		[Token(Token = "0x4000A40")]
		WhenHighlighted,
		[Token(Token = "0x4000A41")]
		AlwaysWhenOccluded,
		[Token(Token = "0x4000A42")]
		Never
	}
	[Token(Token = "0x20001ED")]
	public enum QualityLevel
	{
		[Token(Token = "0x4000A44")]
		Fastest,
		[Token(Token = "0x4000A45")]
		High,
		[Token(Token = "0x4000A46")]
		Highest
	}
	[Token(Token = "0x20001EE")]
	public enum TargetOptions
	{
		[Token(Token = "0x4000A48")]
		Children,
		[Token(Token = "0x4000A49")]
		OnlyThisObject,
		[Token(Token = "0x4000A4A")]
		RootToChildren,
		[Token(Token = "0x4000A4B")]
		LayerInScene,
		[Token(Token = "0x4000A4C")]
		LayerInChildren
	}
	[Token(Token = "0x20001EF")]
	public enum Visibility
	{
		[Token(Token = "0x4000A4E")]
		Normal,
		[Token(Token = "0x4000A4F")]
		AlwaysOnTop,
		[Token(Token = "0x4000A50")]
		OnlyWhenOccluded
	}
	[Serializable]
	[Token(Token = "0x20001F0")]
	public struct GlowPassData
	{
		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float offset;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float alpha;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;
	}
	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x8806A0", Offset = "0x8806A0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8806A0", Offset = "0x8806A0")]
	public class HighlightEffect : MonoBehaviour
	{
		[Token(Token = "0x20001F2")]
		private struct ModelMaterials
		{
			[Token(Token = "0x4000AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool render;

			[Token(Token = "0x4000AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x4000AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool bakedTransform;

			[Token(Token = "0x4000AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 currentPosition;

			[Token(Token = "0x4000AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 currentRotation;

			[Token(Token = "0x4000AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 currentScale;

			[Token(Token = "0x4000AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool renderWasVisibleDuringSetup;

			[Token(Token = "0x4000AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh mesh;

			[Token(Token = "0x4000AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Mesh originalMesh;

			[Token(Token = "0x4000AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Renderer renderer;

			[Token(Token = "0x4000ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool skinnedMesh;

			[Token(Token = "0x4000ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Material[] fxMatMask;

			[Token(Token = "0x4000ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Material[] fxMatSolidColor;

			[Token(Token = "0x4000ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Material[] fxMatSeeThrough;

			[Token(Token = "0x4000ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Material[] fxMatOverlay;

			[Token(Token = "0x4000ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Material[] fxMatInnerGlow;

			[Token(Token = "0x4000AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Matrix4x4 renderingMatrix;
		}

		[Token(Token = "0x20001F3")]
		private enum FadingState
		{
			[Token(Token = "0x4000AE2")]
			FadingOut = -1,
			[Token(Token = "0x4000AE3")]
			NoFading,
			[Token(Token = "0x4000AE4")]
			FadingIn
		}

		[Token(Token = "0x20001F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8806EC", Offset = "0x8806EC")]
		private sealed class <OverlayOneShotAnimator>d__162 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HighlightEffect <>4__this;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color color;

			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x4000AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <startTime>5__2;

			[Token(Token = "0x4000AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__3;

			[Token(Token = "0x4000AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private WaitForEndOfFrame <ef>5__4;

			[Token(Token = "0x170000D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008FF")]
				[Address(RVA = "0xC0ACB4", Offset = "0xC0ACB4", VA = "0xC0ACB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000901")]
				[Address(RVA = "0xC0ACFC", Offset = "0xC0ACFC", VA = "0xC0ACFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008FC")]
			[Address(RVA = "0xC0AB50", Offset = "0xC0AB50", VA = "0xC0AB50")]
			[DebuggerHidden]
			public <OverlayOneShotAnimator>d__162(int <>1__state)
			{
			}

			[Token(Token = "0x60008FD")]
			[Address(RVA = "0xC0AB7C", Offset = "0xC0AB7C", VA = "0xC0AB7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008FE")]
			[Address(RVA = "0xC0AB80", Offset = "0xC0AB80", VA = "0xC0AB80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000900")]
			[Address(RVA = "0xC0ACBC", Offset = "0xC0ACBC", VA = "0xC0ACBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HighlightProfile profile;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8863B8", Offset = "0x8863B8")]
		public bool profileSync;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool previewInEditor;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TargetOptions effectGroup;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask effectGroupLayer;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8863F0", Offset = "0x8863F0")]
		public float alphaCutOff;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool cullBackFaces;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886408", Offset = "0x886408")]
		public bool ignoreObjectVisibility;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886440", Offset = "0x886440")]
		public bool reflectionProbes;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886478", Offset = "0x886478")]
		public bool ignore;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _highlighted;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeInDuration;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fadeOutDuration;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool flipY;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool constantWidth;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8864C0", Offset = "0x8864C0")]
		public float overlay;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color overlayColor;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float overlayAnimationSpeed;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8864D8", Offset = "0x8864D8")]
		public float overlayMinIntensity;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8864F0", Offset = "0x8864F0")]
		public float overlayBlending;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886508", Offset = "0x886508")]
		public float outline;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color outlineColor;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float outlineWidth;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public QualityLevel outlineQuality;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886520", Offset = "0x886520")]
		public int outlineDownsampling;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Visibility outlineVisibility;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool outlineOptimalBlit;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool outlineBlitDebug;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886538", Offset = "0x886538")]
		public float glow;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float glowWidth;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public QualityLevel glowQuality;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886550", Offset = "0x886550")]
		public int glowDownsampling;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color glowHQColor;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool glowDithering;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float glowMagicNumber1;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float glowMagicNumber2;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float glowAnimationSpeed;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Visibility glowVisibility;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool glowOptimalBlit;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool glowBlitDebug;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GlowPassData[] glowPasses;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886568", Offset = "0x886568")]
		public float innerGlow;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886580", Offset = "0x886580")]
		public float innerGlowWidth;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color innerGlowColor;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Visibility innerGlowVisibility;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool targetFX;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Texture2D targetFXTexture;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Color targetFXColor;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform targetFXCenter;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float targetFXRotationSpeed;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float targetFXInitialScale;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float targetFXEndScale;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float targetFXTransitionDuration;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float targetFXStayDuration;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public SeeThroughMode seeThrough;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8865C8", Offset = "0x8865C8")]
		public float seeThroughIntensity;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8865E0", Offset = "0x8865E0")]
		public float seeThroughTintAlpha;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public Color seeThroughTintColor;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8865F8", Offset = "0x8865F8")]
		public float seeThroughNoise;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x886610", Offset = "0x886610")]
		private ModelMaterials[] rms;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x886648", Offset = "0x886648")]
		private int rmsCount;

		[NonSerialized]
		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Transform target;

		[NonSerialized]
		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float highlightStartTime;

		[Token(Token = "0x4000A96")]
		private const string SKW_ALPHACLIP = "HP_ALPHACLIP";

		[Token(Token = "0x4000A97")]
		private const string UNIFORM_CUTOFF = "_CutOff";

		[Token(Token = "0x4000A98")]
		private const float TAU = 0.70711f;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material fxMatMask;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material fxMatSolidColor;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Material fxMatSeeThrough;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Material fxMatOverlay;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Material fxMatGlow;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Material fxMatInnerGlow;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Material fxMatOutline;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Material fxMatTarget;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Material fxMatComposeGlow;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Material fxMatComposeOutline;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Material fxMatBlurGlow;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Material fxMatBlurOutline;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector3[] offsets;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float fadeStartTime;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private FadingState fading;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private CommandBuffer cbMask;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private CommandBuffer cbSeeThrough;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private CommandBuffer cbGlow;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private CommandBuffer cbOutline;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private CommandBuffer cbOverlay;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private CommandBuffer cbInnerGlow;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private CommandBuffer cbSmoothBlend;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private int[] mipGlowBuffers;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private int[] mipOutlineBuffers;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private int glowRT;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private int outlineRT;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Mesh quadMesh;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private int sourceRT;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private Matrix4x4 quadGlowMatrix;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Matrix4x4 quadOutlineMatrix;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private Vector3[] corners;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private RenderTextureDescriptor sourceDesc;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private Color debugColor;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private Color blackColor;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private Visibility lastOutlineVisibility;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private bool requireUpdateMaterial;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private List<Renderer> tempRR;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector3[] newNormals;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static int[] matches;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Dictionary<Vector3, int> vv;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private bool overlayOneShotRunning;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x311")]
		private bool currentHighlighted;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		private Color overlayOneShotCurrentColor;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private float overlayOneShotCurrentAnimationSpeed;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private float overlayOneShotCurrentOverlay;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private float overlayOneShotCurrentOuterGlow;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private float overlayOneShotCurrentInnerGlow;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		private float overlayOneShotCurrentOutline;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private float overlayOneShotCurrentSeeThroughIntensity;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private Coroutine overlayOneShotCo;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static List<HighlightSeeThroughOccluder> occluders;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Dictionary<Camera, int> occludersFrameCount;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static CommandBuffer cbOccluder;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Material fxMatOccluder;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private bool cancelSeeThroughThisFrame;

		[Token(Token = "0x170000D8")]
		public bool highlighted
		{
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0x1782980", Offset = "0x1782980", VA = "0x1782980")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008CE")]
			[Address(RVA = "0x1782988", Offset = "0x1782988", VA = "0x1782988")]
			set
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event OnObjectHighlightStartEvent OnObjectHighlightStart
		{
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0x1782B94", Offset = "0x1782B94", VA = "0x1782B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892600", Offset = "0x892600")]
			add
			{
			}
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0x1782C38", Offset = "0x1782C38", VA = "0x1782C38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892610", Offset = "0x892610")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event OnObjectHighlightEndEvent OnObjectHighlightEnd
		{
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0x1782CDC", Offset = "0x1782CDC", VA = "0x1782CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892620", Offset = "0x892620")]
			add
			{
			}
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0x1782D80", Offset = "0x1782D80", VA = "0x1782D80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892630", Offset = "0x892630")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event OnRendererHighlightEvent OnRendererHighlightStart
		{
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0x1782E24", Offset = "0x1782E24", VA = "0x1782E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892640", Offset = "0x892640")]
			add
			{
			}
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0x1782EC8", Offset = "0x1782EC8", VA = "0x1782EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892650", Offset = "0x892650")]
			remove
			{
			}
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x1782F6C", Offset = "0x1782F6C", VA = "0x1782F6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1784618", Offset = "0x1784618", VA = "0x1784618")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x1785540", Offset = "0x1785540", VA = "0x1785540")]
		private void SRPAfterCameraRenders(ScriptableRenderContext context, Camera cam)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1787C14", Offset = "0x1787C14", VA = "0x1787C14")]
		private void Reset()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x1787C18", Offset = "0x1787C18", VA = "0x1787C18")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1787C44", Offset = "0x1787C44", VA = "0x1787C44")]
		public void ProfileLoad(HighlightProfile profile)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1787CE0", Offset = "0x1787CE0", VA = "0x1787CE0")]
		public void ProfileReload()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x1787D70", Offset = "0x1787D70", VA = "0x1787D70")]
		public void ProfileSaveChanges(HighlightProfile profile)
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x1787F94", Offset = "0x1787F94", VA = "0x1787F94")]
		public void ProfileSaveChanges()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x1788024", Offset = "0x1788024", VA = "0x1788024")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x17855E4", Offset = "0x17855E4", VA = "0x17855E4")]
		private void DoOnRenderObject(Camera cam)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x1788C70", Offset = "0x1788C70", VA = "0x1788C70")]
		private bool ComputeSmoothQuadMatrix(Camera cam, Bounds bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x1789FB4", Offset = "0x1789FB4", VA = "0x1789FB4")]
		private void BuildMatrix(Camera cam, Vector3 scrMin, Vector3 scrMax, int border, ref Matrix4x4 quadMatrix)
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x1788FC4", Offset = "0x1788FC4", VA = "0x1788FC4")]
		private void SmoothGlow(Camera cam, int sourceRT, int rtWidth, int rtHeight)
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x17895A4", Offset = "0x17895A4", VA = "0x17895A4")]
		private void SmoothOutline(Camera cam, int sourceRT, int rtWidth, int rtHeight)
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x1789934", Offset = "0x1789934", VA = "0x1789934")]
		private void ComposeSmoothBlend(Visibility smoothGlowVisibility, Visibility smoothOutlineVisibility)
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x178A1A8", Offset = "0x178A1A8", VA = "0x178A1A8")]
		private void InitMaterial(ref Material material, string shaderName)
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x178A340", Offset = "0x178A340", VA = "0x178A340")]
		public void SetTarget(Transform transform)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x1782990", Offset = "0x1782990", VA = "0x1782990")]
		public void SetHighlighted(bool state)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x1783BA4", Offset = "0x1783BA4", VA = "0x1783BA4")]
		private void SetupMaterial()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x178A418", Offset = "0x178A418", VA = "0x178A418")]
		private Renderer[] FindRenderersWithLayerInScene(LayerMask layer)
		{
			return null;
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x178A5EC", Offset = "0x178A5EC", VA = "0x178A5EC")]
		private Renderer[] FindRenderersWithLayerInChildren(LayerMask layer)
		{
			return null;
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x1783980", Offset = "0x1783980", VA = "0x1783980")]
		private void CheckGeometrySupportDependencies()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x178A79C", Offset = "0x178A79C", VA = "0x178A79C")]
		private void CheckCommandBuffers()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x1788BD8", Offset = "0x1788BD8", VA = "0x1788BD8")]
		private void CheckBlurCommandBuffer()
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x178A9C4", Offset = "0x178A9C4", VA = "0x178A9C4")]
		private Material[] Fork(Material mat, Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x1788840", Offset = "0x1788840", VA = "0x1788840")]
		private void BakeTransform(int objIndex, bool duplicateMesh)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x17846DC", Offset = "0x17846DC", VA = "0x17846DC")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x178A188", Offset = "0x178A188", VA = "0x178A188")]
		private int GetZTestValue(Visibility param)
		{
			return default(int);
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x178351C", Offset = "0x178351C", VA = "0x178351C")]
		private void BuildQuad()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x178AB38", Offset = "0x178AB38", VA = "0x178AB38")]
		private void AverageNormals(int objIndex)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x178B1E4", Offset = "0x178B1E4", VA = "0x178B1E4")]
		public void OverlayOneShot(Color color, float duration)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x178B354", Offset = "0x178B354", VA = "0x178B354")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x892660", Offset = "0x892660")]
		private IEnumerator OverlayOneShotAnimator(Color color, float duration)
		{
			return null;
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x178B2E4", Offset = "0x178B2E4", VA = "0x178B2E4")]
		private void OverlayOneShotEnd()
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x178B3F8", Offset = "0x178B3F8", VA = "0x178B3F8")]
		public static void RegisterOccluder(HighlightSeeThroughOccluder occluder)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x178B4DC", Offset = "0x178B4DC", VA = "0x178B4DC")]
		public static void UnregisterOccluder(HighlightSeeThroughOccluder occluder)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x178805C", Offset = "0x178805C", VA = "0x178805C")]
		public void RenderOccluders(Camera cam)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x178B5C0", Offset = "0x178B5C0", VA = "0x178B5C0")]
		public HighlightEffect()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8806FC", Offset = "0x8806FC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8806FC", Offset = "0x8806FC")]
	public class HighlightManager : MonoBehaviour
	{
		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera raycastCamera;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RayCastSource raycastSource;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HighlightEffect baseEffect;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HighlightEffect currentEffect;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform currentObject;

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x178B800", Offset = "0x178B800", VA = "0x178B800")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x178BAA4", Offset = "0x178BAA4", VA = "0x178BAA4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x178BC78", Offset = "0x178BC78", VA = "0x178BC78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x178BAAC", Offset = "0x178BAAC", VA = "0x178BAAC")]
		private void SwitchesCollider(Transform newObject)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x178B9EC", Offset = "0x178B9EC", VA = "0x178B9EC")]
		public static Camera GetCamera()
		{
			return null;
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x178BE9C", Offset = "0x178BE9C", VA = "0x178BE9C")]
		public HighlightManager()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x880780", Offset = "0x880780")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x880780", Offset = "0x880780")]
	public class HighlightProfile : ScriptableObject
	{
		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetOptions effectGroup;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask effectGroupLayer;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886680", Offset = "0x886680")]
		public float alphaCutOff;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool cullBackFaces;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeInDuration;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeOutDuration;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886698", Offset = "0x886698")]
		public float overlay;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color overlayColor;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float overlayAnimationSpeed;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8866B0", Offset = "0x8866B0")]
		public float overlayMinIntensity;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8866C8", Offset = "0x8866C8")]
		public float overlayBlending;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8866E0", Offset = "0x8866E0")]
		public float outline;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color outlineColor;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float outlineWidth;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public QualityLevel outlineQuality;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Visibility outlineVisibility;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8866F8", Offset = "0x8866F8")]
		public float glow;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float glowWidth;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public QualityLevel glowQuality;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color glowHQColor;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool glowDithering;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float glowMagicNumber1;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float glowMagicNumber2;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float glowAnimationSpeed;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Visibility glowVisibility;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GlowPassData[] glowPasses;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886710", Offset = "0x886710")]
		public float innerGlow;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886728", Offset = "0x886728")]
		public float innerGlowWidth;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Color innerGlowColor;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Visibility innerGlowVisibility;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool targetFX;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Texture2D targetFXTexture;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Color targetFXColor;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float targetFXRotationSpeed;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float targetFXInitialScale;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float targetFXEndScale;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float targetFXTransitionDuration;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float targetFXStayDuration;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public SeeThroughMode seeThrough;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886740", Offset = "0x886740")]
		public float seeThroughIntensity;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886758", Offset = "0x886758")]
		public float seeThroughTintAlpha;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Color seeThroughTintColor;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886770", Offset = "0x886770")]
		public float seeThroughNoise;

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x17837E8", Offset = "0x17837E8", VA = "0x17837E8")]
		public void Load(HighlightEffect effect)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x1787E0C", Offset = "0x1787E0C", VA = "0x1787E0C")]
		public void Save(HighlightEffect effect)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x178BED0", Offset = "0x178BED0", VA = "0x178BED0")]
		private GlowPassData[] GetGlowPassesCopy(GlowPassData[] glowPasses)
		{
			return null;
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x178BFBC", Offset = "0x178BFBC", VA = "0x178BFBC")]
		public HighlightProfile()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public struct MeshData
	{
		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer renderer;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int subMeshCount;
	}
	[Token(Token = "0x20001F8")]
	public enum DetectionMethod
	{
		[Token(Token = "0x4000B21")]
		Stencil,
		[Token(Token = "0x4000B22")]
		CapsuleCast
	}
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8807FC", Offset = "0x8807FC")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x8807FC", Offset = "0x8807FC")]
	public class HighlightSeeThroughOccluder : MonoBehaviour
	{
		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DetectionMethod detectionMethod;

		[NonSerialized]
		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshData[] meshData;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Renderer> rr;

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x178C0FC", Offset = "0x178C0FC", VA = "0x178C0FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x178C144", Offset = "0x178C144", VA = "0x178C144")]
		private void Init()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x178C5C0", Offset = "0x178C5C0", VA = "0x178C5C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x178C620", Offset = "0x178C620", VA = "0x178C620")]
		public HighlightSeeThroughOccluder()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public enum TriggerMode
	{
		[Token(Token = "0x4000B27")]
		ColliderEventsOnlyOnThisObject,
		[Token(Token = "0x4000B28")]
		RaycastOnThisObjectAndChildren
	}
	[Token(Token = "0x20001FB")]
	public enum RayCastSource
	{
		[Token(Token = "0x4000B2A")]
		MousePosition,
		[Token(Token = "0x4000B2B")]
		CameraDirection
	}
	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x880848", Offset = "0x880848")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x880848", Offset = "0x880848")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x880848", Offset = "0x880848")]
	public class HighlightTrigger : MonoBehaviour
	{
		[Token(Token = "0x20001FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8808DC", Offset = "0x8808DC")]
		private sealed class <DoRayCast>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HighlightTrigger <>4__this;

			[Token(Token = "0x170000DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600091D")]
				[Address(RVA = "0xC0B078", Offset = "0xC0B078", VA = "0xC0B078", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600091F")]
				[Address(RVA = "0xC0B0C0", Offset = "0xC0B0C0", VA = "0xC0B0C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600091A")]
			[Address(RVA = "0xC0AD04", Offset = "0xC0AD04", VA = "0xC0AD04")]
			[DebuggerHidden]
			public <DoRayCast>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600091B")]
			[Address(RVA = "0xC0AD30", Offset = "0xC0AD30", VA = "0xC0AD30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600091C")]
			[Address(RVA = "0xC0AD34", Offset = "0xC0AD34", VA = "0xC0AD34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600091E")]
			[Address(RVA = "0xC0B080", Offset = "0xC0B080", VA = "0xC0B080", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886788", Offset = "0x886788")]
		public TriggerMode triggerMode;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera raycastCamera;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RayCastSource raycastSource;

		[Token(Token = "0x4000B2F")]
		private const int MAX_RAYCAST_HITS = 100;

		[NonSerialized]
		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider[] colliders;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider currentCollider;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RaycastHit[] hits;

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x178C628", Offset = "0x178C628", VA = "0x178C628")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x178C6D8", Offset = "0x178C6D8", VA = "0x178C6D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x178C990", Offset = "0x178C990", VA = "0x178C990")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x892710", Offset = "0x892710")]
		private IEnumerator DoRayCast()
		{
			return null;
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x178C9FC", Offset = "0x178C9FC", VA = "0x178C9FC")]
		private void SwitchCollider(Collider newCollider)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x178CBC0", Offset = "0x178CBC0", VA = "0x178CBC0")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x178CC04", Offset = "0x178CC04", VA = "0x178CC04")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x178CC48", Offset = "0x178CC48", VA = "0x178CC48")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x178CA90", Offset = "0x178CA90", VA = "0x178CA90")]
		private void Highlight(bool state)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x178C62C", Offset = "0x178C62C", VA = "0x178C62C")]
		public void Init()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x178CC8C", Offset = "0x178CC8C", VA = "0x178CC8C")]
		public HighlightTrigger()
		{
		}
	}
}
namespace HighlightPlus.Demos
{
	[Token(Token = "0x20001FE")]
	public class SphereHighlightEventExample : MonoBehaviour
	{
		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HighlightEffect effect;

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xE135F8", Offset = "0xE135F8", VA = "0xE135F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xE136B0", Offset = "0xE136B0", VA = "0xE136B0")]
		private bool ValidateHighlightObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xE136B8", Offset = "0xE136B8", VA = "0xE136B8")]
		private void HighlightStart()
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xE1372C", Offset = "0xE1372C", VA = "0xE1372C")]
		private void HighlightEnd()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0xE137A0", Offset = "0xE137A0", VA = "0xE137A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xE137FC", Offset = "0xE137FC", VA = "0xE137FC")]
		public SphereHighlightEventExample()
		{
		}
	}
}
namespace Exploder
{
	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8808EC", Offset = "0x8808EC")]
	public class Array<T>
	{
		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] array;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int size;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int index;

		[Token(Token = "0x170000DD")]
		public int Count
		{
			[Token(Token = "0x6000928")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DE")]
		public T Item
		{
			[Token(Token = "0x6000929")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000926")]
		public Array(int size)
		{
		}

		[Token(Token = "0x6000927")]
		public void Initialize(int newSize)
		{
		}

		[Token(Token = "0x600092A")]
		public void Clear()
		{
		}

		[Token(Token = "0x600092B")]
		public void Add(T data)
		{
		}

		[Token(Token = "0x600092C")]
		public void Reverse()
		{
		}
	}
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x880924", Offset = "0x880924")]
	internal class ArrayDictionary<T>
	{
		[Token(Token = "0x2000201")]
		private struct DicItem
		{
			[Token(Token = "0x4000B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;

			[Token(Token = "0x4000B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool valid;
		}

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Size;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly DicItem[] dictionary;

		[Token(Token = "0x170000DF")]
		public T Item
		{
			[Token(Token = "0x600092F")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000930")]
			set
			{
			}
		}

		[Token(Token = "0x600092D")]
		public ArrayDictionary(int size)
		{
		}

		[Token(Token = "0x600092E")]
		public bool ContainsKey(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000931")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000932")]
		public void Add(int key, T data)
		{
		}

		[Token(Token = "0x6000933")]
		public void Remove(int key)
		{
		}

		[Token(Token = "0x6000934")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x6000935")]
		public bool TryGetValue(int key, out T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000936")]
		public T GetFirstValue()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000202")]
	internal class BakeSkinManager
	{
		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject parent;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<GameObject> bakedObjects;

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xE30218", Offset = "0xE30218", VA = "0xE30218")]
		public BakeSkinManager(Core core)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xE30354", Offset = "0xE30354", VA = "0xE30354")]
		public GameObject CreateBakeObject(string name)
		{
			return null;
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xE30428", Offset = "0xE30428", VA = "0xE30428")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class Contour
	{
		[Token(Token = "0x2000204")]
		private struct MidPoint
		{
			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int id;

			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int vertexId;

			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int idNext;

			[Token(Token = "0x4000B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int idPrev;
		}

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Dictionary<int, int>> contour;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ArrayDictionary<MidPoint> midPoints;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LSHash lsHash;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8867C0", Offset = "0x8867C0")]
		private int <MidPointsCount>k__BackingField;

		[Token(Token = "0x170000E0")]
		public int MidPointsCount
		{
			[Token(Token = "0x600093C")]
			[Address(RVA = "0x127BB38", Offset = "0x127BB38", VA = "0x127BB38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8927C0", Offset = "0x8927C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600093D")]
			[Address(RVA = "0x127BB40", Offset = "0x127BB40", VA = "0x127BB40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8927D0", Offset = "0x8927D0")]
			private set
			{
			}
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x127B85C", Offset = "0x127B85C", VA = "0x127B85C")]
		public Contour(int trianglesNum)
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x127B88C", Offset = "0x127B88C", VA = "0x127B88C")]
		public void AllocateBuffers(int trianglesNum)
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x127BB48", Offset = "0x127BB48", VA = "0x127BB48")]
		public void AddTriangle(int triangleID, int id0, int id1, Vector3 v0, Vector3 v1)
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x127BD8C", Offset = "0x127BD8C", VA = "0x127BD8C")]
		public bool FindContours()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000205")]
	internal class Core : Singleton<Core>
	{
		[NonSerialized]
		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderParams parameters;

		[NonSerialized]
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploderQueue queue;

		[NonSerialized]
		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Stopwatch explosionWatch;

		[NonSerialized]
		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Stopwatch frameWatch;

		[NonSerialized]
		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HashSet<MeshObject> meshSet;

		[NonSerialized]
		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<int, int> targetFragments;

		[NonSerialized]
		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MeshObject> postList;

		[NonSerialized]
		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Fragment> pool;

		[NonSerialized]
		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CrackManager crackManager;

		[NonSerialized]
		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int processingFrames;

		[NonSerialized]
		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int poolIdx;

		[NonSerialized]
		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool splitMeshIslands;

		[NonSerialized]
		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BakeSkinManager bakeSkinManager;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ExploderTask[] tasks;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TaskType currTaskType;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool initialized;

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x127C2E4", Offset = "0x127C2E4", VA = "0x127C2E4")]
		public void Initialize(ExploderObject exploder)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x127CC58", Offset = "0x127CC58", VA = "0x127CC58")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, bool crack, params GameObject[] obj)
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x127CC78", Offset = "0x127CC78", VA = "0x127CC78")]
		public void ExplodeCracked(GameObject obj, ExploderObject.OnExplosion callback)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x127D05C", Offset = "0x127D05C", VA = "0x127D05C")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize, ExploderObject.OnExplosion callback)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x127D308", Offset = "0x127D308", VA = "0x127D308")]
		public bool IsCracked(GameObject gm)
		{
			return default(bool);
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x127D384", Offset = "0x127D384", VA = "0x127D384")]
		public void StartExplosionFromQueue(ExploderParams p)
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x127D67C", Offset = "0x127D67C", VA = "0x127D67C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x127D78C", Offset = "0x127D78C", VA = "0x127D78C", Slot = "4")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x127CB00", Offset = "0x127CB00", VA = "0x127CB00")]
		private void PreAllocateBuffers()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x127D584", Offset = "0x127D584", VA = "0x127D584")]
		private bool RunTask(TaskType taskType, float budget = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x127D53C", Offset = "0x127D53C", VA = "0x127D53C")]
		private void InitTask(TaskType taskType)
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x127D5CC", Offset = "0x127D5CC", VA = "0x127D5CC")]
		private TaskType NextTask(TaskType taskType)
		{
			return default(TaskType);
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x127D840", Offset = "0x127D840", VA = "0x127D840")]
		public Core()
		{
		}
	}
	[Token(Token = "0x2000206")]
	internal class CrackManager
	{
		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<GameObject, CrackedObject> crackedObjects;

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x127C6C4", Offset = "0x127C6C4", VA = "0x127C6C4")]
		public CrackManager(Core core)
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x127D904", Offset = "0x127D904", VA = "0x127D904")]
		public CrackedObject Create(GameObject originalObject, ExploderParams parameters)
		{
			return null;
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x127CD40", Offset = "0x127CD40", VA = "0x127CD40")]
		public long Explode(GameObject gameObject)
		{
			return default(long);
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x127D18C", Offset = "0x127D18C", VA = "0x127D18C")]
		public long ExplodePartial(GameObject gameObject, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
			return default(long);
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x127CEF0", Offset = "0x127CEF0", VA = "0x127CEF0")]
		public long ExplodeAll()
		{
			return default(long);
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x127D320", Offset = "0x127D320", VA = "0x127D320")]
		public bool IsCracked(GameObject gameObject)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000207")]
	internal class CrackedObject
	{
		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Fragment> pool;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Stopwatch watch;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Quaternion initRot;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector3 initPos;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly GameObject originalObject;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ExploderParams parameters;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly FractureGrid fractureGrid;

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x127D9A4", Offset = "0x127D9A4", VA = "0x127D9A4")]
		public CrackedObject(GameObject originalObject, ExploderParams parameters)
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x127E238", Offset = "0x127E238", VA = "0x127E238")]
		public void CalculateFractureGrid()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x127DA98", Offset = "0x127DA98", VA = "0x127DA98")]
		public long Explode()
		{
			return default(long);
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x127DF04", Offset = "0x127DF04", VA = "0x127DF04")]
		public long ExplodePartial(GameObject gameObject, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
			return default(long);
		}
	}
	[Token(Token = "0x2000208")]
	internal class CuttingPlane
	{
		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly System.Random random;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Plane plane;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Core core;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] rectAxis;

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x1280094", Offset = "0x1280094", VA = "0x1280094")]
		public CuttingPlane(Core core)
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x12827D4", Offset = "0x12827D4", VA = "0x12827D4")]
		private Plane GetRandomPlane(ExploderMesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x128288C", Offset = "0x128288C", VA = "0x128288C")]
		private Plane GetRectangularRegularPlane(ExploderMesh mesh, int attempt)
		{
			return null;
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x12829D4", Offset = "0x12829D4", VA = "0x12829D4")]
		private Plane GetRectangularRandom(ExploderMesh mesh, int attempt)
		{
			return null;
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x1281D80", Offset = "0x1281D80", VA = "0x1281D80")]
		public Plane GetPlane(ExploderMesh mesh, int attempt)
		{
			return null;
		}
	}
	[Token(Token = "0x2000209")]
	public class ExploderParams
	{
		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 ForceVector;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 CubeRadius;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 HitPosition;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 ShotDir;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float Force;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float FrameBudget;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float Radius;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float BulletSize;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int id;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int TargetFragments;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int FragmentPoolSize;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ExploderObject.ThreadOptions ThreadOptions;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ExploderObject.OnExplosion Callback;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FragmentOption FragmentOptions;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FragmentDeactivation FragmentDeactivation;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public FragmentSFX FragmentSFX;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ExploderObject.CuttingStyleOption CuttingStyle;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject[] Targets;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject ExploderGameObject;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool UseCubeRadius;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool DontUseTag;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		public bool UseForceVector;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
		public bool ExplodeSelf;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool HideSelf;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool DestroyOriginalObject;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		public bool SplitMeshIslands;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
		public bool Use2DCollision;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool DisableRadiusScan;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool UniformFragmentDistribution;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool DisableTriangulation;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		public bool Crack;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool processing;

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x12AAE80", Offset = "0x12AAE80", VA = "0x12AAE80")]
		public ExploderParams(ExploderObject exploder)
		{
		}
	}
	[Token(Token = "0x200020A")]
	internal class ExploderQueue
	{
		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Queue<ExploderParams> queue;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Core core;

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x12AB1E4", Offset = "0x12AB1E4", VA = "0x12AB1E4")]
		public ExploderQueue(Core core)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x12AB270", Offset = "0x12AB270", VA = "0x12AB270")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, bool crack, params GameObject[] target)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x12AB330", Offset = "0x12AB330", VA = "0x12AB330")]
		private void ProcessQueue()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x12AB3E8", Offset = "0x12AB3E8", VA = "0x12AB3E8")]
		public void OnExplosionFinished(int id, long ellapsedMS)
		{
		}
	}
	[Token(Token = "0x200020B")]
	public struct ExploderTransform
	{
		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 localScale;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform parent;

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x12AB7D0", Offset = "0x12AB7D0", VA = "0x12AB7D0")]
		public ExploderTransform(Transform unityTransform)
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x12AB844", Offset = "0x12AB844", VA = "0x12AB844")]
		public Vector3 InverseTransformDirection(Vector3 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x12AB894", Offset = "0x12AB894", VA = "0x12AB894")]
		public Vector3 InverseTransformPoint(Vector3 pnt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x12AB924", Offset = "0x12AB924", VA = "0x12AB924")]
		public Vector3 TransformPoint(Vector3 pnt)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200020C")]
	internal class FractureGrid
	{
		[Token(Token = "0x6000966")]
		[Address(RVA = "0x12B0EE4", Offset = "0x12B0EE4", VA = "0x12B0EE4")]
		public FractureGrid(CrackedObject obj)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x12B0EEC", Offset = "0x12B0EEC", VA = "0x12B0EEC")]
		public void CreateGrid()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class LSHash
	{
		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Vector3[] buckets;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float bucketSize2;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int count;

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x107D488", Offset = "0x107D488", VA = "0x107D488")]
		public LSHash(float bucketSize, int allocSize)
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x107D50C", Offset = "0x107D50C", VA = "0x107D50C")]
		public int Capacity()
		{
			return default(int);
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x107D528", Offset = "0x107D528", VA = "0x107D528")]
		public void Clear()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x107D5AC", Offset = "0x107D5AC", VA = "0x107D5AC")]
		public int Hash(Vector3 p)
		{
			return default(int);
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x107D684", Offset = "0x107D684", VA = "0x107D684")]
		public void Hash(Vector3 p0, Vector3 p1, out int hash0, out int hash1)
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class ExploderMesh
	{
		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] triangles;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2[] uv;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4[] tangents;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color32[] colors32;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 centroid;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 min;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 max;

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x12380E0", Offset = "0x12380E0", VA = "0x12380E0")]
		public ExploderMesh()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x12380E8", Offset = "0x12380E8", VA = "0x12380E8")]
		public ExploderMesh(Mesh unityMesh)
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x12381EC", Offset = "0x12381EC", VA = "0x12381EC")]
		public static void CalculateCentroid(List<Vector3> vertices, ref Vector3 ctr, ref Vector3 min, ref Vector3 max)
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x1238554", Offset = "0x1238554", VA = "0x1238554")]
		public Mesh ToUnityMesh()
		{
			return null;
		}
	}
	[Token(Token = "0x200020F")]
	public class MeshCutter
	{
		[Token(Token = "0x2000210")]
		private struct Triangle
		{
			[Token(Token = "0x4000BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] ids;

			[Token(Token = "0x4000BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3[] pos;

			[Token(Token = "0x4000BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] normal;

			[Token(Token = "0x4000BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2[] uvs;

			[Token(Token = "0x4000BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4000BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color32[] colors;
		}

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<int>[] triangles;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3>[] vertices;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector3>[] normals;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector2>[] uvs;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector4>[] tangents;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Color32>[] vertexColors;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<int> cutTris;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] triCache;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] centroid;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] triCounter;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Array<int> polygonIndicesArray;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Contour contour;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<long, int>[] cutVertCache;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<int, int>[] cornerVertCache;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int contourBufferSize;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Color crossSectionVertexColour;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector4 crossSectionUV;

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x139983C", Offset = "0x139983C", VA = "0x139983C")]
		public void Init(int trianglesNum, int verticesNum)
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x1399878", Offset = "0x1399878", VA = "0x1399878")]
		private void AllocateBuffers(int trianglesNum, int verticesNum, bool useMeshTangents, bool useVertexColors)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x139A254", Offset = "0x139A254", VA = "0x139A254")]
		private void AllocateContours(int cutTrianglesNum)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x139A6D0", Offset = "0x139A6D0", VA = "0x139A6D0")]
		public float Cut(ExploderMesh mesh, ExploderTransform meshTransform, Plane plane, bool triangulateHoles, bool allowOpenMesh, ref List<ExploderMesh> meshes, Color crossSectionVertexColor, Vector4 crossUV)
		{
			return default(float);
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x139A6EC", Offset = "0x139A6EC", VA = "0x139A6EC")]
		private float Cut(ExploderMesh mesh, ExploderTransform meshTransform, Plane plane, bool triangulateHoles, bool allowOpenMesh, ref List<ExploderMesh> meshes)
		{
			return default(float);
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x13A04A8", Offset = "0x13A04A8", VA = "0x13A04A8")]
		private int AddIntersectionPoint(Vector3 pos, Triangle tri, int edge0, int edge1, Dictionary<long, int> cache, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Vector4> tangents, List<Color32> colors32, bool useTangents, bool useColors, bool useNormals)
		{
			return default(int);
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x13A0868", Offset = "0x13A0868", VA = "0x13A0868")]
		private int AddTrianglePoint(Vector3 pos, Vector3 normal, Vector2 uv, Vector4 tangent, Color32 color, int idx, int[] triCache, Dictionary<int, int> cache, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Vector4> tangents, List<Color32> colors, bool useTangents, bool useColors, bool useNormals)
		{
			return default(int);
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x13A0AA4", Offset = "0x13A0AA4", VA = "0x13A0AA4")]
		private void Triangulate(List<Dictionary<int, int>> contours, Plane plane, List<Vector3>[] vertices, List<Vector3>[] normals, List<Vector2>[] uvs, List<Vector4>[] tangents, List<Color32>[] colors, List<int>[] triangles, bool uvCutMesh, bool useTangents, bool useColors, bool useNormals)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x13A1D5C", Offset = "0x13A1D5C", VA = "0x13A1D5C")]
		public MeshCutter()
		{
		}
	}
	[Token(Token = "0x2000211")]
	internal struct MeshObject
	{
		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ExploderMesh mesh;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExploderTransform transform;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform parent;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 position;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Quaternion rotation;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 localScale;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject original;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ExploderOption option;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject skinnedOriginal;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject bakeObject;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float distanceRatio;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int id;
	}
	[Token(Token = "0x2000212")]
	public static class MeshUtils
	{
		[Token(Token = "0x600097A")]
		[Address(RVA = "0x13A1C88", Offset = "0x13A1C88", VA = "0x13A1C88")]
		public static Vector3 ComputeBarycentricCoordinates(Vector3 a, Vector3 b, Vector3 c, Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600097B")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x13A1F50", Offset = "0x13A1F50", VA = "0x13A1F50")]
		public static void CenterPivot(Vector3[] vertices, Vector3 centroid)
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x13A1FC0", Offset = "0x13A1FC0", VA = "0x13A1FC0")]
		public static List<ExploderMesh> IsolateMeshIslands(ExploderMesh mesh)
		{
			return null;
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x13A316C", Offset = "0x13A316C", VA = "0x13A316C")]
		public static void GeneratePolygonCollider(PolygonCollider2D collider, Mesh mesh)
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class Plane
	{
		[Token(Token = "0x2000214")]
		[Flags]
		public enum PointClass
		{
			[Token(Token = "0x4000BC2")]
			Coplanar = 0,
			[Token(Token = "0x4000BC3")]
			Front = 1,
			[Token(Token = "0x4000BC4")]
			Back = 2,
			[Token(Token = "0x4000BC5")]
			Intersection = 3
		}

		[Token(Token = "0x4000BBD")]
		private const float epsylon = 0.0001f;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Normal;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8867D0", Offset = "0x8867D0")]
		private Vector3 <Pnt>k__BackingField;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Distance;

		[Token(Token = "0x170000E1")]
		public Vector3 Pnt
		{
			[Token(Token = "0x600097F")]
			[Address(RVA = "0x111514C", Offset = "0x111514C", VA = "0x111514C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8927E0", Offset = "0x8927E0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000980")]
			[Address(RVA = "0x1115158", Offset = "0x1115158", VA = "0x1115158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8927F0", Offset = "0x8927F0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x1115164", Offset = "0x1115164", VA = "0x1115164")]
		public Plane(Vector3 a, Vector3 b, Vector3 c)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x111522C", Offset = "0x111522C", VA = "0x111522C")]
		public Plane(Vector3 normal, Vector3 p)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x111529C", Offset = "0x111529C", VA = "0x111529C")]
		public void Set(Vector3 normal, Vector3 p)
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x1115314", Offset = "0x1115314", VA = "0x1115314")]
		public Plane(Plane instance)
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x111536C", Offset = "0x111536C", VA = "0x111536C")]
		public PointClass ClassifyPoint(Vector3 p)
		{
			return default(PointClass);
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x11153BC", Offset = "0x11153BC", VA = "0x11153BC")]
		public bool GetSide(Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x11153F4", Offset = "0x11153F4", VA = "0x11153F4")]
		public void Flip()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x111541C", Offset = "0x111541C", VA = "0x111541C")]
		public bool GetSideFix(ref Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x11154E8", Offset = "0x11154E8", VA = "0x11154E8")]
		public bool SameSide(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x1115528", Offset = "0x1115528", VA = "0x1115528")]
		public bool IntersectSegment(Vector3 a, Vector3 b, out float t, ref Vector3 q)
		{
			return default(bool);
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x11155F4", Offset = "0x11155F4", VA = "0x11155F4")]
		public void InverseTransform(ExploderTransform transform)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x111567C", Offset = "0x111567C", VA = "0x111567C")]
		public Matrix4x4 GetPlaneMatrix()
		{
			return default(Matrix4x4);
		}
	}
	[Token(Token = "0x2000215")]
	public class Polygon
	{
		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2[] Points;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float Area;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Min;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 Max;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<Polygon> holes;

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x10156F4", Offset = "0x10156F4", VA = "0x10156F4")]
		public Polygon(Vector2[] pnts)
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x101578C", Offset = "0x101578C", VA = "0x101578C")]
		public float GetArea()
		{
			return default(float);
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x10158A0", Offset = "0x10158A0", VA = "0x10158A0")]
		public bool IsPointInside(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x10159B0", Offset = "0x10159B0", VA = "0x10159B0")]
		public bool IsPolygonInside(Polygon polygon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x1015A08", Offset = "0x1015A08", VA = "0x1015A08")]
		public void AddHole(Polygon polygon)
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x1015A6C", Offset = "0x1015A6C", VA = "0x1015A6C")]
		public bool Triangulate(Array<int> indicesArray)
		{
			return default(bool);
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x10166F0", Offset = "0x10166F0", VA = "0x10166F0")]
		private bool Snip(int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x10168E8", Offset = "0x10168E8", VA = "0x10168E8")]
		private bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000216")]
	internal class CutterMT : CutterST
	{
		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected readonly int THREAD_MAX;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly CutterWorker[] workers;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly int[] splitIDs;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Stopwatch localWatch;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool cutInitialized;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int idCounter;

		[Token(Token = "0x170000E2")]
		public override TaskType Type
		{
			[Token(Token = "0x6000996")]
			[Address(RVA = "0x1280360", Offset = "0x1280360", VA = "0x1280360", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x127C860", Offset = "0x127C860", VA = "0x127C860")]
		public CutterMT(Core Core)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x1280368", Offset = "0x1280368", VA = "0x1280368", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x12804D0", Offset = "0x12804D0", VA = "0x12804D0", Slot = "5")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x1280570", Offset = "0x1280570", VA = "0x1280570", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x12806F0", Offset = "0x12806F0", VA = "0x12806F0", Slot = "8")]
		protected override bool Cut(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x12812B0", Offset = "0x12812B0", VA = "0x12812B0")]
		private int[] SplitMeshTargetFragments(int id)
		{
			return null;
		}
	}
	[Token(Token = "0x2000217")]
	internal class CutterST : ExploderTask
	{
		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly HashSet<MeshObject> newFragments;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly HashSet<MeshObject> meshToRemove;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected readonly MeshCutter cutter;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected readonly CuttingPlane cuttingPlane;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cutAttempt;

		[Token(Token = "0x170000E3")]
		public override TaskType Type
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x1281504", Offset = "0x1281504", VA = "0x1281504", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x127C740", Offset = "0x127C740", VA = "0x127C740")]
		public CutterST(Core Core)
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x12803F4", Offset = "0x12803F4", VA = "0x12803F4", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x128150C", Offset = "0x128150C", VA = "0x128150C", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x1281558", Offset = "0x1281558", VA = "0x1281558", Slot = "8")]
		protected virtual bool Cut(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x12810A0", Offset = "0x12810A0", VA = "0x12810A0")]
		protected List<ExploderMesh> CutSingleMesh(MeshObject mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x2000218")]
	internal class CutterWorker
	{
		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly HashSet<MeshObject> newFragments;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly HashSet<MeshObject> meshToRemove;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly HashSet<MeshObject> meshSet;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly MeshCutter cutter;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly CuttingPlane cuttingPlane;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Core core;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool running;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int cutAttempt;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ManualResetEvent mre;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Thread thread;

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x128018C", Offset = "0x128018C", VA = "0x128018C")]
		public CutterWorker(Core core, CuttingPlane cuttingPlane)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x128046C", Offset = "0x128046C", VA = "0x128046C")]
		public void Init()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x128142C", Offset = "0x128142C", VA = "0x128142C")]
		public void AddMesh(MeshObject meshObject)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x12814C4", Offset = "0x12814C4", VA = "0x12814C4")]
		public void Run()
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x1281DD8", Offset = "0x1281DD8", VA = "0x1281DD8")]
		private void ThreadRun()
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x12806C4", Offset = "0x12806C4", VA = "0x12806C4")]
		public bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x12827CC", Offset = "0x12827CC", VA = "0x12827CC")]
		public HashSet<MeshObject> GetResults()
		{
			return null;
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x128054C", Offset = "0x128054C", VA = "0x128054C")]
		public void Terminate()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x1281F54", Offset = "0x1281F54", VA = "0x1281F54")]
		private void Cut()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public enum TaskType
	{
		[Token(Token = "0x4000BE1")]
		None,
		[Token(Token = "0x4000BE2")]
		Preprocess,
		[Token(Token = "0x4000BE3")]
		ProcessCutter,
		[Token(Token = "0x4000BE4")]
		IsolateMeshIslands,
		[Token(Token = "0x4000BE5")]
		PostprocessExplode,
		[Token(Token = "0x4000BE6")]
		PostprocessCrack,
		[Token(Token = "0x4000BE7")]
		TaskMax
	}
	[Token(Token = "0x200021A")]
	internal abstract class ExploderTask
	{
		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Core core;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8867E0", Offset = "0x8867E0")]
		private Stopwatch <Watch>k__BackingField;

		[Token(Token = "0x170000E4")]
		public abstract TaskType Type
		{
			[Token(Token = "0x60009AB")]
			get;
		}

		[Token(Token = "0x170000E5")]
		public Stopwatch Watch
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x12AB6FC", Offset = "0x12AB6FC", VA = "0x12AB6FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892800", Offset = "0x892800")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x12AB704", Offset = "0x12AB704", VA = "0x12AB704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892810", Offset = "0x892810")]
			private set
			{
			}
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x12AB70C", Offset = "0x12AB70C", VA = "0x12AB70C")]
		protected ExploderTask(Core Core)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x12AB790", Offset = "0x12AB790", VA = "0x12AB790", Slot = "5")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x12AB794", Offset = "0x12AB794", VA = "0x12AB794", Slot = "6")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x60009B1")]
		public abstract bool Run(float frameBudget);
	}
	[Token(Token = "0x200021B")]
	internal class IsolateMeshIslands : ExploderTask
	{
		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<MeshObject> islands;

		[Token(Token = "0x170000E6")]
		public override TaskType Type
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x179259C", Offset = "0x179259C", VA = "0x179259C", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x1792510", Offset = "0x1792510", VA = "0x1792510")]
		public IsolateMeshIslands(Core Core)
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x17925A4", Offset = "0x17925A4", VA = "0x17925A4", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x179266C", Offset = "0x179266C", VA = "0x179266C", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200021C")]
	internal abstract class Postprocess : ExploderTask
	{
		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x1017D34", Offset = "0x1017D34", VA = "0x1017D34")]
		protected Postprocess(Core Core)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x1017D3C", Offset = "0x1017D3C", VA = "0x1017D3C", Slot = "6")]
		public override void Init()
		{
		}
	}
	[Token(Token = "0x200021D")]
	internal class PostprocessCrack : Postprocess
	{
		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CrackedObject crackedObject;

		[Token(Token = "0x170000E7")]
		public override TaskType Type
		{
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0x1017DF8", Offset = "0x1017DF8", VA = "0x1017DF8", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x1017DF0", Offset = "0x1017DF0", VA = "0x1017DF0")]
		public PostprocessCrack(Core Core)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x1017E00", Offset = "0x1017E00", VA = "0x1017E00", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x1018004", Offset = "0x1018004", VA = "0x1018004", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200021E")]
	internal class PostprocessExplode : Postprocess
	{
		[Token(Token = "0x170000E8")]
		public override TaskType Type
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0x1018628", Offset = "0x1018628", VA = "0x1018628", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x1018620", Offset = "0x1018620", VA = "0x1018620")]
		public PostprocessExplode(Core Core)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x1018630", Offset = "0x1018630", VA = "0x1018630", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x101877C", Offset = "0x101877C", VA = "0x101877C", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200021F")]
	internal class Preprocess : ExploderTask
	{
		[Token(Token = "0x2000220")]
		private struct MeshData
		{
			[Token(Token = "0x4000BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh sharedMesh;

			[Token(Token = "0x4000BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material sharedMaterial;

			[Token(Token = "0x4000BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x4000BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject parentObject;

			[Token(Token = "0x4000BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject skinnedBakeOriginal;

			[Token(Token = "0x4000BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 centroid;
		}

		[Token(Token = "0x170000E9")]
		public override TaskType Type
		{
			[Token(Token = "0x60009C1")]
			[Address(RVA = "0x101947C", Offset = "0x101947C", VA = "0x101947C", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x10193E4", Offset = "0x10193E4", VA = "0x10193E4")]
		public Preprocess(Core Core)
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x1019484", Offset = "0x1019484", VA = "0x1019484", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x10194EC", Offset = "0x10194EC", VA = "0x10194EC", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x10197BC", Offset = "0x10197BC", VA = "0x10197BC")]
		private List<MeshObject> GetMeshList()
		{
			return null;
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x101AB3C", Offset = "0x101AB3C", VA = "0x101AB3C")]
		private List<MeshData> GetMeshData(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x101B184", Offset = "0x101B184", VA = "0x101B184")]
		private float GetDistanceRatio(float distance, float radius)
		{
			return default(float);
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x101A9D8", Offset = "0x101A9D8", VA = "0x101A9D8")]
		private bool IsInRadius(GameObject o)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000221")]
	public class Example : MonoBehaviour
	{
		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderObject Exploder;

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x12379F8", Offset = "0x12379F8", VA = "0x12379F8")]
		public void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x1237A94", Offset = "0x1237A94", VA = "0x1237A94")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x1237A98", Offset = "0x1237A98", VA = "0x1237A98")]
		private void CrackAndExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x1237B34", Offset = "0x1237B34", VA = "0x1237B34")]
		private void OnCracked(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x1237BC8", Offset = "0x1237BC8", VA = "0x1237BC8")]
		public Example()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class Explodable : MonoBehaviour
	{
		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x1237EC8", Offset = "0x1237EC8", VA = "0x1237EC8")]
		public Explodable()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class ExploderObject : MonoBehaviour
	{
		[Token(Token = "0x2000224")]
		public enum ThreadOptions
		{
			[Token(Token = "0x4000C0D")]
			WorkerThread1x,
			[Token(Token = "0x4000C0E")]
			WorkerThread2x,
			[Token(Token = "0x4000C0F")]
			WorkerThread3x,
			[Token(Token = "0x4000C10")]
			Disabled
		}

		[Token(Token = "0x2000225")]
		public enum CuttingStyleOption
		{
			[Token(Token = "0x4000C12")]
			Random,
			[Token(Token = "0x4000C13")]
			RectangularRandom,
			[Token(Token = "0x4000C14")]
			RectangularRegular
		}

		[Token(Token = "0x2000226")]
		public delegate void OnExplosion(float timeMS, ExplosionState state);

		[Token(Token = "0x2000227")]
		public enum ExplosionState
		{
			[Token(Token = "0x4000C16")]
			ExplosionStarted,
			[Token(Token = "0x4000C17")]
			ExplosionFinished,
			[Token(Token = "0x4000C18")]
			ObjectCracked
		}

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Tag;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DontUseTag;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Radius;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 CubeRadius;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool UseCubeRadius;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 ForceVector;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool UseForceVector;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Force;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float FrameBudget;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int TargetFragments;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ThreadOptions ThreadOption;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool ExplodeSelf;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool DisableRadiusScan;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool HideSelf;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool DestroyOriginalObject;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool UniformFragmentDistribution;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool SplitMeshIslands;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool DisableTriangulation;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int FragmentPoolSize;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool Use2DCollision;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CuttingStyleOption CuttingStyle;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FragmentDeactivation FragmentDeactivation;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FragmentSFX FragmentSFX;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FragmentOption FragmentOptions;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Core core;

		[Token(Token = "0x170000EA")]
		public int ProcessingFrames
		{
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0x12AA6B8", Offset = "0x12AA6B8", VA = "0x12AA6B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x12AA20C", Offset = "0x12AA20C", VA = "0x12AA20C")]
		public void ExplodeRadius()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x12AA214", Offset = "0x12AA214", VA = "0x12AA214")]
		public void ExplodeRadius(OnExplosion callback)
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x12AA244", Offset = "0x12AA244", VA = "0x12AA244")]
		public void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x12AA24C", Offset = "0x12AA24C", VA = "0x12AA24C")]
		public void ExplodeObject(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x12AA31C", Offset = "0x12AA31C", VA = "0x12AA31C")]
		public void ExplodeObjects(params GameObject[] objects)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x12AA328", Offset = "0x12AA328", VA = "0x12AA328")]
		public void ExplodeObjects(OnExplosion callback, params GameObject[] objects)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x12AA358", Offset = "0x12AA358", VA = "0x12AA358")]
		public void CrackRadius()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x12AA360", Offset = "0x12AA360", VA = "0x12AA360")]
		public void CrackRadius(OnExplosion callback)
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x12AA390", Offset = "0x12AA390", VA = "0x12AA390")]
		public void CrackObject(GameObject obj)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x12AA398", Offset = "0x12AA398", VA = "0x12AA398")]
		public void CrackObject(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x12AA468", Offset = "0x12AA468", VA = "0x12AA468")]
		public bool CanCrack()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x12AA618", Offset = "0x12AA618", VA = "0x12AA618")]
		public bool IsCracked(GameObject gm)
		{
			return default(bool);
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x12AA634", Offset = "0x12AA634", VA = "0x12AA634")]
		public void ExplodeCracked(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x12AA650", Offset = "0x12AA650", VA = "0x12AA650")]
		public void ExplodeCracked(GameObject obj)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x12AA670", Offset = "0x12AA670", VA = "0x12AA670")]
		public void ExplodeCracked(OnExplosion callback)
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x12AA694", Offset = "0x12AA694", VA = "0x12AA694")]
		public void ExplodeCracked()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x12AA6D4", Offset = "0x12AA6D4", VA = "0x12AA6D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x12AA760", Offset = "0x12AA760", VA = "0x12AA760")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x12AAA58", Offset = "0x12AAA58", VA = "0x12AAA58")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x12AAB68", Offset = "0x12AAB68", VA = "0x12AAB68")]
		public ExploderObject()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class ExploderOption : MonoBehaviour
	{
		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Plane2D;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color CrossSectionVertexColor;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector4 CrossSectionUV;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool SplitMeshIslands;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool UseLocalForce;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Force;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material FragmentMaterial;

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x12AADC4", Offset = "0x12AADC4", VA = "0x12AADC4")]
		public void DuplicateSettings(ExploderOption options)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x12AAE10", Offset = "0x12AAE10", VA = "0x12AAE10")]
		public ExploderOption()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class Fragment : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Cracked;

		[NonSerialized]
		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool Visible;

		[NonSerialized]
		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool IsActive;

		[NonSerialized]
		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer meshRenderer;

		[NonSerialized]
		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshCollider meshCollider;

		[NonSerialized]
		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter meshFilter;

		[NonSerialized]
		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoxCollider boxCollider;

		[NonSerialized]
		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PolygonCollider2D polygonCollider2D;

		[NonSerialized]
		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource audioSource;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem[] particleSystems;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject particleChild;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody2D rigid2D;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigidBody;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ExploderParams settings;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 originalScale;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float visibilityCheckTimer;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float deactivateTimer;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float emmitersTimeout;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool stopEmitOnTimeout;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool collided;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioSource activePlayback;

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x12B0F60", Offset = "0x12B0F60", VA = "0x12B0F60")]
		public bool IsSleeping()
		{
			return default(bool);
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x12B0FF8", Offset = "0x12B0FF8", VA = "0x12B0FF8")]
		public void Sleep()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x12B1090", Offset = "0x12B1090", VA = "0x12B1090")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x12B1128", Offset = "0x12B1128", VA = "0x12B1128")]
		public void SetConstraints(RigidbodyConstraints constraints)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x12B11C8", Offset = "0x12B11C8", VA = "0x12B11C8")]
		public void InitSFX(FragmentSFX sfx)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x12B147C", Offset = "0x12B147C", VA = "0x12B147C")]
		private void OnCollisionEnter()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x12B160C", Offset = "0x12B160C", VA = "0x12B160C")]
		public void DisableColliders(bool disable, bool meshColliders, bool physics2d)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x12B1870", Offset = "0x12B1870", VA = "0x12B1870")]
		public void ApplyExplosion(ExploderTransform meshTransform, Vector3 centroid, float force, GameObject original, ExploderParams set)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x12B1BFC", Offset = "0x12B1BFC", VA = "0x12B1BFC")]
		private void ApplyExplosion2D(ExploderTransform meshTransform, Vector3 centroid, float force, GameObject original)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x12B1E70", Offset = "0x12B1E70", VA = "0x12B1E70")]
		public void RefreshComponentsCache()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x12B1FD0", Offset = "0x12B1FD0", VA = "0x12B1FD0")]
		public void Explode(ExploderParams parameters)
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x12B20E4", Offset = "0x12B20E4", VA = "0x12B20E4")]
		public void Emit(bool centerToBound)
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x12B2264", Offset = "0x12B2264", VA = "0x12B2264")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x12B2434", Offset = "0x12B2434", VA = "0x12B2434")]
		public void AssignMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x12B2518", Offset = "0x12B2518", VA = "0x12B2518")]
		private void Start()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x12B2544", Offset = "0x12B2544", VA = "0x12B2544")]
		private void Update()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x12B2A4C", Offset = "0x12B2A4C", VA = "0x12B2A4C")]
		public Fragment()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public enum DeactivateOptions
	{
		[Token(Token = "0x4000C36")]
		Never,
		[Token(Token = "0x4000C37")]
		OutsideOfCamera,
		[Token(Token = "0x4000C38")]
		Timeout
	}
	[Token(Token = "0x200022B")]
	public enum FadeoutOptions
	{
		[Token(Token = "0x4000C3A")]
		None,
		[Token(Token = "0x4000C3B")]
		FadeoutAlpha,
		[Token(Token = "0x4000C3C")]
		ScaleDown
	}
	[Serializable]
	[Token(Token = "0x200022C")]
	public class FragmentDeactivation
	{
		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DeactivateOptions DeactivateOptions;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float DeactivateTimeout;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FadeoutOptions FadeoutOptions;

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x12AB0C4", Offset = "0x12AB0C4", VA = "0x12AB0C4")]
		public FragmentDeactivation Clone()
		{
			return null;
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x12AAD30", Offset = "0x12AAD30", VA = "0x12AAD30")]
		public FragmentDeactivation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022D")]
	public class FragmentOption
	{
		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject FragmentPrefab;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool FreezePositionX;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool FreezePositionY;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool FreezePositionZ;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool FreezeRotationX;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool FreezeRotationY;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool FreezeRotationZ;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Layer;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ExplodeFragments;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxVelocity;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool InheritParentPhysicsProperty;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Mass;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool UseGravity;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool DisableColliders;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool MeshColliders;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float AngularVelocity;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxAngularVelocity;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 AngularVelocityVector;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool RandomAngularVelocityVector;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material FragmentMaterial;

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x12AAFB8", Offset = "0x12AAFB8", VA = "0x12AAFB8")]
		public FragmentOption Clone()
		{
			return null;
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x12AAD50", Offset = "0x12AAD50", VA = "0x12AAD50")]
		public FragmentOption()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class FragmentPool : MonoBehaviour
	{
		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FragmentPool instance;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Fragment[] pool;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool meshColliders;

		[Token(Token = "0x170000EB")]
		public static FragmentPool Instance
		{
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0x12AA49C", Offset = "0x12AA49C", VA = "0x12AA49C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public int PoolSize
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x12B2C50", Offset = "0x12B2C50", VA = "0x12B2C50")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000ED")]
		public Fragment[] Pool
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x12B2C6C", Offset = "0x12B2C6C", VA = "0x12B2C6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x12B2A54", Offset = "0x12B2A54", VA = "0x12B2A54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x12B2AF0", Offset = "0x12B2AF0", VA = "0x12B2AF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x12B2C74", Offset = "0x12B2C74", VA = "0x12B2C74")]
		public List<Fragment> GetAvailableFragments(int size)
		{
			return null;
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x12AA5A8", Offset = "0x12AA5A8", VA = "0x12AA5A8")]
		public int GetAvailableCrackFragmentsCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x12B3028", Offset = "0x12B3028", VA = "0x12B3028")]
		public void Reset(ExploderParams parameters)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x12B3098", Offset = "0x12B3098", VA = "0x12B3098")]
		public void Allocate(int poolSize, bool useMeshColliders, bool use2dCollision)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x12B3A3C", Offset = "0x12B3A3C", VA = "0x12B3A3C")]
		public void ResetTransform()
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x12B3ABC", Offset = "0x12B3ABC", VA = "0x12B3ABC")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x12B3B24", Offset = "0x12B3B24", VA = "0x12B3B24")]
		public void Sleep()
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x12B2B48", Offset = "0x12B2B48", VA = "0x12B2B48")]
		public void DestroyFragments()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x12B3B8C", Offset = "0x12B3B8C", VA = "0x12B3B8C")]
		public void DeactivateFragments()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x12B35E8", Offset = "0x12B35E8", VA = "0x12B35E8")]
		public void SetExplodableFragments(bool explodable, bool dontUseTag)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x12B37E0", Offset = "0x12B37E0", VA = "0x12B37E0")]
		public void SetFragmentPhysicsOptions(FragmentOption options, bool physics2d)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x12B3990", Offset = "0x12B3990", VA = "0x12B3990")]
		public void SetSFXOptions(FragmentSFX sfx)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x12B3C60", Offset = "0x12B3C60", VA = "0x12B3C60")]
		public List<Fragment> GetActiveFragments()
		{
			return null;
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x12B3D74", Offset = "0x12B3D74", VA = "0x12B3D74")]
		public FragmentPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022F")]
	public class FragmentSFX
	{
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject FragmentEmitter;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ChanceToPlay;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool PlayOnlyOnce;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool MixMultipleSounds;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int EmitersMax;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float ParticleTimeout;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x12AB148", Offset = "0x12AB148", VA = "0x12AB148")]
		public FragmentSFX Clone()
		{
			return null;
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x12AAD40", Offset = "0x12AAD40", VA = "0x12AAD40")]
		public FragmentSFX()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public static class Profiler
	{
		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, Stopwatch> timeSegments;

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x101BF14", Offset = "0x101BF14", VA = "0x101BF14")]
		public static void Start(string key)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x101C064", Offset = "0x101C064", VA = "0x101C064")]
		public static void End(string key)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x101C0FC", Offset = "0x101C0FC", VA = "0x101C0FC")]
		public static string[] PrintResults()
		{
			return null;
		}
	}
	[Token(Token = "0x2000231")]
	public class ExploderSlowMotion : MonoBehaviour
	{
		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float slowMotionTime;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExploderObject Exploder;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float slowMotionSpeed;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool slowmo;

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x12AB510", Offset = "0x12AB510", VA = "0x12AB510")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x12AB564", Offset = "0x12AB564", VA = "0x12AB564")]
		public void EnableSlowMotion(bool status)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x12AB670", Offset = "0x12AB670", VA = "0x12AB670")]
		public void Update()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x12AB6E8", Offset = "0x12AB6E8", VA = "0x12AB6E8")]
		public ExploderSlowMotion()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public static class ExploderUtils
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x12AB9BC", Offset = "0x12AB9BC", VA = "0x12AB9BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x892820", Offset = "0x892820")]
		public static void Assert(bool condition, string message)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x12ABA74", Offset = "0x12ABA74", VA = "0x12ABA74")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x892858", Offset = "0x892858")]
		public static void Warning(bool condition, string message)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x12ABB24", Offset = "0x12ABB24", VA = "0x12ABB24")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x892890", Offset = "0x892890")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x12AA880", Offset = "0x12AA880", VA = "0x12AA880")]
		public static Vector3 GetCentroid(GameObject obj)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x12ABB88", Offset = "0x12ABB88", VA = "0x12ABB88")]
		public static void SetVisible(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x12ABC80", Offset = "0x12ABC80", VA = "0x12ABC80")]
		public static void ClearLog()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x12ABC84", Offset = "0x12ABC84", VA = "0x12ABC84")]
		public static bool IsActive(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x12ABD10", Offset = "0x12ABD10", VA = "0x12ABD10")]
		public static void SetActive(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x12ABDAC", Offset = "0x12ABDAC", VA = "0x12ABDAC")]
		public static void SetActiveRecursively(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x12ABEAC", Offset = "0x12ABEAC", VA = "0x12ABEAC")]
		public static void EnableCollider(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x12ABFA4", Offset = "0x12ABFA4", VA = "0x12ABFA4")]
		public static bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x12AC094", Offset = "0x12AC094", VA = "0x12AC094")]
		public static void CopyAudioSource(AudioSource src, AudioSource dst)
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class HUDFPS : MonoBehaviour
	{
		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float updateInterval;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float accum;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int frames;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeleft;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text text;

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x12B65CC", Offset = "0x12B65CC", VA = "0x12B65CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x12B66CC", Offset = "0x12B66CC", VA = "0x12B66CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x12B685C", Offset = "0x12B685C", VA = "0x12B685C")]
		public HUDFPS()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isQuitting;

		[Token(Token = "0x170000EE")]
		public static T Instance
		{
			[Token(Token = "0x6000A2B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A2C")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000A2D")]
		public Singleton()
		{
		}
	}
}
namespace Exploder.Utils
{
	[Token(Token = "0x2000235")]
	public static class Compatibility
	{
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x127B2DC", Offset = "0x127B2DC", VA = "0x127B2DC")]
		public static void SetVisible(GameObject obj, bool status, bool includeInactive)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x127B44C", Offset = "0x127B44C", VA = "0x127B44C")]
		public static bool IsActive(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x127B4D8", Offset = "0x127B4D8", VA = "0x127B4D8")]
		public static void SetActive(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x127B574", Offset = "0x127B574", VA = "0x127B574")]
		public static void SetActiveRecursively(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x127B674", Offset = "0x127B674", VA = "0x127B674")]
		public static void EnableCollider(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x127B76C", Offset = "0x127B76C", VA = "0x127B76C")]
		public static void Destroy(UnityEngine.Object obj, bool allowDestroyingAssets)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x127B81C", Offset = "0x127B81C", VA = "0x127B81C")]
		public static void SetCursorVisible(bool status)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x127B828", Offset = "0x127B828", VA = "0x127B828")]
		public static void LockCursor(bool status)
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x127B83C", Offset = "0x127B83C", VA = "0x127B83C")]
		public static bool IsCursorLocked()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000236")]
	public class ExploderSingleton : MonoBehaviour
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8867F0", Offset = "0x8867F0")]
		public static ExploderObject ExploderInstance;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ExploderObject Instance;

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x12AB47C", Offset = "0x12AB47C", VA = "0x12AB47C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x12AB508", Offset = "0x12AB508", VA = "0x12AB508")]
		public ExploderSingleton()
		{
		}
	}
	[Token(Token = "0x2000237")]
	internal class Hull2D
	{
		[Serializable]
		[Token(Token = "0x2000238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88096C", Offset = "0x88096C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Vector2> <>9__0_0;

			[Token(Token = "0x6000A40")]
			[Address(RVA = "0xC0B128", Offset = "0xC0B128", VA = "0xC0B128")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A41")]
			[Address(RVA = "0xC0B130", Offset = "0xC0B130", VA = "0xC0B130")]
			internal int <Sort>b__0_0(Vector2 value0, Vector2 value1)
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x178DE44", Offset = "0x178DE44", VA = "0x178DE44")]
		public static void Sort(Vector2[] array)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x178DF5C", Offset = "0x178DF5C", VA = "0x178DF5C")]
		public static void DumpArray(Vector2[] array)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x178E068", Offset = "0x178E068", VA = "0x178E068")]
		public static Vector2[] ChainHull2D(Vector2[] Pnts)
		{
			return null;
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x178E2F8", Offset = "0x178E2F8", VA = "0x178E2F8")]
		private static float Hull2DCross(ref Vector2 O, ref Vector2 A, ref Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x178E320", Offset = "0x178E320", VA = "0x178E320")]
		public Hull2D()
		{
		}
	}
}
namespace Exploder.Examples
{
	[Token(Token = "0x2000239")]
	public class ExplodeAllObjects : MonoBehaviour
	{
		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExploderObject Exploder;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x1237ED0", Offset = "0x1237ED0", VA = "0x1237ED0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x1237F48", Offset = "0x1237F48", VA = "0x1237F48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x1237F94", Offset = "0x1237F94", VA = "0x1237F94")]
		private void ExplodeObject(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x1238028", Offset = "0x1238028", VA = "0x1238028")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x12380D8", Offset = "0x12380D8", VA = "0x12380D8")]
		public ExplodeAllObjects()
		{
		}
	}
}
namespace Exploder.Demo
{
	[Token(Token = "0x200023A")]
	public class DemoClickExplode : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200023B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88097C", Offset = "0x88097C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Explodable, bool> <>9__3_0;

			[Token(Token = "0x4000C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Explodable, GameObject> <>9__3_1;

			[Token(Token = "0x6000A51")]
			[Address(RVA = "0xC06A18", Offset = "0xC06A18", VA = "0xC06A18")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A52")]
			[Address(RVA = "0xC06A20", Offset = "0xC06A20", VA = "0xC06A20")]
			internal bool <Start>b__3_0(Explodable ex)
			{
				return default(bool);
			}

			[Token(Token = "0x6000A53")]
			[Address(RVA = "0xC06A84", Offset = "0xC06A84", VA = "0xC06A84")]
			internal GameObject <Start>b__3_1(Explodable ex)
			{
				return null;
			}
		}

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExploderObject Exploder;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera Camera;

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x122BB18", Offset = "0x122BB18", VA = "0x122BB18")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x122BECC", Offset = "0x122BECC", VA = "0x122BECC")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x122BFD4", Offset = "0x122BFD4", VA = "0x122BFD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x122C130", Offset = "0x122C130", VA = "0x122C130")]
		private void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x122C1D0", Offset = "0x122C1D0", VA = "0x122C1D0")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x122C1D4", Offset = "0x122C1D4", VA = "0x122C1D4")]
		private void OnCracked(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x122C1CC", Offset = "0x122C1CC", VA = "0x122C1CC")]
		private void ExplodeAfterCrack(GameObject obj)
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x122C1D8", Offset = "0x122C1D8", VA = "0x122C1D8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x122C3CC", Offset = "0x122C3CC", VA = "0x122C3CC")]
		public DemoClickExplode()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class QuickStartDemo : MonoBehaviour
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject sphereObject;

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x101F064", Offset = "0x101F064", VA = "0x101F064")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x101F0B8", Offset = "0x101F0B8", VA = "0x101F0B8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x101F244", Offset = "0x101F244", VA = "0x101F244")]
		public QuickStartDemo()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class CursorLocking : MonoBehaviour
	{
		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool LockCursor;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode LockKey;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode UnlockKey;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsLocked;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CursorLocking instance;

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x127FE98", Offset = "0x127FE98", VA = "0x127FE98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x127FEE8", Offset = "0x127FEE8", VA = "0x127FEE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x127FFA8", Offset = "0x127FFA8", VA = "0x127FFA8")]
		public static void Lock()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x128001C", Offset = "0x128001C", VA = "0x128001C")]
		public static void Unlock()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x128008C", Offset = "0x128008C", VA = "0x128008C")]
		public CursorLocking()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class ExploderMouseLook : MonoBehaviour
	{
		[Token(Token = "0x200023F")]
		public enum RotationAxes
		{
			[Token(Token = "0x4000C89")]
			MouseXAndY,
			[Token(Token = "0x4000C8A")]
			MouseX,
			[Token(Token = "0x4000C8B")]
			MouseY
		}

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RotationAxes axes;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sensitivityX;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensitivityY;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minimumX;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maximumX;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minimumY;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maximumY;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float rotationY;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float kickTimeout;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float kickBackRot;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool kickBack;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationTarget;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Camera mainCamera;

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x12A9D98", Offset = "0x12A9D98", VA = "0x12A9D98")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x12AA0C4", Offset = "0x12AA0C4", VA = "0x12AA0C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x12AA18C", Offset = "0x12AA18C", VA = "0x12AA18C")]
		public void Kick()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x12AA1EC", Offset = "0x12AA1EC", VA = "0x12AA1EC")]
		public ExploderMouseLook()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class GrenadeController : MonoBehaviour
	{
		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip Throw;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource Source;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrenadeObject Grenade;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera MainCamera;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float explodeTimer;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float throwTimer;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool exploding;

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x12B6034", Offset = "0x12B6034", VA = "0x12B6034")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x12B6048", Offset = "0x12B6048", VA = "0x12B6048")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x12B63CC", Offset = "0x12B63CC", VA = "0x12B63CC")]
		public GrenadeController()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class GrenadeObject : MonoBehaviour
	{
		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip ExplosionSound;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource SourceExplosion;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Light Flash;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ExplodeFinished;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool Impact;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool throwing;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float explodeTimeoutMax;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool explosionInProgress;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExploderObject exploder;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int flashing;

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x12B6268", Offset = "0x12B6268", VA = "0x12B6268")]
		public void Throw()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x12B6288", Offset = "0x12B6288", VA = "0x12B6288")]
		public void Explode()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x12B63D4", Offset = "0x12B63D4", VA = "0x12B63D4")]
		private void OnExplode(float timeMS, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x12B64FC", Offset = "0x12B64FC", VA = "0x12B64FC")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x12B651C", Offset = "0x12B651C", VA = "0x12B651C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x12B65C4", Offset = "0x12B65C4", VA = "0x12B65C4")]
		public GrenadeObject()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class MoveController : MonoBehaviour
	{
		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float jumpSpeed;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float gravity;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 moveDirection;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterController controller;

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x13A4A8C", Offset = "0x13A4A8C", VA = "0x13A4A8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x13A4AE0", Offset = "0x13A4AE0", VA = "0x13A4AE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x13A4C38", Offset = "0x13A4C38", VA = "0x13A4C38")]
		public MoveController()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class PanelChairBomb : UseObject
	{
		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExploderObject Exploder;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject ChairBomb;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource SourceExplosion;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip ExplosionSound;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Light Flash;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int flashing;

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x1112898", Offset = "0x1112898", VA = "0x1112898", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x11129C4", Offset = "0x11129C4", VA = "0x11129C4")]
		private void OnExplode(float timeMS, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x1112ABC", Offset = "0x1112ABC", VA = "0x1112ABC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x1112B1C", Offset = "0x1112B1C", VA = "0x1112B1C")]
		public PanelChairBomb()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class PanelResetScene : UseObject
	{
		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> objectList;

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x1112EB0", Offset = "0x1112EB0", VA = "0x1112EB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x1112F54", Offset = "0x1112F54", VA = "0x1112F54", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x111308C", Offset = "0x111308C", VA = "0x111308C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x11130D0", Offset = "0x11130D0", VA = "0x11130D0")]
		public PanelResetScene()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class PanelThrowObject : UseObject
	{
		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject ThrowBox;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] ThrowObjects;

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x11130D8", Offset = "0x11130D8", VA = "0x11130D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x11130DC", Offset = "0x11130DC", VA = "0x11130DC", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x1113424", Offset = "0x1113424", VA = "0x1113424")]
		public PanelThrowObject()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class RPGController : MonoBehaviour
	{
		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderObject exploder;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rocket Rocket;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float nextShotTimeout;

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x101F24C", Offset = "0x101F24C", VA = "0x101F24C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x101F2D8", Offset = "0x101F2D8", VA = "0x101F2D8")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x101F3A0", Offset = "0x101F3A0", VA = "0x101F3A0")]
		private void OnRocketHit(Vector3 position)
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x101F49C", Offset = "0x101F49C", VA = "0x101F49C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x101F86C", Offset = "0x101F86C", VA = "0x101F86C")]
		public RPGController()
		{
		}
	}
	[Token(Token = "0x2000247")]
	internal class RobotScript : MonoBehaviour
	{
		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float velocity;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float angle;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 center;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPos;

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x1023A10", Offset = "0x1023A10", VA = "0x1023A10")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x1023A58", Offset = "0x1023A58", VA = "0x1023A58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x1023AB4", Offset = "0x1023AB4", VA = "0x1023AB4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x1023BDC", Offset = "0x1023BDC", VA = "0x1023BDC")]
		public RobotScript()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class Rocket : MonoBehaviour
	{
		[Token(Token = "0x2000249")]
		public delegate void OnHit(Vector3 pos);

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip GunShot;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Explosion;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource Source;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject RocketStatic;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light RocketLight;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RocketVelocity;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnHit HitCallback;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Ray direction;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool launch;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float launchTimeout;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform parent;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 shotPos;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float targetDistance;

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x1023BF0", Offset = "0x1023BF0", VA = "0x1023BF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x101F2F0", Offset = "0x101F2F0", VA = "0x101F2F0")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x101F470", Offset = "0x101F470", VA = "0x101F470")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x101F6B8", Offset = "0x101F6B8", VA = "0x101F6B8")]
		public void Launch(Ray ray)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x1023C4C", Offset = "0x1023C4C", VA = "0x1023C4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x1024000", Offset = "0x1024000", VA = "0x1024000")]
		public Rocket()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class ShotgunController : MonoBehaviour
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip GunShot;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Reload;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource Source;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light Flash;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animation ReloadAnim;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationClip HideAnim;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject MuzzleFlash;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int flashing;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float reloadTimeout;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float nextShotTimeout;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private TargetType lastTarget;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ExploderObject exploder;

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xE0987C", Offset = "0xE0987C", VA = "0xE0987C")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xE0988C", Offset = "0xE0988C", VA = "0xE0988C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xE09CB0", Offset = "0xE09CB0", VA = "0xE09CB0")]
		public ShotgunController()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public enum TargetType
	{
		[Token(Token = "0x4000CCF")]
		DestroyableObject,
		[Token(Token = "0x4000CD0")]
		UseObject,
		[Token(Token = "0x4000CD1")]
		Default,
		[Token(Token = "0x4000CD2")]
		None
	}
	[Token(Token = "0x200024C")]
	public class TargetManager : MonoBehaviour
	{
		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TargetManager instance;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject TargetObject;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetType TargetType;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 TargetPosition;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image CrosshairGun;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image CrosshairHand;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text PanelText;

		[Token(Token = "0x170000EF")]
		public static TargetManager Instance
		{
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0xE1B5B4", Offset = "0xE1B5B4", VA = "0xE1B5B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xE1B600", Offset = "0xE1B600", VA = "0xE1B600")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xE1B650", Offset = "0xE1B650", VA = "0xE1B650")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xE1B6C0", Offset = "0xE1B6C0", VA = "0xE1B6C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xE1BD08", Offset = "0xE1BD08", VA = "0xE1BD08")]
		private bool IsDestroyableObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xE1BE04", Offset = "0xE1BE04", VA = "0xE1BE04")]
		private bool IsUseObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xE1BF14", Offset = "0xE1BF14", VA = "0xE1BF14")]
		public TargetManager()
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xE1BF1C", Offset = "0xE1BF1C", VA = "0xE1BF1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8928C8", Offset = "0x8928C8")]
		private int <Update>b__12_0(RaycastHit a, RaycastHit b)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200024D")]
	public class ThrowObject : MonoBehaviour
	{
		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float destroyTimer;

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xFA1960", Offset = "0xFA1960", VA = "0xFA1960")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xFA196C", Offset = "0xFA196C", VA = "0xFA196C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xFA1A18", Offset = "0xFA1A18", VA = "0xFA1A18")]
		public ThrowObject()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public abstract class UseObject : MonoBehaviour
	{
		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UseRadius;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string HelperText;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip UseClip;

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x1875484", Offset = "0x1875484", VA = "0x1875484", Slot = "4")]
		public virtual void Use()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x1875570", Offset = "0x1875570", VA = "0x1875570")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x18755C0", Offset = "0x18755C0", VA = "0x18755C0")]
		protected UseObject()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class WeaponManager : MonoBehaviour
	{
		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Shotgun;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject RPG;

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x1168578", Offset = "0x1168578", VA = "0x1168578")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x1168674", Offset = "0x1168674", VA = "0x1168674")]
		public WeaponManager()
		{
		}
	}
}
namespace Wilberforce.VAO
{
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x88098C", Offset = "0x88098C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x88098C", Offset = "0x88098C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x88098C", Offset = "0x88098C")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x88098C", Offset = "0x88098C")]
	public class VAOEffect : VAOEffectCommandBuffer
	{
		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x1875658", Offset = "0x1875658", VA = "0x1875658")]
		[AttributeAttribute(Name = "ImageEffectOpaque", RVA = "0x8928D8", Offset = "0x8928D8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x18764B4", Offset = "0x18764B4", VA = "0x18764B4")]
		public VAOEffect()
		{
		}
	}
	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x880A44", Offset = "0x880A44")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x880A44", Offset = "0x880A44")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x880A44", Offset = "0x880A44")]
	public class VAOEffectCommandBuffer : MonoBehaviour
	{
		[Token(Token = "0x2000252")]
		public enum EffectMode
		{
			[Token(Token = "0x4000D78")]
			Simple = 1,
			[Token(Token = "0x4000D79")]
			ColorTint,
			[Token(Token = "0x4000D7A")]
			ColorBleed
		}

		[Token(Token = "0x2000253")]
		public enum LuminanceModeType
		{
			[Token(Token = "0x4000D7C")]
			Luma = 1,
			[Token(Token = "0x4000D7D")]
			HSVValue
		}

		[Token(Token = "0x2000254")]
		public enum GiBlurAmmount
		{
			[Token(Token = "0x4000D7F")]
			Auto = 1,
			[Token(Token = "0x4000D80")]
			Less,
			[Token(Token = "0x4000D81")]
			More
		}

		[Token(Token = "0x2000255")]
		public enum CullingPrepassModeType
		{
			[Token(Token = "0x4000D83")]
			Off,
			[Token(Token = "0x4000D84")]
			Greedy,
			[Token(Token = "0x4000D85")]
			Careful
		}

		[Token(Token = "0x2000256")]
		public enum AdaptiveSamplingType
		{
			[Token(Token = "0x4000D87")]
			Disabled,
			[Token(Token = "0x4000D88")]
			EnabledAutomatic,
			[Token(Token = "0x4000D89")]
			EnabledManual
		}

		[Token(Token = "0x2000257")]
		public enum BlurModeType
		{
			[Token(Token = "0x4000D8B")]
			Disabled,
			[Token(Token = "0x4000D8C")]
			Basic,
			[Token(Token = "0x4000D8D")]
			Enhanced
		}

		[Token(Token = "0x2000258")]
		public enum BlurQualityType
		{
			[Token(Token = "0x4000D8F")]
			Fast,
			[Token(Token = "0x4000D90")]
			Precise
		}

		[Token(Token = "0x2000259")]
		public enum ColorBleedSelfOcclusionFixLevelType
		{
			[Token(Token = "0x4000D92")]
			Off,
			[Token(Token = "0x4000D93")]
			Soft,
			[Token(Token = "0x4000D94")]
			Hard
		}

		[Token(Token = "0x200025A")]
		public enum ScreenTextureFormat
		{
			[Token(Token = "0x4000D96")]
			Auto,
			[Token(Token = "0x4000D97")]
			ARGB32,
			[Token(Token = "0x4000D98")]
			ARGBHalf,
			[Token(Token = "0x4000D99")]
			ARGBFloat,
			[Token(Token = "0x4000D9A")]
			Default,
			[Token(Token = "0x4000D9B")]
			DefaultHDR
		}

		[Token(Token = "0x200025B")]
		public enum FarPlaneSourceType
		{
			[Token(Token = "0x4000D9D")]
			ProjectionParams,
			[Token(Token = "0x4000D9E")]
			Camera
		}

		[Token(Token = "0x200025C")]
		public enum DistanceFalloffModeType
		{
			[Token(Token = "0x4000DA0")]
			Off,
			[Token(Token = "0x4000DA1")]
			Absolute,
			[Token(Token = "0x4000DA2")]
			Relative
		}

		[Token(Token = "0x200025D")]
		public enum VAOCameraEventType
		{
			[Token(Token = "0x4000DA4")]
			AfterLighting,
			[Token(Token = "0x4000DA5")]
			BeforeReflections,
			[Token(Token = "0x4000DA6")]
			BeforeImageEffectsOpaque
		}

		[Token(Token = "0x200025E")]
		public enum HierarchicalBufferStateType
		{
			[Token(Token = "0x4000DA8")]
			Off,
			[Token(Token = "0x4000DA9")]
			On,
			[Token(Token = "0x4000DAA")]
			Auto
		}

		[Token(Token = "0x200025F")]
		public enum NormalsSourceType
		{
			[Token(Token = "0x4000DAC")]
			GBuffer = 1,
			[Token(Token = "0x4000DAD")]
			Calculate
		}

		[Token(Token = "0x2000260")]
		public enum DetailQualityType
		{
			[Token(Token = "0x4000DAF")]
			Medium = 1,
			[Token(Token = "0x4000DB0")]
			High
		}

		[Token(Token = "0x2000261")]
		public enum AlgorithmType
		{
			[Token(Token = "0x4000DB2")]
			StandardVAO = 1,
			[Token(Token = "0x4000DB3")]
			RaycastAO
		}

		[Token(Token = "0x2000262")]
		private enum ShaderPass
		{
			[Token(Token = "0x4000DB5")]
			CullingPrepass,
			[Token(Token = "0x4000DB6")]
			MainPass,
			[Token(Token = "0x4000DB7")]
			MainPassDoubleRadius,
			[Token(Token = "0x4000DB8")]
			MainPassTripleRadius,
			[Token(Token = "0x4000DB9")]
			MainPassDoubleRadiusHQ,
			[Token(Token = "0x4000DBA")]
			MainPassTripleRadiusHQ
		}

		[Token(Token = "0x2000263")]
		private enum ShaderFinalPass
		{
			[Token(Token = "0x4000DBC")]
			StandardBlurUniform,
			[Token(Token = "0x4000DBD")]
			StandardBlurUniformMultiplyBlend,
			[Token(Token = "0x4000DBE")]
			StandardBlurUniformFast,
			[Token(Token = "0x4000DBF")]
			StandardBlurUniformFastMultiplyBlend,
			[Token(Token = "0x4000DC0")]
			EnhancedBlurFirstPass,
			[Token(Token = "0x4000DC1")]
			EnhancedBlurSecondPass,
			[Token(Token = "0x4000DC2")]
			EnhancedBlurSecondPassMultiplyBlend,
			[Token(Token = "0x4000DC3")]
			Mixing,
			[Token(Token = "0x4000DC4")]
			MixingMultiplyBlend,
			[Token(Token = "0x4000DC5")]
			DownscaleDepthNormalsPass,
			[Token(Token = "0x4000DC6")]
			Copy,
			[Token(Token = "0x4000DC7")]
			BlendAfterLightingLog,
			[Token(Token = "0x4000DC8")]
			TexCopyImageEffectSPSR,
			[Token(Token = "0x4000DC9")]
			CalculateNormals,
			[Token(Token = "0x4000DCA")]
			TexCopyTemporalSPSR
		}

		[Token(Token = "0x2000264")]
		private enum ShaderBeforeReflectionsBlendPass
		{
			[Token(Token = "0x4000DCC")]
			BlendBeforeReflections,
			[Token(Token = "0x4000DCD")]
			BlendBeforeReflectionsLog
		}

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Radius;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Power;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Presence;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Thickness;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float BordersIntensity;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float DetailAmountVAO;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DetailQualityType DetailQuality;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float DetailAmountRaycast;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int Quality;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float SSAOBias;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool MaxRadiusEnabled;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MaxRadius;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AlgorithmType Algorithm;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public DistanceFalloffModeType DistanceFalloffMode;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float DistanceFalloffStartAbsolute;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float DistanceFalloffStartRelative;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float DistanceFalloffSpeedAbsolute;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float DistanceFalloffSpeedRelative;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AdaptiveSamplingType AdaptiveType;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float AdaptiveQualityCoefficient;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CullingPrepassModeType CullingPrepassMode;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int Downsampling;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HierarchicalBufferStateType HierarchicalBufferState;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool CommandBufferEnabled;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool UseGBuffer;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		public bool UsePreciseDepthBuffer;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		public bool EnableTemporalFiltering;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public VAOCameraEventType VaoCameraEvent;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public FarPlaneSourceType FarPlaneSource;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool IsLumaSensitive;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public LuminanceModeType LuminanceMode;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float LumaThreshold;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float LumaKneeWidth;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float LumaKneeLinearity;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public EffectMode Mode;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color ColorTint;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float ColorBleedPower;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float ColorBleedPresence;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ScreenTextureFormat IntermediateScreenTextureFormat;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool ColorbleedHueSuppresionEnabled;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float ColorBleedHueSuppresionThreshold;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float ColorBleedHueSuppresionWidth;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float ColorBleedHueSuppresionSaturationThreshold;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float ColorBleedHueSuppresionSaturationWidth;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float ColorBleedHueSuppresionBrightness;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public int ColorBleedQuality;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public ColorBleedSelfOcclusionFixLevelType ColorBleedSelfOcclusionFixLevel;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public bool GiBackfaces;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public BlurQualityType BlurQuality;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public BlurModeType BlurMode;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int EnhancedBlurSize;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float EnhancedBlurDeviation;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool OutputAOOnly;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public NormalsSourceType NormalsSource;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float HierarchicalBufferPixelsPerLevel;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int CullingPrepassDownsamplingFactor;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float AdaptiveQuality;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float AdaptiveMin;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float AdaptiveMax;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool lumaFoldout;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		public bool colorBleedFoldout;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		public bool optimizationFoldout;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x107")]
		public bool radiusLimitsFoldout;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool pipelineFoldout;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		public bool blurFoldout;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		public bool aboutFoldout;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Dictionary<CameraEvent, CommandBuffer> cameraEventsRegistered;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool isCommandBufferAlive;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Mesh screenQuad;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int destinationWidth;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int destinationHeight;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool onDestroyCalled;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Shader vaoMainShader;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Shader vaoMainColorbleedShader;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Shader raycastMainShader;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Shader raycastMainColorbleedShader;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Shader vaoFinalPassShader;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Shader vaoBeforeReflectionsBlendShader;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Camera myCamera;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool isSupported;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Material VAOMaterial;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Material VAOColorbleedMaterial;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Material VAOFinalPassMaterial;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Material RaycastMaterial;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Material RaycastColorbleedMaterial;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Material BeforeReflectionsBlendMaterial;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public bool ForcedSwitchPerformed;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
		public bool ForcedSwitchPerformedSinglePassStereo;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
		public bool ForcedSwitchPerformedSinglePassStereoGBuffer;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private int lastDownsampling;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private int lastAlgorithm;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private AdaptiveSamplingType lastAdaptiveType;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private CameraEvent? lastOverrideCameraEvent;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool lastEnableTemporalFiltering;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private int? lastOverrideWidth;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private int? lastOverrideHeight;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private int lastQuality;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private CullingPrepassModeType lastcullingPrepassType;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int lastCullingPrepassDownsamplingFactor;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private BlurModeType lastBlurMode;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private BlurQualityType lastBlurQuality;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private int lastMainPass;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private EffectMode lastMode;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool lastUseGBuffer;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		private bool lastOutputAOOnly;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private CameraEvent lastCameraEvent;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private bool lastIsHDR;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
		private bool lastIsSPSR;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FA")]
		private bool lastIsMPSR;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private int lastScreenTextureWidth;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private int lastScreenTextureHeight;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private bool isHDR;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x205")]
		public bool isSPSR;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x206")]
		public bool isMPSR;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private ScreenTextureFormat lastIntermediateScreenTextureFormat;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private int lastCmdBufferEnhancedBlurSize;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private bool lastHierarchicalBufferEnabled;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		public bool historyReady;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Matrix4x4 previousCameraToWorldMatrix;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private Matrix4x4 previousProjectionMatrix;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private Matrix4x4 previousCameraToWorldMatrixLeft;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private Matrix4x4 previousProjectionMatrixLeft;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Texture2D noiseTexture;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Texture2D temporalSamplesTexture;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private int frameNumber;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private bool isEvenFrame;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private Vector4[] adaptiveSamples;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Vector4[] carefulCache;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private RenderTexture[] aoHistory;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int aoHistoryCurrentIdx;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private Vector4[] gaussian;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private Vector4[] gaussianBuffer;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private Vector4[] samplesLarge;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private int lastSamplesLength;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private int lastEnhancedBlurSize;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private float gaussianWeight;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		private float lastDeviation;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public CameraEvent? OverrideCameraEvent;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public int? OverrideWidth;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		public int? OverrideHeight;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private Vector4[] samplesPacked;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color[] noiseSamples;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector4[] samp2;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector4[] samp4;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector4[] samp8;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector4[] samp16;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Vector4[] samp32;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector4[] samp64;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Vector4[] packedSamples;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Color[] temporalSamplesPacked;

		[Token(Token = "0x170000F0")]
		public bool HierarchicalBufferEnabled
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0x187B2A0", Offset = "0x187B2A0", VA = "0x187B2A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x18766CC", Offset = "0x18766CC", VA = "0x18766CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x1877884", Offset = "0x1877884", VA = "0x1877884")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x1877CA8", Offset = "0x1877CA8", VA = "0x1877CA8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x1877D0C", Offset = "0x1877D0C", VA = "0x1877D0C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x187AD3C", Offset = "0x187AD3C", VA = "0x187AD3C")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x187B0FC", Offset = "0x187B0FC", VA = "0x187B0FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x187B100", Offset = "0x187B100", VA = "0x187B100")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x187B128", Offset = "0x187B128", VA = "0x187B128")]
		private ShaderPass GetMainPass(AlgorithmType algorithm, bool doQuarterRadius, bool doHalfRadius)
		{
			return default(ShaderPass);
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x187B16C", Offset = "0x187B16C", VA = "0x187B16C")]
		private Material getAlgorithmMaterial()
		{
			return null;
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x187565C", Offset = "0x187565C", VA = "0x187565C")]
		protected void PerformOnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x187AC2C", Offset = "0x187AC2C", VA = "0x187AC2C")]
		private void EnsureCommandBuffer(bool settingsDirty = false)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x187B55C", Offset = "0x187B55C", VA = "0x187B55C")]
		private void CreateCommandBuffer()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x18778F4", Offset = "0x18778F4", VA = "0x18778F4")]
		private void TeardownCommandBuffer()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x187DF90", Offset = "0x187DF90", VA = "0x187DF90")]
		protected Mesh GetScreenQuad()
		{
			return null;
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x187DE4C", Offset = "0x187DE4C", VA = "0x187DE4C")]
		private CameraEvent GetCameraEvent(VAOCameraEventType vaoCameraEvent)
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x187B2C8", Offset = "0x187B2C8", VA = "0x187B2C8")]
		private void DoShaderBlitCopy(Texture sourceTexture, RenderTexture destinationTexture)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x187E1B4", Offset = "0x187E1B4", VA = "0x187E1B4")]
		protected void DoMixingBlit(CommandBuffer commandBuffer, int? source, int? primaryTarget, RenderTargetIdentifier secondaryTarget, int pass, Material material)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x187E290", Offset = "0x187E290", VA = "0x187E290")]
		protected void DoBlit(CommandBuffer commandBuffer, int? source, int target, int pass, Material material)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x187E400", Offset = "0x187E400", VA = "0x187E400")]
		protected void DoBlit(CommandBuffer commandBuffer, int? source, RenderTargetIdentifier target, int pass, Material material)
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x1878264", Offset = "0x1878264", VA = "0x1878264")]
		private void TrySetUniforms()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x187B3C8", Offset = "0x187B3C8", VA = "0x187B3C8")]
		private void prepareAoHistory(int screenTextureWidth, int screenTextureHeight)
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x187B1B0", Offset = "0x187B1B0", VA = "0x187B1B0")]
		private void releaseAoHistory()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x187E960", Offset = "0x187E960", VA = "0x187E960")]
		private Vector4[] GetCombinedSamples(Vector4[] a, Vector4[] b, [Optional] Vector4[] c, [Optional] Vector4[] d)
		{
			return null;
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x187EADC", Offset = "0x187EADC", VA = "0x187EADC")]
		private Vector4[] selectSampleSet(int samplesCount)
		{
			return null;
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x187EC74", Offset = "0x187EC74", VA = "0x187EC74")]
		private int getAdaptiveSamplesOffset(int samplesCount)
		{
			return default(int);
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x187E658", Offset = "0x187E658", VA = "0x187E658")]
		private void SetKeywords(Material material, string offState, string onState, bool state)
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x1876F38", Offset = "0x1876F38", VA = "0x1876F38")]
		private void EnsureMaterials()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x187ECBC", Offset = "0x187ECBC", VA = "0x187ECBC")]
		private static Material CreateMaterial(Shader shader)
		{
			return null;
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x187ED74", Offset = "0x187ED74", VA = "0x187ED74")]
		private static void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x187E6C4", Offset = "0x187E6C4", VA = "0x187E6C4")]
		private void SetVectorArrayNoBuffer(string name, Material material, Vector4[] samples)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x187E8D0", Offset = "0x187E8D0", VA = "0x187E8D0")]
		private void SetVectorArray(string name, Material Material, Vector4[] samples, ref Vector4[] samplesBuffer, ref int lastBufferLength, bool needsUpdate)
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x187EE0C", Offset = "0x187EE0C", VA = "0x187EE0C")]
		private void SetSampleSet(string name, Material material, Vector4[] samples)
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x187EF68", Offset = "0x187EF68", VA = "0x187EF68")]
		private Vector4[] GetAdaptiveSamples()
		{
			return null;
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x187774C", Offset = "0x187774C", VA = "0x187774C")]
		private Vector4[] GenerateAdaptiveSamples()
		{
			return null;
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x18774A4", Offset = "0x18774A4", VA = "0x18774A4")]
		private void EnsureNoiseTexture()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x18775F0", Offset = "0x18775F0", VA = "0x18775F0")]
		private void EnsureTemporalSamplesTexture()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x187E6E4", Offset = "0x187E6E4", VA = "0x187E6E4")]
		private static Vector4[] GenerateGaussian(int size, float d, out float weight, bool normalize = true)
		{
			return null;
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x187E54C", Offset = "0x187E54C", VA = "0x187E54C")]
		private float GetDepthForScreenSize(Camera camera, float sizeOnScreen)
		{
			return default(float);
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x187EF94", Offset = "0x187EF94", VA = "0x187EF94")]
		public bool ShouldUseHierarchicalBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x187E5A0", Offset = "0x187E5A0", VA = "0x187E5A0")]
		public bool ShouldUseGBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x1877F30", Offset = "0x1877F30", VA = "0x1877F30")]
		protected void EnsureVAOVersion()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x187A818", Offset = "0x187A818", VA = "0x187A818")]
		private bool CheckSettingsChanges()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x187DF60", Offset = "0x187DF60", VA = "0x187DF60")]
		private RenderTextureFormat GetRenderTextureFormat(ScreenTextureFormat format, bool isHDR)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x1876E78", Offset = "0x1876E78", VA = "0x1876E78")]
		private void ReportError(string error)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x187F3E8", Offset = "0x187F3E8", VA = "0x187F3E8")]
		private void ReportWarning(string error)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x1877BF8", Offset = "0x1877BF8", VA = "0x1877BF8")]
		private bool isCameraSPSR(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x187F358", Offset = "0x187F358", VA = "0x187F358")]
		private bool isCameraHDR(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x187E598", Offset = "0x187E598", VA = "0x187E598")]
		private bool MustForceFlip(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x187F0A8", Offset = "0x187F0A8", VA = "0x187F0A8")]
		protected List<KeyValuePair<FieldInfo, object>> GetParameters()
		{
			return null;
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x187F214", Offset = "0x187F214", VA = "0x187F214")]
		protected void SetParameters(List<KeyValuePair<FieldInfo, object>> parameters)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x1876514", Offset = "0x1876514", VA = "0x1876514")]
		public VAOEffectCommandBuffer()
		{
		}
	}
}
namespace Boxophobic.StyledGUI
{
	[Token(Token = "0x2000265")]
	public class StyledBanner : PropertyAttribute
	{
		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float colorR;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float colorG;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float colorB;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string subtitle;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int spaceTop;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int spaceBottom;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string helpURL;

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xE16514", Offset = "0xE16514", VA = "0xE16514")]
		public StyledBanner(string title, string subtitle, string helpURL)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xE16564", Offset = "0xE16564", VA = "0xE16564")]
		public StyledBanner(float colorR, float colorG, float colorB, string title, string subtitle, string helpURL)
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xE165D0", Offset = "0xE165D0", VA = "0xE165D0")]
		public StyledBanner(float colorR, float colorG, float colorB, string title, string subtitle, int spaceTop, int spaceBottom, string helpURL)
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class StyledCategory : PropertyAttribute
	{
		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string category;

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xE16648", Offset = "0xE16648", VA = "0xE16648")]
		public StyledCategory(string category)
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class StyledInteractive : PropertyAttribute
	{
		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int value;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string keyword;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int type;

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xE16674", Offset = "0xE16674", VA = "0xE16674")]
		public StyledInteractive(int v)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xE166A4", Offset = "0xE166A4", VA = "0xE166A4")]
		public StyledInteractive(string k)
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class StyledMessage : PropertyAttribute
	{
		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Type;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Message;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Top;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Down;

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xE166D8", Offset = "0xE166D8", VA = "0xE166D8")]
		public StyledMessage(string Type, string Message)
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xE16714", Offset = "0xE16714", VA = "0xE16714")]
		public StyledMessage(string Type, string Message, float Top, float Down)
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class StyledPopupArray : PropertyAttribute
	{
		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string array;

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xE16770", Offset = "0xE16770", VA = "0xE16770")]
		public StyledPopupArray(string array)
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class StyledPopupLayers : PropertyAttribute
	{
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xE1679C", Offset = "0xE1679C", VA = "0xE1679C")]
		public StyledPopupLayers()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class StyledRangeOptions : PropertyAttribute
	{
		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool simple;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float min;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float max;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string displayLabel;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] options;

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xE167A4", Offset = "0xE167A4", VA = "0xE167A4")]
		public StyledRangeOptions(float min, float max, string displayLabel, string[] options)
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class StyledSpace : PropertyAttribute
	{
		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int space;

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xE167F4", Offset = "0xE167F4", VA = "0xE167F4")]
		public StyledSpace(int space)
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class StyledTexturePreview : PropertyAttribute
	{
		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xE16820", Offset = "0xE16820", VA = "0xE16820")]
		public StyledTexturePreview()
		{
		}
	}
	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x880AD8", Offset = "0x880AD8")]
	public sealed class StyledMonoHideScriptField : Attribute
	{
		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xE16768", Offset = "0xE16768", VA = "0xE16768")]
		public StyledMonoHideScriptField()
		{
		}
	}
}
namespace Boxophobic.Utils
{
	[Token(Token = "0x200026F")]
	public class SettingsData : ScriptableObject
	{
		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x886828", Offset = "0x886828")]
		public string data;

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xE09604", Offset = "0xE09604", VA = "0xE09604")]
		public SettingsData()
		{
		}
	}
}
namespace DeckBrush
{
	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x880B0C", Offset = "0x880B0C")]
	public class BasketEnter : MonoBehaviour, IGrabbableMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886838", Offset = "0x886838")]
		private int _targetChannel;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886884", Offset = "0x886884")]
		private bool <IsGrabbing>k__BackingField;

		[Token(Token = "0x170000F1")]
		public bool IsGrabbing
		{
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0xE30E30", Offset = "0xE30E30", VA = "0xE30E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8928E8", Offset = "0x8928E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0xE30E38", Offset = "0xE30E38", VA = "0xE30E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8928F8", Offset = "0x8928F8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xE30E44", Offset = "0xE30E44", VA = "0xE30E44")]
		public int GetTargetChannel()
		{
			return default(int);
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xE30E4C", Offset = "0xE30E4C", VA = "0xE30E4C", Slot = "4")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xE30E58", Offset = "0xE30E58", VA = "0xE30E58", Slot = "5")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xE30E60", Offset = "0xE30E60", VA = "0xE30E60")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x892908", Offset = "0x892908")]
		private void DebugLog(string text)
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xE30EC4", Offset = "0xE30EC4", VA = "0xE30EC4")]
		public BasketEnter()
		{
		}
	}
	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x880B1C", Offset = "0x880B1C")]
	public class DeckBrushGrandOffset : MonoBehaviour, IGrabbableMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886894", Offset = "0x886894")]
		[SerializeField]
		private Transform _grandOffset;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8868E0", Offset = "0x8868E0")]
		[SerializeField]
		private Transform _checkHeightPos;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88692C", Offset = "0x88692C")]
		[SerializeField]
		private BoxCollider _brushTriggerBoxCollider;

		[Token(Token = "0x4000DEB")]
		private const float ReturnDistance = 0.01f;

		[Token(Token = "0x4000DEC")]
		private const float ExtrusionDistance = 0.001f;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _originalLocalPosition;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool _hitTrigger;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool _returnLocalPosition;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		private bool _isEnableGrandOffset;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IDisposable _updateDisposable;

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x1229C80", Offset = "0x1229C80", VA = "0x1229C80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x1229CD0", Offset = "0x1229CD0", VA = "0x1229CD0", Slot = "4")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x1229E38", Offset = "0x1229E38", VA = "0x1229E38", Slot = "5")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1229F20", Offset = "0x1229F20", VA = "0x1229F20")]
		private void OnGrabUpdate()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x1229F24", Offset = "0x1229F24", VA = "0x1229F24")]
		private void CalcReturnPosition()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x122A04C", Offset = "0x122A04C", VA = "0x122A04C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x122A05C", Offset = "0x122A05C", VA = "0x122A05C")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x122A054", Offset = "0x122A054", VA = "0x122A054")]
		private bool ColliderEnableCheck(Collider other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x122A060", Offset = "0x122A060", VA = "0x122A060")]
		private void TopBottomCollision(Collider other)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x122A2F4", Offset = "0x122A2F4", VA = "0x122A2F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x892940", Offset = "0x892940")]
		private void DebugLog(string text)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x122A358", Offset = "0x122A358", VA = "0x122A358")]
		public DeckBrushGrandOffset()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x122A360", Offset = "0x122A360", VA = "0x122A360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892978", Offset = "0x892978")]
		private void <OnGrabBegin>b__11_0(UniRx.Unit unit)
		{
		}
	}
	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x880B2C", Offset = "0x880B2C")]
	public class DeckBrushWashFoam : MonoBehaviour, IGrabbableMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886978", Offset = "0x886978")]
		[SerializeField]
		private GameObject _washEffect;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8869C4", Offset = "0x8869C4")]
		private Collider _checkTriggerCollider;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886A10", Offset = "0x886A10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886A10", Offset = "0x886A10")]
		[SerializeField]
		private float _vibrationFrequency;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886A74", Offset = "0x886A74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886A74", Offset = "0x886A74")]
		private float _vibrationAmplitude;

		[Token(Token = "0x4000DF6")]
		private const float StopParticleWaitTime = 0.5f;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HandLR _myHandLeftRight;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _numLHandTouch;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _numRHandTouch;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _effectGameObject;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystem _particleSystem;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IDisposable _updateGrabDisposable;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _elapsedTimeStopParticle;

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x122A364", Offset = "0x122A364", VA = "0x122A364")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x122A530", Offset = "0x122A530", VA = "0x122A530", Slot = "4")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x122A628", Offset = "0x122A628", VA = "0x122A628", Slot = "5")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x122A7DC", Offset = "0x122A7DC", VA = "0x122A7DC")]
		private void CreateEffect()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x122A92C", Offset = "0x122A92C", VA = "0x122A92C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x122AA4C", Offset = "0x122AA4C", VA = "0x122AA4C")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x122AA94", Offset = "0x122AA94", VA = "0x122AA94")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x122AC2C", Offset = "0x122AC2C", VA = "0x122AC2C")]
		private void CheckStopParticleUpdate()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x122A968", Offset = "0x122A968", VA = "0x122A968")]
		private void VibrationBegin()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x122ABE8", Offset = "0x122ABE8", VA = "0x122ABE8")]
		private void VibrationEnd()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x122A724", Offset = "0x122A724", VA = "0x122A724")]
		private void VibrationStop()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x122A3BC", Offset = "0x122A3BC", VA = "0x122A3BC")]
		private void SetupIgnoreParentCollider()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x122AD18", Offset = "0x122AD18", VA = "0x122AD18")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x892988", Offset = "0x892988")]
		private void DebugLog(string text)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x122AD7C", Offset = "0x122AD7C", VA = "0x122AD7C")]
		public DeckBrushWashFoam()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x122AD8C", Offset = "0x122AD8C", VA = "0x122AD8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8929C0", Offset = "0x8929C0")]
		private void <OnTriggerExit>b__18_0(UniRx.Unit unit)
		{
		}
	}
}
namespace HandOperation
{
	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x880B3C", Offset = "0x880B3C")]
	public class OpenPuzzleSelectFromHand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880B4C", Offset = "0x880B4C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__15_1;

			[Token(Token = "0x6000B15")]
			[Address(RVA = "0xC12DF8", Offset = "0xC12DF8", VA = "0xC12DF8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B16")]
			[Address(RVA = "0xC12E00", Offset = "0xC12E00", VA = "0xC12E00")]
			internal void <MovePuzzleSelect>b__15_1()
			{
			}
		}

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886AD8", Offset = "0x886AD8")]
		private bool <EnableInput>k__BackingField;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886AE8", Offset = "0x886AE8")]
		private SubQuestWashingAnimal <SubQuest>k__BackingField;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isTeleportLeft;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDisposable _inputCheckDisposable;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isPlayingSubQuest;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _guideGameObject;

		[Token(Token = "0x170000F2")]
		public bool EnableInput
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0xF6E8D0", Offset = "0xF6E8D0", VA = "0xF6E8D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8929D0", Offset = "0x8929D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0xF6E8D8", Offset = "0xF6E8D8", VA = "0xF6E8D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8929E0", Offset = "0x8929E0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public SubQuestWashingAnimal SubQuest
		{
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0xF6E8E4", Offset = "0xF6E8E4", VA = "0xF6E8E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8929F0", Offset = "0x8929F0")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0xF6E8EC", Offset = "0xF6E8EC", VA = "0xF6E8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892A00", Offset = "0x892A00")]
			set
			{
			}
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xF6E8F4", Offset = "0xF6E8F4", VA = "0xF6E8F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xF6EAE8", Offset = "0xF6EAE8", VA = "0xF6EAE8")]
		public void SetEnableInput(bool flag)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xF6E9A0", Offset = "0xF6E9A0", VA = "0xF6E9A0")]
		private void StartInputCheck()
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xF6EAFC", Offset = "0xF6EAFC", VA = "0xF6EAFC")]
		private void StopInputCheck()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xF6EBAC", Offset = "0xF6EBAC", VA = "0xF6EBAC")]
		private void OnInputCheck()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xF6EC74", Offset = "0xF6EC74", VA = "0xF6EC74")]
		public void MovePuzzleSelect()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xF6EF48", Offset = "0xF6EF48", VA = "0xF6EF48")]
		public SubQuestFindingGuide StartSubQuest(GameObject guide)
		{
			return null;
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xF6F104", Offset = "0xF6F104", VA = "0xF6F104")]
		public OpenPuzzleSelectFromHand()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xF6F114", Offset = "0xF6F114", VA = "0xF6F114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892A10", Offset = "0x892A10")]
		private void <StartInputCheck>b__12_0(UniRx.Unit unit)
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xF6F118", Offset = "0xF6F118", VA = "0xF6F118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892A20", Offset = "0x892A20")]
		private void <MovePuzzleSelect>b__15_0()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xF6F1AC", Offset = "0xF6F1AC", VA = "0xF6F1AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892A30", Offset = "0x892A30")]
		private void <MovePuzzleSelect>b__15_2()
		{
		}
	}
	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x880B5C", Offset = "0x880B5C")]
	public class ShowMapOperationHand : MonoBehaviour
	{
		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886AF8", Offset = "0x886AF8")]
		private bool <EnableInput>k__BackingField;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject _mapGameObject;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _show;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _originalScale;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tweener _tweener;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isTeleportLeft;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IDisposable _inputCheckDisposable;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isPlayingSubQuest;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject _guideGameObject;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _guideScale;

		[Token(Token = "0x170000F4")]
		public bool EnableInput
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0xE09CC0", Offset = "0xE09CC0", VA = "0xE09CC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892A40", Offset = "0x892A40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0xE09CC8", Offset = "0xE09CC8", VA = "0xE09CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892A50", Offset = "0x892A50")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xE09CD4", Offset = "0xE09CD4", VA = "0xE09CD4")]
		public void SetMap(GameObject map)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xE09DE4", Offset = "0xE09DE4", VA = "0xE09DE4")]
		private void StartInputCheck()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xE09F2C", Offset = "0xE09F2C", VA = "0xE09F2C")]
		private void StopInputCheck()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xE09FDC", Offset = "0xE09FDC", VA = "0xE09FDC")]
		private void OnInputCheck()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xE0A29C", Offset = "0xE0A29C", VA = "0xE0A29C")]
		public void SetEnableInput(bool flag)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xE0A1A8", Offset = "0xE0A1A8", VA = "0xE0A1A8")]
		private void SwitchShowMap()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xE0A2B0", Offset = "0xE0A2B0", VA = "0xE0A2B0")]
		public void HideMap()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xE0A358", Offset = "0xE0A358", VA = "0xE0A358")]
		public SubQuestFindingGuide StartSubQuest(GameObject guide)
		{
			return null;
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xE0A048", Offset = "0xE0A048", VA = "0xE0A048")]
		private void SwitchChange()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xE0A604", Offset = "0xE0A604", VA = "0xE0A604")]
		public ShowMapOperationHand()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xE0A614", Offset = "0xE0A614", VA = "0xE0A614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892A60", Offset = "0x892A60")]
		private void <StartInputCheck>b__11_0(UniRx.Unit unit)
		{
		}
	}
}
namespace Utility
{
	[Token(Token = "0x2000276")]
	public class ImageByDominantHand : MonoBehaviour
	{
		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x886B08", Offset = "0x886B08")]
		private Sprite sprite1;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x886B54", Offset = "0x886B54")]
		private Sprite sprite2;

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x178E328", Offset = "0x178E328", VA = "0x178E328")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x178E32C", Offset = "0x178E32C", VA = "0x178E32C")]
		public void Init()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x178E450", Offset = "0x178E450", VA = "0x178E450")]
		public ImageByDominantHand()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class RepeatedSoundPlay : MonoBehaviour
	{
		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SoundController _soundController;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource _audioSource;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioClip _clip;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _repeatTime;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _elapsedTime;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isReady;

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1021E34", Offset = "0x1021E34", VA = "0x1021E34")]
		public void Init(AudioClip audioClip, float loopTime = 10f)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1021F54", Offset = "0x1021F54", VA = "0x1021F54")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x1022080", Offset = "0x1022080", VA = "0x1022080")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x10220E8", Offset = "0x10220E8", VA = "0x10220E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x102210C", Offset = "0x102210C", VA = "0x102210C")]
		public RepeatedSoundPlay()
		{
		}
	}
}
namespace TitleGame
{
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x880B6C", Offset = "0x880B6C")]
	public class TitleGameController : MonoBehaviour
	{
		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886BA0", Offset = "0x886BA0")]
		[SerializeField]
		private EventTrigger _triggerStart;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886BEC", Offset = "0x886BEC")]
		private EventTrigger _triggerOption;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886C38", Offset = "0x886C38")]
		[SerializeField]
		private EventTrigger _triggerPuzzleSelect;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886C84", Offset = "0x886C84")]
		private EventTrigger _triggerQuitGame;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886CD0", Offset = "0x886CD0")]
		private TitleOptionUI _titleOptionUI;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886D1C", Offset = "0x886D1C")]
		private TitlePuzzleSelectUI _titlePuzzleSelectUI;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886D68", Offset = "0x886D68")]
		private TitleStartMenuUI startMenuUI;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886DB4", Offset = "0x886DB4")]
		private TitleInitializeMenuUI initializeMenuUI;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isSelectedDominantHand;

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xFA2474", Offset = "0xFA2474", VA = "0xFA2474")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xFA2A18", Offset = "0xFA2A18", VA = "0xFA2A18")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xFA2CE4", Offset = "0xFA2CE4", VA = "0xFA2CE4")]
		private void PushStartButton()
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xFA2E1C", Offset = "0xFA2E1C", VA = "0xFA2E1C")]
		private void PushOptionButton()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xFA2ED0", Offset = "0xFA2ED0", VA = "0xFA2ED0")]
		private void OnOptionClose()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xFA2F00", Offset = "0xFA2F00", VA = "0xFA2F00")]
		private void PushPuzzleSelectButton()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xFA2F88", Offset = "0xFA2F88", VA = "0xFA2F88")]
		private void PushQuitGameButton()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xFA2EE8", Offset = "0xFA2EE8", VA = "0xFA2EE8")]
		private void ShowMainMenu()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xFA2EB8", Offset = "0xFA2EB8", VA = "0xFA2EB8")]
		private void HideMainMenu()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xFA2FE0", Offset = "0xFA2FE0", VA = "0xFA2FE0")]
		public TitleGameController()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xFA2FE8", Offset = "0xFA2FE8", VA = "0xFA2FE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892A70", Offset = "0x892A70")]
		private void <Start>b__9_1(BaseEventData data)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xFA2FEC", Offset = "0xFA2FEC", VA = "0xFA2FEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892A80", Offset = "0x892A80")]
		private void <Start>b__9_2(BaseEventData data)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xFA2FF0", Offset = "0xFA2FF0", VA = "0xFA2FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892A90", Offset = "0x892A90")]
		private void <Start>b__9_3(BaseEventData data)
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xFA2FF4", Offset = "0xFA2FF4", VA = "0xFA2FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892AA0", Offset = "0x892AA0")]
		private void <Start>b__9_4(BaseEventData data)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xFA2FFC", Offset = "0xFA2FFC", VA = "0xFA2FFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892AB0", Offset = "0x892AB0")]
		private void <Start>b__9_0()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class TitleInitializeMenuUI : MonoBehaviour
	{
		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x886E00", Offset = "0x886E00")]
		private int upSpeed;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int downSpeed;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x886E5C", Offset = "0x886E5C")]
		private GameObject textMainEn;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject textSubEn;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x886EB8", Offset = "0x886EB8")]
		private GameObject textMainJp;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject textSubJp;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x886F14", Offset = "0x886F14")]
		[SerializeField]
		private RectTransform handLeftMask;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x886F60", Offset = "0x886F60")]
		[SerializeField]
		private RectTransform handRightMask;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isPreviousLeft;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isPreviousRight;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool _isLeft;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool _isRight;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _isReady;

		[Token(Token = "0x4000E2E")]
		private const float INIT_HEIGHT = 24f;

		[Token(Token = "0x4000E2F")]
		private const float ENTER_HEIGHT = 362f;

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xFA3140", Offset = "0xFA3140", VA = "0xFA3140")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xFA3284", Offset = "0xFA3284", VA = "0xFA3284")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xFA33A8", Offset = "0xFA33A8", VA = "0xFA33A8")]
		private void UpdateMask(bool isUp, RectTransform hand)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xFA3620", Offset = "0xFA3620", VA = "0xFA3620")]
		private void Finish()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xFA36B8", Offset = "0xFA36B8", VA = "0xFA36B8")]
		public TitleInitializeMenuUI()
		{
		}
	}
	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x880B7C", Offset = "0x880B7C")]
	public class TitleOptionUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200027B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880B8C", Offset = "0x880B8C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__35_3;

			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0xF94830", Offset = "0xF94830", VA = "0xF94830")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0xF94838", Offset = "0xF94838", VA = "0xF94838")]
			internal void <OnButtonSaveReset>b__35_3()
			{
			}
		}

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886FAC", Offset = "0x886FAC")]
		private Button _toggleJapanese;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x886FF8", Offset = "0x886FF8")]
		[SerializeField]
		private Button _toggleEnglish;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887044", Offset = "0x887044")]
		[SerializeField]
		private Button _toggleTeleportLeft;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887090", Offset = "0x887090")]
		private Button _toggleTeleportRight;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8870DC", Offset = "0x8870DC")]
		private Button _togglePuzzleGunLeft;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887128", Offset = "0x887128")]
		[SerializeField]
		private Button _togglePuzzleGunRight;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887174", Offset = "0x887174")]
		private Button _buttonSaveReset;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8871C0", Offset = "0x8871C0")]
		[SerializeField]
		private Button _buttonClose;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88720C", Offset = "0x88720C")]
		private Text optionsLabelText;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Text languageLabelText;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text languageEnText;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Text languageJpText;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Text moveLabelText;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text moveLeftText;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text moveRightText;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text shooterLabelText;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Text shooterLeftText;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Text shooterRightText;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Text saveDataText;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Text saveDataResetText;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Text closeText;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887318", Offset = "0x887318")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887318", Offset = "0x887318")]
		private TitleYesNoDialog _yesNoDialog;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Action _languageChangeCallBack;

		[Token(Token = "0x14000020")]
		public event Action NotifyCloseButtonCallback
		{
			[Token(Token = "0x6000B40")]
			[Address(RVA = "0xFA2950", Offset = "0xFA2950", VA = "0xFA2950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892AC0", Offset = "0x892AC0")]
			add
			{
			}
			[Token(Token = "0x6000B41")]
			[Address(RVA = "0xFA36CC", Offset = "0xFA36CC", VA = "0xFA36CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892AD0", Offset = "0x892AD0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xFA376C", Offset = "0xFA376C", VA = "0xFA376C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xFA40F8", Offset = "0xFA40F8", VA = "0xFA40F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xFA4340", Offset = "0xFA4340", VA = "0xFA4340")]
		public void SetLanguageChangeCallBack(Action languageChangeCallBack)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xFA2E90", Offset = "0xFA2E90", VA = "0xFA2E90")]
		public void ShowOption()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xFA29F0", Offset = "0xFA29F0", VA = "0xFA29F0")]
		public void HideOption()
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xFA4348", Offset = "0xFA4348", VA = "0xFA4348")]
		private void SetLanguageJapanese(bool flag)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xFA468C", Offset = "0xFA468C", VA = "0xFA468C")]
		private void SetTeleportLeft(bool flag)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xFA4944", Offset = "0xFA4944", VA = "0xFA4944")]
		private void SetPuzzleGunRight(bool flag)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xFA4BFC", Offset = "0xFA4BFC", VA = "0xFA4BFC")]
		private void OnButtonClose()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xFA4C70", Offset = "0xFA4C70", VA = "0xFA4C70")]
		private void OnButtonSaveReset()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xFA3B2C", Offset = "0xFA3B2C", VA = "0xFA3B2C")]
		private void ChangeLanguage()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xFA4E70", Offset = "0xFA4E70", VA = "0xFA4E70")]
		public TitleOptionUI()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xFA4E78", Offset = "0xFA4E78", VA = "0xFA4E78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892AE0", Offset = "0x892AE0")]
		private void <Start>b__26_0()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xFA4E80", Offset = "0xFA4E80", VA = "0xFA4E80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892AF0", Offset = "0x892AF0")]
		private void <Start>b__26_1()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xFA4E88", Offset = "0xFA4E88", VA = "0xFA4E88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892B00", Offset = "0x892B00")]
		private void <Start>b__26_2()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xFA4E90", Offset = "0xFA4E90", VA = "0xFA4E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892B10", Offset = "0x892B10")]
		private void <Start>b__26_3()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xFA4E98", Offset = "0xFA4E98", VA = "0xFA4E98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892B20", Offset = "0x892B20")]
		private void <Start>b__26_4()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xFA4EA0", Offset = "0xFA4EA0", VA = "0xFA4EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892B30", Offset = "0x892B30")]
		private void <Start>b__26_5()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xFA4EA8", Offset = "0xFA4EA8", VA = "0xFA4EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892B40", Offset = "0x892B40")]
		private void <Start>b__26_6()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xFA4EAC", Offset = "0xFA4EAC", VA = "0xFA4EAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892B50", Offset = "0x892B50")]
		private void <Start>b__26_7()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xFA4EB0", Offset = "0xFA4EB0", VA = "0xFA4EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892B60", Offset = "0x892B60")]
		private void <OnButtonSaveReset>b__35_0()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xFA5024", Offset = "0xFA5024", VA = "0xFA5024")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892B70", Offset = "0x892B70")]
		private void <OnButtonSaveReset>b__35_2()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xFA5094", Offset = "0xFA5094", VA = "0xFA5094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892B80", Offset = "0x892B80")]
		private void <OnButtonSaveReset>b__35_1()
		{
		}
	}
	[Token(Token = "0x200027C")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x880B9C", Offset = "0x880B9C")]
	public class TitlePuzzleQuestInfo : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200027D")]
		private class PuzzleLevel
		{
			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int AreaNo;

			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int LevelNo;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int RoundCount;

			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuestData TargetQuestData;

			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0xF948C0", Offset = "0xF948C0", VA = "0xF948C0")]
			public PuzzleLevel()
			{
			}
		}

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887398", Offset = "0x887398")]
		private PuzzleLevel[] _puzzleLevelArray;

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xFA5104", Offset = "0xFA5104", VA = "0xFA5104")]
		public int GetQuestRoundCount(int areaNo, int levelNo)
		{
			return default(int);
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xFA5180", Offset = "0xFA5180", VA = "0xFA5180")]
		public QuestData GetQuestData(int areaNo, int levelNo)
		{
			return null;
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xFA51FC", Offset = "0xFA51FC", VA = "0xFA51FC")]
		public TitlePuzzleQuestInfo()
		{
		}
	}
	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x880BAC", Offset = "0x880BAC")]
	public class TitlePuzzleSelectUI : MonoBehaviour
	{
		[Token(Token = "0x200027F")]
		private class PuzzleLevel
		{
			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject RootObject;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject[] ClearStarArray;

			[Token(Token = "0x4000E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text AreaNameText;

			[Token(Token = "0x4000E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Button PuzzleButton;

			[Token(Token = "0x4000E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int _areaNo;

			[Token(Token = "0x4000E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int _levelNo;

			[Token(Token = "0x4000E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int _roundNo;

			[Token(Token = "0x4000E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private QuestData _toPuzzleQuestData;

			[Token(Token = "0x6000B63")]
			[Address(RVA = "0xF948C8", Offset = "0xF948C8", VA = "0xF948C8")]
			public void Setup(GameObject root)
			{
			}

			[Token(Token = "0x6000B64")]
			[Address(RVA = "0xF94B2C", Offset = "0xF94B2C", VA = "0xF94B2C")]
			public void SetShow(int areaNo, int levelNo, int roundNo, int starCount, QuestData questData)
			{
			}

			[Token(Token = "0x6000B65")]
			[Address(RVA = "0xF94E9C", Offset = "0xF94E9C", VA = "0xF94E9C")]
			private void ChangeSceneToPuzzle()
			{
			}

			[Token(Token = "0x6000B66")]
			[Address(RVA = "0xF94F54", Offset = "0xF94F54", VA = "0xF94F54")]
			public PuzzleLevel()
			{
			}

			[Token(Token = "0x6000B67")]
			[Address(RVA = "0xF94FB0", Offset = "0xF94FB0", VA = "0xF94FB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892B90", Offset = "0x892B90")]
			private void <SetShow>b__9_0()
			{
			}
		}

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8873E4", Offset = "0x8873E4")]
		private GameObject[] _levelGroupArray;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887430", Offset = "0x887430")]
		private TitlePuzzleQuestInfo _puzzleQuestInfo;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<PuzzleLevel> _puzzleLevelList;

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xFA5204", Offset = "0xFA5204", VA = "0xFA5204")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xFA52FC", Offset = "0xFA52FC", VA = "0xFA52FC")]
		private void SetupPuzzleStar()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xFA54C4", Offset = "0xFA54C4", VA = "0xFA54C4")]
		public TitlePuzzleSelectUI()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class TitleStartMenuUI : MonoBehaviour
	{
		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text startText;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text stageSelectText;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text optionsText;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text quitText;

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xFA56EC", Offset = "0xFA56EC", VA = "0xFA56EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xFA3014", Offset = "0xFA3014", VA = "0xFA3014")]
		public void ChangeLanguage()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xFA2F90", Offset = "0xFA2F90", VA = "0xFA2F90")]
		public void ShowMenu()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xFA2FB8", Offset = "0xFA2FB8", VA = "0xFA2FB8")]
		public void HideMenu()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xFA56F0", Offset = "0xFA56F0", VA = "0xFA56F0")]
		public TitleStartMenuUI()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class TitleYesNoDialog : MonoBehaviour
	{
		[Token(Token = "0x2000282")]
		public enum Type
		{
			[Token(Token = "0x4000E66")]
			Confirm1,
			[Token(Token = "0x4000E67")]
			Confirm2
		}

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8874BC", Offset = "0x8874BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8874BC", Offset = "0x8874BC")]
		private Text _messageText;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88752C", Offset = "0x88752C")]
		[SerializeField]
		private Text _yesButtonText;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887578", Offset = "0x887578")]
		[SerializeField]
		private Text _noButtonText;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8875C4", Offset = "0x8875C4")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8875C4", Offset = "0x8875C4")]
		private EventTrigger _yesButtonEventTrigger;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887634", Offset = "0x887634")]
		private EventTrigger _noButtonEventTrigger;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action _notifyYesButtonCallback;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Action _notifyNoButtonCallback;

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xFA3E50", Offset = "0xFA3E50", VA = "0xFA3E50")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xFA4D84", Offset = "0xFA4D84", VA = "0xFA4D84")]
		public void SetMainMessage(Type type)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xFA4E48", Offset = "0xFA4E48", VA = "0xFA4E48")]
		public void ShowDialog()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xFA40D0", Offset = "0xFA40D0", VA = "0xFA40D0")]
		public void HideDialog()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xFA56F8", Offset = "0xFA56F8", VA = "0xFA56F8")]
		public void SetYesButtonCallback(Action callback)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xFA5700", Offset = "0xFA5700", VA = "0xFA5700")]
		public void SetNoButtonCallback(Action callback)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xFA5708", Offset = "0xFA5708", VA = "0xFA5708")]
		public TitleYesNoDialog()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xFA5710", Offset = "0xFA5710", VA = "0xFA5710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892BA0", Offset = "0x892BA0")]
		private void <Initialize>b__7_0(BaseEventData x)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xFA5724", Offset = "0xFA5724", VA = "0xFA5724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892BB0", Offset = "0x892BB0")]
		private void <Initialize>b__7_1(BaseEventData x)
		{
		}
	}
}
namespace ZookeeperVR
{
	[Token(Token = "0x2000283")]
	public class GameManager : StaticAccessBehaviour<GameManager>
	{
		[Token(Token = "0x2000284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880BBC", Offset = "0x880BBC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action fadeoutCallback;

			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameManager <>4__this;

			[Token(Token = "0x6000B83")]
			[Address(RVA = "0xC09B24", Offset = "0xC09B24", VA = "0xC09B24")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000B84")]
			[Address(RVA = "0xC09B2C", Offset = "0xC09B2C", VA = "0xC09B2C")]
			internal void <LoadPuzzleScene>b__0()
			{
			}
		}

		[Token(Token = "0x2000285")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880BCC", Offset = "0x880BCC")]
		private sealed class <CoSwitchScene>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action fadeoutCallback;

			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameManager <>4__this;

			[Token(Token = "0x4000E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string scene;

			[Token(Token = "0x170000F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B88")]
				[Address(RVA = "0xC09D94", Offset = "0xC09D94", VA = "0xC09D94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B8A")]
				[Address(RVA = "0xC09DDC", Offset = "0xC09DDC", VA = "0xC09DDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xC09B68", Offset = "0xC09B68", VA = "0xC09B68")]
			[DebuggerHidden]
			public <CoSwitchScene>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000B86")]
			[Address(RVA = "0xC09B94", Offset = "0xC09B94", VA = "0xC09B94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B87")]
			[Address(RVA = "0xC09B98", Offset = "0xC09B98", VA = "0xC09B98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B89")]
			[Address(RVA = "0xC09D9C", Offset = "0xC09D9C", VA = "0xC09D9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isSwitchingScene;

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x12B3F2C", Offset = "0x12B3F2C", VA = "0x12B3F2C")]
		public void LoadPuzzleScene([Optional] Action fadeoutCallback)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x12B40C4", Offset = "0x12B40C4", VA = "0x12B40C4")]
		public void LoadZooScene()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x12B4158", Offset = "0x12B4158", VA = "0x12B4158")]
		public void LoadTitleScene()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x12B41A8", Offset = "0x12B41A8", VA = "0x12B41A8")]
		public void LoadStartLoadingScene()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x12B41F8", Offset = "0x12B41F8", VA = "0x12B41F8")]
		public void LoadOpeningScene()
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x12B4114", Offset = "0x12B4114", VA = "0x12B4114")]
		private string InnerZooScene()
		{
			return null;
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x12B4000", Offset = "0x12B4000", VA = "0x12B4000")]
		private void SwitchScene(string scene, Action fadeoutCallback)
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x12B42C8", Offset = "0x12B42C8", VA = "0x12B42C8")]
		private void SwitchSceneWithIcon(string scene, Action fadeoutCallback)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x12B4248", Offset = "0x12B4248", VA = "0x12B4248")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x892BC0", Offset = "0x892BC0")]
		private IEnumerator CoSwitchScene(string scene, Action fadeoutCallback)
		{
			return null;
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x12B43F4", Offset = "0x12B43F4", VA = "0x12B43F4")]
		private void OnFadeoutToPuzzleScene()
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x12B44CC", Offset = "0x12B44CC", VA = "0x12B44CC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x892C20", Offset = "0x892C20")]
		private void DebugLoadSceneTime()
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x12B44D0", Offset = "0x12B44D0", VA = "0x12B44D0")]
		public GameManager()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x12B451C", Offset = "0x12B451C", VA = "0x12B451C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892C58", Offset = "0x892C58")]
		private void <CoSwitchScene>b__9_0()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class CrowdedSound : MonoBehaviour
	{
		[Token(Token = "0x2000287")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880BDC", Offset = "0x880BDC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 player;

			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0xC05280", Offset = "0xC05280", VA = "0xC05280")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0xC05288", Offset = "0xC05288", VA = "0xC05288")]
			internal Vector3 <Update>b__0(Vector3 pos)
			{
				return default(Vector3);
			}
		}

		[Serializable]
		[Token(Token = "0x2000288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880BEC", Offset = "0x880BEC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Vector3, bool> <>9__3_1;

			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Vector3, float> <>9__3_2;

			[Token(Token = "0x6000B91")]
			[Address(RVA = "0xC05204", Offset = "0xC05204", VA = "0xC05204")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B92")]
			[Address(RVA = "0xC0520C", Offset = "0xC0520C", VA = "0xC0520C")]
			internal bool <Update>b__3_1(Vector3 vec)
			{
				return default(bool);
			}

			[Token(Token = "0x6000B93")]
			[Address(RVA = "0xC05248", Offset = "0xC05248", VA = "0xC05248")]
			internal float <Update>b__3_2(Vector3 vec)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887680", Offset = "0x887680")]
		[SerializeField]
		private int visitorCount;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource _audio;

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x127FA84", Offset = "0x127FA84", VA = "0x127FA84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x127FB10", Offset = "0x127FB10", VA = "0x127FB10")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x127FE88", Offset = "0x127FE88", VA = "0x127FE88")]
		public CrowdedSound()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class InitialAnimation : MonoBehaviour
	{
		[Token(Token = "0x200028A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880BFC", Offset = "0x880BFC")]
		private sealed class <CoShortAnimation>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InitialAnimation <>4__this;

			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string flg;

			[Token(Token = "0x170000F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B9F")]
				[Address(RVA = "0xC0B3C0", Offset = "0xC0B3C0", VA = "0xC0B3C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BA1")]
				[Address(RVA = "0xC0B408", Offset = "0xC0B408", VA = "0xC0B408", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0xC0B284", Offset = "0xC0B284", VA = "0xC0B284")]
			[DebuggerHidden]
			public <CoShortAnimation>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xC0B2B0", Offset = "0xC0B2B0", VA = "0xC0B2B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0xC0B2B4", Offset = "0xC0B2B4", VA = "0xC0B2B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0xC0B3C8", Offset = "0xC0B3C8", VA = "0xC0B3C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C0C", Offset = "0x880C0C")]
		private sealed class <CoAnimation>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InitialAnimation <>4__this;

			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string flg;

			[Token(Token = "0x170000FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BA5")]
				[Address(RVA = "0xC0B234", Offset = "0xC0B234", VA = "0xC0B234", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BA7")]
				[Address(RVA = "0xC0B27C", Offset = "0xC0B27C", VA = "0xC0B27C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0xC0B188", Offset = "0xC0B188", VA = "0xC0B188")]
			[DebuggerHidden]
			public <CoAnimation>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0xC0B1B4", Offset = "0xC0B1B4", VA = "0xC0B1B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0xC0B1B8", Offset = "0xC0B1B8", VA = "0xC0B1B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0xC0B23C", Offset = "0xC0B23C", VA = "0xC0B23C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string animationFlag;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly LodAnimatorAdapter _animatorAdapter;

		[Token(Token = "0x170000F7")]
		public string AnimationFlag
		{
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x178E734", Offset = "0x178E734", VA = "0x178E734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x178E798", Offset = "0x178E798", VA = "0x178E798")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x178E7B8", Offset = "0x178E7B8", VA = "0x178E7B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x178E7DC", Offset = "0x178E7DC", VA = "0x178E7DC")]
		public void PlayShortAnimation(string flg)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x178E808", Offset = "0x178E808", VA = "0x178E808")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x892CB8", Offset = "0x892CB8")]
		private IEnumerator CoShortAnimation(string flg)
		{
			return null;
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x178E880", Offset = "0x178E880", VA = "0x178E880")]
		public void PlayAnimation(string flg)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x178E8AC", Offset = "0x178E8AC", VA = "0x178E8AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x892D18", Offset = "0x892D18")]
		private IEnumerator CoAnimation(string flg)
		{
			return null;
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x178E924", Offset = "0x178E924", VA = "0x178E924")]
		public InitialAnimation()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class PlayerInZoo : StaticAccessBehaviour<PlayerInZoo>
	{
		[Token(Token = "0x200028D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C1C", Offset = "0x880C1C")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HandLR leftRight;

			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0xC14E28", Offset = "0xC14E28", VA = "0xC14E28")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0xC14E30", Offset = "0xC14E30", VA = "0xC14E30")]
			internal bool <Start>b__0(ZVRDistanceGrabber x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200028E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C2C", Offset = "0x880C2C")]
		private sealed class <CoFadeIn>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerInZoo <>4__this;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fadeTime;

			[Token(Token = "0x17000105")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BCE")]
				[Address(RVA = "0xC14F98", Offset = "0xC14F98", VA = "0xC14F98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000106")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BD0")]
				[Address(RVA = "0xC14FE0", Offset = "0xC14FE0", VA = "0xC14FE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0xC14EA8", Offset = "0xC14EA8", VA = "0xC14EA8")]
			[DebuggerHidden]
			public <CoFadeIn>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0xC14ED4", Offset = "0xC14ED4", VA = "0xC14ED4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0xC14ED8", Offset = "0xC14ED8", VA = "0xC14ED8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0xC14FA0", Offset = "0xC14FA0", VA = "0xC14FA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C3C", Offset = "0x880C3C")]
		private sealed class <CoFadeOut>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerInZoo <>4__this;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fadeTime;

			[Token(Token = "0x17000107")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BD4")]
				[Address(RVA = "0xC150D4", Offset = "0xC150D4", VA = "0xC150D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000108")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BD6")]
				[Address(RVA = "0xC1511C", Offset = "0xC1511C", VA = "0xC1511C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0xC14FE8", Offset = "0xC14FE8", VA = "0xC14FE8")]
			[DebuggerHidden]
			public <CoFadeOut>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xC15014", Offset = "0xC15014", VA = "0xC15014", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0xC15018", Offset = "0xC15018", VA = "0xC15018", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0xC150DC", Offset = "0xC150DC", VA = "0xC150DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C4C", Offset = "0x880C4C")]
		private sealed class <CoMovePuzzleSelect>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerInZoo <>4__this;

			[Token(Token = "0x4000E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ZooToPuzzleManager.SceneFrom baseScene;

			[Token(Token = "0x17000109")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BDA")]
				[Address(RVA = "0xC15B1C", Offset = "0xC15B1C", VA = "0xC15B1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BDC")]
				[Address(RVA = "0xC15B64", Offset = "0xC15B64", VA = "0xC15B64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0xC1559C", Offset = "0xC1559C", VA = "0xC1559C")]
			[DebuggerHidden]
			public <CoMovePuzzleSelect>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0xC155C8", Offset = "0xC155C8", VA = "0xC155C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0xC155CC", Offset = "0xC155CC", VA = "0xC155CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0xC15B24", Offset = "0xC15B24", VA = "0xC15B24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000291")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C5C", Offset = "0x880C5C")]
		private sealed class <CoWaitForOperationAllSwitch>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerInZoo <>4__this;

			[Token(Token = "0x1700010B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BE0")]
				[Address(RVA = "0xC15CE0", Offset = "0xC15CE0", VA = "0xC15CE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BE2")]
				[Address(RVA = "0xC15D28", Offset = "0xC15D28", VA = "0xC15D28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0xC15B6C", Offset = "0xC15B6C", VA = "0xC15B6C")]
			[DebuggerHidden]
			public <CoWaitForOperationAllSwitch>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0xC15B98", Offset = "0xC15B98", VA = "0xC15B98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0xC15B9C", Offset = "0xC15B9C", VA = "0xC15B9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0xC15CE8", Offset = "0xC15CE8", VA = "0xC15CE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000292")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C6C", Offset = "0x880C6C")]
		private sealed class <CoMoveOriginalPosition>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerInZoo <>4__this;

			[Token(Token = "0x1700010D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BE6")]
				[Address(RVA = "0xC1554C", Offset = "0xC1554C", VA = "0xC1554C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BE8")]
				[Address(RVA = "0xC15594", Offset = "0xC15594", VA = "0xC15594", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0xC15124", Offset = "0xC15124", VA = "0xC15124")]
			[DebuggerHidden]
			public <CoMoveOriginalPosition>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0xC15150", Offset = "0xC15150", VA = "0xC15150", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0xC15154", Offset = "0xC15154", VA = "0xC15154", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0xC15554", Offset = "0xC15554", VA = "0xC15554", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8876DC", Offset = "0x8876DC")]
		[SerializeField]
		private bool isSimpleInit;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887728", Offset = "0x887728")]
		private GameObject puzzleSelectPrefab;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887774", Offset = "0x887774")]
		[SerializeField]
		private GameObject howToGuide;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8877C0", Offset = "0x8877C0")]
		[SerializeField]
		public SoundController soundController;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ZVRScreenFade _screenFade;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action _originalPositionCallBack;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HowtoGuideController _howToGuideController;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioClip _tutorialVoice;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource _tutorialSource;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88780C", Offset = "0x88780C")]
		private ZVRDistanceGrabber[] <LeftRightHands>k__BackingField;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88781C", Offset = "0x88781C")]
		private OVRCameraRig <CameraRig>k__BackingField;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88782C", Offset = "0x88782C")]
		private OpenPuzzleSelectFromHand <MapHand>k__BackingField;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88783C", Offset = "0x88783C")]
		private PlayArea <PlayArea>k__BackingField;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88784C", Offset = "0x88784C")]
		private bool <IsFadeOff>k__BackingField;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88785C", Offset = "0x88785C")]
		private bool <IsMapMoveReady>k__BackingField;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private readonly Vector3 _howToGuidePosition;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Vector3 _howToGuideRotation;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool _isPlaying;

		[Token(Token = "0x170000FC")]
		public ZVRDistanceGrabber[] LeftRightHands
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x1117FFC", Offset = "0x1117FFC", VA = "0x1117FFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892E18", Offset = "0x892E18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0x1118004", Offset = "0x1118004", VA = "0x1118004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892E28", Offset = "0x892E28")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public OVRCameraRig CameraRig
		{
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0x111800C", Offset = "0x111800C", VA = "0x111800C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892E38", Offset = "0x892E38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x1118014", Offset = "0x1118014", VA = "0x1118014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892E48", Offset = "0x892E48")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public OpenPuzzleSelectFromHand MapHand
		{
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x111801C", Offset = "0x111801C", VA = "0x111801C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892E58", Offset = "0x892E58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x1118024", Offset = "0x1118024", VA = "0x1118024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892E68", Offset = "0x892E68")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public PlayArea PlayArea
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x111802C", Offset = "0x111802C", VA = "0x111802C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892E78", Offset = "0x892E78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x1118034", Offset = "0x1118034", VA = "0x1118034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892E88", Offset = "0x892E88")]
			private set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public bool IsHowToGuide
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0x111803C", Offset = "0x111803C", VA = "0x111803C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000101")]
		public bool IsMapTutorial
		{
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0x11180DC", Offset = "0x11180DC", VA = "0x11180DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000102")]
		public bool IsFadeOff
		{
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0x1118170", Offset = "0x1118170", VA = "0x1118170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892E98", Offset = "0x892E98")]
			private get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x1118178", Offset = "0x1118178", VA = "0x1118178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892EA8", Offset = "0x892EA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public bool IsTutorialPlaying
		{
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x1118184", Offset = "0x1118184", VA = "0x1118184")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000104")]
		public bool IsMapMoveReady
		{
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x1118218", Offset = "0x1118218", VA = "0x1118218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892EB8", Offset = "0x892EB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x1118220", Offset = "0x1118220", VA = "0x1118220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892EC8", Offset = "0x892EC8")]
			set
			{
			}
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x111822C", Offset = "0x111822C", VA = "0x111822C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x11183E8", Offset = "0x11183E8", VA = "0x11183E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x111856C", Offset = "0x111856C", VA = "0x111856C")]
		private void CreateHowToGuide()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x11186D8", Offset = "0x11186D8", VA = "0x11186D8")]
		public void ShowHowToGuide(Tips lv)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x11187B4", Offset = "0x11187B4", VA = "0x11187B4")]
		public void HideHowToGuide()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x1118844", Offset = "0x1118844", VA = "0x1118844")]
		public void SetKinematic(bool on)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x111890C", Offset = "0x111890C", VA = "0x111890C")]
		public GameObject GetCenterEye()
		{
			return null;
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x1115CA4", Offset = "0x1115CA4", VA = "0x1115CA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x892ED8", Offset = "0x892ED8")]
		public IEnumerator CoFadeIn(float fadeTime = 0.8f)
		{
			return null;
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x1115AC0", Offset = "0x1115AC0", VA = "0x1115AC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x892F38", Offset = "0x892F38")]
		public IEnumerator CoFadeOut(float fadeTime = 0.8f)
		{
			return null;
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x1118928", Offset = "0x1118928", VA = "0x1118928")]
		public void ForceRelease()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x11189A4", Offset = "0x11189A4", VA = "0x11189A4")]
		public void OperationAllSwitch(bool isEnable, OperationUtility.Reason reason = OperationUtility.Reason.CutScene)
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x1118A30", Offset = "0x1118A30", VA = "0x1118A30")]
		public void OperationSwitchExceptGrabber(bool isEnable, OperationUtility.Reason reason = OperationUtility.Reason.CutScene)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x1118A6C", Offset = "0x1118A6C", VA = "0x1118A6C")]
		public void MovePlayerToPuzzleSelect(ZooToPuzzleManager.SceneFrom baseScene, [Optional] Action backAction)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x1118AAC", Offset = "0x1118AAC", VA = "0x1118AAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x892F98", Offset = "0x892F98")]
		private IEnumerator CoMovePuzzleSelect(ZooToPuzzleManager.SceneFrom baseScene)
		{
			return null;
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x1118B28", Offset = "0x1118B28", VA = "0x1118B28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x892FF8", Offset = "0x892FF8")]
		private IEnumerator CoWaitForOperationAllSwitch()
		{
			return null;
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x1118B94", Offset = "0x1118B94", VA = "0x1118B94")]
		public void MovePlayerToOriginalPosition()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x1118C5C", Offset = "0x1118C5C", VA = "0x1118C5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x893058", Offset = "0x893058")]
		private IEnumerator CoMoveOriginalPosition()
		{
			return null;
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x1118CC8", Offset = "0x1118CC8", VA = "0x1118CC8")]
		public PlayerInZoo()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class SoundDelay : MonoBehaviour
	{
		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float delay;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource _audioSource;

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xE10CEC", Offset = "0xE10CEC", VA = "0xE10CEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xE10DA0", Offset = "0xE10DA0", VA = "0xE10DA0")]
		public SoundDelay()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class InitialAniamtionNoneOpt : MonoBehaviour
	{
		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string animationFlag;

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x178E6CC", Offset = "0x178E6CC", VA = "0x178E6CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x178E72C", Offset = "0x178E72C", VA = "0x178E72C")]
		public InitialAniamtionNoneOpt()
		{
		}
	}
}
namespace ZookeeperVR.Zoo
{
	[Token(Token = "0x2000295")]
	public class ActionPoint : MonoBehaviour
	{
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Forward;

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xE1E708", Offset = "0xE1E708", VA = "0xE1E708")]
		public void MoveCharacter(Transform character)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xE1E8E0", Offset = "0xE1E8E0", VA = "0xE1E8E0")]
		public ActionPoint()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class AreaAmbientSounds : MonoBehaviour
	{
		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88788C", Offset = "0x88788C")]
		[SerializeField]
		private AudioSource[] localAudioSources;

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xE25008", Offset = "0xE25008", VA = "0xE25008")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xE25090", Offset = "0xE25090", VA = "0xE25090")]
		public void PlayAmbientSounds()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xE25108", Offset = "0xE25108", VA = "0xE25108")]
		public void StopAmbientSound()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xE25180", Offset = "0xE25180", VA = "0xE25180")]
		public AreaAmbientSounds()
		{
		}
	}
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x880C7C", Offset = "0x880C7C")]
	public class AreaBottomCollider : MonoBehaviour
	{
		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoxCollider _boxCollider;

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xE25188", Offset = "0xE25188", VA = "0xE25188")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xE25220", Offset = "0xE25220", VA = "0xE25220")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xE254C8", Offset = "0xE254C8", VA = "0xE254C8")]
		private void OnCollisionExit(Collision other)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xE254E8", Offset = "0xE254E8", VA = "0xE254E8")]
		public AreaBottomCollider()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class AreaHighGroundPoint : MonoBehaviour
	{
		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8878D8", Offset = "0x8878D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8878D8", Offset = "0x8878D8")]
		private Transform highGroundPoint;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887948", Offset = "0x887948")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x887948", Offset = "0x887948")]
		private float scope;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8879AC", Offset = "0x8879AC")]
		[SerializeField]
		private Transform eatPoint1;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8879F8", Offset = "0x8879F8")]
		[SerializeField]
		private Transform eatPoint2;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRAnimal[] _animals;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _playerTransform;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isLockEatPoint1;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _isLockEatPoint2;

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xE254F0", Offset = "0xE254F0", VA = "0xE254F0")]
		public void Prepare(int areaId)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xE255A8", Offset = "0xE255A8", VA = "0xE255A8")]
		public bool CheckHighGroundApproaching()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xE22E64", Offset = "0xE22E64", VA = "0xE22E64")]
		public Transform SetNearEatPoint(OVRAnimal animal)
		{
			return null;
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xE23520", Offset = "0xE23520", VA = "0xE23520")]
		public void ResetLock()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xE256C8", Offset = "0xE256C8", VA = "0xE256C8")]
		public AreaHighGroundPoint()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class AreaManager : OnlyOneBehavior<AreaManager>, IEnvPrefabLoadedReciever, IEventSystemHandler
	{
		[Serializable]
		[Token(Token = "0x200029A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880CDC", Offset = "0x880CDC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<AreaSettings, int> <>9__14_0;

			[Token(Token = "0x4000EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<AreaSettings, AreaSettings> <>9__14_1;

			[Token(Token = "0x6000C10")]
			[Address(RVA = "0xC02914", Offset = "0xC02914", VA = "0xC02914")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C11")]
			[Address(RVA = "0xC0291C", Offset = "0xC0291C", VA = "0xC0291C")]
			internal int <CoAwake>b__14_0(AreaSettings x)
			{
				return default(int);
			}

			[Token(Token = "0x6000C12")]
			[Address(RVA = "0xC02934", Offset = "0xC02934", VA = "0xC02934")]
			internal AreaSettings <CoAwake>b__14_1(AreaSettings y)
			{
				return null;
			}
		}

		[Token(Token = "0x200029B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880CEC", Offset = "0x880CEC")]
		private sealed class <CoAwake>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AreaManager <>4__this;

			[Token(Token = "0x17000110")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C16")]
				[Address(RVA = "0xC03180", Offset = "0xC03180", VA = "0xC03180", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000111")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C18")]
				[Address(RVA = "0xC031C8", Offset = "0xC031C8", VA = "0xC031C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C13")]
			[Address(RVA = "0xC02968", Offset = "0xC02968", VA = "0xC02968")]
			[DebuggerHidden]
			public <CoAwake>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000C14")]
			[Address(RVA = "0xC02994", Offset = "0xC02994", VA = "0xC02994", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C15")]
			[Address(RVA = "0xC02998", Offset = "0xC02998", VA = "0xC02998", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C17")]
			[Address(RVA = "0xC03188", Offset = "0xC03188", VA = "0xC03188", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200029C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880CFC", Offset = "0x880CFC")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int areaId;

			[Token(Token = "0x6000C19")]
			[Address(RVA = "0xC0293C", Offset = "0xC0293C", VA = "0xC0293C")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0xC02944", Offset = "0xC02944", VA = "0xC02944")]
			internal bool <EnableNextAreaAnimalFolder>b__0(AreaSettings x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x887A44", Offset = "0x887A44")]
		private AreaSettings[] <AreaSettingList>k__BackingField;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, AreaSettings> _areaSettingDictionary;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AreaAmbientSounds[] _ambientSounds;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FishingGround[] _fishingGrounds;

		[Token(Token = "0x1700010F")]
		public AreaSettings[] AreaSettingList
		{
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0xE256DC", Offset = "0xE256DC", VA = "0xE256DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893248", Offset = "0x893248")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0xE256E4", Offset = "0xE256E4", VA = "0xE256E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893258", Offset = "0x893258")]
			private set
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event Action NotifyAreaTimelineStart
		{
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0xE256EC", Offset = "0xE256EC", VA = "0xE256EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893268", Offset = "0x893268")]
			add
			{
			}
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0xE2578C", Offset = "0xE2578C", VA = "0xE2578C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893278", Offset = "0x893278")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action NotifyAreaChangeFinish
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0xE2582C", Offset = "0xE2582C", VA = "0xE2582C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893288", Offset = "0x893288")]
			add
			{
			}
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0xE258CC", Offset = "0xE258CC", VA = "0xE258CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893298", Offset = "0x893298")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xE2596C", Offset = "0xE2596C", VA = "0xE2596C", Slot = "6")]
		public void OnPrefabLoaded()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xE25998", Offset = "0xE25998", VA = "0xE25998")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8932A8", Offset = "0x8932A8")]
		private IEnumerator CoAwake()
		{
			return null;
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xE25A04", Offset = "0xE25A04", VA = "0xE25A04")]
		public AreaSettings GetAreaSettings(int areaId)
		{
			return null;
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xE20D74", Offset = "0xE20D74", VA = "0xE20D74")]
		public Transform[] GetTargetPoints(int areaId)
		{
			return null;
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xE25B5C", Offset = "0xE25B5C", VA = "0xE25B5C")]
		public GameObject GetAnimalFolder(int areaId, int areaLevel, bool isNext = false)
		{
			return null;
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xE25DFC", Offset = "0xE25DFC", VA = "0xE25DFC")]
		public void EnableNextAreaAnimalFolder()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xE2645C", Offset = "0xE2645C", VA = "0xE2645C")]
		public void ShowHideStaff(bool isEnable)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xE26670", Offset = "0xE26670", VA = "0xE26670")]
		public void PlayAllAmbientSound()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xE266D8", Offset = "0xE266D8", VA = "0xE266D8")]
		public void StopAllAmbientSound()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xE26740", Offset = "0xE26740", VA = "0xE26740")]
		public void CallNotifyAreaTimelineStart()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xE26754", Offset = "0xE26754", VA = "0xE26754")]
		public void SetSubQuestFishing(bool isStart)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xE267B8", Offset = "0xE267B8", VA = "0xE267B8")]
		public void SetMissedCount(bool isReset = false)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xE26834", Offset = "0xE26834", VA = "0xE26834")]
		public AreaManager()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class AreaSettings : MonoBehaviour, IEnvPrefabCacheReciever, IEventSystemHandler
	{
		[Serializable]
		[Token(Token = "0x200029E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880D0C", Offset = "0x880D0C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<OVRAnimal[], IEnumerable<OVRAnimal>> <>9__28_0;

			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0xC03C78", Offset = "0xC03C78", VA = "0xC03C78")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0xC03C80", Offset = "0xC03C80", VA = "0xC03C80")]
			internal IEnumerable<OVRAnimal> <Prepare>b__28_0(OVRAnimal[] animals)
			{
				return null;
			}
		}

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x887A74", Offset = "0x887A74")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887A74", Offset = "0x887A74")]
		private int areaId;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x887AD8", Offset = "0x887AD8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887AD8", Offset = "0x887AD8")]
		private int targetChangeTime;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887B40", Offset = "0x887B40")]
		private GameObject areaLv1;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject areaLv2;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject areaLv3;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject areaLv4;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject areaLv5;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887BCC", Offset = "0x887BCC")]
		[SerializeField]
		private GameObject animalFolderLv1;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject animalFolderLv2;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject animalFolderLv3;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject animalFolderLv4;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject animalFolderLv5;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887C58", Offset = "0x887C58")]
		[SerializeField]
		private GameObject colliderLv1;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject colliderLv2;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject colliderLv3;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject colliderLv4;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject colliderLv5;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887CE4", Offset = "0x887CE4")]
		[SerializeField]
		private GameObject areaVisitors;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject areaPointGraphs;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject areaNotificationPoints;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject areaWalkAnimals;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject areaHighGroundPoint;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887D70", Offset = "0x887D70")]
		[SerializeField]
		private GraphMask animalGraph;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Dictionary<GameObject, OVRAnimal[]> _localAnimals;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private VisitorMoveTargetArea[] _localMoveTargetAreas;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform[] _localWalkTargets;

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xE278D8", Offset = "0xE278D8", VA = "0xE278D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xE278DC", Offset = "0xE278DC", VA = "0xE278DC")]
		private void ResetArea()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xE27E64", Offset = "0xE27E64", VA = "0xE27E64")]
		public void Prepare()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xE28580", Offset = "0xE28580", VA = "0xE28580")]
		public void InitializeNotifications()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xE28674", Offset = "0xE28674", VA = "0xE28674")]
		public void InitializeHighGroundPoint()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xE28768", Offset = "0xE28768", VA = "0xE28768")]
		public int GetAreaId()
		{
			return default(int);
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xE1F210", Offset = "0xE1F210", VA = "0xE1F210")]
		public OVRAnimal[] GetAnimals()
		{
			return null;
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xE28770", Offset = "0xE28770", VA = "0xE28770")]
		public int GetChangeTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xE28778", Offset = "0xE28778", VA = "0xE28778")]
		public VisitorMoveTargetArea[] GetVisitorMoveTargetAreaList()
		{
			return null;
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xE287F4", Offset = "0xE287F4", VA = "0xE287F4")]
		public ZookeeperVR.Visitor.Visitor[] GetVisitorList(bool invisible)
		{
			return null;
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xE288A8", Offset = "0xE288A8", VA = "0xE288A8")]
		public Transform[] GetWalkAnimalTargetList()
		{
			return null;
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xE25A60", Offset = "0xE25A60", VA = "0xE25A60")]
		public Transform[] GetTargetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xE25C28", Offset = "0xE25C28", VA = "0xE25C28")]
		public GameObject GetAnimalFolder(int targetLv)
		{
			return null;
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xE25FC0", Offset = "0xE25FC0", VA = "0xE25FC0")]
		public void SetAreaDisplay(int id, int lv)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xE2650C", Offset = "0xE2650C", VA = "0xE2650C")]
		public void ShowHideStaff(bool isEnable)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xE288B0", Offset = "0xE288B0", VA = "0xE288B0", Slot = "4")]
		public void OnPrefabPrepareCache()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xE28990", Offset = "0xE28990", VA = "0xE28990", Slot = "5")]
		public void OnPrefabUseCache()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xE28994", Offset = "0xE28994", VA = "0xE28994")]
		public AreaSettings()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class AstarModulesManager : OnlyOneBehavior<AstarModulesManager>
	{
		[Serializable]
		[Token(Token = "0x20002A0")]
		public class PointGraphRoot
		{
			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string PointGraphName;

			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string RootObjectName;

			[Token(Token = "0x6000C33")]
			[Address(RVA = "0xC03CB4", Offset = "0xC03CB4", VA = "0xC03CB4")]
			public PointGraphRoot()
			{
			}
		}

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887DBC", Offset = "0x887DBC")]
		[SerializeField]
		private GameObject[] graphUpdates;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887E08", Offset = "0x887E08")]
		private PointGraphRoot[] _findPointGraphArray;

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xE28E40", Offset = "0xE28E40", VA = "0xE28E40")]
		public void StartScan()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xE28F74", Offset = "0xE28F74", VA = "0xE28F74")]
		private void FindPointGraphRoot()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xE29160", Offset = "0xE29160", VA = "0xE29160")]
		public AstarModulesManager()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class BuildSelectCanvas : MonoBehaviour
	{
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xE32D18", Offset = "0xE32D18", VA = "0xE32D18")]
		public void Show()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xE32D40", Offset = "0xE32D40", VA = "0xE32D40")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xE32D68", Offset = "0xE32D68", VA = "0xE32D68")]
		public BuildSelectCanvas()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class CleaningHose : MonoBehaviour, IGrabbableMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887E54", Offset = "0x887E54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x887E54", Offset = "0x887E54")]
		[SerializeField]
		private int waterPressure;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887EBC", Offset = "0x887EBC")]
		[SerializeField]
		private ParticleSystem waterEffect;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887F08", Offset = "0x887F08")]
		[SerializeField]
		private AudioClip waterSE;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip washingSE;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ZVRDistanceGrabber _handGrabber;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ZVRDistanceGrabbable _fireHoseGrabbable;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CleaningHoseWater _hoseWater;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource _audioSource;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ZVRHand _hand;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isReady;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isPlaying;

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x1278E60", Offset = "0x1278E60", VA = "0x1278E60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1278F24", Offset = "0x1278F24", VA = "0x1278F24")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1278E64", Offset = "0x1278E64", VA = "0x1278E64")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1278FDC", Offset = "0x1278FDC", VA = "0x1278FDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1278F40", Offset = "0x1278F40", VA = "0x1278F40")]
		private void SetWaterPressure()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x12790F0", Offset = "0x12790F0", VA = "0x12790F0")]
		public void ForceGrab()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x1279338", Offset = "0x1279338", VA = "0x1279338")]
		public void ForceRelease()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x12793CC", Offset = "0x12793CC", VA = "0x12793CC", Slot = "4")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x12794FC", Offset = "0x12794FC", VA = "0x12794FC", Slot = "5")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x1279588", Offset = "0x1279588", VA = "0x1279588")]
		public void SetWaterParticle(Material dirtyMaterial, int cleaningCount, ParticleSystem washingEffect)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x12796C8", Offset = "0x12796C8", VA = "0x12796C8")]
		public CleaningHose()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x12796D8", Offset = "0x12796D8", VA = "0x12796D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893358", Offset = "0x893358")]
		private void <SetWaterParticle>b__20_0(bool flg)
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class CleaningHoseWater : MonoBehaviour
	{
		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material _dirtyMaterial;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _cleaningCount;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem _washingEffect;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action<bool> _changeAction;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SubQuestBalloonIcon _balloonIcon;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isSend;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _isWashing;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Blend;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _elapsedTime;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystem _prefab;

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x12796B8", Offset = "0x12796B8", VA = "0x12796B8")]
		public void Init(Material dirtyMaterial, int cleaningCount, ParticleSystem washingEffect, Action<bool> changeAction)
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x12797F0", Offset = "0x12797F0", VA = "0x12797F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1279888", Offset = "0x1279888", VA = "0x1279888")]
		private void OnParticleCollision(GameObject obj)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1279B04", Offset = "0x1279B04", VA = "0x1279B04")]
		private void UpdateSubQuestBar(float current)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x1279C90", Offset = "0x1279C90", VA = "0x1279C90")]
		private void SendActionNotification(ZookeeperVR.Object.Animal animal)
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1279ED0", Offset = "0x1279ED0", VA = "0x1279ED0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1279F98", Offset = "0x1279F98", VA = "0x1279F98")]
		public CleaningHoseWater()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class DancingCactus : MonoBehaviour
	{
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1282BB4", Offset = "0x1282BB4", VA = "0x1282BB4")]
		public void OnPointerClick()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x1282D2C", Offset = "0x1282D2C", VA = "0x1282D2C")]
		public DancingCactus()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class EventBalloon : MonoBehaviour
	{
		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected MessageBalloon messageBalloon;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Staff staff;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GameObject image;

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1237574", Offset = "0x1237574", VA = "0x1237574", Slot = "4")]
		public virtual void OnClicked()
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1237640", Offset = "0x1237640", VA = "0x1237640", Slot = "5")]
		protected virtual void Canceled()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1237660", Offset = "0x1237660", VA = "0x1237660", Slot = "6")]
		protected virtual void Selected()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x123767C", Offset = "0x123767C", VA = "0x123767C")]
		public EventBalloon()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class FishingFloat : MonoBehaviour
	{
		[Token(Token = "0x20002A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880D1C", Offset = "0x880D1C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4000F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FishingFloat <>4__this;

			[Token(Token = "0x4000F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float atari;

			[Token(Token = "0x6000C69")]
			[Address(RVA = "0xC08D24", Offset = "0xC08D24", VA = "0xC08D24")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0xC08D2C", Offset = "0xC08D2C", VA = "0xC08D2C")]
			internal void <Hit>b__0()
			{
			}
		}

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887F94", Offset = "0x887F94")]
		[SerializeField]
		private float particleHeight;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887FE0", Offset = "0x887FE0")]
		[SerializeField]
		private Transform floatTransform;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem splashSystem;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem hamonSystem;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem hitsSystem;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip inWaterSE;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip biteSE;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip hookingSE;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88808C", Offset = "0x88808C")]
		private bool <IsFishingEnd>k__BackingField;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88809C", Offset = "0x88809C")]
		private Rigidbody <PreyPrefab>k__BackingField;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8880AC", Offset = "0x8880AC")]
		private bool <IsUsed>k__BackingField;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AudioSource _audioSource;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject _preyGameObject;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody _rigidBody;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _forceAngle;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Action<float> _vibration;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Tweener _tween;

		[Token(Token = "0x17000112")]
		public bool IsFishingEnd
		{
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0x12AD8C0", Offset = "0x12AD8C0", VA = "0x12AD8C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893368", Offset = "0x893368")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x12AD8C8", Offset = "0x12AD8C8", VA = "0x12AD8C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893378", Offset = "0x893378")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public Rigidbody PreyPrefab
		{
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x12AD8D4", Offset = "0x12AD8D4", VA = "0x12AD8D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893388", Offset = "0x893388")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x12AD8DC", Offset = "0x12AD8DC", VA = "0x12AD8DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893398", Offset = "0x893398")]
			private set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public bool IsUsed
		{
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x12AD8E4", Offset = "0x12AD8E4", VA = "0x12AD8E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8933A8", Offset = "0x8933A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x12AD8EC", Offset = "0x12AD8EC", VA = "0x12AD8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8933B8", Offset = "0x8933B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public ParticleSystem GetSplashSystem
		{
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x12AD8F8", Offset = "0x12AD8F8", VA = "0x12AD8F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x12AD900", Offset = "0x12AD900", VA = "0x12AD900")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x12ADAA0", Offset = "0x12ADAA0", VA = "0x12ADAA0")]
		public void SetAddForce(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x12ADB3C", Offset = "0x12ADB3C", VA = "0x12ADB3C")]
		public void OnFishingStart(float height)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x12ADE0C", Offset = "0x12ADE0C", VA = "0x12ADE0C")]
		public void OnFishingEnd()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x12AE1E4", Offset = "0x12AE1E4", VA = "0x12AE1E4")]
		public void SetPrey(GameObject prey)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x12AE2E0", Offset = "0x12AE2E0", VA = "0x12AE2E0")]
		public void Hit(float atari, bool isFood)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x12AE4D0", Offset = "0x12AE4D0", VA = "0x12AE4D0")]
		public void SetVibration(Action<float> action)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x12AE270", Offset = "0x12AE270", VA = "0x12AE270")]
		private void Vibration(float amplitude)
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x12AE4D8", Offset = "0x12AE4D8", VA = "0x12AE4D8")]
		public void LookAtRodTop(Transform t)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x12AE554", Offset = "0x12AE554", VA = "0x12AE554")]
		private void PlayFloating()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x12AE5C8", Offset = "0x12AE5C8", VA = "0x12AE5C8")]
		private void StopFloating()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x12ADC74", Offset = "0x12ADC74", VA = "0x12ADC74")]
		private void PlaySplash()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x12ADDC0", Offset = "0x12ADDC0", VA = "0x12ADDC0")]
		private void PlayHamon()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x12ADA08", Offset = "0x12ADA08", VA = "0x12ADA08")]
		private void StopHamon()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x12AE464", Offset = "0x12AE464", VA = "0x12AE464")]
		private void PlayHits()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x12ADA54", Offset = "0x12ADA54", VA = "0x12ADA54")]
		private void StopHits()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x12AE624", Offset = "0x12AE624", VA = "0x12AE624")]
		public FishingFloat()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class FishingGround : MonoBehaviour
	{
		[Token(Token = "0x20002A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880D2C", Offset = "0x880D2C")]
		private sealed class <CoRandomCatchFloat>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishingGround <>4__this;

			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <prey>5__2;

			[Token(Token = "0x4000F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <isFood>5__3;

			[Token(Token = "0x17000116")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C75")]
				[Address(RVA = "0xC090C8", Offset = "0xC090C8", VA = "0xC090C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000117")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C77")]
				[Address(RVA = "0xC09110", Offset = "0xC09110", VA = "0xC09110", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C72")]
			[Address(RVA = "0xC08DE0", Offset = "0xC08DE0", VA = "0xC08DE0")]
			[DebuggerHidden]
			public <CoRandomCatchFloat>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000C73")]
			[Address(RVA = "0xC08E0C", Offset = "0xC08E0C", VA = "0xC08E0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C74")]
			[Address(RVA = "0xC08E10", Offset = "0xC08E10", VA = "0xC08E10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C76")]
			[Address(RVA = "0xC090D0", Offset = "0xC090D0", VA = "0xC090D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880D3C", Offset = "0x880D3C")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Food food;

			[Token(Token = "0x6000C78")]
			[Address(RVA = "0xC08DA8", Offset = "0xC08DA8", VA = "0xC08DA8")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6000C79")]
			[Address(RVA = "0xC08DB0", Offset = "0xC08DB0", VA = "0xC08DB0")]
			internal bool <LotteryPrey>b__0(SubQuestData.FoodData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8880BC", Offset = "0x8880BC")]
		[SerializeField]
		private GameObject[] fishingGroundList;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888108", Offset = "0x888108")]
		[SerializeField]
		private int minWaitingTime;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int maxWaitingTime;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float atariValidTime;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888174", Offset = "0x888174")]
		[SerializeField]
		private GameObject[] preyList;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FishingFloat _fishingFloat;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isReady;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isSubQuest;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _missedCount;

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x12AE640", Offset = "0x12AE640", VA = "0x12AE640")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x12AE7EC", Offset = "0x12AE7EC", VA = "0x12AE7EC")]
		public void StartRandomCatchFloat(FishingFloat fishingFloat)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x12AE858", Offset = "0x12AE858", VA = "0x12AE858")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8933C8", Offset = "0x8933C8")]
		private IEnumerator CoRandomCatchFloat()
		{
			return null;
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x12AE8C4", Offset = "0x12AE8C4", VA = "0x12AE8C4")]
		private GameObject LotteryPrey()
		{
			return null;
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x12AEC10", Offset = "0x12AEC10", VA = "0x12AEC10")]
		public void StartFishingSubQuest(bool isStart)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x12AEC1C", Offset = "0x12AEC1C", VA = "0x12AEC1C")]
		public void SetMissedCount(bool isReset)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x12AEC38", Offset = "0x12AEC38", VA = "0x12AEC38")]
		public FishingGround()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x880D4C", Offset = "0x880D4C")]
	public class FishingGroundCollider : MonoBehaviour
	{
		[Token(Token = "0x4000F1B")]
		private const string FLOAT_TAG = "FishingFloat";

		[Token(Token = "0x4000F1C")]
		private const string FOOD_TAG = "Food";

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8881C0", Offset = "0x8881C0")]
		private FishingGround <FishingGround>k__BackingField;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem _splashSystem;

		[Token(Token = "0x17000118")]
		public FishingGround FishingGround
		{
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0x12AEC54", Offset = "0x12AEC54", VA = "0x12AEC54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893478", Offset = "0x893478")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0x12AEC5C", Offset = "0x12AEC5C", VA = "0x12AEC5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893488", Offset = "0x893488")]
			set
			{
			}
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x12AEC64", Offset = "0x12AEC64", VA = "0x12AEC64")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x12AEECC", Offset = "0x12AEECC", VA = "0x12AEECC")]
		private void PlaySplash(Vector3 pos)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x12AF028", Offset = "0x12AF028", VA = "0x12AF028")]
		public FishingGroundCollider()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class FishingRod : MonoBehaviour, IGrabbableMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x20002AD")]
		private enum State
		{
			[Token(Token = "0x4000F41")]
			READY,
			[Token(Token = "0x4000F42")]
			CASTING,
			[Token(Token = "0x4000F43")]
			RETRIEVE,
			[Token(Token = "0x4000F44")]
			FISHING,
			[Token(Token = "0x4000F45")]
			WAITING
		}

		[Token(Token = "0x20002AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880DAC", Offset = "0x880DAC")]
		private sealed class <CoCasting>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishingRod <>4__this;

			[Token(Token = "0x4000F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 angularVelocity;

			[Token(Token = "0x4000F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <linearVelocity>5__2;

			[Token(Token = "0x1700011A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C97")]
				[Address(RVA = "0xC094C4", Offset = "0xC094C4", VA = "0xC094C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C99")]
				[Address(RVA = "0xC0950C", Offset = "0xC0950C", VA = "0xC0950C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C94")]
			[Address(RVA = "0xC09118", Offset = "0xC09118", VA = "0xC09118")]
			[DebuggerHidden]
			public <CoCasting>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6000C95")]
			[Address(RVA = "0xC09144", Offset = "0xC09144", VA = "0xC09144", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C96")]
			[Address(RVA = "0xC09148", Offset = "0xC09148", VA = "0xC09148", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C98")]
			[Address(RVA = "0xC094CC", Offset = "0xC094CC", VA = "0xC094CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880DBC", Offset = "0x880DBC")]
		private sealed class <CoRetrieve>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishingRod <>4__this;

			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <target>5__2;

			[Token(Token = "0x4000F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x1700011C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C9D")]
				[Address(RVA = "0xC09A48", Offset = "0xC09A48", VA = "0xC09A48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C9F")]
				[Address(RVA = "0xC09A90", Offset = "0xC09A90", VA = "0xC09A90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0xC09514", Offset = "0xC09514", VA = "0xC09514")]
			[DebuggerHidden]
			public <CoRetrieve>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0xC09540", Offset = "0xC09540", VA = "0xC09540", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0xC09544", Offset = "0xC09544", VA = "0xC09544", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0xC09A50", Offset = "0xC09A50", VA = "0xC09A50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8881D0", Offset = "0x8881D0")]
		[SerializeField]
		private float throwMagnitude;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88821C", Offset = "0x88821C")]
		[SerializeField]
		private float pullMagnitude;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888268", Offset = "0x888268")]
		private Gradient lineColor;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8882B4", Offset = "0x8882B4")]
		private Transform boneTop;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform boneFlexible;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888310", Offset = "0x888310")]
		[SerializeField]
		private GameObject fishingFloat;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpringJoint rodTop;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform rodBottom;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip castingSE;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip grabVoiceEn;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip grabVoiceJp;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject effFishCatch;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float floatMoveSpeed;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float throwAngularVelocity;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float pullAngularVelocity;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float throwAngleMin;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float throwAngleMax;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float pullAngleMin;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float pullAngleMax;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ZVRDistanceGrabbable _distanceGrabbable;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private LineRenderer _line;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FishingFloat _fishingFloat;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ObjectBase _preyObjectBase;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private AudioSource _audioSource;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private State _state;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 _velocity;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _smoothTime;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool _isInit;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AudioClip _voice;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HandLR _leftRightHand;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GameObject _effectPrefab;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ZVRDistanceGrabber _distanceGrabber;

		[Token(Token = "0x17000119")]
		private OVRInput.Controller GetLeftRight
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x12AF95C", Offset = "0x12AF95C", VA = "0x12AF95C")]
			get
			{
				return default(OVRInput.Controller);
			}
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x12AF030", Offset = "0x12AF030", VA = "0x12AF030")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x12AF10C", Offset = "0x12AF10C", VA = "0x12AF10C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x12AF248", Offset = "0x12AF248", VA = "0x12AF248")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x12AFC8C", Offset = "0x12AFC8C", VA = "0x12AFC8C")]
		private void SendActivity()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x12AFFE8", Offset = "0x12AFFE8", VA = "0x12AFFE8")]
		private bool IsTargetFish()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x12AF970", Offset = "0x12AF970", VA = "0x12AF970")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x893498", Offset = "0x893498")]
		private IEnumerator CoCasting(Vector3 angularVelocity)
		{
			return null;
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x12AFA00", Offset = "0x12AFA00", VA = "0x12AFA00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8934F8", Offset = "0x8934F8")]
		private IEnumerator CoRetrieve()
		{
			return null;
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x12AF66C", Offset = "0x12AF66C", VA = "0x12AF66C")]
		private void Flexible(bool isChase)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x12B014C", Offset = "0x12B014C", VA = "0x12B014C")]
		private void SetTopPosition(Vector3 targetPos)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x12AFA6C", Offset = "0x12AFA6C", VA = "0x12AFA6C")]
		private void DrawLine(bool isDraw)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x12AF7A4", Offset = "0x12AF7A4", VA = "0x12AF7A4")]
		private void CancelFishing()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x12B0214", Offset = "0x12B0214", VA = "0x12B0214")]
		private void CheckSubQuestTarget()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x12B039C", Offset = "0x12B039C", VA = "0x12B039C")]
		private void PlayVoice()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x12B0454", Offset = "0x12B0454", VA = "0x12B0454", Slot = "4")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x12B050C", Offset = "0x12B050C", VA = "0x12B050C", Slot = "5")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x12B0510", Offset = "0x12B0510", VA = "0x12B0510")]
		private void Vibration(float amplitude)
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x12B0598", Offset = "0x12B0598", VA = "0x12B0598")]
		private void SetEffect(GameObject obj)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x12AFF20", Offset = "0x12AFF20", VA = "0x12AFF20")]
		private void DestroyEffect()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x12B07CC", Offset = "0x12B07CC", VA = "0x12B07CC")]
		public FishingRod()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x12B0840", Offset = "0x12B0840", VA = "0x12B0840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893558", Offset = "0x893558")]
		private bool <SetEffect>b__52_0(ZVRDistanceGrabber x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002B0")]
	public class HowtoGuideController : MonoBehaviour
	{
		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8883BC", Offset = "0x8883BC")]
		private GameObject Tips1L;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject Tips1LTextEn;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject Tips1LTextJp;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888428", Offset = "0x888428")]
		[SerializeField]
		private GameObject Tips1R;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject Tips1RTextEn;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject Tips1RTextJp;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888494", Offset = "0x888494")]
		[SerializeField]
		private GameObject Tips2;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject Tips2TextEn;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject Tips2TextJp;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888500", Offset = "0x888500")]
		[SerializeField]
		private GameObject Tips3;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject Tips3TextEn;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject Tips3TextJp;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88856C", Offset = "0x88856C")]
		private GameObject Tips4A;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject Tips4ATextEn;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject Tips4ATextJp;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8885D8", Offset = "0x8885D8")]
		[SerializeField]
		private GameObject Tips4X;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject Tips4XTextEn;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject Tips4XTextJp;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888644", Offset = "0x888644")]
		private AudioClip tips2VoiceEn;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip tips2VoiceJp;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioClip tips3VoiceEn;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip tips3VoiceJp;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private AudioClip tips4VoiceEn;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private AudioClip tips4VoiceJp;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private AudioClip mapVoiceEn;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private AudioClip mapVoiceJp;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Tips _currentTipsLevel;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RepeatedSoundPlay _repeated;

		[Token(Token = "0x1700011E")]
		public bool IsMapTutorial
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x178D520", Offset = "0x178D520", VA = "0x178D520")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x178D530", Offset = "0x178D530", VA = "0x178D530")]
		private void Init()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x178D5E4", Offset = "0x178D5E4", VA = "0x178D5E4")]
		public void Show(Tips lv)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x178DCD4", Offset = "0x178DCD4", VA = "0x178DCD4")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x178D854", Offset = "0x178D854", VA = "0x178D854")]
		private void SwitchTips(Tips lv)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x178D9B4", Offset = "0x178D9B4", VA = "0x178D9B4")]
		private void SwitchLanguage(Tips lv)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x178D590", Offset = "0x178D590", VA = "0x178D590")]
		private void SetSelfActive(GameObject obj, bool isEnable)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x178DD9C", Offset = "0x178DD9C", VA = "0x178DD9C")]
		public AudioClip GetMapVoice()
		{
			return null;
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x178DE3C", Offset = "0x178DE3C", VA = "0x178DE3C")]
		public HowtoGuideController()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class ItemCollisionSoundEffect : MonoBehaviour
	{
		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888700", Offset = "0x888700")]
		[SerializeField]
		private AudioClip targetSE;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ZVRDistanceGrabbable _distanceGrabbable;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audioSource;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isReady;

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x107D180", Offset = "0x107D180", VA = "0x107D180")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x107D310", Offset = "0x107D310", VA = "0x107D310")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x107D318", Offset = "0x107D318", VA = "0x107D318")]
		private void DelayReady()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x107D324", Offset = "0x107D324", VA = "0x107D324")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x107D3E4", Offset = "0x107D3E4", VA = "0x107D3E4")]
		public ItemCollisionSoundEffect()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class LookAtPlayer : MonoBehaviour
	{
		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1082A78", Offset = "0x1082A78", VA = "0x1082A78")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1082BB0", Offset = "0x1082BB0", VA = "0x1082BB0")]
		public LookAtPlayer()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class MapController : MonoBehaviour, ITeleportMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88874C", Offset = "0x88874C")]
		[SerializeField]
		private Image[] areaImages;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888798", Offset = "0x888798")]
		[SerializeField]
		private Image[] zooImages;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8887E4", Offset = "0x8887E4")]
		[SerializeField]
		private RectTransform areaProgress;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888830", Offset = "0x888830")]
		[SerializeField]
		private Text areaText;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88887C", Offset = "0x88887C")]
		[SerializeField]
		private Slider zooSlider;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Slider areaSlider;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8888D8", Offset = "0x8888D8")]
		[SerializeField]
		private RectTransform iconPlayer;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Vector2[] _areaProgressPosition;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currentAreaId;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentLevel;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isUpdateZoo;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isUpdateArea;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _player;

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x108783C", Offset = "0x108783C", VA = "0x108783C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x10879F8", Offset = "0x10879F8", VA = "0x10879F8")]
		private void UpdateIconPlayer()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1087B5C", Offset = "0x1087B5C", VA = "0x1087B5C")]
		private void UpdateZooProgress()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x1087C2C", Offset = "0x1087C2C", VA = "0x1087C2C")]
		private void UpdateAreaProgress()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1087D94", Offset = "0x1087D94", VA = "0x1087D94", Slot = "4")]
		public void OnPreTeleport()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x1087D98", Offset = "0x1087D98", VA = "0x1087D98", Slot = "5")]
		public void OnPostTeleport()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x1087D9C", Offset = "0x1087D9C", VA = "0x1087D9C")]
		public MapController()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class MapControllerCustom : MonoBehaviour
	{
		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888924", Offset = "0x888924")]
		[SerializeField]
		private GameObject[] areaSprites;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888970", Offset = "0x888970")]
		[SerializeField]
		private GameObject[] lineSprites;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8889BC", Offset = "0x8889BC")]
		[SerializeField]
		private Transform areaProgress;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888A08", Offset = "0x888A08")]
		[SerializeField]
		private TextMeshPro areaText;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888A54", Offset = "0x888A54")]
		[SerializeField]
		private SpriteRenderer zooBar;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpriteRenderer areaBar;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888AB0", Offset = "0x888AB0")]
		[SerializeField]
		private Transform iconPlayer;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Vector3[] _areaProgressPosition;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currentAreaId;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentLevel;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isUpdateZoo;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isUpdateArea;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _player;

		[Token(Token = "0x4000F8A")]
		private const float AjustZooPosition = 0.15f;

		[Token(Token = "0x4000F8B")]
		private const float AjustZooWidth = 0.3f;

		[Token(Token = "0x4000F8C")]
		private const float AjustAreaPosition = 0.14f;

		[Token(Token = "0x4000F8D")]
		private const float AjustAreaWidth = 0.275f;

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x1087E98", Offset = "0x1087E98", VA = "0x1087E98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x10883B8", Offset = "0x10883B8", VA = "0x10883B8")]
		private void UpdateIconPlayer()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x1088054", Offset = "0x1088054", VA = "0x1088054")]
		private void UpdateZooProgress()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x1088264", Offset = "0x1088264", VA = "0x1088264")]
		private void UpdateAreaProgress()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x1088524", Offset = "0x1088524", VA = "0x1088524")]
		private void SetZooBar(int areaId)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1088648", Offset = "0x1088648", VA = "0x1088648")]
		private void SetAreaBar(int areaLevel)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x1088714", Offset = "0x1088714", VA = "0x1088714")]
		public MapControllerCustom()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class MessageBalloon : MonoBehaviour
	{
		[Token(Token = "0x20002B6")]
		public enum Type
		{
			[Token(Token = "0x4000F98")]
			Message,
			[Token(Token = "0x4000F99")]
			Ok,
			[Token(Token = "0x4000F9A")]
			YesNo
		}

		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880DCC", Offset = "0x880DCC")]
		private sealed class <CoHide>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MessageBalloon <>4__this;

			[Token(Token = "0x1700011F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CCA")]
				[Address(RVA = "0xC0F29C", Offset = "0xC0F29C", VA = "0xC0F29C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000120")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CCC")]
				[Address(RVA = "0xC0F2E4", Offset = "0xC0F2E4", VA = "0xC0F2E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0xC0F1BC", Offset = "0xC0F1BC", VA = "0xC0F1BC")]
			[DebuggerHidden]
			public <CoHide>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0xC0F1E8", Offset = "0xC0F1E8", VA = "0xC0F1E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0xC0F1EC", Offset = "0xC0F1EC", VA = "0xC0F1EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0xC0F2A4", Offset = "0xC0F2A4", VA = "0xC0F2A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text text;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button buttonY;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button buttonN;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject buttonContainer;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject body;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SoundController soundController;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Action okCallback;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action cancelCallback;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Action closeCallback;

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x13A32CC", Offset = "0x13A32CC", VA = "0x13A32CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x13A32EC", Offset = "0x13A32EC", VA = "0x13A32EC")]
		public void Init(string message, Type type = Type.Message, [Optional] Action _okCallback, [Optional] Action _cancelCallback)
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x13A3400", Offset = "0x13A3400", VA = "0x13A3400")]
		public void SetMessage(string message)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x13A3424", Offset = "0x13A3424", VA = "0x13A3424")]
		public void Show([Optional] Action _closeCallback, float duration = -1f)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x13A34C4", Offset = "0x13A34C4", VA = "0x13A34C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x893608", Offset = "0x893608")]
		private IEnumerator CoHide(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x13A3540", Offset = "0x13A3540", VA = "0x13A3540")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x13A3580", Offset = "0x13A3580", VA = "0x13A3580")]
		public void OnPressYesButton()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x13A35C8", Offset = "0x13A35C8", VA = "0x13A35C8")]
		public void OnPressNoButton()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x13A3610", Offset = "0x13A3610", VA = "0x13A3610")]
		public MessageBalloon()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class PlayArea : MonoBehaviour
	{
		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888B5C", Offset = "0x888B5C")]
		private int outPlayAreaMessageId;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int otherMessageId;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888BB8", Offset = "0x888BB8")]
		[SerializeField]
		private GameObject outsidePlayArea;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Collider> _colliderList;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _prefab;

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x1115740", Offset = "0x1115740", VA = "0x1115740")]
		public void OnAlert()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1115894", Offset = "0x1115894", VA = "0x1115894")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x1115B3C", Offset = "0x1115B3C", VA = "0x1115B3C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x1115D20", Offset = "0x1115D20", VA = "0x1115D20")]
		public void ResetPlayArea()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x1115E50", Offset = "0x1115E50", VA = "0x1115E50")]
		public PlayArea()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class QuestProgressBar : MonoBehaviour
	{
		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text textTitle;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text textProgress;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Slider progressGauge;

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x101EDD8", Offset = "0x101EDD8", VA = "0x101EDD8")]
		public void UpdateView(QuestData data)
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x101EFBC", Offset = "0x101EFBC", VA = "0x101EFBC")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x101EFE4", Offset = "0x101EFE4", VA = "0x101EFE4")]
		public QuestProgressBar()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class SimpleMessageBalloon : MonoBehaviour
	{
		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float visibleDistanceFromPlayer;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject body;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text text;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int messageId;

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xE0CAE4", Offset = "0xE0CAE4", VA = "0xE0CAE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xE0CB9C", Offset = "0xE0CB9C", VA = "0xE0CB9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xE0CB78", Offset = "0xE0CB78", VA = "0xE0CB78")]
		public void SetText(string message)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xE0CCFC", Offset = "0xE0CCFC", VA = "0xE0CCFC")]
		public void SetTimedText(string message)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xE0CDB0", Offset = "0xE0CDB0", VA = "0xE0CDB0")]
		private void TimeOutText()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xE0CE4C", Offset = "0xE0CE4C", VA = "0xE0CE4C")]
		public SimpleMessageBalloon()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class Staff : Unit
	{
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xE13804", Offset = "0xE13804", VA = "0xE13804")]
		public Staff()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class SubQuestBalloon : MonoBehaviour
	{
		[Token(Token = "0x20002BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880DDC", Offset = "0x880DDC")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SubQuestBalloon <>4__this;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioSource audioSource;

			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0xF92C10", Offset = "0xF92C10", VA = "0xF92C10")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0xF92C18", Offset = "0xF92C18", VA = "0xF92C18")]
			internal void <Start>b__2()
			{
			}

			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0xF92C78", Offset = "0xF92C78", VA = "0xF92C78")]
			internal bool <Start>b__0(UniRx.Unit x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0xF92C9C", Offset = "0xF92C9C", VA = "0xF92C9C")]
			internal void <Start>b__1(UniRx.Unit unit)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880DEC", Offset = "0x880DEC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SubQuestData.AnimalData, Sprite> <>9__12_0;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<SubQuestData.FoodData, Sprite> <>9__12_1;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<SubQuestData.GarbageData, Sprite> <>9__12_2;

			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<SubQuestData.AnimalData, int> <>9__15_0;

			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0xF92BA8", Offset = "0xF92BA8", VA = "0xF92BA8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0xF92BB0", Offset = "0xF92BB0", VA = "0xF92BB0")]
			internal Sprite <Init>b__12_0(SubQuestData.AnimalData x)
			{
				return null;
			}

			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0xF92BC8", Offset = "0xF92BC8", VA = "0xF92BC8")]
			internal Sprite <Init>b__12_1(SubQuestData.FoodData x)
			{
				return null;
			}

			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0xF92BE0", Offset = "0xF92BE0", VA = "0xF92BE0")]
			internal Sprite <Init>b__12_2(SubQuestData.GarbageData x)
			{
				return null;
			}

			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0xF92BF8", Offset = "0xF92BF8", VA = "0xF92BF8")]
			internal int <UpdateSubQuestBalloonInfo>b__15_0(SubQuestData.AnimalData x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888C74", Offset = "0x888C74")]
		private bool isPlaySe;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888CC0", Offset = "0x888CC0")]
		private GameObject targetObject;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888D0C", Offset = "0x888D0C")]
		[SerializeField]
		private Transform top;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMesh infoText;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888D68", Offset = "0x888D68")]
		private SubQuestBalloonIcon iconFirst;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SubQuestBalloonIcon iconSecond;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SubQuestBalloonIcon iconThird;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888DD4", Offset = "0x888DD4")]
		private GameObject arrowBottom;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject normalBottom;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SubQuestData _data;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isDisabled;

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xE16EAC", Offset = "0xE16EAC", VA = "0xE16EAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xE17278", Offset = "0xE17278", VA = "0xE17278")]
		public void Init(SubQuestData data)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xE17624", Offset = "0xE17624", VA = "0xE17624")]
		private void UpdateSubQuestBalloon(int length)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xE178A0", Offset = "0xE178A0", VA = "0xE178A0")]
		private void SetThumbnail(Sprite[] sprites)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xE1797C", Offset = "0xE1797C", VA = "0xE1797C")]
		public void UpdateSubQuestBalloonInfo()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xE180FC", Offset = "0xE180FC", VA = "0xE180FC")]
		public SubQuestBalloon()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class SubQuestBalloonIcon : MonoBehaviour
	{
		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888E30", Offset = "0x888E30")]
		[SerializeField]
		private SpriteRenderer thumb;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer bar;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro countText;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888E9C", Offset = "0x888E9C")]
		private SpriteRenderer iconCheck;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshRenderer barMax;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshPro clearText;

		[Token(Token = "0x4000FC3")]
		private const string CLEAR = "CLEAR!!";

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xE17F64", Offset = "0xE17F64", VA = "0xE17F64")]
		public void SetThumbnail(Sprite sprite)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xE18004", Offset = "0xE18004", VA = "0xE18004")]
		public void SetProgress(int currentCount, int normaCount)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xE18210", Offset = "0xE18210", VA = "0xE18210")]
		public void SetBar(float currentCount, float normaCount)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xE1810C", Offset = "0xE1810C", VA = "0xE1810C")]
		private void SetClear(bool isClear)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xE1829C", Offset = "0xE1829C", VA = "0xE1829C")]
		public SubQuestBalloonIcon()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class UpdateBalloon : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880DFC", Offset = "0x880DFC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PuzzlePlaySaveData.StarCountStageData, bool> <>9__5_0;

			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0xF9A624", Offset = "0xF9A624", VA = "0xF9A624")]
			public <>c()
			{
			}

			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0xF9A62C", Offset = "0xF9A62C", VA = "0xF9A62C")]
			internal bool <Start>b__5_0(PuzzlePlaySaveData.StarCountStageData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888F08", Offset = "0x888F08")]
		private bool isAnimation;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888F54", Offset = "0x888F54")]
		private int messageId;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888FA0", Offset = "0x888FA0")]
		private TextMesh infoText;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x888FEC", Offset = "0x888FEC")]
		private SubQuestBalloonIcon balloonIcon;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889038", Offset = "0x889038")]
		[SerializeField]
		private GameObject mapButton;

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1874D70", Offset = "0x1874D70", VA = "0x1874D70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x18751D4", Offset = "0x18751D4", VA = "0x18751D4")]
		private void OnClickBalloon(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x1875274", Offset = "0x1875274", VA = "0x1875274")]
		public UpdateBalloon()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x1875284", Offset = "0x1875284", VA = "0x1875284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8936B8", Offset = "0x8936B8")]
		private void <Start>b__5_1(BaseEventData x)
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class UpdateInformation : MonoBehaviour
	{
		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889084", Offset = "0x889084")]
		[SerializeField]
		private TextMesh text1En;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMesh text2En;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8890E0", Offset = "0x8890E0")]
		private TextMesh text1Jp;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMesh text2Jp;

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x1875304", Offset = "0x1875304", VA = "0x1875304")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x187547C", Offset = "0x187547C", VA = "0x187547C")]
		public UpdateInformation()
		{
		}
	}
}
namespace ZookeeperVR.Visitor
{
	[Token(Token = "0x20002C3")]
	public class Bench : VisitorTargetObject
	{
		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _actionTime;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly string _adjustVisitor;

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xE31774", Offset = "0xE31774", VA = "0xE31774", Slot = "5")]
		public override void EnterAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xE31874", Offset = "0xE31874", VA = "0xE31874", Slot = "6")]
		public override void UpdateAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xE31AE4", Offset = "0xE31AE4", VA = "0xE31AE4")]
		public Bench()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class Exhibition : VisitorTargetObject
	{
		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88913C", Offset = "0x88913C")]
		[SerializeField]
		private int capacity;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRAnimal _animal;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _actionTime;

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x1237BD0", Offset = "0x1237BD0", VA = "0x1237BD0", Slot = "4")]
		public override int GetCapacity()
		{
			return default(int);
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x1237BD8", Offset = "0x1237BD8", VA = "0x1237BD8", Slot = "5")]
		public override void EnterAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x1237DAC", Offset = "0x1237DAC", VA = "0x1237DAC", Slot = "6")]
		public override void UpdateAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x1237E04", Offset = "0x1237E04", VA = "0x1237E04", Slot = "7")]
		public override void ExitAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x1237EB8", Offset = "0x1237EB8", VA = "0x1237EB8")]
		public Exhibition()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class Interactive : VisitorTargetObject
	{
		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _actionTime;

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x1792270", Offset = "0x1792270", VA = "0x1792270", Slot = "5")]
		public override void EnterAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1792370", Offset = "0x1792370", VA = "0x1792370", Slot = "6")]
		public override void UpdateAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x1792500", Offset = "0x1792500", VA = "0x1792500")]
		public Interactive()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class LookUp : VisitorTargetObject
	{
		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889188", Offset = "0x889188")]
		private int capacity;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _actionTime;

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x1082BB8", Offset = "0x1082BB8", VA = "0x1082BB8", Slot = "4")]
		public override int GetCapacity()
		{
			return default(int);
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x1082BC0", Offset = "0x1082BC0", VA = "0x1082BC0", Slot = "5")]
		public override void EnterAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x1082CC0", Offset = "0x1082CC0", VA = "0x1082CC0", Slot = "6")]
		public override void UpdateAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x1082D18", Offset = "0x1082D18", VA = "0x1082D18", Slot = "7")]
		public override void ExitAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x1082D4C", Offset = "0x1082D4C", VA = "0x1082D4C")]
		public LookUp()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class SpecialVisitorController : MonoBehaviour
	{
		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _tracked;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Visitor _visitor;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isMoving;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isTracked;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool _isReady;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _movedTime;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _trackedChangeTime;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _targetChangeTime;

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xE12FC8", Offset = "0xE12FC8", VA = "0xE12FC8")]
		public void Init([Optional] Transform tracking)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xE1307C", Offset = "0xE1307C", VA = "0xE1307C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xE131C8", Offset = "0xE131C8", VA = "0xE131C8")]
		public SpecialVisitorController()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class SpecialVisitorManager : MonoBehaviour
	{
		[Token(Token = "0x20002C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880E0C", Offset = "0x880E0C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> list;

			[Token(Token = "0x6000D14")]
			[Address(RVA = "0xF90C00", Offset = "0xF90C00", VA = "0xF90C00")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000D15")]
			[Address(RVA = "0xF90C08", Offset = "0xF90C08", VA = "0xF90C08")]
			internal void <Start>b__0(GameObject o)
			{
			}

			[Token(Token = "0x6000D16")]
			[Address(RVA = "0xF90CBC", Offset = "0xF90CBC", VA = "0xF90CBC")]
			internal void <Start>b__1(GameObject o)
			{
			}

			[Token(Token = "0x6000D17")]
			[Address(RVA = "0xF90D70", Offset = "0xF90D70", VA = "0xF90D70")]
			internal void <Start>b__2(GameObject o)
			{
			}

			[Token(Token = "0x6000D18")]
			[Address(RVA = "0xF90E24", Offset = "0xF90E24", VA = "0xF90E24")]
			internal void <Start>b__3(GameObject o)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880E1C", Offset = "0x880E1C")]
		private struct <Start>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SpecialVisitorManager <>4__this;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000D19")]
			[Address(RVA = "0xF914BC", Offset = "0xF914BC", VA = "0xF914BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0xF91B28", Offset = "0xF91B28", VA = "0xF91B28", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20002CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880E2C", Offset = "0x880E2C")]
		private sealed class <CoPrepareSpecialVisitor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpecialVisitorManager <>4__this;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<SpecialVisitorController> <list>5__2;

			[Token(Token = "0x4000FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PlayerEpisodeSaveData <data>5__3;

			[Token(Token = "0x17000121")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D1E")]
				[Address(RVA = "0xF9146C", Offset = "0xF9146C", VA = "0xF9146C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000122")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D20")]
				[Address(RVA = "0xF914B4", Offset = "0xF914B4", VA = "0xF914B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0xF90ED8", Offset = "0xF90ED8", VA = "0xF90ED8")]
			[DebuggerHidden]
			public <CoPrepareSpecialVisitor>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0xF90F04", Offset = "0xF90F04", VA = "0xF90F04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0xF90F08", Offset = "0xF90F08", VA = "0xF90F08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0xF91474", Offset = "0xF91474", VA = "0xF91474", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FDF")]
		private const string PREFAB_NAME_FIRST = "WalkNature_Duck Variant";

		[Token(Token = "0x4000FE0")]
		private const string PREFAB_NAME_FIRST_CHILD = "WalkNature_KoDuck Variant";

		[Token(Token = "0x4000FE1")]
		private const string PREFAB_NAME_SECOND = "WalkNature_Cat Variant";

		[Token(Token = "0x4000FE2")]
		private const string PREFAB_NAME_THIRD = "WalkNature_Dog00 Variant";

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject[] _specialVisitorPrefabs;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isReady;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _isFirst;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool _isSecond;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool _isThird;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SpecialVisitorController[] _specialVisitors;

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xE131DC", Offset = "0xE131DC", VA = "0xE131DC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x8936C8", Offset = "0x8936C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xE132A0", Offset = "0xE132A0", VA = "0xE132A0")]
		public void PrepareSpecialVisitor()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xE132CC", Offset = "0xE132CC", VA = "0xE132CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x893728", Offset = "0x893728")]
		private IEnumerator CoPrepareSpecialVisitor()
		{
			return null;
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xE13338", Offset = "0xE13338", VA = "0xE13338")]
		public void PauseAllVisitors()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xE133DC", Offset = "0xE133DC", VA = "0xE133DC")]
		public void ResumeAllVisitors()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xE13480", Offset = "0xE13480", VA = "0xE13480")]
		private GameObject CreateVisitor(GameObject obj, VisitorMoveTargetArea target)
		{
			return null;
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xE135F0", Offset = "0xE135F0", VA = "0xE135F0")]
		public SpecialVisitorManager()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class VendingMachine : VisitorTargetObject
	{
		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _actionTime;

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x1164D08", Offset = "0x1164D08", VA = "0x1164D08", Slot = "5")]
		public override void EnterAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x1164E2C", Offset = "0x1164E2C", VA = "0x1164E2C", Slot = "6")]
		public override void UpdateAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x1165268", Offset = "0x1165268", VA = "0x1165268")]
		public VendingMachine()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class Visitor : Unit
	{
		[Token(Token = "0x20002CE")]
		public enum VisitorState
		{
			[Token(Token = "0x400100B")]
			Idle,
			[Token(Token = "0x400100C")]
			Walk,
			[Token(Token = "0x400100D")]
			Action
		}

		[Token(Token = "0x20002CF")]
		public enum ActionState
		{
			[Token(Token = "0x400100F")]
			Running,
			[Token(Token = "0x4001010")]
			Stopping,
			[Token(Token = "0x4001011")]
			Reboot
		}

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8891D4", Offset = "0x8891D4")]
		public ZVRVisitorData visitorData;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88920C", Offset = "0x88920C")]
		[SerializeField]
		private bool isMoveSpeedEqualAnimSpeed;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889258", Offset = "0x889258")]
		private float <ActionTime>k__BackingField;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889268", Offset = "0x889268")]
		private ActionState <State>k__BackingField;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889278", Offset = "0x889278")]
		private Vector3 <LastPoint>k__BackingField;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889288", Offset = "0x889288")]
		private int <AreaId>k__BackingField;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889298", Offset = "0x889298")]
		private int <TargetChangeTime>k__BackingField;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform _player;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VisitorTargetObject _targetObject;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8892A8", Offset = "0x8892A8")]
		private Vector3 <InitialPosition>k__BackingField;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8892B8", Offset = "0x8892B8")]
		private bool <IsTargetReached>k__BackingField;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool _isReady;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		private bool _canMoveBeforePausing;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		private bool _isPausing;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isManualMove;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private VisitorState _state;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IAstarAI _ai;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VisitorMessageBalloon _messageBalloon;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string _message;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _elapsedTime;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float _movedTime;

		[Token(Token = "0x17000123")]
		public float ActionTime
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x1165444", Offset = "0x1165444", VA = "0x1165444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8937E8", Offset = "0x8937E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x116544C", Offset = "0x116544C", VA = "0x116544C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8937F8", Offset = "0x8937F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public ActionState State
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x1165454", Offset = "0x1165454", VA = "0x1165454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893808", Offset = "0x893808")]
			get
			{
				return default(ActionState);
			}
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x116545C", Offset = "0x116545C", VA = "0x116545C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893818", Offset = "0x893818")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public Vector3 LastPoint
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x1165464", Offset = "0x1165464", VA = "0x1165464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893828", Offset = "0x893828")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x1165470", Offset = "0x1165470", VA = "0x1165470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893838", Offset = "0x893838")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public int AreaId
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0x116547C", Offset = "0x116547C", VA = "0x116547C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893848", Offset = "0x893848")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x1165484", Offset = "0x1165484", VA = "0x1165484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893858", Offset = "0x893858")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public int TargetChangeTime
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x116548C", Offset = "0x116548C", VA = "0x116548C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893868", Offset = "0x893868")]
			private get
			{
				return default(int);
			}
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x1165494", Offset = "0x1165494", VA = "0x1165494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893878", Offset = "0x893878")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public Vector3 InitialPosition
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x116549C", Offset = "0x116549C", VA = "0x116549C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893888", Offset = "0x893888")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x11654A8", Offset = "0x11654A8", VA = "0x11654A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893898", Offset = "0x893898")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public bool IsTargetReached
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x11654B4", Offset = "0x11654B4", VA = "0x11654B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8938A8", Offset = "0x8938A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x11654BC", Offset = "0x11654BC", VA = "0x11654BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8938B8", Offset = "0x8938B8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x11654C8", Offset = "0x11654C8", VA = "0x11654C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x11655A0", Offset = "0x11655A0", VA = "0x11655A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x11655A4", Offset = "0x11655A4", VA = "0x11655A4")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x11654D8", Offset = "0x11654D8", VA = "0x11654D8")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x11656E0", Offset = "0x11656E0", VA = "0x11656E0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x1165948", Offset = "0x1165948", VA = "0x1165948")]
		public void Init()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x1165A5C", Offset = "0x1165A5C", VA = "0x1165A5C")]
		public void StartMoveTarget(Transform target)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x1165D0C", Offset = "0x1165D0C", VA = "0x1165D0C")]
		public void StartMoveRandom()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x1166320", Offset = "0x1166320", VA = "0x1166320")]
		private void OnTargetReached()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x11664C4", Offset = "0x11664C4", VA = "0x11664C4")]
		private void NoTargetReached()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x11651AC", Offset = "0x11651AC", VA = "0x11651AC")]
		public void NextAction()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x1165000", Offset = "0x1165000", VA = "0x1165000")]
		public bool ForceMove(Vector3 targetPosition, float speed = 2f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x11665A4", Offset = "0x11665A4", VA = "0x11665A4")]
		private bool CanForceMove(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x11666BC", Offset = "0x11666BC", VA = "0x11666BC")]
		private void SetInitialPosition()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x1166804", Offset = "0x1166804", VA = "0x1166804")]
		public void UpdateMe()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x11661C4", Offset = "0x11661C4", VA = "0x11661C4")]
		private void SetMessageBalloon()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x1166CC8", Offset = "0x1166CC8", VA = "0x1166CC8")]
		public Visitor()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1166CD8", Offset = "0x1166CD8", VA = "0x1166CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8938C8", Offset = "0x8938C8")]
		private void <Awake>b__46_0(Pathfinding.Path path)
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class VisitorManager : StaticAccessBehaviour<VisitorManager>
	{
		[Serializable]
		[Token(Token = "0x20002D1")]
		public class CreateVisitorData
		{
			[Token(Token = "0x4001021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x889380", Offset = "0x889380")]
			public int areaId;

			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889398", Offset = "0x889398")]
			public int createVisitorNum;

			[Token(Token = "0x6000D55")]
			[Address(RVA = "0xF9B338", Offset = "0xF9B338", VA = "0xF9B338")]
			public CreateVisitorData()
			{
			}
		}

		[Token(Token = "0x20002D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880E3C", Offset = "0x880E3C")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> list;

			[Token(Token = "0x4001024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<GameObject> <>9__0;

			[Token(Token = "0x6000D56")]
			[Address(RVA = "0xF9A6E0", Offset = "0xF9A6E0", VA = "0xF9A6E0")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6000D57")]
			[Address(RVA = "0xF9A6E8", Offset = "0xF9A6E8", VA = "0xF9A6E8")]
			internal void <Start>b__0(GameObject o)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880E4C", Offset = "0x880E4C")]
		private struct <Start>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4001025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VisitorManager <>4__this;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass18_0 <>8__1;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int[] <>7__wrap1;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap2;

			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000D58")]
			[Address(RVA = "0xF9AF78", Offset = "0xF9AF78", VA = "0xF9AF78", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D59")]
			[Address(RVA = "0xF9B32C", Offset = "0xF9B32C", VA = "0xF9B32C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880E5C", Offset = "0x880E5C")]
		private struct <AsyncResourcesLoad>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string fileName;

			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<GameObject> callback;

			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ResourceRequest <resourceRequest>5__2;

			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityAsyncExtensions.ResourceRequestAwaiter <>u__1;

			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0xF9A824", Offset = "0xF9A824", VA = "0xF9A824", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xF9AA6C", Offset = "0xF9AA6C", VA = "0xF9AA6C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20002D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880E6C", Offset = "0x880E6C")]
		private sealed class <CoPrepareVisitor>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VisitorManager <>4__this;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <progress>5__2;

			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CreateVisitorData[] <>7__wrap2;

			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CreateVisitorData <data>5__5;

			[Token(Token = "0x4001039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private AreaSettings <settings>5__6;

			[Token(Token = "0x400103A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private VisitorMoveTargetArea[] <moveTargetArea>5__7;

			[Token(Token = "0x400103B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <i>5__8;

			[Token(Token = "0x1700012B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D5F")]
				[Address(RVA = "0xF9AF28", Offset = "0xF9AF28", VA = "0xF9AF28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D61")]
				[Address(RVA = "0xF9AF70", Offset = "0xF9AF70", VA = "0xF9AF70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0xF9AA78", Offset = "0xF9AA78", VA = "0xF9AA78")]
			[DebuggerHidden]
			public <CoPrepareVisitor>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xF9AAA4", Offset = "0xF9AAA4", VA = "0xF9AAA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0xF9AAA8", Offset = "0xF9AAA8", VA = "0xF9AAA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D60")]
			[Address(RVA = "0xF9AF30", Offset = "0xF9AF30", VA = "0xF9AF30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880E7C", Offset = "0x880E7C")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x400103C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 center;

			[Token(Token = "0x400103D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float range;

			[Token(Token = "0x6000D62")]
			[Address(RVA = "0xF9A79C", Offset = "0xF9A79C", VA = "0xF9A79C")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xF9A7A4", Offset = "0xF9A7A4", VA = "0xF9A7A4")]
			internal bool <GetVisitors>b__0(Visitor v)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880E8C", Offset = "0x880E8C")]
		private sealed class <>c
		{
			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400103F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Visitor, Vector3> <>9__30_0;

			[Token(Token = "0x6000D65")]
			[Address(RVA = "0xF9A6AC", Offset = "0xF9A6AC", VA = "0xF9A6AC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D66")]
			[Address(RVA = "0xF9A6B4", Offset = "0xF9A6B4", VA = "0xF9A6B4")]
			internal Vector3 <GetVisitorPositions>b__30_0(Visitor x)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8892C8", Offset = "0x8892C8")]
		private CreateVisitorData[] createDatas;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889314", Offset = "0x889314")]
		[SerializeField]
		private int[] visitorPrefabNumber;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject simpleMessageBalloonPrefab;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SpecialVisitorManager special;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject[] _visitorPrefabs;

		[Token(Token = "0x4001017")]
		private const string PREFAB_NAME = "Visitor-{0:000} Variant";

		[Token(Token = "0x4001018")]
		private const string PREFAB_PATH = "Prefabs/VisitorsVariant/";

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<Visitor> _visitorList;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Visitor[] _visitors;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Dictionary<int, VisitorMoveTargetArea[]> _moveTargetAreas;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] _walkAnimalTargets;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _visitorIndex;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889370", Offset = "0x889370")]
		private bool <IsHideVisitor>k__BackingField;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool _isReady;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool _isUpdate;

		[Token(Token = "0x1700012A")]
		public bool IsHideVisitor
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x1166D1C", Offset = "0x1166D1C", VA = "0x1166D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8938D8", Offset = "0x8938D8")]
			private get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x1166D24", Offset = "0x1166D24", VA = "0x1166D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8938E8", Offset = "0x8938E8")]
			set
			{
			}
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1166D30", Offset = "0x1166D30", VA = "0x1166D30")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x8938F8", Offset = "0x8938F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1166DF0", Offset = "0x1166DF0", VA = "0x1166DF0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x893958", Offset = "0x893958")]
		public Task AsyncResourcesLoad(string fileName, Action<GameObject> callback)
		{
			return null;
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1166F04", Offset = "0x1166F04", VA = "0x1166F04")]
		public void PrepareVisitor()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1166F30", Offset = "0x1166F30", VA = "0x1166F30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8939B8", Offset = "0x8939B8")]
		private IEnumerator CoPrepareVisitor()
		{
			return null;
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1166F9C", Offset = "0x1166F9C", VA = "0x1166F9C")]
		public GameObject GetRandomVisitor()
		{
			return null;
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x1165F80", Offset = "0x1165F80", VA = "0x1165F80")]
		public VisitorMoveTargetArea GetMoveTargetAreaRandom(int areaId)
		{
			return null;
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x1166FF8", Offset = "0x1166FF8", VA = "0x1166FF8")]
		public Transform GetWalkAnimalTargetRandom()
		{
			return null;
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x1167050", Offset = "0x1167050", VA = "0x1167050")]
		public List<Visitor> GetVisitors(Vector3 center, float range)
		{
			return null;
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x1167188", Offset = "0x1167188", VA = "0x1167188")]
		public void PauseAllVisitors()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x1167244", Offset = "0x1167244", VA = "0x1167244")]
		public void ResumeAllVisitors()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x1167300", Offset = "0x1167300", VA = "0x1167300")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x11673F4", Offset = "0x11673F4", VA = "0x11673F4")]
		private Visitor CreateVisitor(Transform target, int areaId, int changeTime)
		{
			return null;
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1167570", Offset = "0x1167570", VA = "0x1167570")]
		public Vector3[] GetVisitorPositions()
		{
			return null;
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x11676C8", Offset = "0x11676C8", VA = "0x11676C8")]
		public void PrepareSpecialVisitor()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x1167740", Offset = "0x1167740", VA = "0x1167740")]
		public VisitorManager()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class VisitorMessageBalloon : MonoBehaviour
	{
		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8893D0", Offset = "0x8893D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8893D0", Offset = "0x8893D0")]
		private int nonMessageRate;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SimpleMessageBalloon _balloon;

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x1166B44", Offset = "0x1166B44", VA = "0x1166B44")]
		public void SetMessage(string message, bool isAlwaysDisplayed = false)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1167854", Offset = "0x1167854", VA = "0x1167854")]
		public VisitorMessageBalloon()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class VisitorMoveTargetArea : MonoBehaviour
	{
		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VisitorTargetObject _target;

		[Token(Token = "0x1700012D")]
		public VisitorTargetObject TargetObject
		{
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0x116608C", Offset = "0x116608C", VA = "0x116608C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x116612C", Offset = "0x116612C", VA = "0x116612C")]
		public Vector3 GetRandomPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x1167864", Offset = "0x1167864", VA = "0x1167864")]
		public void ResetNumVisitor()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x11678E8", Offset = "0x11678E8", VA = "0x11678E8")]
		public VisitorMoveTargetArea()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class VisitorTargetObject : MonoBehaviour
	{
		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889438", Offset = "0x889438")]
		[SerializeField]
		protected Transform actionPoint;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889484", Offset = "0x889484")]
		[SerializeField]
		protected int minActionTime;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected int maxActionTime;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8894E0", Offset = "0x8894E0")]
		private int <NumCurrentVisitor>k__BackingField;

		[Token(Token = "0x1700012E")]
		public int NumCurrentVisitor
		{
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0x11678F0", Offset = "0x11678F0", VA = "0x11678F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893A88", Offset = "0x893A88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0x11678F8", Offset = "0x11678F8", VA = "0x11678F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893A98", Offset = "0x893A98")]
			set
			{
			}
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x1166494", Offset = "0x1166494", VA = "0x1166494")]
		public bool CanUse()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1167900", Offset = "0x1167900", VA = "0x1167900", Slot = "4")]
		public virtual int GetCapacity()
		{
			return default(int);
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x1164E08", Offset = "0x1164E08", VA = "0x1164E08", Slot = "5")]
		public virtual void EnterAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x1164FC0", Offset = "0x1164FC0", VA = "0x1164FC0", Slot = "6")]
		public virtual void UpdateAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x1167908", Offset = "0x1167908", VA = "0x1167908", Slot = "7")]
		public virtual void ExitAction(Visitor visitor)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x116527C", Offset = "0x116527C", VA = "0x116527C")]
		public VisitorTargetObject()
		{
		}
	}
}
namespace ZookeeperVR.Opening
{
	[Token(Token = "0x20002DB")]
	public class OpeningAnimationController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880E9C", Offset = "0x880E9C")]
		private sealed class <>c
		{
			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__3_0;

			[Token(Token = "0x6000D79")]
			[Address(RVA = "0xC12EB8", Offset = "0xC12EB8", VA = "0xC12EB8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0xC12EC0", Offset = "0xC12EC0", VA = "0xC12EC0")]
			internal void <Start>b__3_0()
			{
			}
		}

		[Token(Token = "0x20002DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880EAC", Offset = "0x880EAC")]
		private sealed class <CoStartOpening>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400104E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OpeningAnimationController <>4__this;

			[Token(Token = "0x1700012F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D7E")]
				[Address(RVA = "0xC13084", Offset = "0xC13084", VA = "0xC13084", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000130")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D80")]
				[Address(RVA = "0xC130CC", Offset = "0xC130CC", VA = "0xC130CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0xC12F14", Offset = "0xC12F14", VA = "0xC12F14")]
			[DebuggerHidden]
			public <CoStartOpening>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0xC12F40", Offset = "0xC12F40", VA = "0xC12F40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0xC12F44", Offset = "0xC12F44", VA = "0xC12F44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0xC1308C", Offset = "0xC1308C", VA = "0xC1308C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject openingGroupEn;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject openingGroupJp;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayableDirector _opening;

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xF6F1C8", Offset = "0xF6F1C8", VA = "0xF6F1C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xF6F3F0", Offset = "0xF6F3F0", VA = "0xF6F3F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x893AA8", Offset = "0x893AA8")]
		private IEnumerator CoStartOpening()
		{
			return null;
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xF6F45C", Offset = "0xF6F45C", VA = "0xF6F45C")]
		public OpeningAnimationController()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class OpeningController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880EBC", Offset = "0x880EBC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__9_1;

			[Token(Token = "0x6000D88")]
			[Address(RVA = "0xC13134", Offset = "0xC13134", VA = "0xC13134")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D89")]
			[Address(RVA = "0xC1313C", Offset = "0xC1313C", VA = "0xC1313C")]
			internal void <CoPlayEpisode>b__9_1()
			{
			}
		}

		[Token(Token = "0x20002E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880ECC", Offset = "0x880ECC")]
		private sealed class <CoPlayEpisode>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OpeningController <>4__this;

			[Token(Token = "0x17000131")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D8D")]
				[Address(RVA = "0xC13444", Offset = "0xC13444", VA = "0xC13444", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000132")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D8F")]
				[Address(RVA = "0xC1348C", Offset = "0xC1348C", VA = "0xC1348C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0xC131B8", Offset = "0xC131B8", VA = "0xC131B8")]
			[DebuggerHidden]
			public <CoPlayEpisode>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0xC131E4", Offset = "0xC131E4", VA = "0xC131E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0xC131E8", Offset = "0xC131E8", VA = "0xC131E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0xC1344C", Offset = "0xC1344C", VA = "0xC1344C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject goEncho;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OpeningMoveTargetArea openingMoveTargetArea;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip tutorialVoiceEn;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip tutorialVoiceJp;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ActionPoint episodePoint;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RepeatedSoundPlay _repeated;

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xF6F524", Offset = "0xF6F524", VA = "0xF6F524")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xF6F640", Offset = "0xF6F640", VA = "0xF6F640")]
		public void Init()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xF6F7A8", Offset = "0xF6F7A8", VA = "0xF6F7A8")]
		public void PlayEpisode()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xF6F85C", Offset = "0xF6F85C", VA = "0xF6F85C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x893B58", Offset = "0x893B58")]
		private IEnumerator CoPlayEpisode()
		{
			return null;
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xF6F8C8", Offset = "0xF6F8C8", VA = "0xF6F8C8")]
		public OpeningController()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xF6F8D0", Offset = "0xF6F8D0", VA = "0xF6F8D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893BB8", Offset = "0x893BB8")]
		private void <CoPlayEpisode>b__9_0()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class OpeningMoveTargetArea : MonoBehaviour
	{
		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OpeningController _openingController;

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xF6F768", Offset = "0xF6F768", VA = "0xF6F768")]
		public void Init(OpeningController openingController)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xF6F984", Offset = "0xF6F984", VA = "0xF6F984")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xF6FA24", Offset = "0xF6FA24", VA = "0xF6FA24")]
		public OpeningMoveTargetArea()
		{
		}
	}
}
namespace ZookeeperVR.Object
{
	[Token(Token = "0x20002E2")]
	public class Animal : ObjectBase
	{
		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public AnimalDefine.Type animalType;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int animalId;

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xE1EF40", Offset = "0xE1EF40", VA = "0xE1EF40", Slot = "4")]
		protected override void InHandCompleted()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xE1EFAC", Offset = "0xE1EFAC", VA = "0xE1EFAC")]
		public Animal()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class Food : ObjectBase, IGrabbableMessageReciever, IEventSystemHandler
	{
		[Serializable]
		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880EDC", Offset = "0x880EDC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Food, bool> <>9__3_0;

			[Token(Token = "0x4001062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool, bool> <>9__3_1;

			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0xC09AF8", Offset = "0xC09AF8", VA = "0xC09AF8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xC09B00", Offset = "0xC09B00", VA = "0xC09B00")]
			internal bool <CheckBooking>b__3_0(Food x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0xC09B1C", Offset = "0xC09B1C", VA = "0xC09B1C")]
			internal bool <CheckBooking>b__3_1(bool x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public FoodDefine.Type foodType;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int foodId;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private OVRAnimal _animal;

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x12B08B8", Offset = "0x12B08B8", VA = "0x12B08B8")]
		public bool CheckBooking(OVRAnimal animal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x12B0BFC", Offset = "0x12B0BFC", VA = "0x12B0BFC")]
		public void CancelBooking()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x12B0C04", Offset = "0x12B0C04", VA = "0x12B0C04")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x12B0C8C", Offset = "0x12B0C8C", VA = "0x12B0C8C")]
		private void DelayActive()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x12B0CB4", Offset = "0x12B0CB4", VA = "0x12B0CB4", Slot = "4")]
		protected override void InHandCompleted()
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x12B0D68", Offset = "0x12B0D68", VA = "0x12B0D68", Slot = "5")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x12B0D6C", Offset = "0x12B0D6C", VA = "0x12B0D6C", Slot = "6")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x12B0E58", Offset = "0x12B0E58", VA = "0x12B0E58")]
		public Food()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x12B0E60", Offset = "0x12B0E60", VA = "0x12B0E60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893C18", Offset = "0x893C18")]
		private void <CheckBooking>b__3_2(bool __)
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class Garbage : ObjectBase
	{
		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public GarbageDefine.Type garbageType;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int garbageId;

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x12B4C90", Offset = "0x12B4C90", VA = "0x12B4C90", Slot = "4")]
		protected override void InHandCompleted()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x12B4D44", Offset = "0x12B4D44", VA = "0x12B4D44")]
		public Garbage()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class Item : ObjectBase, IGrabbableMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public ItemDefine.Type itemType;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int itemId;

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x107CFD4", Offset = "0x107CFD4", VA = "0x107CFD4", Slot = "5")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x107CFD8", Offset = "0x107CFD8", VA = "0x107CFD8", Slot = "6")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x107D0C4", Offset = "0x107D0C4", VA = "0x107D0C4", Slot = "4")]
		protected override void InHandCompleted()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x107D178", Offset = "0x107D178", VA = "0x107D178")]
		public Item()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class ObjectBase : MonoBehaviour
	{
		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889560", Offset = "0x889560")]
		private bool isDisableWhenGrab;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8895AC", Offset = "0x8895AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8895AC", Offset = "0x8895AC")]
		private int destroyTime;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ZVRGrabbable Grabbable;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Vector3 InitialPosition;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected Quaternion InitialRotation;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isNotification;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _elapsedTime;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isDestroy;

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xF6BAB8", Offset = "0xF6BAB8", VA = "0xF6BAB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xF6BB6C", Offset = "0xF6BB6C", VA = "0xF6BB6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xF6BDF0", Offset = "0xF6BDF0", VA = "0xF6BDF0", Slot = "4")]
		protected virtual void InHandCompleted()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xF6BDF4", Offset = "0xF6BDF4", VA = "0xF6BDF4")]
		public void RemoveGrabbable()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xF6BD5C", Offset = "0xF6BD5C", VA = "0xF6BD5C")]
		public bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xF6BDFC", Offset = "0xF6BDFC", VA = "0xF6BDFC")]
		public void EnableWhenGrab()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xF6BE04", Offset = "0xF6BE04", VA = "0xF6BE04")]
		public void SetInitialPosition()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xF6BF0C", Offset = "0xF6BF0C", VA = "0xF6BF0C")]
		public bool IsSleeping()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xF6BFA0", Offset = "0xF6BFA0", VA = "0xF6BFA0")]
		public ObjectBase()
		{
		}
	}
}
namespace ZookeeperVR.Episode
{
	[Token(Token = "0x20002E8")]
	public class EpisodeBase : MonoBehaviour
	{
		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889610", Offset = "0x889610")]
		public QuestData questData;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SubQuestData subData;

		[Token(Token = "0x17000133")]
		public PlayerEpisodeSaveData.EpisodeState CurrentState
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x1231B8C", Offset = "0x1231B8C", VA = "0x1231B8C")]
			get
			{
				return default(PlayerEpisodeSaveData.EpisodeState);
			}
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x1231C24", Offset = "0x1231C24", VA = "0x1231C24")]
		public void ShowHideChildren(bool isEnabled)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x1231D7C", Offset = "0x1231D7C", VA = "0x1231D7C")]
		protected void NextState(bool isNextArea = false)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x1231CC8", Offset = "0x1231CC8", VA = "0x1231CC8")]
		public void ShowHideObject(GameObject obj, bool isEnabled)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1231E74", Offset = "0x1231E74", VA = "0x1231E74")]
		public void MoveActionPoint(GameObject point)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x1231FA0", Offset = "0x1231FA0", VA = "0x1231FA0")]
		public EpisodeBase()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class EpisodeCharacterController : MonoBehaviour
	{
		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889648", Offset = "0x889648")]
		private int messageId;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889694", Offset = "0x889694")]
		[SerializeField]
		private float pointStayTime;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] movePointList;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ZookeeperVR.Visitor.Visitor _visitor;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _pointIndex;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _isReady;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool _isMoving;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _elapsedTime;

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x1231FA8", Offset = "0x1231FA8", VA = "0x1231FA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x12320A4", Offset = "0x12320A4", VA = "0x12320A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1232190", Offset = "0x1232190", VA = "0x1232190")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1232198", Offset = "0x1232198", VA = "0x1232198")]
		public EpisodeCharacterController()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class EpisodeComplete : EpisodeBase
	{
		[Token(Token = "0x20002EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880EEC", Offset = "0x880EEC")]
		private sealed class <CoBuilding>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400107E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400107F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EpisodeComplete <>4__this;

			[Token(Token = "0x17000135")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DC8")]
				[Address(RVA = "0xC07174", Offset = "0xC07174", VA = "0xC07174", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000136")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DCA")]
				[Address(RVA = "0xC071BC", Offset = "0xC071BC", VA = "0xC071BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0xC06DC8", Offset = "0xC06DC8", VA = "0xC06DC8")]
			[DebuggerHidden]
			public <CoBuilding>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0xC06DF4", Offset = "0xC06DF4", VA = "0xC06DF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0xC06DF8", Offset = "0xC06DF8", VA = "0xC06DF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0xC0717C", Offset = "0xC0717C", VA = "0xC0717C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880EFC", Offset = "0x880EFC")]
		private sealed class <CoCompleteEpisode>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EpisodeComplete <>4__this;

			[Token(Token = "0x17000137")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DCE")]
				[Address(RVA = "0xC073B8", Offset = "0xC073B8", VA = "0xC073B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000138")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DD0")]
				[Address(RVA = "0xC07400", Offset = "0xC07400", VA = "0xC07400", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0xC071C4", Offset = "0xC071C4", VA = "0xC071C4")]
			[DebuggerHidden]
			public <CoCompleteEpisode>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0xC071F0", Offset = "0xC071F0", VA = "0xC071F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0xC071F4", Offset = "0xC071F4", VA = "0xC071F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0xC073C0", Offset = "0xC073C0", VA = "0xC073C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8896F0", Offset = "0x8896F0")]
		[SerializeField]
		private GameObject buildingActionPoint;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject episodeActionPoint;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88974C", Offset = "0x88974C")]
		[SerializeField]
		private GameObject particleFx;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _animalsFolder;

		[Token(Token = "0x17000134")]
		private bool IsCompleteLevel
		{
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x12321A8", Offset = "0x12321A8", VA = "0x12321A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x12321CC", Offset = "0x12321CC", VA = "0x12321CC")]
		public void PrepareCleared()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x12323A4", Offset = "0x12323A4", VA = "0x12323A4")]
		public void PrepareWaiting()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1232460", Offset = "0x1232460", VA = "0x1232460")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x893C28", Offset = "0x893C28")]
		public IEnumerator CoBuilding()
		{
			return null;
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x12324CC", Offset = "0x12324CC", VA = "0x12324CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x893C88", Offset = "0x893C88")]
		private IEnumerator CoCompleteEpisode()
		{
			return null;
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1232538", Offset = "0x1232538", VA = "0x1232538")]
		private void PrepareFinalEpisode(bool isEnable)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1232614", Offset = "0x1232614", VA = "0x1232614")]
		public EpisodeComplete()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x123261C", Offset = "0x123261C", VA = "0x123261C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893CE8", Offset = "0x893CE8")]
		private void <CoBuilding>b__8_0()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1232888", Offset = "0x1232888", VA = "0x1232888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893CF8", Offset = "0x893CF8")]
		private void <CoCompleteEpisode>b__9_0()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x123290C", Offset = "0x123290C", VA = "0x123290C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893D08", Offset = "0x893D08")]
		private void <CoCompleteEpisode>b__9_1()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class EpisodeCompleteVoice : MonoBehaviour
	{
		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip completeVoiceEn;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip completeVoiceJp;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audioSource;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action _completeAction;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isReady;

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x12329CC", Offset = "0x12329CC", VA = "0x12329CC")]
		public void PlayVoice(Action completeAction)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x1232B3C", Offset = "0x1232B3C", VA = "0x1232B3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x1232B94", Offset = "0x1232B94", VA = "0x1232B94")]
		public EpisodeCompleteVoice()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class EpisodeManager : OnlyOneBehavior<EpisodeManager>, IGamePauseReciever, IEventSystemHandler
	{
		[Serializable]
		[Token(Token = "0x20002EF")]
		public class EpisodePrefabInfo
		{
			[Token(Token = "0x4001099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EpisodeType Type;

			[Token(Token = "0x400109A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int AreaNo;

			[Token(Token = "0x400109B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int Level;

			[Token(Token = "0x400109C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ConfigLanguage Language;

			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0xC0806C", Offset = "0xC0806C", VA = "0xC0806C")]
			public EpisodePrefabInfo()
			{
			}
		}

		[Token(Token = "0x20002F0")]
		public enum EpisodeType
		{
			[Token(Token = "0x400109E")]
			Episode,
			[Token(Token = "0x400109F")]
			SubQuestStart,
			[Token(Token = "0x40010A0")]
			SubQuestEnd
		}

		[Token(Token = "0x20002F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880F0C", Offset = "0x880F0C")]
		private sealed class <CoGamePauseResume>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EpisodeManager <>4__this;

			[Token(Token = "0x40010A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isPause;

			[Token(Token = "0x1700013E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DFF")]
				[Address(RVA = "0xC07D08", Offset = "0xC07D08", VA = "0xC07D08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E01")]
				[Address(RVA = "0xC07D50", Offset = "0xC07D50", VA = "0xC07D50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0xC07AC8", Offset = "0xC07AC8", VA = "0xC07AC8")]
			[DebuggerHidden]
			public <CoGamePauseResume>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0xC07AF4", Offset = "0xC07AF4", VA = "0xC07AF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0xC07AF8", Offset = "0xC07AF8", VA = "0xC07AF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E00")]
			[Address(RVA = "0xC07D10", Offset = "0xC07D10", VA = "0xC07D10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880F1C", Offset = "0x880F1C")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x40010A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public QuestData data;

			[Token(Token = "0x6000E02")]
			[Address(RVA = "0xC074B0", Offset = "0xC074B0", VA = "0xC074B0")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6000E03")]
			[Address(RVA = "0xC074B8", Offset = "0xC074B8", VA = "0xC074B8")]
			internal bool <NextTrigger>b__0(EpisodeTrigger x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E04")]
			[Address(RVA = "0xC07508", Offset = "0xC07508", VA = "0xC07508")]
			internal bool <NextTrigger>b__1(EpisodeTrigger x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880F2C", Offset = "0x880F2C")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x40010A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public QuestData data;

			[Token(Token = "0x6000E05")]
			[Address(RVA = "0xC0755C", Offset = "0xC0755C", VA = "0xC0755C")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6000E06")]
			[Address(RVA = "0xC07564", Offset = "0xC07564", VA = "0xC07564")]
			internal bool <PlayingEpisode>b__0(EpisodeComplete x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880F3C", Offset = "0x880F3C")]
		private sealed class <>c
		{
			[Token(Token = "0x40010A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<EpisodeTrigger, bool> <>9__36_0;

			[Token(Token = "0x6000E08")]
			[Address(RVA = "0xC07468", Offset = "0xC07468", VA = "0xC07468")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E09")]
			[Address(RVA = "0xC07470", Offset = "0xC07470", VA = "0xC07470")]
			internal bool <StartFirstEpisode>b__36_0(EpisodeTrigger x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880F4C", Offset = "0x880F4C")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x40010A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<PointerEventData> onClickAction;

			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0xC075B8", Offset = "0xC075B8", VA = "0xC075B8")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xC075C0", Offset = "0xC075C0", VA = "0xC075C0")]
			internal void <AddEventTrigger>b__0(BaseEventData x)
			{
			}
		}

		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880F5C", Offset = "0x880F5C")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x40010AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FoodDefine.Type fType;

			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0xC07670", Offset = "0xC07670", VA = "0xC07670")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xC07678", Offset = "0xC07678", VA = "0xC07678")]
			internal bool <IsSubQuestTarget>b__0(SubQuestData.FoodData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880F6C", Offset = "0x880F6C")]
		private sealed class <CoStartTimeline>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EpisodeManager <>4__this;

			[Token(Token = "0x40010AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action fadeAction;

			[Token(Token = "0x40010AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform current;

			[Token(Token = "0x40010B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int areaId;

			[Token(Token = "0x40010B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int areaLevel;

			[Token(Token = "0x40010B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool isSubQuest;

			[Token(Token = "0x40010B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			public bool isOption;

			[Token(Token = "0x17000140")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E11")]
				[Address(RVA = "0xC0801C", Offset = "0xC0801C", VA = "0xC0801C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000141")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E13")]
				[Address(RVA = "0xC08064", Offset = "0xC08064", VA = "0xC08064", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xC07D58", Offset = "0xC07D58", VA = "0xC07D58")]
			[DebuggerHidden]
			public <CoStartTimeline>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xC07D84", Offset = "0xC07D84", VA = "0xC07D84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xC07D88", Offset = "0xC07D88", VA = "0xC07D88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xC08024", Offset = "0xC08024", VA = "0xC08024", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880F7C", Offset = "0x880F7C")]
		private sealed class <CoCompletedTimeline>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EpisodeManager <>4__this;

			[Token(Token = "0x40010B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action fadeAction;

			[Token(Token = "0x17000142")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E17")]
				[Address(RVA = "0xC07A78", Offset = "0xC07A78", VA = "0xC07A78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000143")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E19")]
				[Address(RVA = "0xC07AC0", Offset = "0xC07AC0", VA = "0xC07AC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xC07878", Offset = "0xC07878", VA = "0xC07878")]
			[DebuggerHidden]
			public <CoCompletedTimeline>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6000E15")]
			[Address(RVA = "0xC078A4", Offset = "0xC078A4", VA = "0xC078A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E16")]
			[Address(RVA = "0xC078A8", Offset = "0xC078A8", VA = "0xC078A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E18")]
			[Address(RVA = "0xC07A80", Offset = "0xC07A80", VA = "0xC07A80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880F8C", Offset = "0x880F8C")]
		private sealed class <>c__DisplayClass55_0
		{
			[Token(Token = "0x40010B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int areaId;

			[Token(Token = "0x40010B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool isNext;

			[Token(Token = "0x40010BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int areaLevel;

			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0xC0769C", Offset = "0xC0769C", VA = "0xC0769C")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0xC076A4", Offset = "0xC076A4", VA = "0xC076A4")]
			internal bool <GetEpisodeTimeline>b__0(EpisodePrefabInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880F9C", Offset = "0x880F9C")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x40010BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isStart;

			[Token(Token = "0x40010BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int areaId;

			[Token(Token = "0x40010BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int areaLevel;

			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0xC07784", Offset = "0xC07784", VA = "0xC07784")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0xC0778C", Offset = "0xC0778C", VA = "0xC0778C")]
			internal bool <GetSubQuestTimeline>b__0(EpisodePrefabInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8897B8", Offset = "0x8897B8")]
		public EpisodePrefabInfo[] episodePrefabInfos;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8897F0", Offset = "0x8897F0")]
		[SerializeField]
		private AudioClip playTimeline;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88983C", Offset = "0x88983C")]
		[SerializeField]
		private GameObject questBalloonPrefab;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject subQuestBalloonPrefab;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject arrowPrefab;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889898", Offset = "0x889898")]
		private EpisodeTrigger <BaseTrigger>k__BackingField;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8898A8", Offset = "0x8898A8")]
		private EpisodeComplete <BuildingComplete>k__BackingField;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8898B8", Offset = "0x8898B8")]
		private bool <IsPlaying>k__BackingField;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8898C8", Offset = "0x8898C8")]
		private PlayableDirector <CurrentTimeline>k__BackingField;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8898D8", Offset = "0x8898D8")]
		private GameObject <EpisodeBalloon>k__BackingField;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EpisodeTrigger[] _triggerList;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EpisodeComplete[] _completeList;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RepeatedSoundPlay _repeated;

		[Token(Token = "0x4001096")]
		private const string PrefabName = "{0}{1}-{2}{3}_{4} Variant";

		[Token(Token = "0x4001097")]
		private const string PrefabPath = "Prefabs/EpisodeVariant/";

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly string[] _adjustNcps;

		[Token(Token = "0x17000139")]
		public EpisodeTrigger BaseTrigger
		{
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x1232B9C", Offset = "0x1232B9C", VA = "0x1232B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893DB8", Offset = "0x893DB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x1232BA4", Offset = "0x1232BA4", VA = "0x1232BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893DC8", Offset = "0x893DC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public EpisodeComplete BuildingComplete
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x1232BAC", Offset = "0x1232BAC", VA = "0x1232BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893DD8", Offset = "0x893DD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x1232BB4", Offset = "0x1232BB4", VA = "0x1232BB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893DE8", Offset = "0x893DE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public bool IsPlaying
		{
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x1232BBC", Offset = "0x1232BBC", VA = "0x1232BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893DF8", Offset = "0x893DF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x1232BC4", Offset = "0x1232BC4", VA = "0x1232BC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893E08", Offset = "0x893E08")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public PlayableDirector CurrentTimeline
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x1232BD0", Offset = "0x1232BD0", VA = "0x1232BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893E18", Offset = "0x893E18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x1232BD8", Offset = "0x1232BD8", VA = "0x1232BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893E28", Offset = "0x893E28")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public GameObject EpisodeBalloon
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x1232BE0", Offset = "0x1232BE0", VA = "0x1232BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893E38", Offset = "0x893E38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x1232BE8", Offset = "0x1232BE8", VA = "0x1232BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893E48", Offset = "0x893E48")]
			set
			{
			}
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x1232BF0", Offset = "0x1232BF0", VA = "0x1232BF0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x1233568", Offset = "0x1233568", VA = "0x1233568", Slot = "6")]
		public void OnGamePause(GamePauseReason reason)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x1233618", Offset = "0x1233618", VA = "0x1233618", Slot = "7")]
		public void OnGameResume()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x1233598", Offset = "0x1233598", VA = "0x1233598")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x893E58", Offset = "0x893E58")]
		private IEnumerator CoGamePauseResume(bool isPause)
		{
			return null;
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x12326F8", Offset = "0x12326F8", VA = "0x12326F8")]
		public void NextTrigger(QuestData data, bool isNextArea)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x1233648", Offset = "0x1233648", VA = "0x1233648")]
		public void PlayingEpisode(QuestData data, bool isEnable)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x12337A0", Offset = "0x12337A0", VA = "0x12337A0")]
		public void StartFirstEpisode()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x123394C", Offset = "0x123394C", VA = "0x123394C")]
		public void AddEventTrigger(GameObject obj, Action<PointerEventData> onClickAction)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x1233C50", Offset = "0x1233C50", VA = "0x1233C50")]
		public GameObject CreateQuestBalloon(Transform t, [Optional] Action<PointerEventData> onClickAction)
		{
			return null;
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x1233F28", Offset = "0x1233F28", VA = "0x1233F28")]
		public void SetActiveQuestBalloon(bool isEnable)
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x1233FCC", Offset = "0x1233FCC", VA = "0x1233FCC")]
		public bool IsSubQuestTarget(ActionCategory category, AnimalDefine.Type aType = AnimalDefine.Type.None, FoodDefine.Type fType = FoodDefine.Type.None, GarbageDefine.Type gType = GarbageDefine.Type.None, ItemDefine.Type iType = ItemDefine.Type.None, int targetId = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x1234258", Offset = "0x1234258", VA = "0x1234258")]
		public void CheckPlayerHistory(ActionCategory category, AnimalDefine.Type aType = AnimalDefine.Type.None, FoodDefine.Type fType = FoodDefine.Type.None, GarbageDefine.Type gType = GarbageDefine.Type.None, ItemDefine.Type iType = ItemDefine.Type.None, int targetId = 0)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x1234970", Offset = "0x1234970", VA = "0x1234970")]
		private void PlayFirstActionVoice()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x1234D54", Offset = "0x1234D54", VA = "0x1234D54")]
		public void PlaySound(bool isCleared = true, bool isSpecial = false)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x1234F98", Offset = "0x1234F98", VA = "0x1234F98")]
		public void PlayBGM()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x1234EB8", Offset = "0x1234EB8", VA = "0x1234EB8")]
		public void PlaySubQuestBGM()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x1234F28", Offset = "0x1234F28", VA = "0x1234F28")]
		public void PlayEscapeBGM()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x1234E48", Offset = "0x1234E48", VA = "0x1234E48")]
		public void PlayFindingBGM()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x1235008", Offset = "0x1235008", VA = "0x1235008")]
		private void PlayVoice()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x1235090", Offset = "0x1235090", VA = "0x1235090")]
		private void PlayTimeline()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x12350F8", Offset = "0x12350F8", VA = "0x12350F8")]
		public void PlayRepeatedVoice()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x12351D8", Offset = "0x12351D8", VA = "0x12351D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x893EB8", Offset = "0x893EB8")]
		public IEnumerator CoStartTimeline(Transform current, int areaId, int areaLevel, bool isSubQuest, bool isOption, Action fadeAction)
		{
			return null;
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x123528C", Offset = "0x123528C", VA = "0x123528C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x893F18", Offset = "0x893F18")]
		public IEnumerator CoCompletedTimeline(Action fadeAction)
		{
			return null;
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x1235304", Offset = "0x1235304", VA = "0x1235304")]
		private PlayableDirector InstantiateTimeline(Transform current, int areaId, int areaLevel, bool isSubQuest, bool isOption)
		{
			return null;
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x1235458", Offset = "0x1235458", VA = "0x1235458")]
		private PlayableDirector GetEpisodeTimeline(int areaId, int areaLevel, bool isNext)
		{
			return null;
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x123556C", Offset = "0x123556C", VA = "0x123556C")]
		private PlayableDirector GetSubQuestTimeline(int areaId, int areaLevel, bool isStart)
		{
			return null;
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x123567C", Offset = "0x123567C", VA = "0x123567C")]
		private PlayableDirector GetResourcesTimeline(EpisodePrefabInfo info)
		{
			return null;
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x1235704", Offset = "0x1235704", VA = "0x1235704")]
		private string CreatePrefabFileName(EpisodePrefabInfo info)
		{
			return null;
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x12359A4", Offset = "0x12359A4", VA = "0x12359A4")]
		public EpisodeManager()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class EpisodeObjectShowHide : MonoBehaviour
	{
		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x1235AFC", Offset = "0x1235AFC", VA = "0x1235AFC")]
		public void Show()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x1235B58", Offset = "0x1235B58", VA = "0x1235B58")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x1235BB4", Offset = "0x1235BB4", VA = "0x1235BB4")]
		public EpisodeObjectShowHide()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class EpisodeTrigger : EpisodeBase, IEnvPrefabCacheReciever, IEventSystemHandler
	{
		[Token(Token = "0x20002FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880FAC", Offset = "0x880FAC")]
		private sealed class <CoStartEpisode>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EpisodeTrigger <>4__this;

			[Token(Token = "0x17000147")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E40")]
				[Address(RVA = "0xC08204", Offset = "0xC08204", VA = "0xC08204", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000148")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E42")]
				[Address(RVA = "0xC0824C", Offset = "0xC0824C", VA = "0xC0824C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0xC08074", Offset = "0xC08074", VA = "0xC08074")]
			[DebuggerHidden]
			public <CoStartEpisode>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0xC080A0", Offset = "0xC080A0", VA = "0xC080A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0xC080A4", Offset = "0xC080A4", VA = "0xC080A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E41")]
			[Address(RVA = "0xC0820C", Offset = "0xC0820C", VA = "0xC0820C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880FBC", Offset = "0x880FBC")]
		private sealed class <CoStartSubQuestComplete>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EpisodeTrigger <>4__this;

			[Token(Token = "0x17000149")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E46")]
				[Address(RVA = "0xC083B4", Offset = "0xC083B4", VA = "0xC083B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E48")]
				[Address(RVA = "0xC083FC", Offset = "0xC083FC", VA = "0xC083FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E43")]
			[Address(RVA = "0xC08254", Offset = "0xC08254", VA = "0xC08254")]
			[DebuggerHidden]
			public <CoStartSubQuestComplete>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6000E44")]
			[Address(RVA = "0xC08280", Offset = "0xC08280", VA = "0xC08280", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E45")]
			[Address(RVA = "0xC08284", Offset = "0xC08284", VA = "0xC08284", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E47")]
			[Address(RVA = "0xC083BC", Offset = "0xC083BC", VA = "0xC083BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880FCC", Offset = "0x880FCC")]
		private sealed class <CoStartTutorial>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700014B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E4C")]
				[Address(RVA = "0xC08560", Offset = "0xC08560", VA = "0xC08560", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E4E")]
				[Address(RVA = "0xC085A8", Offset = "0xC085A8", VA = "0xC085A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xC08404", Offset = "0xC08404", VA = "0xC08404")]
			[DebuggerHidden]
			public <CoStartTutorial>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0xC08430", Offset = "0xC08430", VA = "0xC08430", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0xC08434", Offset = "0xC08434", VA = "0xC08434", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0xC08568", Offset = "0xC08568", VA = "0xC08568", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8898E8", Offset = "0x8898E8")]
		[SerializeField]
		private GameObject startingChara;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject actionPoint;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889944", Offset = "0x889944")]
		private GameObject[] startingMobs;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889990", Offset = "0x889990")]
		private GameObject subQuestPrefab;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SubQuestBalloon _subBalloon;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SubQuest _subQuest;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isSubQuestCleared;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _isSetting;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8899DC", Offset = "0x8899DC")]
		private Action <UpdateStorageBalloon>k__BackingField;

		[Token(Token = "0x17000144")]
		private bool IsSpecialSubQuest
		{
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x1235BBC", Offset = "0x1235BBC", VA = "0x1235BBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000145")]
		private bool IsSpecialEpisode
		{
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x1235BF4", Offset = "0x1235BF4", VA = "0x1235BF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000146")]
		public Action UpdateStorageBalloon
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x1235C2C", Offset = "0x1235C2C", VA = "0x1235C2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894068", Offset = "0x894068")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x1235C34", Offset = "0x1235C34", VA = "0x1235C34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894078", Offset = "0x894078")]
			set
			{
			}
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x1233068", Offset = "0x1233068", VA = "0x1233068")]
		public void PrepareStandby()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x12332D0", Offset = "0x12332D0", VA = "0x12332D0")]
		public void PreparePlayed()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x1236210", Offset = "0x1236210", VA = "0x1236210")]
		private void SetEventBalloon()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x1235C3C", Offset = "0x1235C3C", VA = "0x1235C3C")]
		private void CheckSubQuest()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x1234D0C", Offset = "0x1234D0C", VA = "0x1234D0C")]
		public void UpdateSubQuestBalloon()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x1236420", Offset = "0x1236420", VA = "0x1236420")]
		private void OnClickBalloon(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x123653C", Offset = "0x123653C", VA = "0x123653C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x894088", Offset = "0x894088")]
		private IEnumerator CoStartEpisode()
		{
			return null;
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x12365A8", Offset = "0x12365A8", VA = "0x12365A8")]
		private void StartPuzzle()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x1234B88", Offset = "0x1234B88", VA = "0x1234B88")]
		public void PlaySubQuestCompleted()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x1236674", Offset = "0x1236674", VA = "0x1236674")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8940E8", Offset = "0x8940E8")]
		private IEnumerator CoStartSubQuestComplete()
		{
			return null;
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x12366E0", Offset = "0x12366E0", VA = "0x12366E0")]
		private void ShowHideObjectsInTimeline(bool isShow)
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x1236A68", Offset = "0x1236A68", VA = "0x1236A68")]
		public void ShowHideObjectsInSubQuest(bool isShow)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x123682C", Offset = "0x123682C", VA = "0x123682C")]
		private void SwitchObjects(bool isSwitchOn)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x12363AC", Offset = "0x12363AC", VA = "0x12363AC")]
		public void ShowHideMobs(bool isEnable)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x1236B5C", Offset = "0x1236B5C", VA = "0x1236B5C")]
		public void FoundPerson(int personNumber)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x1236BF0", Offset = "0x1236BF0", VA = "0x1236BF0")]
		public void FoundAnimation()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x1236C74", Offset = "0x1236C74", VA = "0x1236C74", Slot = "4")]
		public void OnPrefabPrepareCache()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x1236D34", Offset = "0x1236D34", VA = "0x1236D34", Slot = "5")]
		public void OnPrefabUseCache()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x1236098", Offset = "0x1236098", VA = "0x1236098")]
		private void StartTutorial()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x1236D38", Offset = "0x1236D38", VA = "0x1236D38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x894148", Offset = "0x894148")]
		private IEnumerator CoStartTutorial()
		{
			return null;
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x1236D94", Offset = "0x1236D94", VA = "0x1236D94")]
		public GameObject GetBalloon()
		{
			return null;
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x1236DB0", Offset = "0x1236DB0", VA = "0x1236DB0")]
		public EpisodeTrigger()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x1236DC0", Offset = "0x1236DC0", VA = "0x1236DC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8941A8", Offset = "0x8941A8")]
		private void <CoStartEpisode>b__22_0()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x1236DEC", Offset = "0x1236DEC", VA = "0x1236DEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8941B8", Offset = "0x8941B8")]
		private void <StartPuzzle>b__23_0()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class SubQuest : MonoBehaviour
	{
		[Token(Token = "0x2000301")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880FDC", Offset = "0x880FDC")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40010D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SubQuest <>4__this;

			[Token(Token = "0x40010D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isStart;

			[Token(Token = "0x6000E59")]
			[Address(RVA = "0xF9244C", Offset = "0xF9244C", VA = "0xF9244C")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0xF92454", Offset = "0xF92454", VA = "0xF92454")]
			internal void <CoStartTimeline>b__0()
			{
			}

			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0xF9254C", Offset = "0xF9254C", VA = "0xF9254C")]
			internal void <CoStartTimeline>b__1()
			{
			}
		}

		[Token(Token = "0x2000302")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880FEC", Offset = "0x880FEC")]
		private sealed class <CoStartTimeline>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SubQuest <>4__this;

			[Token(Token = "0x40010DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isStart;

			[Token(Token = "0x40010DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass16_0 <>8__1;

			[Token(Token = "0x1700014E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E5F")]
				[Address(RVA = "0xF92AF8", Offset = "0xF92AF8", VA = "0xF92AF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E61")]
				[Address(RVA = "0xF92B40", Offset = "0xF92B40", VA = "0xF92B40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0xF92798", Offset = "0xF92798", VA = "0xF92798")]
			[DebuggerHidden]
			public <CoStartTimeline>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0xF927C4", Offset = "0xF927C4", VA = "0xF927C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0xF927C8", Offset = "0xF927C8", VA = "0xF927C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E60")]
			[Address(RVA = "0xF92B00", Offset = "0xF92B00", VA = "0xF92B00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8899EC", Offset = "0x8899EC")]
		[SerializeField]
		private bool isTimeline;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889A38", Offset = "0x889A38")]
		[SerializeField]
		private GameObject actionPoint;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889A84", Offset = "0x889A84")]
		[SerializeField]
		protected GameObject client;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected EpisodeTrigger ParentTrigger;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Action TimelineStartAction;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Action TimelinePrepareEndAction;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected GameObject SubQuestBalloon;

		[Token(Token = "0x1700014D")]
		public bool IsTimeline
		{
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0xE16828", Offset = "0xE16828", VA = "0xE16828")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xE16830", Offset = "0xE16830", VA = "0xE16830")]
		public void PreparedSubQuest()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xE16C40", Offset = "0xE16C40", VA = "0xE16C40", Slot = "4")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xE16C44", Offset = "0xE16C44", VA = "0xE16C44", Slot = "5")]
		protected virtual void SetTimelinePrepare()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xE16AE0", Offset = "0xE16AE0", VA = "0xE16AE0")]
		private void SetClient()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xE16C48", Offset = "0xE16C48", VA = "0xE16C48")]
		public GameObject GetClientSubQuestBalloon()
		{
			return null;
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xE16BBC", Offset = "0xE16BBC", VA = "0xE16BBC")]
		private void SetClientSubQuestBalloon()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xE16D08", Offset = "0xE16D08", VA = "0xE16D08")]
		private void OnClickSubQuestStart(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xE16E1C", Offset = "0xE16E1C", VA = "0xE16E1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8942B8", Offset = "0x8942B8")]
		public IEnumerator CoStartTimeline(bool isStart)
		{
			return null;
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xE16E9C", Offset = "0xE16E9C", VA = "0xE16E9C")]
		public SubQuest()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class SubQuestEating : SubQuest
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889AD0", Offset = "0x889AD0")]
		private SubQuestBalloon subQuestBalloon;

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xE18DE4", Offset = "0xE18DE4", VA = "0xE18DE4", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xE18E18", Offset = "0xE18E18", VA = "0xE18E18")]
		public SubQuestEating()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class SubQuestFinding : SubQuest
	{
		[Serializable]
		[Token(Token = "0x2000305")]
		public class FindingData
		{
			[Token(Token = "0x40010E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889C4C", Offset = "0x889C4C")]
			public GameObject MissingPerson;

			[Token(Token = "0x40010E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Texture PersonTexture;

			[Token(Token = "0x40010E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int personNameId;

			[Token(Token = "0x40010E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int personHintId;

			[Token(Token = "0x40010E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889C84", Offset = "0x889C84")]
			public GameObject Mob;

			[Token(Token = "0x40010EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int mobMessageId;

			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0xF930F0", Offset = "0xF930F0", VA = "0xF930F0")]
			public FindingData()
			{
			}
		}

		[Token(Token = "0x2000306")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880FFC", Offset = "0x880FFC")]
		private sealed class <DisplayGuide>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SubQuestFinding <>4__this;

			[Token(Token = "0x40010EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isEnable;

			[Token(Token = "0x17000150")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E71")]
				[Address(RVA = "0xF930A0", Offset = "0xF930A0", VA = "0xF930A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000151")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E73")]
				[Address(RVA = "0xF930E8", Offset = "0xF930E8", VA = "0xF930E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0xF92EA0", Offset = "0xF92EA0", VA = "0xF92EA0")]
			[DebuggerHidden]
			public <DisplayGuide>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0xF92ECC", Offset = "0xF92ECC", VA = "0xF92ECC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E70")]
			[Address(RVA = "0xF92ED0", Offset = "0xF92ED0", VA = "0xF92ED0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E72")]
			[Address(RVA = "0xF930A8", Offset = "0xF930A8", VA = "0xF930A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889B1C", Offset = "0x889B1C")]
		private FindingData[] findingDataList;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889B68", Offset = "0x889B68")]
		private GameObject destination;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889BB4", Offset = "0x889BB4")]
		private GameObject guide;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889C00", Offset = "0x889C00")]
		private ParticleSystem foundEffect;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SubQuestFindingMissingPerson[] _persons;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SubQuestFindingMob[] _mobs;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SubQuestFindingGuide _guideBook;

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xE18E28", Offset = "0xE18E28", VA = "0xE18E28", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xE19688", Offset = "0xE19688", VA = "0xE19688", Slot = "5")]
		protected override void SetTimelinePrepare()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xE19554", Offset = "0xE19554", VA = "0xE19554")]
		private void CheckCurrentState()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xE19608", Offset = "0xE19608", VA = "0xE19608")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x894368", Offset = "0x894368")]
		private IEnumerator DisplayGuide(bool isEnable)
		{
			return null;
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xE199EC", Offset = "0xE199EC", VA = "0xE199EC")]
		public void FoundPerson(int personNumber)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xE19C5C", Offset = "0xE19C5C", VA = "0xE19C5C")]
		public void FoundAnimation()
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xE19D2C", Offset = "0xE19D2C", VA = "0xE19D2C")]
		public SubQuestFinding()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xE19D3C", Offset = "0xE19D3C", VA = "0xE19D3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8943C8", Offset = "0x8943C8")]
		private void <SetTimelinePrepare>b__9_0()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xE19DF4", Offset = "0xE19DF4", VA = "0xE19DF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8943D8", Offset = "0x8943D8")]
		private void <SetTimelinePrepare>b__9_1()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class SubQuestFindingGuide : MonoBehaviour
	{
		[Token(Token = "0x2000308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88100C", Offset = "0x88100C")]
		private sealed class <Start>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SubQuestFindingGuide <>4__this;

			[Token(Token = "0x17000152")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E7F")]
				[Address(RVA = "0xF9360C", Offset = "0xF9360C", VA = "0xF9360C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000153")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E81")]
				[Address(RVA = "0xF93654", Offset = "0xF93654", VA = "0xF93654", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0xF930F8", Offset = "0xF930F8", VA = "0xF930F8")]
			[DebuggerHidden]
			public <Start>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0xF93124", Offset = "0xF93124", VA = "0xF93124", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0xF93128", Offset = "0xF93128", VA = "0xF93128", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E80")]
			[Address(RVA = "0xF93614", Offset = "0xF93614", VA = "0xF93614", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889CBC", Offset = "0x889CBC")]
		private Vector3 initialPosition;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 movingPosition;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889D18", Offset = "0x889D18")]
		private Vector3 initialRotation;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 movingRotation;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889D74", Offset = "0x889D74")]
		[SerializeField]
		private Ease moveEasing;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Ease rotateEasing;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889DD0", Offset = "0x889DD0")]
		[SerializeField]
		private float firstAnimationTime;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889E1C", Offset = "0x889E1C")]
		[SerializeField]
		private float lastAnimationTime;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889E68", Offset = "0x889E68")]
		[SerializeField]
		private GameObject[] missions;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MeshRenderer[] thumbnails;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MeshRenderer[] checks;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMesh[] textNames;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMesh[] textHints;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int MainTex;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly Vector3 LeftHandLocalPosition;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Vector3 LeftHandLocalRotation;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly Vector3 RightHandLocalPosition;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly Vector3 RightHandLocalRotation;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioClip _voice;

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xE19EF0", Offset = "0xE19EF0", VA = "0xE19EF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xE19C08", Offset = "0xE19C08", VA = "0xE19C08")]
		public void EnableCheckMark(int targetId)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xE19F6C", Offset = "0xE19F6C", VA = "0xE19F6C")]
		public void SetMissions(SubQuestFinding.FindingData[] datas, AudioClip voice)
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xE1A17C", Offset = "0xE1A17C", VA = "0xE1A17C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x894438", Offset = "0x894438")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xE1A1E8", Offset = "0xE1A1E8", VA = "0xE1A1E8")]
		public SubQuestFindingGuide()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xE1A2F8", Offset = "0xE1A2F8", VA = "0xE1A2F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894498", Offset = "0x894498")]
		private void <Start>b__22_0()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xE1A38C", Offset = "0xE1A38C", VA = "0xE1A38C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8944A8", Offset = "0x8944A8")]
		private void <Start>b__22_1()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class SubQuestFindingMissingPerson : MonoBehaviour
	{
		[Token(Token = "0x200030A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88101C", Offset = "0x88101C")]
		private sealed class <CoStartMoveToGoal>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400110E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400110F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SubQuestFindingMissingPerson <>4__this;

			[Token(Token = "0x4001111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Rigidbody <rig>5__2;

			[Token(Token = "0x4001112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ParticleSystem <prefab>5__3;

			[Token(Token = "0x4001113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <height>5__4;

			[Token(Token = "0x17000155")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E8C")]
				[Address(RVA = "0xF93C68", Offset = "0xF93C68", VA = "0xF93C68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000156")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E8E")]
				[Address(RVA = "0xF93CB0", Offset = "0xF93CB0", VA = "0xF93CB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E89")]
			[Address(RVA = "0xF9365C", Offset = "0xF9365C", VA = "0xF9365C")]
			[DebuggerHidden]
			public <CoStartMoveToGoal>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0xF93688", Offset = "0xF93688", VA = "0xF93688", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0xF9368C", Offset = "0xF9368C", VA = "0xF9368C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0xF93C70", Offset = "0xF93C70", VA = "0xF93C70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889EF4", Offset = "0x889EF4")]
		private bool isSlope;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _destinationTransform;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EpisodeTrigger _trigger;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem _foundEffect;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ZookeeperVR.Visitor.Visitor _visitor;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isFound;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InitialAnimation _isInitialAnimation;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EpisodeCharacterController _character;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889F40", Offset = "0x889F40")]
		private int <PersonNumber>k__BackingField;

		[Token(Token = "0x17000154")]
		public int PersonNumber
		{
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0xE1A3F0", Offset = "0xE1A3F0", VA = "0xE1A3F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894508", Offset = "0x894508")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0xE1A3F8", Offset = "0xE1A3F8", VA = "0xE1A3F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894518", Offset = "0x894518")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xE1916C", Offset = "0xE1916C", VA = "0xE1916C")]
		public void Init(int number, GameObject destination, ParticleSystem foundEffect)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xE1973C", Offset = "0xE1973C", VA = "0xE1973C")]
		public void CheckCurrentState()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xE1A400", Offset = "0xE1A400", VA = "0xE1A400")]
		private void OnClickTarget(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xE1A514", Offset = "0xE1A514", VA = "0xE1A514")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x894528", Offset = "0x894528")]
		private IEnumerator CoStartMoveToGoal()
		{
			return null;
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xE1A580", Offset = "0xE1A580", VA = "0xE1A580")]
		public SubQuestFindingMissingPerson()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class SubQuestFindingMob : MonoBehaviour
	{
		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _missingPersonNumber;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VisitorMessageBalloon _balloon;

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xE193D4", Offset = "0xE193D4", VA = "0xE193D4")]
		public void Init(int number, int messageId)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xE198C8", Offset = "0xE198C8", VA = "0xE198C8")]
		public void CheckCurrentState()
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xE19ADC", Offset = "0xE19ADC", VA = "0xE19ADC")]
		public void DisableBalloon(int personNumber)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xE1A588", Offset = "0xE1A588", VA = "0xE1A588")]
		public SubQuestFindingMob()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class SubQuestFishing : SubQuest
	{
		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889F50", Offset = "0x889F50")]
		private SubQuestBalloon storageBalloon;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889F9C", Offset = "0x889F9C")]
		private AudioClip voiceEn;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip voiceJp;

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xE1A590", Offset = "0xE1A590", VA = "0xE1A590", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xE1A8AC", Offset = "0xE1A8AC", VA = "0xE1A8AC", Slot = "5")]
		protected override void SetTimelinePrepare()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xE1A63C", Offset = "0xE1A63C", VA = "0xE1A63C")]
		private void DisplayCharacters(bool isEnabled)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xE1A768", Offset = "0xE1A768", VA = "0xE1A768")]
		private void SetBalloon(bool flg)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xE1A960", Offset = "0xE1A960", VA = "0xE1A960")]
		public GameObject GetBalloon()
		{
			return null;
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xE1A97C", Offset = "0xE1A97C", VA = "0xE1A97C")]
		private void PlayVoice()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xE1AA4C", Offset = "0xE1AA4C", VA = "0xE1AA4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xE1AAD0", Offset = "0xE1AAD0", VA = "0xE1AAD0")]
		public SubQuestFishing()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xE1AAE0", Offset = "0xE1AAE0", VA = "0xE1AAE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8945D8", Offset = "0x8945D8")]
		private void <SetTimelinePrepare>b__4_0()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xE1AB0C", Offset = "0xE1AB0C", VA = "0xE1AB0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8945E8", Offset = "0x8945E8")]
		private void <SetTimelinePrepare>b__4_1()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xE1AC18", Offset = "0xE1AC18", VA = "0xE1AC18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8945F8", Offset = "0x8945F8")]
		private void <SetBalloon>b__6_0()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class SubQuestPickup : SubQuest
	{
		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x889FF8", Offset = "0x889FF8")]
		[SerializeField]
		private SubQuestBalloon subQuestBalloon;

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xE1AC30", Offset = "0xE1AC30", VA = "0xE1AC30", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xE1AD9C", Offset = "0xE1AD9C", VA = "0xE1AD9C")]
		public SubQuestPickup()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class SubQuestWashing : SubQuest
	{
		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A044", Offset = "0x88A044")]
		[SerializeField]
		private SubQuestBalloon subQuestBalloon;

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xE1ADAC", Offset = "0xE1ADAC", VA = "0xE1ADAC", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xE1AF78", Offset = "0xE1AF78", VA = "0xE1AF78")]
		public SubQuestWashing()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class SubQuestWashingAnimal : SubQuest
	{
		[Token(Token = "0x2000310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88102C", Offset = "0x88102C")]
		private sealed class <CoGrabFireHose>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SubQuestWashingAnimal <>4__this;

			[Token(Token = "0x17000157")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EAE")]
				[Address(RVA = "0xF93E00", Offset = "0xF93E00", VA = "0xF93E00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000158")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EB0")]
				[Address(RVA = "0xF93E48", Offset = "0xF93E48", VA = "0xF93E48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0xF93CB8", Offset = "0xF93CB8", VA = "0xF93CB8")]
			[DebuggerHidden]
			public <CoGrabFireHose>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0xF93CE4", Offset = "0xF93CE4", VA = "0xF93CE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0xF93CE8", Offset = "0xF93CE8", VA = "0xF93CE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0xF93E08", Offset = "0xF93E08", VA = "0xF93E08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A090", Offset = "0x88A090")]
		[SerializeField]
		private GameObject hose;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A0DC", Offset = "0x88A0DC")]
		private Material dirtyMaterial;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A128", Offset = "0x88A128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A128", Offset = "0x88A128")]
		private int cleaningCount;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A194", Offset = "0x88A194")]
		private ParticleSystem washingEffect;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CleaningHose _hose;

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xE1AF88", Offset = "0xE1AF88", VA = "0xE1AF88", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xE1B234", Offset = "0xE1B234", VA = "0xE1B234", Slot = "5")]
		protected override void SetTimelinePrepare()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xE1B030", Offset = "0xE1B030", VA = "0xE1B030")]
		private void DisplayCharacters(bool isEnabled)
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xE1B15C", Offset = "0xE1B15C", VA = "0xE1B15C")]
		public void GrabFireHose()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xE1B2E8", Offset = "0xE1B2E8", VA = "0xE1B2E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x894608", Offset = "0x894608")]
		private IEnumerator CoGrabFireHose()
		{
			return null;
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xE1B354", Offset = "0xE1B354", VA = "0xE1B354")]
		public void ReleaseFireHose()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xE1B3FC", Offset = "0xE1B3FC", VA = "0xE1B3FC")]
		public SubQuestWashingAnimal()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xE1B414", Offset = "0xE1B414", VA = "0xE1B414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894668", Offset = "0x894668")]
		private void <SetTimelinePrepare>b__6_0()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xE1B498", Offset = "0xE1B498", VA = "0xE1B498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894678", Offset = "0x894678")]
		private void <SetTimelinePrepare>b__6_1()
		{
		}
	}
}
namespace ZookeeperVR.Data
{
	[Serializable]
	[Token(Token = "0x2000311")]
	public class ActingNode
	{
		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string animation;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "MultilineAttribute", RVA = "0x88A1E0", Offset = "0x88A1E0")]
		public string message;

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xE1E700", Offset = "0xE1E700", VA = "0xE1E700")]
		public ActingNode()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public enum PuzzleStageType
	{
		[Token(Token = "0x4001126")]
		Normal,
		[Token(Token = "0x4001127")]
		OneMove,
		[Token(Token = "0x4001128")]
		ScoreAttack,
		[Token(Token = "0x4001129")]
		EnchoRobot,
		[Token(Token = "0x400112A")]
		RabbitAdventure,
		[Token(Token = "0x400112B")]
		TargetCapture,
		[Token(Token = "0x400112C")]
		FruitBombCapture
	}
	[Token(Token = "0x2000313")]
	public enum ActionCategory
	{
		[Token(Token = "0x400112E")]
		None,
		[Token(Token = "0x400112F")]
		Eating,
		[Token(Token = "0x4001130")]
		Fishing,
		[Token(Token = "0x4001131")]
		Pickup,
		[Token(Token = "0x4001132")]
		Washing,
		[Token(Token = "0x4001133")]
		Finding
	}
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x88103C", Offset = "0x88103C")]
	public class QuestData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000315")]
		public class PuzzleStage
		{
			[Token(Token = "0x400113A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PuzzleStageType StageType;

			[Token(Token = "0x400113B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int StageId;

			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0xF8D2A4", Offset = "0xF8D2A4", VA = "0xF8D2A4")]
			public PuzzleStage()
			{
			}
		}

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A1F4", Offset = "0x88A1F4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88A1F4", Offset = "0x88A1F4")]
		private int _questNameMessageId;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public int id;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public int puzzleBg;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public PuzzleStage[] PuzzleStageList;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public int EpisodeAreaId;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public int EpisodeId;

		[Token(Token = "0x17000159")]
		public int NumStages
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x101EAAC", Offset = "0x101EAAC", VA = "0x101EAAC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x101EAC4", Offset = "0x101EAC4", VA = "0x101EAC4")]
		public string GetQuestName()
		{
			return null;
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x101EB20", Offset = "0x101EB20", VA = "0x101EB20")]
		public PuzzleStageType GetCurrentPuzzleStageType()
		{
			return default(PuzzleStageType);
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x101EC78", Offset = "0x101EC78", VA = "0x101EC78")]
		public int GetCurrentPuzzleStageId()
		{
			return default(int);
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x101EDD0", Offset = "0x101EDD0", VA = "0x101EDD0")]
		public QuestData()
		{
		}
	}
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x88104C", Offset = "0x88104C")]
	public class SubQuestData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000317")]
		public class AnimalData
		{
			[Token(Token = "0x4001146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A4BC", Offset = "0x88A4BC")]
			public Sprite sprite;

			[Token(Token = "0x4001147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimalDefine.Type type;

			[Token(Token = "0x4001148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int num;

			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0xF92E80", Offset = "0xF92E80", VA = "0xF92E80")]
			public AnimalData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000318")]
		public class FoodData
		{
			[Token(Token = "0x4001149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A4F4", Offset = "0x88A4F4")]
			public Sprite sprite;

			[Token(Token = "0x400114A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FoodDefine.Type type;

			[Token(Token = "0x400114B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int num;

			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0xF92E88", Offset = "0xF92E88", VA = "0xF92E88")]
			public FoodData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000319")]
		public class GarbageData
		{
			[Token(Token = "0x400114C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A52C", Offset = "0x88A52C")]
			public Sprite sprite;

			[Token(Token = "0x400114D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GarbageDefine.Type type;

			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int num;

			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0xF92E90", Offset = "0xF92E90", VA = "0xF92E90")]
			public GarbageData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200031A")]
		public class ItemData
		{
			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A564", Offset = "0x88A564")]
			public Sprite sprite;

			[Token(Token = "0x4001150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ItemDefine.Type type;

			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int num;

			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0xF92E98", Offset = "0xF92E98", VA = "0xF92E98")]
			public ItemData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200031B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88105C", Offset = "0x88105C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<AnimalData, int> <>9__18_0;

			[Token(Token = "0x4001154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<FoodData, int> <>9__18_1;

			[Token(Token = "0x4001155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<GarbageData, int> <>9__18_2;

			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ItemData, int> <>9__18_3;

			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0xF92D80", Offset = "0xF92D80", VA = "0xF92D80")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0xF92D88", Offset = "0xF92D88", VA = "0xF92D88")]
			internal int <get_ClearedCount>b__18_0(AnimalData x)
			{
				return default(int);
			}

			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0xF92DA0", Offset = "0xF92DA0", VA = "0xF92DA0")]
			internal int <get_ClearedCount>b__18_1(FoodData x)
			{
				return default(int);
			}

			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0xF92DB8", Offset = "0xF92DB8", VA = "0xF92DB8")]
			internal int <get_ClearedCount>b__18_2(GarbageData x)
			{
				return default(int);
			}

			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0xF92DD0", Offset = "0xF92DD0", VA = "0xF92DD0")]
			internal int <get_ClearedCount>b__18_3(ItemData x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200031C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88106C", Offset = "0x88106C")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimalDefine.Type aType;

			[Token(Token = "0x4001158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FoodDefine.Type fType;

			[Token(Token = "0x4001159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GarbageDefine.Type gType;

			[Token(Token = "0x400115A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ItemDefine.Type iType;

			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0xF92DE8", Offset = "0xF92DE8", VA = "0xF92DE8")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0xF92DF0", Offset = "0xF92DF0", VA = "0xF92DF0")]
			internal bool <SubQuestCheck>b__0(AnimalData x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0xF92E14", Offset = "0xF92E14", VA = "0xF92E14")]
			internal bool <SubQuestCheck>b__1(FoodData x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0xF92E38", Offset = "0xF92E38", VA = "0xF92E38")]
			internal bool <SubQuestCheck>b__2(GarbageData x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0xF92E5C", Offset = "0xF92E5C", VA = "0xF92E5C")]
			internal bool <SubQuestCheck>b__3(ItemData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A2B4", Offset = "0x88A2B4")]
		public int subQuestNameId;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string subQuestName;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A2FC", Offset = "0x88A2FC")]
		[SerializeField]
		private AudioClip startVoiceEn;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip startVoiceJp;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A358", Offset = "0x88A358")]
		[SerializeField]
		private AudioClip[] voiceList;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A3A4", Offset = "0x88A3A4")]
		public ActionCategory action;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88A3DC", Offset = "0x88A3DC")]
		public AnimalData[] animalList;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88A414", Offset = "0x88A414")]
		[SerializeField]
		public FoodData[] foodList;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88A44C", Offset = "0x88A44C")]
		public GarbageData[] garbageList;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88A484", Offset = "0x88A484")]
		public ItemData[] itemList;

		[Token(Token = "0x1700015A")]
		public AudioClip StartVoice
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0xE182A4", Offset = "0xE182A4", VA = "0xE182A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		public int ClearedCount
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0xE18424", Offset = "0xE18424", VA = "0xE18424")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xE18344", Offset = "0xE18344", VA = "0xE18344")]
		public AudioClip FreeVoice()
		{
			return null;
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xE1881C", Offset = "0xE1881C", VA = "0xE1881C")]
		public bool FirstActionCheck(ActionCategory category, FoodDefine.Type fType = FoodDefine.Type.None, GarbageDefine.Type gType = GarbageDefine.Type.None, ItemDefine.Type iType = ItemDefine.Type.None)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xE189D0", Offset = "0xE189D0", VA = "0xE189D0")]
		public bool SubQuestCheck(ActionCategory category, AnimalDefine.Type aType = AnimalDefine.Type.None, FoodDefine.Type fType = FoodDefine.Type.None, GarbageDefine.Type gType = GarbageDefine.Type.None, ItemDefine.Type iType = ItemDefine.Type.None)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xE18D1C", Offset = "0xE18D1C", VA = "0xE18D1C")]
		public SubQuestData()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class UserQuestData
	{
		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int selectedBuildingIndex;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isCleared;

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x1875624", Offset = "0x1875624", VA = "0x1875624")]
		public UserQuestData(int _id)
		{
		}
	}
	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x88107C", Offset = "0x88107C")]
	public class ZVRAnimalData : ScriptableObject
	{
		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A59C", Offset = "0x88A59C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A59C", Offset = "0x88A59C")]
		public float EatingMargin;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A5F4", Offset = "0x88A5F4")]
		public float baseSize;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A62C", Offset = "0x88A62C")]
		public float radius;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A644", Offset = "0x88A644")]
		public float height;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A65C", Offset = "0x88A65C")]
		public float MoveSpeed;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A674", Offset = "0x88A674")]
		public float RiseSpeed;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A68C", Offset = "0x88A68C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A68C", Offset = "0x88A68C")]
		public float vibrationFrequency;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A6E0", Offset = "0x88A6E0")]
		public float vibrationAmplitude;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A6F8", Offset = "0x88A6F8")]
		public int IdleWeight;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int TiredWeight;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int SleepWeight;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int AngryWeight;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int JoyWeight;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A730", Offset = "0x88A730")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A730", Offset = "0x88A730")]
		public float balloonHeight;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A784", Offset = "0x88A784")]
		public GameObject ReleaseHitParticlePrefab;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A7BC", Offset = "0x88A7BC")]
		public AudioClip EatingSE;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A7F4", Offset = "0x88A7F4")]
		public FoodDefine.Type[] EatableFoods;

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x11695BC", Offset = "0x11695BC", VA = "0x11695BC")]
		public ZVRAnimalData()
		{
		}
	}
	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x88108C", Offset = "0x88108C")]
	public class ZVRVisitorData : ScriptableObject
	{
		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A82C", Offset = "0x88A82C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A82C", Offset = "0x88A82C")]
		public float moveSpeed;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A880", Offset = "0x88A880")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A880", Offset = "0x88A880")]
		public float radius;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A8D8", Offset = "0x88A8D8")]
		public float height;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A8F0", Offset = "0x88A8F0")]
		public float endReachedDistance;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A908", Offset = "0x88A908")]
		public int startMessageId;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A940", Offset = "0x88A940")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A940", Offset = "0x88A940")]
		public float balloonHeight;

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x1173434", Offset = "0x1173434", VA = "0x1173434")]
		public ZVRVisitorData()
		{
		}
	}
}
namespace ZookeeperVR.AnimalStates
{
	[Token(Token = "0x2000320")]
	public class AnimalState
	{
		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xE204F0", Offset = "0xE204F0", VA = "0xE204F0", Slot = "4")]
		public virtual bool EnableStroking()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xE204F8", Offset = "0xE204F8", VA = "0xE204F8", Slot = "5")]
		public virtual void Enter(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xE204FC", Offset = "0xE204FC", VA = "0xE204FC", Slot = "6")]
		public virtual void Update(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xE20500", Offset = "0xE20500", VA = "0xE20500", Slot = "7")]
		public virtual void Exit(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xE20504", Offset = "0xE20504", VA = "0xE20504", Slot = "8")]
		public virtual void OnCollisionEnter(Collision collision, OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xE20508", Offset = "0xE20508", VA = "0xE20508")]
		public AnimalState()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class AnimalStateAction : AnimalState
	{
		[Token(Token = "0x2000322")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88109C", Offset = "0x88109C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRAnimal animal;

			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0xC02130", Offset = "0xC02130", VA = "0xC02130")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xC02138", Offset = "0xC02138", VA = "0xC02138")]
			internal void <Enter>b__0()
			{
			}
		}

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _elapsedTime;

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xE20510", Offset = "0xE20510", VA = "0xE20510", Slot = "5")]
		public override void Enter(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xE2077C", Offset = "0xE2077C", VA = "0xE2077C", Slot = "6")]
		public override void Update(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xE20B74", Offset = "0xE20B74", VA = "0xE20B74", Slot = "7")]
		public override void Exit(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xE20C40", Offset = "0xE20C40", VA = "0xE20C40")]
		public AnimalStateAction()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class AnimalStateActionRandom : AnimalState
	{
		[Token(Token = "0x2000324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8810AC", Offset = "0x8810AC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400117A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRAnimal animal;

			[Token(Token = "0x400117B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimalStateActionRandom <>4__this;

			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0xC02270", Offset = "0xC02270", VA = "0xC02270")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0xC02278", Offset = "0xC02278", VA = "0xC02278")]
			internal void <Update>b__0()
			{
			}
		}

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform[] _points;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _stayTime;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _elapsedTime;

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xE20C50", Offset = "0xE20C50", VA = "0xE20C50", Slot = "5")]
		public override void Enter(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xE20E78", Offset = "0xE20E78", VA = "0xE20E78", Slot = "6")]
		public override void Update(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xE20E24", Offset = "0xE20E24", VA = "0xE20E24")]
		private void SetStayTime(bool isFast = false)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xE215A4", Offset = "0xE215A4", VA = "0xE215A4", Slot = "7")]
		public override void Exit(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xE21670", Offset = "0xE21670", VA = "0xE21670")]
		public AnimalStateActionRandom()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class AnimalStateEating : AnimalState
	{
		[Token(Token = "0x2000326")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8810BC", Offset = "0x8810BC")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimalStateEating <>4__this;

			[Token(Token = "0x4001181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OVRAnimal animal;

			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0xC02498", Offset = "0xC02498", VA = "0xC02498")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0xC024A0", Offset = "0xC024A0", VA = "0xC024A0")]
			internal void <Enter>b__0()
			{
			}
		}

		[Token(Token = "0x2000327")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8810CC", Offset = "0x8810CC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRAnimal animal;

			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0xC0250C", Offset = "0xC0250C", VA = "0xC0250C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0xC02514", Offset = "0xC02514", VA = "0xC02514")]
			internal void <Update>b__0()
			{
			}
		}

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Food _food;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _hasDone;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _isReady;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _timer;

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xE21678", Offset = "0xE21678", VA = "0xE21678")]
		public void Init(Food food)
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xE21688", Offset = "0xE21688", VA = "0xE21688", Slot = "5")]
		public override void Enter(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xE21768", Offset = "0xE21768", VA = "0xE21768", Slot = "6")]
		public override void Update(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xE21A30", Offset = "0xE21A30", VA = "0xE21A30", Slot = "7")]
		public override void Exit(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xE21AE8", Offset = "0xE21AE8", VA = "0xE21AE8", Slot = "4")]
		public override bool EnableStroking()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xE21AF0", Offset = "0xE21AF0", VA = "0xE21AF0")]
		public AnimalStateEating()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class AnimalStateEatingGrabbedFood : AnimalState
	{
		[Token(Token = "0x2000329")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8810DC", Offset = "0x8810DC")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimalStateEatingGrabbedFood <>4__this;

			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OVRAnimal animal;

			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0xC0253C", Offset = "0xC0253C", VA = "0xC0253C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0xC02544", Offset = "0xC02544", VA = "0xC02544")]
			internal void <Enter>b__0()
			{
			}
		}

		[Token(Token = "0x200032A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8810EC", Offset = "0x8810EC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRAnimal animal;

			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0xC025B0", Offset = "0xC025B0", VA = "0xC025B0")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0xC025B8", Offset = "0xC025B8", VA = "0xC025B8")]
			internal void <Update>b__0()
			{
			}
		}

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Food _food;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _hasDone;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _isReady;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _timer;

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xE21AF8", Offset = "0xE21AF8", VA = "0xE21AF8")]
		public void Init(Food food)
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xE21B08", Offset = "0xE21B08", VA = "0xE21B08", Slot = "5")]
		public override void Enter(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xE21BE8", Offset = "0xE21BE8", VA = "0xE21BE8", Slot = "6")]
		public override void Update(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xE21E90", Offset = "0xE21E90", VA = "0xE21E90", Slot = "7")]
		public override void Exit(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xE21F48", Offset = "0xE21F48", VA = "0xE21F48", Slot = "4")]
		public override bool EnableStroking()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xE21F50", Offset = "0xE21F50", VA = "0xE21F50")]
		public AnimalStateEatingGrabbedFood()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class AnimalStateGrabbed : AnimalState
	{
		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xE21F58", Offset = "0xE21F58", VA = "0xE21F58", Slot = "5")]
		public override void Enter(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xE21FC0", Offset = "0xE21FC0", VA = "0xE21FC0", Slot = "6")]
		public override void Update(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xE22054", Offset = "0xE22054", VA = "0xE22054", Slot = "7")]
		public override void Exit(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xE22058", Offset = "0xE22058", VA = "0xE22058", Slot = "4")]
		public override bool EnableStroking()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xE20B54", Offset = "0xE20B54", VA = "0xE20B54")]
		public AnimalStateGrabbed()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class AnimalStateIdle : AnimalState
	{
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xE22060", Offset = "0xE22060", VA = "0xE22060", Slot = "5")]
		public override void Enter(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xE22064", Offset = "0xE22064", VA = "0xE22064", Slot = "6")]
		public override void Update(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xE22248", Offset = "0xE22248", VA = "0xE22248", Slot = "7")]
		public override void Exit(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xE2224C", Offset = "0xE2224C", VA = "0xE2224C")]
		public AnimalStateIdle()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class AnimalStateMoveInExhibition : AnimalState
	{
		[Token(Token = "0x200032E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8810FC", Offset = "0x8810FC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRAnimal animal;

			[Token(Token = "0x6000F04")]
			[Address(RVA = "0xC025E0", Offset = "0xC025E0", VA = "0xC025E0")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000F05")]
			[Address(RVA = "0xC025E8", Offset = "0xC025E8", VA = "0xC025E8")]
			internal void <Enter>b__0()
			{
			}
		}

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Food _targetFood;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _playerTransform;

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xE22254", Offset = "0xE22254", VA = "0xE22254", Slot = "5")]
		public override void Enter(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xE224B8", Offset = "0xE224B8", VA = "0xE224B8", Slot = "6")]
		public override void Update(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xE22838", Offset = "0xE22838", VA = "0xE22838", Slot = "7")]
		public override void Exit(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xE20B5C", Offset = "0xE20B5C", VA = "0xE20B5C")]
		public AnimalStateMoveInExhibition()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class AnimalStateMoveToFood : AnimalState
	{
		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _scaleEatingMargin;

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xE22954", Offset = "0xE22954", VA = "0xE22954", Slot = "5")]
		public override void Enter(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xE229F4", Offset = "0xE229F4", VA = "0xE229F4", Slot = "6")]
		public override void Update(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xE22BB4", Offset = "0xE22BB4", VA = "0xE22BB4", Slot = "7")]
		public override void Exit(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xE20B64", Offset = "0xE20B64", VA = "0xE20B64")]
		public AnimalStateMoveToFood()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class AnimalStateMoveToHighGround : AnimalState
	{
		[Token(Token = "0x2000331")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88110C", Offset = "0x88110C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400118F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRAnimal animal;

			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0xC02720", Offset = "0xC02720", VA = "0xC02720")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0xC02728", Offset = "0xC02728", VA = "0xC02728")]
			internal void <Enter>b__0()
			{
			}
		}

		[Token(Token = "0x2000332")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88111C", Offset = "0x88111C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRAnimal animal;

			[Token(Token = "0x4001191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Food targetFood;

			[Token(Token = "0x6000F10")]
			[Address(RVA = "0xC02860", Offset = "0xC02860", VA = "0xC02860")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000F11")]
			[Address(RVA = "0xC02868", Offset = "0xC02868", VA = "0xC02868")]
			internal void <Update>b__0()
			{
			}
		}

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _elapsedTime;

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xE22C44", Offset = "0xE22C44", VA = "0xE22C44", Slot = "5")]
		public override void Enter(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xE22F74", Offset = "0xE22F74", VA = "0xE22F74", Slot = "6")]
		public override void Update(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xE23400", Offset = "0xE23400", VA = "0xE23400", Slot = "7")]
		public override void Exit(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xE22830", Offset = "0xE22830", VA = "0xE22830")]
		public AnimalStateMoveToHighGround()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class AnimalStateReleased : AnimalState
	{
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xE23528", Offset = "0xE23528", VA = "0xE23528", Slot = "4")]
		public override bool EnableStroking()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xE23530", Offset = "0xE23530", VA = "0xE23530", Slot = "5")]
		public override void Enter(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xE23534", Offset = "0xE23534", VA = "0xE23534", Slot = "8")]
		public override void OnCollisionEnter(Collision collision, OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xE236B8", Offset = "0xE236B8", VA = "0xE236B8", Slot = "6")]
		public override void Update(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xE23740", Offset = "0xE23740", VA = "0xE23740", Slot = "7")]
		public override void Exit(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xE2204C", Offset = "0xE2204C", VA = "0xE2204C")]
		public AnimalStateReleased()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class AnimalStateWaiting : AnimalState
	{
		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform _playerTransform;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isRotate;

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xE23744", Offset = "0xE23744", VA = "0xE23744", Slot = "5")]
		public override void Enter(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xE237A4", Offset = "0xE237A4", VA = "0xE237A4", Slot = "6")]
		public override void Update(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xE23B30", Offset = "0xE23B30", VA = "0xE23B30", Slot = "7")]
		public override void Exit(OVRAnimal animal)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xE20B6C", Offset = "0xE20B6C", VA = "0xE20B6C")]
		public AnimalStateWaiting()
		{
		}
	}
}
namespace ZookeeperVR.Animal
{
	[Token(Token = "0x2000335")]
	public class AnimalManager : StaticAccessBehaviour<AnimalManager>
	{
		[Serializable]
		[Token(Token = "0x2000336")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88112C", Offset = "0x88112C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<OVRAnimal[], IEnumerable<OVRAnimal>> <>9__4_0;

			[Token(Token = "0x6000F24")]
			[Address(RVA = "0xC02120", Offset = "0xC02120", VA = "0xC02120")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F25")]
			[Address(RVA = "0xC02128", Offset = "0xC02128", VA = "0xC02128")]
			internal IEnumerable<OVRAnimal> <PrepareAnimal>b__4_0(OVRAnimal[] x)
			{
				return null;
			}
		}

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, OVRAnimal[]> _areaAnimals;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OVRAnimal[] _allAnimals;

		[Token(Token = "0x4001196")]
		public const string ShaderParam = "_Blend";

		[Token(Token = "0x4001197")]
		public const string AnimalTag = "WashableStains";

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xE1EFB4", Offset = "0xE1EFB4", VA = "0xE1EFB4")]
		public void PrepareAnimal()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xE1F398", Offset = "0xE1F398", VA = "0xE1F398")]
		public void PauseAllAnimals()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xE1F440", Offset = "0xE1F440", VA = "0xE1F440")]
		public void ResumeTargetAreaAnimals(int areaId)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xE1F548", Offset = "0xE1F548", VA = "0xE1F548")]
		public void ResumeAllAnimals()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xE1F4EC", Offset = "0xE1F4EC", VA = "0xE1F4EC")]
		public OVRAnimal[] GetAnimals(int areaId)
		{
			return null;
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xE1F5F0", Offset = "0xE1F5F0", VA = "0xE1F5F0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xE1F6AC", Offset = "0xE1F6AC", VA = "0xE1F6AC")]
		public AnimalManager()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class AnimalMaterialSettings : MonoBehaviour
	{
		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A994", Offset = "0x88A994")]
		private EpisodeTrigger target;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88A9E0", Offset = "0x88A9E0")]
		private Material targetMaterial;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Blend;

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xE1F738", Offset = "0xE1F738", VA = "0xE1F738")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xE1FB9C", Offset = "0xE1FB9C", VA = "0xE1FB9C")]
		public AnimalMaterialSettings()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class AnimalNotificationExhibition : MonoBehaviour
	{
		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88AA2C", Offset = "0x88AA2C")]
		[SerializeField]
		private bool isNotification;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OVRAnimal[] _animals;

		[Token(Token = "0x400119F")]
		private const string FOOD = "Food";

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xE1FC10", Offset = "0xE1FC10", VA = "0xE1FC10")]
		public void Prepare(int areaId)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xE1FC7C", Offset = "0xE1FC7C", VA = "0xE1FC7C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xE1FDCC", Offset = "0xE1FDCC", VA = "0xE1FDCC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xE1FF1C", Offset = "0xE1FF1C", VA = "0xE1FF1C")]
		public AnimalNotificationExhibition()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class AnimalNotificationFood : MonoBehaviour
	{
		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OVRAnimal _animal;

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xE1FF2C", Offset = "0xE1FF2C", VA = "0xE1FF2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xE1FF80", Offset = "0xE1FF80", VA = "0xE1FF80")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xE20034", Offset = "0xE20034", VA = "0xE20034")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xE200E8", Offset = "0xE200E8", VA = "0xE200E8")]
		public AnimalNotificationFood()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class AnimalNotificationWater : MonoBehaviour
	{
		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88AA78", Offset = "0x88AA78")]
		[SerializeField]
		private bool isDisableFood;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88AAC4", Offset = "0x88AAC4")]
		private ParticleSystem waterSplashFx;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isReady;

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xE200F0", Offset = "0xE200F0", VA = "0xE200F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xE201E0", Offset = "0xE201E0", VA = "0xE201E0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xE204E8", Offset = "0xE204E8", VA = "0xE204E8")]
		public AnimalNotificationWater()
		{
		}
	}
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x88113C", Offset = "0x88113C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x88113C", Offset = "0x88113C")]
	public class OVRAnimal : MonoBehaviour
	{
		[Token(Token = "0x200033C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8811D0", Offset = "0x8811D0")]
		private sealed class <>c__DisplayClass64_0
		{
			[Token(Token = "0x40011C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action callBack;

			[Token(Token = "0x40011C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OVRAnimal <>4__this;

			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string t;

			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0xC12514", Offset = "0xC12514", VA = "0xC12514")]
			public <>c__DisplayClass64_0()
			{
			}

			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0xC1251C", Offset = "0xC1251C", VA = "0xC1251C")]
			internal void <SetAnim>b__0()
			{
			}
		}

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ZVRAnimalData zvrAnimalData;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string initialAnimationFlag;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88AB10", Offset = "0x88AB10")]
		public bool isWakeUp;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88AB48", Offset = "0x88AB48")]
		public bool isAiMode;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88AB80", Offset = "0x88AB80")]
		public bool isRandomMove;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource _audioSource;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88ABB8", Offset = "0x88ABB8")]
		private IAstarAI <Ai>k__BackingField;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88ABC8", Offset = "0x88ABC8")]
		private Rigidbody <Rig>k__BackingField;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _numLHandTouch;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _numRHandTouch;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform _playerTransform;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Food> _targetFoods;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Food> _discoveredFoods;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88ABD8", Offset = "0x88ABD8")]
		private ZVRDistanceGrabbable <DistanceGrabbable>k__BackingField;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88ABE8", Offset = "0x88ABE8")]
		private Vector3 <InitialPosition>k__BackingField;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion _initialRotation;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88ABF8", Offset = "0x88ABF8")]
		private int <AreaId>k__BackingField;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88AC08", Offset = "0x88AC08")]
		private bool <IsFastMove>k__BackingField;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88AC18", Offset = "0x88AC18")]
		private AnimalState <CurrentAnimalState>k__BackingField;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88AC28", Offset = "0x88AC28")]
		private string <CurrentAnim>k__BackingField;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _naderuCount;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _rayLength;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _canMoveBeforePausing;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool _isPausing;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		private bool _isInit;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88AC38", Offset = "0x88AC38")]
		private AreaHighGroundPoint <HighGroundPoint>k__BackingField;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly LodAnimatorAdapter _animatorAdapter;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly string[] _animationList;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int[] _animationWeightList;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<ZookeeperVR.Visitor.Visitor> _clappingVisitor;

		[Token(Token = "0x1700015C")]
		public IAstarAI Ai
		{
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0xF5E700", Offset = "0xF5E700", VA = "0xF5E700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8946D8", Offset = "0x8946D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0xF5E708", Offset = "0xF5E708", VA = "0xF5E708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8946E8", Offset = "0x8946E8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public Rigidbody Rig
		{
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0xF5E710", Offset = "0xF5E710", VA = "0xF5E710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8946F8", Offset = "0x8946F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0xF5E718", Offset = "0xF5E718", VA = "0xF5E718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894708", Offset = "0x894708")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public ZVRDistanceGrabbable DistanceGrabbable
		{
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0xF5E720", Offset = "0xF5E720", VA = "0xF5E720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894718", Offset = "0x894718")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0xF5E728", Offset = "0xF5E728", VA = "0xF5E728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894728", Offset = "0x894728")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public Vector3 InitialPosition
		{
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0xF5E730", Offset = "0xF5E730", VA = "0xF5E730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894738", Offset = "0x894738")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0xF5E73C", Offset = "0xF5E73C", VA = "0xF5E73C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894748", Offset = "0x894748")]
			private set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public int AreaId
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0xF5E748", Offset = "0xF5E748", VA = "0xF5E748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894758", Offset = "0x894758")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0xF5E750", Offset = "0xF5E750", VA = "0xF5E750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894768", Offset = "0x894768")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public bool IsFastMove
		{
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0xF5E758", Offset = "0xF5E758", VA = "0xF5E758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894778", Offset = "0x894778")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0xF5E760", Offset = "0xF5E760", VA = "0xF5E760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894788", Offset = "0x894788")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public AnimalState CurrentAnimalState
		{
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0xF5E76C", Offset = "0xF5E76C", VA = "0xF5E76C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894798", Offset = "0x894798")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0xF5E774", Offset = "0xF5E774", VA = "0xF5E774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8947A8", Offset = "0x8947A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000163")]
		public string CurrentAnim
		{
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0xF5E77C", Offset = "0xF5E77C", VA = "0xF5E77C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8947B8", Offset = "0x8947B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0xF5E784", Offset = "0xF5E784", VA = "0xF5E784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8947C8", Offset = "0x8947C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public AreaHighGroundPoint HighGroundPoint
		{
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0xF5E78C", Offset = "0xF5E78C", VA = "0xF5E78C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8947D8", Offset = "0x8947D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0xF5E794", Offset = "0xF5E794", VA = "0xF5E794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8947E8", Offset = "0x8947E8")]
			set
			{
			}
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xF5E79C", Offset = "0xF5E79C", VA = "0xF5E79C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xF5E874", Offset = "0xF5E874", VA = "0xF5E874")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xF5E878", Offset = "0xF5E878", VA = "0xF5E878")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xF5E7AC", Offset = "0xF5E7AC", VA = "0xF5E7AC")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xF5E9B4", Offset = "0xF5E9B4", VA = "0xF5E9B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xF5EBEC", Offset = "0xF5EBEC", VA = "0xF5EBEC")]
		public void Init()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xF5EE70", Offset = "0xF5EE70", VA = "0xF5EE70")]
		public void SetState(AnimalState state)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xF5EDE0", Offset = "0xF5EDE0", VA = "0xF5EDE0")]
		public void SetIdle(bool initialAnim = false)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xF5EEC8", Offset = "0xF5EEC8", VA = "0xF5EEC8")]
		public void SetAnim(string trigger, [Optional] Action callBack)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xF5F1D4", Offset = "0xF5F1D4", VA = "0xF5F1D4")]
		private void ResetAnim()
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xF5F078", Offset = "0xF5F078", VA = "0xF5F078")]
		public void SetLoopAnim(string trigger, int loopCount = 1, [Optional] Action finishCallback)
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xF5F240", Offset = "0xF5F240", VA = "0xF5F240")]
		public void SetInitialPosition()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xF5F344", Offset = "0xF5F344", VA = "0xF5F344")]
		private Vector3 GetInitialPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xF5F680", Offset = "0xF5F680", VA = "0xF5F680")]
		public void UpdateMe()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xF5F6A4", Offset = "0xF5F6A4", VA = "0xF5F6A4")]
		public bool CheckGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xF5F734", Offset = "0xF5F734", VA = "0xF5F734")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xF5F750", Offset = "0xF5F750", VA = "0xF5F750")]
		public bool CheckPlayerApproaching(bool isNear)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xF5F904", Offset = "0xF5F904", VA = "0xF5F904")]
		public bool CheckHighGroundApproaching()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xF5F9C4", Offset = "0xF5F9C4", VA = "0xF5F9C4")]
		public void ResetStroking()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xF5FA48", Offset = "0xF5FA48", VA = "0xF5FA48")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xF5FC10", Offset = "0xF5FC10", VA = "0xF5FC10")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xF5FDF4", Offset = "0xF5FDF4", VA = "0xF5FDF4")]
		public void LookAt(Vector3 position)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xF5FE68", Offset = "0xF5FE68", VA = "0xF5FE68")]
		public bool MoveToTarget(Vector3 pos, float margin)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xF60020", Offset = "0xF60020", VA = "0xF60020")]
		public void ActivityEat()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xF600B8", Offset = "0xF600B8", VA = "0xF600B8")]
		public bool IsStairs()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xF60360", Offset = "0xF60360", VA = "0xF60360")]
		public void SetAnimalGraphMask(GraphMask graphMask)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xF60410", Offset = "0xF60410", VA = "0xF60410")]
		public void SetRandomAnimation()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xF60520", Offset = "0xF60520", VA = "0xF60520")]
		public void AddTargetFood(Food food, bool isDiscovered = false)
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xF605D4", Offset = "0xF605D4", VA = "0xF605D4")]
		public void RemoveTargetFood(Food food, bool isDiscovered = false)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xF60688", Offset = "0xF60688", VA = "0xF60688")]
		public Food CheckTargetFood(bool isDiscovered = false)
		{
			return null;
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xF60834", Offset = "0xF60834", VA = "0xF60834")]
		public void AddVisitor(ZookeeperVR.Visitor.Visitor visitor)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xF60898", Offset = "0xF60898", VA = "0xF60898")]
		public void RemoveVisitor(ZookeeperVR.Visitor.Visitor visitor)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xF608FC", Offset = "0xF608FC", VA = "0xF608FC")]
		public bool CheckClappingVisitor()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xF60960", Offset = "0xF60960", VA = "0xF60960")]
		public void LookAtVisitor()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xF60A30", Offset = "0xF60A30", VA = "0xF60A30")]
		public OVRAnimal()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xF60CDC", Offset = "0xF60CDC", VA = "0xF60CDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8947F8", Offset = "0x8947F8")]
		private void <Awake>b__60_0(Pathfinding.Path path)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xF60D20", Offset = "0xF60D20", VA = "0xF60D20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894808", Offset = "0x894808")]
		private void <SetLoopAnim>b__66_0()
		{
		}
	}
}
namespace ZookeeperVR.Activity
{
	[Token(Token = "0x200033D")]
	public class EquipmentActivity : MonoBehaviour
	{
		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88AC48", Offset = "0x88AC48")]
		[SerializeField]
		private ItemDefine.Type itemType;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int itemId;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88ACA4", Offset = "0x88ACA4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88ACA4", Offset = "0x88ACA4")]
		private float moveTime;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve moveCurve;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88AD1C", Offset = "0x88AD1C")]
		private bool enableXAxis;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool enableYAxis;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		private bool enableZAxis;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88AD88", Offset = "0x88AD88")]
		[SerializeField]
		private float enableAngle;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Item _item;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _initialPosition;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion _initialRotation;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _timer;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isReady;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isRotation;

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x1236F18", Offset = "0x1236F18", VA = "0x1236F18")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x1237220", Offset = "0x1237220", VA = "0x1237220")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x12370D4", Offset = "0x12370D4", VA = "0x12370D4")]
		private bool CheckAxisRange(Collider other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x123751C", Offset = "0x123751C", VA = "0x123751C")]
		public EquipmentActivity()
		{
		}
	}
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8811E0", Offset = "0x8811E0")]
	public class PullActivity : MonoBehaviour, IGrabbableMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88ADCC", Offset = "0x88ADCC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88ADCC", Offset = "0x88ADCC")]
		private float pullDistance;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool isRotation;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool isScale;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88AE54", Offset = "0x88AE54")]
		private float scalePoint;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _beginHandPosition;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _beginDistance;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ZVRHand _zvrHand;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _initialPosition;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion _initialRotation;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _initialScale;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ObjectBase _objectBase;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isPullOut;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _isReady;

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x101CC38", Offset = "0x101CC38", VA = "0x101CC38")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x101CCDC", Offset = "0x101CCDC", VA = "0x101CCDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x101D0A0", Offset = "0x101D0A0", VA = "0x101D0A0")]
		private void SetScale(float scale)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x101CEB0", Offset = "0x101CEB0", VA = "0x101CEB0")]
		private void SetHaptic(float amplitude)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x101CF44", Offset = "0x101CF44", VA = "0x101CF44")]
		private void PullOut()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x101D10C", Offset = "0x101D10C", VA = "0x101D10C", Slot = "4")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x101D1F8", Offset = "0x101D1F8", VA = "0x101D1F8", Slot = "5")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x101D2D8", Offset = "0x101D2D8", VA = "0x101D2D8")]
		public PullActivity()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class RollingActivity : MonoBehaviour
	{
		[Token(Token = "0x2000340")]
		private class CheckInfo
		{
			[Token(Token = "0x40011E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Food FoodInfo;

			[Token(Token = "0x40011E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly Vector3 HitPosition;

			[Token(Token = "0x40011E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool IsStopSendOnce;

			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0xF8DACC", Offset = "0xF8DACC", VA = "0xF8DACC")]
			public CheckInfo(Food food, Vector3 hitPos)
			{
			}
		}

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88AE98", Offset = "0x88AE98")]
		[SerializeField]
		private FoodDefine.Type foodType;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int foodId;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88AEF4", Offset = "0x88AEF4")]
		[SerializeField]
		private float rollingDistance;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<int, CheckInfo> _checkInfoDictionary;

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x1024010", Offset = "0x1024010", VA = "0x1024010")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x1024270", Offset = "0x1024270", VA = "0x1024270")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x102445C", Offset = "0x102445C", VA = "0x102445C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x1024554", Offset = "0x1024554", VA = "0x1024554")]
		public RollingActivity()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class SettingActivity : MonoBehaviour
	{
		[Token(Token = "0x2000342")]
		private class CheckInfo
		{
			[Token(Token = "0x40011ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float _elapsedTime;

			[Token(Token = "0x40011EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly ObjectBase ObjInfo;

			[Token(Token = "0x40011EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool IsStopSendOnce;

			[Token(Token = "0x6000F82")]
			[Address(RVA = "0xF8F5E4", Offset = "0xF8F5E4", VA = "0xF8F5E4")]
			public CheckInfo(ObjectBase obj)
			{
			}

			[Token(Token = "0x6000F83")]
			[Address(RVA = "0xF8F610", Offset = "0xF8F610", VA = "0xF8F610")]
			public bool CheckElapsedTime()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88AF40", Offset = "0x88AF40")]
		[SerializeField]
		private FoodDefine.Type foodType;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int foodId;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GarbageDefine.Type garbageType;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int garbageId;

		[Token(Token = "0x40011EB")]
		private const float CheckWaitTime = 0.5f;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<int, CheckInfo> _checkInfoDictionary;

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xE08E08", Offset = "0xE08E08", VA = "0xE08E08")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xE09288", Offset = "0xE09288", VA = "0xE09288")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xE09444", Offset = "0xE09444", VA = "0xE09444")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xE0958C", Offset = "0xE0958C", VA = "0xE0958C")]
		public SettingActivity()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class ThrowingActivity : MonoBehaviour
	{
		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88AFBC", Offset = "0x88AFBC")]
		[SerializeField]
		private FoodDefine.Type foodType;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int foodId;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GarbageDefine.Type garbageType;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int garbageId;

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xFA1A20", Offset = "0xFA1A20", VA = "0xFA1A20")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xFA1C44", Offset = "0xFA1C44", VA = "0xFA1C44")]
		public ThrowingActivity()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class WashingActivity : MonoBehaviour
	{
		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int dirtId;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float washTime;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource _audioSource;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isWashing;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _elapsedTime;

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x1167F0C", Offset = "0x1167F0C", VA = "0x1167F0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1167FE8", Offset = "0x1167FE8", VA = "0x1167FE8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x116809C", Offset = "0x116809C", VA = "0x116809C")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x11681EC", Offset = "0x11681EC", VA = "0x11681EC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x11682A0", Offset = "0x11682A0", VA = "0x11682A0")]
		public WashingActivity()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x11682B0", Offset = "0x11682B0", VA = "0x11682B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894818", Offset = "0x894818")]
		private void <OnTriggerStay>b__7_0()
		{
		}
	}
}
namespace ZookeeperVR.Puzzle
{
	[Token(Token = "0x2000345")]
	public class PuzzleRoomExit : MonoBehaviour
	{
		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text text;

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x101E18C", Offset = "0x101E18C", VA = "0x101E18C")]
		public void OnButtonClicked()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x101E1EC", Offset = "0x101E1EC", VA = "0x101E1EC")]
		public PuzzleRoomExit()
		{
		}
	}
}
namespace ResidentSystem
{
	[Token(Token = "0x2000346")]
	public class AppSystemNotify : StaticAccessBehaviour<AppSystemNotify>
	{
		[Token(Token = "0x2000347")]
		private enum PauseFlag
		{
			[Token(Token = "0x40011FE")]
			VrFocusLost,
			[Token(Token = "0x40011FF")]
			HMDUnmounted,
			[Token(Token = "0x4001200")]
			ApplicationPause,
			[Token(Token = "0x4001201")]
			ApplicationFocus,
			[Token(Token = "0x4001202")]
			InputFocus
		}

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly BitFlag _flagPause;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _gamePauseFlag;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GamePauseReason _gamePauseReason;

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xE24AF8", Offset = "0xE24AF8", VA = "0xE24AF8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xE24CF4", Offset = "0xE24CF4", VA = "0xE24CF4")]
		public bool IsGamePause()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xE24CFC", Offset = "0xE24CFC", VA = "0xE24CFC")]
		public void CheckGamePauseNotify()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xE24D14", Offset = "0xE24D14", VA = "0xE24D14")]
		private void OnHMDUnmounted()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xE24DBC", Offset = "0xE24DBC", VA = "0xE24DBC")]
		private void OnHMDMounted()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xE24DFC", Offset = "0xE24DFC", VA = "0xE24DFC")]
		private void OnVrFocusLost()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xE24E24", Offset = "0xE24E24", VA = "0xE24E24")]
		private void OnVrFocusAcquired()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xE24E4C", Offset = "0xE24E4C", VA = "0xE24E4C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xE24E74", Offset = "0xE24E74", VA = "0xE24E74")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xE24E9C", Offset = "0xE24E9C", VA = "0xE24E9C")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xE24ED0", Offset = "0xE24ED0", VA = "0xE24ED0")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xE24D54", Offset = "0xE24D54", VA = "0xE24D54")]
		private void CheckGamePause(GamePauseReason reason)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xE24F24", Offset = "0xE24F24", VA = "0xE24F24")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x894828", Offset = "0x894828")]
		private void DebugLog(string text)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xE24F88", Offset = "0xE24F88", VA = "0xE24F88")]
		public AppSystemNotify()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class BootInitializerApp : MonoBehaviour
	{
		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xE32B24", Offset = "0xE32B24", VA = "0xE32B24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xE32B28", Offset = "0xE32B28", VA = "0xE32B28")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xE32BE8", Offset = "0xE32BE8", VA = "0xE32BE8")]
		public BootInitializerApp()
		{
		}
	}
	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x881240", Offset = "0x881240")]
	public class SystemSound2DManager : StaticAccessBehaviour<SystemSound2DManager>
	{
		[Token(Token = "0x200034A")]
		public enum Sound
		{
			[Token(Token = "0x400120C")]
			ButtonSelect,
			[Token(Token = "0x400120D")]
			Cancel,
			[Token(Token = "0x400120E")]
			YesStart,
			[Token(Token = "0x400120F")]
			PointerOver,
			[Token(Token = "0x4001210")]
			CantMove,
			[Token(Token = "0x4001211")]
			Alert,
			[Token(Token = "0x4001212")]
			SaveDataReset
		}

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88B058", Offset = "0x88B058")]
		[SerializeField]
		private AudioClip _buttonSelectClip;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88B0A4", Offset = "0x88B0A4")]
		private AudioClip _cancelClip;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88B0F0", Offset = "0x88B0F0")]
		[SerializeField]
		private AudioClip _yesStartClip;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88B13C", Offset = "0x88B13C")]
		private AudioClip _pointerOverClip;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88B188", Offset = "0x88B188")]
		private AudioClip _cantMoveClip;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88B1D4", Offset = "0x88B1D4")]
		private AudioClip _alertClip;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88B220", Offset = "0x88B220")]
		private AudioClip _saveDataResetClip;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource _audioSource;

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xE1B504", Offset = "0xE1B504", VA = "0xE1B504")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xE13E58", Offset = "0xE13E58", VA = "0xE13E58")]
		public void PlaySound(Sound soundType)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xE1B568", Offset = "0xE1B568", VA = "0xE1B568")]
		public SystemSound2DManager()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class ZooToPuzzleManager : StaticAccessBehaviour<ZooToPuzzleManager>
	{
		[Token(Token = "0x200034C")]
		public enum SceneFrom
		{
			[Token(Token = "0x400121A")]
			Title,
			[Token(Token = "0x400121B")]
			Zoo,
			[Token(Token = "0x400121C")]
			TitlePuzzleSelect,
			[Token(Token = "0x400121D")]
			ZooPuzzleSelect,
			[Token(Token = "0x400121E")]
			MapTutorial
		}

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B26C", Offset = "0x88B26C")]
		private QuestData <CurrentQuestData>k__BackingField;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B27C", Offset = "0x88B27C")]
		private int <RoundNoFromTitle>k__BackingField;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B28C", Offset = "0x88B28C")]
		private SceneFrom <TransitionFrom>k__BackingField;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B29C", Offset = "0x88B29C")]
		private Vector3 <CurrentPlayerPosition>k__BackingField;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B2AC", Offset = "0x88B2AC")]
		private Quaternion <CurrentPlayerRotation>k__BackingField;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B2BC", Offset = "0x88B2BC")]
		private int <PuzzleSelectedAreaId>k__BackingField;

		[Token(Token = "0x17000165")]
		public QuestData CurrentQuestData
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x1174034", Offset = "0x1174034", VA = "0x1174034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894860", Offset = "0x894860")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x117403C", Offset = "0x117403C", VA = "0x117403C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894870", Offset = "0x894870")]
			private set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public int RoundNoFromTitle
		{
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x1174044", Offset = "0x1174044", VA = "0x1174044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894880", Offset = "0x894880")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x117404C", Offset = "0x117404C", VA = "0x117404C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894890", Offset = "0x894890")]
			private set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public SceneFrom TransitionFrom
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x1174054", Offset = "0x1174054", VA = "0x1174054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8948A0", Offset = "0x8948A0")]
			get
			{
				return default(SceneFrom);
			}
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x117405C", Offset = "0x117405C", VA = "0x117405C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8948B0", Offset = "0x8948B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public Vector3 CurrentPlayerPosition
		{
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x1174064", Offset = "0x1174064", VA = "0x1174064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8948C0", Offset = "0x8948C0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x1174070", Offset = "0x1174070", VA = "0x1174070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8948D0", Offset = "0x8948D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public Quaternion CurrentPlayerRotation
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x117407C", Offset = "0x117407C", VA = "0x117407C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8948E0", Offset = "0x8948E0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x1174088", Offset = "0x1174088", VA = "0x1174088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8948F0", Offset = "0x8948F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public int PuzzleSelectedAreaId
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x1174094", Offset = "0x1174094", VA = "0x1174094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894900", Offset = "0x894900")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x117409C", Offset = "0x117409C", VA = "0x117409C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894910", Offset = "0x894910")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x11740A4", Offset = "0x11740A4", VA = "0x11740A4")]
		public void SetCurrentQuestDataAtZoo(QuestData questData)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x11740B4", Offset = "0x11740B4", VA = "0x11740B4")]
		public void SetCurrentQuestDataAtPuzzleSelect(QuestData questData, int roundNo)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x11740E4", Offset = "0x11740E4", VA = "0x11740E4")]
		public void SetPuzzleSelectedAreaId(int areaId)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1174114", Offset = "0x1174114", VA = "0x1174114")]
		public void ResetPuzzleSelectedAreaId()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x117411C", Offset = "0x117411C", VA = "0x117411C")]
		public ZooToPuzzleManager()
		{
		}
	}
}
namespace MapAndLevelList
{
	[Token(Token = "0x200034D")]
	public class AreaTitle : MonoBehaviour
	{
		[Token(Token = "0x200034E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8812A0", Offset = "0x8812A0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AreaTitle <>4__this;

			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int areaId;

			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0xC03C88", Offset = "0xC03C88", VA = "0xC03C88")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0xC03C90", Offset = "0xC03C90", VA = "0xC03C90")]
			internal void <Set>b__0()
			{
			}
		}

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text areaText;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text areaNumText;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text missionText;

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xE28A14", Offset = "0xE28A14", VA = "0xE28A14")]
		public void Set(int areaId)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xE28BB4", Offset = "0xE28BB4", VA = "0xE28BB4")]
		private void UpdateText(int areaId)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xE28D14", Offset = "0xE28D14", VA = "0xE28D14")]
		public AreaTitle()
		{
		}
	}
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x8812B0", Offset = "0x8812B0")]
	public class MapAndLevelListData : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000350")]
		private class PuzzleLevel
		{
			[Token(Token = "0x4001227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int AreaNo;

			[Token(Token = "0x4001228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int LevelNo;

			[Token(Token = "0x4001229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int RoundCount;

			[Token(Token = "0x400122A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuestData TargetQuestData;

			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0xC0EB60", Offset = "0xC0EB60", VA = "0xC0EB60")]
			public PuzzleLevel()
			{
			}
		}

		[Token(Token = "0x2000351")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8812C0", Offset = "0x8812C0")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x400122B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0xC0EB34", Offset = "0xC0EB34", VA = "0xC0EB34")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0xC0EB3C", Offset = "0xC0EB3C", VA = "0xC0EB3C")]
			internal bool <Awake>b__1(PuzzleLevel x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000352")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8812D0", Offset = "0x8812D0")]
		private sealed class <>c
		{
			[Token(Token = "0x400122C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PuzzleLevel, QuestData> <>9__6_2;

			[Token(Token = "0x400122E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<PuzzleLevel, int> <>9__6_0;

			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0xC0EAFC", Offset = "0xC0EAFC", VA = "0xC0EAFC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0xC0EB04", Offset = "0xC0EB04", VA = "0xC0EB04")]
			internal QuestData <Awake>b__6_2(PuzzleLevel x)
			{
				return null;
			}

			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0xC0EB1C", Offset = "0xC0EB1C", VA = "0xC0EB1C")]
			internal int <Awake>b__6_0(PuzzleLevel x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B2FC", Offset = "0x88B2FC")]
		[SerializeField]
		private PuzzleLevel[] puzzleLevelArray;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, QuestData[]> _puzzleDataDictionary;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B348", Offset = "0x88B348")]
		private int <TotalStageCount>k__BackingField;

		[Token(Token = "0x1700016B")]
		public int TotalStageCount
		{
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0x1086AD0", Offset = "0x1086AD0", VA = "0x1086AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894920", Offset = "0x894920")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0x1086AD8", Offset = "0x1086AD8", VA = "0x1086AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894930", Offset = "0x894930")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x1086AE0", Offset = "0x1086AE0", VA = "0x1086AE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x1086E28", Offset = "0x1086E28", VA = "0x1086E28")]
		public QuestData[] GetAreaQuestData(int areaId)
		{
			return null;
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1086E84", Offset = "0x1086E84", VA = "0x1086E84")]
		public MapAndLevelListData()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class MapAndLevelListManager : OnlyOneBehavior<MapAndLevelListManager>
	{
		[Serializable]
		[Token(Token = "0x2000354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8812E0", Offset = "0x8812E0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PuzzlePlaySaveData.StarCountStageData, bool> <>9__23_0;

			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0xC0EBC8", Offset = "0xC0EBC8", VA = "0xC0EBC8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xC0EBD0", Offset = "0xC0EBD0", VA = "0xC0EBD0")]
			internal bool <Init>b__23_0(PuzzlePlaySaveData.StarCountStageData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B358", Offset = "0x88B358")]
		private Text totalStageCountText;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B3A4", Offset = "0x88B3A4")]
		public TreasureDialogController dialogCanvas;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B3DC", Offset = "0x88B3DC")]
		private Text closeText;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject buttonGoToTitle;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text goToTitleText;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B448", Offset = "0x88B448")]
		[SerializeField]
		private PagerController pagerController;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ZooRestoreController _restoreController;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private StageSelectController stageController;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AreaTitle areaTitle;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private PlayerIcon playerIcon;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ImageByDominantHand closeImage;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MapAndLevelListData _data;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TreasureController _treasure;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _perfectCount;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AudioSource _audioSource;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AudioClip _playClip;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88B4E4", Offset = "0x88B4E4")]
		private bool <IsReady>k__BackingField;

		[Token(Token = "0x1700016C")]
		public bool IsReady
		{
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x1086EFC", Offset = "0x1086EFC", VA = "0x1086EFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894940", Offset = "0x894940")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x1086F04", Offset = "0x1086F04", VA = "0x1086F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894950", Offset = "0x894950")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public int TotalStarCount
		{
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x1086F10", Offset = "0x1086F10", VA = "0x1086F10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1086F2C", Offset = "0x1086F2C", VA = "0x1086F2C")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1086FE8", Offset = "0x1086FE8", VA = "0x1086FE8")]
		public void Init()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x1087468", Offset = "0x1087468", VA = "0x1087468")]
		public void Check()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x108739C", Offset = "0x108739C", VA = "0x108739C")]
		public void ChangeAreaStageSelect(int areaId)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x108748C", Offset = "0x108748C", VA = "0x108748C")]
		public void UpdateBalloonIcon()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x10874A8", Offset = "0x10874A8", VA = "0x10874A8")]
		public void OnButtonClose()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x10875B8", Offset = "0x10875B8", VA = "0x10875B8")]
		public void OnButtonTitle()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x10876D0", Offset = "0x10876D0", VA = "0x10876D0")]
		public void PlayVoice(AudioClip voice)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1087570", Offset = "0x1087570", VA = "0x1087570")]
		public void StopVoice()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x10877F0", Offset = "0x10877F0", VA = "0x10877F0")]
		public MapAndLevelListManager()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class PagerController : MonoBehaviour
	{
		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle[] pagerToggles;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _currentAreaId;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ToggleGroup _toggleGroup;

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x11124B0", Offset = "0x11124B0", VA = "0x11124B0")]
		public void Init()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1112708", Offset = "0x1112708", VA = "0x1112708")]
		private void OnChange(bool state)
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1112848", Offset = "0x1112848", VA = "0x1112848")]
		public void SelectToggle(int index)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x1112890", Offset = "0x1112890", VA = "0x1112890")]
		public PagerController()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class PlayerIcon : MonoBehaviour
	{
		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B504", Offset = "0x88B504")]
		private RectTransform iconPlayer;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B550", Offset = "0x88B550")]
		[SerializeField]
		private RectTransform iconBalloon;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B59C", Offset = "0x88B59C")]
		[SerializeField]
		private float adjustX;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float adjustZ;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B5F8", Offset = "0x88B5F8")]
		[SerializeField]
		private float adjust6X;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float adjust6Z;

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x1117978", Offset = "0x1117978", VA = "0x1117978")]
		public void Init()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x1117A38", Offset = "0x1117A38", VA = "0x1117A38")]
		private void CheckPlayerPosition()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x1117B34", Offset = "0x1117B34", VA = "0x1117B34")]
		public void CheckBalloonPosition()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x1117F58", Offset = "0x1117F58", VA = "0x1117F58")]
		private void SetPosition(RectTransform icon, Vector3 pos)
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x1117FE8", Offset = "0x1117FE8", VA = "0x1117FE8")]
		public PlayerIcon()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class StageIcon : MonoBehaviour
	{
		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image[] starsImage;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text stageText;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private QuestData _questData;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _roundNo;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isEnabled;

		[Token(Token = "0x4001251")]
		private const float ENABLED_ALPHA = 1f;

		[Token(Token = "0x4001252")]
		private const float DISABLED_ALPHA = 0.3f;

		[Token(Token = "0x4001253")]
		private const string STAGE_NAME = "{0}-{1}";

		[Token(Token = "0x4001254")]
		private const string STAGE_NAME_LONG = "{0}-{1}-{2}";

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xE1380C", Offset = "0xE1380C", VA = "0xE1380C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xE13860", Offset = "0xE13860", VA = "0xE13860")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xE139FC", Offset = "0xE139FC", VA = "0xE139FC")]
		public void SetQuestData(QuestData data, int stageNo, int starCount, bool isEnabled)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xE13C78", Offset = "0xE13C78", VA = "0xE13C78")]
		public void SetDisabled()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xE13BD4", Offset = "0xE13BD4", VA = "0xE13BD4")]
		private void UpdateStarCount(int starCount)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xE13C54", Offset = "0xE13C54", VA = "0xE13C54")]
		private void UpdateStageText(string message)
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xE13CA0", Offset = "0xE13CA0", VA = "0xE13CA0")]
		public StageIcon()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xE13CA8", Offset = "0xE13CA8", VA = "0xE13CA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894960", Offset = "0x894960")]
		private void <Start>b__11_0(BaseEventData x)
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class StageSelectController : MonoBehaviour
	{
		[Token(Token = "0x2000359")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8812F0", Offset = "0x8812F0")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StageSelectController <>4__this;

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public QuestData[] questDatas;

			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0xF91BB4", Offset = "0xF91BB4", VA = "0xF91BB4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0xF91BBC", Offset = "0xF91BBC", VA = "0xF91BBC")]
			internal void <Set>b__0()
			{
			}

			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0xF91BE0", Offset = "0xF91BE0", VA = "0xF91BE0")]
			internal float <Set>b__1()
			{
				return default(float);
			}

			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0xF91C08", Offset = "0xF91C08", VA = "0xF91C08")]
			internal void <Set>b__2(float alpha)
			{
			}

			[Token(Token = "0x6000FED")]
			[Address(RVA = "0xF91C30", Offset = "0xF91C30", VA = "0xF91C30")]
			internal float <Set>b__3()
			{
				return default(float);
			}

			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0xF91C58", Offset = "0xF91C58", VA = "0xF91C58")]
			internal void <Set>b__4(float alpha)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200035A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881300", Offset = "0x881300")]
		private sealed class <>c
		{
			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400125E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<QuestData, int> <>9__8_0;

			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0xF91B94", Offset = "0xF91B94", VA = "0xF91B94")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0xF91B9C", Offset = "0xF91B9C", VA = "0xF91B9C")]
			internal int <UpdateStageIcon>b__8_0(QuestData x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject stageIconPanel;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text titleText;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text stageText;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StageIcon[] _stageIcons;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x400125A")]
		private const string START_COUNT = "{0}/{1}";

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xE14018", Offset = "0xE14018", VA = "0xE14018")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xE140A0", Offset = "0xE140A0", VA = "0xE140A0")]
		public void Set(QuestData[] questDatas)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xE1447C", Offset = "0xE1447C", VA = "0xE1447C")]
		private void UpdateStageIcon(QuestData[] questDatas)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xE14970", Offset = "0xE14970", VA = "0xE14970")]
		public StageSelectController()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class TreasureController : MonoBehaviour
	{
		[Token(Token = "0x200035C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881310", Offset = "0x881310")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerEpisodeSaveData data;

			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0xF99B7C", Offset = "0xF99B7C", VA = "0xF99B7C")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0xF99B84", Offset = "0xF99B84", VA = "0xF99B84")]
			internal void <CoCheckTreasure>b__0()
			{
			}

			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0xF99BA4", Offset = "0xF99BA4", VA = "0xF99BA4")]
			internal void <CoCheckTreasure>b__1()
			{
			}

			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0xF99BC4", Offset = "0xF99BC4", VA = "0xF99BC4")]
			internal void <CoCheckTreasure>b__2()
			{
			}
		}

		[Token(Token = "0x200035D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881320", Offset = "0x881320")]
		private sealed class <CoCheckTreasure>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TreasureController <>4__this;

			[Token(Token = "0x400126A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int perfectCount;

			[Token(Token = "0x400126B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x1700016E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FFF")]
				[Address(RVA = "0xF99FD0", Offset = "0xF99FD0", VA = "0xF99FD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001001")]
				[Address(RVA = "0xF9A018", Offset = "0xF9A018", VA = "0xF9A018", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0xF99BE4", Offset = "0xF99BE4", VA = "0xF99BE4")]
			[DebuggerHidden]
			public <CoCheckTreasure>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0xF99C10", Offset = "0xF99C10", VA = "0xF99C10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0xF99C14", Offset = "0xF99C14", VA = "0xF99C14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001000")]
			[Address(RVA = "0xF99FD8", Offset = "0xF99FD8", VA = "0xF99FD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200035E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881330", Offset = "0x881330")]
		private sealed class <CoOpen>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400126C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400126D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400126E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TreasureController <>4__this;

			[Token(Token = "0x400126F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TreasureIcon icon;

			[Token(Token = "0x4001270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action completeAction;

			[Token(Token = "0x17000170")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001005")]
				[Address(RVA = "0xF9A1BC", Offset = "0xF9A1BC", VA = "0xF9A1BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000171")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001007")]
				[Address(RVA = "0xF9A204", Offset = "0xF9A204", VA = "0xF9A204", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001002")]
			[Address(RVA = "0xF9A020", Offset = "0xF9A020", VA = "0xF9A020")]
			[DebuggerHidden]
			public <CoOpen>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001003")]
			[Address(RVA = "0xF9A04C", Offset = "0xF9A04C", VA = "0xF9A04C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001004")]
			[Address(RVA = "0xF9A050", Offset = "0xF9A050", VA = "0xF9A050", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001006")]
			[Address(RVA = "0xF9A1C4", Offset = "0xF9A1C4", VA = "0xF9A1C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B6A4", Offset = "0x88B6A4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88B6A4", Offset = "0x88B6A4")]
		private int normaFirst;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88B70C", Offset = "0x88B70C")]
		private int normaSecond;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88B750", Offset = "0x88B750")]
		[SerializeField]
		private int normaThird;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B794", Offset = "0x88B794")]
		[SerializeField]
		private TreasureIcon treasureIconFirst;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TreasureIcon treasureIconSecond;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TreasureIcon treasureIconThird;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isUpdate;

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x1874290", Offset = "0x1874290", VA = "0x1874290")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x18743A0", Offset = "0x18743A0", VA = "0x18743A0")]
		public void Init()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x18744A4", Offset = "0x18744A4", VA = "0x18744A4")]
		public void CheckTreasureState(int perfectCount)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x18744D0", Offset = "0x18744D0", VA = "0x18744D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x894970", Offset = "0x894970")]
		private IEnumerator CoCheckTreasure(int perfectCount)
		{
			return null;
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x187454C", Offset = "0x187454C", VA = "0x187454C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8949D0", Offset = "0x8949D0")]
		private IEnumerator CoOpen(TreasureIcon icon, Action completeAction)
		{
			return null;
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x18745CC", Offset = "0x18745CC", VA = "0x18745CC")]
		public TreasureController()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class TreasureDialogController : MonoBehaviour
	{
		[Token(Token = "0x2000360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881340", Offset = "0x881340")]
		private sealed class <CoDialog>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TreasureDialogController <>4__this;

			[Token(Token = "0x400127A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sprite sprite;

			[Token(Token = "0x400127B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string itemName;

			[Token(Token = "0x17000172")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600100F")]
				[Address(RVA = "0xF9A410", Offset = "0xF9A410", VA = "0xF9A410", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000173")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001011")]
				[Address(RVA = "0xF9A458", Offset = "0xF9A458", VA = "0xF9A458", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600100C")]
			[Address(RVA = "0xF9A20C", Offset = "0xF9A20C", VA = "0xF9A20C")]
			[DebuggerHidden]
			public <CoDialog>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600100D")]
			[Address(RVA = "0xF9A238", Offset = "0xF9A238", VA = "0xF9A238", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600100E")]
			[Address(RVA = "0xF9A23C", Offset = "0xF9A23C", VA = "0xF9A23C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001010")]
			[Address(RVA = "0xF9A418", Offset = "0xF9A418", VA = "0xF9A418", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B800", Offset = "0x88B800")]
		[SerializeField]
		private int infoMessageId;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B84C", Offset = "0x88B84C")]
		[SerializeField]
		private Image thumbImage;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text nameText;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text infoText;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isClick;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSource _audioSource;

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x18745E8", Offset = "0x18745E8", VA = "0x18745E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x1874688", Offset = "0x1874688", VA = "0x1874688")]
		private void Update()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x18746C0", Offset = "0x18746C0", VA = "0x18746C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x894AD0", Offset = "0x894AD0")]
		public IEnumerator CoDialog(Sprite sprite, string itemName)
		{
			return null;
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x1874740", Offset = "0x1874740", VA = "0x1874740")]
		public TreasureDialogController()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class TreasureIcon : MonoBehaviour
	{
		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text nameText;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text countText;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image itemImage;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image checkImage;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip naviVoiceEn;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip naviVoiceJp;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int messageId;

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x18743EC", Offset = "0x18743EC", VA = "0x18743EC")]
		public void Set(int count)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x1874380", Offset = "0x1874380", VA = "0x1874380")]
		public void OpenIcon(bool isOpen)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x1874748", Offset = "0x1874748", VA = "0x1874748")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x1874810", Offset = "0x1874810", VA = "0x1874810")]
		public TreasureIcon()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class ZooRestoreController : MonoBehaviour
	{
		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B908", Offset = "0x88B908")]
		[SerializeField]
		private Image[] pickImages;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88B954", Offset = "0x88B954")]
		[SerializeField]
		private Image[] unlockedImages;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image fullImage;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _currentAreaId;

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x11736BC", Offset = "0x11736BC", VA = "0x11736BC")]
		private void Init()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x1173874", Offset = "0x1173874", VA = "0x1173874")]
		public void Set(int areaId)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x1173924", Offset = "0x1173924", VA = "0x1173924")]
		public void OnClick(int areaId)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x1173A00", Offset = "0x1173A00", VA = "0x1173A00")]
		public ZooRestoreController()
		{
		}
	}
}
namespace StartGame
{
	[Token(Token = "0x2000363")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881350", Offset = "0x881350")]
	public class LoadingTransitionController : MonoBehaviour
	{
		[Token(Token = "0x2000364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881360", Offset = "0x881360")]
		private sealed class <SetupSceneCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400128A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400128B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingTransitionController <>4__this;

			[Token(Token = "0x400128C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ZVRScreenFade <fade>5__2;

			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <nextScene>5__3;

			[Token(Token = "0x400128E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <aoFullMap>5__4;

			[Token(Token = "0x17000174")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001020")]
				[Address(RVA = "0xC0DD6C", Offset = "0xC0DD6C", VA = "0xC0DD6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000175")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001022")]
				[Address(RVA = "0xC0DDB4", Offset = "0xC0DDB4", VA = "0xC0DDB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600101D")]
			[Address(RVA = "0xC0D964", Offset = "0xC0D964", VA = "0xC0D964")]
			[DebuggerHidden]
			public <SetupSceneCoroutine>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600101E")]
			[Address(RVA = "0xC0D990", Offset = "0xC0D990", VA = "0xC0D990", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600101F")]
			[Address(RVA = "0xC0D994", Offset = "0xC0D994", VA = "0xC0D994", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001021")]
			[Address(RVA = "0xC0DD74", Offset = "0xC0DD74", VA = "0xC0DD74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88B9B0", Offset = "0x88B9B0")]
		private GameObject _playerController;

		[Token(Token = "0x4001288")]
		private const float BlackFadeTime = 0.3f;

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x107FC50", Offset = "0x107FC50", VA = "0x107FC50")]
		private void Start()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x107FC88", Offset = "0x107FC88", VA = "0x107FC88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x894B80", Offset = "0x894B80")]
		private IEnumerator SetupSceneCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x107FCF4", Offset = "0x107FCF4", VA = "0x107FCF4")]
		public LoadingTransitionController()
		{
		}
	}
	[Token(Token = "0x2000365")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881370", Offset = "0x881370")]
	public class StartController : MonoBehaviour
	{
		[Token(Token = "0x2000366")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881380", Offset = "0x881380")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400128F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool finish;

			[Token(Token = "0x6001026")]
			[Address(RVA = "0xF91C80", Offset = "0xF91C80", VA = "0xF91C80")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001027")]
			[Address(RVA = "0xF91C88", Offset = "0xF91C88", VA = "0xF91C88")]
			internal void <SetupSceneCoroutine>b__0()
			{
			}
		}

		[Token(Token = "0x2000367")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881390", Offset = "0x881390")]
		private sealed class <SetupSceneCoroutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StartController <>4__this;

			[Token(Token = "0x4001293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass1_0 <>8__1;

			[Token(Token = "0x17000176")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600102B")]
				[Address(RVA = "0xF91E1C", Offset = "0xF91E1C", VA = "0xF91E1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000177")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600102D")]
				[Address(RVA = "0xF91E64", Offset = "0xF91E64", VA = "0xF91E64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001028")]
			[Address(RVA = "0xF91C94", Offset = "0xF91C94", VA = "0xF91C94")]
			[DebuggerHidden]
			public <SetupSceneCoroutine>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001029")]
			[Address(RVA = "0xF91CC0", Offset = "0xF91CC0", VA = "0xF91CC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600102A")]
			[Address(RVA = "0xF91CC4", Offset = "0xF91CC4", VA = "0xF91CC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600102C")]
			[Address(RVA = "0xF91E24", Offset = "0xF91E24", VA = "0xF91E24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xE1550C", Offset = "0xE1550C", VA = "0xE1550C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xE15538", Offset = "0xE15538", VA = "0xE15538")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x894C30", Offset = "0x894C30")]
		private IEnumerator SetupSceneCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xE155A4", Offset = "0xE155A4", VA = "0xE155A4")]
		public StartController()
		{
		}
	}
	[Token(Token = "0x2000368")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x8813A0", Offset = "0x8813A0")]
	public class StartLoadingController : MonoBehaviour
	{
		[Token(Token = "0x2000369")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8813B0", Offset = "0x8813B0")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StartLoadingController <>4__this;

			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float workProgress;

			[Token(Token = "0x6001032")]
			[Address(RVA = "0xF91E6C", Offset = "0xF91E6C", VA = "0xF91E6C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001033")]
			[Address(RVA = "0xF91E74", Offset = "0xF91E74", VA = "0xF91E74")]
			internal void <SetupSceneCoroutine>b__0(float loadCount, float loadMax)
			{
			}
		}

		[Token(Token = "0x200036A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8813C0", Offset = "0x8813C0")]
		private sealed class <SetupSceneCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StartLoadingController <>4__this;

			[Token(Token = "0x400129E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass6_0 <>8__1;

			[Token(Token = "0x400129F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ZVRScreenFade <fade>5__2;

			[Token(Token = "0x40012A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <aoFullMap>5__3;

			[Token(Token = "0x17000178")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001037")]
				[Address(RVA = "0xF923D0", Offset = "0xF923D0", VA = "0xF923D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000179")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001039")]
				[Address(RVA = "0xF92418", Offset = "0xF92418", VA = "0xF92418", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001034")]
			[Address(RVA = "0xF91ECC", Offset = "0xF91ECC", VA = "0xF91ECC")]
			[DebuggerHidden]
			public <SetupSceneCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001035")]
			[Address(RVA = "0xF91EF8", Offset = "0xF91EF8", VA = "0xF91EF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001036")]
			[Address(RVA = "0xF91EFC", Offset = "0xF91EFC", VA = "0xF91EFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001038")]
			[Address(RVA = "0xF923D8", Offset = "0xF923D8", VA = "0xF923D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88B9FC", Offset = "0x88B9FC")]
		private Slider _loadingBar;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BA48", Offset = "0x88BA48")]
		[SerializeField]
		private GameObject _playerController;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BA94", Offset = "0x88BA94")]
		[SerializeField]
		private GameObject _mainCanvas;

		[Token(Token = "0x4001297")]
		private const float BlackFadeTime = 0.3f;

		[Token(Token = "0x4001298")]
		private const float AreaPrefabLoadRate = 0.8f;

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xE155AC", Offset = "0xE155AC", VA = "0xE155AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xE155E4", Offset = "0xE155E4", VA = "0xE155E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x894CE0", Offset = "0x894CE0")]
		private IEnumerator SetupSceneCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xE15650", Offset = "0xE15650", VA = "0xE15650")]
		private static float CalcShowProgress(float target, ref float workValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xE156F4", Offset = "0xE156F4", VA = "0xE156F4")]
		public StartLoadingController()
		{
		}
	}
}
namespace UTJ
{
	[Token(Token = "0x200036B")]
	public class MainLoopProfilingCustomPlayerLoop
	{
		[Token(Token = "0x200036C")]
		public class ProfilingUpdate
		{
			[Token(Token = "0x40012A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float startTime;

			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float executeTime;

			[Token(Token = "0x40012A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float endTime;

			[Token(Token = "0x6001045")]
			[Address(RVA = "0xC0EA14", Offset = "0xC0EA14", VA = "0xC0EA14")]
			public void Start()
			{
			}

			[Token(Token = "0x6001046")]
			[Address(RVA = "0xC0EA3C", Offset = "0xC0EA3C", VA = "0xC0EA3C")]
			public void End()
			{
			}

			[Token(Token = "0x6001047")]
			[Address(RVA = "0xC0EA74", Offset = "0xC0EA74", VA = "0xC0EA74")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001048")]
			[Address(RVA = "0xC0EA7C", Offset = "0xC0EA7C", VA = "0xC0EA7C")]
			public float GetExecuteTime()
			{
				return default(float);
			}

			[Token(Token = "0x6001049")]
			[Address(RVA = "0xC0EA84", Offset = "0xC0EA84", VA = "0xC0EA84")]
			public float GetStartTime()
			{
				return default(float);
			}

			[Token(Token = "0x600104A")]
			[Address(RVA = "0xC0EA8C", Offset = "0xC0EA8C", VA = "0xC0EA8C")]
			public float GetEndTime()
			{
				return default(float);
			}

			[Token(Token = "0x600104B")]
			[Address(RVA = "0xC0EA94", Offset = "0xC0EA94", VA = "0xC0EA94")]
			public ProfilingUpdate()
			{
			}
		}

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, ProfilingUpdate> profilingSubSystem;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float loopStartTime;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<Type, float> prevSubSystemExecuteTime;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float prevLoopExecuteTime;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static float gfxWaitForPresentExecOnFinishRendering;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float firstPreCullingPoint;

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x1085614", Offset = "0x1085614", VA = "0x1085614")]
		public static void Init()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x108624C", Offset = "0x108624C", VA = "0x108624C")]
		public static float GetLastExecuteTime()
		{
			return default(float);
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x10862B0", Offset = "0x10862B0", VA = "0x10862B0")]
		public static float GetGfxWaitForPresent()
		{
			return default(float);
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x1086314", Offset = "0x1086314", VA = "0x1086314")]
		public static void OnPreCulling()
		{
		}

		[Token(Token = "0x600103E")]
		public static float GetProfilingTime<T>()
		{
			return default(float);
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x10863B8", Offset = "0x10863B8", VA = "0x10863B8")]
		public static float GetProfilingTime(Type t)
		{
			return default(float);
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x1085A80", Offset = "0x1085A80", VA = "0x1085A80")]
		private static void AppendProfilingLoopSystem(ref PlayerLoopSystem playerLoop, Type[] profilePoints)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x10864EC", Offset = "0x10864EC", VA = "0x10864EC")]
		private static void Loop1stPoint()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x1086564", Offset = "0x1086564", VA = "0x1086564")]
		private static void LoopLastPoint()
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x1086890", Offset = "0x1086890", VA = "0x1086890")]
		public MainLoopProfilingCustomPlayerLoop()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class MainLoopProfilingPrecullingNotificate : MonoBehaviour
	{
		[Token(Token = "0x600104C")]
		[Address(RVA = "0x108689C", Offset = "0x108689C", VA = "0x108689C")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x10868F4", Offset = "0x10868F4", VA = "0x10868F4")]
		public MainLoopProfilingPrecullingNotificate()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class MainLoopProfilingProfilingUI : MonoBehaviour
	{
		[Token(Token = "0x600104E")]
		[Address(RVA = "0x1086AC8", Offset = "0x1086AC8", VA = "0x1086AC8")]
		public MainLoopProfilingProfilingUI()
		{
		}
	}
}
namespace DebugGame
{
	[Token(Token = "0x200036F")]
	public class BootNotifySceneLoadedForEditor : MonoBehaviour
	{
		[Token(Token = "0x600104F")]
		[Address(RVA = "0xE32C98", Offset = "0xE32C98", VA = "0xE32C98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xE32D10", Offset = "0xE32D10", VA = "0xE32D10")]
		public BootNotifySceneLoadedForEditor()
		{
		}
	}
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x8813D0", Offset = "0x8813D0")]
	public class DebugAnimationTestBehaviour : MonoBehaviour
	{
		[Token(Token = "0x2000371")]
		private enum Mode
		{
			[Token(Token = "0x40012B4")]
			SimpleLod,
			[Token(Token = "0x40012B5")]
			Animator,
			[Token(Token = "0x40012B6")]
			MeshAnimPlayMixer
		}

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BAE0", Offset = "0x88BAE0")]
		[SerializeField]
		private Mode _setupMode;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BB2C", Offset = "0x88BB2C")]
		[SerializeField]
		private string _initialAnimationNameAwake;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BB78", Offset = "0x88BB78")]
		private string _initialAnimationNameStart;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BBC4", Offset = "0x88BBC4")]
		private string _initialAnimationNameUpdate;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BC10", Offset = "0x88BC10")]
		[SerializeField]
		private int _animationLoopCount;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool _updateSetAnimation;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator _animator;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshAnimPlayMixer _meshAnim;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly LodAnimatorAdapter _animatorAdapter;

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x1282D34", Offset = "0x1282D34", VA = "0x1282D34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x1282F78", Offset = "0x1282F78", VA = "0x1282F78")]
		private void Start()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x1282F80", Offset = "0x1282F80", VA = "0x1282F80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x1282E04", Offset = "0x1282E04", VA = "0x1282E04")]
		private void SetAnimation(string animName)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x1282FC8", Offset = "0x1282FC8", VA = "0x1282FC8")]
		private void ResetFlag()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x1282FD0", Offset = "0x1282FD0", VA = "0x1282FD0")]
		private void PlayAwake()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x1282FD8", Offset = "0x1282FD8", VA = "0x1282FD8")]
		public DebugAnimationTestBehaviour()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x128303C", Offset = "0x128303C", VA = "0x128303C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894D90", Offset = "0x894D90")]
		private void <SetAnimation>b__13_0()
		{
		}
	}
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x8813E0", Offset = "0x8813E0")]
	public class DebugBasketGoalNotify : MonoBehaviour, IBasketGoalReciever, IEventSystemHandler
	{
		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BC5C", Offset = "0x88BC5C")]
		[SerializeField]
		private GameObject _goalEffect;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject _effectGameObject;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem _particleSystem;

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x1283114", Offset = "0x1283114", VA = "0x1283114", Slot = "4")]
		public void OnEnterBasket()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x1283118", Offset = "0x1283118", VA = "0x1283118", Slot = "5")]
		public void OnInBasketWithStop()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x1283148", Offset = "0x1283148", VA = "0x1283148")]
		private void CreateEffect()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x1283274", Offset = "0x1283274", VA = "0x1283274")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x894DA0", Offset = "0x894DA0")]
		private void DebugLog(string text)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x12832D8", Offset = "0x12832D8", VA = "0x12832D8")]
		public DebugBasketGoalNotify()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class DebugCameraFrontConstraint : MonoBehaviour
	{
		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 _offsetPosition;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform _rectTransform;

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x12832E0", Offset = "0x12832E0", VA = "0x12832E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x1283380", Offset = "0x1283380", VA = "0x1283380")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x1283498", Offset = "0x1283498", VA = "0x1283498")]
		public DebugCameraFrontConstraint()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class DebugCanvasWithDebug : MonoBehaviour
	{
		[Token(Token = "0x6001061")]
		[Address(RVA = "0x12834B8", Offset = "0x12834B8", VA = "0x12834B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1283530", Offset = "0x1283530", VA = "0x1283530")]
		public DebugCanvasWithDebug()
		{
		}
	}
	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x8813F0", Offset = "0x8813F0")]
	public class DebugColliderVisualizer : MonoBehaviour
	{
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector2 ReferenceResolution;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject _visualizer;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _label;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GameObject _colliderVisualizerCanvas;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Font _font;

		[Token(Token = "0x1700017A")]
		private static GameObject ColliderVisualizerCanvas
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x1283538", Offset = "0x1283538", VA = "0x1283538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private static Font Font
		{
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x1283728", Offset = "0x1283728", VA = "0x1283728")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x12837F4", Offset = "0x12837F4", VA = "0x12837F4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x128396C", Offset = "0x128396C", VA = "0x128396C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x1283A40", Offset = "0x1283A40", VA = "0x1283A40")]
		public void Initialize(Color color, string message, int fontSize)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x12842D8", Offset = "0x12842D8", VA = "0x12842D8")]
		public void SetVisible(bool show)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x1283D28", Offset = "0x1283D28", VA = "0x1283D28")]
		private GameObject CreateVisualizer(PrimitiveType primitiveType)
		{
			return null;
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x1283E1C", Offset = "0x1283E1C", VA = "0x1283E1C")]
		private void SetVisualizerTransform(BoxCollider boxCollider)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x1283ED8", Offset = "0x1283ED8", VA = "0x1283ED8")]
		private void SetVisualizerTransform(SphereCollider sphereCollider)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x1283F98", Offset = "0x1283F98", VA = "0x1283F98")]
		private void SetVisualizerTransform(CapsuleCollider capsuleCollider)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x1284100", Offset = "0x1284100", VA = "0x1284100")]
		private void CreateLabel(string message, int fontSize)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x1284308", Offset = "0x1284308", VA = "0x1284308")]
		public DebugColliderVisualizer()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class DebugCollisionGroundCheck : MonoBehaviour
	{
		[Token(Token = "0x2000377")]
		public class GridInfo
		{
			[Token(Token = "0x40012CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 Pos;

			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool hit;

			[Token(Token = "0x600107D")]
			[Address(RVA = "0xC052A0", Offset = "0xC052A0", VA = "0xC052A0")]
			public GridInfo()
			{
			}
		}

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color SelectedColor;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color UnselectedColor;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 _checkAreaSize;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _raycastHeight;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BCE8", Offset = "0x88BCE8")]
		[SerializeField]
		private float _showGridHeight;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BD34", Offset = "0x88BD34")]
		[SerializeField]
		private float _notHitShowRadius;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly List<GridInfo> _gridInfos;

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x1284364", Offset = "0x1284364", VA = "0x1284364")]
		private void CheckColliderGround()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x1284568", Offset = "0x1284568", VA = "0x1284568")]
		private void ClearAllPoints()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x12845BC", Offset = "0x12845BC", VA = "0x12845BC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x1284994", Offset = "0x1284994", VA = "0x1284994")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x12845C4", Offset = "0x12845C4", VA = "0x12845C4")]
		private void OnDrawGizmos(bool selected)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x128499C", Offset = "0x128499C", VA = "0x128499C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x894DD8", Offset = "0x894DD8")]
		public void SetAreaSizeForEditor(Vector2 size)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x12849A4", Offset = "0x12849A4", VA = "0x12849A4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x894E10", Offset = "0x894E10")]
		public void SetCenterPositionForEditor(Vector3 pos)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x12849F0", Offset = "0x12849F0", VA = "0x12849F0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x894E48", Offset = "0x894E48")]
		public void SetShowGridHeightForEditor(float height)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x12849F8", Offset = "0x12849F8", VA = "0x12849F8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x894E80", Offset = "0x894E80")]
		public void SetNotHitShowRadiusForEditor(float radius)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x1284A00", Offset = "0x1284A00", VA = "0x1284A00")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x894EB8", Offset = "0x894EB8")]
		public void DoCheckColliderGroundForEditor()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x1284A04", Offset = "0x1284A04", VA = "0x1284A04")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x894EF0", Offset = "0x894EF0")]
		public void DoClearAllPointsForEditor()
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x1284A08", Offset = "0x1284A08", VA = "0x1284A08")]
		public int GetNotHitCount()
		{
			return default(int);
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x1284A54", Offset = "0x1284A54", VA = "0x1284A54")]
		public DebugCollisionGroundCheck()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class DebugCollisionTriggerLog : MonoBehaviour
	{
		[Token(Token = "0x600107E")]
		[Address(RVA = "0x1284B6C", Offset = "0x1284B6C", VA = "0x1284B6C")]
		public DebugCollisionTriggerLog()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class DebugDistanceGrabberPuzzle : ZVRDistanceGrabber
	{
		[Token(Token = "0x600107F")]
		[Address(RVA = "0x1284B74", Offset = "0x1284B74", VA = "0x1284B74")]
		public void InitializeDebug()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x1284C24", Offset = "0x1284C24", VA = "0x1284C24", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x1284C28", Offset = "0x1284C28", VA = "0x1284C28")]
		private void OnUpdatedAnchors()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x1284DB0", Offset = "0x1284DB0", VA = "0x1284DB0")]
		public DebugDistanceGrabberPuzzle()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class DebugDistanceGrabberZoo : ZVRDistanceGrabber
	{
		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool _clickDown;

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x1284DB8", Offset = "0x1284DB8", VA = "0x1284DB8", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x1284F1C", Offset = "0x1284F1C", VA = "0x1284F1C")]
		private void OnUpdatedAnchors()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x1284E74", Offset = "0x1284E74", VA = "0x1284E74")]
		private void KeyboardInput()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x12850A4", Offset = "0x12850A4", VA = "0x12850A4")]
		public DebugDistanceGrabberZoo()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class DebugDrawObject : StaticAccessBehaviour<DebugDrawObject>
	{
		[Token(Token = "0x6001087")]
		[Address(RVA = "0x12850AC", Offset = "0x12850AC", VA = "0x12850AC")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x1285110", Offset = "0x1285110", VA = "0x1285110")]
		public DebugDrawObject()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class DebugFlyingController : MonoBehaviour
	{
		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _enableInput;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _playerRigidbody;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40012D0")]
		private const float RotationAngle = 10f;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ZVRDistanceGrabber _grabberLeft;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ZVRDistanceGrabber _grabberRight;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _handAnchorLeft;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject _handAnchorRight;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _lastPositionLeft;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _lastPositionRight;

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x128515C", Offset = "0x128515C", VA = "0x128515C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x1285368", Offset = "0x1285368", VA = "0x1285368")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x1285668", Offset = "0x1285668", VA = "0x1285668")]
		public void SetEnableInput(bool flag)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x128536C", Offset = "0x128536C", VA = "0x128536C")]
		private void RunFlying()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x1285674", Offset = "0x1285674", VA = "0x1285674")]
		public DebugFlyingController()
		{
		}
	}
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881400", Offset = "0x881400")]
	public class DebugGameSettingInspector : MonoBehaviour
	{
		[Token(Token = "0x600108E")]
		[Address(RVA = "0x1285684", Offset = "0x1285684", VA = "0x1285684")]
		private void Awake()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x12856E8", Offset = "0x12856E8", VA = "0x12856E8")]
		public DebugGameSettingInspector()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class DebugHandyMenuAtUIBuilder
	{
		[Token(Token = "0x6001090")]
		[Address(RVA = "0x1285858", Offset = "0x1285858", VA = "0x1285858")]
		public DebugHandyMenuAtUIBuilder()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class DebugLogController : MonoBehaviour
	{
		[Token(Token = "0x6001091")]
		[Address(RVA = "0x1285860", Offset = "0x1285860", VA = "0x1285860")]
		public DebugLogController()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class DebugLogSetupForBoot : MonoBehaviour
	{
		[Token(Token = "0x6001092")]
		[Address(RVA = "0x1285868", Offset = "0x1285868", VA = "0x1285868")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x12858CC", Offset = "0x12858CC", VA = "0x12858CC")]
		public DebugLogSetupForBoot()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class DebugManager : Singleton<DebugManager>
	{
		[Token(Token = "0x6001094")]
		[Address(RVA = "0x12858D4", Offset = "0x12858D4", VA = "0x12858D4")]
		public DebugManager()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class DebugMouseCameraController : MonoBehaviour
	{
		[Token(Token = "0x6001095")]
		[Address(RVA = "0x128594C", Offset = "0x128594C", VA = "0x128594C")]
		public DebugMouseCameraController()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class DebugPuzzleText : MonoBehaviour
	{
		[Token(Token = "0x2000384")]
		public enum DebugInfoType
		{
			[Token(Token = "0x40012DB")]
			ToyBlastPuzzle
		}

		[Serializable]
		[Token(Token = "0x2000385")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881410", Offset = "0x881410")]
		private sealed class <>c
		{
			[Token(Token = "0x40012DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Text, bool> <>9__7_0;

			[Token(Token = "0x600109D")]
			[Address(RVA = "0xC05308", Offset = "0xC05308", VA = "0xC05308")]
			public <>c()
			{
			}

			[Token(Token = "0x600109E")]
			[Address(RVA = "0xC05310", Offset = "0xC05310", VA = "0xC05310")]
			internal bool <Awake>b__7_0(Text x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BD80", Offset = "0x88BD80")]
		private DebugInfoType <InfoType>k__BackingField;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _workTest;

		[Token(Token = "0x1700017C")]
		public DebugInfoType InfoType
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0x1285954", Offset = "0x1285954", VA = "0x1285954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894F28", Offset = "0x894F28")]
			get
			{
				return default(DebugInfoType);
			}
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x128595C", Offset = "0x128595C", VA = "0x128595C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894F38", Offset = "0x894F38")]
			private set
			{
			}
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x1285964", Offset = "0x1285964", VA = "0x1285964")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x1285B84", Offset = "0x1285B84", VA = "0x1285B84")]
		public void Update()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x1285C0C", Offset = "0x1285C0C", VA = "0x1285C0C")]
		private string CalcDebugInfoString()
		{
			return null;
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x1285C58", Offset = "0x1285C58", VA = "0x1285C58")]
		public DebugPuzzleText()
		{
		}
	}
	[Token(Token = "0x2000386")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881420", Offset = "0x881420")]
	public class DebugShowColliderAll : MonoBehaviour
	{
		[Token(Token = "0x2000387")]
		private class ShowInfo
		{
			[Token(Token = "0x40012E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject Primitive;

			[Token(Token = "0x40012E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material MaterialColor;

			[Token(Token = "0x60010AA")]
			[Address(RVA = "0xC05370", Offset = "0xC05370", VA = "0xC05370")]
			public ShowInfo()
			{
			}
		}

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88BD90", Offset = "0x88BD90")]
		[SerializeField]
		private bool _showEnable;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BDC8", Offset = "0x88BDC8")]
		private Color _visualizerColor;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<ShowInfo> _showList;

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x1285C60", Offset = "0x1285C60", VA = "0x1285C60")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x1285F0C", Offset = "0x1285F0C", VA = "0x1285F0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x1285C74", Offset = "0x1285C74", VA = "0x1285C74")]
		private void SetVisible(bool show)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x1285F10", Offset = "0x1285F10", VA = "0x1285F10")]
		private void AllDelete()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x1286088", Offset = "0x1286088", VA = "0x1286088")]
		private void CreateAllChildren()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x12861D4", Offset = "0x12861D4", VA = "0x12861D4")]
		private void CreateShowVisualizer(Collider targetCollider, Color color)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x128655C", Offset = "0x128655C", VA = "0x128655C")]
		private GameObject CreatePrimitive(Collider targetCollider, PrimitiveType primitiveType)
		{
			return null;
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x12866D4", Offset = "0x12866D4", VA = "0x12866D4")]
		private void SetVisualizerTransform(GameObject visualizer, BoxCollider boxCollider)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x1286790", Offset = "0x1286790", VA = "0x1286790")]
		private void SetVisualizerTransform(GameObject visualizer, SphereCollider sphereCollider)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x1286850", Offset = "0x1286850", VA = "0x1286850")]
		private void SetVisualizerTransform(GameObject visualizer, CapsuleCollider capsuleCollider)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x12869F4", Offset = "0x12869F4", VA = "0x12869F4")]
		public DebugShowColliderAll()
		{
		}
	}
	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881430", Offset = "0x881430")]
	public class DebugShowColliderOne : MonoBehaviour
	{
		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88BE14", Offset = "0x88BE14")]
		[SerializeField]
		private bool _showEnable;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BE4C", Offset = "0x88BE4C")]
		private Color _visualizerColor;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BE98", Offset = "0x88BE98")]
		[SerializeField]
		private string _message;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BEE4", Offset = "0x88BEE4")]
		[SerializeField]
		private int _fontSize;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DebugColliderVisualizer _colliderVisualizer;

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x1225000", Offset = "0x1225000", VA = "0x1225000")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x1225014", Offset = "0x1225014", VA = "0x1225014")]
		private void SetVisible(bool show)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x1225168", Offset = "0x1225168", VA = "0x1225168")]
		public DebugShowColliderOne()
		{
		}
	}
	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x881440", Offset = "0x881440")]
	public class DebugShowPerformance : MonoBehaviour
	{
		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder _textBuilder;

		[Token(Token = "0x40012EA")]
		private const float kDeltaInfluence = 0.03f;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _averageDeltaTime;

		[Token(Token = "0x40012EC")]
		private const float ShowUpdateInterval = 1f;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _startTime;

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x122520C", Offset = "0x122520C", VA = "0x122520C")]
		public void Awake()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x122526C", Offset = "0x122526C", VA = "0x122526C")]
		public void Update()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x1225424", Offset = "0x1225424", VA = "0x1225424")]
		public DebugShowPerformance()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public static class DebugUtility
	{
		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x1227D34", Offset = "0x1227D34", VA = "0x1227D34")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x894F48", Offset = "0x894F48")]
		public static void LogSequence(string log)
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class DebugZooFullMapOpt : MonoBehaviour
	{
		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x1227D38", Offset = "0x1227D38", VA = "0x1227D38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x1227DB0", Offset = "0x1227DB0", VA = "0x1227DB0")]
		public DebugZooFullMapOpt()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class DebugZvrUIBuilder : MonoBehaviour
	{
		[Token(Token = "0x200038D")]
		public delegate void OnClick();

		[Token(Token = "0x200038E")]
		public delegate void OnSlider(float f);

		[Token(Token = "0x200038F")]
		public delegate void OnToggleValueChange(Toggle t);

		[Token(Token = "0x2000390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8814A0", Offset = "0x8814A0")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnClick handler;

			[Token(Token = "0x60010D6")]
			[Address(RVA = "0xC05F90", Offset = "0xC05F90", VA = "0xC05F90")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x60010D7")]
			[Address(RVA = "0xC05F98", Offset = "0xC05F98", VA = "0xC05F98")]
			internal void <AddButton>b__0()
			{
			}
		}

		[Token(Token = "0x2000391")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8814B0", Offset = "0x8814B0")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnSlider onValueChanged;

			[Token(Token = "0x60010D8")]
			[Address(RVA = "0xC061BC", Offset = "0xC061BC", VA = "0xC061BC")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x60010D9")]
			[Address(RVA = "0xC061C4", Offset = "0xC061C4", VA = "0xC061C4")]
			internal void <AddSlider>b__0(float f)
			{
			}
		}

		[Token(Token = "0x2000392")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8814C0", Offset = "0x8814C0")]
		private sealed class <>c__DisplayClass50_0
		{
			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text[] textElementsInSlider;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OnSlider onValueChanged;

			[Token(Token = "0x60010DA")]
			[Address(RVA = "0xC06410", Offset = "0xC06410", VA = "0xC06410")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x60010DB")]
			[Address(RVA = "0xC06418", Offset = "0xC06418", VA = "0xC06418")]
			internal void <AddSlider>b__0(float changeValue)
			{
			}
		}

		[Token(Token = "0x2000393")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8814D0", Offset = "0x8814D0")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnToggleValueChange onValueChanged;

			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Toggle t;

			[Token(Token = "0x60010DC")]
			[Address(RVA = "0xC064A0", Offset = "0xC064A0", VA = "0xC064A0")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x60010DD")]
			[Address(RVA = "0xC064A8", Offset = "0xC064A8", VA = "0xC064A8")]
			internal void <AddToggle>b__0(bool <p0>)
			{
			}
		}

		[Token(Token = "0x2000394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8814E0", Offset = "0x8814E0")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnToggleValueChange onValueChanged;

			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Toggle t;

			[Token(Token = "0x60010DE")]
			[Address(RVA = "0xC0683C", Offset = "0xC0683C", VA = "0xC0683C")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x60010DF")]
			[Address(RVA = "0xC06844", Offset = "0xC06844", VA = "0xC06844")]
			internal void <AddToggle>b__0(bool <p0>)
			{
			}
		}

		[Token(Token = "0x2000395")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8814F0", Offset = "0x8814F0")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnToggleValueChange handler;

			[Token(Token = "0x4001318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Toggle tb;

			[Token(Token = "0x60010E0")]
			[Address(RVA = "0xC06864", Offset = "0xC06864", VA = "0xC06864")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x60010E1")]
			[Address(RVA = "0xC0686C", Offset = "0xC0686C", VA = "0xC0686C")]
			internal void <AddRadio>b__0(bool <p0>)
			{
			}
		}

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform buttonPrefab;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform labelPrefab;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform sliderPrefab;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform dividerPrefab;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RectTransform togglePrefab;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RectTransform radioPrefab;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BF90", Offset = "0x88BF90")]
		private RectTransform _debugLogTextPrefab;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88BFDC", Offset = "0x88BFDC")]
		private RectTransform _puzzleLogTextPrefab;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C028", Offset = "0x88C028")]
		[SerializeField]
		private Transform[] targetContentPanels;

		[Token(Token = "0x40012F7")]
		public const int DEBUG_PANE_CENTER = 0;

		[Token(Token = "0x40012F8")]
		public const int DEBUG_PANE_RIGHT = 1;

		[Token(Token = "0x40012F9")]
		public const int DEBUG_PANE_LEFT = 2;

		[Token(Token = "0x40012FA")]
		public const int DEBUG_PANE_RIGHT2ND = 3;

		[Token(Token = "0x40012FB")]
		public const int DEBUG_PANE_RIGHT3RD = 4;

		[Token(Token = "0x40012FC")]
		public const int DEBUG_PANE_RIGHT4TH = 5;

		[Token(Token = "0x40012FD")]
		public const int DEBUG_PANE_RIGHT5TH = 6;

		[Token(Token = "0x40012FE")]
		public const int DEBUG_PANE_RIGHT6TH = 7;

		[Token(Token = "0x40012FF")]
		public const int DEBUG_PANE_RIGHT7TH = 8;

		[Token(Token = "0x4001300")]
		public const int DEBUG_PANE_RIGHT8TH = 9;

		[Token(Token = "0x4001301")]
		public const int DEBUG_PANE_RIGHT9TH = 10;

		[Token(Token = "0x4001302")]
		public const int DEBUG_PANE_RIGHT10TH = 11;

		[Token(Token = "0x4001303")]
		private const float elementSpacing = 16f;

		[Token(Token = "0x4001304")]
		private const float marginH = 16f;

		[Token(Token = "0x4001305")]
		private const float marginV = 16f;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C074", Offset = "0x88C074")]
		private static DebugZvrUIBuilder <instance>k__BackingField;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Vector3 OffsetPosition;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<RectTransform>[] insertedElements;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2[] insertPositions;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Dictionary<string, ToggleGroup> _radioGroups;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _moveMenuOffset;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion _showForwardRotation;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 _showCameraPosition;

		[Token(Token = "0x1700017D")]
		public static DebugZvrUIBuilder instance
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x1227DB8", Offset = "0x1227DB8", VA = "0x1227DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894F80", Offset = "0x894F80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x1227E04", Offset = "0x1227E04", VA = "0x1227E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894F90", Offset = "0x894F90")]
			private set
			{
			}
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x1227E54", Offset = "0x1227E54", VA = "0x1227E54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x1228090", Offset = "0x1228090", VA = "0x1228090")]
		public void Show()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x122833C", Offset = "0x122833C", VA = "0x122833C")]
		private void CalcPositionAndRotation()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x12284D8", Offset = "0x12284D8", VA = "0x12284D8")]
		public void Hide()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x1228500", Offset = "0x1228500", VA = "0x1228500")]
		public bool IsShow()
		{
			return default(bool);
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1228524", Offset = "0x1228524", VA = "0x1228524")]
		public void SetMoveMenuOffset(Vector3 move)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x12280D4", Offset = "0x12280D4", VA = "0x12280D4")]
		private void Relayout()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x12285D8", Offset = "0x12285D8", VA = "0x12285D8")]
		private void AddRect(RectTransform r, int targetCanvas)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x12288B0", Offset = "0x12288B0", VA = "0x12288B0")]
		public RectTransform AddButton(string label, OnClick handler, int targetCanvas)
		{
			return null;
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x1228B40", Offset = "0x1228B40", VA = "0x1228B40")]
		public RectTransform AddLabel(string label, int targetCanvas)
		{
			return null;
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x1228C44", Offset = "0x1228C44", VA = "0x1228C44")]
		public RectTransform AddSlider(float min, float max, OnSlider onValueChanged, int targetCanvas, bool wholeNumbersOnly = false)
		{
			return null;
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x1228E1C", Offset = "0x1228E1C", VA = "0x1228E1C")]
		public RectTransform AddSlider(string label, float value, float min, float max, OnSlider onValueChanged, int targetCanvas, bool wholeNumbersOnly = false)
		{
			return null;
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x12290C0", Offset = "0x12290C0", VA = "0x12290C0")]
		public RectTransform AddDivider(int targetCanvas)
		{
			return null;
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x1229164", Offset = "0x1229164", VA = "0x1229164")]
		public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas)
		{
			return null;
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x1229334", Offset = "0x1229334", VA = "0x1229334")]
		public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas)
		{
			return null;
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x122951C", Offset = "0x122951C", VA = "0x122951C")]
		public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, bool defaultValue, int targetCanvas)
		{
			return null;
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x1229808", Offset = "0x1229808", VA = "0x1229808")]
		public RectTransform AddDebugLog(int targetCanvas)
		{
			return null;
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x12298D0", Offset = "0x12298D0", VA = "0x12298D0")]
		public RectTransform AddPuzzleLog(int targetCanvas)
		{
			return null;
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x1229998", Offset = "0x1229998", VA = "0x1229998")]
		public void SetEnableCanvas(bool flag, int targetCanvas)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x1229BF4", Offset = "0x1229BF4", VA = "0x1229BF4")]
		public DebugZvrUIBuilder()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class TitleDebugController : MonoBehaviour
	{
		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xFA2408", Offset = "0xFA2408", VA = "0xFA2408")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xFA246C", Offset = "0xFA246C", VA = "0xFA246C")]
		public TitleDebugController()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class ToyBlastDebugController : MonoBehaviour
	{
		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xFA661C", Offset = "0xFA661C", VA = "0xFA661C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xFA6680", Offset = "0xFA6680", VA = "0xFA6680")]
		public ToyBlastDebugController()
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x881500", Offset = "0x881500")]
	public class LetterSpacing : BaseMeshEffect
	{
		[Token(Token = "0x4001319")]
		private const string SupportedTagRegexPattersn = "<b>|</b>|<i>|</i>|<size=.*?>|</size>|<color=.*?>|</color>|<material=.*?>|</material>";

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool useRichText;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_spacing;

		[Token(Token = "0x1700017E")]
		public float spacing
		{
			[Token(Token = "0x60010E7")]
			[Address(RVA = "0x107DF24", Offset = "0x107DF24", VA = "0x107DF24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0x107DF2C", Offset = "0x107DF2C", VA = "0x107DF2C")]
			set
			{
			}
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x107DF1C", Offset = "0x107DF1C", VA = "0x107DF1C")]
		protected LetterSpacing()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x107DFFC", Offset = "0x107DFFC", VA = "0x107DFFC", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x107E0D4", Offset = "0x107E0D4", VA = "0x107E0D4")]
		public void ModifyVertices(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x107ED00", Offset = "0x107ED00", VA = "0x107ED00")]
		private IEnumerator GetRegexMatchedTagCollection(string line, out int lineLengthWithoutTags)
		{
			return null;
		}
	}
}
namespace UnityEngine.EventSystems
{
	[Token(Token = "0x2000399")]
	public class OVRInputModuleOrigin : PointerInputModule
	{
		[Token(Token = "0x200039A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x88153C", Offset = "0x88153C")]
		public enum InputMode
		{
			[Token(Token = "0x4001339")]
			Mouse,
			[Token(Token = "0x400133A")]
			Buttons
		}

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C0A4", Offset = "0x88C0A4")]
		public Transform rayTransform;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C0DC", Offset = "0x88C0DC")]
		public Transform rayTransformRight;

		[NonSerialized]
		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ZVRLaserPointer m_Cursor;

		[NonSerialized]
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected ZVRLaserPointer m_CursorRight;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C128", Offset = "0x88C128")]
		public OVRInput.Button joyPadClickButton;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C160", Offset = "0x88C160")]
		public OVRInput.Button joyPadClickButtonRight;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C1AC", Offset = "0x88C1AC")]
		public KeyCode gazeClickKey;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88C1E4", Offset = "0x88C1E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C1E4", Offset = "0x88C1E4")]
		public bool performSphereCastForGazepointer;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88C244", Offset = "0x88C244")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C244", Offset = "0x88C244")]
		public bool useRightStickScroll;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C2A4", Offset = "0x88C2A4")]
		public float rightStickDeadZone;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C2DC", Offset = "0x88C2DC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88C2DC", Offset = "0x88C2DC")]
		public bool useSwipeScroll;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C33C", Offset = "0x88C33C")]
		public float swipeDragThreshold;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C374", Offset = "0x88C374")]
		public float swipeDragScale;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C3AC", Offset = "0x88C3AC")]
		public bool InvertSwipeXAxis;

		[NonSerialized]
		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public OVRRaycaster activeGraphicRaycaster;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88C3E4", Offset = "0x88C3E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C3E4", Offset = "0x88C3E4")]
		public float angleDragThreshold;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float m_SpherecastRadius;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_NextAction;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector2 m_LastMousePosition;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector2 m_MousePosition;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88C454", Offset = "0x88C454")]
		private string m_HorizontalAxis;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private string m_VerticalAxis;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private string m_SubmitButton;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string m_CancelButton;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool m_AllowActivationOnMobileDevice;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Dictionary<int, OVRPointerEventData> m_VRRayPointerData;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly MouseState m_MouseState;

		[Token(Token = "0x1700017F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x897ADC", Offset = "0x897ADC")]
		public InputMode inputMode
		{
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0xF60EC8", Offset = "0xF60EC8", VA = "0xF60EC8")]
			get
			{
				return default(InputMode);
			}
		}

		[Token(Token = "0x17000180")]
		public bool allowActivationOnMobileDevice
		{
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0xF60ED0", Offset = "0xF60ED0", VA = "0xF60ED0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010EF")]
			[Address(RVA = "0xF60ED8", Offset = "0xF60ED8", VA = "0xF60ED8")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public float inputActionsPerSecond
		{
			[Token(Token = "0x60010F0")]
			[Address(RVA = "0xF60EE4", Offset = "0xF60EE4", VA = "0xF60EE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010F1")]
			[Address(RVA = "0xF60EEC", Offset = "0xF60EEC", VA = "0xF60EEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public string horizontalAxis
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0xF60EF4", Offset = "0xF60EF4", VA = "0xF60EF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0xF60EFC", Offset = "0xF60EFC", VA = "0xF60EFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public string verticalAxis
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0xF60F04", Offset = "0xF60F04", VA = "0xF60F04")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F5")]
			[Address(RVA = "0xF60F0C", Offset = "0xF60F0C", VA = "0xF60F0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public string submitButton
		{
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0xF60F14", Offset = "0xF60F14", VA = "0xF60F14")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xF60F1C", Offset = "0xF60F1C", VA = "0xF60F1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public string cancelButton
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0xF60F24", Offset = "0xF60F24", VA = "0xF60F24")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0xF60F2C", Offset = "0xF60F2C", VA = "0xF60F2C")]
			set
			{
			}
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xF60D70", Offset = "0xF60D70", VA = "0xF60D70")]
		protected OVRInputModuleOrigin()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xF60F34", Offset = "0xF60F34", VA = "0xF60F34", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xF60F64", Offset = "0xF60F64", VA = "0xF60F64", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xF60F7C", Offset = "0xF60F7C", VA = "0xF60F7C", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xF61074", Offset = "0xF61074", VA = "0xF61074", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xF61154", Offset = "0xF61154", VA = "0xF61154", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xF61454", Offset = "0xF61454", VA = "0xF61454")]
		private bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xF6167C", Offset = "0xF6167C", VA = "0xF6167C")]
		private bool AllowMoveEventProcessing(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xF616DC", Offset = "0xF616DC", VA = "0xF616DC")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xF61780", Offset = "0xF61780", VA = "0xF61780")]
		private bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xF6193C", Offset = "0xF6193C", VA = "0xF6193C")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xF61AA0", Offset = "0xF61AA0", VA = "0xF61AA0")]
		private void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xF6219C", Offset = "0xF6219C", VA = "0xF6219C")]
		private void ProcessMouseEvent(MouseState mouseData)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xF62464", Offset = "0xF62464", VA = "0xF62464", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xF62414", Offset = "0xF62414", VA = "0xF62414")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xF6251C", Offset = "0xF6251C", VA = "0xF6251C")]
		protected void CopyFromTo(OVRPointerEventData from, OVRPointerEventData to)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xF62590", Offset = "0xF62590", VA = "0xF62590")]
		protected new void CopyFromTo(PointerEventData from, PointerEventData to)
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xF625EC", Offset = "0xF625EC", VA = "0xF625EC")]
		protected bool GetPointerData(int id, out OVRPointerEventData data, bool create)
		{
			return default(bool);
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xF6117C", Offset = "0xF6117C", VA = "0xF6117C")]
		protected new void ClearSelection()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xF626E4", Offset = "0xF626E4", VA = "0xF626E4")]
		private static Vector3 GetRectTransformNormal(RectTransform rectTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xF62804", Offset = "0xF62804", VA = "0xF62804", Slot = "30")]
		protected virtual MouseState GetGazePointerData()
		{
			return null;
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xF62F18", Offset = "0xF62F18", VA = "0xF62F18")]
		protected MouseState GetCanvasPointerData()
		{
			return null;
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xF632A4", Offset = "0xF632A4", VA = "0xF632A4")]
		private bool ShouldStartDrag(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xF624D4", Offset = "0xF624D4", VA = "0xF624D4")]
		private static bool IsPointerMoving(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xF63458", Offset = "0xF63458", VA = "0xF63458")]
		protected Vector2 SwipeAdjustedPosition(Vector2 originalPosition, PointerEventData pointerEvent)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xF634E8", Offset = "0xF634E8", VA = "0xF634E8", Slot = "29")]
		protected override void ProcessDrag(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xF6384C", Offset = "0xF6384C", VA = "0xF6384C", Slot = "31")]
		protected virtual PointerEventData.FramePressState GetGazeButtonState()
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xF62E6C", Offset = "0xF62E6C", VA = "0xF62E6C")]
		protected Vector2 GetExtraScrollDelta()
		{
			return default(Vector2);
		}
	}
}
namespace TouchGuard
{
	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881578", Offset = "0x881578")]
	public class TouchGuardHand : MonoBehaviour
	{
		[Token(Token = "0x400133B")]
		private const float ReturnDistance = 0.01f;

		[Token(Token = "0x400133C")]
		private const float ExtrusionDistance = 0.001f;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _originalLocalPosition;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _hitTrigger;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool _returnLocalPosition;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CapsuleCollider _targetCollider;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _layerAnimal;

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xFA5AC8", Offset = "0xFA5AC8", VA = "0xFA5AC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xFA5C70", Offset = "0xFA5C70", VA = "0xFA5C70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xFA5C74", Offset = "0xFA5C74", VA = "0xFA5C74")]
		private void CalcReturnPosition()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xFA5DC4", Offset = "0xFA5DC4", VA = "0xFA5DC4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xFA5E30", Offset = "0xFA5E30", VA = "0xFA5E30")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xFA5DEC", Offset = "0xFA5DEC", VA = "0xFA5DEC")]
		private bool ColliderEnableCheck(Collider other)
		{
			return default(bool);
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xFA62D8", Offset = "0xFA62D8", VA = "0xFA62D8")]
		private void BoxCollision(BoxCollider other)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xFA5FB0", Offset = "0xFA5FB0", VA = "0xFA5FB0")]
		private void SphereCollision(SphereCollider other)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xFA65B0", Offset = "0xFA65B0", VA = "0xFA65B0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x894FA0", Offset = "0x894FA0")]
		private void DebugLog(string text)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xFA6614", Offset = "0xFA6614", VA = "0xFA6614")]
		public TouchGuardHand()
		{
		}
	}
}
namespace Udonba.SnapOffsetHelper
{
	[Token(Token = "0x200039C")]
	public static class StringExtension
	{
		[Token(Token = "0x4001342")]
		private const char UnitySeparatoChar = '/';

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xE163D0", Offset = "0xE163D0", VA = "0xE163D0")]
		public static string ReplaceSeparator(this string value, ReplaceOrder order)
		{
			return null;
		}
	}
	[Token(Token = "0x200039D")]
	public enum ReplaceOrder
	{
		[Token(Token = "0x4001344")]
		UnityToSystem,
		[Token(Token = "0x4001345")]
		SystemToUnity
	}
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x881598", Offset = "0x881598")]
	public class SnapOffsetGenerator : MonoBehaviour
	{
		[Token(Token = "0x6001120")]
		[Address(RVA = "0xE0D098", Offset = "0xE0D098", VA = "0xE0D098")]
		public SnapOffsetGenerator()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class SnapOffsetParam
	{
		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string name;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 position;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion rotation;

		[Token(Token = "0x17000186")]
		public string Name
		{
			[Token(Token = "0x6001121")]
			[Address(RVA = "0xE0D0A0", Offset = "0xE0D0A0", VA = "0xE0D0A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001122")]
			[Address(RVA = "0xE0D0A8", Offset = "0xE0D0A8", VA = "0xE0D0A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public Vector3 Position
		{
			[Token(Token = "0x6001123")]
			[Address(RVA = "0xE0D0B0", Offset = "0xE0D0B0", VA = "0xE0D0B0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001124")]
			[Address(RVA = "0xE0D0BC", Offset = "0xE0D0BC", VA = "0xE0D0BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0xE0D0C8", Offset = "0xE0D0C8", VA = "0xE0D0C8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001126")]
			[Address(RVA = "0xE0D0D4", Offset = "0xE0D0D4", VA = "0xE0D0D4")]
			set
			{
			}
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xE0D0E0", Offset = "0xE0D0E0", VA = "0xE0D0E0")]
		public SnapOffsetParam()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x20003A0")]
	public static class TweenSettingsExtensions
	{
		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881608", Offset = "0x881608")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Tween s;

			[Token(Token = "0x6001129")]
			[Address(RVA = "0xF9A460", Offset = "0xF9A460", VA = "0xF9A460")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600112A")]
			[Address(RVA = "0xF9A468", Offset = "0xF9A468", VA = "0xF9A468")]
			internal void <SetLifeCycleTarget>b__0(UniRx.Unit _)
			{
			}
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x187493C", Offset = "0x187493C", VA = "0x187493C")]
		public static Tween SetLifeCycleTarget(this Tween s, MonoBehaviour lifeLinkTarget)
		{
			return null;
		}
	}
}
namespace MiniJSON
{
	[Token(Token = "0x20003A2")]
	public static class Json
	{
		[Token(Token = "0x20003A3")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x20003A4")]
			private enum TOKEN
			{
				[Token(Token = "0x400134D")]
				NONE,
				[Token(Token = "0x400134E")]
				CURLY_OPEN,
				[Token(Token = "0x400134F")]
				CURLY_CLOSE,
				[Token(Token = "0x4001350")]
				SQUARED_OPEN,
				[Token(Token = "0x4001351")]
				SQUARED_CLOSE,
				[Token(Token = "0x4001352")]
				COLON,
				[Token(Token = "0x4001353")]
				COMMA,
				[Token(Token = "0x4001354")]
				STRING,
				[Token(Token = "0x4001355")]
				NUMBER,
				[Token(Token = "0x4001356")]
				TRUE,
				[Token(Token = "0x4001357")]
				FALSE,
				[Token(Token = "0x4001358")]
				NULL
			}

			[Token(Token = "0x400134A")]
			private const string WORD_BREAK = "{}[],:\"";

			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringReader json;

			[Token(Token = "0x17000189")]
			private char PeekChar
			{
				[Token(Token = "0x6001138")]
				[Address(RVA = "0xC0C96C", Offset = "0xC0C96C", VA = "0xC0C96C")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x1700018A")]
			private char NextChar
			{
				[Token(Token = "0x6001139")]
				[Address(RVA = "0xC0C780", Offset = "0xC0C780", VA = "0xC0C780")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x1700018B")]
			private string NextWord
			{
				[Token(Token = "0x600113A")]
				[Address(RVA = "0xC0C804", Offset = "0xC0C804", VA = "0xC0C804")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018C")]
			private TOKEN NextToken
			{
				[Token(Token = "0x600113B")]
				[Address(RVA = "0xC0C084", Offset = "0xC0C084", VA = "0xC0C084")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x600112D")]
			[Address(RVA = "0xC0BC70", Offset = "0xC0BC70", VA = "0xC0BC70")]
			public static bool IsWordBreak(char c)
			{
				return default(bool);
			}

			[Token(Token = "0x600112E")]
			[Address(RVA = "0xC0BD18", Offset = "0xC0BD18", VA = "0xC0BD18")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x600112F")]
			[Address(RVA = "0xC0BD90", Offset = "0xC0BD90", VA = "0xC0BD90")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x6001130")]
			[Address(RVA = "0xC0BF28", Offset = "0xC0BF28", VA = "0xC0BF28", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001131")]
			[Address(RVA = "0xC0BF5C", Offset = "0xC0BF5C", VA = "0xC0BF5C")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x6001132")]
			[Address(RVA = "0xC0C4DC", Offset = "0xC0C4DC", VA = "0xC0C4DC")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x6001133")]
			[Address(RVA = "0xC0BF00", Offset = "0xC0BF00", VA = "0xC0BF00")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x6001134")]
			[Address(RVA = "0xC0C5C4", Offset = "0xC0C5C4", VA = "0xC0C5C4")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x6001135")]
			[Address(RVA = "0xC0C248", Offset = "0xC0C248", VA = "0xC0C248")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x6001136")]
			[Address(RVA = "0xC0C69C", Offset = "0xC0C69C", VA = "0xC0C69C")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x6001137")]
			[Address(RVA = "0xC0C8BC", Offset = "0xC0C8BC", VA = "0xC0C8BC")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x20003A5")]
		private sealed class Serializer
		{
			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringBuilder builder;

			[Token(Token = "0x600113C")]
			[Address(RVA = "0xC0C9F0", Offset = "0xC0C9F0", VA = "0xC0C9F0")]
			private Serializer()
			{
			}

			[Token(Token = "0x600113D")]
			[Address(RVA = "0xC0CA58", Offset = "0xC0CA58", VA = "0xC0CA58")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x600113E")]
			[Address(RVA = "0xC0CAD0", Offset = "0xC0CAD0", VA = "0xC0CAD0")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x600113F")]
			[Address(RVA = "0xC0D28C", Offset = "0xC0D28C", VA = "0xC0D28C")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x6001140")]
			[Address(RVA = "0xC0CF84", Offset = "0xC0CF84", VA = "0xC0CF84")]
			private void SerializeArray(IList anArray)
			{
			}

			[Token(Token = "0x6001141")]
			[Address(RVA = "0xC0CCBC", Offset = "0xC0CCBC", VA = "0xC0CCBC")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x6001142")]
			[Address(RVA = "0xC0D6CC", Offset = "0xC0D6CC", VA = "0xC0D6CC")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x107D3EC", Offset = "0x107D3EC", VA = "0x107D3EC")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x107D3FC", Offset = "0x107D3FC", VA = "0x107D3FC")]
		public static string Serialize(object obj)
		{
			return null;
		}
	}
}
namespace Network
{
	[Token(Token = "0x20003A6")]
	public static class HashJsonUtility
	{
		[Token(Token = "0x6001143")]
		[Address(RVA = "0x12B9490", Offset = "0x12B9490", VA = "0x12B9490")]
		private static string GetSaveName(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x12B94E0", Offset = "0x12B94E0", VA = "0x12B94E0")]
		public static bool SaveLocalFile(string filePath, string jsonString)
		{
			return default(bool);
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x12B9D38", Offset = "0x12B9D38", VA = "0x12B9D38")]
		public static bool SaveNoneCompressLocalFile(string filePath, string jsonString)
		{
			return default(bool);
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x12B960C", Offset = "0x12B960C", VA = "0x12B960C")]
		public static bool SaveCompressLocalFile(string filePath, string jsonString)
		{
			return default(bool);
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x12BA0C8", Offset = "0x12BA0C8", VA = "0x12BA0C8")]
		public static string LoadLocalFile(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x12BAD90", Offset = "0x12BAD90", VA = "0x12BAD90")]
		public static string LoadNoneCompressLocalFile(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x12BA228", Offset = "0x12BA228", VA = "0x12BA228")]
		public static string LoadCompressLocalFile(string filePath)
		{
			return null;
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x12BB4F8", Offset = "0x12BB4F8", VA = "0x12BB4F8")]
		public static string LoadFromByteMemory(byte[] rawData)
		{
			return null;
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x12BC0CC", Offset = "0x12BC0CC", VA = "0x12BC0CC")]
		public static string LoadNoneCompressFromByteMemory(byte[] rawData)
		{
			return null;
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x12BB658", Offset = "0x12BB658", VA = "0x12BB658")]
		public static string LoadCompressFromByteMemory(byte[] rawData)
		{
			return null;
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x12BC750", Offset = "0x12BC750", VA = "0x12BC750")]
		public static bool IsExistLocalFile(string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x12BC768", Offset = "0x12BC768", VA = "0x12BC768")]
		public static void RemoveLocalFile(string filePath)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x12BC780", Offset = "0x12BC780", VA = "0x12BC780")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x894FF8", Offset = "0x894FF8")]
		private static void OutputLog(string text)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x12BC7E4", Offset = "0x12BC7E4", VA = "0x12BC7E4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895030", Offset = "0x895030")]
		private static void SaveToFileForDebug(string json, string filePath)
		{
		}
	}
}
namespace Crypt
{
	[Token(Token = "0x20003A7")]
	public class AES
	{
		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string AesIV;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string AesKey;

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xE1CD40", Offset = "0xE1CD40", VA = "0xE1CD40")]
		public static void Encrypt(string text, out string dst)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xE1D39C", Offset = "0xE1D39C", VA = "0xE1D39C")]
		public static void Encrypt(byte[] buf, out byte[] dst)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xE1D984", Offset = "0xE1D984", VA = "0xE1D984")]
		public static void Decrypt(string cryptText, out string dst)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xE1E038", Offset = "0xE1E038", VA = "0xE1E038")]
		public static void Decrypt(byte[] val, out byte[] dst)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xE1E670", Offset = "0xE1E670", VA = "0xE1E670")]
		public AES()
		{
		}
	}
}
namespace Kiteretsu.VR
{
	[Token(Token = "0x20003A8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x881618", Offset = "0x881618")]
	public class BGMController : StaticAccessBehaviour<BGMController>
	{
		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource _audioSource;

		[Token(Token = "0x1700018D")]
		public bool IsPlaying
		{
			[Token(Token = "0x600115B")]
			[Address(RVA = "0xE301B0", Offset = "0xE301B0", VA = "0xE301B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xE30040", Offset = "0xE30040", VA = "0xE30040", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xE300B4", Offset = "0xE300B4", VA = "0xE300B4")]
		public void Play(string path, bool isLoop)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xE30178", Offset = "0xE30178", VA = "0xE30178")]
		public void Stop()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xE30194", Offset = "0xE30194", VA = "0xE30194")]
		public void Replay()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xE301CC", Offset = "0xE301CC", VA = "0xE301CC")]
		public BGMController()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class Billboard : MonoBehaviour, ISceneLoadedReciever, IEventSystemHandler
	{
		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool freezeRotationX;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool freezeRotationY;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool freezeRotationZ;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_camera;

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xE31B38", Offset = "0xE31B38", VA = "0xE31B38", Slot = "4")]
		public void OnSceneLoaded()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xE31C4C", Offset = "0xE31C4C", VA = "0xE31C4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xE31B3C", Offset = "0xE31B3C", VA = "0xE31B3C")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xE31C50", Offset = "0xE31C50", VA = "0xE31C50")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xE31D50", Offset = "0xE31D50", VA = "0xE31D50")]
		public Billboard()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x881678", Offset = "0x881678")]
	public class SoundController : MonoBehaviour
	{
		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<AudioSource> audioSources;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected List<AudioClip> audioClips;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, AudioClip> audioClipDict;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool isCreateSoundDictionary;

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xE10314", Offset = "0xE10314", VA = "0xE10314")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xE10560", Offset = "0xE10560", VA = "0xE10560")]
		public void Play(int index)
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xE10700", Offset = "0xE10700", VA = "0xE10700")]
		public void Play(string soundName)
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xE10600", Offset = "0xE10600", VA = "0xE10600")]
		public AudioSource Play(AudioClip clip, bool isLoop = false)
		{
			return null;
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xE10A6C", Offset = "0xE10A6C", VA = "0xE10A6C")]
		public void StopSound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xE108BC", Offset = "0xE108BC", VA = "0xE108BC")]
		private AudioSource FreeAudioSource()
		{
			return null;
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xE10C30", Offset = "0xE10C30", VA = "0xE10C30")]
		private AudioSource CreateAudioSource()
		{
			return null;
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xE10CE4", Offset = "0xE10CE4", VA = "0xE10CE4")]
		public SoundController()
		{
		}
	}
}
namespace Kiteretsu.UI
{
	[Token(Token = "0x20003AB")]
	public class AnimationNumber : MonoBehaviour
	{
		[Token(Token = "0x20003AC")]
		public enum Style
		{
			[Token(Token = "0x400136F")]
			Atlas,
			[Token(Token = "0x4001370")]
			Text
		}

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C540", Offset = "0x88C540")]
		private int <Value>k__BackingField;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _current;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Style style;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AtlasNumber atlasNumber;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text text;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _addText;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _firstScale;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _laterScale;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isAddFront;

		[Token(Token = "0x1700018E")]
		public int Value
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0xE23B34", Offset = "0xE23B34", VA = "0xE23B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895068", Offset = "0x895068")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600116B")]
			[Address(RVA = "0xE23B3C", Offset = "0xE23B3C", VA = "0xE23B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895078", Offset = "0x895078")]
			private set
			{
			}
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xE23B44", Offset = "0xE23B44", VA = "0xE23B44")]
		public void SetNumber(int val, bool anim = true)
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xE23C94", Offset = "0xE23C94", VA = "0xE23C94")]
		public void SetNumber(int val, string addText, float fscale, float lscale, bool anim = true, bool isAddFront = false)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xE23B58", Offset = "0xE23B58", VA = "0xE23B58")]
		private void UpdateView()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xE24410", Offset = "0xE24410", VA = "0xE24410")]
		private void Update()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xE24470", Offset = "0xE24470", VA = "0xE24470")]
		public AnimationNumber()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class AtlasNumber : MonoBehaviour
	{
		[Token(Token = "0x20003AE")]
		public enum Align
		{
			[Token(Token = "0x400137C")]
			Center,
			[Token(Token = "0x400137D")]
			Left,
			[Token(Token = "0x400137E")]
			Right
		}

		[Token(Token = "0x20003AF")]
		public enum VAlign
		{
			[Token(Token = "0x4001380")]
			Center,
			[Token(Token = "0x4001381")]
			Upper,
			[Token(Token = "0x4001382")]
			Lower
		}

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture atlasTextureFile;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Align align;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VAlign valign;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float padding;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GameObject> _numbers;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, int> _replaceNumber;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C550", Offset = "0x88C550")]
		private float <TotalWidth>k__BackingField;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject _go;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Dictionary<string, Sprite> _cacheSprites;

		[Token(Token = "0x1700018F")]
		public float TotalWidth
		{
			[Token(Token = "0x6001171")]
			[Address(RVA = "0xE291AC", Offset = "0xE291AC", VA = "0xE291AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895088", Offset = "0x895088")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001172")]
			[Address(RVA = "0xE291B4", Offset = "0xE291B4", VA = "0xE291B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895098", Offset = "0x895098")]
			private set
			{
			}
		}

		[Token(Token = "0x17000190")]
		private GameObject _gameObject
		{
			[Token(Token = "0x6001173")]
			[Address(RVA = "0xE291BC", Offset = "0xE291BC", VA = "0xE291BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xE291F0", Offset = "0xE291F0", VA = "0xE291F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xE292A4", Offset = "0xE292A4", VA = "0xE292A4")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xE29324", Offset = "0xE29324", VA = "0xE29324")]
		public void RemoveAllNumber()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xE2948C", Offset = "0xE2948C", VA = "0xE2948C")]
		public void AddReplaceSetting(string org, int number)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xE23CB8", Offset = "0xE23CB8", VA = "0xE23CB8")]
		public void SetNumber(int number)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xE23CFC", Offset = "0xE23CFC", VA = "0xE23CFC")]
		public void SetNumber(string text, float firstScale = 1f, float laterScale = 1f, bool isCodeLaterScale = true)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xE2957C", Offset = "0xE2957C", VA = "0xE2957C")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xE29688", Offset = "0xE29688", VA = "0xE29688")]
		public AtlasNumber()
		{
		}
	}
}
namespace Kiteretsu.Engine
{
	[Token(Token = "0x20003B0")]
	public class SingletonMonoBehaviour<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static T _instance;

		[Token(Token = "0x17000191")]
		public static T Instance
		{
			[Token(Token = "0x600117C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600117D")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600117E")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x600117F")]
		public SingletonMonoBehaviour()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class ResourceCache
	{
		[Token(Token = "0x20003B2")]
		public class CacheInfo<T> where T : class
		{
			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C610", Offset = "0x88C610")]
			private readonly Dictionary<string, T> <Cache>k__BackingField;

			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int HitCount;

			[Token(Token = "0x4001391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int MissCount;

			[Token(Token = "0x1700019D")]
			public Dictionary<string, T> Cache
			{
				[Token(Token = "0x600118C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895158", Offset = "0x895158")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019E")]
			public int Count
			{
				[Token(Token = "0x6001191")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600118D")]
			public T GetCache(string name)
			{
				return null;
			}

			[Token(Token = "0x600118E")]
			public bool HasCache(string name)
			{
				return default(bool);
			}

			[Token(Token = "0x600118F")]
			public void AddCache(string name, T value)
			{
			}

			[Token(Token = "0x6001190")]
			public void Clear()
			{
			}

			[Token(Token = "0x6001192")]
			public CacheInfo()
			{
			}
		}

		[Token(Token = "0x20003B3")]
		public class CacheClone<T> : CacheInfo<T> where T : UnityEngine.Object
		{
			[Token(Token = "0x6001193")]
			public T GetClone(string name)
			{
				return null;
			}

			[Token(Token = "0x6001194")]
			public CacheClone()
			{
			}
		}

		[Token(Token = "0x20003B4")]
		public class SpriteDictionary
		{
			[Token(Token = "0x4001392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, Sprite> Sprites;

			[Token(Token = "0x6001195")]
			[Address(RVA = "0xF8D47C", Offset = "0xF8D47C", VA = "0xF8D47C")]
			public SpriteDictionary(Sprite[] values)
			{
			}

			[Token(Token = "0x6001196")]
			[Address(RVA = "0xF8D58C", Offset = "0xF8D58C", VA = "0xF8D58C")]
			public SpriteDictionary(UnityEngine.Object[] values)
			{
			}

			[Token(Token = "0x6001197")]
			[Address(RVA = "0xF8D720", Offset = "0xF8D720", VA = "0xF8D720")]
			public Sprite NullGet(string key)
			{
				return null;
			}
		}

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C560", Offset = "0x88C560")]
		private readonly CacheClone<GameObject> <GameObject>k__BackingField;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C570", Offset = "0x88C570")]
		private readonly CacheInfo<MeshFilter> <MeshFilter>k__BackingField;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C580", Offset = "0x88C580")]
		private readonly CacheInfo<Material> <Material>k__BackingField;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C590", Offset = "0x88C590")]
		private readonly CacheInfo<RuntimeAnimatorController> <RuntimeAnimatorController>k__BackingField;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C5A0", Offset = "0x88C5A0")]
		private readonly CacheInfo<AnimationClip> <AnimationClip>k__BackingField;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C5B0", Offset = "0x88C5B0")]
		private readonly CacheInfo<Texture> <Texture>k__BackingField;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C5C0", Offset = "0x88C5C0")]
		private readonly CacheInfo<Font> <Font>k__BackingField;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C5D0", Offset = "0x88C5D0")]
		private readonly CacheInfo<AudioClip> <AudioClip>k__BackingField;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C5E0", Offset = "0x88C5E0")]
		private readonly CacheInfo<Sprite> <Sprite>k__BackingField;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C5F0", Offset = "0x88C5F0")]
		private readonly CacheInfo<SpriteDictionary> <SpriteAtlas>k__BackingField;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C600", Offset = "0x88C600")]
		private readonly CacheInfo<TextAsset> <TextAsset>k__BackingField;

		[Token(Token = "0x17000192")]
		public CacheClone<GameObject> GameObject
		{
			[Token(Token = "0x6001180")]
			[Address(RVA = "0x1022114", Offset = "0x1022114", VA = "0x1022114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8950A8", Offset = "0x8950A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public CacheInfo<MeshFilter> MeshFilter
		{
			[Token(Token = "0x6001181")]
			[Address(RVA = "0x102211C", Offset = "0x102211C", VA = "0x102211C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8950B8", Offset = "0x8950B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public CacheInfo<Material> Material
		{
			[Token(Token = "0x6001182")]
			[Address(RVA = "0x1022124", Offset = "0x1022124", VA = "0x1022124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8950C8", Offset = "0x8950C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public CacheInfo<RuntimeAnimatorController> RuntimeAnimatorController
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0x102212C", Offset = "0x102212C", VA = "0x102212C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8950D8", Offset = "0x8950D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		public CacheInfo<AnimationClip> AnimationClip
		{
			[Token(Token = "0x6001184")]
			[Address(RVA = "0x1022134", Offset = "0x1022134", VA = "0x1022134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8950E8", Offset = "0x8950E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		public CacheInfo<Texture> Texture
		{
			[Token(Token = "0x6001185")]
			[Address(RVA = "0x102213C", Offset = "0x102213C", VA = "0x102213C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8950F8", Offset = "0x8950F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		public CacheInfo<Font> Font
		{
			[Token(Token = "0x6001186")]
			[Address(RVA = "0x1022144", Offset = "0x1022144", VA = "0x1022144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895108", Offset = "0x895108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		public CacheInfo<AudioClip> AudioClip
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0x102214C", Offset = "0x102214C", VA = "0x102214C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895118", Offset = "0x895118")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		public CacheInfo<Sprite> Sprite
		{
			[Token(Token = "0x6001188")]
			[Address(RVA = "0x1022154", Offset = "0x1022154", VA = "0x1022154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895128", Offset = "0x895128")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		public CacheInfo<SpriteDictionary> SpriteAtlas
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0x102215C", Offset = "0x102215C", VA = "0x102215C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895138", Offset = "0x895138")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		public CacheInfo<TextAsset> TextAsset
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0x1022164", Offset = "0x1022164", VA = "0x1022164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895148", Offset = "0x895148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x102216C", Offset = "0x102216C", VA = "0x102216C")]
		public ResourceCache()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public static class ResourceManager
	{
		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C620", Offset = "0x88C620")]
		private static ResourceCache <Cache>k__BackingField;

		[Token(Token = "0x1700019F")]
		public static ResourceCache Cache
		{
			[Token(Token = "0x6001198")]
			[Address(RVA = "0x1022464", Offset = "0x1022464", VA = "0x1022464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895168", Offset = "0x895168")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001199")]
			[Address(RVA = "0x10224C8", Offset = "0x10224C8", VA = "0x10224C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895178", Offset = "0x895178")]
			private set
			{
			}
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x1022530", Offset = "0x1022530", VA = "0x1022530")]
		public static void CacheClear()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x10225F8", Offset = "0x10225F8", VA = "0x10225F8")]
		public static Sprite LoadSprite(string path, string spriteName)
		{
			return null;
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x1022848", Offset = "0x1022848", VA = "0x1022848")]
		public static string LoadTextAsset(string path)
		{
			return null;
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x1022A90", Offset = "0x1022A90", VA = "0x1022A90")]
		public static AudioClip LoadAudioClip(string path)
		{
			return null;
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x1022C98", Offset = "0x1022C98", VA = "0x1022C98")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895188", Offset = "0x895188")]
		private static void DebugUseFileLog(string baseText, string path)
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class MessageManager : StaticAccessBehaviour<MessageManager>
	{
		[Token(Token = "0x20003B7")]
		public enum Language
		{
			[Token(Token = "0x4001398")]
			en,
			[Token(Token = "0x4001399")]
			ja,
			[Token(Token = "0x400139A")]
			cn,
			[Token(Token = "0x400139B")]
			tw
		}

		[Serializable]
		[Token(Token = "0x20003B8")]
		public sealed class MessageRoot
		{
			[Token(Token = "0x400139C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MessagePair[] msg;

			[Token(Token = "0x60011AE")]
			[Address(RVA = "0xC0F2F4", Offset = "0xC0F2F4", VA = "0xC0F2F4")]
			public MessageRoot()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003B9")]
		public sealed class MessagePair
		{
			[Token(Token = "0x400139D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x400139E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string message;

			[Token(Token = "0x60011AF")]
			[Address(RVA = "0xC0F2EC", Offset = "0xC0F2EC", VA = "0xC0F2EC")]
			public MessagePair()
			{
			}
		}

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C630", Offset = "0x88C630")]
		private Language <CurrentLanguage>k__BackingField;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, string> _messages;

		[Token(Token = "0x4001396")]
		private const string MasterJsonAssetPath = "MasterJson/";

		[Token(Token = "0x170001A0")]
		public Language CurrentLanguage
		{
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x13A3618", Offset = "0x13A3618", VA = "0x13A3618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8951C0", Offset = "0x8951C0")]
			get
			{
				return default(Language);
			}
			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x13A3620", Offset = "0x13A3620", VA = "0x13A3620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8951D0", Offset = "0x8951D0")]
			private set
			{
			}
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x13A3628", Offset = "0x13A3628", VA = "0x13A3628")]
		public void Initialize(ConfigLanguage lang)
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x13A3640", Offset = "0x13A3640", VA = "0x13A3640")]
		private void SetupLanguage(Language lang)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x13A3A34", Offset = "0x13A3A34", VA = "0x13A3A34")]
		public bool IsExistMessage(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x13A3AE4", Offset = "0x13A3AE4", VA = "0x13A3AE4")]
		public string GetMessage(int id)
		{
			return null;
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x13A3C28", Offset = "0x13A3C28", VA = "0x13A3C28")]
		public string GetMessage(MessageId id)
		{
			return null;
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x13A3C2C", Offset = "0x13A3C2C", VA = "0x13A3C2C")]
		public string[] GetMessageList(int startId, int endId)
		{
			return null;
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x13A3D6C", Offset = "0x13A3D6C", VA = "0x13A3D6C")]
		public string GetMessage(int id, string k, string v)
		{
			return null;
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x13A3EBC", Offset = "0x13A3EBC", VA = "0x13A3EBC")]
		public string GetMessage(MessageId id, string k, string v)
		{
			return null;
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x13A3EC0", Offset = "0x13A3EC0", VA = "0x13A3EC0")]
		public string GetMessage(MessageId id, string[] ks, string[] vs)
		{
			return null;
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x13A3EC4", Offset = "0x13A3EC4", VA = "0x13A3EC4")]
		public string GetMessage(int id, string[] ks, string[] vs)
		{
			return null;
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x13A3908", Offset = "0x13A3908", VA = "0x13A3908")]
		public static string MakeMessageMasterFilePath(Language lang)
		{
			return null;
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x13A4078", Offset = "0x13A4078", VA = "0x13A4078")]
		public MessageManager()
		{
		}
	}
}
namespace Common
{
	[Token(Token = "0x20003BA")]
	public class StaticAccessBehaviour<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x170001A1")]
		public static T Instance
		{
			[Token(Token = "0x60011B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B1")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011B2")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011B3")]
		public StaticAccessBehaviour()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class BitFlag
	{
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint Flag;

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xE24D3C", Offset = "0xE24D3C", VA = "0xE24D3C")]
		public void SetOn(int index)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xE24DE4", Offset = "0xE24DE4", VA = "0xE24DE4")]
		public void SetOff(int index)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xE32474", Offset = "0xE32474", VA = "0xE32474")]
		public void SetDirectFlag(uint flag)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xE3247C", Offset = "0xE3247C", VA = "0xE3247C")]
		public bool HasFlag(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xE24F04", Offset = "0xE24F04", VA = "0xE24F04")]
		public bool HasAny()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xE32494", Offset = "0xE32494", VA = "0xE32494")]
		public bool HasAll()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xE24F14", Offset = "0xE24F14", VA = "0xE24F14")]
		public bool HasNone()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xE25000", Offset = "0xE25000", VA = "0xE25000")]
		public BitFlag()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8816D8", Offset = "0x8816D8")]
	public class MeshRenderSetSortingLayer : MonoBehaviour
	{
		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C640", Offset = "0x88C640")]
		[SerializeField]
		private int _sortingOrder;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C68C", Offset = "0x88C68C")]
		private int _sortingLayerID;

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x13A1ECC", Offset = "0x13A1ECC", VA = "0x13A1ECC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x13A1F40", Offset = "0x13A1F40", VA = "0x13A1F40")]
		public MeshRenderSetSortingLayer()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class StateGameObjectFire : MonoBehaviour
	{
		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<StateGameObjectNotify> _objectNotifyList;

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xE15A18", Offset = "0xE15A18", VA = "0xE15A18")]
		public void AddNotify(StateGameObjectNotify objectNotify)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xE15A7C", Offset = "0xE15A7C", VA = "0xE15A7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xE15BF0", Offset = "0xE15BF0", VA = "0xE15BF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xE15D64", Offset = "0xE15D64", VA = "0xE15D64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xE15ED8", Offset = "0xE15ED8", VA = "0xE15ED8")]
		public StateGameObjectFire()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class StateGameObjectNotify
	{
		[Token(Token = "0x20003BF")]
		public enum Type
		{
			[Token(Token = "0x40013A6")]
			Enable,
			[Token(Token = "0x40013A7")]
			Disable,
			[Token(Token = "0x40013A8")]
			Destroy
		}

		[Token(Token = "0x14000023")]
		private event Action<Type> _notify
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0xE15F50", Offset = "0xE15F50", VA = "0xE15F50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8951E0", Offset = "0x8951E0")]
			add
			{
			}
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0xE15FF0", Offset = "0xE15FF0", VA = "0xE15FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8951F0", Offset = "0x8951F0")]
			remove
			{
			}
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xE16090", Offset = "0xE16090", VA = "0xE16090")]
		public void SetupNotify(GameObject gameObject)
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xE16168", Offset = "0xE16168", VA = "0xE16168")]
		public void AddNotify(Action<Type> callback)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xE15E78", Offset = "0xE15E78", VA = "0xE15E78")]
		public void NotifyDestroy()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xE15D04", Offset = "0xE15D04", VA = "0xE15D04")]
		public void NotifyDisable()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xE15B90", Offset = "0xE15B90", VA = "0xE15B90")]
		public void NotifyEnable()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xE1616C", Offset = "0xE1616C", VA = "0xE1616C")]
		public StateGameObjectNotify()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public sealed class WorkerThreadControl : Singleton<WorkerThreadControl>
	{
		[Token(Token = "0x20003C1")]
		public delegate void WorkerCallback();

		[Token(Token = "0x20003C2")]
		public delegate void FinishCallback();

		[Token(Token = "0x20003C3")]
		private class WorkerInfo
		{
			[Token(Token = "0x20003C4")]
			public enum State
			{
				[Token(Token = "0x40013B1")]
				None,
				[Token(Token = "0x40013B2")]
				Start,
				[Token(Token = "0x40013B3")]
				Finish
			}

			[Token(Token = "0x40013AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WorkerCallback WorkerFunc;

			[Token(Token = "0x40013AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FinishCallback FinishFunc;

			[Token(Token = "0x40013AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public State RunState;

			[Token(Token = "0x60011DD")]
			[Address(RVA = "0xF9BC28", Offset = "0xF9BC28", VA = "0xF9BC28")]
			public WorkerInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881738", Offset = "0x881738")]
		private sealed class <>c
		{
			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static WaitCallback <>9__12_0;

			[Token(Token = "0x60011DF")]
			[Address(RVA = "0xF9B6E4", Offset = "0xF9B6E4", VA = "0xF9B6E4")]
			public <>c()
			{
			}

			[Token(Token = "0x60011E0")]
			[Address(RVA = "0xF9B6EC", Offset = "0xF9B6EC", VA = "0xF9B6EC")]
			internal void <CheckWork>b__12_0(object state)
			{
			}
		}

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int MaxRunWork;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int RequestListCountForInitialize;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<WorkerInfo> _requestArray;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<WorkerInfo> _runningArray;

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x1168D80", Offset = "0x1168D80", VA = "0x1168D80")]
		public WorkerThreadControl()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x1168EB0", Offset = "0x1168EB0", VA = "0x1168EB0", Slot = "1")]
		~WorkerThreadControl()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x1168EAC", Offset = "0x1168EAC", VA = "0x1168EAC")]
		private void initialize()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x1169058", Offset = "0x1169058", VA = "0x1169058")]
		public void RegistryWorker(WorkerCallback work, FinishCallback finish)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x11690F0", Offset = "0x11690F0", VA = "0x11690F0")]
		public bool IsEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x116915C", Offset = "0x116915C", VA = "0x116915C")]
		public void RunUpdate()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x11692C8", Offset = "0x11692C8", VA = "0x11692C8")]
		private void CheckWork()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x1169160", Offset = "0x1169160", VA = "0x1169160")]
		private void NotifyFinishCallback()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x1168F18", Offset = "0x1168F18", VA = "0x1168F18")]
		private void ThreadStopAll()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class Xorshift
	{
		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint x;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private uint y;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint z;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private uint w;

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x1169500", Offset = "0x1169500", VA = "0x1169500")]
		public Xorshift(ulong seed)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x1169540", Offset = "0x1169540", VA = "0x1169540")]
		public void SetSeed(ulong seed)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x116955C", Offset = "0x116955C", VA = "0x116955C")]
		public uint Next()
		{
			return default(uint);
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x1169588", Offset = "0x1169588", VA = "0x1169588")]
		public int NextInt(long max)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003C7")]
	public static class CommonConstants
	{
		[Token(Token = "0x40013BA")]
		public const float THROW_POWER = 100f;

		[Token(Token = "0x40013BB")]
		public const int PLAY_SE_MAX = 5;

		[Token(Token = "0x40013BC")]
		public const int MAX_AREA = 7;

		[Token(Token = "0x40013BD")]
		public const int MAX_AREA_LEVEL = 4;

		[Token(Token = "0x40013BE")]
		public const float PLAYER_OFFSET_Y = 0.92f;

		[Token(Token = "0x40013BF")]
		public const float ENABLE_ALPHA = 1f;

		[Token(Token = "0x40013C0")]
		public const float DISABLE_ALPHA = 0f;

		[Token(Token = "0x40013C1")]
		public const float DEFAULT_SCREEN_WIDTH = 1280f;

		[Token(Token = "0x40013C2")]
		public const float DEFAULT_SCREEN_HEIGHT = 720f;

		[Token(Token = "0x40013C3")]
		public const float DEFAULT_SCREEN_RATE = 1.7777778f;

		[Token(Token = "0x40013C4")]
		public const float LAYOUT_SCREEN_WIDTH = 1080f;

		[Token(Token = "0x40013C5")]
		public const float LAYOUT_SCREEN_HEIGHT = 720f;

		[Token(Token = "0x40013C6")]
		public const float LAYOUT_SCREEN_RATE = 1.5f;

		[Token(Token = "0x40013C7")]
		public const float MAX_LAYOUT_SCREEN_WIDTH = 1559f;

		[Token(Token = "0x40013C8")]
		public const float MAX_LAYOUT_SCREEN_HEIGHT = 720f;

		[Token(Token = "0x40013C9")]
		public const float MAX_LAYOUT_SCREEN_RATE = 2.1652777f;

		[Token(Token = "0x40013CA")]
		public const int FPS_PUZZLE = 60;
	}
	[Token(Token = "0x20003C8")]
	public static class InputConstants
	{
		[Token(Token = "0x40013CB")]
		public const OVRInput.Controller GameController = OVRInput.Controller.Touch;

		[Token(Token = "0x40013CC")]
		public const float TRIGGER_ON_VALUE = 0.6f;

		[Token(Token = "0x40013CD")]
		public const float TRIGGER_OFF_VALUE = 0.4f;
	}
	[Token(Token = "0x20003C9")]
	public enum HandLR
	{
		[Token(Token = "0x40013CF")]
		HandLeft,
		[Token(Token = "0x40013D0")]
		HandRight
	}
	[Token(Token = "0x20003CA")]
	public enum Tips
	{
		[Token(Token = "0x40013D2")]
		NONE,
		[Token(Token = "0x40013D3")]
		MOVE,
		[Token(Token = "0x40013D4")]
		CLICK,
		[Token(Token = "0x40013D5")]
		GRAB,
		[Token(Token = "0x40013D6")]
		MAP
	}
	[Token(Token = "0x20003CB")]
	public class AreaPrefabController : StaticAccessBehaviour<AreaPrefabController>
	{
		[Token(Token = "0x20003CC")]
		public enum AreaType
		{
			[Token(Token = "0x40013DC")]
			Area,
			[Token(Token = "0x40013DD")]
			Outside
		}

		[Token(Token = "0x20003CD")]
		private class RunAreaInfo
		{
			[Token(Token = "0x40013DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject AreaInstance;

			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AreaPrefabUtility.LoadType LoadType;

			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int AreaNo;

			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool IsFromCache;

			[Token(Token = "0x40013E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AreaPrefabInfo SrcPrefabInfo;

			[Token(Token = "0x40013E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool IsReserveRemove;

			[Token(Token = "0x60011ED")]
			[Address(RVA = "0xC032EC", Offset = "0xC032EC", VA = "0xC032EC")]
			public void SetupFromCache(GameObject target)
			{
			}

			[Token(Token = "0x60011EE")]
			[Address(RVA = "0xC032FC", Offset = "0xC032FC", VA = "0xC032FC")]
			private void CalcLoadType(GameObject target)
			{
			}

			[Token(Token = "0x60011EF")]
			[Address(RVA = "0xC035E0", Offset = "0xC035E0", VA = "0xC035E0")]
			private void CalcAreaNo(GameObject target)
			{
			}

			[Token(Token = "0x60011F0")]
			[Address(RVA = "0xC036E0", Offset = "0xC036E0", VA = "0xC036E0")]
			public RunAreaInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003CE")]
		public class AreaPrefabInfo
		{
			[Token(Token = "0x40013E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AreaType Type;

			[Token(Token = "0x40013E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string PrefabName;

			[Token(Token = "0x40013E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string PrefabPath;

			[Token(Token = "0x40013E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string PrefabOnlyLv1Path;

			[Token(Token = "0x40013E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string PrefabOnlyLv5Path;

			[Token(Token = "0x40013E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int AreaNo;

			[Token(Token = "0x40013EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int Level;

			[Token(Token = "0x40013EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 Position;

			[Token(Token = "0x40013EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Quaternion Rotation;

			[Token(Token = "0x40013ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 Scale;

			[Token(Token = "0x60011F1")]
			[Address(RVA = "0xC032E4", Offset = "0xC032E4", VA = "0xC032E4")]
			public AreaPrefabInfo()
			{
			}
		}

		[Token(Token = "0x20003CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881748", Offset = "0x881748")]
		private sealed class <NotifyPrefabLoaded>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170001A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011F5")]
				[Address(RVA = "0xC03294", Offset = "0xC03294", VA = "0xC03294", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011F7")]
				[Address(RVA = "0xC032DC", Offset = "0xC032DC", VA = "0xC032DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xC031D0", Offset = "0xC031D0", VA = "0xC031D0")]
			[DebuggerHidden]
			public <NotifyPrefabLoaded>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60011F3")]
			[Address(RVA = "0xC031FC", Offset = "0xC031FC", VA = "0xC031FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011F4")]
			[Address(RVA = "0xC03200", Offset = "0xC03200", VA = "0xC03200", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xC0329C", Offset = "0xC0329C", VA = "0xC0329C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C6E8", Offset = "0x88C6E8")]
		[SerializeField]
		private AreaPrefabInfo[] _areaPrefabArray;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _initialize;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _parent;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<RunAreaInfo> _areaInstanceList;

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xE268C0", Offset = "0xE268C0", VA = "0xE268C0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xE27394", Offset = "0xE27394", VA = "0xE27394")]
		public void ToCache()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xE27594", Offset = "0xE27594", VA = "0xE27594")]
		public AreaPrefabInfo[] GetPrepareAreaPrefabArray()
		{
			return null;
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xE27338", Offset = "0xE27338", VA = "0xE27338")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x895200", Offset = "0x895200")]
		private IEnumerator NotifyPrefabLoaded()
		{
			return null;
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xE27150", Offset = "0xE27150", VA = "0xE27150")]
		private GameObject LoadAreaPrefab(AreaPrefabInfo prefabInfo, RunAreaInfo runAreaInfo)
		{
			return null;
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xE27300", Offset = "0xE27300", VA = "0xE27300")]
		private bool IsCorrectLoadType(RunAreaInfo areaInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xE27648", Offset = "0xE27648", VA = "0xE27648")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895260", Offset = "0x895260")]
		public void SetupForEditor(List<AreaPrefabInfo> list)
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xE276B0", Offset = "0xE276B0", VA = "0xE276B0")]
		public AreaPrefabController()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public static class AreaPrefabUtility
	{
		[Token(Token = "0x20003D1")]
		public enum LoadType
		{
			[Token(Token = "0x40013F1")]
			LvAll,
			[Token(Token = "0x40013F2")]
			Lv1,
			[Token(Token = "0x40013F3")]
			Lv5
		}

		[Token(Token = "0x20003D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881758", Offset = "0x881758")]
		private sealed class <CoroutinePrepareLoadAndCache>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<float, float> loadCallback;

			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <loadMax>5__2;

			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <loadCount>5__3;

			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <emptyObject>5__4;

			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ResourceRequest <requestPrefab>5__5;

			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AreaPrefabController.AreaPrefabInfo[] <>7__wrap5;

			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap6;

			[Token(Token = "0x170001A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011FF")]
				[Address(RVA = "0xC03BC8", Offset = "0xC03BC8", VA = "0xC03BC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001201")]
				[Address(RVA = "0xC03C10", Offset = "0xC03C10", VA = "0xC03C10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011FC")]
			[Address(RVA = "0xC036E8", Offset = "0xC036E8", VA = "0xC036E8")]
			[DebuggerHidden]
			public <CoroutinePrepareLoadAndCache>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60011FD")]
			[Address(RVA = "0xC03714", Offset = "0xC03714", VA = "0xC03714", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011FE")]
			[Address(RVA = "0xC03718", Offset = "0xC03718", VA = "0xC03718", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001200")]
			[Address(RVA = "0xC03BD0", Offset = "0xC03BD0", VA = "0xC03BD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xE2773C", Offset = "0xE2773C", VA = "0xE2773C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8952E8", Offset = "0x8952E8")]
		public static IEnumerator CoroutinePrepareLoadAndCache(Action<float, float> loadCallback)
		{
			return null;
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xE277A8", Offset = "0xE277A8", VA = "0xE277A8")]
		public static string CalcLoadPathFromAssetPath(string assetPath)
		{
			return null;
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xE27840", Offset = "0xE27840", VA = "0xE27840")]
		private static string GetAreaLoadPrefabPath(AreaPrefabController.AreaPrefabInfo prefabInfo)
		{
			return null;
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xE2759C", Offset = "0xE2759C", VA = "0xE2759C")]
		public static LoadType CalcLoadType(int areaNo)
		{
			return default(LoadType);
		}
	}
	[Token(Token = "0x20003D3")]
	public interface IEnvPrefabLoadedReciever : IEventSystemHandler
	{
		[Token(Token = "0x6001202")]
		void OnPrefabLoaded();
	}
	[Token(Token = "0x20003D4")]
	public interface IEnvPrefabCacheReciever : IEventSystemHandler
	{
		[Token(Token = "0x6001203")]
		void OnPrefabPrepareCache();

		[Token(Token = "0x6001204")]
		void OnPrefabUseCache();
	}
	[Token(Token = "0x20003D5")]
	public static class EnvPrefabLoadedMessageUtility
	{
		[Token(Token = "0x6001205")]
		[Address(RVA = "0x123175C", Offset = "0x123175C", VA = "0x123175C")]
		public static void SendAllRootEnvPrefabLoaded()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x1231828", Offset = "0x1231828", VA = "0x1231828")]
		private static void SendEnvPrefabLoaded(GameObject targetGameObject)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x1231948", Offset = "0x1231948", VA = "0x1231948")]
		public static void SendEnvPrefabPrepareCache(GameObject targetGameObject)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x1231A68", Offset = "0x1231A68", VA = "0x1231A68")]
		public static void SendEnvPrefabUseCache(GameObject targetGameObject)
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class EffectCashManager : StaticAccessBehaviour<EffectCashManager>
	{
		[Token(Token = "0x20003D7")]
		public class CacheInfo
		{
			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> Caches;

			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int UseIndex;

			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int CacheMax;

			[Token(Token = "0x600120E")]
			[Address(RVA = "0xC06C1C", Offset = "0xC06C1C", VA = "0xC06C1C")]
			public GameObject GetCache(GameObject prefab, Transform parent)
			{
				return null;
			}

			[Token(Token = "0x600120F")]
			[Address(RVA = "0xC06D50", Offset = "0xC06D50", VA = "0xC06D50")]
			public CacheInfo()
			{
			}
		}

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x88C734", Offset = "0x88C734")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C734", Offset = "0x88C734")]
		[SerializeField]
		private int _effectCount;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, CacheInfo> _effectDictionary;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _initialize;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _parent;

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x1230DE0", Offset = "0x1230DE0", VA = "0x1230DE0")]
		public GameObject CreateEffectWithStopDisable(GameObject prefab, int cacheMax = 1)
		{
			return null;
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x12310F0", Offset = "0x12310F0", VA = "0x12310F0")]
		public void PreloadCacheEffect(GameObject prefab, int cacheMax = 1)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1230F58", Offset = "0x1230F58", VA = "0x1230F58")]
		private GameObject GetCache(GameObject prefab, int cacheMax)
		{
			return null;
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x1231114", Offset = "0x1231114", VA = "0x1231114")]
		private void Setup()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x1231264", Offset = "0x1231264", VA = "0x1231264")]
		public EffectCashManager()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class FindObjectCashManager : StaticAccessBehaviour<FindObjectCashManager>
	{
		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x88C790", Offset = "0x88C790")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C790", Offset = "0x88C790")]
		private OVRCameraRig _camera;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x88C7EC", Offset = "0x88C7EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C7EC", Offset = "0x88C7EC")]
		[SerializeField]
		private ZVRInputModule _inputModule;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C848", Offset = "0x88C848")]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x88C848", Offset = "0x88C848")]
		[SerializeField]
		private ZVRLaserPointer[] _laserPointerArray;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C8A4", Offset = "0x88C8A4")]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x88C8A4", Offset = "0x88C8A4")]
		private ZVRDistanceGrabber[] _distanceGrabberArray;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x88C900", Offset = "0x88C900")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C900", Offset = "0x88C900")]
		private ZVRSimpleCapsuleWithStickMovement _capsuleWithStick;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C95C", Offset = "0x88C95C")]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x88C95C", Offset = "0x88C95C")]
		private GameObject _playerTagObject;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C9B8", Offset = "0x88C9B8")]
		[SerializeField]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x88C9B8", Offset = "0x88C9B8")]
		private InputHapticsController _inputHapticsController;

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x12AC418", Offset = "0x12AC418", VA = "0x12AC418")]
		public GameObject GetPlayer()
		{
			return null;
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x12AC538", Offset = "0x12AC538", VA = "0x12AC538")]
		public OVRCameraRig GetCamera()
		{
			return null;
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x12AC64C", Offset = "0x12AC64C", VA = "0x12AC64C")]
		public ZVRInputModule GetInputModule()
		{
			return null;
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x12AC760", Offset = "0x12AC760", VA = "0x12AC760")]
		public ZVRLaserPointer[] GetLaserPointerArray()
		{
			return null;
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x12AC84C", Offset = "0x12AC84C", VA = "0x12AC84C")]
		public ZVRDistanceGrabber[] GetDistanceGrabberArray()
		{
			return null;
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x12AC938", Offset = "0x12AC938", VA = "0x12AC938")]
		public ZVRSimpleCapsuleWithStickMovement GetCapsuleWithStickMovement()
		{
			return null;
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x12ACA4C", Offset = "0x12ACA4C", VA = "0x12ACA4C")]
		public InputHapticsController GetInputHapticsController()
		{
			return null;
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x12ACB60", Offset = "0x12ACB60", VA = "0x12ACB60")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895398", Offset = "0x895398")]
		public void DebugClearCacheDistanceGrabber()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x12ACBB4", Offset = "0x12ACBB4", VA = "0x12ACBB4")]
		public FindObjectCashManager()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881768", Offset = "0x881768")]
	public class FallCheckResetPosition : MonoBehaviour
	{
		[Token(Token = "0x400140B")]
		private const float FallCheckHeight = -5f;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _resetPosition;

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x12AC368", Offset = "0x12AC368", VA = "0x12AC368")]
		private void Start()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x12AC3A4", Offset = "0x12AC3A4", VA = "0x12AC3A4")]
		private void Update()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x12AC3A8", Offset = "0x12AC3A8", VA = "0x12AC3A8")]
		private void CheckFall()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x12AC410", Offset = "0x12AC410", VA = "0x12AC410")]
		public FallCheckResetPosition()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x881778", Offset = "0x881778")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881778", Offset = "0x881778")]
	public class ReturnInitPositionInfo : MonoBehaviour, IEnvPrefabCacheReciever, IEventSystemHandler
	{
		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88CA14", Offset = "0x88CA14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88CA14", Offset = "0x88CA14")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88CA14", Offset = "0x88CA14")]
		private float _returnDistanceToPlayer;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _returnPositionStartPosition;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion _returnPositionStartRotation;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x1022DA8", Offset = "0x1022DA8", VA = "0x1022DA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x1022E44", Offset = "0x1022E44", VA = "0x1022E44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x1023070", Offset = "0x1023070", VA = "0x1023070")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x10232D0", Offset = "0x10232D0", VA = "0x10232D0", Slot = "4")]
		public void OnPrefabPrepareCache()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x10232D4", Offset = "0x10232D4", VA = "0x10232D4", Slot = "5")]
		public void OnPrefabUseCache()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x1022DAC", Offset = "0x1022DAC", VA = "0x1022DAC")]
		private void SetupInitPositionReturn()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x102332C", Offset = "0x102332C", VA = "0x102332C")]
		public void CheckReturnPosition(Vector3 playerPosition)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x10233C4", Offset = "0x10233C4", VA = "0x10233C4")]
		private void SetReturnPosition()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x10234BC", Offset = "0x10234BC", VA = "0x10234BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8953D0", Offset = "0x8953D0")]
		private void DebugLog(string text)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x1023520", Offset = "0x1023520", VA = "0x1023520")]
		public ReturnInitPositionInfo()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class ReturnInitPositionManager : StaticAccessBehaviour<ReturnInitPositionManager>
	{
		[Token(Token = "0x20003DC")]
		public class ReturnInfo
		{
			[Token(Token = "0x4001413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReturnInitPositionInfo PositionInfo;

			[Token(Token = "0x600122E")]
			[Address(RVA = "0xF8D77C", Offset = "0xF8D77C", VA = "0xF8D77C")]
			public ReturnInfo(ReturnInitPositionInfo info)
			{
			}
		}

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<ReturnInfo> _infoList;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<ReturnInfo> _removeList;

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x1023530", Offset = "0x1023530", VA = "0x1023530")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x1022E9C", Offset = "0x1022E9C", VA = "0x1022E9C")]
		public void AddReturnInfo(ReturnInitPositionInfo info)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x1023130", Offset = "0x1023130", VA = "0x1023130")]
		public void RemoveReturnInfo(ReturnInitPositionInfo argInfo)
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x1023640", Offset = "0x1023640", VA = "0x1023640")]
		private void OnTeleported(Transform argTransform, Vector3 argPos, Quaternion argRot)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x1023664", Offset = "0x1023664", VA = "0x1023664")]
		private void ApplyRemove()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x10237D8", Offset = "0x10237D8", VA = "0x10237D8")]
		private void CheckReturnPosition()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x1023964", Offset = "0x1023964", VA = "0x1023964")]
		public ReturnInitPositionManager()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class CategoryCullingController : StaticAccessBehaviour<CategoryCullingController>, IEnvPrefabLoadedReciever, IEventSystemHandler
	{
		[Token(Token = "0x20003DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8817E8", Offset = "0x8817E8")]
		private sealed class <CoroutineFirstSetupCulling>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170001A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001239")]
				[Address(RVA = "0xC04C08", Offset = "0xC04C08", VA = "0xC04C08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600123B")]
				[Address(RVA = "0xC04C50", Offset = "0xC04C50", VA = "0xC04C50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001236")]
			[Address(RVA = "0xC04AD0", Offset = "0xC04AD0", VA = "0xC04AD0")]
			[DebuggerHidden]
			public <CoroutineFirstSetupCulling>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001237")]
			[Address(RVA = "0xC04AFC", Offset = "0xC04AFC", VA = "0xC04AFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001238")]
			[Address(RVA = "0xC04B00", Offset = "0xC04B00", VA = "0xC04B00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600123A")]
			[Address(RVA = "0xC04C10", Offset = "0xC04C10", VA = "0xC04C10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x12749BC", Offset = "0x12749BC", VA = "0x12749BC", Slot = "6")]
		public void OnPrefabLoaded()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x1274B48", Offset = "0x1274B48", VA = "0x1274B48")]
		public void DoTeleported(Vector3 argPos)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1274B4C", Offset = "0x1274B4C", VA = "0x1274B4C")]
		public void DoCulling()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1274BBC", Offset = "0x1274BBC", VA = "0x1274BBC")]
		public void ResetCulling()
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1274A6C", Offset = "0x1274A6C", VA = "0x1274A6C")]
		private void InnerUpdateCategoryCulling(Vector3 argPlayerPos)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1274AEC", Offset = "0x1274AEC", VA = "0x1274AEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x895408", Offset = "0x895408")]
		private IEnumerator CoroutineFirstSetupCulling()
		{
			return null;
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x1274E40", Offset = "0x1274E40", VA = "0x1274E40")]
		public CategoryCullingController()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x8817F8", Offset = "0x8817F8")]
	public class CategoryCullingInfo : MonoBehaviour, IEnvPrefabCacheReciever, IEventSystemHandler, IGrabbableMessageReciever
	{
		[Token(Token = "0x20003E0")]
		public enum Type
		{
			[Token(Token = "0x4001424")]
			Mesh,
			[Token(Token = "0x4001425")]
			Skin
		}

		[Token(Token = "0x20003E1")]
		public enum SizeCategory
		{
			[Token(Token = "0x4001427")]
			Huge,
			[Token(Token = "0x4001428")]
			Large,
			[Token(Token = "0x4001429")]
			Medium,
			[Token(Token = "0x400142A")]
			Small
		}

		[Token(Token = "0x20003E2")]
		public enum UnitCategory
		{
			[Token(Token = "0x400142C")]
			Static,
			[Token(Token = "0x400142D")]
			Animal,
			[Token(Token = "0x400142E")]
			Visitor,
			[Token(Token = "0x400142F")]
			ToiletDoor,
			[Token(Token = "0x4001430")]
			EventNpc,
			[Token(Token = "0x4001431")]
			Mob,
			[Token(Token = "0x4001432")]
			Outsize,
			[Token(Token = "0x4001433")]
			OutsizeSplash,
			[Token(Token = "0x4001434")]
			Landmark,
			[Token(Token = "0x4001435")]
			Butterfly,
			[Token(Token = "0x4001436")]
			Statue,
			[Token(Token = "0x4001437")]
			Food
		}

		[Token(Token = "0x20003E3")]
		public class DebugInfo
		{
			[Token(Token = "0x20003E4")]
			public enum State
			{
				[Token(Token = "0x400143B")]
				Show,
				[Token(Token = "0x400143C")]
				Hide,
				[Token(Token = "0x400143D")]
				NotManage
			}

			[Token(Token = "0x4001438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public State StateType;

			[Token(Token = "0x4001439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float Distance;

			[Token(Token = "0x6001259")]
			[Address(RVA = "0xC04C58", Offset = "0xC04C58", VA = "0xC04C58")]
			public DebugInfo()
			{
			}
		}

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x88CAA0", Offset = "0x88CAA0")]
		private Type _meshType;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x88CAD8", Offset = "0x88CAD8")]
		[SerializeField]
		private SizeCategory _categorySize;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x88CB10", Offset = "0x88CB10")]
		[SerializeField]
		private Vector3 _boundSize;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "NonEditableAttribute", RVA = "0x88CB48", Offset = "0x88CB48")]
		[SerializeField]
		private Vector3 _boundCenter;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88CB80", Offset = "0x88CB80")]
		[SerializeField]
		private UnitCategory _unitCategory;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CBCC", Offset = "0x88CBCC")]
		private Vector3 <WorldPosition>k__BackingField;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CBDC", Offset = "0x88CBDC")]
		private readonly DebugInfo <DebugInfoForEditor>k__BackingField;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isGrabbed;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _debugShowLimitRadius;

		[Token(Token = "0x400141F")]
		public const float VolumeOutsize = 100000f;

		[Token(Token = "0x4001420")]
		public const float VolumeLarge = 1000f;

		[Token(Token = "0x4001421")]
		public const float VolumeMedium = 10f;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private readonly Color DebugSelectedColor;

		[Token(Token = "0x170001A8")]
		public Type MeshType
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0x1274E8C", Offset = "0x1274E8C", VA = "0x1274E8C")]
			get
			{
				return default(Type);
			}
		}

		[Token(Token = "0x170001A9")]
		public SizeCategory CategorySize
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0x1274E94", Offset = "0x1274E94", VA = "0x1274E94")]
			get
			{
				return default(SizeCategory);
			}
		}

		[Token(Token = "0x170001AA")]
		public Vector3 BoundSize
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0x1274E9C", Offset = "0x1274E9C", VA = "0x1274E9C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001AB")]
		public Vector3 BoundCenter
		{
			[Token(Token = "0x600123F")]
			[Address(RVA = "0x1274EA8", Offset = "0x1274EA8", VA = "0x1274EA8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001AC")]
		public UnitCategory CategoryUnit
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0x1274EB4", Offset = "0x1274EB4", VA = "0x1274EB4")]
			get
			{
				return default(UnitCategory);
			}
		}

		[Token(Token = "0x170001AD")]
		public Vector3 WorldPosition
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0x1274EBC", Offset = "0x1274EBC", VA = "0x1274EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8954B8", Offset = "0x8954B8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001242")]
			[Address(RVA = "0x1274EC8", Offset = "0x1274EC8", VA = "0x1274EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8954C8", Offset = "0x8954C8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public DebugInfo DebugInfoForEditor
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0x1274ED4", Offset = "0x1274ED4", VA = "0x1274ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8954D8", Offset = "0x8954D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x1274EDC", Offset = "0x1274EDC", VA = "0x1274EDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1274FA0", Offset = "0x1274FA0", VA = "0x1274FA0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1275064", Offset = "0x1275064", VA = "0x1275064", Slot = "4")]
		public void OnPrefabPrepareCache()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x1275068", Offset = "0x1275068", VA = "0x1275068", Slot = "5")]
		public void OnPrefabUseCache()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x127506C", Offset = "0x127506C", VA = "0x127506C", Slot = "6")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x1275078", Offset = "0x1275078", VA = "0x1275078", Slot = "7")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x1275080", Offset = "0x1275080", VA = "0x1275080")]
		private void CalcCategorySize()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x12750F8", Offset = "0x12750F8", VA = "0x12750F8")]
		public bool IsDynamicMovePosition()
		{
			return default(bool);
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x1275108", Offset = "0x1275108", VA = "0x1275108")]
		public bool IsCullingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x1275118", Offset = "0x1275118", VA = "0x1275118")]
		public void CalcWorldPosition()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x1274EE0", Offset = "0x1274EE0", VA = "0x1274EE0")]
		private static void AddInfo(CategoryCullingInfo info)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1274FA4", Offset = "0x1274FA4", VA = "0x1274FA4")]
		private static void RemoveInfo(CategoryCullingInfo info)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x1275600", Offset = "0x1275600", VA = "0x1275600")]
		private void CalcUnitCategory()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x12758B8", Offset = "0x12758B8", VA = "0x12758B8")]
		public float GetShowLimitDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x1275A7C", Offset = "0x1275A7C", VA = "0x1275A7C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8954E8", Offset = "0x8954E8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x1275A80", Offset = "0x1275A80", VA = "0x1275A80")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895520", Offset = "0x895520")]
		private void DrawGizmosSphere()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x1275AFC", Offset = "0x1275AFC", VA = "0x1275AFC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895558", Offset = "0x895558")]
		private void SetupMeshForEditor(MeshFilter meshFilter)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x1275B84", Offset = "0x1275B84", VA = "0x1275B84")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895590", Offset = "0x895590")]
		private void SetupSkinForEditor()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x1275CB0", Offset = "0x1275CB0", VA = "0x1275CB0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8955C8", Offset = "0x8955C8")]
		public void SetupForEditor()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x1275E14", Offset = "0x1275E14", VA = "0x1275E14")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895600", Offset = "0x895600")]
		public void SetUnitCategoryForEditor(UnitCategory unitCategory)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x1275E1C", Offset = "0x1275E1C", VA = "0x1275E1C")]
		public CategoryCullingInfo()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class CategoryCullingManager : StaticAccessBehaviour<CategoryCullingManager>
	{
		[Token(Token = "0x20003E6")]
		private class TypeInfo
		{
			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly List<CalcBuff> RegisterList;

			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly List<CalcBuff> ActiveHierarchyList;

			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int MaxShowCount;

			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int CurrentShowCount;

			[Token(Token = "0x600126D")]
			[Address(RVA = "0xC04D80", Offset = "0xC04D80", VA = "0xC04D80")]
			public void SetupLimit(int maxShowCount)
			{
			}

			[Token(Token = "0x600126E")]
			[Address(RVA = "0xC04D88", Offset = "0xC04D88", VA = "0xC04D88")]
			public void MakeListActiveHierarchy()
			{
			}

			[Token(Token = "0x600126F")]
			[Address(RVA = "0xC04FDC", Offset = "0xC04FDC", VA = "0xC04FDC")]
			public TypeInfo()
			{
			}
		}

		[Token(Token = "0x20003E7")]
		public class CalcBuff
		{
			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CategoryCullingInfo CullingInfo;

			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float PlayerDistanceSqr;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool ResultActive;

			[Token(Token = "0x170001AF")]
			public Vector3 WorldPosition
			{
				[Token(Token = "0x6001270")]
				[Address(RVA = "0xC04C60", Offset = "0xC04C60", VA = "0xC04C60")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6001271")]
			[Address(RVA = "0xC04C80", Offset = "0xC04C80", VA = "0xC04C80")]
			public void Setup(CategoryCullingInfo info)
			{
			}

			[Token(Token = "0x6001272")]
			[Address(RVA = "0xC04CA0", Offset = "0xC04CA0", VA = "0xC04CA0")]
			public void CalcWorldPosition()
			{
			}

			[Token(Token = "0x6001273")]
			[Address(RVA = "0xC04CBC", Offset = "0xC04CBC", VA = "0xC04CBC")]
			public bool IsUpdateWorldPosition()
			{
				return default(bool);
			}

			[Token(Token = "0x6001274")]
			[Address(RVA = "0xC04CD8", Offset = "0xC04CD8", VA = "0xC04CD8")]
			public CalcBuff()
			{
			}
		}

		[Token(Token = "0x20003E8")]
		public enum Type
		{
			[Token(Token = "0x4001453")]
			None,
			[Token(Token = "0x4001454")]
			Visitor,
			[Token(Token = "0x4001455")]
			Character,
			[Token(Token = "0x4001456")]
			Landmark,
			[Token(Token = "0x4001457")]
			Large,
			[Token(Token = "0x4001458")]
			Medium,
			[Token(Token = "0x4001459")]
			Small
		}

		[Token(Token = "0x20003E9")]
		public class DebugAll
		{
			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DebugTypeInfo[] InfoArray;

			[Token(Token = "0x6001275")]
			[Address(RVA = "0xC04CE0", Offset = "0xC04CE0", VA = "0xC04CE0")]
			public DebugTypeInfo GetInfoByType(Type type)
			{
				return null;
			}

			[Token(Token = "0x6001276")]
			[Address(RVA = "0xC04D1C", Offset = "0xC04D1C", VA = "0xC04D1C")]
			public DebugAll()
			{
			}
		}

		[Token(Token = "0x20003EA")]
		public class DebugTypeInfo
		{
			[Token(Token = "0x400145B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int MaxShowCount;

			[Token(Token = "0x400145C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int CurrentShowCount;

			[Token(Token = "0x400145D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int TotalCount;

			[Token(Token = "0x400145E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<CalcBuff> ActiveHierarchyList;

			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<CalcBuff> RegisterList;

			[Token(Token = "0x6001277")]
			[Address(RVA = "0xC04D78", Offset = "0xC04D78", VA = "0xC04D78")]
			public DebugTypeInfo()
			{
			}
		}

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly TypeInfo[] _typeList;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _playerPosition;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<CalcBuff> _removeList;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Type[] _orderArray;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _initialize;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DebugAll _debugAll;

		[Token(Token = "0x4001444")]
		private const int TypeMax = 7;

		[Token(Token = "0x4001445")]
		private const int VisitorShowMax = 10;

		[Token(Token = "0x4001446")]
		private const int CharacterShowMax = 8;

		[Token(Token = "0x4001447")]
		private const int LandmarkShowMax = 4;

		[Token(Token = "0x4001448")]
		private const int LargeShowMax = 35;

		[Token(Token = "0x4001449")]
		private const int MediumShowMax = 25;

		[Token(Token = "0x400144A")]
		private const int SmallShowMax = 20;

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x1274A68", Offset = "0x1274A68", VA = "0x1274A68")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x1275EC4", Offset = "0x1275EC4", VA = "0x1275EC4")]
		private void InnerInitialize()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x1275170", Offset = "0x1275170", VA = "0x1275170")]
		public void AddInfo(CategoryCullingInfo info)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x12753B8", Offset = "0x12753B8", VA = "0x12753B8")]
		public void RemoveInfo(CategoryCullingInfo info)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x1274C0C", Offset = "0x1274C0C", VA = "0x1274C0C")]
		public void ResetCulling()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x12761FC", Offset = "0x12761FC", VA = "0x12761FC")]
		public void SetPlayerPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x1274E14", Offset = "0x1274E14", VA = "0x1274E14")]
		public void DoCalcAndApplyAll()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x12766E0", Offset = "0x12766E0", VA = "0x12766E0")]
		public void DoCalcAndApplyForVisitor()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x12763F0", Offset = "0x12763F0", VA = "0x12763F0")]
		private void CalcDistance()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x1276708", Offset = "0x1276708", VA = "0x1276708")]
		private void CalcNearDistanceObject(Type typeOrder)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x1276B04", Offset = "0x1276B04", VA = "0x1276B04")]
		private int AscendingSort(CalcBuff a, CalcBuff b)
		{
			return default(int);
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x1276478", Offset = "0x1276478", VA = "0x1276478")]
		private void ResultApply()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x1276208", Offset = "0x1276208", VA = "0x1276208")]
		private void ApplyRemove()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x127602C", Offset = "0x127602C", VA = "0x127602C")]
		private TypeInfo GeTypeList(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x1276068", Offset = "0x1276068", VA = "0x1276068")]
		private Type GetTypeFromCategory(CategoryCullingInfo.UnitCategory unitCategory, CategoryCullingInfo.SizeCategory sizeCategory)
		{
			return default(Type);
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x1276B44", Offset = "0x1276B44", VA = "0x1276B44")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895638", Offset = "0x895638")]
		public void DebugAllObjectShow()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x1276D8C", Offset = "0x1276D8C", VA = "0x1276D8C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895670", Offset = "0x895670")]
		private void DebugApplyForCullingInfo()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x1276FAC", Offset = "0x1276FAC", VA = "0x1276FAC")]
		public DebugAll DebugMakeDebugInfo()
		{
			return null;
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x1276FB4", Offset = "0x1276FB4", VA = "0x1276FB4")]
		public CategoryCullingManager()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881808", Offset = "0x881808")]
	public class CircleShadowFixed : MonoBehaviour, IGrabbableMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x4001460")]
		public const float DefaultRadius = 1f;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88CBEC", Offset = "0x88CBEC")]
		[SerializeField]
		private float _circleShadowRadius;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88CC38", Offset = "0x88CC38")]
		[SerializeField]
		private float _circleShadowAlpha;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _initLocalPosition;

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x1278B68", Offset = "0x1278B68", VA = "0x1278B68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x1278C6C", Offset = "0x1278C6C", VA = "0x1278C6C", Slot = "4")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x1278D24", Offset = "0x1278D24", VA = "0x1278D24", Slot = "5")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x1278DF0", Offset = "0x1278DF0", VA = "0x1278DF0")]
		public void SetShadowRadius(float radius)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x1278BB0", Offset = "0x1278BB0", VA = "0x1278BB0")]
		public void SetShadowAlpha(float alpha)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x1278E44", Offset = "0x1278E44", VA = "0x1278E44")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8956A8", Offset = "0x8956A8")]
		public void SetShadowAlphaForEditor(float alpha)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x1278E4C", Offset = "0x1278E4C", VA = "0x1278E4C")]
		public CircleShadowFixed()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881818", Offset = "0x881818")]
	public class DropShadowManager : StaticAccessBehaviour<DropShadowManager>
	{
		[Token(Token = "0x20003ED")]
		public class ShadowInfo
		{
			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DropShadowPlane DropShadowPlane;

			[Token(Token = "0x6001285")]
			[Address(RVA = "0xC06BF0", Offset = "0xC06BF0", VA = "0xC06BF0")]
			public ShadowInfo(DropShadowPlane shadow)
			{
			}
		}

		[Token(Token = "0x4001464")]
		private const int MaxCalcCount = 3;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<ShadowInfo> _dropShadowList;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _currentCalcIndex;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<ShadowInfo> _removeList;

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x1230068", Offset = "0x1230068", VA = "0x1230068")]
		public void DoUpdate()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x1230170", Offset = "0x1230170", VA = "0x1230170")]
		public void AddShadow(DropShadowPlane shadow)
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x1230204", Offset = "0x1230204", VA = "0x1230204")]
		public void RemoveShadow(DropShadowPlane shadow)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x123006C", Offset = "0x123006C", VA = "0x123006C")]
		private void DoUpdateShadow()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x12303A4", Offset = "0x12303A4", VA = "0x12303A4")]
		private void ApplyRemove()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x1230544", Offset = "0x1230544", VA = "0x1230544")]
		public DropShadowManager()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881828", Offset = "0x881828")]
	public class DropShadowPlane : MonoBehaviour, IGrabbableMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88CC84", Offset = "0x88CC84")]
		[SerializeField]
		private float _circleShadowRadius;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88CCD0", Offset = "0x88CCD0")]
		private float _circleShadowAlpha;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88CD1C", Offset = "0x88CD1C")]
		[SerializeField]
		private bool _adjustHeight;

		[Token(Token = "0x400146C")]
		private const float StartHeightBias = 0.1f;

		[Token(Token = "0x400146D")]
		private const float HitHeightBias = 0.02f;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _hitLayerMask;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _initLocalPosition;

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x12305F0", Offset = "0x12305F0", VA = "0x12305F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x1230808", Offset = "0x1230808", VA = "0x1230808")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x12308C8", Offset = "0x12308C8", VA = "0x12308C8", Slot = "4")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x1230980", Offset = "0x1230980", VA = "0x1230980", Slot = "5")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x1230A4C", Offset = "0x1230A4C", VA = "0x1230A4C")]
		public void SetShadowRadius(float radius)
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x123074C", Offset = "0x123074C", VA = "0x123074C")]
		public void SetShadowAlpha(float alpha)
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x1230534", Offset = "0x1230534", VA = "0x1230534")]
		public void RunUpdate()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x1230AA0", Offset = "0x1230AA0", VA = "0x1230AA0")]
		private void CalcPos()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x1230BD4", Offset = "0x1230BD4", VA = "0x1230BD4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8956E0", Offset = "0x8956E0")]
		public void SetShadowAlphaForEditor(float alpha)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x1230BDC", Offset = "0x1230BDC", VA = "0x1230BDC")]
		public DropShadowPlane()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public interface IGamePauseReciever : IEventSystemHandler
	{
		[Token(Token = "0x6001290")]
		void OnGamePause(GamePauseReason reason);

		[Token(Token = "0x6001291")]
		void OnGameResume();
	}
	[Token(Token = "0x20003F0")]
	public enum GamePauseReason
	{
		[Token(Token = "0x4001471")]
		VrFocusLost,
		[Token(Token = "0x4001472")]
		HMDUnmounted,
		[Token(Token = "0x4001473")]
		ApplicationPause,
		[Token(Token = "0x4001474")]
		ApplicationFocus,
		[Token(Token = "0x4001475")]
		InputFocusLost
	}
	[Token(Token = "0x20003F1")]
	public static class GamePauseMessageUtility
	{
		[Token(Token = "0x6001292")]
		[Address(RVA = "0x12B47FC", Offset = "0x12B47FC", VA = "0x12B47FC")]
		public static void SendAllRootGamePause(GamePauseReason reason)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x12B4A54", Offset = "0x12B4A54", VA = "0x12B4A54")]
		public static void SendAllRootGameResume()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x12B4924", Offset = "0x12B4924", VA = "0x12B4924")]
		public static void SendGamePause(GameObject targetGameObject, GamePauseReason reason)
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x12B4B6C", Offset = "0x12B4B6C", VA = "0x12B4B6C")]
		public static void SendGameResume(GameObject targetGameObject)
		{
		}
	}
	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881838", Offset = "0x881838")]
	public class PuzzlePlayerGamePause : MonoBehaviour, IGamePauseReciever, IEventSystemHandler
	{
		[Token(Token = "0x6001296")]
		[Address(RVA = "0x101E0B4", Offset = "0x101E0B4", VA = "0x101E0B4", Slot = "4")]
		public void OnGamePause(GamePauseReason reason)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x101E11C", Offset = "0x101E11C", VA = "0x101E11C", Slot = "5")]
		public void OnGameResume()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x101E184", Offset = "0x101E184", VA = "0x101E184")]
		public PuzzlePlayerGamePause()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881848", Offset = "0x881848")]
	public class ZooPlayerGamePause : MonoBehaviour, IGamePauseReciever, IEventSystemHandler
	{
		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _storeIsKinematic;

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x11734C0", Offset = "0x11734C0", VA = "0x11734C0", Slot = "4")]
		public void OnGamePause(GamePauseReason reason)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x11735D8", Offset = "0x11735D8", VA = "0x11735D8", Slot = "5")]
		public void OnGameResume()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x11736B4", Offset = "0x11736B4", VA = "0x11736B4")]
		public ZooPlayerGamePause()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881858", Offset = "0x881858")]
	public class HandGrabbedHideLaserPointer : MonoBehaviour, IGrabbableMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HandLR _handLr;

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x12B7638", Offset = "0x12B7638", VA = "0x12B7638", Slot = "4")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x12B773C", Offset = "0x12B773C", VA = "0x12B773C", Slot = "5")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x12B7800", Offset = "0x12B7800", VA = "0x12B7800")]
		public HandGrabbedHideLaserPointer()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881868", Offset = "0x881868")]
	public class HandReleaseOnGrand : MonoBehaviour, IGrabbableMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider[] _myColliders;

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x12B7828", Offset = "0x12B7828", VA = "0x12B7828")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x12B788C", Offset = "0x12B788C", VA = "0x12B788C", Slot = "4")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x12B7890", Offset = "0x12B7890", VA = "0x12B7890", Slot = "5")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x12B7894", Offset = "0x12B7894", VA = "0x12B7894")]
		private void CalcOnGrand()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x12B7C50", Offset = "0x12B7C50", VA = "0x12B7C50")]
		private Vector3? GetColliderCenter(Collider argCollider, out float radius)
		{
			return null;
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x12B7F3C", Offset = "0x12B7F3C", VA = "0x12B7F3C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895718", Offset = "0x895718")]
		private void DebugLog(string text)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x12B7FA0", Offset = "0x12B7FA0", VA = "0x12B7FA0")]
		public HandReleaseOnGrand()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public interface IGrabbableMessageReciever : IEventSystemHandler
	{
		[Token(Token = "0x60012A6")]
		void OnGrabBegin(OVRGrabber hand, Collider grabPoint);

		[Token(Token = "0x60012A7")]
		void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity);
	}
	[Token(Token = "0x20003F7")]
	public interface IGrabAfterMessageReciever : IEventSystemHandler
	{
		[Token(Token = "0x60012A8")]
		void OnGrabBeginAfter(OVRGrabber hand, Collider grabPoint);
	}
	[Token(Token = "0x20003F8")]
	public interface IGrabberMessageReciever : IEventSystemHandler
	{
		[Token(Token = "0x60012A9")]
		void OnGrabberBegin();

		[Token(Token = "0x60012AA")]
		void OnGrabberEnd();
	}
	[Token(Token = "0x20003F9")]
	public static class GrabbableMessageUtility
	{
		[Token(Token = "0x20003FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881878", Offset = "0x881878")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRGrabber hand;

			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Collider grabPoint;

			[Token(Token = "0x400147B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExecuteEvents.EventFunction<IGrabbableMessageReciever> <>9__1;

			[Token(Token = "0x60012B0")]
			[Address(RVA = "0xC09FA0", Offset = "0xC09FA0", VA = "0xC09FA0")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60012B1")]
			[Address(RVA = "0xC09FA8", Offset = "0xC09FA8", VA = "0xC09FA8")]
			internal void <SendGrabBegin>b__0(IGrabbableMessageReciever recieveTarget, BaseEventData y)
			{
			}

			[Token(Token = "0x60012B2")]
			[Address(RVA = "0xC0A068", Offset = "0xC0A068", VA = "0xC0A068")]
			internal void <SendGrabBegin>b__1(IGrabbableMessageReciever recieveTarget, BaseEventData y)
			{
			}
		}

		[Token(Token = "0x20003FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881888", Offset = "0x881888")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400147C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 linearVelocity;

			[Token(Token = "0x400147D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 angularVelocity;

			[Token(Token = "0x400147E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ExecuteEvents.EventFunction<IGrabbableMessageReciever> <>9__1;

			[Token(Token = "0x60012B3")]
			[Address(RVA = "0xC0A128", Offset = "0xC0A128", VA = "0xC0A128")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60012B4")]
			[Address(RVA = "0xC0A130", Offset = "0xC0A130", VA = "0xC0A130")]
			internal void <SendGrabEnd>b__0(IGrabbableMessageReciever recieveTarget, BaseEventData y)
			{
			}

			[Token(Token = "0x60012B5")]
			[Address(RVA = "0xC0A224", Offset = "0xC0A224", VA = "0xC0A224")]
			internal void <SendGrabEnd>b__1(IGrabbableMessageReciever recieveTarget, BaseEventData y)
			{
			}
		}

		[Token(Token = "0x20003FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881898", Offset = "0x881898")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400147F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRGrabber hand;

			[Token(Token = "0x4001480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Collider grabPoint;

			[Token(Token = "0x4001481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExecuteEvents.EventFunction<IGrabAfterMessageReciever> <>9__1;

			[Token(Token = "0x60012B6")]
			[Address(RVA = "0xC0A318", Offset = "0xC0A318", VA = "0xC0A318")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60012B7")]
			[Address(RVA = "0xC0A320", Offset = "0xC0A320", VA = "0xC0A320")]
			internal void <SendGrabBeginAfter>b__0(IGrabAfterMessageReciever recieveTarget, BaseEventData y)
			{
			}

			[Token(Token = "0x60012B8")]
			[Address(RVA = "0xC0A3E0", Offset = "0xC0A3E0", VA = "0xC0A3E0")]
			internal void <SendGrabBeginAfter>b__1(IGrabAfterMessageReciever recieveTarget, BaseEventData y)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8818A8", Offset = "0x8818A8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExecuteEvents.EventFunction<IGrabberMessageReciever> <>9__3_0;

			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExecuteEvents.EventFunction<IGrabberMessageReciever> <>9__4_0;

			[Token(Token = "0x60012BA")]
			[Address(RVA = "0xC09E44", Offset = "0xC09E44", VA = "0xC09E44")]
			public <>c()
			{
			}

			[Token(Token = "0x60012BB")]
			[Address(RVA = "0xC09E4C", Offset = "0xC09E4C", VA = "0xC09E4C")]
			internal void <SendGrabberBeginToTarget>b__3_0(IGrabberMessageReciever recieveTarget, BaseEventData y)
			{
			}

			[Token(Token = "0x60012BC")]
			[Address(RVA = "0xC09EF4", Offset = "0xC09EF4", VA = "0xC09EF4")]
			internal void <SendGrabberEndToTarget>b__4_0(IGrabberMessageReciever recieveTarget, BaseEventData y)
			{
			}
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x12B5670", Offset = "0x12B5670", VA = "0x12B5670")]
		public static void SendGrabBegin(GameObject targetGameObject, OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x12B58A0", Offset = "0x12B58A0", VA = "0x12B58A0")]
		public static void SendGrabEnd(GameObject targetGameObject, Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x12B5B00", Offset = "0x12B5B00", VA = "0x12B5B00")]
		public static void SendGrabBeginAfter(GameObject targetGameObject, OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x12B5D30", Offset = "0x12B5D30", VA = "0x12B5D30")]
		public static void SendGrabberBeginToTarget(GameObject targetGameObject)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x12B5E78", Offset = "0x12B5E78", VA = "0x12B5E78")]
		public static void SendGrabberEndToTarget(GameObject targetGameObject)
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class InputHapticsController : MonoBehaviour
	{
		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ZVRLaserPointer _laserPointerLeft;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ZVRLaserPointer _laserPointerRight;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _hitObjectLeft;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _hitObjectRight;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _enableCheckPointerSelect;

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x178EB94", Offset = "0x178EB94", VA = "0x178EB94")]
		private void Start()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x178EC5C", Offset = "0x178EC5C", VA = "0x178EC5C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x178EDF8", Offset = "0x178EDF8", VA = "0x178EDF8")]
		public void NotifyGrabberBegin(HandLR handLr)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x178EE94", Offset = "0x178EE94", VA = "0x178EE94")]
		public void NotifyPointerOver(HandLR handLr)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x178EF80", Offset = "0x178EF80", VA = "0x178EF80")]
		public void SetEnableCheckPointerSelect(bool flag)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x178EB98", Offset = "0x178EB98", VA = "0x178EB98")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x178EC6C", Offset = "0x178EC6C", VA = "0x178EC6C")]
		private void CheckPointerSelectObject()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x178EF8C", Offset = "0x178EF8C", VA = "0x178EF8C")]
		public InputHapticsController()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8818B8", Offset = "0x8818B8")]
	public class InputHapticsNotify : MonoBehaviour, IGrabberMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputHapticsController _inputHapticsController;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HandLR _handLr;

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x178EF9C", Offset = "0x178EF9C", VA = "0x178EF9C")]
		private void Start()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x178F074", Offset = "0x178F074", VA = "0x178F074", Slot = "4")]
		public void OnGrabberBegin()
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x178F0AC", Offset = "0x178F0AC", VA = "0x178F0AC", Slot = "5")]
		public void OnGrabberEnd()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x178EFA0", Offset = "0x178EFA0", VA = "0x178EFA0")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x178F0B0", Offset = "0x178F0B0", VA = "0x178F0B0")]
		public InputHapticsNotify()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public static class InputUtility
	{
		[Token(Token = "0x2000401")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881918", Offset = "0x881918")]
		private sealed class <CoHapticsHover>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandLR handLr;

			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private OVRInput.Controller <touchLr>5__2;

			[Token(Token = "0x170001B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012E7")]
				[Address(RVA = "0xC0B6E8", Offset = "0xC0B6E8", VA = "0xC0B6E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012E9")]
				[Address(RVA = "0xC0B730", Offset = "0xC0B730", VA = "0xC0B730", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012E4")]
			[Address(RVA = "0xC0B5BC", Offset = "0xC0B5BC", VA = "0xC0B5BC")]
			[DebuggerHidden]
			public <CoHapticsHover>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60012E5")]
			[Address(RVA = "0xC0B5E8", Offset = "0xC0B5E8", VA = "0xC0B5E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012E6")]
			[Address(RVA = "0xC0B5EC", Offset = "0xC0B5EC", VA = "0xC0B5EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012E8")]
			[Address(RVA = "0xC0B6F0", Offset = "0xC0B6F0", VA = "0xC0B6F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881928", Offset = "0x881928")]
		private sealed class <CoHapticsGrab>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandLR handLr;

			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private OVRInput.Controller <touchLr>5__2;

			[Token(Token = "0x170001B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012ED")]
				[Address(RVA = "0xC0B56C", Offset = "0xC0B56C", VA = "0xC0B56C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012EF")]
				[Address(RVA = "0xC0B5B4", Offset = "0xC0B5B4", VA = "0xC0B5B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012EA")]
			[Address(RVA = "0xC0B410", Offset = "0xC0B410", VA = "0xC0B410")]
			[DebuggerHidden]
			public <CoHapticsGrab>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60012EB")]
			[Address(RVA = "0xC0B43C", Offset = "0xC0B43C", VA = "0xC0B43C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012EC")]
			[Address(RVA = "0xC0B440", Offset = "0xC0B440", VA = "0xC0B440", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012EE")]
			[Address(RVA = "0xC0B574", Offset = "0xC0B574", VA = "0xC0B574", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x178F3F4", Offset = "0x178F3F4", VA = "0x178F3F4")]
		public static bool IsAnyButtonOnLeftHand()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x178F518", Offset = "0x178F518", VA = "0x178F518")]
		public static bool IsAnyButtonOnRightHand()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x178F63C", Offset = "0x178F63C", VA = "0x178F63C")]
		public static bool IsShowMap(bool isTeleportLeft)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x178F6B0", Offset = "0x178F6B0", VA = "0x178F6B0")]
		public static bool IsOpenClosePuzzleSelect(bool isTeleportLeft, bool isMenu = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x178F774", Offset = "0x178F774", VA = "0x178F774")]
		public static bool IsFireHoseShooting(bool isTeleportLeft)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x178F7EC", Offset = "0x178F7EC", VA = "0x178F7EC")]
		public static bool IsIndexTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x178F88C", Offset = "0x178F88C", VA = "0x178F88C")]
		public static Vector2 TeleportInputLeftStick()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x178F8F0", Offset = "0x178F8F0", VA = "0x178F8F0")]
		public static bool TeleportInputLeftTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x178F954", Offset = "0x178F954", VA = "0x178F954")]
		public static Vector2 TeleportInputRightStick()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x178F9B8", Offset = "0x178F9B8", VA = "0x178F9B8")]
		public static bool TeleportInputRightTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x178FA1C", Offset = "0x178FA1C", VA = "0x178FA1C")]
		public static Vector2 PuzzlePanelDistanceStick()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x178FAEC", Offset = "0x178FAEC", VA = "0x178FAEC")]
		public static bool DebugIsMenuOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x178FAF4", Offset = "0x178FAF4", VA = "0x178FAF4")]
		public static bool DebugTeleportMakerStart()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x178FAFC", Offset = "0x178FAFC", VA = "0x178FAFC")]
		public static bool DebugTeleportMakerFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x178FB04", Offset = "0x178FB04", VA = "0x178FB04")]
		public static bool DebugLaserPointerClickOn()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x178FB0C", Offset = "0x178FB0C", VA = "0x178FB0C")]
		public static bool DebugLaserPointerClickOff()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x178EF14", Offset = "0x178EF14", VA = "0x178EF14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x895750", Offset = "0x895750")]
		public static IEnumerator CoHapticsHover(HandLR handLr)
		{
			return null;
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x178EE28", Offset = "0x178EE28", VA = "0x178EE28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8957B0", Offset = "0x8957B0")]
		public static IEnumerator CoHapticsGrab(HandLR handLr)
		{
			return null;
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x178FB14", Offset = "0x178FB14", VA = "0x178FB14")]
		public static void HapticsGrabFromPointer(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x178FC00", Offset = "0x178FC00", VA = "0x178FC00")]
		public static void HapticsGrabFromHand(HandLR handLr)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x178FCC8", Offset = "0x178FCC8", VA = "0x178FCC8")]
		public static void HapticsPointerOverFromHand(HandLR handLr)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x178FD84", Offset = "0x178FD84", VA = "0x178FD84")]
		public static bool ToyBlastPuzzleIsPauseDialogOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x178FE50", Offset = "0x178FE50", VA = "0x178FE50")]
		public static bool SnapTurnLeftThumbstickLeft()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x178FEB4", Offset = "0x178FEB4", VA = "0x178FEB4")]
		public static bool SnapTurnLeftThumbstickRight()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x178FF18", Offset = "0x178FF18", VA = "0x178FF18")]
		public static bool SnapTurnRightThumbstickLeft()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x178FF7C", Offset = "0x178FF7C", VA = "0x178FF7C")]
		public static bool SnapTurnRightThumbstickRight()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000403")]
	public class InputTriggerPressing
	{
		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _indexTriggerRight;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool _isIndexTriggerRight;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _handTriggerRight;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _isHandTriggerRight;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _indexTriggerLeft;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _isIndexTriggerLeft;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _handTriggerLeft;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _isHandTriggerLeft;

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x178F0B8", Offset = "0x178F0B8", VA = "0x178F0B8")]
		public bool GetRightIndexTriggerPressing()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x178F180", Offset = "0x178F180", VA = "0x178F180")]
		public bool GetRightHandTriggerPressing()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x178F248", Offset = "0x178F248", VA = "0x178F248")]
		public bool GetLeftIndexTriggerPressing()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x178F310", Offset = "0x178F310", VA = "0x178F310")]
		public bool GetLeftHandTriggerPressing()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x178F3D8", Offset = "0x178F3D8", VA = "0x178F3D8")]
		public void ResetFlag()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x178F3EC", Offset = "0x178F3EC", VA = "0x178F3EC")]
		public InputTriggerPressing()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public static class OperationUtility
	{
		[Token(Token = "0x2000405")]
		public enum Reason
		{
			[Token(Token = "0x400149D")]
			None,
			[Token(Token = "0x400149E")]
			CutScene,
			[Token(Token = "0x400149F")]
			Fishing,
			[Token(Token = "0x40014A0")]
			PuzzleSelect,
			[Token(Token = "0x40014A1")]
			PuzzleScene,
			[Token(Token = "0x40014A2")]
			GamePause,
			[Token(Token = "0x40014A3")]
			Debug
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xF6FA2C", Offset = "0xF6FA2C", VA = "0xF6FA2C")]
		public static void SetEnableTeleport(bool enable, Reason reason)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xF6FBF8", Offset = "0xF6FBF8", VA = "0xF6FBF8")]
		public static void SetEnableDistanceGrabber(bool enable, Reason reason)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xF6FED0", Offset = "0xF6FED0", VA = "0xF6FED0")]
		public static void SetEnableThumbstickRotation(bool enable, Reason reason)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xF700B0", Offset = "0xF700B0", VA = "0xF700B0")]
		public static void SetEnableLeftRightRotationTeleport(bool enable, HandLR handLr, Reason reason)
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xF70300", Offset = "0xF70300", VA = "0xF70300")]
		public static void HideLaserPointerForSwitchScene()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xF703D0", Offset = "0xF703D0", VA = "0xF703D0")]
		public static void ShowHideLaserPointer(bool isEnable, ZVRLaserPointer.Reason reason)
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class LodAnimatorAdapter
	{
		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CD68", Offset = "0x88CD68")]
		private string <DebugAnimationName>k__BackingField;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CD78", Offset = "0x88CD78")]
		private string <DebugAnimationFloatName>k__BackingField;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CD88", Offset = "0x88CD88")]
		private float <DebugAnimationFloatValue>k__BackingField;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator _animator;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SimpleAnimLodSetting _simpleAnim;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _loopCheckEnable;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _loopCount;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action _loopFinishCallback;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IDisposable _loopCheckDisposable;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MonoBehaviour _refBehaviour;

		[Token(Token = "0x170001B4")]
		public string DebugAnimationName
		{
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0x1082390", Offset = "0x1082390", VA = "0x1082390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8958B0", Offset = "0x8958B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0x1082398", Offset = "0x1082398", VA = "0x1082398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8958C0", Offset = "0x8958C0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public string DebugAnimationFloatName
		{
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0x10823A0", Offset = "0x10823A0", VA = "0x10823A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8958D0", Offset = "0x8958D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x10823A8", Offset = "0x10823A8", VA = "0x10823A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8958E0", Offset = "0x8958E0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public float DebugAnimationFloatValue
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0x10823B0", Offset = "0x10823B0", VA = "0x10823B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8958F0", Offset = "0x8958F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001301")]
			[Address(RVA = "0x10823B8", Offset = "0x10823B8", VA = "0x10823B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895900", Offset = "0x895900")]
			private set
			{
			}
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x10823C0", Offset = "0x10823C0", VA = "0x10823C0")]
		public void Setup(MonoBehaviour behaviour)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x1082450", Offset = "0x1082450", VA = "0x1082450")]
		public void SetAnimation(string argName)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x1082538", Offset = "0x1082538", VA = "0x1082538")]
		public void SetLoopAnimation(string argName, int loopCount, Action finishCallback)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x108274C", Offset = "0x108274C", VA = "0x108274C")]
		public void ResetAnimation(string argName)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x1082850", Offset = "0x1082850", VA = "0x1082850")]
		private void RunCheckLoopCount()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x1082950", Offset = "0x1082950", VA = "0x1082950")]
		private int GetLoopCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x1082A6C", Offset = "0x1082A6C", VA = "0x1082A6C")]
		public LodAnimatorAdapter()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x1082A74", Offset = "0x1082A74", VA = "0x1082A74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895910", Offset = "0x895910")]
		private void <SetLoopAnimation>b__21_0(UniRx.Unit _)
		{
		}
	}
	[Token(Token = "0x2000407")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881938", Offset = "0x881938")]
	public class SimpleAnimLodManager : StaticAccessBehaviour<SimpleAnimLodManager>
	{
		[Token(Token = "0x2000408")]
		public class LodInfo
		{
			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SimpleAnimLodSetting AnimLodSetting;

			[Token(Token = "0x6001313")]
			[Address(RVA = "0xF8F654", Offset = "0xF8F654", VA = "0xF8F654")]
			public LodInfo(SimpleAnimLodSetting lod)
			{
			}
		}

		[Token(Token = "0x40014AE")]
		private const int MaxCalcCount = 3;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<LodInfo> _animLodList;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<LodInfo> _realtimeaList;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<LodInfo> _warmupList;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _currentCalcIndex;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<LodInfo> _removeList;

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xE0A618", Offset = "0xE0A618", VA = "0xE0A618")]
		public void DoUpdate()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xE0A85C", Offset = "0xE0A85C", VA = "0xE0A85C")]
		public void DoTeleported()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xE0A98C", Offset = "0xE0A98C", VA = "0xE0A98C")]
		public void AddLod(SimpleAnimLodSetting lod)
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xE0AA70", Offset = "0xE0AA70", VA = "0xE0AA70")]
		public void RemoveLod(SimpleAnimLodSetting lod)
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xE0A63C", Offset = "0xE0A63C", VA = "0xE0A63C")]
		private void UpdateLodFrameDivide()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xE0A860", Offset = "0xE0A860", VA = "0xE0A860")]
		private void UpdateLodAll()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xE0AC10", Offset = "0xE0AC10", VA = "0xE0AC10")]
		private void ApplyRemove()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xE0A738", Offset = "0xE0A738", VA = "0xE0A738")]
		private void UpdateLodWarmup()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xE0AEEC", Offset = "0xE0AEEC", VA = "0xE0AEEC")]
		public SimpleAnimLodManager()
		{
		}
	}
	[Token(Token = "0x2000409")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881948", Offset = "0x881948")]
	public class SimpleAnimLodSetting : MonoBehaviour, IEnvPrefabCacheReciever, IEventSystemHandler
	{
		[Token(Token = "0x200040A")]
		public class RunWarmupInfo
		{
			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RunLodInfo _showInfo;

			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RunLodInfo _hideInfo;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int _warmupWorkState;

			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float _warmupTimeStart;

			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool _isFinish;

			[Token(Token = "0x6001330")]
			[Address(RVA = "0xF90498", Offset = "0xF90498", VA = "0xF90498")]
			public bool IsFinish()
			{
				return default(bool);
			}

			[Token(Token = "0x6001331")]
			[Address(RVA = "0xF904A0", Offset = "0xF904A0", VA = "0xF904A0")]
			public void SetupWarmup(RunLodInfo show, RunLodInfo hide)
			{
			}

			[Token(Token = "0x6001332")]
			[Address(RVA = "0xF904B0", Offset = "0xF904B0", VA = "0xF904B0")]
			public void RunWarmup()
			{
			}

			[Token(Token = "0x6001333")]
			[Address(RVA = "0xF905DC", Offset = "0xF905DC", VA = "0xF905DC")]
			public void ResetWarmup()
			{
			}

			[Token(Token = "0x6001334")]
			[Address(RVA = "0xF90628", Offset = "0xF90628", VA = "0xF90628")]
			public RunWarmupInfo()
			{
			}
		}

		[Token(Token = "0x200040B")]
		public class RunLodInfo
		{
			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CE7C", Offset = "0x88CE7C")]
			private LodInfo <LodInfo>k__BackingField;

			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly MeshAnimator _meshAnimator;

			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string _currentAnimationName;

			[Token(Token = "0x170001B9")]
			public LodInfo LodInfo
			{
				[Token(Token = "0x6001335")]
				[Address(RVA = "0xF8F730", Offset = "0xF8F730", VA = "0xF8F730")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895AE0", Offset = "0x895AE0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001336")]
				[Address(RVA = "0xF8F738", Offset = "0xF8F738", VA = "0xF8F738")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895AF0", Offset = "0x895AF0")]
				private set
				{
				}
			}

			[Token(Token = "0x170001BA")]
			public float Distance
			{
				[Token(Token = "0x6001337")]
				[Address(RVA = "0xF8F740", Offset = "0xF8F740", VA = "0xF8F740")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001338")]
			[Address(RVA = "0xF8F75C", Offset = "0xF8F75C", VA = "0xF8F75C")]
			public RunLodInfo(LodInfo lodInfo)
			{
			}

			[Token(Token = "0x6001339")]
			[Address(RVA = "0xF8F81C", Offset = "0xF8F81C", VA = "0xF8F81C")]
			public string GetCurrentAnimationName()
			{
				return null;
			}

			[Token(Token = "0x600133A")]
			[Address(RVA = "0xF8F824", Offset = "0xF8F824", VA = "0xF8F824")]
			public void SetActive(bool flag)
			{
			}

			[Token(Token = "0x600133B")]
			[Address(RVA = "0xF8F850", Offset = "0xF8F850", VA = "0xF8F850")]
			public void SetChildrenActiveForWarmup(bool flag)
			{
			}

			[Token(Token = "0x600133C")]
			[Address(RVA = "0xF8FA18", Offset = "0xF8FA18", VA = "0xF8FA18")]
			public void SetAnimationSpeedForWarmup(float speed)
			{
			}

			[Token(Token = "0x600133D")]
			[Address(RVA = "0xF8FB0C", Offset = "0xF8FB0C", VA = "0xF8FB0C")]
			public void SetAnimationModeForWarmup(bool warmup)
			{
			}

			[Token(Token = "0x600133E")]
			[Address(RVA = "0xF8FBF0", Offset = "0xF8FBF0", VA = "0xF8FBF0")]
			public bool IsActive()
			{
				return default(bool);
			}

			[Token(Token = "0x600133F")]
			[Address(RVA = "0xF8FC18", Offset = "0xF8FC18", VA = "0xF8FC18")]
			public void SetAnimation(string argName)
			{
			}

			[Token(Token = "0x6001340")]
			[Address(RVA = "0xF8FDC8", Offset = "0xF8FDC8", VA = "0xF8FDC8")]
			public void SetImmediateAnimationForLodChange(string argName)
			{
			}

			[Token(Token = "0x6001341")]
			[Address(RVA = "0xF8FE54", Offset = "0xF8FE54", VA = "0xF8FE54")]
			public void ResetAnimation(string argName)
			{
			}

			[Token(Token = "0x6001342")]
			[Address(RVA = "0xF8FF18", Offset = "0xF8FF18", VA = "0xF8FF18")]
			public float GetCurrentAnimTime()
			{
				return default(float);
			}

			[Token(Token = "0x6001343")]
			[Address(RVA = "0xF90094", Offset = "0xF90094", VA = "0xF90094")]
			public int GetCurrentAnimLoopCount()
			{
				return default(int);
			}

			[Token(Token = "0x6001344")]
			[Address(RVA = "0xF90208", Offset = "0xF90208", VA = "0xF90208")]
			public void SetCurrentAnimTime(float animTime)
			{
			}

			[Token(Token = "0x6001345")]
			[Address(RVA = "0xF903E4", Offset = "0xF903E4", VA = "0xF903E4")]
			public void SetKeepAnimatorControllerStateOnDisable(bool flag)
			{
			}

			[Token(Token = "0x6001346")]
			[Address(RVA = "0xF8FCA0", Offset = "0xF8FCA0", VA = "0xF8FCA0")]
			private bool IsAnimatorEnable()
			{
				return default(bool);
			}

			[Token(Token = "0x6001347")]
			[Address(RVA = "0xF8FD44", Offset = "0xF8FD44", VA = "0xF8FD44")]
			private bool IsMeshAnimEnable()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200040C")]
		private enum RunCallState
		{
			[Token(Token = "0x40014CA")]
			Initialize,
			[Token(Token = "0x40014CB")]
			RunUpdate
		}

		[Token(Token = "0x200040D")]
		private enum RunWarmupState
		{
			[Token(Token = "0x40014CD")]
			None,
			[Token(Token = "0x40014CE")]
			Warmup,
			[Token(Token = "0x40014CF")]
			Finish
		}

		[Token(Token = "0x200040E")]
		public enum AnimationWarmup
		{
			[Token(Token = "0x40014D1")]
			None,
			[Token(Token = "0x40014D2")]
			Warmup
		}

		[Token(Token = "0x200040F")]
		public enum RunType
		{
			[Token(Token = "0x40014D4")]
			Default,
			[Token(Token = "0x40014D5")]
			Teleport,
			[Token(Token = "0x40014D6")]
			Realtime
		}

		[Serializable]
		[Token(Token = "0x2000410")]
		public class LodInfo
		{
			[Token(Token = "0x40014D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Enable;

			[Token(Token = "0x40014D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject Lod;

			[Token(Token = "0x40014D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float Distance;

			[Token(Token = "0x40014DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Animator Animator;

			[Token(Token = "0x40014DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MeshAnimPlayMixer MeshAnimPlayMixer;

			[Token(Token = "0x6001348")]
			[Address(RVA = "0xF8F728", Offset = "0xF8F728", VA = "0xF8F728")]
			public LodInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881958", Offset = "0x881958")]
		private sealed class <>c
		{
			[Token(Token = "0x40014DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<LodInfo> <>9__34_0;

			[Token(Token = "0x600134A")]
			[Address(RVA = "0xF8F6E0", Offset = "0xF8F6E0", VA = "0xF8F6E0")]
			public <>c()
			{
			}

			[Token(Token = "0x600134B")]
			[Address(RVA = "0xF8F6E8", Offset = "0xF8F6E8", VA = "0xF8F6E8")]
			internal int <SortDistanceNear>b__34_0(LodInfo a, LodInfo b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88CD98", Offset = "0x88CD98")]
		[SerializeField]
		private RunType _runType;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88CDE4", Offset = "0x88CDE4")]
		[SerializeField]
		private AnimationWarmup _animationWarmup;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88CE30", Offset = "0x88CE30")]
		[SerializeField]
		private LodInfo[] _lodInfoArray;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _currentLodIndex;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _debugDistanceSqr;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<RunLodInfo> _runLodInfoList;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _initialize;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private RunWarmupState _warmupState;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly RunWarmupInfo _runWarmupInfo;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isDisabledByAreaCache;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _prepareInitializeSetAnimationName;

		[Token(Token = "0x170001B7")]
		public RunType UpdateRunType
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0xE0AFC8", Offset = "0xE0AFC8", VA = "0xE0AFC8")]
			get
			{
				return default(RunType);
			}
		}

		[Token(Token = "0x170001B8")]
		public AnimationWarmup AnimationWarmupType
		{
			[Token(Token = "0x6001315")]
			[Address(RVA = "0xE0AFD0", Offset = "0xE0AFD0", VA = "0xE0AFD0")]
			get
			{
				return default(AnimationWarmup);
			}
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xE0AFD8", Offset = "0xE0AFD8", VA = "0xE0AFD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xE0B538", Offset = "0xE0B538", VA = "0xE0B538")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xE0B5F8", Offset = "0xE0B5F8", VA = "0xE0B5F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xE0B610", Offset = "0xE0B610", VA = "0xE0B610", Slot = "4")]
		public void OnPrefabPrepareCache()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xE0B624", Offset = "0xE0B624", VA = "0xE0B624", Slot = "5")]
		public void OnPrefabUseCache()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xE0AE9C", Offset = "0xE0AE9C", VA = "0xE0AE9C")]
		public void RunUpdate()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xE0AEE8", Offset = "0xE0AEE8", VA = "0xE0AEE8")]
		public void RunWarmup()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xE0B68C", Offset = "0xE0B68C", VA = "0xE0B68C")]
		public void SetAnimation(string argName)
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xE0B7CC", Offset = "0xE0B7CC", VA = "0xE0B7CC")]
		public void ResetAnimation(string argName)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xE0B8F4", Offset = "0xE0B8F4", VA = "0xE0B8F4")]
		public int GetLoopCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xE0AFDC", Offset = "0xE0AFDC", VA = "0xE0AFDC")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xE0B60C", Offset = "0xE0B60C", VA = "0xE0B60C")]
		private void CalculateLodDistance(RunCallState callState)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xE0B970", Offset = "0xE0B970", VA = "0xE0B970")]
		private void InnerCalcDistance(RunCallState callState)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xE0BAE0", Offset = "0xE0BAE0", VA = "0xE0BAE0")]
		private void SetShowLod(int oldIndex, int index, RunCallState callState)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xE0BC68", Offset = "0xE0BC68", VA = "0xE0BC68")]
		private void StartWarmupWork(int oldIndex, int index)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xE0B638", Offset = "0xE0B638", VA = "0xE0B638")]
		private void CheckWarmupWork()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xE0BD54", Offset = "0xE0BD54", VA = "0xE0BD54")]
		private static void SortDistanceNear(List<LodInfo> lodInfos)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xE0BE74", Offset = "0xE0BE74", VA = "0xE0BE74")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895920", Offset = "0x895920")]
		private static void OutputLog(string text)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xE0BF04", Offset = "0xE0BF04", VA = "0xE0BF04")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895958", Offset = "0x895958")]
		public void DebugSetLodLevel1()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xE0BFE0", Offset = "0xE0BFE0", VA = "0xE0BFE0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895990", Offset = "0x895990")]
		public void EditorClearLod()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xE0C034", Offset = "0xE0C034", VA = "0xE0C034")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8959C8", Offset = "0x8959C8")]
		public void EditorAddLodAnimator(GameObject argLod, float argDistance, Animator argAnimator)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xE0C038", Offset = "0xE0C038", VA = "0xE0C038")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895A00", Offset = "0x895A00")]
		public void EditorAddLodMeshAnimPlayMixer(GameObject argLod, float argDistance, MeshAnimPlayMixer argMeshAnimPlayMixer)
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xE0C03C", Offset = "0xE0C03C", VA = "0xE0C03C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895A38", Offset = "0x895A38")]
		private void EditorInnerAddLod(GameObject argLod, float argDistance, Animator argAnimator, MeshAnimPlayMixer argMeshAnimPlayMixer)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xE0C17C", Offset = "0xE0C17C", VA = "0xE0C17C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895A70", Offset = "0x895A70")]
		public void EditorGetLodArray(ref LodInfo[] outLodInfos)
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xE0C188", Offset = "0xE0C188", VA = "0xE0C188")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895AA8", Offset = "0x895AA8")]
		public void EditorSetAnimationWarmup(AnimationWarmup warmup)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xE0C190", Offset = "0xE0C190", VA = "0xE0C190")]
		public SimpleAnimLodSetting()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class PuzzleRunOrderManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881968", Offset = "0x881968")]
		private sealed class <>c
		{
			[Token(Token = "0x40014DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__1_0;

			[Token(Token = "0x6001351")]
			[Address(RVA = "0xF8D1D8", Offset = "0xF8D1D8", VA = "0xF8D1D8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001352")]
			[Address(RVA = "0xF8D1E0", Offset = "0xF8D1E0", VA = "0xF8D1E0")]
			internal void <Start>b__1_0()
			{
			}
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x101E1F4", Offset = "0x101E1F4", VA = "0x101E1F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x101E2B0", Offset = "0x101E2B0", VA = "0x101E2B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x101E3D0", Offset = "0x101E3D0", VA = "0x101E3D0")]
		private void Update()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x101E424", Offset = "0x101E424", VA = "0x101E424")]
		public PuzzleRunOrderManager()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class TestRunOrderManager : MonoBehaviour
	{
		[Token(Token = "0x6001353")]
		[Address(RVA = "0xFA118C", Offset = "0xFA118C", VA = "0xFA118C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xFA11C0", Offset = "0xFA11C0", VA = "0xFA11C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xFA121C", Offset = "0xFA121C", VA = "0xFA121C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xFA1298", Offset = "0xFA1298", VA = "0xFA1298")]
		public TestRunOrderManager()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class TitleRunOrderManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000416")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881978", Offset = "0x881978")]
		private sealed class <>c
		{
			[Token(Token = "0x40014E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__1_0;

			[Token(Token = "0x600135C")]
			[Address(RVA = "0xF95014", Offset = "0xF95014", VA = "0xF95014")]
			public <>c()
			{
			}

			[Token(Token = "0x600135D")]
			[Address(RVA = "0xF9501C", Offset = "0xF9501C", VA = "0xF9501C")]
			internal void <Start>b__1_0()
			{
			}
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xFA553C", Offset = "0xFA553C", VA = "0xFA553C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xFA5570", Offset = "0xFA5570", VA = "0xFA5570")]
		private void Start()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xFA5690", Offset = "0xFA5690", VA = "0xFA5690")]
		private void Update()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xFA56E4", Offset = "0xFA56E4", VA = "0xFA56E4")]
		public TitleRunOrderManager()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class ZooRunOrderManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881988", Offset = "0x881988")]
		private sealed class <>c
		{
			[Token(Token = "0x40014E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__4_0;

			[Token(Token = "0x40014E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__5_0;

			[Token(Token = "0x6001366")]
			[Address(RVA = "0xF9D4B8", Offset = "0xF9D4B8", VA = "0xF9D4B8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001367")]
			[Address(RVA = "0xF9D4C0", Offset = "0xF9D4C0", VA = "0xF9D4C0")]
			internal void <OnNotifyAreaChangeFinish>b__4_0()
			{
			}

			[Token(Token = "0x6001368")]
			[Address(RVA = "0xF9D514", Offset = "0xF9D514", VA = "0xF9D514")]
			internal void <OnNotifyAreaTimelineStart>b__5_0()
			{
			}
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x1173A08", Offset = "0x1173A08", VA = "0x1173A08")]
		private void Awake()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x1173A3C", Offset = "0x1173A3C", VA = "0x1173A3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x1173C9C", Offset = "0x1173C9C", VA = "0x1173C9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x1173D18", Offset = "0x1173D18", VA = "0x1173D18")]
		private void OnTeleported(Transform argTransform, Vector3 argPos, Quaternion argRot)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x1173DBC", Offset = "0x1173DBC", VA = "0x1173DBC")]
		private void OnNotifyAreaChangeFinish()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x1173EF8", Offset = "0x1173EF8", VA = "0x1173EF8")]
		private void OnNotifyAreaTimelineStart()
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x117402C", Offset = "0x117402C", VA = "0x117402C")]
		public ZooRunOrderManager()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class DebugGrabbableRecieverLog : MonoBehaviour, IGrabbableMessageReciever, IEventSystemHandler
	{
		[Token(Token = "0x6001369")]
		[Address(RVA = "0x12856F0", Offset = "0x12856F0", VA = "0x12856F0", Slot = "4")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x12857A0", Offset = "0x12857A0", VA = "0x12857A0", Slot = "5")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x1285850", Offset = "0x1285850", VA = "0x1285850")]
		public DebugGrabbableRecieverLog()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class TransitionControl : Singleton<TransitionControl>
	{
		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CE8C", Offset = "0x88CE8C")]
		private string <NextSceneName>k__BackingField;

		[Token(Token = "0x170001BB")]
		public string NextSceneName
		{
			[Token(Token = "0x600136C")]
			[Address(RVA = "0x1874208", Offset = "0x1874208", VA = "0x1874208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895B00", Offset = "0x895B00")]
			get
			{
				return null;
			}
			[Token(Token = "0x600136D")]
			[Address(RVA = "0x1874210", Offset = "0x1874210", VA = "0x1874210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895B10", Offset = "0x895B10")]
			set
			{
			}
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x1874218", Offset = "0x1874218", VA = "0x1874218")]
		public TransitionControl()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public enum MessageId
	{
		[Token(Token = "0x40014E7")]
		NONE = 0,
		[Token(Token = "0x40014E8")]
		TITLE_START_MENU = 10,
		[Token(Token = "0x40014E9")]
		TITLE_GAME_START = 11,
		[Token(Token = "0x40014EA")]
		TITLE_STAGE_SELECT = 12,
		[Token(Token = "0x40014EB")]
		TITLE_OPTIONS = 13,
		[Token(Token = "0x40014EC")]
		TITLE_QUIT_GAME = 14,
		[Token(Token = "0x40014ED")]
		TITLE_LANGUAGE = 15,
		[Token(Token = "0x40014EE")]
		TITLE_LANGUAGE_EN = 16,
		[Token(Token = "0x40014EF")]
		TITLE_LANGUAGE_JP = 17,
		[Token(Token = "0x40014F0")]
		TITLE_MOVE = 18,
		[Token(Token = "0x40014F1")]
		TITLE_PUZZLE_SHOOTER = 19,
		[Token(Token = "0x40014F2")]
		TITLE_HAND_REFT = 20,
		[Token(Token = "0x40014F3")]
		TITLE_HAND_RIGHT = 21,
		[Token(Token = "0x40014F4")]
		TITLE_SAVE_DATA = 22,
		[Token(Token = "0x40014F5")]
		TITLE_SAVE_RESET = 23,
		[Token(Token = "0x40014F6")]
		TITLE_CLOSE = 24,
		[Token(Token = "0x40014F7")]
		MAP_STAGE_SELECT = 40,
		[Token(Token = "0x40014F8")]
		MAP_CLOSE = 41,
		[Token(Token = "0x40014F9")]
		MAP_AREA = 42,
		[Token(Token = "0x40014FA")]
		MAP_BACK_TO_TITLE = 43,
		[Token(Token = "0x40014FB")]
		TITLE_SAVERESET_CONFIRM1 = 101,
		[Token(Token = "0x40014FC")]
		TITLE_SAVERESET_CONFIRM2 = 102,
		[Token(Token = "0x40014FD")]
		PUZZLE_NORMAL_STAGE_NAME = 38304,
		[Token(Token = "0x40014FE")]
		PUZZLE_NORMAL_STAGE_COMMENT = 38305,
		[Token(Token = "0x40014FF")]
		LEVEL = 38312,
		[Token(Token = "0x4001500")]
		SKIP_STAGE_CLEAR_BONUS_ON = 38314,
		[Token(Token = "0x4001501")]
		CONTINUE = 38336,
		[Token(Token = "0x4001502")]
		PUZZLE_HIGH_SCORE_MODE_START_CUTIN_TITLE = 38354,
		[Token(Token = "0x4001503")]
		PUZZLE_HIGH_SCORE_MODE_START_CUTIN_MESSAGE = 38355,
		[Token(Token = "0x4001504")]
		PUZZLE_SUPPORTER_PUZZLE_LIMIT_TIME_SECOND = 38502,
		[Token(Token = "0x4001505")]
		PUZZLE_SUPPORTER_PUZZLE_LIMIT_TIME_MINUTE = 38503,
		[Token(Token = "0x4001506")]
		PUZZLE_SUPPORTER_PUZZLE_LIMIT_TIME_MINUTE_AND_SECOND = 38504,
		[Token(Token = "0x4001507")]
		PUZZLE_SCOREATTACK_STAGE_COMMENT = 38505,
		[Token(Token = "0x4001508")]
		PUZZLE_SCOREATTACK_MESSAGE_STAGE_CLEAR_WORD = 38506,
		[Token(Token = "0x4001509")]
		PUZZLE_ONEMOVE_STAGE_COMMENT = 38507,
		[Token(Token = "0x400150A")]
		PUZZLE_ONEMOVE_MESSAGE_STAGE_CLEAR_COUNT = 38508,
		[Token(Token = "0x400150B")]
		PUZZLE_ONEMOVE_MESSAGE_STAGE_CLEAR_WORD = 38509,
		[Token(Token = "0x400150C")]
		MISS_PENALTY_TITLE_TEXT = 38513,
		[Token(Token = "0x400150D")]
		MISS_PENALTY_SECOND_TEXT = 38514,
		[Token(Token = "0x400150E")]
		SUCCESS_BONUS_TITLE_TEXT = 38515,
		[Token(Token = "0x400150F")]
		SUCCESS_BONUS_SECOND_TEXT = 38516,
		[Token(Token = "0x4001510")]
		ENDLESS_STAGE_NAME = 38543,
		[Token(Token = "0x4001511")]
		PUZZLE_HIGH_SCORE_MODE_STAGE_COMMENT = 38553,
		[Token(Token = "0x4001512")]
		PUZZLE_HIGH_SCORE_VALUE_TEXT = 38593,
		[Token(Token = "0x4001513")]
		PUZZLE_FAILED_DIALOG_TITLE = 50001,
		[Token(Token = "0x4001514")]
		PUZZLE_FAILED_DIALOG_MAIN = 50002,
		[Token(Token = "0x4001515")]
		PUZZLE_FAILED_DIALOG_RETRY_BUTTON_TEXT = 50003,
		[Token(Token = "0x4001516")]
		PUZZLE_FAILED_DIALOG_GIVEUP_BUTTON_TEXT = 50004,
		[Token(Token = "0x4001517")]
		PUZZLE_STAGE_CLEAR_DIALOG_SUCCESS_TEXT = 50005,
		[Token(Token = "0x4001518")]
		PUZZLE_ALL_STAGE_CLEAR_DIALOG_CONGRATULATIONS_TEXT = 50006,
		[Token(Token = "0x4001519")]
		PUZZLE_PAUSE_DIALOG_TITLE = 50101,
		[Token(Token = "0x400151A")]
		PUZZLE_PAUSE_DIALOG_RETRY_TEXT = 50102,
		[Token(Token = "0x400151B")]
		PUZZLE_PAUSE_DIALOG_GIVEUP_TEXT = 50103,
		[Token(Token = "0x400151C")]
		PUZZLE_PAUSE_DIALOG_CLOSE = 50104,
		[Token(Token = "0x400151D")]
		PUZZLE_GIVEUP_CONFIRM_DIALOG_MESSAGE = 50201,
		[Token(Token = "0x400151E")]
		PUZZLE_GIVEUP_CONFIRM_DIALOG_YES_BUTTON_TEXT = 50202,
		[Token(Token = "0x400151F")]
		PUZZLE_GIVEUP_CONFIRM_DIALOG_NO_BUTTON_TEXT = 50203
	}
	[Token(Token = "0x200041C")]
	public class PrefabCacheManager : StaticAccessBehaviour<PrefabCacheManager>
	{
		[Token(Token = "0x600136F")]
		[Address(RVA = "0x1019168", Offset = "0x1019168", VA = "0x1019168")]
		public void AddCache(GameObject cache)
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x10191D4", Offset = "0x10191D4", VA = "0x10191D4")]
		public GameObject GetCache(string argName)
		{
			return null;
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x10192A8", Offset = "0x10192A8", VA = "0x10192A8")]
		public void ClearCache()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x1019398", Offset = "0x1019398", VA = "0x1019398")]
		public PrefabCacheManager()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public static class AreaUtility
	{
		[Token(Token = "0x6001373")]
		[Address(RVA = "0xE28D1C", Offset = "0xE28D1C", VA = "0xE28D1C")]
		public static void PlayerMoveAfterProcess()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xE28D98", Offset = "0xE28D98", VA = "0xE28D98")]
		public static void AreaShowChangeAfterProcess()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xE28DEC", Offset = "0xE28DEC", VA = "0xE28DEC")]
		public static void AreaChangeFinishAfterProcess()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class BootInitializerScene : MonoBehaviour
	{
		[Token(Token = "0x6001376")]
		[Address(RVA = "0xE32BF0", Offset = "0xE32BF0", VA = "0xE32BF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xE32BF4", Offset = "0xE32BF4", VA = "0xE32BF4")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xE32C90", Offset = "0xE32C90", VA = "0xE32C90")]
		public BootInitializerScene()
		{
		}
	}
	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x881998", Offset = "0x881998")]
	public class CameraFrontConstraintForRectTransform : MonoBehaviour
	{
		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 _offsetPosition;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform _rectTransform;

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x127459C", Offset = "0x127459C", VA = "0x127459C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x1274620", Offset = "0x1274620", VA = "0x1274620")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x1274738", Offset = "0x1274738", VA = "0x1274738")]
		public CameraFrontConstraintForRectTransform()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class ColliderReplaceInformation : MonoBehaviour
	{
		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88CEAC", Offset = "0x88CEAC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88CEAC", Offset = "0x88CEAC")]
		private string[] _replaceTargetNameList;

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x127A00C", Offset = "0x127A00C", VA = "0x127A00C")]
		public string[] GetReplaceTargetNameList()
		{
			return null;
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x127A014", Offset = "0x127A014", VA = "0x127A014")]
		public ColliderReplaceInformation()
		{
		}
	}
	[Token(Token = "0x2000421")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x8819F8", Offset = "0x8819F8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8819F8", Offset = "0x8819F8")]
	public class EventTriggerButtonToMeshRender : MonoBehaviour
	{
		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EventTrigger _eventTrigger;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _eventRegistered;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _originalScale;

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x1237684", Offset = "0x1237684", VA = "0x1237684")]
		private void Start()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x1237924", Offset = "0x1237924", VA = "0x1237924")]
		public EventTriggerButtonToMeshRender()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x123792C", Offset = "0x123792C", VA = "0x123792C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895B20", Offset = "0x895B20")]
		private void <Start>b__3_0(BaseEventData x)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x1237974", Offset = "0x1237974", VA = "0x1237974")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895B30", Offset = "0x895B30")]
		private void <Start>b__3_1(BaseEventData x)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x12379C0", Offset = "0x12379C0", VA = "0x12379C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895B40", Offset = "0x895B40")]
		private void <Start>b__3_2(BaseEventData x)
		{
		}
	}
	[Token(Token = "0x2000422")]
	public interface ISceneLoadedReciever : IEventSystemHandler
	{
		[Token(Token = "0x6001383")]
		void OnSceneLoaded();
	}
	[Token(Token = "0x2000423")]
	public static class SceneLoadedMessageUtility
	{
		[Serializable]
		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881A68", Offset = "0x881A68")]
		private sealed class <>c
		{
			[Token(Token = "0x4001527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExecuteEvents.EventFunction<ISceneLoadedReciever> <>9__1_0;

			[Token(Token = "0x6001387")]
			[Address(RVA = "0xF8E94C", Offset = "0xF8E94C", VA = "0xF8E94C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001388")]
			[Address(RVA = "0xF8E954", Offset = "0xF8E954", VA = "0xF8E954")]
			internal void <SendSceneLoaded>b__1_0(ISceneLoadedReciever recieveTarget, BaseEventData y)
			{
			}
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x102749C", Offset = "0x102749C", VA = "0x102749C")]
		public static void SendAllRootSceneLoaded()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x1027568", Offset = "0x1027568", VA = "0x1027568")]
		private static void SendSceneLoaded(GameObject targetGameObject)
		{
		}
	}
	[Token(Token = "0x2000425")]
	public interface ITeleportMessageReciever : IEventSystemHandler
	{
		[Token(Token = "0x6001389")]
		void OnPreTeleport();

		[Token(Token = "0x600138A")]
		void OnPostTeleport();
	}
	[Token(Token = "0x2000426")]
	public static class TeleportMessageUtility
	{
		[Token(Token = "0x600138B")]
		[Address(RVA = "0xF9F444", Offset = "0xF9F444", VA = "0xF9F444")]
		public static void SendPreTeleport(GameObject targetGameObject)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xF9F560", Offset = "0xF9F560", VA = "0xF9F560")]
		public static void SendPostTeleport(GameObject targetGameObject)
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class MiscControl : Singleton<MiscControl>
	{
		[Token(Token = "0x600138D")]
		[Address(RVA = "0x13A4160", Offset = "0x13A4160", VA = "0x13A4160")]
		public MiscControl()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class MiscSceneManager : StaticAccessBehaviour<MiscSceneManager>
	{
		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CF1C", Offset = "0x88CF1C")]
		private readonly List<OperationUtility.Reason> <DisableOVRTrackingReasonList>k__BackingField;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CF2C", Offset = "0x88CF2C")]
		private readonly List<OperationUtility.Reason> <DisableTeleportReasonList>k__BackingField;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CF3C", Offset = "0x88CF3C")]
		private readonly List<OperationUtility.Reason> <DisableDistanceGrabberReasonList>k__BackingField;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CF4C", Offset = "0x88CF4C")]
		private readonly List<OperationUtility.Reason> <DisableThumbstickRotationReasonList>k__BackingField;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CF5C", Offset = "0x88CF5C")]
		private readonly List<OperationUtility.Reason> <DisableLeftRightRotationTeleportReasonList>k__BackingField;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CF6C", Offset = "0x88CF6C")]
		private Vector3 <PuzzleGunNozzlePosition>k__BackingField;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88CF7C", Offset = "0x88CF7C")]
		private Quaternion <PuzzleGunNozzleRotation>k__BackingField;

		[Token(Token = "0x170001BC")]
		public List<OperationUtility.Reason> DisableOVRTrackingReasonList
		{
			[Token(Token = "0x600138E")]
			[Address(RVA = "0x13A41D8", Offset = "0x13A41D8", VA = "0x13A41D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895B50", Offset = "0x895B50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		public List<OperationUtility.Reason> DisableTeleportReasonList
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0x13A41E0", Offset = "0x13A41E0", VA = "0x13A41E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895B60", Offset = "0x895B60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public List<OperationUtility.Reason> DisableDistanceGrabberReasonList
		{
			[Token(Token = "0x6001390")]
			[Address(RVA = "0x13A41E8", Offset = "0x13A41E8", VA = "0x13A41E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895B70", Offset = "0x895B70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		public List<OperationUtility.Reason> DisableThumbstickRotationReasonList
		{
			[Token(Token = "0x6001391")]
			[Address(RVA = "0x13A41F0", Offset = "0x13A41F0", VA = "0x13A41F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895B80", Offset = "0x895B80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public List<OperationUtility.Reason> DisableLeftRightRotationTeleportReasonList
		{
			[Token(Token = "0x6001392")]
			[Address(RVA = "0x13A41F8", Offset = "0x13A41F8", VA = "0x13A41F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895B90", Offset = "0x895B90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		public Vector3 PuzzleGunNozzlePosition
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x13A4200", Offset = "0x13A4200", VA = "0x13A4200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895BA0", Offset = "0x895BA0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001394")]
			[Address(RVA = "0x13A420C", Offset = "0x13A420C", VA = "0x13A420C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895BB0", Offset = "0x895BB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public Quaternion PuzzleGunNozzleRotation
		{
			[Token(Token = "0x6001395")]
			[Address(RVA = "0x13A4218", Offset = "0x13A4218", VA = "0x13A4218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895BC0", Offset = "0x895BC0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001396")]
			[Address(RVA = "0x13A4224", Offset = "0x13A4224", VA = "0x13A4224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895BD0", Offset = "0x895BD0")]
			set
			{
			}
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x13A4230", Offset = "0x13A4230", VA = "0x13A4230")]
		public MiscSceneManager()
		{
		}
	}
	[Token(Token = "0x2000429")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881A78", Offset = "0x881A78")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x881A78", Offset = "0x881A78")]
	public class NocColliderAttribute : MonoBehaviour
	{
		[Token(Token = "0x200042A")]
		public enum Type
		{
			[Token(Token = "0x4001532")]
			Normal,
			[Token(Token = "0x4001533")]
			Noc
		}

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Type _colliderType;

		[Token(Token = "0x170001C3")]
		public Type ColliderType
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x13A87A4", Offset = "0x13A87A4", VA = "0x13A87A4")]
			get
			{
				return default(Type);
			}
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x13A87AC", Offset = "0x13A87AC", VA = "0x13A87AC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895BE0", Offset = "0x895BE0")]
		public void SetupColliderTypeForEditor(Type type)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x13A87B4", Offset = "0x13A87B4", VA = "0x13A87B4")]
		public NocColliderAttribute()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public class RotationZooSkybox : MonoBehaviour, ISceneLoadedReciever, IEventSystemHandler
	{
		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88CF9C", Offset = "0x88CF9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88CF9C", Offset = "0x88CF9C")]
		private float _rotateSpeed;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material _targetSky;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _rotationRepeatValue;

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x1025994", Offset = "0x1025994", VA = "0x1025994", Slot = "4")]
		public void OnSceneLoaded()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x1025AC8", Offset = "0x1025AC8", VA = "0x1025AC8")]
		private void Update()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x1025BA8", Offset = "0x1025BA8", VA = "0x1025BA8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x1025BAC", Offset = "0x1025BAC", VA = "0x1025BAC")]
		public RotationZooSkybox()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public static class ScreenshotUtility
	{
		[Token(Token = "0x4001537")]
		private const string DataSavePath = "Screenshot";

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xE08610", Offset = "0xE08610", VA = "0xE08610")]
		public static void CaptureScreenshot()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xE087A4", Offset = "0xE087A4", VA = "0xE087A4")]
		public static void CaptureScreenshotForQuest()
		{
		}
	}
	[Token(Token = "0x200042D")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881AE8", Offset = "0x881AE8")]
	public class BasketGoal : MonoBehaviour
	{
		[Token(Token = "0x200042E")]
		private class CheckInfo
		{
			[Token(Token = "0x400153B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float ElapsedTime;

			[Token(Token = "0x400153C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BasketEnter CacheBasketEnter;

			[Token(Token = "0x400153D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool IsStopSendOnce;

			[Token(Token = "0x60013A6")]
			[Address(RVA = "0xC03E54", Offset = "0xC03E54", VA = "0xC03E54")]
			public CheckInfo(Collider collider, BasketEnter basketEnter)
			{
			}

			[Token(Token = "0x60013A7")]
			[Address(RVA = "0xC03E80", Offset = "0xC03E80", VA = "0xC03E80")]
			public bool CheckElapsedTime()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88D004", Offset = "0x88D004")]
		[SerializeField]
		private int _targetChannel;

		[Token(Token = "0x4001539")]
		private const float CheckWaitTime = 0.5f;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, CheckInfo> _checkInfoDictionary;

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xE30ED4", Offset = "0xE30ED4", VA = "0xE30ED4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xE312E0", Offset = "0xE312E0", VA = "0xE312E0")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xE31678", Offset = "0xE31678", VA = "0xE31678")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xE316F0", Offset = "0xE316F0", VA = "0xE316F0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895C18", Offset = "0x895C18")]
		private void DebugLog(string text)
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xE316F4", Offset = "0xE316F4", VA = "0xE316F4")]
		public BasketGoal()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public interface IBasketGoalReciever : IEventSystemHandler
	{
		[Token(Token = "0x60013A8")]
		void OnEnterBasket();

		[Token(Token = "0x60013A9")]
		void OnInBasketWithStop();
	}
	[Token(Token = "0x2000430")]
	public static class BasketGoalMessageUtility
	{
		[Serializable]
		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881AF8", Offset = "0x881AF8")]
		private sealed class <>c
		{
			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400153F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExecuteEvents.EventFunction<IBasketGoalReciever> <>9__0_0;

			[Token(Token = "0x4001540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExecuteEvents.EventFunction<IBasketGoalReciever> <>9__0_1;

			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExecuteEvents.EventFunction<IBasketGoalReciever> <>9__1_0;

			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExecuteEvents.EventFunction<IBasketGoalReciever> <>9__1_1;

			[Token(Token = "0x60013AD")]
			[Address(RVA = "0xC03F24", Offset = "0xC03F24", VA = "0xC03F24")]
			public <>c()
			{
			}

			[Token(Token = "0x60013AE")]
			[Address(RVA = "0xC03F2C", Offset = "0xC03F2C", VA = "0xC03F2C")]
			internal void <SendEnterBasket>b__0_0(IBasketGoalReciever recieveTarget, BaseEventData y)
			{
			}

			[Token(Token = "0x60013AF")]
			[Address(RVA = "0xC03FD4", Offset = "0xC03FD4", VA = "0xC03FD4")]
			internal void <SendEnterBasket>b__0_1(IBasketGoalReciever recieveTarget, BaseEventData y)
			{
			}

			[Token(Token = "0x60013B0")]
			[Address(RVA = "0xC0407C", Offset = "0xC0407C", VA = "0xC0407C")]
			internal void <SendInBasketWithStop>b__1_0(IBasketGoalReciever recieveTarget, BaseEventData y)
			{
			}

			[Token(Token = "0x60013B1")]
			[Address(RVA = "0xC04128", Offset = "0xC04128", VA = "0xC04128")]
			internal void <SendInBasketWithStop>b__1_1(IBasketGoalReciever recieveTarget, BaseEventData y)
			{
			}
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xE31030", Offset = "0xE31030", VA = "0xE31030")]
		public static void SendEnterBasket(GameObject targetGameObject)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xE313C8", Offset = "0xE313C8", VA = "0xE313C8")]
		public static void SendInBasketWithStop(GameObject targetGameObject)
		{
		}
	}
}
namespace Common.UI.Utility
{
	[Token(Token = "0x2000432")]
	public class ImageShakeAction : MonoBehaviour
	{
		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _strength;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _vibration;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Sequence _actionSeq;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _initPos;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentActionRate;

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x178E458", Offset = "0x178E458", VA = "0x178E458")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x178E494", Offset = "0x178E494", VA = "0x178E494")]
		public void SetDefaultPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x178E4A0", Offset = "0x178E4A0", VA = "0x178E4A0")]
		public void PlayAction(float actionRate = 1f)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x178E640", Offset = "0x178E640", VA = "0x178E640")]
		public ImageShakeAction()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x178E688", Offset = "0x178E688", VA = "0x178E688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895C50", Offset = "0x895C50")]
		private void <PlayAction>b__8_0()
		{
		}
	}
}
namespace Common.SaveData
{
	[Token(Token = "0x2000433")]
	public abstract class LowSaveData
	{
		[Token(Token = "0x2000434")]
		public enum Mode
		{
			[Token(Token = "0x400154B")]
			PlayerPrefs
		}

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPreservationPlace _mode;

		[Token(Token = "0x60013B7")]
		protected abstract void DoSave();

		[Token(Token = "0x60013B8")]
		protected abstract void DoLoad();

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x1082D5C", Offset = "0x1082D5C", VA = "0x1082D5C")]
		public void Save()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x1082D68", Offset = "0x1082D68", VA = "0x1082D68")]
		public void Load()
		{
		}

		[Token(Token = "0x60013BB")]
		protected void WriteData<T>(T value, string key)
		{
		}

		[Token(Token = "0x60013BC")]
		protected T ReadData<T>(string key) where T : class, new()
		{
			return null;
		}

		[Token(Token = "0x60013BD")]
		protected string PluckData<T>(T value)
		{
			return null;
		}

		[Token(Token = "0x60013BE")]
		protected T PouchData<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x1082D74", Offset = "0x1082D74", VA = "0x1082D74")]
		public LowSaveData SetupPrefs()
		{
			return null;
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x1082D7C", Offset = "0x1082D7C", VA = "0x1082D7C")]
		public LowSaveData Setup(Mode mode, List<LowSaveData> lowDataList)
		{
			return null;
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x1082E3C", Offset = "0x1082E3C", VA = "0x1082E3C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895C60", Offset = "0x895C60")]
		private void DebugSaveLog()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x1082E40", Offset = "0x1082E40", VA = "0x1082E40")]
		protected LowSaveData()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public interface IPreservationPlace
	{
		[Token(Token = "0x60013C3")]
		void WriteData<T>(T data, string key);

		[Token(Token = "0x60013C4")]
		T ReadData<T>(string key) where T : class, new();
	}
	[Token(Token = "0x2000436")]
	public class ModePlayerPrefs : IPreservationPlace
	{
		[Token(Token = "0x60013C5")]
		public void WriteData<T>(T data, string key)
		{
		}

		[Token(Token = "0x60013C6")]
		public T ReadData<T>(string key) where T : class, new()
		{
			return null;
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x13A47C4", Offset = "0x13A47C4", VA = "0x13A47C4")]
		public ModePlayerPrefs()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class OptionSaveData : LowSaveData
	{
		[Serializable]
		[Token(Token = "0x2000438")]
		private class SaveData
		{
			[Token(Token = "0x4001550")]
			public const int CurrentFormatVersion = 1;

			[Token(Token = "0x4001551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int FormatVersion;

			[Token(Token = "0x4001552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int TeleportHand;

			[Token(Token = "0x4001553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int PuzzleGunHand;

			[Token(Token = "0x4001554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int Language;

			[Token(Token = "0x4001555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isSelectedDominantHand;

			[Token(Token = "0x60013DA")]
			[Address(RVA = "0xC13494", Offset = "0xC13494", VA = "0xC13494")]
			public SaveData()
			{
			}
		}

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D080", Offset = "0x88D080")]
		private ConfigLanguage <Language>k__BackingField;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D090", Offset = "0x88D090")]
		private bool <IsSelectedDominantHand>k__BackingField;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D0A0", Offset = "0x88D0A0")]
		private int <TeleportHand>k__BackingField;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D0B0", Offset = "0x88D0B0")]
		private int <PuzzleGunHand>k__BackingField;

		[Token(Token = "0x170001C4")]
		public ConfigLanguage Language
		{
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0xF704B4", Offset = "0xF704B4", VA = "0xF704B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895C98", Offset = "0x895C98")]
			get
			{
				return default(ConfigLanguage);
			}
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0xF704BC", Offset = "0xF704BC", VA = "0xF704BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895CA8", Offset = "0x895CA8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public bool IsSelectedDominantHand
		{
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0xF704C4", Offset = "0xF704C4", VA = "0xF704C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895CB8", Offset = "0x895CB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0xF704CC", Offset = "0xF704CC", VA = "0xF704CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895CC8", Offset = "0x895CC8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		private int TeleportHand
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0xF704D8", Offset = "0xF704D8", VA = "0xF704D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895CD8", Offset = "0x895CD8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0xF704E0", Offset = "0xF704E0", VA = "0xF704E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895CE8", Offset = "0x895CE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		private int PuzzleGunHand
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0xF704E8", Offset = "0xF704E8", VA = "0xF704E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895CF8", Offset = "0x895CF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xF704F0", Offset = "0xF704F0", VA = "0xF704F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895D08", Offset = "0x895D08")]
			set
			{
			}
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xF704F8", Offset = "0xF704F8", VA = "0xF704F8")]
		public void SetTeleportHand(HandLR handLr)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xF7051C", Offset = "0xF7051C", VA = "0xF7051C")]
		public void SetPuzzleGunHand(HandLR handLr)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xF6E990", Offset = "0xF6E990", VA = "0xF6E990")]
		public bool IsTeleportHandLeft()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xF70540", Offset = "0xF70540", VA = "0xF70540")]
		public bool IsPuzzleGunHandRight()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xF7055C", Offset = "0xF7055C", VA = "0xF7055C")]
		public void SetLanguage(ConfigLanguage lang)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xF70568", Offset = "0xF70568", VA = "0xF70568")]
		public void SelectedDominantHand()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xF70578", Offset = "0xF70578", VA = "0xF70578")]
		private SaveData MakeData()
		{
			return null;
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xF70604", Offset = "0xF70604", VA = "0xF70604", Slot = "4")]
		protected override void DoSave()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xF70670", Offset = "0xF70670", VA = "0xF70670", Slot = "5")]
		protected override void DoLoad()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xF706F4", Offset = "0xF706F4", VA = "0xF706F4")]
		public OptionSaveData()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class PlayerEpisodeSaveData : LowSaveData
	{
		[Token(Token = "0x200043A")]
		public enum EpisodeState
		{
			[Token(Token = "0x4001564")]
			NONE,
			[Token(Token = "0x4001565")]
			STAND_BY,
			[Token(Token = "0x4001566")]
			PLAYED,
			[Token(Token = "0x4001567")]
			CLEARED,
			[Token(Token = "0x4001568")]
			WAITING,
			[Token(Token = "0x4001569")]
			COMPLETED
		}

		[Serializable]
		[Token(Token = "0x200043B")]
		private class SaveData
		{
			[Token(Token = "0x400156A")]
			public const int CurrentFormatVersion = 3;

			[Token(Token = "0x400156B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int FormatVersion;

			[Token(Token = "0x400156C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EpisodeData[] EpisodeList;

			[Token(Token = "0x400156D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int AreaId;

			[Token(Token = "0x400156E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int AreaLevel;

			[Token(Token = "0x400156F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool IsPlayingSubQuest;

			[Token(Token = "0x4001570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool IsOpenTreasureFirst;

			[Token(Token = "0x4001571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
			public bool IsOpenTreasureSecond;

			[Token(Token = "0x4001572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
			public bool IsOpenTreasureThird;

			[Token(Token = "0x4001573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool IsCompletedTutorial;

			[Token(Token = "0x4001574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int TempCount;

			[Token(Token = "0x4001575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool IsPlayedOpening;

			[Token(Token = "0x60013F7")]
			[Address(RVA = "0xC14E18", Offset = "0xC14E18", VA = "0xC14E18")]
			public SaveData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200043C")]
		public class EpisodeData
		{
			[Token(Token = "0x4001576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string EpisodeProgress;

			[Token(Token = "0x4001577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int EpisodeState;

			[Token(Token = "0x4001578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int StageIndex;

			[Token(Token = "0x4001579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int SubQuestIndex;

			[Token(Token = "0x400157A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ActionData[] ActionList;

			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xC14E10", Offset = "0xC14E10", VA = "0xC14E10")]
			public EpisodeData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200043D")]
		public class ActionData
		{
			[Token(Token = "0x400157B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int actionCategory;

			[Token(Token = "0x400157C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int animalType;

			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int foodType;

			[Token(Token = "0x400157E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int garbageType;

			[Token(Token = "0x400157F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int itemType;

			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int targetId;

			[Token(Token = "0x60013F9")]
			[Address(RVA = "0xC14E08", Offset = "0xC14E08", VA = "0xC14E08")]
			public ActionData()
			{
			}
		}

		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881B08", Offset = "0x881B08")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ActionCategory category;

			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public AnimalDefine.Type aType;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FoodDefine.Type fType;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public GarbageDefine.Type gType;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ItemDefine.Type iType;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int targetId;

			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xC14CFC", Offset = "0xC14CFC", VA = "0xC14CFC")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60013FB")]
			[Address(RVA = "0xC14D04", Offset = "0xC14D04", VA = "0xC14D04")]
			internal bool <GetActionHistory>b__0(ActionData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881B18", Offset = "0x881B18")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ActionCategory category;

			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public AnimalDefine.Type aType;

			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xC14D80", Offset = "0xC14D80", VA = "0xC14D80")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xC14D88", Offset = "0xC14D88", VA = "0xC14D88")]
			internal bool <GetActionHistoryCount>b__0(ActionData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881B28", Offset = "0x881B28")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ActionCategory category;

			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FoodDefine.Type fType;

			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xC14DC4", Offset = "0xC14DC4", VA = "0xC14DC4")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xC14DCC", Offset = "0xC14DCC", VA = "0xC14DCC")]
			internal bool <GetActionHistoryCount>b__0(ActionData x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881B38", Offset = "0x881B38")]
		private sealed class <>c
		{
			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<EpisodeData, string> <>9__39_0;

			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<EpisodeData, EpisodeState> <>9__39_1;

			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<EpisodeData, string> <>9__39_2;

			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<EpisodeData, int> <>9__39_3;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<EpisodeData, string> <>9__39_4;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<EpisodeData, int> <>9__39_5;

			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<EpisodeData, string> <>9__39_6;

			[Token(Token = "0x4001593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<EpisodeData, ActionData[]> <>9__39_7;

			[Token(Token = "0x6001401")]
			[Address(RVA = "0xC14C34", Offset = "0xC14C34", VA = "0xC14C34")]
			public <>c()
			{
			}

			[Token(Token = "0x6001402")]
			[Address(RVA = "0xC14C3C", Offset = "0xC14C3C", VA = "0xC14C3C")]
			internal string <DoLoad>b__39_0(EpisodeData x)
			{
				return null;
			}

			[Token(Token = "0x6001403")]
			[Address(RVA = "0xC14C54", Offset = "0xC14C54", VA = "0xC14C54")]
			internal EpisodeState <DoLoad>b__39_1(EpisodeData y)
			{
				return default(EpisodeState);
			}

			[Token(Token = "0x6001404")]
			[Address(RVA = "0xC14C6C", Offset = "0xC14C6C", VA = "0xC14C6C")]
			internal string <DoLoad>b__39_2(EpisodeData x)
			{
				return null;
			}

			[Token(Token = "0x6001405")]
			[Address(RVA = "0xC14C84", Offset = "0xC14C84", VA = "0xC14C84")]
			internal int <DoLoad>b__39_3(EpisodeData y)
			{
				return default(int);
			}

			[Token(Token = "0x6001406")]
			[Address(RVA = "0xC14C9C", Offset = "0xC14C9C", VA = "0xC14C9C")]
			internal string <DoLoad>b__39_4(EpisodeData x)
			{
				return null;
			}

			[Token(Token = "0x6001407")]
			[Address(RVA = "0xC14CB4", Offset = "0xC14CB4", VA = "0xC14CB4")]
			internal int <DoLoad>b__39_5(EpisodeData y)
			{
				return default(int);
			}

			[Token(Token = "0x6001408")]
			[Address(RVA = "0xC14CCC", Offset = "0xC14CCC", VA = "0xC14CCC")]
			internal string <DoLoad>b__39_6(EpisodeData x)
			{
				return null;
			}

			[Token(Token = "0x6001409")]
			[Address(RVA = "0xC14CE4", Offset = "0xC14CE4", VA = "0xC14CE4")]
			internal ActionData[] <DoLoad>b__39_7(EpisodeData y)
			{
				return null;
			}
		}

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, EpisodeState> EpisodeStates;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<string, int> SubQuestCounts;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, ActionData[]> ActionHistory;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, int> EpisodeStageIds;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int CurrentAreaId;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int CurrentAreaLevel;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool IsPlayingSubQuest;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool IsOpenTreasureFirst;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool IsOpenTreasureSecond;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool IsOpenTreasureThird;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsCompletedTutorial;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int TempCount;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool IsPlayedOpening;

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x111624C", Offset = "0x111624C", VA = "0x111624C")]
		private string CreateKey(int areaId, int areaLevel)
		{
			return null;
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x11162EC", Offset = "0x11162EC", VA = "0x11162EC")]
		public void SetStageIndex(int areaId, int areaLevel, int stageIndex)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x1116378", Offset = "0x1116378", VA = "0x1116378")]
		public int GetStageIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x11163D4", Offset = "0x11163D4", VA = "0x11163D4")]
		public int GetStageIndex(int areaId, int areaLevel)
		{
			return default(int);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x1116444", Offset = "0x1116444", VA = "0x1116444")]
		public EpisodeState GetState()
		{
			return default(EpisodeState);
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x111644C", Offset = "0x111644C", VA = "0x111644C")]
		public EpisodeState GetState(int areaId, int areaLevel)
		{
			return default(EpisodeState);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x11164BC", Offset = "0x11164BC", VA = "0x11164BC")]
		public EpisodeState GetNextState(int areaId, int areaLevel)
		{
			return default(EpisodeState);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x1116534", Offset = "0x1116534", VA = "0x1116534")]
		public void NextState(int areaId, int areaLevel)
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x11166F4", Offset = "0x11166F4", VA = "0x11166F4")]
		public void NextArea(int areaId)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x1116700", Offset = "0x1116700", VA = "0x1116700")]
		public int AddSubQuestCount(int areaId, int areaLevel)
		{
			return default(int);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x1116814", Offset = "0x1116814", VA = "0x1116814")]
		public int GetSubQuestCount()
		{
			return default(int);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x11167A4", Offset = "0x11167A4", VA = "0x11167A4")]
		public int GetSubQuestCount(int areaId, int areaLevel)
		{
			return default(int);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x1116870", Offset = "0x1116870", VA = "0x1116870")]
		public void AddActionHistory(ActionCategory category, AnimalDefine.Type aType = AnimalDefine.Type.None, FoodDefine.Type fType = FoodDefine.Type.None, GarbageDefine.Type gType = GarbageDefine.Type.None, ItemDefine.Type iType = ItemDefine.Type.None, int targetId = 0)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x1116A9C", Offset = "0x1116A9C", VA = "0x1116A9C")]
		public bool GetActionHistory(ActionCategory category, AnimalDefine.Type aType = AnimalDefine.Type.None, FoodDefine.Type fType = FoodDefine.Type.None, GarbageDefine.Type gType = GarbageDefine.Type.None, ItemDefine.Type iType = ItemDefine.Type.None, int targetId = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x1116BF4", Offset = "0x1116BF4", VA = "0x1116BF4")]
		public int GetActionHistoryCount(ActionCategory category, AnimalDefine.Type aType = AnimalDefine.Type.None)
		{
			return default(int);
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x1116D28", Offset = "0x1116D28", VA = "0x1116D28")]
		public int GetActionHistoryCount(ActionCategory category, FoodDefine.Type fType = FoodDefine.Type.None)
		{
			return default(int);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x1116E5C", Offset = "0x1116E5C", VA = "0x1116E5C")]
		public void CompleteTutorial()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x1116E6C", Offset = "0x1116E6C", VA = "0x1116E6C")]
		public void UpdateTempCount(int count)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x1116E78", Offset = "0x1116E78", VA = "0x1116E78")]
		public void PlayedOpening()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x1116E88", Offset = "0x1116E88", VA = "0x1116E88")]
		public void UpdateSubQuestStatus(bool isPlaying)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x1116E98", Offset = "0x1116E98", VA = "0x1116E98")]
		public void OpenTreasureFirst(bool isOpen = true)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x1116EA8", Offset = "0x1116EA8", VA = "0x1116EA8")]
		public void OpenTreasureSecond(bool isOpen = true)
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x1116EB8", Offset = "0x1116EB8", VA = "0x1116EB8")]
		public void OpenTreasureThird(bool isOpen = true)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x1116EC8", Offset = "0x1116EC8", VA = "0x1116EC8")]
		private SaveData MakeData()
		{
			return null;
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x1117024", Offset = "0x1117024", VA = "0x1117024", Slot = "4")]
		protected override void DoSave()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x1117090", Offset = "0x1117090", VA = "0x1117090", Slot = "5")]
		protected override void DoLoad()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x111771C", Offset = "0x111771C", VA = "0x111771C")]
		public PlayerEpisodeSaveData()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x1117880", Offset = "0x1117880", VA = "0x1117880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895D18", Offset = "0x895D18")]
		private EpisodeData <MakeData>b__37_0(KeyValuePair<string, EpisodeState> x)
		{
			return null;
		}
	}
	[Token(Token = "0x2000442")]
	public class PuzzleItemSaveData : LowSaveData
	{
		[Serializable]
		[Token(Token = "0x2000443")]
		private class SaveData
		{
			[Token(Token = "0x4001598")]
			public const int CurrentFormatVersion = 1;

			[Token(Token = "0x4001599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int FormatVersion;

			[Token(Token = "0x400159A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PunchGlobeCount;

			[Token(Token = "0x400159B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int WaterGunCount;

			[Token(Token = "0x400159C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int EnchoBombCount;

			[Token(Token = "0x6001419")]
			[Address(RVA = "0xF8D008", Offset = "0xF8D008", VA = "0xF8D008")]
			public SaveData()
			{
			}
		}

		[Token(Token = "0x4001594")]
		private const int ItemMaxCount = 3;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D0C0", Offset = "0x88D0C0")]
		private int <PunchGlobeCount>k__BackingField;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D0D0", Offset = "0x88D0D0")]
		private int <WaterGunCount>k__BackingField;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D0E0", Offset = "0x88D0E0")]
		private int <EnchoBombCount>k__BackingField;

		[Token(Token = "0x170001C8")]
		public int PunchGlobeCount
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0x101D2F4", Offset = "0x101D2F4", VA = "0x101D2F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895D28", Offset = "0x895D28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600140B")]
			[Address(RVA = "0x101D2FC", Offset = "0x101D2FC", VA = "0x101D2FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895D38", Offset = "0x895D38")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public int WaterGunCount
		{
			[Token(Token = "0x600140C")]
			[Address(RVA = "0x101D304", Offset = "0x101D304", VA = "0x101D304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895D48", Offset = "0x895D48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600140D")]
			[Address(RVA = "0x101D30C", Offset = "0x101D30C", VA = "0x101D30C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895D58", Offset = "0x895D58")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public int EnchoBombCount
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0x101D314", Offset = "0x101D314", VA = "0x101D314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895D68", Offset = "0x895D68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600140F")]
			[Address(RVA = "0x101D31C", Offset = "0x101D31C", VA = "0x101D31C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895D78", Offset = "0x895D78")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public bool IsPuzzleItemFull
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0x101D4A0", Offset = "0x101D4A0", VA = "0x101D4A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CC")]
		public int GetItemMaxCount
		{
			[Token(Token = "0x6001414")]
			[Address(RVA = "0x101D4D0", Offset = "0x101D4D0", VA = "0x101D4D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x101D324", Offset = "0x101D324", VA = "0x101D324")]
		public int GetPuzzleItemCount(DebugEnumToyBlastPuzzleItemTypeDummy type)
		{
			return default(int);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x101D35C", Offset = "0x101D35C", VA = "0x101D35C")]
		public void AddPuzzleItemCount(DebugEnumToyBlastPuzzleItemTypeDummy type, int value)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x101D400", Offset = "0x101D400", VA = "0x101D400")]
		public bool ReducePuzzleItemCount(DebugEnumToyBlastPuzzleItemTypeDummy type, int value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x101D4D8", Offset = "0x101D4D8", VA = "0x101D4D8")]
		private SaveData MakeData()
		{
			return null;
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x101D55C", Offset = "0x101D55C", VA = "0x101D55C", Slot = "4")]
		protected override void DoSave()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x101D5C8", Offset = "0x101D5C8", VA = "0x101D5C8", Slot = "5")]
		protected override void DoLoad()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x101D644", Offset = "0x101D644", VA = "0x101D644")]
		public PuzzleItemSaveData()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class PuzzlePlaySaveData : LowSaveData
	{
		[Serializable]
		[Token(Token = "0x2000445")]
		public class StarCountStageData
		{
			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int EpisodeAreaId;

			[Token(Token = "0x40015A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int EpisodeId;

			[Token(Token = "0x40015A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int RoundId;

			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int StarCount;

			[Token(Token = "0x600143A")]
			[Address(RVA = "0xF8D12C", Offset = "0xF8D12C", VA = "0xF8D12C")]
			public StarCountStageData(int episodeAreaId, int episodeId, int roundId, int starCount)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000446")]
		private class SaveData
		{
			[Token(Token = "0x40015AB")]
			public const int CurrentFormatVersion = 1;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int FormatVersion;

			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EnumToyBlastPuzzlePanelType[] ShowDescriptionPanelList;

			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnumToyBlastPuzzleTileType[] ShowDescriptionTileList;

			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EnumToyBlastPuzzleOrnamentType[] ShowDescriptionOrnamentList;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool IsShowDescriptionOrnamentColorCage;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool IsShowDescriptionAppearBomb;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
			public bool IsShowDescriptionBombMix;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
			public bool IsPlayTutorial;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public StarCountStageData[] StarCountStageDataList;

			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string PuzzleDebugLogMessage;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int RetryCount;

			[Token(Token = "0x600143B")]
			[Address(RVA = "0xF8D064", Offset = "0xF8D064", VA = "0xF8D064")]
			public SaveData()
			{
			}
		}

		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881B48", Offset = "0x881B48")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int episodeAreaId;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int episodeId;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int roundId;

			[Token(Token = "0x600143C")]
			[Address(RVA = "0xF8D010", Offset = "0xF8D010", VA = "0xF8D010")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x600143D")]
			[Address(RVA = "0xF8D018", Offset = "0xF8D018", VA = "0xF8D018")]
			internal bool <GetStarCountStageData>b__0(StarCountStageData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<EnumToyBlastPuzzlePanelType> ShowDescriptionPanelList;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<EnumToyBlastPuzzleTileType> ShowDescriptionTileList;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<EnumToyBlastPuzzleOrnamentType> ShowDescriptionOrnamentList;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D0F0", Offset = "0x88D0F0")]
		private bool <IsShowDescriptionOrnamentColorCage>k__BackingField;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D100", Offset = "0x88D100")]
		private bool <IsShowDescriptionAppearBomb>k__BackingField;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D110", Offset = "0x88D110")]
		private bool <IsShowDescriptionBombMix>k__BackingField;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D120", Offset = "0x88D120")]
		private bool <IsFinishTutorial>k__BackingField;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<StarCountStageData> StarCountStageDataList;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D130", Offset = "0x88D130")]
		private string <PuzzleDebugLogMessage>k__BackingField;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D140", Offset = "0x88D140")]
		private int <RetryCount>k__BackingField;

		[Token(Token = "0x170001CD")]
		public bool IsShowDescriptionOrnamentColorCage
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0x101D8BC", Offset = "0x101D8BC", VA = "0x101D8BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895D88", Offset = "0x895D88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001421")]
			[Address(RVA = "0x101D8C4", Offset = "0x101D8C4", VA = "0x101D8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895D98", Offset = "0x895D98")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public bool IsShowDescriptionAppearBomb
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0x101D8D0", Offset = "0x101D8D0", VA = "0x101D8D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895DA8", Offset = "0x895DA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001423")]
			[Address(RVA = "0x101D8D8", Offset = "0x101D8D8", VA = "0x101D8D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895DB8", Offset = "0x895DB8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public bool IsShowDescriptionBombMix
		{
			[Token(Token = "0x6001424")]
			[Address(RVA = "0x101D8E4", Offset = "0x101D8E4", VA = "0x101D8E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895DC8", Offset = "0x895DC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001425")]
			[Address(RVA = "0x101D8EC", Offset = "0x101D8EC", VA = "0x101D8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895DD8", Offset = "0x895DD8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public bool IsFinishTutorial
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0x101D934", Offset = "0x101D934", VA = "0x101D934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895DE8", Offset = "0x895DE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600142A")]
			[Address(RVA = "0x101D93C", Offset = "0x101D93C", VA = "0x101D93C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895DF8", Offset = "0x895DF8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public string PuzzleDebugLogMessage
		{
			[Token(Token = "0x600142F")]
			[Address(RVA = "0x101DB88", Offset = "0x101DB88", VA = "0x101DB88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895E08", Offset = "0x895E08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001430")]
			[Address(RVA = "0x101DB90", Offset = "0x101DB90", VA = "0x101DB90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895E18", Offset = "0x895E18")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public int RetryCount
		{
			[Token(Token = "0x6001433")]
			[Address(RVA = "0x101DC90", Offset = "0x101DC90", VA = "0x101DC90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895E28", Offset = "0x895E28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001434")]
			[Address(RVA = "0x101DC98", Offset = "0x101DC98", VA = "0x101DC98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895E38", Offset = "0x895E38")]
			private set
			{
			}
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x101D64C", Offset = "0x101D64C", VA = "0x101D64C")]
		public bool IsContainDescriptionGimmick(EnumToyBlastPuzzlePanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x101D6B0", Offset = "0x101D6B0", VA = "0x101D6B0")]
		public bool IsContainDescriptionGimmick(EnumToyBlastPuzzleTileType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x101D714", Offset = "0x101D714", VA = "0x101D714")]
		public bool IsContainDescriptionGimmick(EnumToyBlastPuzzleOrnamentType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x101D778", Offset = "0x101D778", VA = "0x101D778")]
		public void AddDescriptionGimmick(EnumToyBlastPuzzlePanelType type)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x101D7E4", Offset = "0x101D7E4", VA = "0x101D7E4")]
		public void AddDescriptionGimmick(EnumToyBlastPuzzleTileType type)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x101D850", Offset = "0x101D850", VA = "0x101D850")]
		public void AddDescriptionGimmick(EnumToyBlastPuzzleOrnamentType type)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x101D8F8", Offset = "0x101D8F8", VA = "0x101D8F8")]
		public void AddOrnamentColorCage()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x101D90C", Offset = "0x101D90C", VA = "0x101D90C")]
		public void AddDescriptionAppearBomb()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x101D920", Offset = "0x101D920", VA = "0x101D920")]
		public void AddDescriptionBombMix()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x101D948", Offset = "0x101D948", VA = "0x101D948")]
		public void FinishTutorial()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x101D95C", Offset = "0x101D95C", VA = "0x101D95C")]
		private StarCountStageData GetStarCountStageData(int episodeAreaId, int episodeId, int roundId)
		{
			return null;
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x101DA5C", Offset = "0x101DA5C", VA = "0x101DA5C")]
		public int GetStarCount(int episodeAreaId, int episodeId, int roundId)
		{
			return default(int);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x101DA78", Offset = "0x101DA78", VA = "0x101DA78")]
		public void SetStarCount(int episodeAreaId, int episodeId, int roundId, int starCount)
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x101DB98", Offset = "0x101DB98", VA = "0x101DB98")]
		public void SetPuzzleDebugLogMessage(string message)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x101DBA4", Offset = "0x101DBA4", VA = "0x101DBA4")]
		public void OutputPuzzleDebugLogMessage()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x101DCA0", Offset = "0x101DCA0", VA = "0x101DCA0")]
		public void SetRetryCount(int count)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x101DCAC", Offset = "0x101DCAC", VA = "0x101DCAC")]
		private SaveData MakeData()
		{
			return null;
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x101DDE8", Offset = "0x101DDE8", VA = "0x101DDE8", Slot = "4")]
		protected override void DoSave()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x101DE54", Offset = "0x101DE54", VA = "0x101DE54", Slot = "5")]
		protected override void DoLoad()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x101DF7C", Offset = "0x101DF7C", VA = "0x101DF7C")]
		public PuzzlePlaySaveData()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class SaveDataManager : Singleton<SaveDataManager>
	{
		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<LowSaveData> _saveList;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuzzleItemSaveData PuzzleItemData;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OptionSaveData OptionData;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerEpisodeSaveData EpisodeSaveData;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PuzzlePlaySaveData PuzzlePlaySaveData;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D150", Offset = "0x88D150")]
		private bool <IsLoadSuccess>k__BackingField;

		[Token(Token = "0x170001D3")]
		public bool IsLoadSuccess
		{
			[Token(Token = "0x600143E")]
			[Address(RVA = "0x1026AEC", Offset = "0x1026AEC", VA = "0x1026AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895E48", Offset = "0x895E48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600143F")]
			[Address(RVA = "0x1026AF4", Offset = "0x1026AF4", VA = "0x1026AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895E58", Offset = "0x895E58")]
			private set
			{
			}
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x1026B00", Offset = "0x1026B00", VA = "0x1026B00")]
		public SaveDataManager()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x1026BC0", Offset = "0x1026BC0", VA = "0x1026BC0")]
		private void CreateSaveData()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x1026D84", Offset = "0x1026D84", VA = "0x1026D84")]
		public void LoadAllData()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x1026FE0", Offset = "0x1026FE0", VA = "0x1026FE0")]
		public void ResetAllData()
		{
		}

		[Token(Token = "0x6001444")]
		private void SetupInstance<T>(out T property, LowSaveData instance) where T : LowSaveData
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x1027004", Offset = "0x1027004", VA = "0x1027004")]
		private void SaveAll()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x1026EC8", Offset = "0x1026EC8", VA = "0x1026EC8")]
		private void LoadAll()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public static class SaveDataUtility
	{
		[Token(Token = "0x6001447")]
		[Address(RVA = "0x102711C", Offset = "0x102711C", VA = "0x102711C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x10272AC", Offset = "0x10272AC", VA = "0x10272AC")]
		public static void ResetSaveDataFromOption()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x102719C", Offset = "0x102719C", VA = "0x102719C")]
		private static void SetupConfigLanguage()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x10273A4", Offset = "0x10273A4", VA = "0x10273A4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895E68", Offset = "0x895E68")]
		public static void DebugSaveReset()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public enum SaveKey
	{
		[Token(Token = "0x40015C1")]
		OptionData = 15,
		[Token(Token = "0x40015C2")]
		PuzzleItemData = 16,
		[Token(Token = "0x40015C3")]
		PuzzleDescriptionData = 17,
		[Token(Token = "0x40015C4")]
		PlayerEpisodeData = 20,
		[Token(Token = "0x40015C5")]
		PuzzlePlayData = 21
	}
	[Token(Token = "0x200044B")]
	public static class KeyHolder
	{
		[Token(Token = "0x600144B")]
		[Address(RVA = "0x107D404", Offset = "0x107D404", VA = "0x107D404")]
		public static string Get(SaveKey saveKey)
		{
			return null;
		}
	}
}
namespace Common.Define
{
	[Token(Token = "0x200044C")]
	public static class AnimalDefine
	{
		[Token(Token = "0x200044D")]
		public enum Type
		{
			[Token(Token = "0x40015C7")]
			None,
			[Token(Token = "0x40015C8")]
			Fennec,
			[Token(Token = "0x40015C9")]
			Kaba,
			[Token(Token = "0x40015CA")]
			Kirin,
			[Token(Token = "0x40015CB")]
			Lion,
			[Token(Token = "0x40015CC")]
			Panda,
			[Token(Token = "0x40015CD")]
			Saru,
			[Token(Token = "0x40015CE")]
			Usagi,
			[Token(Token = "0x40015CF")]
			Wani,
			[Token(Token = "0x40015D0")]
			Zou
		}
	}
	[Token(Token = "0x200044E")]
	public static class Anim
	{
		[Token(Token = "0x40015D1")]
		public const string ANIMAL_SWIM = "Swim";

		[Token(Token = "0x40015D2")]
		public const string ANIMAL_IDLE = "Idle";

		[Token(Token = "0x40015D3")]
		public const string ANIMAL_WALK = "Walk";

		[Token(Token = "0x40015D4")]
		public const string ANIMAL_TIRED = "Tired";

		[Token(Token = "0x40015D5")]
		public const string ANIMAL_DOWN = "Down";

		[Token(Token = "0x40015D6")]
		public const string ANIMAL_JOY = "Joy";

		[Token(Token = "0x40015D7")]
		public const string ANIMAL_SLEEP = "Sleep";

		[Token(Token = "0x40015D8")]
		public const string ANIMAL_STAND_UP = "StandUp";

		[Token(Token = "0x40015D9")]
		public const string ANIMAL_APPEAL = "Appeal";

		[Token(Token = "0x40015DA")]
		public const string ANIMAL_EAT = "Eat";

		[Token(Token = "0x40015DB")]
		public const string ANIMAL_POWER_UP = "PowerUp";

		[Token(Token = "0x40015DC")]
		public const string ANIMAL_LOSE = "Lose";

		[Token(Token = "0x40015DD")]
		public const string ANIMAL_SMALL_APPEAL = "SmallAppeal";

		[Token(Token = "0x40015DE")]
		public const string ANIMAL_ANGRY = "Angry";

		[Token(Token = "0x40015DF")]
		public const string ANIMAL_SMALL_LOSE = "SmallLose";

		[Token(Token = "0x40015E0")]
		public const string ANIMAL_GRABBED = "Grabbed";

		[Token(Token = "0x40015E1")]
		public const string VISITOR_IDLE = "Idle";

		[Token(Token = "0x40015E2")]
		public const string VISITOR_WALK = "Walk";

		[Token(Token = "0x40015E3")]
		public const string VISITOR_CLAP = "Clap";

		[Token(Token = "0x40015E4")]
		public const string VISITOR_SIT = "Sit";

		[Token(Token = "0x40015E5")]
		public const string VISITOR_ONEGAI = "Onegai";

		[Token(Token = "0x40015E6")]
		public const string VISITOR_LOOK_UP = "LookUp";

		[Token(Token = "0x40015E7")]
		public const string VISITOR_ONE_HAND = "OneHand";

		[Token(Token = "0x40015E8")]
		public const string VISITOR_BOTH_HAND = "BothHand";

		[Token(Token = "0x40015E9")]
		public const string VISITOR_BANZAI = "Banzai";

		[Token(Token = "0x40015EA")]
		public const string VISITOR_ZANNEN = "Zannen";
	}
	[Token(Token = "0x200044F")]
	public enum ConfigLanguage
	{
		[Token(Token = "0x40015EC")]
		None,
		[Token(Token = "0x40015ED")]
		En,
		[Token(Token = "0x40015EE")]
		Ja
	}
	[Token(Token = "0x2000450")]
	public static class FoodDefine
	{
		[Token(Token = "0x2000451")]
		public enum Type
		{
			[Token(Token = "0x40015F0")]
			None,
			[Token(Token = "0x40015F1")]
			Banana,
			[Token(Token = "0x40015F2")]
			Carrot,
			[Token(Token = "0x40015F3")]
			Grass,
			[Token(Token = "0x40015F4")]
			Donuts,
			[Token(Token = "0x40015F5")]
			Ebi,
			[Token(Token = "0x40015F6")]
			SasaLeaf,
			[Token(Token = "0x40015F7")]
			Hamburger,
			[Token(Token = "0x40015F8")]
			Niku,
			[Token(Token = "0x40015F9")]
			Apple,
			[Token(Token = "0x40015FA")]
			Steak,
			[Token(Token = "0x40015FB")]
			Sushi,
			[Token(Token = "0x40015FC")]
			Tomato,
			[Token(Token = "0x40015FD")]
			Fish_Aji,
			[Token(Token = "0x40015FE")]
			Fish_Hirame,
			[Token(Token = "0x40015FF")]
			Fish_Ika
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x12B0E68", Offset = "0x12B0E68", VA = "0x12B0E68")]
		public static string GetFoodName(this Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x2000452")]
	public static class GarbageDefine
	{
		[Token(Token = "0x2000453")]
		public enum Type
		{
			[Token(Token = "0x4001601")]
			None,
			[Token(Token = "0x4001602")]
			BananaPeel,
			[Token(Token = "0x4001603")]
			Bottle,
			[Token(Token = "0x4001604")]
			ChickenBone,
			[Token(Token = "0x4001605")]
			EatenApple,
			[Token(Token = "0x4001606")]
			FishBone,
			[Token(Token = "0x4001607")]
			GarbageBag,
			[Token(Token = "0x4001608")]
			Poop,
			[Token(Token = "0x4001609")]
			SodaCan,
			[Token(Token = "0x400160A")]
			WaterBottle,
			[Token(Token = "0x400160B")]
			Watermelon,
			[Token(Token = "0x400160C")]
			WineBottle,
			[Token(Token = "0x400160D")]
			PaperWaste,
			[Token(Token = "0x400160E")]
			Dirt
		}
	}
	[Token(Token = "0x2000454")]
	public static class ItemDefine
	{
		[Token(Token = "0x2000455")]
		public enum Type
		{
			[Token(Token = "0x4001610")]
			None,
			[Token(Token = "0x4001611")]
			FishingRod,
			[Token(Token = "0x4001612")]
			FishingFloat,
			[Token(Token = "0x4001613")]
			CleaningHose,
			[Token(Token = "0x4001614")]
			GreenCocktail,
			[Token(Token = "0x4001615")]
			RedCocktail,
			[Token(Token = "0x4001616")]
			BlueCocktail,
			[Token(Token = "0x4001617")]
			DeckBrush,
			[Token(Token = "0x4001618")]
			Medal,
			[Token(Token = "0x4001619")]
			Person
		}
	}
	[Token(Token = "0x2000456")]
	public static class SoundConst
	{
		[Token(Token = "0x400161A")]
		public const string CLICK = "Click";

		[Token(Token = "0x400161B")]
		public const string QUEST_ALL_CLEAR = "QuestAllClear";

		[Token(Token = "0x400161C")]
		public const string COMPLETE_MISSION = "6_CompleteMission";

		[Token(Token = "0x400161D")]
		public const string GARBAGE_CATCH = "31_GarbageCatch";

		[Token(Token = "0x400161E")]
		public const string FOOD_THROW = "63_Throw";

		[Token(Token = "0x400161F")]
		public const string ITEM_THROW = "67_Throw";
	}
	[Token(Token = "0x2000457")]
	public static class SoundParam
	{
		[Token(Token = "0x2000458")]
		public enum BgmType
		{
			[Token(Token = "0x4001621")]
			None,
			[Token(Token = "0x4001622")]
			ZooMain,
			[Token(Token = "0x4001623")]
			ZooSubQuest,
			[Token(Token = "0x4001624")]
			ZooSubQuestFinding,
			[Token(Token = "0x4001625")]
			ZooAnimalEscape,
			[Token(Token = "0x4001626")]
			ToyBlastPuzzleArea1,
			[Token(Token = "0x4001627")]
			ToyBlastPuzzleArea2,
			[Token(Token = "0x4001628")]
			ToyBlastPuzzleArea3,
			[Token(Token = "0x4001629")]
			ToyBlastPuzzleArea4,
			[Token(Token = "0x400162A")]
			ToyBlastPuzzleArea5,
			[Token(Token = "0x400162B")]
			ToyBlastPuzzleArea6,
			[Token(Token = "0x400162C")]
			ToyBlastPuzzleArea7
		}
	}
	[Token(Token = "0x2000459")]
	public static class SoundFunc
	{
		[Token(Token = "0x600144D")]
		[Address(RVA = "0xE12DA0", Offset = "0xE12DA0", VA = "0xE12DA0")]
		public static string GetBgmFilePath(SoundParam.BgmType type)
		{
			return null;
		}
	}
}
namespace Common.Utility
{
	[Token(Token = "0x200045A")]
	public class OnlyOneBehavior<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x170001D4")]
		public static T Instance
		{
			[Token(Token = "0x600144E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600144F")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001450")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001451")]
		public OnlyOneBehavior()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class CircleOutline : BaseMeshEffect
	{
		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_EffectColor;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2 m_EffectDistance;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 m_EffectOffset;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_nEffectNumber;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool m_UseGraphicAlpha;

		[Token(Token = "0x170001D5")]
		public Color EffectColor
		{
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x127869C", Offset = "0x127869C", VA = "0x127869C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001452")]
			[Address(RVA = "0x1278690", Offset = "0x1278690", VA = "0x1278690")]
			set
			{
			}
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x12786A8", Offset = "0x12786A8", VA = "0x12786A8", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x1278780", Offset = "0x1278780", VA = "0x1278780")]
		private void ModifyVertices(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x1278864", Offset = "0x1278864", VA = "0x1278864")]
		private void ApplyShadow(List<UIVertex> verts, int start, int end, float x, float y)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x1278AE8", Offset = "0x1278AE8", VA = "0x1278AE8")]
		public CircleOutline()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public static class CompJsonLoader
	{
		[Token(Token = "0x6001458")]
		public static void WriteData<T>(T value, string filename)
		{
		}

		[Token(Token = "0x6001459")]
		public static void WriteDataWithBackup<T>(T value, string filename)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x127A668", Offset = "0x127A668", VA = "0x127A668")]
		private static void SaveToFile(string json, string filename)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x127AD5C", Offset = "0x127AD5C", VA = "0x127AD5C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895EB0", Offset = "0x895EB0")]
		private static void SaveToFileForDebug(string json, string filename)
		{
		}

		[Token(Token = "0x600145C")]
		public static T ReadData<T>(string filename) where T : class, new()
		{
			return null;
		}

		[Token(Token = "0x600145D")]
		public static T ReadDataWithBackup<T>(string filename) where T : class, new()
		{
			return null;
		}

		[Token(Token = "0x600145E")]
		private static T LoadFromFile<T>(string path) where T : class, new()
		{
			return null;
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x127AF0C", Offset = "0x127AF0C", VA = "0x127AF0C")]
		public static void RemoveFile(string filename)
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x127ACEC", Offset = "0x127ACEC", VA = "0x127ACEC")]
		private static string GetSavePath(string filename)
		{
			return null;
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x127AF4C", Offset = "0x127AF4C", VA = "0x127AF4C")]
		private static void RenameToBackup(string filename)
		{
		}
	}
	[Token(Token = "0x200045D")]
	public static class DeepCopyUtility
	{
		[Token(Token = "0x6001462")]
		public static T DeepCopyBySerialize<T>(T target) where T : class
		{
			return null;
		}

		[Token(Token = "0x6001463")]
		public static T DeepCopyByJson<T>(T target) where T : class
		{
			return null;
		}
	}
	[Token(Token = "0x200045E")]
	public static class DirectoryUtility
	{
		[Token(Token = "0x6001464")]
		[Address(RVA = "0x122E0FC", Offset = "0x122E0FC", VA = "0x122E0FC")]
		public static void SafeCreateDirectory(string path)
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class LifeCycleObject
	{
		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D1B0", Offset = "0x88D1B0")]
		private bool <IsAlive>k__BackingField;

		[Token(Token = "0x170001D6")]
		public bool IsAlive
		{
			[Token(Token = "0x6001465")]
			[Address(RVA = "0x107F03C", Offset = "0x107F03C", VA = "0x107F03C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895EE8", Offset = "0x895EE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x107F044", Offset = "0x107F044", VA = "0x107F044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x895EF8", Offset = "0x895EF8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x107F050", Offset = "0x107F050", VA = "0x107F050")]
		public LifeCycleObject()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x107F07C", Offset = "0x107F07C", VA = "0x107F07C")]
		public void OnDestroy()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public static class MiscUtility
	{
		[Token(Token = "0x6001469")]
		[Address(RVA = "0x13A4324", Offset = "0x13A4324", VA = "0x13A4324")]
		public static int SafeIntParse(string value)
		{
			return default(int);
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x13A4350", Offset = "0x13A4350", VA = "0x13A4350")]
		public static float SafeFloatParse(string value)
		{
			return default(float);
		}

		[Token(Token = "0x600146B")]
		public static bool SafeEnumParse<T>(ref T enumOut, string enumText) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x13A437C", Offset = "0x13A437C", VA = "0x13A437C")]
		public static Bounds CalcScaleBoundSize(MeshFilter meshFilter)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x13A46C8", Offset = "0x13A46C8", VA = "0x13A46C8")]
		public static Vector3 CalcWorldBoundCenter(Transform transform, Vector3 boundCenter)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x13A46E0", Offset = "0x13A46E0", VA = "0x13A46E0")]
		public static bool CalcInCameraView(Matrix4x4 vpMatrix, Vector3 originalPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x13A47A0", Offset = "0x13A47A0", VA = "0x13A47A0")]
		public static int ClampLoop(int value, int min, int max)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000461")]
	public static class PlayerPrefsUtility
	{
		[Token(Token = "0x6001470")]
		[Address(RVA = "0x101417C", Offset = "0x101417C", VA = "0x101417C")]
		public static bool SavePlayerPrefs(string keyString, string saveString)
		{
			return default(bool);
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x101427C", Offset = "0x101427C", VA = "0x101427C")]
		public static string LoadPlayerPrefs(string keyString)
		{
			return null;
		}

		[Token(Token = "0x6001472")]
		public static void WriteData<T>(T value, string key)
		{
		}

		[Token(Token = "0x6001473")]
		public static T ReadData<T>(string key) where T : class
		{
			return null;
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x1014464", Offset = "0x1014464", VA = "0x1014464")]
		public static bool SaveCompressPlayerPrefs(string keyString, string saveString)
		{
			return default(bool);
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x1014918", Offset = "0x1014918", VA = "0x1014918")]
		public static string LoadCompressPlayerPrefs(string keyString)
		{
			return null;
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x1014FEC", Offset = "0x1014FEC", VA = "0x1014FEC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x895F08", Offset = "0x895F08")]
		private static void SaveToFileForDebug(string json, string filename)
		{
		}
	}
	[Token(Token = "0x2000462")]
	public static class SceneUtility
	{
		[Token(Token = "0x2000463")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881B68", Offset = "0x881B68")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Scene currentScene;

			[Token(Token = "0x4001636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action callback;

			[Token(Token = "0x6001481")]
			[Address(RVA = "0xF8E9FC", Offset = "0xF8E9FC", VA = "0xF8E9FC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001482")]
			[Address(RVA = "0xF8EA04", Offset = "0xF8EA04", VA = "0xF8EA04")]
			internal void <LoadResidentScene>b__0()
			{
			}
		}

		[Token(Token = "0x2000464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881B78", Offset = "0x881B78")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MonoBehaviour behaviour;

			[Token(Token = "0x4001638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string sceneName;

			[Token(Token = "0x4001639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action completeCb;

			[Token(Token = "0x400163A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action <>9__1;

			[Token(Token = "0x6001483")]
			[Address(RVA = "0xF8EA88", Offset = "0xF8EA88", VA = "0xF8EA88")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001484")]
			[Address(RVA = "0xF8EA90", Offset = "0xF8EA90", VA = "0xF8EA90")]
			internal void <LoadSceneSync>b__0()
			{
			}

			[Token(Token = "0x6001485")]
			[Address(RVA = "0xF8EB48", Offset = "0xF8EB48", VA = "0xF8EB48")]
			internal void <LoadSceneSync>b__1()
			{
			}
		}

		[Token(Token = "0x2000465")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881B88", Offset = "0x881B88")]
		private sealed class <CoroutineLoadSceneAsync>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400163B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400163C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400163D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sceneName;

			[Token(Token = "0x400163E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x170001D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001489")]
				[Address(RVA = "0xF8F0A0", Offset = "0xF8F0A0", VA = "0xF8F0A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600148B")]
				[Address(RVA = "0xF8F0E8", Offset = "0xF8F0E8", VA = "0xF8F0E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001486")]
			[Address(RVA = "0xF8EF74", Offset = "0xF8EF74", VA = "0xF8EF74")]
			[DebuggerHidden]
			public <CoroutineLoadSceneAsync>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001487")]
			[Address(RVA = "0xF8EFA0", Offset = "0xF8EFA0", VA = "0xF8EFA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001488")]
			[Address(RVA = "0xF8EFA4", Offset = "0xF8EFA4", VA = "0xF8EFA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600148A")]
			[Address(RVA = "0xF8F0A8", Offset = "0xF8F0A8", VA = "0xF8F0A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000466")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881B98", Offset = "0x881B98")]
		private sealed class <CoroutineLoadSceneSync>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400163F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sceneName;

			[Token(Token = "0x4001642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x4001643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Scene <scene>5__2;

			[Token(Token = "0x170001D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600148F")]
				[Address(RVA = "0xF8F228", Offset = "0xF8F228", VA = "0xF8F228", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001491")]
				[Address(RVA = "0xF8F270", Offset = "0xF8F270", VA = "0xF8F270", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600148C")]
			[Address(RVA = "0xF8F0F0", Offset = "0xF8F0F0", VA = "0xF8F0F0")]
			[DebuggerHidden]
			public <CoroutineLoadSceneSync>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600148D")]
			[Address(RVA = "0xF8F11C", Offset = "0xF8F11C", VA = "0xF8F11C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600148E")]
			[Address(RVA = "0xF8F120", Offset = "0xF8F120", VA = "0xF8F120", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001490")]
			[Address(RVA = "0xF8F230", Offset = "0xF8F230", VA = "0xF8F230", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000467")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881BA8", Offset = "0x881BA8")]
		private sealed class <CoroutineDelayedUnloadAll>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action cb;

			[Token(Token = "0x4001647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<string>.Enumerator <>7__wrap1;

			[Token(Token = "0x170001DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001496")]
				[Address(RVA = "0xF8EF24", Offset = "0xF8EF24", VA = "0xF8EF24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001498")]
				[Address(RVA = "0xF8EF6C", Offset = "0xF8EF6C", VA = "0xF8EF6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001492")]
			[Address(RVA = "0xF8EB84", Offset = "0xF8EB84", VA = "0xF8EB84")]
			[DebuggerHidden]
			public <CoroutineDelayedUnloadAll>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001493")]
			[Address(RVA = "0xF8EBB0", Offset = "0xF8EBB0", VA = "0xF8EBB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001494")]
			[Address(RVA = "0xF8EC20", Offset = "0xF8EC20", VA = "0xF8EC20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001495")]
			[Address(RVA = "0xF8EBCC", Offset = "0xF8EBCC", VA = "0xF8EBCC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001497")]
			[Address(RVA = "0xF8EF2C", Offset = "0xF8EF2C", VA = "0xF8EF2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001634")]
		private const string ResidentSceneName = "ResidentSystem";

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x1027758", Offset = "0x1027758", VA = "0x1027758")]
		public static void LoadResidentScene(MonoBehaviour behaviour, Action callback)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x1027948", Offset = "0x1027948", VA = "0x1027948")]
		public static void LoadSceneSync(MonoBehaviour behaviour, string sceneName, Action completeCb)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x101E224", Offset = "0x101E224", VA = "0x101E224")]
		public static void CheckResidentScene()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x1027A88", Offset = "0x1027A88", VA = "0x1027A88")]
		public static void ManualLoadSceneStart()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x1027B34", Offset = "0x1027B34", VA = "0x1027B34")]
		public static void ManualLoadSceneFinish()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x10278D0", Offset = "0x10278D0", VA = "0x10278D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x895F40", Offset = "0x895F40")]
		private static IEnumerator CoroutineLoadSceneAsync(string sceneName, Action callback)
		{
			return null;
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x1027B3C", Offset = "0x1027B3C", VA = "0x1027B3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x895FA0", Offset = "0x895FA0")]
		private static IEnumerator CoroutineLoadSceneSync(string sceneName, Action callback)
		{
			return null;
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x1027A1C", Offset = "0x1027A1C", VA = "0x1027A1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x896000", Offset = "0x896000")]
		private static IEnumerator CoroutineDelayedUnloadAll(Action cb)
		{
			return null;
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x1027B38", Offset = "0x1027B38", VA = "0x1027B38")]
		private static void NotifySceneLoaded()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x1027A8C", Offset = "0x1027A8C", VA = "0x1027A8C")]
		private static void ChangeSceneReset()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public static class SimpleUniqueId
	{
		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _uniqueId;

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xE0CE5C", Offset = "0xE0CE5C", VA = "0xE0CE5C")]
		public static int Id()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000469")]
	public class Singleton<T> where T : class, new()
	{
		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D1C0", Offset = "0x88D1C0")]
		private static T <Instance>k__BackingField;

		[Token(Token = "0x170001DD")]
		public static T Instance
		{
			[Token(Token = "0x600149C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896150", Offset = "0x896150")]
			get
			{
				return null;
			}
			[Token(Token = "0x600149D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896160", Offset = "0x896160")]
			private set
			{
			}
		}

		[Token(Token = "0x600149B")]
		protected Singleton()
		{
		}

		[Token(Token = "0x600149E")]
		public static void ResetInstance()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public static class TimeUtility
	{
		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly DateTime UnixEpoch;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static TimeZoneInfo _jstTimeZoneInfo;

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xFA1C4C", Offset = "0xFA1C4C", VA = "0xFA1C4C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xFA1D38", Offset = "0xFA1D38", VA = "0xFA1D38")]
		private static long GetNowPhone()
		{
			return default(long);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xFA1EA8", Offset = "0xFA1EA8", VA = "0xFA1EA8")]
		public static long GetPassUnixTime(int preUnixTime)
		{
			return default(long);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xFA1F0C", Offset = "0xFA1F0C", VA = "0xFA1F0C")]
		public static long GetNowServerTime()
		{
			return default(long);
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xFA1F64", Offset = "0xFA1F64", VA = "0xFA1F64")]
		public static DateTime ToLocalDateTime(long unixTime)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xFA1FFC", Offset = "0xFA1FFC", VA = "0xFA1FFC")]
		private static DateTime ToJstDateTime(long unixTime)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xFA1DD0", Offset = "0xFA1DD0", VA = "0xFA1DD0")]
		public static long ToUnixTime(DateTime dateTime)
		{
			return default(long);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xFA2098", Offset = "0xFA2098", VA = "0xFA2098")]
		public static long GetLoginDateTime(long unixTime)
		{
			return default(long);
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xFA21D8", Offset = "0xFA21D8", VA = "0xFA21D8")]
		public static long GetNextLoginRestTime()
		{
			return default(long);
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xFA2240", Offset = "0xFA2240", VA = "0xFA2240")]
		public static int ConvertSecondFromDay(int day)
		{
			return default(int);
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xFA22A8", Offset = "0xFA22A8", VA = "0xFA22A8")]
		public static int ConvertSecondFromHour(int hour)
		{
			return default(int);
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xFA22B4", Offset = "0xFA22B4", VA = "0xFA22B4")]
		public static string LocalTimeToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x881BB8", Offset = "0x881BB8")]
	public class EnumActionAttribute : PropertyAttribute
	{
		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type EnumType;

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x1231300", Offset = "0x1231300", VA = "0x1231300")]
		public EnumActionAttribute(Type enumType)
		{
		}
	}
	[Token(Token = "0x200046C")]
	public static class NativeMemoryInfo
	{
		[Serializable]
		[Token(Token = "0x200046D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881BCC", Offset = "0x881BCC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ThreadStart <>9__7_0;

			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xC0F68C", Offset = "0xC0F68C", VA = "0xC0F68C")]
			public <>c()
			{
			}

			[Token(Token = "0x60014B4")]
			[Address(RVA = "0xC0F694", Offset = "0xC0F694", VA = "0xC0F694")]
			internal void <AndroidUsedMemorySize>b__7_0()
			{
			}
		}

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass _androidMemoryUtilityClass;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static long _androidUsedMemorySize;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Thread _androidThread;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool _androidInitialize;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static CustomSampler _customMemory;

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x13A7820", Offset = "0x13A7820", VA = "0x13A7820")]
		public static long GetUsedMemorySize()
		{
			return default(long);
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x13A7A50", Offset = "0x13A7A50", VA = "0x13A7A50")]
		public static long GetFreeMemorySize()
		{
			return default(long);
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x13A7824", Offset = "0x13A7824", VA = "0x13A7824")]
		private static long AndroidUsedMemorySize()
		{
			return default(long);
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x13A7A54", Offset = "0x13A7A54", VA = "0x13A7A54")]
		private static long AndroidAvailMemory()
		{
			return default(long);
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle
{
	[Token(Token = "0x200046E")]
	public class ToyBlastPuzzleManager : MonoBehaviour
	{
		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ToyBlastPuzzleManager _instance;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ShaderVariantCollection _shaderVariantCollection;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToyBlastVrManager _toyBlastVrManager;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ToyBlastPuzzleUiManager _toyBlastPuzzleUiManager;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ToyBlastPuzzleStartProductionManager _toyBlastPuzzleStartProductionManager;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ToyBlastPuzzleEndProductionManager _toyBlastPuzzleEndProductionManager;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ToyBlastPuzzleDescriptionGimmickManager _toyBlastPuzzleDescriptionGimmickManager;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string _toyBlastPuzzleTutorialManagerPrefabFilePath;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ToyBlastPuzzleTutorialManager _toyBlastPuzzleTutorialManagerCash;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ToyBlastPuzzleEffectManager _toyBlastPuzzleEffectManager;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ToyBlastPuzzleSoundManager _toyBlastPuzzleSoundManager;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly ToyBlastPuzzleStageInfoManager _toyBlastPuzzleStageInfoManager;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly ToyBlastPuzzleStagePanelPos _toyBlastPuzzleStagePanelPos;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ToyBlastPuzzleStageInfo StageInfo;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int BoardMaxRaw;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int BoardMaxLine;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int BoardMaxCount;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private EnumToyBlastPuzzleMainState _mainState;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _isCallFinishPuzzleScene;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _initStateValue;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88D260", Offset = "0x88D260")]
		private GameObject _boardGameObject;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject _playerGameObject;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject _tileParentGameObject;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject _tileFrameParentGameObject;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject _panelParentGameObject;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject _effectParentGameObject;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GameObject _ornamentParentGameObject;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ToyBlastPuzzlePanel _panelPrefabScript;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private ToyBlastPuzzleTile _tilePrefabScript;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private ToyBlastPuzzleTileFrame _tileFramePrefabScript;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private ToyBlastPuzzleOrnament _ornamentPrefabScript;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly ToyBlastPuzzleFuncStageInfoUpdate _toyBlastPuzzleFuncStageInfoUpdate;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly ToyBlastPuzzleFuncBoardPosition _toyBlastPuzzleFuncBoardPosition;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly ToyBlastPuzzleFuncTileCreate _toyBlastPuzzleFuncTileCreate;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private readonly ToyBlastPuzzleFuncTileFrameCreate _toyBlastPuzzleFuncTileFrameCreate;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private readonly ToyBlastPuzzleFuncTileUpdate _toyBlastPuzzleFuncTileUpdate;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private readonly ToyBlastPuzzleFuncPanelCreate _toyBlastPuzzleFuncPanelCreate;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private readonly ToyBlastPuzzleFuncPanelUpdate _toyBlastPuzzleFuncPanelUpdate;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private readonly ToyBlastPuzzleFuncLaserPointer _toyBlastPuzzleFuncLaserPointer;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private readonly ToyBlastPuzzleFuncFall _toyBlastPuzzleFuncFall;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private readonly ToyBlastPuzzleFuncMatchingGroup _toyBlastPuzzleFuncMatchingGroup;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private readonly ToyBlastPuzzleFuncCalcPrioritySelectPanel _toyBlastPuzzleFuncCalcPrioritySelectPanel;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private readonly ToyBlastPuzzleFuncBoardShuffle _toyBlastPuzzleFuncBoardShuffle;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private readonly ToyBlastPuzzleFuncEraseChangeTile _toyBlastPuzzleFuncEraseChangeTile;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private readonly ToyBlastPuzzleFuncEraseChangePanel _toyBlastPuzzleFuncEraseChangePanel;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private readonly ToyBlastPuzzleFuncEraseFallPocket _toyBlastPuzzleFuncEraseFallPocket;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private readonly ToyBlastPuzzleFuncEraseChain _toyBlastPuzzleFuncEraseChain;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private readonly ToyBlastPuzzleFuncTouchErasePanel _toyBlastPuzzleFuncTouchErasePanel;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private readonly ToyBlastPuzzleFuncExplodeBombTouch _toyBlastPuzzleFuncExplodeBombTouch;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private readonly ToyBlastPuzzleFuncExplodeBombUpdate _toyBlastPuzzleFuncExplodeBombUpdate;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private readonly ToyBlastPuzzleFuncOrnamentCreate _toyBlastPuzzleFuncOrnamentCreate;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private readonly ToyBlastPuzzleFuncOrnamentUpdate _toyBlastPuzzleFuncOrnamentUpdate;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private readonly ToyBlastPuzzleFuncReliefMeasure _toyBlastPuzzleFuncReliefMeasure;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public ToyBlastPuzzleFuncBaseInitInfo InitInfo;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool _isInitManagerFuncBase;

		[Token(Token = "0x400168B")]
		private const string GamePauseKey = "OnGamePauseSubject";

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private readonly List<string> _pauseTimeScaleCommandList;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D34C", Offset = "0x88D34C")]
		private bool <IsPauseTimeScale>k__BackingField;

		[Token(Token = "0x170001DE")]
		public static ToyBlastPuzzleManager Instance
		{
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0xF88C5C", Offset = "0xF88C5C", VA = "0xF88C5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		public static int InvalidIndex
		{
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0xF783A0", Offset = "0xF783A0", VA = "0xF783A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E0")]
		public List<ToyBlastPuzzlePanelInfo> PanelInfoList
		{
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0xF78568", Offset = "0xF78568", VA = "0xF78568")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public List<ToyBlastPuzzleTileInfo> TileInfoList
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0xF785E4", Offset = "0xF785E4", VA = "0xF785E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		public List<ToyBlastPuzzleOrnamentInfo> OrnamentInfoList
		{
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0xF78660", Offset = "0xF78660", VA = "0xF78660")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		public Dictionary<ToyBlastPuzzlePanelInfo, ToyBlastPuzzlePanel> PanelScriptDictionary
		{
			[Token(Token = "0x60014F7")]
			[Address(RVA = "0xF786DC", Offset = "0xF786DC", VA = "0xF786DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public Dictionary<ToyBlastPuzzleTileInfo, ToyBlastPuzzleTile> TileScriptDictionary
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0xF78758", Offset = "0xF78758", VA = "0xF78758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		public Dictionary<ToyBlastPuzzleOrnamentInfo, ToyBlastPuzzleOrnament> OrnamentScriptDictionary
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0xF787D4", Offset = "0xF787D4", VA = "0xF787D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		public List<List<int>> MatchingGroupIndexList
		{
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0xF78850", Offset = "0xF78850", VA = "0xF78850")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		public Dictionary<ToyBlastPuzzlePanelInfo, List<int>> PanelInfoGroupIndexListDictionary
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0xF788CC", Offset = "0xF788CC", VA = "0xF788CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E8")]
		public int CurrentSelectPanelIndex
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0xF78948", Offset = "0xF78948", VA = "0xF78948")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E9")]
		public List<int> DamageAreaIndexList
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0xF78B48", Offset = "0xF78B48", VA = "0xF78B48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		public int CurrentEpisodeAreaId
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0xF77154", Offset = "0xF77154", VA = "0xF77154")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001EB")]
		public int CurrentEpisodeId
		{
			[Token(Token = "0x6001513")]
			[Address(RVA = "0xF77170", Offset = "0xF77170", VA = "0xF77170")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001EC")]
		public int CurrentRoundId
		{
			[Token(Token = "0x6001514")]
			[Address(RVA = "0xF771A8", Offset = "0xF771A8", VA = "0xF771A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001ED")]
		public int CurrentStageInfoListIndex
		{
			[Token(Token = "0x6001515")]
			[Address(RVA = "0xF8B3F0", Offset = "0xF8B3F0", VA = "0xF8B3F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001EE")]
		public bool IsPauseTimeScale
		{
			[Token(Token = "0x6001519")]
			[Address(RVA = "0xF8B618", Offset = "0xF8B618", VA = "0xF8B618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896170", Offset = "0x896170")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600151A")]
			[Address(RVA = "0xF8B620", Offset = "0xF8B620", VA = "0xF8B620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896180", Offset = "0x896180")]
			private set
			{
			}
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xF88CA8", Offset = "0xF88CA8", VA = "0xF88CA8")]
		public void HideUiCanvas()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xF79000", Offset = "0xF79000", VA = "0xF79000")]
		public int CreatePuzzleEffect(ToyBlastPuzzleEffectInfoBase info)
		{
			return default(int);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xF88CC4", Offset = "0xF88CC4", VA = "0xF88CC4")]
		public void ForceSkipEffect(int uniqueId)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xF88CE0", Offset = "0xF88CE0", VA = "0xF88CE0")]
		private void PlayPuzzleAreaBgm()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xF77264", Offset = "0xF77264", VA = "0xF77264")]
		public void StopPuzzleAreaBgm()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xF7A7B8", Offset = "0xF7A7B8", VA = "0xF7A7B8")]
		public void PlayAddBgm(EnumToyBlastPuzzleAddBgmType type)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xF7A834", Offset = "0xF7A834", VA = "0xF7A834")]
		public void PauseAddBgm()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xF7A8B0", Offset = "0xF7A8B0", VA = "0xF7A8B0")]
		public void UnPauseAddBgm()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xF7ABF0", Offset = "0xF7ABF0", VA = "0xF7ABF0")]
		public void PlayPanelSeEffect(int panelIndex, EnumToyBlastPuzzleSeType seType, bool isLoop = false)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xF78028", Offset = "0xF78028", VA = "0xF78028")]
		public void PlayPanelSeEffect(Vector3 panelPos, EnumToyBlastPuzzleSeType seType, bool isLoop = false)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xF88CFC", Offset = "0xF88CFC", VA = "0xF88CFC")]
		public void StopSe(EnumToyBlastPuzzleSeType seType)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xF7718C", Offset = "0xF7718C", VA = "0xF7718C")]
		public bool IsFromPuzzleSelect()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xF7A934", Offset = "0xF7A934", VA = "0xF7A934")]
		public Vector3 CalcToyBlastPuzzlePos(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xF88D18", Offset = "0xF88D18", VA = "0xF88D18")]
		private void SetCurrentStageInfo()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xF88D80", Offset = "0xF88D80", VA = "0xF88D80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xF88DF8", Offset = "0xF88DF8", VA = "0xF88DF8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xF89338", Offset = "0xF89338", VA = "0xF89338")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xF88E88", Offset = "0xF88E88", VA = "0xF88E88")]
		private void ClearCrashLogMessage()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xF88F30", Offset = "0xF88F30", VA = "0xF88F30")]
		private void AddCrashLogMessage(string message)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xF89384", Offset = "0xF89384", VA = "0xF89384")]
		private void Update()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xF893D8", Offset = "0xF893D8", VA = "0xF893D8")]
		private void UpdateCore()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xF89830", Offset = "0xF89830", VA = "0xF89830")]
		private void UpdatePlayState()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xF898A0", Offset = "0xF898A0", VA = "0xF898A0")]
		public void ResetPuzzle()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xF89968", Offset = "0xF89968", VA = "0xF89968")]
		public void FinishPuzzleScene()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xF89D24", Offset = "0xF89D24", VA = "0xF89D24")]
		public void ApplyBoardPositionAccessor()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xF78BD0", Offset = "0xF78BD0", VA = "0xF78BD0")]
		public void CreateNewPanelAccessor(List<(int, Vector3)> tupleList)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xF78DE0", Offset = "0xF78DE0", VA = "0xF78DE0")]
		public void AddToyBlastPuzzleExplodeBombInfoAccessor(ToyBlastPuzzleExplodeBombRequestInfo explodeBombRequestInfo)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xF78F80", Offset = "0xF78F80", VA = "0xF78F80")]
		public void CheckEraseChainAccessor(List<int> baseIndexList, EnumToyBlastPuzzlePanelColor baseColor)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xF78EF0", Offset = "0xF78EF0", VA = "0xF78EF0")]
		public void RequestLaserPointerFocusAccessor(ToyBlastPuzzlePanel panelScript, HandLR handLr, bool isPointerEnter)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xF78CE8", Offset = "0xF78CE8", VA = "0xF78CE8")]
		public bool ErasePanelAccessor(ToyBlastPuzzleErasePanelInfo erasePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xF78C5C", Offset = "0xF78C5C", VA = "0xF78C5C")]
		public bool EraseTileAccessor(ToyBlastPuzzleEraseTileInfo eraseTileInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xF78D64", Offset = "0xF78D64", VA = "0xF78D64")]
		public bool ChangePanelAccessor(ToyBlastPuzzleChangePanelInfo changePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xF89D3C", Offset = "0xF89D3C", VA = "0xF89D3C")]
		public bool IsHitBombAreaIndexAccessor(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xF89D54", Offset = "0xF89D54", VA = "0xF89D54")]
		public int CalcPrioritySelectIndexAccessor()
		{
			return default(int);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xF78E5C", Offset = "0xF78E5C", VA = "0xF78E5C")]
		public EnumToyBlastPuzzleExplodeBombType CalcEnumToyBlastPuzzleExplodeBombTypeAccessor(List<int> matchingGroupIndexList)
		{
			return default(EnumToyBlastPuzzleExplodeBombType);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xF79070", Offset = "0xF79070", VA = "0xF79070")]
		public int GetCurrentBulletCountAccessor()
		{
			return default(int);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xF790F8", Offset = "0xF790F8", VA = "0xF790F8")]
		public List<ToyBlastPuzzleNormaUiInfo> GetNormaUiInfoListAccessor()
		{
			return null;
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xF89D6C", Offset = "0xF89D6C", VA = "0xF89D6C")]
		public ToyBlastPuzzleFuncStageInfoUpdate.EnumStageResultType DebugGetCurrentStageResultTypeAccessor()
		{
			return default(ToyBlastPuzzleFuncStageInfoUpdate.EnumStageResultType);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xF89D88", Offset = "0xF89D88", VA = "0xF89D88")]
		public bool CheckUpdateBoardEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xF89DCC", Offset = "0xF89DCC", VA = "0xF89DCC")]
		public bool CheckPanelSelectEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xF89E78", Offset = "0xF89E78", VA = "0xF89E78")]
		public bool CheckUpdateDrawEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xF79CF4", Offset = "0xF79CF4", VA = "0xF79CF4")]
		public bool CheckMoveBoardPositionEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xF89ED4", Offset = "0xF89ED4", VA = "0xF89ED4")]
		public bool CheckLaserPointerFocusEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xF89F00", Offset = "0xF89F00", VA = "0xF89F00")]
		public bool CheckOpenPauseDialogEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xF79B60", Offset = "0xF79B60", VA = "0xF79B60")]
		public bool CheckAllOrnamentIsFinishEraseAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xF79168", Offset = "0xF79168", VA = "0xF79168")]
		public bool CheckAllPanelStateNormal()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xF79318", Offset = "0xF79318", VA = "0xF79318")]
		public bool CheckPanelMoveEnable(ToyBlastPuzzlePanelInfo puzzlePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xF89F44", Offset = "0xF89F44", VA = "0xF89F44")]
		public bool CheckPanelSelectEnable(ToyBlastPuzzlePanelInfo puzzlePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xF793DC", Offset = "0xF793DC", VA = "0xF793DC")]
		public bool CheckPanelMatchingEnable(ToyBlastPuzzlePanelInfo basePuzzlePanelInfo, ToyBlastPuzzlePanelInfo targetPuzzlePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xF7953C", Offset = "0xF7953C", VA = "0xF7953C")]
		public bool CheckPanelFallEnable(ToyBlastPuzzlePanelInfo puzzlePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xF79600", Offset = "0xF79600", VA = "0xF79600")]
		public bool CheckPanelLandEnable(ToyBlastPuzzlePanelInfo puzzlePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xF796CC", Offset = "0xF796CC", VA = "0xF796CC")]
		public bool CheckPanelEraseEnable(ToyBlastPuzzlePanelInfo erasePanelInfo, EnumToyBlastPuzzleErasePanelReasonType erasePanelReasonType)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xF7978C", Offset = "0xF7978C", VA = "0xF7978C")]
		public bool CheckPanelChangeEnable(ToyBlastPuzzlePanelInfo changePanelInfo, EnumToyBlastPuzzleChangePanelReasonType changePanelReasonType)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xF79860", Offset = "0xF79860", VA = "0xF79860")]
		public bool CheckPanelShuffleEnable(ToyBlastPuzzlePanelInfo puzzlePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xF79AA8", Offset = "0xF79AA8", VA = "0xF79AA8")]
		public bool CheckTileEraseEnable(ToyBlastPuzzleEraseTileInfo eraseTileInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xF79948", Offset = "0xF79948", VA = "0xF79948")]
		public bool CheckPanelFallEnableForTileInfo(ToyBlastPuzzleTileInfo tileInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xF799DC", Offset = "0xF799DC", VA = "0xF799DC")]
		public bool CheckPanelLandEnableForTileInfo(ToyBlastPuzzleTileInfo tileInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xF89FAC", Offset = "0xF89FAC", VA = "0xF89FAC")]
		private bool CheckPanelSelectEnableForTileInfo(int targetIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xF8A064", Offset = "0xF8A064", VA = "0xF8A064")]
		private bool CheckPanelChangeEnableForTileInfo(int targetIndex, EnumToyBlastPuzzleChangePanelReasonType changePanelReasonType)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xF88FEC", Offset = "0xF88FEC", VA = "0xF88FEC")]
		private void InitOnce()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xF895C0", Offset = "0xF895C0", VA = "0xF895C0")]
		private bool InitUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xF8A124", Offset = "0xF8A124", VA = "0xF8A124")]
		private void InitManagerFuncBaseInitInfo()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xF8A1E0", Offset = "0xF8A1E0", VA = "0xF8A1E0")]
		private void InitManagerFuncSubject()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xF8A664", Offset = "0xF8A664", VA = "0xF8A664")]
		private void InitManagerFunc()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xF89B50", Offset = "0xF89B50", VA = "0xF89B50")]
		private void ResetManagerFunc()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xF8ACEC", Offset = "0xF8ACEC", VA = "0xF8ACEC")]
		public void RequestCheckManagerFuncCommon()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xF89A50", Offset = "0xF89A50", VA = "0xF89A50")]
		private void UpdateManagerFuncUpdateFunc()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xF89AF8", Offset = "0xF89AF8", VA = "0xF89AF8")]
		private void UpdateManagerFuncUpdateDraw()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xF7A69C", Offset = "0xF7A69C", VA = "0xF7A69C")]
		public void NotifyMoveCompleteOrnament(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xF7A6F4", Offset = "0xF7A6F4", VA = "0xF7A6F4")]
		public void NotifyDestroyVanishCompleteOrnament(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xF7A538", Offset = "0xF7A538", VA = "0xF7A538")]
		public void NotifyCheckOrnament(ToyBlastPuzzleOrnamentNotifyCheckInfo checkInfo)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xF7A5AC", Offset = "0xF7A5AC", VA = "0xF7A5AC")]
		public void NotifyEraseOrnament(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xF8AD50", Offset = "0xF8AD50", VA = "0xF8AD50")]
		public void NotifyReduceBulletCount()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xF7A74C", Offset = "0xF7A74C", VA = "0xF7A74C")]
		public void NotifyExplodeBombFinish(ToyBlastPuzzleExplodeBombUpdateInfo explodeBombUpdateInfo)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xF79DB0", Offset = "0xF79DB0", VA = "0xF79DB0")]
		public void NotifyErasePanel(ToyBlastPuzzleErasePanelInfo erasePanelInfo)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xF79F84", Offset = "0xF79F84", VA = "0xF79F84")]
		public void NotifyChangePanel(ToyBlastPuzzleChangePanelInfo changePanelInfo)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xF7A178", Offset = "0xF7A178", VA = "0xF7A178")]
		public void NotifyPanelMoveCompletePanel(int index)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xF7A38C", Offset = "0xF7A38C", VA = "0xF7A38C")]
		public void NotifyLaserPointerFocus(List<int> focusIndexList, HandLR handLr)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xF7A21C", Offset = "0xF7A21C", VA = "0xF7A21C")]
		public void NotifySelectPanel(ToyBlastPuzzleSelectPanelInfo selectPanelInfo)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xF8B184", Offset = "0xF8B184", VA = "0xF8B184")]
		private (bool, bool) NotifySelectPanelCore(ToyBlastPuzzleSelectPanelInfo selectPanelInfo)
		{
			return default((bool, bool));
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xF7A474", Offset = "0xF7A474", VA = "0xF7A474")]
		public void NotifyEraseTile(ToyBlastPuzzleEraseTileInfo eraseTileInfo)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xF78A10", Offset = "0xF78A10", VA = "0xF78A10")]
		public int CurrentStarCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xF8B40C", Offset = "0xF8B40C", VA = "0xF8B40C")]
		private void CheckStageResult(ToyBlastPuzzleFuncStageInfoUpdate.EnumStageResultType stageResultType)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xF8B480", Offset = "0xF8B480", VA = "0xF8B480")]
		private void CheckStageStarCount()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xF8B62C", Offset = "0xF8B62C", VA = "0xF8B62C")]
		public void PauseTimeScale(string key)
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xF8B700", Offset = "0xF8B700", VA = "0xF8B700")]
		public void ResumeTimeScale(string key)
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xF8B690", Offset = "0xF8B690", VA = "0xF8B690")]
		private void UpdateTimeScale()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xF7AA78", Offset = "0xF7AA78", VA = "0xF7AA78")]
		public EnumToyBlastPuzzlePanelColor GetRandomPanelColor(bool isReliefMeasure)
		{
			return default(EnumToyBlastPuzzlePanelColor);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xF8AD84", Offset = "0xF8AD84", VA = "0xF8AD84")]
		public void CreateErasePanelEffect(ToyBlastPuzzleErasePanelInfo erasePanelInfo)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xF8B010", Offset = "0xF8B010", VA = "0xF8B010")]
		public void CreateChangePanelEffect(ToyBlastPuzzleChangePanelInfo changePanelInfo)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xF8B180", Offset = "0xF8B180", VA = "0xF8B180")]
		public void PlayChangePanelSe(ToyBlastPuzzleChangePanelInfo changePanelInfo)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xF8B2B4", Offset = "0xF8B2B4", VA = "0xF8B2B4")]
		public void CreateEraseTileEffect(ToyBlastPuzzleTileInfo puzzleTileInfo)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xF7AB20", Offset = "0xF7AB20", VA = "0xF7AB20")]
		public EnumToyBlastPuzzlePanelType GetChangePanelType(int erasePanelCount)
		{
			return default(EnumToyBlastPuzzlePanelType);
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xF8B76C", Offset = "0xF8B76C", VA = "0xF8B76C")]
		public bool CheckAppearVerticalRocketPercent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xF7A9E4", Offset = "0xF7A9E4", VA = "0xF7A9E4")]
		public int ConvertIndexFromRawLine(int raw, int line)
		{
			return default(int);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xF8B7B0", Offset = "0xF8B7B0", VA = "0xF8B7B0")]
		public Vector3 CalcToyBlastPuzzleCenterPos(List<int> indexList)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xF7AD1C", Offset = "0xF7AD1C", VA = "0xF7AD1C")]
		public Quaternion CalcPuzzleLookAtQuaternion(Vector3 pos)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xF8B9B0", Offset = "0xF8B9B0", VA = "0xF8B9B0")]
		public ToyBlastPuzzleManager()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xF8BE20", Offset = "0xF8BE20", VA = "0xF8BE20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896190", Offset = "0x896190")]
		private void <InitManagerFuncSubject>b__142_0(int value)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xF8BE3C", Offset = "0xF8BE3C", VA = "0xF8BE3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8961A0", Offset = "0x8961A0")]
		private void <InitManagerFuncSubject>b__142_1(List<ToyBlastPuzzleNormaUiInfo> value)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xF8BE58", Offset = "0xF8BE58", VA = "0xF8BE58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8961B0", Offset = "0x8961B0")]
		private void <InitManagerFuncSubject>b__142_2(int index)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xF8BE74", Offset = "0xF8BE74", VA = "0xF8BE74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8961C0", Offset = "0x8961C0")]
		private void <InitManagerFuncSubject>b__142_3(UniRx.Unit _)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xF8BEB4", Offset = "0xF8BEB4", VA = "0xF8BEB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8961D0", Offset = "0x8961D0")]
		private void <InitManagerFuncSubject>b__142_4(GamePauseReason reason)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xF8BF5C", Offset = "0xF8BF5C", VA = "0xF8BF5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8961E0", Offset = "0x8961E0")]
		private void <InitManagerFuncSubject>b__142_5(UniRx.Unit unitDefault)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xF8BFC0", Offset = "0xF8BFC0", VA = "0xF8BFC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8961F0", Offset = "0x8961F0")]
		private void <InitManagerFuncSubject>b__142_6(UniRx.Unit _)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xF8BFF4", Offset = "0xF8BFF4", VA = "0xF8BFF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896200", Offset = "0x896200")]
		private void <InitManagerFuncSubject>b__142_7(UniRx.Unit _)
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.VR
{
	[Token(Token = "0x200046F")]
	public interface IGrabItemSwitchHandler
	{
		[Token(Token = "0x6001531")]
		void ForceGrabRelease();
	}
	[Token(Token = "0x2000470")]
	public interface IPointerSelectReciever : IEventSystemHandler
	{
		[Token(Token = "0x6001532")]
		void OnPointerEnter(HandLR handLr);

		[Token(Token = "0x6001533")]
		void OnPointerExit(HandLR handLr);
	}
	[Token(Token = "0x2000471")]
	public static class PointerSelectMessageUtility
	{
		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881BDC", Offset = "0x881BDC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400168E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HandLR handLr;

			[Token(Token = "0x6001536")]
			[Address(RVA = "0xC15D30", Offset = "0xC15D30", VA = "0xC15D30")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001537")]
			[Address(RVA = "0xC15D38", Offset = "0xC15D38", VA = "0xC15D38")]
			internal void <SendPointerEnter>b__0(IPointerSelectReciever recieveTarget, BaseEventData y)
			{
			}
		}

		[Token(Token = "0x2000473")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881BEC", Offset = "0x881BEC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400168F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HandLR handLr;

			[Token(Token = "0x6001538")]
			[Address(RVA = "0xC15DF4", Offset = "0xC15DF4", VA = "0xC15DF4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001539")]
			[Address(RVA = "0xC15DFC", Offset = "0xC15DFC", VA = "0xC15DFC")]
			internal void <SendPointerExit>b__0(IPointerSelectReciever recieveTarget, BaseEventData y)
			{
			}
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x10151E8", Offset = "0x10151E8", VA = "0x10151E8")]
		public static void SendPointerEnter(GameObject targetGameObject, HandLR handLr)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1015300", Offset = "0x1015300", VA = "0x1015300")]
		public static void SendPointerExit(GameObject targetGameObject, HandLR handLr)
		{
		}
	}
	[Token(Token = "0x2000474")]
	public class ToyBlastGrabItem
	{
		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IToyBlastGrabItemHandler _grabHandlerLeft;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IToyBlastGrabItemHandler _grabHandlerRight;

		[Token(Token = "0x170001EF")]
		private EnumToyBlastGrabGunType LeftEnumToyBlastGrabGunType
		{
			[Token(Token = "0x600153A")]
			[Address(RVA = "0xFA7318", Offset = "0xFA7318", VA = "0xFA7318")]
			get
			{
				return default(EnumToyBlastGrabGunType);
			}
		}

		[Token(Token = "0x170001F0")]
		private EnumToyBlastGrabGunType RightEnumToyBlastGrabGunType
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0xFA73D0", Offset = "0xFA73D0", VA = "0xFA73D0")]
			get
			{
				return default(EnumToyBlastGrabGunType);
			}
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xFA7488", Offset = "0xFA7488", VA = "0xFA7488")]
		public IToyBlastGrabItemHandler GetToyBlastGrabItemHandler(HandLR handLr)
		{
			return null;
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xFA74A0", Offset = "0xFA74A0", VA = "0xFA74A0")]
		public EnumToyBlastGrabGunType GetGrabPuzzleItem(HandLR handLr)
		{
			return default(EnumToyBlastGrabGunType);
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xFA6D60", Offset = "0xFA6D60", VA = "0xFA6D60")]
		public void SetGrabItem(HandLR handLeftRight, IToyBlastGrabItemHandler handler)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xFA7104", Offset = "0xFA7104", VA = "0xFA7104")]
		public void ResetGrabItem(HandLR handLeftRight)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xFA74AC", Offset = "0xFA74AC", VA = "0xFA74AC")]
		public void DoPrepareGrabItem(HandLR handLeftRight)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xFA7584", Offset = "0xFA7584", VA = "0xFA7584")]
		public ToyBlastGrabItem()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class ToyBlastGrubGunManager : StaticAccessBehaviour<ToyBlastGrubGunManager>
	{
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88D35C", Offset = "0x88D35C")]
		[SerializeField]
		private ToyBlastGrabGunNormal _gunNormalSwitch;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _initialize;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ZVRDistanceGrabber _grabberRight;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ZVRDistanceGrabber _grabberLeft;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ToyBlastGrabGunBase _currentToyBlastGrabGunBase;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D3A8", Offset = "0x88D3A8")]
		private readonly ToyBlastGrabItem <GrabItem>k__BackingField;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _stateCount;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _enableShowGunAtStageEnd;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool _enableShowGunForGamePause;

		[Token(Token = "0x170001F1")]
		public ToyBlastGrabItem GrabItem
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0xFA758C", Offset = "0xFA758C", VA = "0xFA758C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896210", Offset = "0x896210")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xFA7594", Offset = "0xFA7594", VA = "0xFA7594")]
		public void Init()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xFA76B0", Offset = "0xFA76B0", VA = "0xFA76B0")]
		public void UpdateFrame()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xFA776C", Offset = "0xFA776C", VA = "0xFA776C")]
		private void ChangeGrabItem(EnumToyBlastGrabGunType changeGunType)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xFA797C", Offset = "0xFA797C", VA = "0xFA797C")]
		private ToyBlastGrabGunBase GetToyBlastGrabGunBase(EnumToyBlastGrabGunType gunType)
		{
			return null;
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xFA7A18", Offset = "0xFA7A18", VA = "0xFA7A18")]
		public HandLR GetGunHasHand()
		{
			return default(HandLR);
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xFA7A48", Offset = "0xFA7A48", VA = "0xFA7A48")]
		public void HideGunAtStageEnd()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xFA7B24", Offset = "0xFA7B24", VA = "0xFA7B24")]
		public void ShowGunAtStageEnd()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xFA7B50", Offset = "0xFA7B50", VA = "0xFA7B50")]
		public void SetVisibleGunForGamePause(bool flag)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xFA7C68", Offset = "0xFA7C68", VA = "0xFA7C68")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x896220", Offset = "0x896220")]
		public void DebugHandChange()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xFA7E24", Offset = "0xFA7E24", VA = "0xFA7E24")]
		public ToyBlastGrubGunManager()
		{
		}
	}
	[Token(Token = "0x2000476")]
	public class ToyBlastPanelCheckPauseDialog
	{
		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Subject<UniRx.Unit> _pushPauseDialogButtonSubject;

		[Token(Token = "0x170001F2")]
		public IObservable<UniRx.Unit> OnPushPauseDialogButtonSubject
		{
			[Token(Token = "0x600154D")]
			[Address(RVA = "0xFA7FBC", Offset = "0xFA7FBC", VA = "0xFA7FBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xFA7FC4", Offset = "0xFA7FC4", VA = "0xFA7FC4")]
		public void UpdateFrame()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xFA80B0", Offset = "0xFA80B0", VA = "0xFA80B0")]
		public ToyBlastPanelCheckPauseDialog()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class ToyBlastPanelChoiceFromPointer : MonoBehaviour
	{
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _panelLayer;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ToyBlastTargetPanelForPointer _selectPanelInfoLeft;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ToyBlastTargetPanelForPointer _selectPanelInfoRight;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IToyBlastPanelTrigger _panelTriggerLeft;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IToyBlastPanelTrigger _panelTriggerRight;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ZVRLaserPointer _laserPointerLeft;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ZVRLaserPointer _laserPointerRight;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly HandLR[] _handLeftRightArray;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EnumToyBlastGrabGunType _currentEnumToyBlastGrabItemTypeLeft;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private EnumToyBlastGrabGunType _currentEnumToyBlastGrabItemTypeRight;

		[Token(Token = "0x14000024")]
		public event Action<GameObject> HitBulletCallback
		{
			[Token(Token = "0x6001550")]
			[Address(RVA = "0xFA8128", Offset = "0xFA8128", VA = "0xFA8128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896258", Offset = "0x896258")]
			add
			{
			}
			[Token(Token = "0x6001551")]
			[Address(RVA = "0xFA81C8", Offset = "0xFA81C8", VA = "0xFA81C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896268", Offset = "0x896268")]
			remove
			{
			}
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xFA8268", Offset = "0xFA8268", VA = "0xFA8268")]
		public void Init()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xFA8370", Offset = "0xFA8370", VA = "0xFA8370")]
		public void UpdateFrame()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xFA839C", Offset = "0xFA839C", VA = "0xFA839C")]
		private void CheckTriggerInstance()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xFA8730", Offset = "0xFA8730", VA = "0xFA8730")]
		private void CheckPanelSelectedTrigger()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xFA85E0", Offset = "0xFA85E0", VA = "0xFA85E0")]
		private void UpdatePointerOverPanel()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xFA89FC", Offset = "0xFA89FC", VA = "0xFA89FC")]
		private ToyBlastTargetPanelForPointer GetSelectPanelInfo(HandLR handLr)
		{
			return null;
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xFA8958", Offset = "0xFA8958", VA = "0xFA8958")]
		private IToyBlastPanelTrigger GetTrigger(HandLR handLr)
		{
			return null;
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xFA88A0", Offset = "0xFA88A0", VA = "0xFA88A0")]
		private void SetTrigger(HandLR handLr, IToyBlastPanelTrigger trigger)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xFA8AA0", Offset = "0xFA8AA0", VA = "0xFA8AA0")]
		public ToyBlastPanelChoiceFromPointer()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xFA8BBC", Offset = "0xFA8BBC", VA = "0xFA8BBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896278", Offset = "0x896278")]
		private void <CheckTriggerInstance>b__15_0(GameObject hitGameObject)
		{
		}
	}
	[Token(Token = "0x2000478")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881BFC", Offset = "0x881BFC")]
	public class ToyBlastSceneSetupController : MonoBehaviour
	{
		[Token(Token = "0x600155C")]
		[Address(RVA = "0xE74068", Offset = "0xE74068", VA = "0xE74068")]
		public void Init()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xE740FC", Offset = "0xE740FC", VA = "0xE740FC")]
		public ToyBlastSceneSetupController()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class ToyBlastVrManager : StaticAccessBehaviour<ToyBlastVrManager>, IGamePauseReciever, IEventSystemHandler
	{
		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToyBlastSceneSetupController _blastSceneSetupController;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToyBlastPanelChoiceFromPointer _choiceFromPointer;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ToyBlastPanelCheckPauseDialog _toyBlastPanelCheckPauseDialog;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Subject<GamePauseReason> _gamePauseSubject;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Subject<UniRx.Unit> _gameResumeSubject;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> _disableCommandList;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isCurrentDisable;

		[Token(Token = "0x170001F3")]
		public IObservable<UniRx.Unit> OnPushPauseDialogButtonSubject
		{
			[Token(Token = "0x600155E")]
			[Address(RVA = "0xE744A8", Offset = "0xE744A8", VA = "0xE744A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public IObservable<GamePauseReason> OnGamePauseSubject
		{
			[Token(Token = "0x600155F")]
			[Address(RVA = "0xE744C4", Offset = "0xE744C4", VA = "0xE744C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		public IObservable<UniRx.Unit> OnGameResumeSubject
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0xE744CC", Offset = "0xE744CC", VA = "0xE744CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xE744D4", Offset = "0xE744D4", VA = "0xE744D4", Slot = "6")]
		public void OnGamePause(GamePauseReason reason)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xE74538", Offset = "0xE74538", VA = "0xE74538", Slot = "7")]
		public void OnGameResume()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xE74608", Offset = "0xE74608", VA = "0xE74608", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xE7469C", Offset = "0xE7469C", VA = "0xE7469C")]
		public void UpdateFunc()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xE74714", Offset = "0xE74714", VA = "0xE74714")]
		public void NotifyLaserPointerFocus(List<int> focusIndexList, HandLR handLr)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xE7478C", Offset = "0xE7478C", VA = "0xE7478C")]
		public void AddHitBulletCallback(Action<GameObject> hitBulletCallback)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xE6FCE8", Offset = "0xE6FCE8", VA = "0xE6FCE8")]
		public void AddDisableCommand(string key)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xE6FD4C", Offset = "0xE6FD4C", VA = "0xE6FD4C")]
		public void RemoveDisableCommand(string key)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xE747A8", Offset = "0xE747A8", VA = "0xE747A8")]
		private void UpdateVrGunVisible()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xE748F4", Offset = "0xE748F4", VA = "0xE748F4")]
		private void EnableGunForPointer()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xE74834", Offset = "0xE74834", VA = "0xE74834")]
		private void DisableGunForPointer()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xE749B0", Offset = "0xE749B0", VA = "0xE749B0")]
		public ToyBlastVrManager()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.VR.Trigger
{
	[Token(Token = "0x200047A")]
	internal interface IToyBlastPanelTrigger
	{
		[Token(Token = "0x600156D")]
		bool CheckPanelTrigger(ToyBlastTargetPanelForPointer pointer, HandLR handLr);
	}
	[Token(Token = "0x200047B")]
	public abstract class ToyBlastPanelTriggerGunBase : IToyBlastPanelTrigger
	{
		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881C0C", Offset = "0x881C0C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40016B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ToyBlastPanelTriggerGunBase <>4__this;

			[Token(Token = "0x40016B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action finishCallback;

			[Token(Token = "0x40016B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ToyBlastGrabGunBase grabGunBase;

			[Token(Token = "0x6001576")]
			[Address(RVA = "0xF95070", Offset = "0xF95070", VA = "0xF95070")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001577")]
			[Address(RVA = "0xF95078", Offset = "0xF95078", VA = "0xF95078")]
			internal void <CreateBullet>b__0(GameObject hitGameObject)
			{
			}

			[Token(Token = "0x6001578")]
			[Address(RVA = "0xF9511C", Offset = "0xF9511C", VA = "0xF9511C")]
			internal void <CreateBullet>b__1()
			{
			}
		}

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ToyBlastTargetPanelForPointer _pointerCopy;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _busyBullet;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Sequence _safeTimeSequence;

		[Token(Token = "0x14000025")]
		public event Action<GameObject> HitBulletCallback
		{
			[Token(Token = "0x600156E")]
			[Address(RVA = "0xFA8C2C", Offset = "0xFA8C2C", VA = "0xFA8C2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896288", Offset = "0x896288")]
			add
			{
			}
			[Token(Token = "0x600156F")]
			[Address(RVA = "0xFA8CCC", Offset = "0xFA8CCC", VA = "0xFA8CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896298", Offset = "0x896298")]
			remove
			{
			}
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xFA8D6C", Offset = "0xFA8D6C", VA = "0xFA8D6C", Slot = "4")]
		public bool CheckPanelTrigger(ToyBlastTargetPanelForPointer pointer, HandLR handLr)
		{
			return default(bool);
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xFA8EC8", Offset = "0xFA8EC8", VA = "0xFA8EC8", Slot = "5")]
		protected virtual void CreateBullet(HandLR handLr, Action finishCallback)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xFA8E50", Offset = "0xFA8E50", VA = "0xFA8E50")]
		public bool IsPanelSelectButtonPush(HandLR handLr)
		{
			return default(bool);
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xFA9284", Offset = "0xFA9284", VA = "0xFA9284")]
		private OVRInput.Button GetPanelSelectButton(HandLR handLr)
		{
			return default(OVRInput.Button);
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xFA9320", Offset = "0xFA9320", VA = "0xFA9320")]
		protected ToyBlastPanelTriggerGunBase()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xFA9384", Offset = "0xFA9384", VA = "0xFA9384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8962A8", Offset = "0x8962A8")]
		private void <CheckPanelTrigger>b__6_0()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public class ToyBlastPanelTriggerGunNormal : ToyBlastPanelTriggerGunBase
	{
		[Token(Token = "0x6001579")]
		[Address(RVA = "0xFA8874", Offset = "0xFA8874", VA = "0xFA8874")]
		public ToyBlastPanelTriggerGunNormal(Action<GameObject> hitBulletCallback)
		{
		}
	}
	[Token(Token = "0x200047E")]
	public class ToyBlastPanelTriggerNone : IToyBlastPanelTrigger
	{
		[Token(Token = "0x600157A")]
		[Address(RVA = "0xFA938C", Offset = "0xFA938C", VA = "0xFA938C", Slot = "4")]
		public bool CheckPanelTrigger(ToyBlastTargetPanelForPointer pointer, HandLR handLr)
		{
			return default(bool);
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xFA8950", Offset = "0xFA8950", VA = "0xFA8950")]
		public ToyBlastPanelTriggerNone()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.VR.Gun
{
	[Token(Token = "0x200047F")]
	public enum EnumToyBlastGrabGunType
	{
		[Token(Token = "0x40016B6")]
		None,
		[Token(Token = "0x40016B7")]
		GunNormal
	}
	[Token(Token = "0x2000480")]
	public interface IToyBlastGrabItemHandler
	{
		[Token(Token = "0x600157C")]
		EnumToyBlastGrabGunType GetEnumToyBlastGrabGunType();

		[Token(Token = "0x600157D")]
		void OnPrepareSetup();
	}
	[Token(Token = "0x2000481")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x881C1C", Offset = "0x881C1C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x881C1C", Offset = "0x881C1C")]
	public abstract class ToyBlastGrabGunBase : MonoBehaviour, IGrabbableMessageReciever, IEventSystemHandler, IGrabItemSwitchHandler, IToyBlastGrabItemHandler
	{
		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88D3F8", Offset = "0x88D3F8")]
		[SerializeField]
		private Transform _laserSight;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88D444", Offset = "0x88D444")]
		private GameObject _bulletPrefab;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _collisionRadius;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88D4A0", Offset = "0x88D4A0")]
		private Animator _gunAnimator;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _storeRayTransform;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ZVRDistanceGrabber _distanceGrabber;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ZVRDistanceGrabbable _distanceGrabbable;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action<GameObject> _hitCallback;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject _bulletInstance;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HandLR _grabHandLr;

		[Token(Token = "0x600157E")]
		public abstract EnumToyBlastGrabGunType GetEnumToyBlastGrabGunType();

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xFA6688", Offset = "0xFA6688", VA = "0xFA6688")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xFA66E0", Offset = "0xFA66E0", VA = "0xFA66E0")]
		private void SetupBullet()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xFA6A40", Offset = "0xFA6A40", VA = "0xFA6A40")]
		public GameObject GetBullet(Action<GameObject> hitCallback)
		{
			return null;
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xFA6AD4", Offset = "0xFA6AD4", VA = "0xFA6AD4")]
		public void PlayGunAnimationPull()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xFA6B2C", Offset = "0xFA6B2C", VA = "0xFA6B2C")]
		public void PlayGunAnimationBack()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xFA6B84", Offset = "0xFA6B84", VA = "0xFA6B84", Slot = "4")]
		public void OnGrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xFA7024", Offset = "0xFA7024", VA = "0xFA7024", Slot = "5")]
		public void OnGrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xFA6D80", Offset = "0xFA6D80", VA = "0xFA6D80")]
		private void SetMyLaserPoint(HandLR handLr)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xFA7124", Offset = "0xFA7124", VA = "0xFA7124")]
		private void RestoreLaserPoint(HandLR handLr)
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xFA71B4", Offset = "0xFA71B4", VA = "0xFA71B4", Slot = "6")]
		public void ForceGrabRelease()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xFA71D0", Offset = "0xFA71D0", VA = "0xFA71D0", Slot = "8")]
		public void OnPrepareSetup()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xFA6E18", Offset = "0xFA6E18", VA = "0xFA6E18")]
		private static void SavePuzzleGunHand(HandLR handLr)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xFA7278", Offset = "0xFA7278", VA = "0xFA7278")]
		protected ToyBlastGrabGunBase()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xFA728C", Offset = "0xFA728C", VA = "0xFA728C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8962B8", Offset = "0x8962B8")]
		private void <SetupBullet>b__12_0(GameObject hitGameObject)
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class ToyBlastGrabGunNormal : ToyBlastGrabGunBase
	{
		[Token(Token = "0x600158D")]
		[Address(RVA = "0xFA72FC", Offset = "0xFA72FC", VA = "0xFA72FC", Slot = "9")]
		public override EnumToyBlastGrabGunType GetEnumToyBlastGrabGunType()
		{
			return default(EnumToyBlastGrabGunType);
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xFA7304", Offset = "0xFA7304", VA = "0xFA7304")]
		public ToyBlastGrabGunNormal()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class ToyBlastOnParticleCollision : MonoBehaviour
	{
		[Token(Token = "0x14000026")]
		public event Action<GameObject> HitCollider
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0xFA69A0", Offset = "0xFA69A0", VA = "0xFA69A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8962C8", Offset = "0x8962C8")]
			add
			{
			}
			[Token(Token = "0x6001590")]
			[Address(RVA = "0xFA7EA4", Offset = "0xFA7EA4", VA = "0xFA7EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8962D8", Offset = "0x8962D8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xFA7F44", Offset = "0xFA7F44", VA = "0xFA7F44")]
		private void OnParticleCollision(GameObject hitGameObject)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xFA7FB4", Offset = "0xFA7FB4", VA = "0xFA7FB4")]
		public ToyBlastOnParticleCollision()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class ToyBlastTargetPanelForPointer
	{
		[Token(Token = "0x2000485")]
		private class TargetPanel
		{
			[Token(Token = "0x40016C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject PanelGameObject;

			[Token(Token = "0x40016C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject HitGameObject;

			[Token(Token = "0x40016C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ToyBlastPuzzlePanel Controller;

			[Token(Token = "0x600159A")]
			[Address(RVA = "0xF9920C", Offset = "0xF9920C", VA = "0xF9920C")]
			public void Clear()
			{
			}

			[Token(Token = "0x600159B")]
			[Address(RVA = "0xF99218", Offset = "0xF99218", VA = "0xF99218")]
			public void SetupFromHitObject(GameObject hitGameObject)
			{
			}

			[Token(Token = "0x600159C")]
			[Address(RVA = "0xF99308", Offset = "0xF99308", VA = "0xF99308")]
			public void SendPointerEnter(HandLR handLr)
			{
			}

			[Token(Token = "0x600159D")]
			[Address(RVA = "0xF993A4", Offset = "0xF993A4", VA = "0xF993A4")]
			public void SendPointerExit(HandLR handLr)
			{
			}

			[Token(Token = "0x600159E")]
			[Address(RVA = "0xF99440", Offset = "0xF99440", VA = "0xF99440")]
			public TargetPanel()
			{
			}
		}

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly TargetPanel _targetPanelNormal;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HandLR _handLr;

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xE74104", Offset = "0xE74104", VA = "0xE74104")]
		public ToyBlastTargetPanelForPointer(HandLR handLr)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xE7417C", Offset = "0xE7417C", VA = "0xE7417C")]
		public ToyBlastTargetPanelForPointer()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xE741E0", Offset = "0xE741E0", VA = "0xE741E0")]
		public void FirePanel()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xE742C0", Offset = "0xE742C0", VA = "0xE742C0")]
		public void SelectPanelFromPointer(GameObject hitGameObject)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xE742C4", Offset = "0xE742C4", VA = "0xE742C4")]
		private void SelectPanelNormal(GameObject hitGameObject)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xE74398", Offset = "0xE74398", VA = "0xE74398")]
		public void ResetSelectPanel()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xE74444", Offset = "0xE74444", VA = "0xE74444")]
		public void CopyToInstance(ToyBlastTargetPanelForPointer pointer, HandLR handLr)
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Ui
{
	[Token(Token = "0x2000486")]
	public static class ToyBlastPuzzleUiConstants
	{
		[Token(Token = "0x40016C8")]
		public const float BoardScale = 0.8f;

		[Token(Token = "0x40016C9")]
		public const float BoardYPosition = 3.9f;

		[Token(Token = "0x40016CA")]
		public const float BoardZPosition = 8f;

		[Token(Token = "0x40016CB")]
		public const float ToyBlastArcTargetPosOffsetDistance = 15f;

		[Token(Token = "0x40016CC")]
		public const float ToyBlastArcXAngleOffset = 10f;

		[Token(Token = "0x40016CD")]
		public const float ToyBlastArcYAngleOffset = 10f;

		[Token(Token = "0x40016CE")]
		public const float ToyBlastPuzzleTilePanelScaleRate = 1f;
	}
	[Token(Token = "0x2000487")]
	public class ToyBlastPuzzleUiBg : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000488")]
		public class ToyBlastPuzzleBgInfo
		{
			[Token(Token = "0x40016D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string PrefabName;

			[Token(Token = "0x40016D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string skyBoxMaterialName;

			[Token(Token = "0x40016D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color AmbientColor;

			[Token(Token = "0x40016D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color FogColor;

			[Token(Token = "0x40016D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float FogStartDistance;

			[Token(Token = "0x40016D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float FogEndDistance;

			[Token(Token = "0x40016D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 RotateAngle;

			[Token(Token = "0x60015A2")]
			[Address(RVA = "0xF97BAC", Offset = "0xF97BAC", VA = "0xF97BAC")]
			public ToyBlastPuzzleBgInfo()
			{
			}
		}

		[Token(Token = "0x2000489")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881C8C", Offset = "0x881C8C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40016DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ToyBlastPuzzleUiBg <>4__this;

			[Token(Token = "0x40016DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ToyBlastPuzzleBgInfo bgInfo;

			[Token(Token = "0x60015A3")]
			[Address(RVA = "0xF97AD8", Offset = "0xF97AD8", VA = "0xF97AD8")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60015A4")]
			[Address(RVA = "0xF97AE0", Offset = "0xF97AE0", VA = "0xF97AE0")]
			internal void <InitCore>b__0(long _)
			{
			}
		}

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _prefabFolderPath;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _skyBoxMaterialFolderPath;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<ToyBlastPuzzleBgInfo> _toyBlastPuzzleBgInfoList;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _currentBgId;

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xE6D834", Offset = "0xE6D834", VA = "0xE6D834")]
		public void Init(int targetBgId)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xE6D84C", Offset = "0xE6D84C", VA = "0xE6D84C")]
		private void InitCore()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xE6DC04", Offset = "0xE6DC04", VA = "0xE6DC04")]
		public ToyBlastPuzzleUiBg()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class ToyBlastPuzzleUiGun : MonoBehaviour
	{
		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _bulletCountText;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bulletSpace _bulletSpace;

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xE6DC7C", Offset = "0xE6DC7C", VA = "0xE6DC7C")]
		public void Init(ToyBlastPuzzleStageInfo stageInfo)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xE6DCBC", Offset = "0xE6DCBC", VA = "0xE6DCBC")]
		public void UpdateBulletCountText(int count)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xE6DD08", Offset = "0xE6DD08", VA = "0xE6DD08")]
		public void Hide()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xE6DD38", Offset = "0xE6DD38", VA = "0xE6DD38")]
		public ToyBlastPuzzleUiGun()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class ToyBlastPuzzleUiManager : MonoBehaviour
	{
		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _playerGameObject;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToyBlastPuzzleSoundManager _toyBlastPuzzleSoundManager;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ToyBlastPuzzleUiBg _toyBlastPuzzleUiBg;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ToyBlastPuzzleUiGun _toyBlastPuzzleUiGun;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ToyBlastPuzzleUiResidentNorma _toyBlastPuzzleUiResidentNorma;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isPlayBulletCountAlarmSe;

		[Token(Token = "0x40016E4")]
		private const int BulletCountAlarmValue = 3;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly Subject<UniRx.Unit> _retryPuzzleSubject;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Subject<UniRx.Unit> _giveUpPuzzleSubject;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string _toyBlastPuzzleUiPauseDialogPrefabFilePath;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ToyBlastPuzzleUiPauseDialog _toyBlastPuzzleUiPauseDialog;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string _toyBlastPuzzleYesNoDialogPrefabFilePath;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ToyBlastPuzzleYesNoDialog _toyBlastPuzzleYesNoDialog;

		[Token(Token = "0x170001F6")]
		public IObservable<UniRx.Unit> OnRetryPuzzleSubject
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0xE6F158", Offset = "0xE6F158", VA = "0xE6F158")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		public IObservable<UniRx.Unit> OnGiveUpPuzzleSubject
		{
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0xE6F160", Offset = "0xE6F160", VA = "0xE6F160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xE6DD40", Offset = "0xE6DD40", VA = "0xE6DD40")]
		public void UpdateNormaUiInfoListText(List<ToyBlastPuzzleNormaUiInfo> value)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xE6DFF8", Offset = "0xE6DFF8", VA = "0xE6DFF8")]
		public void Init(ToyBlastPuzzleStageInfo stageInfo)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xE6F068", Offset = "0xE6F068", VA = "0xE6F068")]
		public void UpdateBulletCountText(int value)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xE6F0EC", Offset = "0xE6F0EC", VA = "0xE6F0EC")]
		public void HideUiCanvas()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xE6F168", Offset = "0xE6F168", VA = "0xE6F168")]
		private void CreateToyBlastPuzzleUiPauseDialog()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xE6F444", Offset = "0xE6F444", VA = "0xE6F444")]
		private void CreateToyBlastPuzzleYesNoDialog()
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xE6F6C8", Offset = "0xE6F6C8", VA = "0xE6F6C8")]
		public bool IsShowPauseDialog()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xE6F758", Offset = "0xE6F758", VA = "0xE6F758")]
		public void NotifyPushPauseDialogButton()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xE6F11C", Offset = "0xE6F11C", VA = "0xE6F11C")]
		public void HidePauseDialog()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xE6FA3C", Offset = "0xE6FA3C", VA = "0xE6FA3C")]
		public ToyBlastPuzzleUiManager()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xE6FB0C", Offset = "0xE6FB0C", VA = "0xE6FB0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8962E8", Offset = "0x8962E8")]
		private void <CreateToyBlastPuzzleUiPauseDialog>b__19_0(UniRx.Unit x)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xE6FBDC", Offset = "0xE6FBDC", VA = "0xE6FBDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8962F8", Offset = "0x8962F8")]
		private void <CreateToyBlastPuzzleUiPauseDialog>b__19_1(UniRx.Unit x)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xE6FC08", Offset = "0xE6FC08", VA = "0xE6FC08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896308", Offset = "0x896308")]
		private void <CreateToyBlastPuzzleYesNoDialog>b__22_0(UniRx.Unit x)
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class ToyBlastPuzzleUiPauseDialog : MonoBehaviour
	{
		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88D5BC", Offset = "0x88D5BC")]
		private Text _titleText;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _retryButtonText;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _giveUpButtonText;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _closeButtonText;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88D638", Offset = "0x88D638")]
		[SerializeField]
		private EventTrigger _retryButtonEventTrigger;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private EventTrigger _giveUpButtonEventTrigger;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private EventTrigger _closeButtonEventTrigger;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Subject<UniRx.Unit> _pushRetryButtonSubject;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Subject<UniRx.Unit> _pushGiveUpButtonSubject;

		[Token(Token = "0x40016F4")]
		private const string ClassName = "ToyBlastPuzzleUiPauseDialog";

		[Token(Token = "0x170001F8")]
		public IObservable<UniRx.Unit> OnPushRetryButtonSubject
		{
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0xE6FCD8", Offset = "0xE6FCD8", VA = "0xE6FCD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		public IObservable<UniRx.Unit> OnPushGiveUpButtonSubject
		{
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0xE6FCE0", Offset = "0xE6FCE0", VA = "0xE6FCE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xE6F710", Offset = "0xE6F710", VA = "0xE6F710")]
		public bool IsShow()
		{
			return default(bool);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xE6F360", Offset = "0xE6F360", VA = "0xE6F360")]
		public void ShowDialog()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xE6F958", Offset = "0xE6F958", VA = "0xE6F958")]
		public void HideDialog()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xE6E92C", Offset = "0xE6E92C", VA = "0xE6E92C")]
		public void Init()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xE6FDB8", Offset = "0xE6FDB8", VA = "0xE6FDB8")]
		public ToyBlastPuzzleUiPauseDialog()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xE6FE50", Offset = "0xE6FE50", VA = "0xE6FE50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896318", Offset = "0x896318")]
		private void <Init>b__17_0(BaseEventData x)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xE6FF90", Offset = "0xE6FF90", VA = "0xE6FF90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896328", Offset = "0x896328")]
		private void <Init>b__17_1(BaseEventData x)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xE700D0", Offset = "0xE700D0", VA = "0xE700D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896338", Offset = "0x896338")]
		private void <Init>b__17_2(BaseEventData x)
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class ToyBlastPuzzleUiResidentNorma : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200048E")]
		private class NormaParentGameObjectAndCountText
		{
			[Token(Token = "0x40016F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject TargetBox;

			[Token(Token = "0x40016FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject NormaPanelModelParent;

			[Token(Token = "0x40016FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text CountText;

			[Token(Token = "0x40016FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioSource AudioSource;

			[Token(Token = "0x60015C5")]
			[Address(RVA = "0xF97C8C", Offset = "0xF97C8C", VA = "0xF97C8C")]
			public NormaParentGameObjectAndCountText()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200048F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881C9C", Offset = "0x881C9C")]
		private sealed class <>c
		{
			[Token(Token = "0x40016FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<NormaParentGameObjectAndCountText> <>9__4_0;

			[Token(Token = "0x40016FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<NormaParentGameObjectAndCountText, bool> <>9__4_1;

			[Token(Token = "0x60015C7")]
			[Address(RVA = "0xF97C14", Offset = "0xF97C14", VA = "0xF97C14")]
			public <>c()
			{
			}

			[Token(Token = "0x60015C8")]
			[Address(RVA = "0xF97C1C", Offset = "0xF97C1C", VA = "0xF97C1C")]
			internal void <Init>b__4_0(NormaParentGameObjectAndCountText x)
			{
			}

			[Token(Token = "0x60015C9")]
			[Address(RVA = "0xF97C5C", Offset = "0xF97C5C", VA = "0xF97C5C")]
			internal bool <Init>b__4_1(NormaParentGameObjectAndCountText x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<NormaParentGameObjectAndCountText> _normaParentGameObjectAndCountTextList;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<ToyBlastPuzzleNormaInfo, Text> _normaInfoTextDictionary;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<ToyBlastPuzzleNormaInfo, AudioSource> _normaInfoAudioSourceDictionary;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ToyBlastPuzzleNormaUiInfo> _preNormaUiInfoList;

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xE6E0D0", Offset = "0xE6E0D0", VA = "0xE6E0D0")]
		public void Init(ToyBlastPuzzleStageInfo stageInfo)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xE6DD58", Offset = "0xE6DD58", VA = "0xE6DD58")]
		public void UpdateNormaUiInfoListText(List<ToyBlastPuzzleNormaUiInfo> normaUiInfoList)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xE7015C", Offset = "0xE7015C", VA = "0xE7015C")]
		public ToyBlastPuzzleUiResidentNorma()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class ToyBlastPuzzleYesNoDialog : MonoBehaviour
	{
		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88D6B4", Offset = "0x88D6B4")]
		[SerializeField]
		private Text _messageText;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _yesButtonText;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _noButtonText;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88D720", Offset = "0x88D720")]
		[SerializeField]
		private EventTrigger _yesButtonEventTrigger;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private EventTrigger _noButtonEventTrigger;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Subject<UniRx.Unit> _pushYesButtonSubject;

		[Token(Token = "0x4001706")]
		private const string ClassName = "ToyBlastPuzzleYesNoDialog";

		[Token(Token = "0x170001FA")]
		public IObservable<UniRx.Unit> OnPushYesButtonSubject
		{
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0xE73E1C", Offset = "0xE73E1C", VA = "0xE73E1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xE6F734", Offset = "0xE6F734", VA = "0xE6F734")]
		public bool IsShow()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xE6F5E4", Offset = "0xE6F5E4", VA = "0xE6F5E4")]
		public void ShowDialog()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xE6F874", Offset = "0xE6F874", VA = "0xE6F874")]
		public void HideDialog()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xE6EDE8", Offset = "0xE6EDE8", VA = "0xE6EDE8")]
		public void Init()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xE73E24", Offset = "0xE73E24", VA = "0xE73E24")]
		public ToyBlastPuzzleYesNoDialog()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xE73E9C", Offset = "0xE73E9C", VA = "0xE73E9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896348", Offset = "0x896348")]
		private void <Init>b__12_0(BaseEventData x)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xE73FDC", Offset = "0xE73FDC", VA = "0xE73FDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896358", Offset = "0x896358")]
		private void <Init>b__12_1(BaseEventData x)
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Ui.StartProduction
{
	[Token(Token = "0x2000491")]
	public interface IToyBlastPuzzleStartProduction
	{
		[Token(Token = "0x60015D2")]
		void Init(ToyBlastPuzzleStageInfo stageInfo);

		[Token(Token = "0x60015D3")]
		void Play();

		[Token(Token = "0x60015D4")]
		bool IsFinish();
	}
	[Token(Token = "0x2000492")]
	public class ToyBlastPuzzleStartProductionManager : MonoBehaviour
	{
		[Token(Token = "0x2000493")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881CAC", Offset = "0x881CAC")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x400170C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ToyBlastPuzzleStageInfo stageInfo;

			[Token(Token = "0x60015DB")]
			[Address(RVA = "0xF976FC", Offset = "0xF976FC", VA = "0xF976FC")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60015DC")]
			[Address(RVA = "0xF97704", Offset = "0xF97704", VA = "0xF97704")]
			internal void <Init>b__0(IToyBlastPuzzleStartProduction x)
			{
			}
		}

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToyBlastPuzzleStartProductionNorma _toyBlastPuzzleStartProductionNorma;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToyBlastPuzzleStartProductionResidentNorma _toyBlastPuzzleStartProductionResidentNorma;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ToyBlastPuzzleStartProductionStartVoice _toyBlastPuzzleStartProductionStartVoice;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<IToyBlastPuzzleStartProduction> _interfaceList;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isPlay;

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xE6BB34", Offset = "0xE6BB34", VA = "0xE6BB34")]
		private void PlayNextStartProduction()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xE6BC3C", Offset = "0xE6BC3C", VA = "0xE6BC3C")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xE6BC88", Offset = "0xE6BC88", VA = "0xE6BC88")]
		public void Init(ToyBlastPuzzleStageInfo stageInfo)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xE6BDFC", Offset = "0xE6BDFC", VA = "0xE6BDFC")]
		public void PlayStartProduction()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xE6BE14", Offset = "0xE6BE14", VA = "0xE6BE14")]
		public bool UpdateStartProduction()
		{
			return default(bool);
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xE6BF54", Offset = "0xE6BF54", VA = "0xE6BF54")]
		public ToyBlastPuzzleStartProductionManager()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class ToyBlastPuzzleStartProductionNorma : MonoBehaviour, IToyBlastPuzzleStartProduction
	{
		[Serializable]
		[Token(Token = "0x2000495")]
		private class NormaParentGameObjectAndCountText
		{
			[Token(Token = "0x400170F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject TargetBox;

			[Token(Token = "0x4001710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject NormaPanelModelParent;

			[Token(Token = "0x4001711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text CountText;

			[Token(Token = "0x60015E4")]
			[Address(RVA = "0xF97898", Offset = "0xF97898", VA = "0xF97898")]
			public NormaParentGameObjectAndCountText()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000496")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881CBC", Offset = "0x881CBC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001712")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001713")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<NormaParentGameObjectAndCountText> <>9__5_0;

			[Token(Token = "0x4001714")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<NormaParentGameObjectAndCountText, bool> <>9__5_1;

			[Token(Token = "0x60015E6")]
			[Address(RVA = "0xF97820", Offset = "0xF97820", VA = "0xF97820")]
			public <>c()
			{
			}

			[Token(Token = "0x60015E7")]
			[Address(RVA = "0xF97828", Offset = "0xF97828", VA = "0xF97828")]
			internal void <Init>b__5_0(NormaParentGameObjectAndCountText x)
			{
			}

			[Token(Token = "0x60015E8")]
			[Address(RVA = "0xF97868", Offset = "0xF97868", VA = "0xF97868")]
			internal bool <Init>b__5_1(NormaParentGameObjectAndCountText x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<NormaParentGameObjectAndCountText> _normaParentGameObjectAndCountTextList;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayableDirector playableDirector;

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xE6BF5C", Offset = "0xE6BF5C", VA = "0xE6BF5C", Slot = "6")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xE6BF8C", Offset = "0xE6BF8C", VA = "0xE6BF8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xE6C034", Offset = "0xE6C034", VA = "0xE6C034", Slot = "4")]
		public void Init(ToyBlastPuzzleStageInfo stageInfo)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xE6C6D0", Offset = "0xE6C6D0", VA = "0xE6C6D0", Slot = "5")]
		public void Play()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xE6C714", Offset = "0xE6C714", VA = "0xE6C714")]
		public void PlayNextNormaVoice()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xE6C7D8", Offset = "0xE6C7D8", VA = "0xE6C7D8")]
		public ToyBlastPuzzleStartProductionNorma()
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xE6C850", Offset = "0xE6C850", VA = "0xE6C850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896368", Offset = "0x896368")]
		private void <Awake>b__4_0(PlayableDirector obj)
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class ToyBlastPuzzleStartProductionResidentNorma : MonoBehaviour, IToyBlastPuzzleStartProduction
	{
		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableDirector playableDirector;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isFinish;

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xE6C878", Offset = "0xE6C878", VA = "0xE6C878", Slot = "6")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xE6C880", Offset = "0xE6C880", VA = "0xE6C880")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xE6C928", Offset = "0xE6C928", VA = "0xE6C928", Slot = "4")]
		public void Init(ToyBlastPuzzleStageInfo stageInfo)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xE6C954", Offset = "0xE6C954", VA = "0xE6C954", Slot = "5")]
		public void Play()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xE6C998", Offset = "0xE6C998", VA = "0xE6C998")]
		public ToyBlastPuzzleStartProductionResidentNorma()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xE6C9A0", Offset = "0xE6C9A0", VA = "0xE6C9A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896378", Offset = "0x896378")]
		private void <Awake>b__3_0(PlayableDirector obj)
		{
		}
	}
	[Token(Token = "0x2000498")]
	public class ToyBlastPuzzleStartProductionStartVoice : MonoBehaviour, IToyBlastPuzzleStartProduction
	{
		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PuzzleVoiceData _startPuzzleVoiceData;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isPlaySe;

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xE6C9AC", Offset = "0xE6C9AC", VA = "0xE6C9AC", Slot = "6")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xE6C9B4", Offset = "0xE6C9B4", VA = "0xE6C9B4", Slot = "5")]
		public void Play()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xE6CA2C", Offset = "0xE6CA2C", VA = "0xE6CA2C", Slot = "4")]
		public void Init(ToyBlastPuzzleStageInfo stageInfo)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xE6CA9C", Offset = "0xE6CA9C", VA = "0xE6CA9C")]
		public ToyBlastPuzzleStartProductionStartVoice()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Ui.EndProduction
{
	[Token(Token = "0x2000499")]
	public enum EnumToyBlastPuzzleEndProductionType
	{
		[Token(Token = "0x400171A")]
		None,
		[Token(Token = "0x400171B")]
		StageFailed,
		[Token(Token = "0x400171C")]
		StageClear,
		[Token(Token = "0x400171D")]
		AllStageClear
	}
	[Token(Token = "0x200049A")]
	public interface IToyBlastPuzzleEndProduction
	{
		[Token(Token = "0x60015F3")]
		void Init();

		[Token(Token = "0x60015F4")]
		void Play();

		[Token(Token = "0x60015F5")]
		bool IsFinish();
	}
	[Token(Token = "0x200049B")]
	public class ToyBlastPuzzleEndProductionAllStageClear : MonoBehaviour, IToyBlastPuzzleEndProduction
	{
		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableDirector playableDirector;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _mainText;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource _mainTextAudioSource;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<GameObject> _showTextModelGameObjectList;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<AudioClip> _showTextModelAudioClipList;

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xF76C58", Offset = "0xF76C58", VA = "0xF76C58", Slot = "6")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xF76C88", Offset = "0xF76C88", VA = "0xF76C88")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xF76D7C", Offset = "0xF76D7C", VA = "0xF76D7C", Slot = "4")]
		public void Init()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xF76DB8", Offset = "0xF76DB8", VA = "0xF76DB8")]
		private void InitTextModel()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xF771C4", Offset = "0xF771C4", VA = "0xF771C4", Slot = "5")]
		public void Play()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xF77280", Offset = "0xF77280", VA = "0xF77280")]
		public ToyBlastPuzzleEndProductionAllStageClear()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xF77288", Offset = "0xF77288", VA = "0xF77288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896388", Offset = "0x896388")]
		private void <Awake>b__6_0(PlayableDirector obj)
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class ToyBlastPuzzleEndProductionManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200049D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881CCC", Offset = "0x881CCC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400172A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<IToyBlastPuzzleEndProduction> <>9__14_0;

			[Token(Token = "0x6001609")]
			[Address(RVA = "0xF95C5C", Offset = "0xF95C5C", VA = "0xF95C5C")]
			public <>c()
			{
			}

			[Token(Token = "0x600160A")]
			[Address(RVA = "0xF95C64", Offset = "0xF95C64", VA = "0xF95C64")]
			internal void <SetEndProductionType>b__14_0(IToyBlastPuzzleEndProduction x)
			{
			}
		}

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToyBlastPuzzleEndProductionStageClear _toyBlastPuzzleEndProductionStageClear;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToyBlastPuzzleEndProductionAllStageClear _toyBlastPuzzleEndProductionAllStageClear;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ToyBlastPuzzleEndProductionStageFailed _toyBlastPuzzleEndProductionStageFailed;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<IToyBlastPuzzleEndProduction> _interfaceList;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isPlay;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D85C", Offset = "0x88D85C")]
		private EnumToyBlastPuzzleEndProductionType <EndProductionType>k__BackingField;

		[Token(Token = "0x170001FB")]
		public EnumToyBlastPuzzleEndProductionType EndProductionType
		{
			[Token(Token = "0x6001601")]
			[Address(RVA = "0xF7743C", Offset = "0xF7743C", VA = "0xF7743C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896398", Offset = "0x896398")]
			get
			{
				return default(EnumToyBlastPuzzleEndProductionType);
			}
			[Token(Token = "0x6001602")]
			[Address(RVA = "0xF77444", Offset = "0xF77444", VA = "0xF77444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8963A8", Offset = "0x8963A8")]
			private set
			{
			}
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xF772B0", Offset = "0xF772B0", VA = "0xF772B0")]
		public void SetStarCount(int starCount)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xF772CC", Offset = "0xF772CC", VA = "0xF772CC")]
		private void PlayNextEndProduction()
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xF773D4", Offset = "0xF773D4", VA = "0xF773D4")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xF77420", Offset = "0xF77420", VA = "0xF77420")]
		public bool IsRetry()
		{
			return default(bool);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xF7744C", Offset = "0xF7744C", VA = "0xF7744C")]
		public void Init()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xF77458", Offset = "0xF77458", VA = "0xF77458")]
		public void SetEndProductionType(EnumToyBlastPuzzleEndProductionType endProductionType)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xF77684", Offset = "0xF77684", VA = "0xF77684")]
		public void PlayEndProduction()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xF7769C", Offset = "0xF7769C", VA = "0xF7769C")]
		public bool UpdateEndProduction()
		{
			return default(bool);
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xF777DC", Offset = "0xF777DC", VA = "0xF777DC")]
		public ToyBlastPuzzleEndProductionManager()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class ToyBlastPuzzleEndProductionStageClear : MonoBehaviour, IToyBlastPuzzleEndProduction
	{
		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableDirector _playableDirector;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _mainText;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource _mainTextAudioSource;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _starCount;

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xF777E4", Offset = "0xF777E4", VA = "0xF777E4")]
		public void SetStarCount(int count)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xF777EC", Offset = "0xF777EC", VA = "0xF777EC", Slot = "6")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xF7781C", Offset = "0xF7781C", VA = "0xF7781C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xF77910", Offset = "0xF77910", VA = "0xF77910", Slot = "4")]
		public void Init()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xF77938", Offset = "0xF77938", VA = "0xF77938", Slot = "5")]
		public void Play()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xF779D0", Offset = "0xF779D0", VA = "0xF779D0")]
		public ToyBlastPuzzleEndProductionStageClear()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xF779D8", Offset = "0xF779D8", VA = "0xF779D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8963B8", Offset = "0x8963B8")]
		private void <Awake>b__7_0(PlayableDirector obj)
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class ToyBlastPuzzleEndProductionStageClearPlayStarCountVoice : MonoBehaviour
	{
		[Token(Token = "0x6001612")]
		[Address(RVA = "0xF77A00", Offset = "0xF77A00", VA = "0xF77A00")]
		public void PlayStageClearStarCountVoice(int starCount)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xF77A7C", Offset = "0xF77A7C", VA = "0xF77A7C")]
		public ToyBlastPuzzleEndProductionStageClearPlayStarCountVoice()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class ToyBlastPuzzleEndProductionStageFailed : MonoBehaviour, IToyBlastPuzzleEndProduction
	{
		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableDirector playableDirector;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EventTrigger _giveUpButtonEventTrigger;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EventTrigger _retryButtonEventTrigger;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _titleText;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text _mainText;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI _giveUpButtonTextMeshPro;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI _retryButtonTextMeshPro;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88D92C", Offset = "0x88D92C")]
		private bool <IsRetry>k__BackingField;

		[Token(Token = "0x170001FC")]
		public bool IsRetry
		{
			[Token(Token = "0x6001614")]
			[Address(RVA = "0xF77A84", Offset = "0xF77A84", VA = "0xF77A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8963C8", Offset = "0x8963C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001615")]
			[Address(RVA = "0xF77A8C", Offset = "0xF77A8C", VA = "0xF77A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8963D8", Offset = "0x8963D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xF77A98", Offset = "0xF77A98", VA = "0xF77A98", Slot = "6")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xF77AC8", Offset = "0xF77AC8", VA = "0xF77AC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xF77DF0", Offset = "0xF77DF0", VA = "0xF77DF0", Slot = "4")]
		public void Init()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xF77E7C", Offset = "0xF77E7C", VA = "0xF77E7C", Slot = "5")]
		public void Play()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xF77ED0", Offset = "0xF77ED0", VA = "0xF77ED0")]
		private void PushButton(bool isRetry)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xF780A8", Offset = "0xF780A8", VA = "0xF780A8")]
		public ToyBlastPuzzleEndProductionStageFailed()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xF780B0", Offset = "0xF780B0", VA = "0xF780B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8963E8", Offset = "0x8963E8")]
		private void <Awake>b__13_0(PlayableDirector obj)
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xF780D8", Offset = "0xF780D8", VA = "0xF780D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8963F8", Offset = "0x8963F8")]
		private void <Awake>b__13_1(BaseEventData x)
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xF780E0", Offset = "0xF780E0", VA = "0xF780E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896408", Offset = "0x896408")]
		private void <Awake>b__13_2(BaseEventData x)
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Ui.DescriptionGimmick
{
	[Token(Token = "0x20004A1")]
	public class ToyBlastPuzzleDescriptionGimmickAction : MonoBehaviour
	{
		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400173A")]
		private const float MoveTime = 1f;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DescriptionGimmickData _descriptionGimmickData;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> _targetGameObjectList;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x88D94C", Offset = "0x88D94C")]
		private readonly Dictionary<GameObject, (Vector3, Vector3)> _posDictionary;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _moveTargetPos;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _stateValue;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _moveCompleteCount;

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xFA9C94", Offset = "0xFA9C94", VA = "0xFA9C94")]
		public void ForceFinish()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xFA9CCC", Offset = "0xFA9CCC", VA = "0xFA9CCC")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xFA9D6C", Offset = "0xFA9D6C", VA = "0xFA9D6C")]
		public void Init()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xFA9E24", Offset = "0xFA9E24", VA = "0xFA9E24")]
		public void SetData(DescriptionGimmickData data, List<GameObject> objList)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xFAA184", Offset = "0xFAA184", VA = "0xFAA184")]
		public void UpdateFunc()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xFAA544", Offset = "0xFAA544", VA = "0xFAA544")]
		public ToyBlastPuzzleDescriptionGimmickAction()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xFAA5BC", Offset = "0xFAA5BC", VA = "0xFAA5BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896418", Offset = "0x896418")]
		private void <UpdateFunc>b__12_0()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xFAA628", Offset = "0xFAA628", VA = "0xFAA628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896428", Offset = "0x896428")]
		private void <UpdateFunc>b__12_1()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class ToyBlastPuzzleDescriptionGimmickManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881CDC", Offset = "0x881CDC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<DescriptionGimmickData, int> <>9__16_0;

			[Token(Token = "0x4001747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ToyBlastPuzzleOrnamentInfo, bool> <>9__20_0;

			[Token(Token = "0x4001748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ToyBlastPuzzlePanelInfo, bool> <>9__21_0;

			[Token(Token = "0x4001749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ToyBlastPuzzlePanelInfo, bool> <>9__22_0;

			[Token(Token = "0x400174A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ToyBlastPuzzleOrnamentInfo, bool> <>9__26_3;

			[Token(Token = "0x400174B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<ToyBlastPuzzlePanelInfo, bool> <>9__26_4;

			[Token(Token = "0x400174C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<ToyBlastPuzzlePanelInfo, EnumToyBlastPuzzlePanelType> <>9__26_5;

			[Token(Token = "0x6001646")]
			[Address(RVA = "0xF951B8", Offset = "0xF951B8", VA = "0xF951B8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001647")]
			[Address(RVA = "0xF951C0", Offset = "0xF951C0", VA = "0xF951C0")]
			internal int <Init>b__16_0(DescriptionGimmickData x)
			{
				return default(int);
			}

			[Token(Token = "0x6001648")]
			[Address(RVA = "0xF951D8", Offset = "0xF951D8", VA = "0xF951D8")]
			internal bool <CheckBoardOrnamentColorCage>b__20_0(ToyBlastPuzzleOrnamentInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001649")]
			[Address(RVA = "0xF95200", Offset = "0xF95200", VA = "0xF95200")]
			internal bool <CheckBoardAppearBomb>b__21_0(ToyBlastPuzzlePanelInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x600164A")]
			[Address(RVA = "0xF9521C", Offset = "0xF9521C", VA = "0xF9521C")]
			internal bool <CheckBoardBombMix>b__22_0(ToyBlastPuzzlePanelInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x600164B")]
			[Address(RVA = "0xF95238", Offset = "0xF95238", VA = "0xF95238")]
			internal bool <CalcTargetGameObjectList>b__26_3(ToyBlastPuzzleOrnamentInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x600164C")]
			[Address(RVA = "0xF95260", Offset = "0xF95260", VA = "0xF95260")]
			internal bool <CalcTargetGameObjectList>b__26_4(ToyBlastPuzzlePanelInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x600164D")]
			[Address(RVA = "0xF9527C", Offset = "0xF9527C", VA = "0xF9527C")]
			internal EnumToyBlastPuzzlePanelType <CalcTargetGameObjectList>b__26_5(ToyBlastPuzzlePanelInfo x)
			{
				return default(EnumToyBlastPuzzlePanelType);
			}
		}

		[Token(Token = "0x20004A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881CEC", Offset = "0x881CEC")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x400174D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DescriptionGimmickData descriptionGimmickData;

			[Token(Token = "0x600164E")]
			[Address(RVA = "0xF95294", Offset = "0xF95294", VA = "0xF95294")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x600164F")]
			[Address(RVA = "0xF9529C", Offset = "0xF9529C", VA = "0xF9529C")]
			internal bool <CalcTargetGameObjectList>b__0(ToyBlastPuzzleTileInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001650")]
			[Address(RVA = "0xF9530C", Offset = "0xF9530C", VA = "0xF9530C")]
			internal bool <CalcTargetGameObjectList>b__1(ToyBlastPuzzlePanelInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001651")]
			[Address(RVA = "0xF9537C", Offset = "0xF9537C", VA = "0xF9537C")]
			internal bool <CalcTargetGameObjectList>b__2(ToyBlastPuzzleOrnamentInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DescriptionGimmickDataManager _descriptionGimmickDataManager;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToyBlastPuzzleDescriptionGimmickAction _toyBlastPuzzleDescriptionGimmickAction;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<DescriptionGimmickData> _descriptionGimmickDataList;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isEnableFlag;

		[Token(Token = "0x170001FD")]
		private PuzzlePlaySaveData SaveData
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0xFAA694", Offset = "0xFAA694", VA = "0xFAA694")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		private int InvalidIndex
		{
			[Token(Token = "0x6001628")]
			[Address(RVA = "0xFAA714", Offset = "0xFAA714", VA = "0xFAA714")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xFAA71C", Offset = "0xFAA71C", VA = "0xFAA71C")]
		private bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xFAA78C", Offset = "0xFAA78C", VA = "0xFAA78C")]
		public bool IsOpenPauseDialogUnEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xFAA7A8", Offset = "0xFAA7A8", VA = "0xFAA7A8")]
		public bool IsSelectPanelUnEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xFAA7C4", Offset = "0xFAA7C4", VA = "0xFAA7C4")]
		public bool IsUpdateDrawUnEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xFAA7EC", Offset = "0xFAA7EC", VA = "0xFAA7EC")]
		public bool IsMoveBoardPositionUnEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xFAA808", Offset = "0xFAA808", VA = "0xFAA808")]
		public bool IsLaserPointerFocusUnEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xFAA824", Offset = "0xFAA824", VA = "0xFAA824")]
		private bool IsEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xFAA82C", Offset = "0xFAA82C", VA = "0xFAA82C")]
		public void ResetDescriptionGimmickData()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xFAA88C", Offset = "0xFAA88C", VA = "0xFAA88C")]
		public void Init(bool isFirstStage)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xFAAA5C", Offset = "0xFAAA5C", VA = "0xFAAA5C")]
		private void CheckBoardTile()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xFAAC8C", Offset = "0xFAAC8C", VA = "0xFAAC8C")]
		private void CheckBoardPanel()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xFAAEBC", Offset = "0xFAAEBC", VA = "0xFAAEBC")]
		private void CheckBoardOrnament()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xFAB0F4", Offset = "0xFAB0F4", VA = "0xFAB0F4")]
		private void CheckBoardOrnamentColorCage()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xFAB2FC", Offset = "0xFAB2FC", VA = "0xFAB2FC")]
		private void CheckBoardAppearBomb()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xFAB504", Offset = "0xFAB504", VA = "0xFAB504")]
		private void CheckBoardBombMix()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xFAB794", Offset = "0xFAB794", VA = "0xFAB794")]
		private int CheckBombMixTargetIndex(int bombBaseIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xFABB68", Offset = "0xFABB68", VA = "0xFABB68")]
		public void UpdateFunc()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xFABCD0", Offset = "0xFABCD0", VA = "0xFABCD0")]
		private void SaveDescriptionGimmickData(DescriptionGimmickData descriptionGimmickData)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xFABF08", Offset = "0xFABF08", VA = "0xFABF08")]
		private List<GameObject> CalcTargetGameObjectList(DescriptionGimmickData descriptionGimmickData)
		{
			return null;
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xFAC9E0", Offset = "0xFAC9E0", VA = "0xFAC9E0")]
		public void OnCreateNewPanelSubject(int index)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xFACC6C", Offset = "0xFACC6C", VA = "0xFACC6C")]
		public void NotifyChangePanel(ToyBlastPuzzleChangePanelInfo changePanelInfo)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xFACB28", Offset = "0xFACB28", VA = "0xFACB28")]
		private void OnCreateBombPanel(int index)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xFACCD8", Offset = "0xFACCD8", VA = "0xFACCD8")]
		public void NotifyPanelMoveCompletePanel(int index)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xFACDBC", Offset = "0xFACDBC", VA = "0xFACDBC")]
		public ToyBlastPuzzleDescriptionGimmickManager()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xFACE34", Offset = "0xFACE34", VA = "0xFACE34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896438", Offset = "0x896438")]
		private bool <CheckBoardBombMix>b__22_1(ToyBlastPuzzlePanelInfo x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xFACE5C", Offset = "0xFACE5C", VA = "0xFACE5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896448", Offset = "0x896448")]
		private void <SaveDescriptionGimmickData>b__25_0(EnumToyBlastPuzzlePanelType x)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xFACE8C", Offset = "0xFACE8C", VA = "0xFACE8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896458", Offset = "0x896458")]
		private void <SaveDescriptionGimmickData>b__25_1(EnumToyBlastPuzzleTileType x)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xFACEBC", Offset = "0xFACEBC", VA = "0xFACEBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896468", Offset = "0x896468")]
		private void <SaveDescriptionGimmickData>b__25_2(EnumToyBlastPuzzleOrnamentType x)
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Tutorial
{
	[Token(Token = "0x20004A5")]
	public class ToyBlastPuzzleTutorialEffect : MonoBehaviour
	{
		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _grayNormalPanelPrefabGameObject;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<ToyBlastPuzzlePanelDraw, GameObject> _panelDrawGameObjectDictionary;

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xE6D130", Offset = "0xE6D130", VA = "0xE6D130")]
		public void PlayGrayPanelAction()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xE6D134", Offset = "0xE6D134", VA = "0xE6D134")]
		public void FinishGrayPanelAction()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xE6D138", Offset = "0xE6D138", VA = "0xE6D138")]
		public ToyBlastPuzzleTutorialEffect()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class ToyBlastPuzzleTutorialManager : MonoBehaviour
	{
		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToyBlastPuzzleTutorialVoice _tutorialVoice;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToyBlastPuzzleTutorialPicture _tutorialPicture;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ToyBlastPuzzleTutorialEffect _tutorialEffect;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _stateValue;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _isEnable;

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xE6D1B0", Offset = "0xE6D1B0", VA = "0xE6D1B0")]
		public bool IsSelectPanelUnEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xE6D1D0", Offset = "0xE6D1D0", VA = "0xE6D1D0")]
		public bool IsUpdateDrawUnEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xE6D1F0", Offset = "0xE6D1F0", VA = "0xE6D1F0")]
		public void Init()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xE6D2F4", Offset = "0xE6D2F4", VA = "0xE6D2F4")]
		public void UpdateFunc()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xE6D370", Offset = "0xE6D370", VA = "0xE6D370")]
		private void UpdateTutorialCore()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xE6D69C", Offset = "0xE6D69C", VA = "0xE6D69C")]
		public void NotifyErasePanel()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xE6D708", Offset = "0xE6D708", VA = "0xE6D708")]
		public ToyBlastPuzzleTutorialManager()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xE6D710", Offset = "0xE6D710", VA = "0xE6D710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896478", Offset = "0x896478")]
		private void <Init>b__7_0(UniRx.Unit unit)
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class ToyBlastPuzzleTutorialPicture : MonoBehaviour
	{
		[Token(Token = "0x600165D")]
		[Address(RVA = "0xE6D62C", Offset = "0xE6D62C", VA = "0xE6D62C")]
		public void Show()
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xE6D2CC", Offset = "0xE6D2CC", VA = "0xE6D2CC")]
		public void Hide()
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xE6D738", Offset = "0xE6D738", VA = "0xE6D738")]
		public ToyBlastPuzzleTutorialPicture()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class ToyBlastPuzzleTutorialVoice : MonoBehaviour
	{
		[Token(Token = "0x20004A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881CFC", Offset = "0x881CFC")]
		private sealed class <PlayLoopSe>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400175A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400175B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400175C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ToyBlastPuzzleTutorialVoice <>4__this;

			[Token(Token = "0x400175D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <waitSec>5__2;

			[Token(Token = "0x17000200")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001669")]
				[Address(RVA = "0xF97A88", Offset = "0xF97A88", VA = "0xF97A88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000201")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600166B")]
				[Address(RVA = "0xF97AD0", Offset = "0xF97AD0", VA = "0xF97AD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001666")]
			[Address(RVA = "0xF978A0", Offset = "0xF978A0", VA = "0xF978A0")]
			[DebuggerHidden]
			public <PlayLoopSe>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001667")]
			[Address(RVA = "0xF978CC", Offset = "0xF978CC", VA = "0xF978CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001668")]
			[Address(RVA = "0xF978D0", Offset = "0xF978D0", VA = "0xF978D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600166A")]
			[Address(RVA = "0xF97A90", Offset = "0xF97A90", VA = "0xF97A90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PuzzleTutorialVoiceDataManager _puzzleTutorialVoiceDataManager;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float LoopWaitSec;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Subject<UniRx.Unit> _finishTutorialVoiceLoopSubject;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isLoop;

		[Token(Token = "0x170001FF")]
		public IObservable<UniRx.Unit> OnFinishTutorialVoiceLoop
		{
			[Token(Token = "0x6001660")]
			[Address(RVA = "0xE6D740", Offset = "0xE6D740", VA = "0xE6D740")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xE6D654", Offset = "0xE6D654", VA = "0xE6D654")]
		public bool IsPlayTutorialVoice()
		{
			return default(bool);
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xE6D6E4", Offset = "0xE6D6E4", VA = "0xE6D6E4")]
		public void StopTutorialVoice()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xE6D4B4", Offset = "0xE6D4B4", VA = "0xE6D4B4")]
		public void PlayTutorialVoice(int id)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xE6D748", Offset = "0xE6D748", VA = "0xE6D748")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x896488", Offset = "0x896488")]
		private IEnumerator PlayLoopSe()
		{
			return null;
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xE6D7B4", Offset = "0xE6D7B4", VA = "0xE6D7B4")]
		public ToyBlastPuzzleTutorialVoice()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.TileFrame
{
	[Token(Token = "0x20004AA")]
	public enum EnumToyBlastPuzzleTileFrameType
	{
		[Token(Token = "0x400175F")]
		None,
		[Token(Token = "0x4001760")]
		Center,
		[Token(Token = "0x4001761")]
		Top,
		[Token(Token = "0x4001762")]
		Down,
		[Token(Token = "0x4001763")]
		Left,
		[Token(Token = "0x4001764")]
		Right,
		[Token(Token = "0x4001765")]
		TopLeft,
		[Token(Token = "0x4001766")]
		TopRight,
		[Token(Token = "0x4001767")]
		DownLeft,
		[Token(Token = "0x4001768")]
		DownRight,
		[Token(Token = "0x4001769")]
		ConnectTopLeft,
		[Token(Token = "0x400176A")]
		ConnectTopRight,
		[Token(Token = "0x400176B")]
		ConnectDownLeft,
		[Token(Token = "0x400176C")]
		ConnectDownRight,
		[Token(Token = "0x400176D")]
		ConnectTopLeftDownRight,
		[Token(Token = "0x400176E")]
		ConnectTopRightDownLeft
	}
	[Token(Token = "0x20004AB")]
	public class ToyBlastPuzzleTileFrame : MonoBehaviour
	{
		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToyBlastPuzzleTileFrameDraw _drawScript;

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xE6CE6C", Offset = "0xE6CE6C", VA = "0xE6CE6C")]
		public void UpdateDraw(ToyBlastPuzzleTileFrameInfo info)
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xE6D0A0", Offset = "0xE6D0A0", VA = "0xE6D0A0")]
		public ToyBlastPuzzleTileFrame()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class ToyBlastPuzzleTileFrameDraw : MonoBehaviour
	{
		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject _model;

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xE6CE84", Offset = "0xE6CE84", VA = "0xE6CE84")]
		public void UpdateDraw(ToyBlastPuzzleTileFrameInfo tileFrameInfo)
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xE6D0A8", Offset = "0xE6D0A8", VA = "0xE6D0A8")]
		public ToyBlastPuzzleTileFrameDraw()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class ToyBlastPuzzleTileFrameInfo
	{
		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int CurrentIndex;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public EnumToyBlastPuzzleTileFrameType EnumToyBlastPuzzleTileType;

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xE6D0B0", Offset = "0xE6D0B0", VA = "0xE6D0B0")]
		public ToyBlastPuzzleTileFrameInfo()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Tile
{
	[Token(Token = "0x20004AE")]
	public enum EnumToyBlastPuzzleTileType
	{
		[Token(Token = "0x4001774")]
		None = 0,
		[Token(Token = "0x4001775")]
		Normal = 1,
		[Token(Token = "0x4001776")]
		Bubble = 100,
		[Token(Token = "0x4001777")]
		Cage = 200
	}
	[Token(Token = "0x20004AF")]
	public static class ToyBlastPuzzleTileTypeExtension
	{
		[Token(Token = "0x6001671")]
		[Address(RVA = "0xE6D0CC", Offset = "0xE6D0CC", VA = "0xE6D0CC")]
		public static bool IsTileNone(this EnumToyBlastPuzzleTileType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xE6D0B8", Offset = "0xE6D0B8", VA = "0xE6D0B8")]
		public static bool IsVisible(this EnumToyBlastPuzzleTileType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xE6D0D8", Offset = "0xE6D0D8", VA = "0xE6D0D8")]
		public static bool IsEraseTileOnly(this EnumToyBlastPuzzleTileType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xE6D0E4", Offset = "0xE6D0E4", VA = "0xE6D0E4")]
		public static bool IsEraseTileEnable(this EnumToyBlastPuzzleTileType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xE6D100", Offset = "0xE6D100", VA = "0xE6D100")]
		public static bool IsFallPanelEnable(this EnumToyBlastPuzzleTileType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xE6D10C", Offset = "0xE6D10C", VA = "0xE6D10C")]
		public static bool IsLandPanelEnable(this EnumToyBlastPuzzleTileType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xE6D118", Offset = "0xE6D118", VA = "0xE6D118")]
		public static bool IsSelectPanelEnable(this EnumToyBlastPuzzleTileType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xE6D124", Offset = "0xE6D124", VA = "0xE6D124")]
		public static bool IsChangePanelEnable(this EnumToyBlastPuzzleTileType type, EnumToyBlastPuzzleChangePanelReasonType changePanelReasonType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004B0")]
	public class ToyBlastPuzzleTile : MonoBehaviour
	{
		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToyBlastPuzzleTileDraw _drawScript;

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xE6CAA4", Offset = "0xE6CAA4", VA = "0xE6CAA4")]
		public void UpdateDraw(ToyBlastPuzzleTileInfo info)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xE6CB20", Offset = "0xE6CB20", VA = "0xE6CB20")]
		public void UpdateSelectFocus(bool isSelectFocus)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xE6CBFC", Offset = "0xE6CBFC", VA = "0xE6CBFC")]
		public ToyBlastPuzzleTile()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class ToyBlastPuzzleTileDraw : MonoBehaviour
	{
		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EnumToyBlastPuzzleTileType _currentTileType;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _currentVisible;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject _model;

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xE6CABC", Offset = "0xE6CABC", VA = "0xE6CABC")]
		public void UpdateDraw(ToyBlastPuzzleTileInfo puzzleTileInfo)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xE6CC28", Offset = "0xE6CC28", VA = "0xE6CC28")]
		private void UpdateDrawCore()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xE6CE64", Offset = "0xE6CE64", VA = "0xE6CE64")]
		public ToyBlastPuzzleTileDraw()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class ToyBlastPuzzleTileInfo
	{
		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int CurrentIndex;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public EnumToyBlastPuzzleTileType EnumToyBlastPuzzleTileType;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsDestroy;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool IsFallToyPoint;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 CurrentLocalPos;

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xE6CC04", Offset = "0xE6CC04", VA = "0xE6CC04")]
		public bool IsVisibleTile()
		{
			return default(bool);
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xE6D0C4", Offset = "0xE6D0C4", VA = "0xE6D0C4")]
		public ToyBlastPuzzleTileInfo()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Stage
{
	[Token(Token = "0x20004B3")]
	public class ToyBlastPuzzleStageDataBase : Singleton<ToyBlastPuzzleStageDataBase>
	{
		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string CreateToyBlastPuzzleStageDataFolderPath;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string CreateToyBlastPuzzleStageDataFilePath;

		[Token(Token = "0x4001783")]
		private const string ResourceToyBlastPuzzleStageDataFolderPath = "ToyBlastPuzzle/ToyBlastPuzzleStageData";

		[Token(Token = "0x4001784")]
		private const string ResourceToyBlastPuzzleStageDataFilePath = "ToyBlastPuzzle/ToyBlastPuzzleStageData/ToyBlastPuzzleStageData{0}";

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xE697DC", Offset = "0xE697DC", VA = "0xE697DC")]
		public void SaveToyBlastPuzzleStageInfo(ToyBlastPuzzleStageInfo toyBlastPuzzleStageInfo, int targetRaw, int targetLine)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xE69AE0", Offset = "0xE69AE0", VA = "0xE69AE0")]
		public ToyBlastPuzzleStageInfo LoadToyBlastPuzzleStageInfo(int stageId)
		{
			return null;
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xE6A068", Offset = "0xE6A068", VA = "0xE6A068")]
		private string LoadPuzzleStageJson(string path)
		{
			return null;
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xE6A1B4", Offset = "0xE6A1B4", VA = "0xE6A1B4")]
		public void DeleteAllStageSaveData()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xE6A220", Offset = "0xE6A220", VA = "0xE6A220")]
		public void DeleteStageSaveData(int stageId)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xE6A32C", Offset = "0xE6A32C", VA = "0xE6A32C")]
		public void ExportAllStageData()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xE6A380", Offset = "0xE6A380", VA = "0xE6A380")]
		public ToyBlastPuzzleStageDataBase()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class ToyBlastPuzzleStageInfoManager
	{
		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private QuestData _questData;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _stageInfoListRound;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _stageInfoListIndex;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DA80", Offset = "0x88DA80")]
		private List<ToyBlastPuzzleStageInfo> <StageInfoList>k__BackingField;

		[Token(Token = "0x17000202")]
		public int CurrentEpisodeAreaId
		{
			[Token(Token = "0x600168A")]
			[Address(RVA = "0xE6B008", Offset = "0xE6B008", VA = "0xE6B008")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000203")]
		public int CurrentEpisodeId
		{
			[Token(Token = "0x600168B")]
			[Address(RVA = "0xE6B020", Offset = "0xE6B020", VA = "0xE6B020")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000204")]
		public int CurrentRoundId
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0xE6B038", Offset = "0xE6B038", VA = "0xE6B038")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000205")]
		public int CurrentStageInfoListIndex
		{
			[Token(Token = "0x600168D")]
			[Address(RVA = "0xE6B040", Offset = "0xE6B040", VA = "0xE6B040")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000206")]
		public List<ToyBlastPuzzleStageInfo> StageInfoList
		{
			[Token(Token = "0x600168E")]
			[Address(RVA = "0xE6B048", Offset = "0xE6B048", VA = "0xE6B048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8965B8", Offset = "0x8965B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600168F")]
			[Address(RVA = "0xE6B050", Offset = "0xE6B050", VA = "0xE6B050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8965C8", Offset = "0x8965C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public ToyBlastPuzzleStageInfo CurrentStageInfo
		{
			[Token(Token = "0x6001691")]
			[Address(RVA = "0xE6B0B4", Offset = "0xE6B0B4", VA = "0xE6B0B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xE6AF68", Offset = "0xE6AF68", VA = "0xE6AF68")]
		public bool IsFirstStage()
		{
			return default(bool);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xE6B058", Offset = "0xE6B058", VA = "0xE6B058")]
		public bool IsFromPuzzleSelect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xE6B120", Offset = "0xE6B120", VA = "0xE6B120")]
		public void LoadStageInfoList()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xE6B428", Offset = "0xE6B428", VA = "0xE6B428")]
		public bool ClearStage()
		{
			return default(bool);
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xE6B60C", Offset = "0xE6B60C", VA = "0xE6B60C")]
		public ToyBlastPuzzleStageInfoManager()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public class ToyBlastPuzzleStagePanelPos
	{
		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector3> _toyBlastPuzzlePosList;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<ToyBlastPuzzleStageInfo, List<Vector3>> _stagePanelPosListDictionary;

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xE6B614", Offset = "0xE6B614", VA = "0xE6B614")]
		public Vector3 GetToyBlastPuzzlePos(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xE6B6A4", Offset = "0xE6B6A4", VA = "0xE6B6A4")]
		public void SetCurrentStageInfo(ToyBlastPuzzleStageInfo stageInfo)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xE6B710", Offset = "0xE6B710", VA = "0xE6B710")]
		public void Init(List<ToyBlastPuzzleStageInfo> stageInfoList, GameObject playerGameObject, GameObject boardGameObject)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xE6B8E4", Offset = "0xE6B8E4", VA = "0xE6B8E4")]
		private void InitStageInfo(ToyBlastPuzzleStageInfo stageInfo, GameObject playerGameObject, GameObject boardGameObject)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xE6B9F8", Offset = "0xE6B9F8", VA = "0xE6B9F8")]
		private Vector3 CalcToyBlastPuzzlePosCore(ToyBlastPuzzleStageInfo stageInfo, GameObject playerGameObject, GameObject boardGameObject, int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xE6BB2C", Offset = "0xE6BB2C", VA = "0xE6BB2C")]
		public ToyBlastPuzzleStagePanelPos()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Sound
{
	[Token(Token = "0x20004B6")]
	public enum EnumToyBlastPuzzleAddBgmType
	{
		[Token(Token = "0x400178C")]
		None,
		[Token(Token = "0x400178D")]
		EnchoRobotIdle
	}
	[Token(Token = "0x20004B7")]
	public enum EnumToyBlastPuzzleSeType
	{
		[Token(Token = "0x400178F")]
		None = 0,
		[Token(Token = "0x4001790")]
		SelectPanelUnEnable = 100,
		[Token(Token = "0x4001791")]
		PanelLand = 101,
		[Token(Token = "0x4001792")]
		CreateBombPanel = 102,
		[Token(Token = "0x4001793")]
		TileBubbleBreak = 200,
		[Token(Token = "0x4001794")]
		TileCageBreak = 201,
		[Token(Token = "0x4001795")]
		PanelNormalBreak = 300,
		[Token(Token = "0x4001796")]
		PanelRocketStopperBreak = 301,
		[Token(Token = "0x4001797")]
		PanelFallToyGet = 302,
		[Token(Token = "0x4001798")]
		PanelObstacleBlockBreak = 303,
		[Token(Token = "0x4001799")]
		PanelAcornBlockBreak = 304,
		[Token(Token = "0x400179A")]
		OrnamentColorCageBreak = 400,
		[Token(Token = "0x400179B")]
		OrnamentCuckooOpenDoor = 401,
		[Token(Token = "0x400179C")]
		OrnamentCuckooFlyBird = 402,
		[Token(Token = "0x400179D")]
		OrnamentPrincipalRobotBreak = 403,
		[Token(Token = "0x400179E")]
		OrnamentCuckooDamage = 404,
		[Token(Token = "0x400179F")]
		ExplodeRotor = 500,
		[Token(Token = "0x40017A0")]
		ExplodeTnt = 501,
		[Token(Token = "0x40017A1")]
		ExplodeStar = 502,
		[Token(Token = "0x40017A2")]
		ExplodeMix = 503,
		[Token(Token = "0x40017A3")]
		ExplodeStarAndStar = 504,
		[Token(Token = "0x40017A4")]
		ExplodeBombAndBomb = 505,
		[Token(Token = "0x40017A5")]
		ExplodeRotorAndRotor = 506,
		[Token(Token = "0x40017A6")]
		ExplodeRotorAndBomb = 507,
		[Token(Token = "0x40017A7")]
		ButtonSelect = 1000,
		[Token(Token = "0x40017A8")]
		BulletCountAlarm = 1001,
		[Token(Token = "0x40017A9")]
		LoopSeStarBlastEffect = 2000
	}
	[Token(Token = "0x20004B8")]
	public class ToyBlastPuzzleSeSound : MonoBehaviour
	{
		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xE67958", Offset = "0xE67958", VA = "0xE67958")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xE67984", Offset = "0xE67984", VA = "0xE67984")]
		public void Init(AudioClip clip)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xE679E4", Offset = "0xE679E4", VA = "0xE679E4")]
		public void PlaySe(bool isLoop)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xE67A24", Offset = "0xE67A24", VA = "0xE67A24")]
		public void StopSe()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xE67A40", Offset = "0xE67A40", VA = "0xE67A40")]
		public ToyBlastPuzzleSeSound()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class ToyBlastPuzzleSoundManager : MonoBehaviour
	{
		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToyBlastPuzzleSoundManagerPartsCreateSeSound _createSeSound;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToyBlastPuzzleSoundManagerPartsPlayBgm _playBgm;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ToyBlastPuzzleSoundManagerPartsReserveSeSound _reserveSeSound;

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xE67A50", Offset = "0xE67A50", VA = "0xE67A50")]
		public void InitOnce(List<ToyBlastPuzzleStageInfo> stageInfoList)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xE67DC0", Offset = "0xE67DC0", VA = "0xE67DC0")]
		public void UpdateReserveSeSound()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xE68028", Offset = "0xE68028", VA = "0xE68028")]
		public void StopPuzzleAreaBgm()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xE68094", Offset = "0xE68094", VA = "0xE68094")]
		public void PlayPuzzleAreaBgm()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xE6815C", Offset = "0xE6815C", VA = "0xE6815C")]
		public void PlayAddBgm(EnumToyBlastPuzzleAddBgmType type)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xE68240", Offset = "0xE68240", VA = "0xE68240")]
		public void PauseAddBgm()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xE68284", Offset = "0xE68284", VA = "0xE68284")]
		public void UnPauseAddBgm()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xE682C8", Offset = "0xE682C8", VA = "0xE682C8")]
		public void PlaySe(Vector3 pos, EnumToyBlastPuzzleSeType seType, bool isLoop = false)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xE682FC", Offset = "0xE682FC", VA = "0xE682FC")]
		public void StopSe(EnumToyBlastPuzzleSeType seType)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xE683E0", Offset = "0xE683E0", VA = "0xE683E0")]
		public ToyBlastPuzzleSoundManager()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class ToyBlastPuzzleSoundManagerPartsAddBgmSoundBank : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004BB")]
		public class AddBgmSoundInfo
		{
			[Token(Token = "0x40017B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EnumToyBlastPuzzleAddBgmType Type;

			[Token(Token = "0x40017B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip AudioClip;

			[Token(Token = "0x60016AD")]
			[Address(RVA = "0xF9759C", Offset = "0xF9759C", VA = "0xF9759C")]
			public AddBgmSoundInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881D1C", Offset = "0x881D1C")]
		private sealed class <>c
		{
			[Token(Token = "0x40017B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40017B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<AddBgmSoundInfo, EnumToyBlastPuzzleAddBgmType> <>9__3_0;

			[Token(Token = "0x40017B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<AddBgmSoundInfo, AudioClip> <>9__3_1;

			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xF97564", Offset = "0xF97564", VA = "0xF97564")]
			public <>c()
			{
			}

			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xF9756C", Offset = "0xF9756C", VA = "0xF9756C")]
			internal EnumToyBlastPuzzleAddBgmType <Awake>b__3_0(AddBgmSoundInfo x)
			{
				return default(EnumToyBlastPuzzleAddBgmType);
			}

			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xF97584", Offset = "0xF97584", VA = "0xF97584")]
			internal AudioClip <Awake>b__3_1(AddBgmSoundInfo x)
			{
				return null;
			}
		}

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<AddBgmSoundInfo> _addBgmSoundInfoList;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<EnumToyBlastPuzzleAddBgmType, AudioClip> _addBgmSoundInfoDictionary;

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xE684B8", Offset = "0xE684B8", VA = "0xE684B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xE68690", Offset = "0xE68690", VA = "0xE68690")]
		public AudioClip GetSeSoundAudioClip(EnumToyBlastPuzzleAddBgmType type)
		{
			return null;
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xE6872C", Offset = "0xE6872C", VA = "0xE6872C")]
		public ToyBlastPuzzleSoundManagerPartsAddBgmSoundBank()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class ToyBlastPuzzleSoundManagerPartsCreateSeSound : MonoBehaviour
	{
		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToyBlastPuzzleSoundManagerPartsSeSoundBank _seSoundBank;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToyBlastPuzzleSeSound _prefab;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<EnumToyBlastPuzzleSeType, ToyBlastPuzzleSeSound> _cashSeSoundDictionary;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ToyBlastPuzzleSeSound _normalPanelBreakSeSoundCash;

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xE67A8C", Offset = "0xE67A8C", VA = "0xE67A8C")]
		public void Init()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xE68334", Offset = "0xE68334", VA = "0xE68334")]
		public ToyBlastPuzzleSeSound GetSeSoundCash(EnumToyBlastPuzzleSeType seType)
		{
			return null;
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xE67EFC", Offset = "0xE67EFC", VA = "0xE67EFC")]
		public ToyBlastPuzzleSeSound CreateSeSound(EnumToyBlastPuzzleSeType seType, Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xE68734", Offset = "0xE68734", VA = "0xE68734")]
		private ToyBlastPuzzleSeSound CreateSeSoundCore(EnumToyBlastPuzzleSeType seType, Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xE6897C", Offset = "0xE6897C", VA = "0xE6897C")]
		public ToyBlastPuzzleSoundManagerPartsCreateSeSound()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class ToyBlastPuzzleSoundManagerPartsPlayBgm : MonoBehaviour
	{
		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _bgmAudioSource;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToyBlastPuzzleSoundManagerPartsAddBgmSoundBank _addBgmSoundBank;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EnumToyBlastPuzzleAddBgmType _currentAddBgmType;

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xE680AC", Offset = "0xE680AC", VA = "0xE680AC")]
		public void PlayPuzzleAreaBgm()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xE68040", Offset = "0xE68040", VA = "0xE68040")]
		public void StopPuzzleAreaBgm()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xE68174", Offset = "0xE68174", VA = "0xE68174")]
		public void PlayAddBgm(EnumToyBlastPuzzleAddBgmType bgmType)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xE68268", Offset = "0xE68268", VA = "0xE68268")]
		public void PauseAddBgm()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xE682AC", Offset = "0xE682AC", VA = "0xE682AC")]
		public void UnPauseAddBgm()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xE689F4", Offset = "0xE689F4", VA = "0xE689F4")]
		public ToyBlastPuzzleSoundManagerPartsPlayBgm()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class ToyBlastPuzzleSoundManagerPartsReserveSeSound
	{
		[Token(Token = "0x20004C0")]
		private class ReserveSeSoundInfo
		{
			[Token(Token = "0x40017BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly EnumToyBlastPuzzleSeType SeType;

			[Token(Token = "0x40017BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int ReserveCount;

			[Token(Token = "0x60016C4")]
			[Address(RVA = "0xF975A4", Offset = "0xF975A4", VA = "0xF975A4")]
			public ReserveSeSoundInfo(EnumToyBlastPuzzleSeType type, int count = 1)
			{
			}
		}

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<ReserveSeSoundInfo> _reserveSeSoundInfoList;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<EnumToyBlastPuzzleSeType, int> _reserveAudioClipTypeCountDictionary;

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xE67AC0", Offset = "0xE67AC0", VA = "0xE67AC0")]
		public void Init(List<ToyBlastPuzzleStageInfo> stageInfoList)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xE68B4C", Offset = "0xE68B4C", VA = "0xE68B4C")]
		private void InitStageInfo(ToyBlastPuzzleStageInfo stageInfo)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xE689FC", Offset = "0xE689FC", VA = "0xE689FC")]
		private Dictionary<EnumToyBlastPuzzleSeType, int> CreateCommonReserveAudioClipTypeCountDictionary()
		{
			return null;
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xE68FA8", Offset = "0xE68FA8", VA = "0xE68FA8")]
		private Dictionary<EnumToyBlastPuzzleSeType, int> CreateStageReserveAudioClipTypeCountDictionary(ToyBlastPuzzleStageInfo stageInfo)
		{
			return null;
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xE67E2C", Offset = "0xE67E2C", VA = "0xE67E2C")]
		public EnumToyBlastPuzzleSeType GetReserveAudioClipType()
		{
			return default(EnumToyBlastPuzzleSeType);
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xE68440", Offset = "0xE68440", VA = "0xE68440")]
		public ToyBlastPuzzleSoundManagerPartsReserveSeSound()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xE69360", Offset = "0xE69360", VA = "0xE69360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8965D8", Offset = "0x8965D8")]
		internal static void <CreateStageReserveAudioClipTypeCountDictionary>g__AddOrAdditionDic|6_0(ref Dictionary<EnumToyBlastPuzzleSeType, int> dic, EnumToyBlastPuzzleSeType soundType)
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class ToyBlastPuzzleSoundManagerPartsSeSoundBank : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004C2")]
		public class SeSoundInfo
		{
			[Token(Token = "0x40017C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EnumToyBlastPuzzleSeType Type;

			[Token(Token = "0x40017C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip AudioClip;

			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xF97674", Offset = "0xF97674", VA = "0xF97674")]
			public SeSoundInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881D2C", Offset = "0x881D2C")]
		private sealed class <>c
		{
			[Token(Token = "0x40017C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40017C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SeSoundInfo, EnumToyBlastPuzzleSeType> <>9__3_0;

			[Token(Token = "0x40017C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<SeSoundInfo, AudioClip> <>9__3_1;

			[Token(Token = "0x60016CA")]
			[Address(RVA = "0xF9763C", Offset = "0xF9763C", VA = "0xF9763C")]
			public <>c()
			{
			}

			[Token(Token = "0x60016CB")]
			[Address(RVA = "0xF97644", Offset = "0xF97644", VA = "0xF97644")]
			internal EnumToyBlastPuzzleSeType <Awake>b__3_0(SeSoundInfo x)
			{
				return default(EnumToyBlastPuzzleSeType);
			}

			[Token(Token = "0x60016CC")]
			[Address(RVA = "0xF9765C", Offset = "0xF9765C", VA = "0xF9765C")]
			internal AudioClip <Awake>b__3_1(SeSoundInfo x)
			{
				return null;
			}
		}

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<SeSoundInfo> _seSoundInfoList;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<EnumToyBlastPuzzleSeType, AudioClip> _seSoundInfoDictionary;

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xE69404", Offset = "0xE69404", VA = "0xE69404")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xE688E0", Offset = "0xE688E0", VA = "0xE688E0")]
		public AudioClip GetSeSoundAudioClip(EnumToyBlastPuzzleSeType type)
		{
			return null;
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xE695DC", Offset = "0xE695DC", VA = "0xE695DC")]
		public ToyBlastPuzzleSoundManagerPartsSeSoundBank()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.PuzzleFunc
{
	[Token(Token = "0x20004C4")]
	public class ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x17000208")]
		private static ToyBlastPuzzleManager ManagerInstance
		{
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0xF7834C", Offset = "0xF7834C", VA = "0xF7834C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		protected static int InvalidIndex
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0xF78398", Offset = "0xF78398", VA = "0xF78398")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020A")]
		protected static int BoardMaxRaw
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0xF783A8", Offset = "0xF783A8", VA = "0xF783A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020B")]
		protected static int BoardMaxLine
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0xF78400", Offset = "0xF78400", VA = "0xF78400")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020C")]
		protected static int BoardMaxCount
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0xF78458", Offset = "0xF78458", VA = "0xF78458")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020D")]
		protected static ToyBlastPuzzleStageInfo StageInfo
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0xF784B0", Offset = "0xF784B0", VA = "0xF784B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		protected static List<ToyBlastPuzzlePanelInfo> PanelInfoList
		{
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0xF78508", Offset = "0xF78508", VA = "0xF78508")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		protected static List<ToyBlastPuzzleTileInfo> TileInfoList
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0xF78584", Offset = "0xF78584", VA = "0xF78584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		protected static List<ToyBlastPuzzleOrnamentInfo> OrnamentInfoList
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0xF78600", Offset = "0xF78600", VA = "0xF78600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		protected static Dictionary<ToyBlastPuzzlePanelInfo, ToyBlastPuzzlePanel> PanelScriptDictionary
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0xF7867C", Offset = "0xF7867C", VA = "0xF7867C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		protected static Dictionary<ToyBlastPuzzleTileInfo, ToyBlastPuzzleTile> TileScriptDictionary
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0xF786F8", Offset = "0xF786F8", VA = "0xF786F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		protected static Dictionary<ToyBlastPuzzleOrnamentInfo, ToyBlastPuzzleOrnament> OrnamentScriptDictionary
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0xF78774", Offset = "0xF78774", VA = "0xF78774")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		protected static List<List<int>> MatchingGroupIndexList
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0xF787F0", Offset = "0xF787F0", VA = "0xF787F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		protected static Dictionary<ToyBlastPuzzlePanelInfo, List<int>> PanelInfoGroupIndexListDictionary
		{
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0xF7886C", Offset = "0xF7886C", VA = "0xF7886C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		protected static int CurrentSelectPanelIndex
		{
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0xF788E8", Offset = "0xF788E8", VA = "0xF788E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000217")]
		protected static ToyBlastPuzzleFuncBaseInitInfo InitInfo
		{
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0xF78964", Offset = "0xF78964", VA = "0xF78964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		protected static int CurrentStarCount
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0xF789BC", Offset = "0xF789BC", VA = "0xF789BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000219")]
		protected static List<int> DamageAreaIndexList
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0xF78AE8", Offset = "0xF78AE8", VA = "0xF78AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xF78B64", Offset = "0xF78B64", VA = "0xF78B64", Slot = "4")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xF78B68", Offset = "0xF78B68", VA = "0xF78B68", Slot = "5")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xF78B6C", Offset = "0xF78B6C", VA = "0xF78B6C")]
		protected static void CreateNewPanelAccessor(List<(int, Vector3)> tupleList)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xF78BE8", Offset = "0xF78BE8", VA = "0xF78BE8")]
		protected static bool EraseTileAccessor(ToyBlastPuzzleEraseTileInfo eraseTileInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xF78C74", Offset = "0xF78C74", VA = "0xF78C74")]
		protected static bool ErasePanelAccessor(ToyBlastPuzzleErasePanelInfo erasePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xF78D00", Offset = "0xF78D00", VA = "0xF78D00")]
		protected static bool ChangePanelAccessor(ToyBlastPuzzleChangePanelInfo changePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xF78D7C", Offset = "0xF78D7C", VA = "0xF78D7C")]
		protected static void AddToyBlastPuzzleExplodeBombInfoAccessor(ToyBlastPuzzleExplodeBombRequestInfo explodeBombRequestInfo)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xF78DF8", Offset = "0xF78DF8", VA = "0xF78DF8")]
		protected static EnumToyBlastPuzzleExplodeBombType CalcEnumToyBlastPuzzleExplodeBombTypeAccessor(List<int> matchingGroupIndexList)
		{
			return default(EnumToyBlastPuzzleExplodeBombType);
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xF78E74", Offset = "0xF78E74", VA = "0xF78E74")]
		protected static void RequestLaserPointerFocusAccessor(ToyBlastPuzzlePanel panelScript, HandLR handLr, bool isPointerEnter)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xF78F0C", Offset = "0xF78F0C", VA = "0xF78F0C")]
		protected static void CheckEraseChainAccessor(List<int> baseIndexList, EnumToyBlastPuzzlePanelColor baseColor)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xF78F98", Offset = "0xF78F98", VA = "0xF78F98")]
		protected static int CreatePuzzleEffectAccessor(ToyBlastPuzzleEffectInfoBase infoBase)
		{
			return default(int);
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xF7901C", Offset = "0xF7901C", VA = "0xF7901C")]
		protected static int GetCurrentBulletCountAccessor()
		{
			return default(int);
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xF79098", Offset = "0xF79098", VA = "0xF79098")]
		protected static List<ToyBlastPuzzleNormaUiInfo> GetNormaUiInfoListAccessor()
		{
			return null;
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xF79114", Offset = "0xF79114", VA = "0xF79114")]
		protected static bool CheckAllPanelStateNormal()
		{
			return default(bool);
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xF792BC", Offset = "0xF792BC", VA = "0xF792BC")]
		protected static bool CheckPanelMoveEnable(ToyBlastPuzzlePanelInfo puzzlePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xF79370", Offset = "0xF79370", VA = "0xF79370")]
		protected static bool CheckPanelMatchingEnable(ToyBlastPuzzlePanelInfo basePuzzlePanelInfo, ToyBlastPuzzlePanelInfo targetPuzzlePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xF794E0", Offset = "0xF794E0", VA = "0xF794E0")]
		protected static bool CheckPanelFallEnable(ToyBlastPuzzlePanelInfo puzzlePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xF795A4", Offset = "0xF795A4", VA = "0xF795A4")]
		protected static bool CheckPanelLandEnable(ToyBlastPuzzlePanelInfo puzzlePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xF79660", Offset = "0xF79660", VA = "0xF79660")]
		protected static bool CheckPanelEraseEnable(ToyBlastPuzzlePanelInfo erasePanelInfo, EnumToyBlastPuzzleErasePanelReasonType erasePanelReasonType)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xF79720", Offset = "0xF79720", VA = "0xF79720")]
		protected static bool CheckPanelChangeEnable(ToyBlastPuzzlePanelInfo changePanelInfo, EnumToyBlastPuzzleChangePanelReasonType changePanelReasonType)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xF79804", Offset = "0xF79804", VA = "0xF79804")]
		protected static bool CheckPanelShuffleEnable(ToyBlastPuzzlePanelInfo puzzlePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xF798C8", Offset = "0xF798C8", VA = "0xF798C8")]
		protected static bool CheckPanelFallEnableForTileInfo(ToyBlastPuzzleTileInfo puzzleTileInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xF79980", Offset = "0xF79980", VA = "0xF79980")]
		protected static bool CheckPanelLandEnableForTileInfo(ToyBlastPuzzleTileInfo puzzleTileInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xF79A3C", Offset = "0xF79A3C", VA = "0xF79A3C")]
		protected static bool CheckTileEraseEnable(ToyBlastPuzzleEraseTileInfo eraseTileInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xF79B0C", Offset = "0xF79B0C", VA = "0xF79B0C")]
		protected static bool CheckAllOrnamentIsFinishEraseAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xF79CA0", Offset = "0xF79CA0", VA = "0xF79CA0")]
		protected static bool CheckMoveBoardPositionEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xF79D44", Offset = "0xF79D44", VA = "0xF79D44")]
		protected static void NotifyErasePanel(ToyBlastPuzzleErasePanelInfo erasePanelInfo)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xF79F28", Offset = "0xF79F28", VA = "0xF79F28")]
		protected static void NotifyChangePanel(ToyBlastPuzzleChangePanelInfo changePanelInfo)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xF7A11C", Offset = "0xF7A11C", VA = "0xF7A11C")]
		protected static void NotifyMoveCompletePanel(int index)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xF7A1C0", Offset = "0xF7A1C0", VA = "0xF7A1C0")]
		protected static void NotifySelectPanel(ToyBlastPuzzleSelectPanelInfo selectPanelInfo)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xF7A320", Offset = "0xF7A320", VA = "0xF7A320")]
		protected static void NotifyLaserPointerFocus(List<int> focusIndexList, HandLR handLr)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xF7A408", Offset = "0xF7A408", VA = "0xF7A408")]
		protected static void NotifyEraseTile(ToyBlastPuzzleEraseTileInfo eraseTileInfo)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xF7A4D4", Offset = "0xF7A4D4", VA = "0xF7A4D4")]
		protected static void NotifyCheckOrnament(ToyBlastPuzzleOrnamentNotifyCheckInfo checkInfo)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xF7A550", Offset = "0xF7A550", VA = "0xF7A550")]
		protected static void NotifyEraseOrnament(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xF7A648", Offset = "0xF7A648", VA = "0xF7A648")]
		protected static void NotifyMoveCompleteOrnament(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xF7A6A0", Offset = "0xF7A6A0", VA = "0xF7A6A0")]
		protected static void NotifyDestroyVanishCompleteOrnament(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xF7A6F8", Offset = "0xF7A6F8", VA = "0xF7A6F8")]
		protected static void NotifyExplodeBombFinish(ToyBlastPuzzleExplodeBombUpdateInfo explodeBombUpdateInfo)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xF7A750", Offset = "0xF7A750", VA = "0xF7A750")]
		protected static void PlayAddBgm(EnumToyBlastPuzzleAddBgmType type)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xF7A7D4", Offset = "0xF7A7D4", VA = "0xF7A7D4")]
		protected static void PauseAddBgm()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xF7A850", Offset = "0xF7A850", VA = "0xF7A850")]
		protected static void UnPauseAddBgm()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xF7A8CC", Offset = "0xF7A8CC", VA = "0xF7A8CC")]
		protected static Vector3 CalcToyBlastPuzzlePos(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xF7A950", Offset = "0xF7A950", VA = "0xF7A950")]
		protected static int ConvertIndexFromRawLine(int raw, int line)
		{
			return default(int);
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xF7AA1C", Offset = "0xF7AA1C", VA = "0xF7AA1C")]
		protected static EnumToyBlastPuzzlePanelColor GetRandomPanelColor(bool isReliefMeasure)
		{
			return default(EnumToyBlastPuzzlePanelColor);
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xF7AAC4", Offset = "0xF7AAC4", VA = "0xF7AAC4")]
		protected static EnumToyBlastPuzzlePanelType GetChangePanelType(int erasePanelCount)
		{
			return default(EnumToyBlastPuzzlePanelType);
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xF7AB80", Offset = "0xF7AB80", VA = "0xF7AB80")]
		protected static void PlayPanelSeEffect(int index, EnumToyBlastPuzzleSeType seType)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xF7AC3C", Offset = "0xF7AC3C", VA = "0xF7AC3C")]
		protected static void PlayPanelSeEffect(Vector3 pos, EnumToyBlastPuzzleSeType seType)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xF7ACC4", Offset = "0xF7ACC4", VA = "0xF7ACC4")]
		protected static Quaternion CalcPuzzleLookAtQuaternion(Vector3 pos)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xF7AD24", Offset = "0xF7AD24", VA = "0xF7AD24")]
		public ToyBlastPuzzleFuncBase()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class ToyBlastPuzzleFuncBaseInitInfo
	{
		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject BoardGameObject;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject PlayerGameObject;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject TileParentGameObject;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject TileFrameParentGameObject;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject PanelParentGameObject;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject EffectParentGameObject;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject OrnamentParentGameObject;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ToyBlastPuzzlePanel PanelPrefabScript;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ToyBlastPuzzleTile TilePrefabScript;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ToyBlastPuzzleTileFrame TileFramePrefabScript;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ToyBlastPuzzleOrnament OrnamentPrefabScript;

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xF7AD2C", Offset = "0xF7AD2C", VA = "0xF7AD2C")]
		public ToyBlastPuzzleFuncBaseInitInfo()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class ToyBlastPuzzleFuncBoardPosition : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 DefaultLocalPos;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _stageInfoOffset;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _toyBlastBoardZPositionOffset;

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xF7AD34", Offset = "0xF7AD34", VA = "0xF7AD34", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xF7ADFC", Offset = "0xF7ADFC", VA = "0xF7ADFC")]
		public void ApplyBoardPosition()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xF7AD60", Offset = "0xF7AD60", VA = "0xF7AD60")]
		private Vector3 CalcStageInfoOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xF7B290", Offset = "0xF7B290", VA = "0xF7B290")]
		public void UpdateFunc()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xF7B294", Offset = "0xF7B294", VA = "0xF7B294")]
		private void UpdatePanelDistanceZ()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xF7B354", Offset = "0xF7B354", VA = "0xF7B354")]
		public ToyBlastPuzzleFuncBoardPosition()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xF7AF08", Offset = "0xF7AF08", VA = "0xF7AF08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8965E8", Offset = "0x8965E8")]
		internal static int <CalcStageInfoOffset>g__CalcLeftEmptyRawCount|5_0()
		{
			return default(int);
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xF7AFEC", Offset = "0xF7AFEC", VA = "0xF7AFEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8965F8", Offset = "0x8965F8")]
		internal static int <CalcStageInfoOffset>g__CalcRightEmptyRawCount|5_1()
		{
			return default(int);
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xF7B0CC", Offset = "0xF7B0CC", VA = "0xF7B0CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896608", Offset = "0x896608")]
		internal static int <CalcStageInfoOffset>g__CalcDownEmptyLineCount|5_2()
		{
			return default(int);
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xF7B1B0", Offset = "0xF7B1B0", VA = "0xF7B1B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896618", Offset = "0x896618")]
		internal static int <CalcStageInfoOffset>g__CalcTopEmptyLineCount|5_3()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004C7")]
	public class ToyBlastPuzzleFuncBoardShuffle : ToyBlastPuzzleFuncBase
	{
		[Serializable]
		[Token(Token = "0x20004C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881D3C", Offset = "0x881D3C")]
		private sealed class <>c
		{
			[Token(Token = "0x40017D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40017D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ToyBlastPuzzlePanelInfo, int> <>9__5_0;

			[Token(Token = "0x6001722")]
			[Address(RVA = "0xF95D6C", Offset = "0xF95D6C", VA = "0xF95D6C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001723")]
			[Address(RVA = "0xF95D74", Offset = "0xF95D74", VA = "0xF95D74")]
			internal int <ShufflePanel>b__5_0(ToyBlastPuzzlePanelInfo x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ToyBlastPuzzleRequestChecker _toyBlastPuzzleRequestChecker;

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xF7B3B8", Offset = "0xF7B3B8", VA = "0xF7B3B8")]
		public void RequestCheck()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xF7B3D4", Offset = "0xF7B3D4", VA = "0xF7B3D4", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xF7B3F0", Offset = "0xF7B3F0", VA = "0xF7B3F0")]
		public void UpdateFunc()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xF7B44C", Offset = "0xF7B44C", VA = "0xF7B44C")]
		private bool CheckBoardShuffle()
		{
			return default(bool);
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xF7B794", Offset = "0xF7B794", VA = "0xF7B794")]
		private void ShufflePanel()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xF7BAA0", Offset = "0xF7BAA0", VA = "0xF7BAA0")]
		public ToyBlastPuzzleFuncBoardShuffle()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class ToyBlastPuzzleFuncCalcPrioritySelectPanel : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x20004CA")]
		public class ToyBlastPuzzleFuncCalcPrioritySelectPanelInfo
		{
			[Token(Token = "0x40017D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int SelectPanelIndex;

			[Token(Token = "0x40017DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int Priority;

			[Token(Token = "0x40017DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<int> EraseTargetIndexList;

			[Token(Token = "0x40017DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnumToyBlastPuzzleExplodeBombType EnumToyBlastPuzzleExplodeBombType;

			[Token(Token = "0x40017DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<int> BombTargetIndexList;

			[Token(Token = "0x600172B")]
			[Address(RVA = "0xF96500", Offset = "0xF96500", VA = "0xF96500")]
			public ToyBlastPuzzleFuncCalcPrioritySelectPanelInfo(int selectPanelIndex, int priority, List<int> eraseTargetIndexList, EnumToyBlastPuzzleExplodeBombType explodeBombType, List<int> bombTargetIndexList)
			{
			}
		}

		[Token(Token = "0x20004CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881D4C", Offset = "0x881D4C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40017DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int maxPriority;

			[Token(Token = "0x600172C")]
			[Address(RVA = "0xF961DC", Offset = "0xF961DC", VA = "0xF961DC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600172D")]
			[Address(RVA = "0xF961E4", Offset = "0xF961E4", VA = "0xF961E4")]
			internal bool <CalcPrioritySelectIndex>b__5(ToyBlastPuzzleFuncCalcPrioritySelectPanelInfo x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881D5C", Offset = "0x881D5C")]
		private sealed class <>c
		{
			[Token(Token = "0x40017DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40017E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<List<int>, bool> <>9__2_0;

			[Token(Token = "0x40017E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<List<int>, bool> <>9__2_1;

			[Token(Token = "0x40017E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<List<int>, bool> <>9__2_2;

			[Token(Token = "0x40017E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ToyBlastPuzzleFuncCalcPrioritySelectPanelInfo, int> <>9__2_3;

			[Token(Token = "0x40017E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ToyBlastPuzzleFuncCalcPrioritySelectPanelInfo, int> <>9__2_4;

			[Token(Token = "0x40017E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<ToyBlastPuzzlePanelInfo, bool> <>9__4_10;

			[Token(Token = "0x40017E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<ToyBlastPuzzlePanelInfo, int> <>9__4_11;

			[Token(Token = "0x40017E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<int, bool> <>9__4_0;

			[Token(Token = "0x40017E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<ToyBlastPuzzlePanelInfo, bool> <>9__7_0;

			[Token(Token = "0x600172F")]
			[Address(RVA = "0xF95DEC", Offset = "0xF95DEC", VA = "0xF95DEC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001730")]
			[Address(RVA = "0xF95DF4", Offset = "0xF95DF4", VA = "0xF95DF4")]
			internal bool <CalcPrioritySelectIndex>b__2_0(List<int> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001731")]
			[Address(RVA = "0xF95E4C", Offset = "0xF95E4C", VA = "0xF95E4C")]
			internal bool <CalcPrioritySelectIndex>b__2_1(List<int> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001732")]
			[Address(RVA = "0xF95F1C", Offset = "0xF95F1C", VA = "0xF95F1C")]
			internal bool <CalcPrioritySelectIndex>b__2_2(List<int> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001733")]
			[Address(RVA = "0xF96104", Offset = "0xF96104", VA = "0xF96104")]
			internal int <CalcPrioritySelectIndex>b__2_3(ToyBlastPuzzleFuncCalcPrioritySelectPanelInfo x)
			{
				return default(int);
			}

			[Token(Token = "0x6001734")]
			[Address(RVA = "0xF9611C", Offset = "0xF9611C", VA = "0xF9611C")]
			internal int <CalcPrioritySelectIndex>b__2_4(ToyBlastPuzzleFuncCalcPrioritySelectPanelInfo x)
			{
				return default(int);
			}

			[Token(Token = "0x6001735")]
			[Address(RVA = "0xF9616C", Offset = "0xF9616C", VA = "0xF9616C")]
			internal bool <CalcErasePanelIndexListForExplodeBomb>b__4_10(ToyBlastPuzzlePanelInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001736")]
			[Address(RVA = "0xF9617C", Offset = "0xF9617C", VA = "0xF9617C")]
			internal int <CalcErasePanelIndexListForExplodeBomb>b__4_11(ToyBlastPuzzlePanelInfo x)
			{
				return default(int);
			}

			[Token(Token = "0x6001737")]
			[Address(RVA = "0xF96194", Offset = "0xF96194", VA = "0xF96194")]
			internal bool <CalcErasePanelIndexListForExplodeBomb>b__4_0(int x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001738")]
			[Address(RVA = "0xF961C0", Offset = "0xF961C0", VA = "0xF961C0")]
			internal bool <UpdatePriorityFallToyDown>b__7_0(ToyBlastPuzzlePanelInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881D6C", Offset = "0x881D6C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40017E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> eraseTargetIndexList;

			[Token(Token = "0x6001739")]
			[Address(RVA = "0xF96208", Offset = "0xF96208", VA = "0xF96208")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600173A")]
			[Address(RVA = "0xF96210", Offset = "0xF96210", VA = "0xF96210")]
			internal void <CreateToyBlastPuzzleFuncCalcPrioritySelectPanelInfo>g__AddChainEraseTargetIndex|0(int index)
			{
			}
		}

		[Token(Token = "0x20004CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881D7C", Offset = "0x881D7C")]
		private sealed class <>c__DisplayClass3_1
		{
			[Token(Token = "0x40017EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EnumToyBlastPuzzleErasePanelReasonType erasePanelReasonType;

			[Token(Token = "0x40017EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass3_0 CS$<>8__locals1;

			[Token(Token = "0x600173B")]
			[Address(RVA = "0xF962F0", Offset = "0xF962F0", VA = "0xF962F0")]
			public <>c__DisplayClass3_1()
			{
			}

			[Token(Token = "0x600173C")]
			[Address(RVA = "0xF962F8", Offset = "0xF962F8", VA = "0xF962F8")]
			internal void <CreateToyBlastPuzzleFuncCalcPrioritySelectPanelInfo>g__AddExplodeBombEraseTargetIndex|1(int index)
			{
			}
		}

		[Token(Token = "0x20004CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881D8C", Offset = "0x881D8C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40017EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int explodeBombLine;

			[Token(Token = "0x40017ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int explodeBombRaw;

			[Token(Token = "0x40017EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EnumToyBlastPuzzlePanelColor puzzleCubeColor;

			[Token(Token = "0x600173D")]
			[Address(RVA = "0xF963DC", Offset = "0xF963DC", VA = "0xF963DC")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600173E")]
			[Address(RVA = "0xF963E4", Offset = "0xF963E4", VA = "0xF963E4")]
			internal bool <CalcErasePanelIndexListForExplodeBomb>b__1(int x)
			{
				return default(bool);
			}

			[Token(Token = "0x600173F")]
			[Address(RVA = "0xF963F4", Offset = "0xF963F4", VA = "0xF963F4")]
			internal int <CalcErasePanelIndexListForExplodeBomb>b__2(int x)
			{
				return default(int);
			}

			[Token(Token = "0x6001740")]
			[Address(RVA = "0xF96424", Offset = "0xF96424", VA = "0xF96424")]
			internal bool <CalcErasePanelIndexListForExplodeBomb>b__3(int x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001741")]
			[Address(RVA = "0xF96434", Offset = "0xF96434", VA = "0xF96434")]
			internal int <CalcErasePanelIndexListForExplodeBomb>b__4(int x)
			{
				return default(int);
			}

			[Token(Token = "0x6001742")]
			[Address(RVA = "0xF96464", Offset = "0xF96464", VA = "0xF96464")]
			internal bool <CalcErasePanelIndexListForExplodeBomb>b__5(int x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001743")]
			[Address(RVA = "0xF96474", Offset = "0xF96474", VA = "0xF96474")]
			internal int <CalcErasePanelIndexListForExplodeBomb>b__6(int x)
			{
				return default(int);
			}

			[Token(Token = "0x6001744")]
			[Address(RVA = "0xF964A0", Offset = "0xF964A0", VA = "0xF964A0")]
			internal bool <CalcErasePanelIndexListForExplodeBomb>b__7(int x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001745")]
			[Address(RVA = "0xF964B0", Offset = "0xF964B0", VA = "0xF964B0")]
			internal int <CalcErasePanelIndexListForExplodeBomb>b__8(int x)
			{
				return default(int);
			}

			[Token(Token = "0x6001746")]
			[Address(RVA = "0xF964DC", Offset = "0xF964DC", VA = "0xF964DC")]
			internal bool <CalcErasePanelIndexListForExplodeBomb>b__9(ToyBlastPuzzlePanelInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<ToyBlastPuzzleFuncCalcPrioritySelectPanelInfo> _priorityInfoList;

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xF7BB04", Offset = "0xF7BB04", VA = "0xF7BB04")]
		public int CalcPrioritySelectIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xF7D914", Offset = "0xF7D914", VA = "0xF7D914")]
		private ToyBlastPuzzleFuncCalcPrioritySelectPanelInfo CreateToyBlastPuzzleFuncCalcPrioritySelectPanelInfo(List<int> groupIndexList)
		{
			return null;
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xF7DD90", Offset = "0xF7DD90", VA = "0xF7DD90")]
		private List<int> CalcErasePanelIndexListForExplodeBomb(int explodeBombIndex, EnumToyBlastPuzzleExplodeBombType explodeBombType, EnumToyBlastPuzzlePanelColor puzzleCubeColor = EnumToyBlastPuzzlePanelColor.None)
		{
			return null;
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xF7C144", Offset = "0xF7C144", VA = "0xF7C144")]
		private void UpdatePriorityTargetNorma()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xF7C6B4", Offset = "0xF7C6B4", VA = "0xF7C6B4")]
		private void UpdatePriorityOrnament()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xF7D248", Offset = "0xF7D248", VA = "0xF7D248")]
		private void UpdatePriorityFallToyDown()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xF7E770", Offset = "0xF7E770", VA = "0xF7E770")]
		public ToyBlastPuzzleFuncCalcPrioritySelectPanel()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class ToyBlastPuzzleFuncEraseChain : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x6001747")]
		[Address(RVA = "0xF7E778", Offset = "0xF7E778", VA = "0xF7E778")]
		public void CheckEraseChain(List<int> baseIndexList, EnumToyBlastPuzzlePanelColor baseColor)
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xF7EA74", Offset = "0xF7EA74", VA = "0xF7EA74")]
		private void EraseChainCore(int index, EnumToyBlastPuzzlePanelColor baseColor)
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xF7EB30", Offset = "0xF7EB30", VA = "0xF7EB30")]
		public ToyBlastPuzzleFuncEraseChain()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class ToyBlastPuzzleFuncEraseChangePanel : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x600174A")]
		[Address(RVA = "0xF7EB38", Offset = "0xF7EB38", VA = "0xF7EB38")]
		public bool ErasePanel(ToyBlastPuzzleErasePanelInfo erasePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xF7EC68", Offset = "0xF7EC68", VA = "0xF7EC68")]
		public bool ChangePanel(ToyBlastPuzzleChangePanelInfo changePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xF7ECE0", Offset = "0xF7ECE0", VA = "0xF7ECE0")]
		public ToyBlastPuzzleFuncEraseChangePanel()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class ToyBlastPuzzleFuncEraseChangeTile : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x600174D")]
		[Address(RVA = "0xF7ECE8", Offset = "0xF7ECE8", VA = "0xF7ECE8")]
		public bool EraseTile(ToyBlastPuzzleEraseTileInfo eraseTileInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xF7ED48", Offset = "0xF7ED48", VA = "0xF7ED48")]
		public ToyBlastPuzzleFuncEraseChangeTile()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class ToyBlastPuzzleFuncEraseFallPocket : ToyBlastPuzzleFuncBase
	{
		[Serializable]
		[Token(Token = "0x20004D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881D9C", Offset = "0x881D9C")]
		private sealed class <>c
		{
			[Token(Token = "0x40017F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40017F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ToyBlastPuzzleTileInfo, bool> <>9__1_0;

			[Token(Token = "0x6001753")]
			[Address(RVA = "0xF965B8", Offset = "0xF965B8", VA = "0xF965B8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001754")]
			[Address(RVA = "0xF965C0", Offset = "0xF965C0", VA = "0xF965C0")]
			internal bool <Init>b__1_0(ToyBlastPuzzleTileInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isExistFallPocket;

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xF7ED50", Offset = "0xF7ED50", VA = "0xF7ED50", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xF7EE94", Offset = "0xF7EE94", VA = "0xF7EE94")]
		public void CheckEraseFallPocket(int index)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xF7EF80", Offset = "0xF7EF80", VA = "0xF7EF80")]
		public ToyBlastPuzzleFuncEraseFallPocket()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class ToyBlastPuzzleFuncExplodeBombTouch : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x6001755")]
		[Address(RVA = "0xF7EF88", Offset = "0xF7EF88", VA = "0xF7EF88")]
		public bool TouchExplodeBombPanel(ToyBlastPuzzleSelectPanelInfo selectPanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xF7F120", Offset = "0xF7F120", VA = "0xF7F120")]
		public EnumToyBlastPuzzleExplodeBombType CalcEnumToyBlastPuzzleExplodeBombType(List<int> matchingGroupIndexList)
		{
			return default(EnumToyBlastPuzzleExplodeBombType);
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xF7F418", Offset = "0xF7F418", VA = "0xF7F418")]
		public ToyBlastPuzzleFuncExplodeBombTouch()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class ToyBlastPuzzleFuncExplodeBombUpdate : ToyBlastPuzzleFuncBase
	{
		[Serializable]
		[Token(Token = "0x20004D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881DAC", Offset = "0x881DAC")]
		private sealed class <>c
		{
			[Token(Token = "0x40017F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40017F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<IToyBlastPuzzleUpdateExplodeBomb> <>9__7_0;

			[Token(Token = "0x6001766")]
			[Address(RVA = "0xF96638", Offset = "0xF96638", VA = "0xF96638")]
			public <>c()
			{
			}

			[Token(Token = "0x6001767")]
			[Address(RVA = "0xF96640", Offset = "0xF96640", VA = "0xF96640")]
			internal bool <UpdateFunc>b__7_0(IToyBlastPuzzleUpdateExplodeBomb x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<IToyBlastPuzzleUpdateExplodeBomb> _requestExplodeBombInterfaceList;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<IToyBlastPuzzleUpdateExplodeBomb> _updateExplodeBombInterfaceList;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<ToyBlastPuzzlePanelInfo> _explodeBombTargetPanelInfoListCash;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isPauseUpdateCash;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isSelectPanelUnEnableCash;

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xF7F420", Offset = "0xF7F420", VA = "0xF7F420")]
		public bool IsExplodeBombTarget(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xF7F484", Offset = "0xF7F484", VA = "0xF7F484")]
		public bool IsPauseUpdateBoard()
		{
			return default(bool);
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xF7F48C", Offset = "0xF7F48C", VA = "0xF7F48C")]
		public bool IsSelectPanelUnEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xF7F494", Offset = "0xF7F494", VA = "0xF7F494")]
		public void AddToyBlastPuzzleRequestExplodeBombInfo(ToyBlastPuzzleExplodeBombRequestInfo explodeBombRequestInfo)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xF7F8B4", Offset = "0xF7F8B4", VA = "0xF7F8B4", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xF7F97C", Offset = "0xF7F97C", VA = "0xF7F97C")]
		public void UpdateFunc()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xF7F5D0", Offset = "0xF7F5D0", VA = "0xF7F5D0")]
		private IToyBlastPuzzleUpdateExplodeBomb CreateUpdateExplodeBombInterface(EnumToyBlastPuzzleExplodeBombType type)
		{
			return null;
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xF7FD84", Offset = "0xF7FD84", VA = "0xF7FD84")]
		private void UpdateExplodeBombTargetIndexListCash()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xF80068", Offset = "0xF80068", VA = "0xF80068")]
		private void UpdateFlagInfoCash()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xF7F890", Offset = "0xF7F890", VA = "0xF7F890")]
		private void UpdateCashInfo()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xF7F920", Offset = "0xF7F920", VA = "0xF7F920")]
		private void ResetCashInfo()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xF80450", Offset = "0xF80450", VA = "0xF80450")]
		public ToyBlastPuzzleFuncExplodeBombUpdate()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xF7FE84", Offset = "0xF7FE84", VA = "0xF7FE84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896628", Offset = "0x896628")]
		private bool <UpdateExplodeBombTargetIndexListCash>g__IsExplodeBomb|10_0(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004D8")]
	public class ToyBlastPuzzleFuncFall : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ToyBlastPuzzleRequestChecker _toyBlastPuzzleRequestChecker;

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xF80528", Offset = "0xF80528", VA = "0xF80528")]
		public void RequestCheck()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xF80544", Offset = "0xF80544", VA = "0xF80544", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xF80560", Offset = "0xF80560", VA = "0xF80560")]
		public void UpdateFunc()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xF80910", Offset = "0xF80910", VA = "0xF80910")]
		private int ConvertIndexFromRawLineNoCheck(int raw, int line)
		{
			return default(int);
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xF805B0", Offset = "0xF805B0", VA = "0xF805B0")]
		private void UpdatePanelFall()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xF80938", Offset = "0xF80938", VA = "0xF80938")]
		private void UpdatePanelFallCore(int baseRaw, int baseLine)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xF806D0", Offset = "0xF806D0", VA = "0xF806D0")]
		private void CheckCreateNewPanel()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xF80ACC", Offset = "0xF80ACC", VA = "0xF80ACC")]
		private void CheckCreatePanelCore(int raw, int line, ref int createCount, List<(int, Vector3)> createPanelInfoList)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xF80CDC", Offset = "0xF80CDC", VA = "0xF80CDC")]
		public ToyBlastPuzzleFuncFall()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class ToyBlastPuzzleFuncLaserPointer : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public new int CurrentSelectPanelIndex;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<int> _preFocusIndexList;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ToyBlastPuzzleRequestChecker _toyBlastPuzzleRequestChecker;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HandLR _currentHandLr;

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xF80D40", Offset = "0xF80D40", VA = "0xF80D40")]
		public void ClearCurrentSelectPanelIndex()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xF80D4C", Offset = "0xF80D4C", VA = "0xF80D4C")]
		public void RequestCheck()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xF80D68", Offset = "0xF80D68", VA = "0xF80D68")]
		public void FinishLaserPointerFocus()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xF80DDC", Offset = "0xF80DDC", VA = "0xF80DDC", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xF80E14", Offset = "0xF80E14", VA = "0xF80E14")]
		public void UpdateFunc()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xF80E5C", Offset = "0xF80E5C", VA = "0xF80E5C")]
		private void UpdateFocusIndexList()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xF80FB0", Offset = "0xF80FB0", VA = "0xF80FB0")]
		public void RequestLaserPointerFocus(ToyBlastPuzzlePanel panelScript, HandLR handLr, bool isPointerEnter)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xF81180", Offset = "0xF81180", VA = "0xF81180")]
		public ToyBlastPuzzleFuncLaserPointer()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xF811EC", Offset = "0xF811EC", VA = "0xF811EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896638", Offset = "0x896638")]
		private bool <UpdateFocusIndexList>b__9_0(List<int> x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004DA")]
	public class ToyBlastPuzzleFuncMatchingGroup : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public new List<List<int>> MatchingGroupIndexList;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new Dictionary<ToyBlastPuzzlePanelInfo, List<int>> PanelInfoGroupIndexListDictionary;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ToyBlastPuzzleRequestChecker _toyBlastPuzzleRequestChecker;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<int> _tempIndexList;

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xF81250", Offset = "0xF81250", VA = "0xF81250")]
		public void RequestCheck()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xF8126C", Offset = "0xF8126C", VA = "0xF8126C", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xF81740", Offset = "0xF81740", VA = "0xF81740", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xF817A4", Offset = "0xF817A4", VA = "0xF817A4")]
		public void UpdateFunc()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xF81270", Offset = "0xF81270", VA = "0xF81270")]
		private void UpdateMatchingGroupIndexList()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xF817EC", Offset = "0xF817EC", VA = "0xF817EC")]
		private void CheckMatchingGroup(int raw, int line, ToyBlastPuzzlePanelInfo targetPuzzlePanelInfo, ref List<int> indexListRef)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xF81958", Offset = "0xF81958", VA = "0xF81958")]
		public ToyBlastPuzzleFuncMatchingGroup()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class ToyBlastPuzzleFuncOrnamentCreate : ToyBlastPuzzleFuncBase
	{
		[Serializable]
		[Token(Token = "0x20004DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881DBC", Offset = "0x881DBC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ToyBlastPuzzleStageInfo, int> <>9__3_0;

			[Token(Token = "0x4001807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<ToyBlastPuzzleOrnament> <>9__4_0;

			[Token(Token = "0x4001808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ToyBlastPuzzleOrnament, bool> <>9__6_0;

			[Token(Token = "0x6001787")]
			[Address(RVA = "0xF9674C", Offset = "0xF9674C", VA = "0xF9674C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001788")]
			[Address(RVA = "0xF96754", Offset = "0xF96754", VA = "0xF96754")]
			internal int <CreatePrefabCash>b__3_0(ToyBlastPuzzleStageInfo x)
			{
				return default(int);
			}

			[Token(Token = "0x6001789")]
			[Address(RVA = "0xF967A4", Offset = "0xF967A4", VA = "0xF967A4")]
			internal void <Init>b__4_0(ToyBlastPuzzleOrnament x)
			{
			}

			[Token(Token = "0x600178A")]
			[Address(RVA = "0xF967D4", Offset = "0xF967D4", VA = "0xF967D4")]
			internal bool <CreateInitOrnament>b__6_0(ToyBlastPuzzleOrnament x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public new List<ToyBlastPuzzleOrnamentInfo> OrnamentInfoList;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new Dictionary<ToyBlastPuzzleOrnamentInfo, ToyBlastPuzzleOrnament> OrnamentScriptDictionary;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<ToyBlastPuzzleOrnament> _prefabCashList;

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xF81A7C", Offset = "0xF81A7C", VA = "0xF81A7C")]
		public void CreatePrefabCash(List<ToyBlastPuzzleStageInfo> stageInfoList)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xF81C90", Offset = "0xF81C90", VA = "0xF81C90", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xF82280", Offset = "0xF82280", VA = "0xF82280", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xF81E68", Offset = "0xF81E68", VA = "0xF81E68")]
		private void CreateInitOrnament()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xF822F8", Offset = "0xF822F8", VA = "0xF822F8")]
		public ToyBlastPuzzleFuncOrnamentCreate()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class ToyBlastPuzzleFuncOrnamentUpdate : ToyBlastPuzzleFuncBase
	{
		[Serializable]
		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881DCC", Offset = "0x881DCC")]
		private sealed class <>c
		{
			[Token(Token = "0x400180F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ToyBlastPuzzleOrnamentInfo, bool> <>9__18_0;

			[Token(Token = "0x4001811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<int, Guid> <>9__22_1;

			[Token(Token = "0x4001812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ToyBlastPuzzleOrnamentInfo, bool> <>9__24_0;

			[Token(Token = "0x60017A3")]
			[Address(RVA = "0xF9686C", Offset = "0xF9686C", VA = "0xF9686C")]
			public <>c()
			{
			}

			[Token(Token = "0x60017A4")]
			[Address(RVA = "0xF96874", Offset = "0xF96874", VA = "0xF96874")]
			internal bool <NotifyReduceBulletCount>b__18_0(ToyBlastPuzzleOrnamentInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x60017A5")]
			[Address(RVA = "0xF96890", Offset = "0xF96890", VA = "0xF96890")]
			internal Guid <CalcNextMoveTargetIndex>b__22_1(int x)
			{
				return default(Guid);
			}

			[Token(Token = "0x60017A6")]
			[Address(RVA = "0xF968EC", Offset = "0xF968EC", VA = "0xF968EC")]
			internal bool <InitMove>b__24_0(ToyBlastPuzzleOrnamentInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public new List<int> DamageAreaIndexList;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isCheckOrnamentMoveEnableFlag;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _moveTurnCount;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isMoving;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _currentMoveTargetListIndex;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _moveMiddlePos;

		[Token(Token = "0x1700021A")]
		private int MoveTurnCountMax
		{
			[Token(Token = "0x6001798")]
			[Address(RVA = "0xF8365C", Offset = "0xF8365C", VA = "0xF8365C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xF82370", Offset = "0xF82370", VA = "0xF82370")]
		private void UpdateDamageAreaIndexList(List<int> indexList)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xF82378", Offset = "0xF82378", VA = "0xF82378")]
		public bool IsOrnamentAreaIndex(int targetIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xF824A8", Offset = "0xF824A8", VA = "0xF824A8")]
		public bool IsHitBombAreaIndex(int targetIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xF82584", Offset = "0xF82584", VA = "0xF82584")]
		public bool IsPauseUpdateBoard()
		{
			return default(bool);
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xF82648", Offset = "0xF82648", VA = "0xF82648")]
		public bool IsSelectPanelUnEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xF82434", Offset = "0xF82434", VA = "0xF82434")]
		private bool IsOrnamentAreaIndexCore(ToyBlastPuzzleOrnamentInfo ornamentInfo, int targetIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xF82668", Offset = "0xF82668", VA = "0xF82668", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xF828AC", Offset = "0xF828AC", VA = "0xF828AC")]
		public void UpdateFunc()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xF828D0", Offset = "0xF828D0", VA = "0xF828D0")]
		private void UpdateCheckDestroyVanish()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xF82CB4", Offset = "0xF82CB4", VA = "0xF82CB4")]
		public void UpdateDraw()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xF82E68", Offset = "0xF82E68", VA = "0xF82E68")]
		public void NotifyErasePanel(EnumToyBlastPuzzleErasePanelReasonType erasePanelReasonType, EnumToyBlastPuzzlePanelType panelType, EnumToyBlastPuzzlePanelColor panelColor)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xF82F84", Offset = "0xF82F84", VA = "0xF82F84")]
		public new void NotifyCheckOrnament(ToyBlastPuzzleOrnamentNotifyCheckInfo checkInfo)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xF832D0", Offset = "0xF832D0", VA = "0xF832D0")]
		private (int, List<int>) CalcOrnamentReduceValueForChainEraseGroup(ToyBlastPuzzleOrnamentInfo ornamentInfo, ToyBlastPuzzleOrnamentNotifyCheckInfo checkInfo)
		{
			return default((int, List<int>));
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xF8367C", Offset = "0xF8367C", VA = "0xF8367C")]
		public void NotifyReduceBulletCount()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xF837C0", Offset = "0xF837C0", VA = "0xF837C0")]
		public bool IsMoveBoardPositionUnEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xF837C8", Offset = "0xF837C8", VA = "0xF837C8")]
		private int CalcNextMoveTargetIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xF8274C", Offset = "0xF8274C", VA = "0xF8274C")]
		private void InitMove()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xF82A68", Offset = "0xF82A68", VA = "0xF82A68")]
		private void UpdateMove()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xF83A78", Offset = "0xF83A78", VA = "0xF83A78")]
		private void UpdateCheckMove(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xF83AD8", Offset = "0xF83AD8", VA = "0xF83AD8")]
		private void UpdateMoveCore(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xF83EF0", Offset = "0xF83EF0", VA = "0xF83EF0")]
		public ToyBlastPuzzleFuncOrnamentUpdate()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xF83EF8", Offset = "0xF83EF8", VA = "0xF83EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896648", Offset = "0x896648")]
		private bool <CalcNextMoveTargetIndex>b__22_0(int x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004DF")]
	public class ToyBlastPuzzleFuncPanelCreate : ToyBlastPuzzleFuncBase
	{
		[Serializable]
		[Token(Token = "0x20004E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881DDC", Offset = "0x881DDC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400181A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ToyBlastPuzzleStageInfo, int> <>9__9_0;

			[Token(Token = "0x400181B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<(ToyBlastPuzzlePanel, HandLR, bool)> <>9__9_1;

			[Token(Token = "0x400181C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<ToyBlastPuzzlePanel> <>9__10_0;

			[Token(Token = "0x400181D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ToyBlastPuzzlePanel, bool> <>9__12_0;

			[Token(Token = "0x60017B2")]
			[Address(RVA = "0xF96968", Offset = "0xF96968", VA = "0xF96968")]
			public <>c()
			{
			}

			[Token(Token = "0x60017B3")]
			[Address(RVA = "0xF96970", Offset = "0xF96970", VA = "0xF96970")]
			internal int <CreatePrefabCash>b__9_0(ToyBlastPuzzleStageInfo x)
			{
				return default(int);
			}

			[Token(Token = "0x60017B4")]
			[Address(RVA = "0xF9698C", Offset = "0xF9698C", VA = "0xF9698C")]
			internal void <CreatePrefabCash>b__9_1((ToyBlastPuzzlePanel, HandLR, bool) tuple)
			{
			}

			[Token(Token = "0x60017B5")]
			[Address(RVA = "0xF969A8", Offset = "0xF969A8", VA = "0xF969A8")]
			internal void <Init>b__10_0(ToyBlastPuzzlePanel x)
			{
			}

			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xF969D8", Offset = "0xF969D8", VA = "0xF969D8")]
			internal bool <CreateInitPanel>b__12_0(ToyBlastPuzzlePanel x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public new List<ToyBlastPuzzlePanelInfo> PanelInfoList;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new Dictionary<ToyBlastPuzzlePanelInfo, ToyBlastPuzzlePanel> PanelScriptDictionary;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, List<ToyBlastPuzzleStageCellInfo>> _outOfBoardStageCellInfoDictionary;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _panelUniqueIdValue;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Subject<int> _createNewPanelSubject;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<ToyBlastPuzzlePanel> _prefabCashList;

		[Token(Token = "0x1700021B")]
		public IObservable<int> OnCreateNewPanelSubject
		{
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0xF83F1C", Offset = "0xF83F1C", VA = "0xF83F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xF83F08", Offset = "0xF83F08", VA = "0xF83F08")]
		private int GetPanelUniqueId()
		{
			return default(int);
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xF83F24", Offset = "0xF83F24", VA = "0xF83F24")]
		public void CreatePrefabCash(List<ToyBlastPuzzleStageInfo> stageInfoList)
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xF8429C", Offset = "0xF8429C", VA = "0xF8429C", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xF8496C", Offset = "0xF8496C", VA = "0xF8496C", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xF8447C", Offset = "0xF8447C", VA = "0xF8447C")]
		private void CreateInitPanel()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xF849E4", Offset = "0xF849E4", VA = "0xF849E4")]
		private void OnSelectPanelFunc(ToyBlastPuzzleSelectPanelInfo selectPanelInfo)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xF84788", Offset = "0xF84788", VA = "0xF84788")]
		private void CreateOutOfBoardCellInfoDictionary()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xF84B9C", Offset = "0xF84B9C", VA = "0xF84B9C")]
		public void CreateNewPanel(List<(int, Vector3)> tupleList)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xF84F48", Offset = "0xF84F48", VA = "0xF84F48")]
		public ToyBlastPuzzleFuncPanelCreate()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class ToyBlastPuzzleFuncPanelUpdate : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x1700021C")]
		private float ADD_ACCEL
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0xF85040", Offset = "0xF85040", VA = "0xF85040")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700021D")]
		private float MAX_SPEED
		{
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0xF850A8", Offset = "0xF850A8", VA = "0xF850A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xF85110", Offset = "0xF85110", VA = "0xF85110")]
		public void UpdateFunc()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xF85214", Offset = "0xF85214", VA = "0xF85214")]
		private void UpdatePanelMove(ToyBlastPuzzlePanelInfo panelInfo)
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xF853A4", Offset = "0xF853A4", VA = "0xF853A4")]
		public void UpdateDraw()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xF853B8", Offset = "0xF853B8", VA = "0xF853B8")]
		private void UpdateDrawInfo()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xF85794", Offset = "0xF85794", VA = "0xF85794")]
		private void UpdateDrawCore()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xF85988", Offset = "0xF85988", VA = "0xF85988")]
		public new void NotifyLaserPointerFocus(List<int> focusIndexList, HandLR handLr)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xF85B18", Offset = "0xF85B18", VA = "0xF85B18")]
		public void ApplyArcPositionSetting()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xF85D98", Offset = "0xF85D98", VA = "0xF85D98")]
		public ToyBlastPuzzleFuncPanelUpdate()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class ToyBlastPuzzleFuncReliefMeasure : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private EnumToyBlastPuzzlePanelColor _targetPanelColor;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool _isReliefEnable;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _currentRetryCount;

		[Token(Token = "0x1700021E")]
		private PuzzlePlaySaveData PuzzlePlaySaveData
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0xF85DA0", Offset = "0xF85DA0", VA = "0xF85DA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xF85E20", Offset = "0xF85E20", VA = "0xF85E20")]
		private bool IsCheckPercent(int percent)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xF85E64", Offset = "0xF85E64", VA = "0xF85E64", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xF85EB8", Offset = "0xF85EB8", VA = "0xF85EB8")]
		public void CheckRetryCount(ToyBlastPuzzleFuncStageInfoUpdate.EnumStageResultType stageResultType)
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xF85F14", Offset = "0xF85F14", VA = "0xF85F14")]
		public EnumToyBlastPuzzlePanelColor GetReliefMeasurePanelColor()
		{
			return default(EnumToyBlastPuzzlePanelColor);
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xF85FA8", Offset = "0xF85FA8", VA = "0xF85FA8")]
		private EnumToyBlastPuzzlePanelColor GetReliefMeasurePanelColorTypeA()
		{
			return default(EnumToyBlastPuzzlePanelColor);
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xF85F40", Offset = "0xF85F40", VA = "0xF85F40")]
		private EnumToyBlastPuzzlePanelColor GetReliefMeasurePanelColorTypeC()
		{
			return default(EnumToyBlastPuzzlePanelColor);
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xF860D0", Offset = "0xF860D0", VA = "0xF860D0")]
		public ToyBlastPuzzleFuncReliefMeasure()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public class ToyBlastPuzzleFuncStageInfoUpdate : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x20004E4")]
		public enum EnumStageResultType
		{
			[Token(Token = "0x4001829")]
			None,
			[Token(Token = "0x400182A")]
			StageClear,
			[Token(Token = "0x400182B")]
			StageFailed
		}

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DB20", Offset = "0x88DB20")]
		private EnumStageResultType <CurrentStageResultType>k__BackingField;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<ToyBlastPuzzleNormaUiInfo> _normaUiInfoList;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ToyBlastPuzzleRequestChecker _toyBlastPuzzleRequestChecker;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Subject<int> _updateBulletCountSubject;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Subject<List<ToyBlastPuzzleNormaUiInfo>> _updateNormaInfoListSubject;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Subject<EnumStageResultType> _updateStageResultUiSubject;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ToyBlastPuzzleFuncStageInfoUpdatePartsBulletCount _toyBlastPuzzleFuncStageInfoUpdatePartsBulletCount;

		[Token(Token = "0x1700021F")]
		public EnumStageResultType CurrentStageResultType
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0xF860D8", Offset = "0xF860D8", VA = "0xF860D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896658", Offset = "0x896658")]
			get
			{
				return default(EnumStageResultType);
			}
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0xF860E0", Offset = "0xF860E0", VA = "0xF860E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896668", Offset = "0x896668")]
			private set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public IObservable<int> OnUpdateBulletCount
		{
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0xF860F0", Offset = "0xF860F0", VA = "0xF860F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public IObservable<List<ToyBlastPuzzleNormaUiInfo>> OnUpdateNormaInfoList
		{
			[Token(Token = "0x60017CD")]
			[Address(RVA = "0xF860F8", Offset = "0xF860F8", VA = "0xF860F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		public IObservable<EnumStageResultType> OnUpdateStageResultUi
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0xF86100", Offset = "0xF86100", VA = "0xF86100")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		public int CurrentBulletCount
		{
			[Token(Token = "0x60017D2")]
			[Address(RVA = "0xF86168", Offset = "0xF86168", VA = "0xF86168")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xF860E8", Offset = "0xF860E8", VA = "0xF860E8")]
		public List<ToyBlastPuzzleNormaUiInfo> GetNormaUiInfoList()
		{
			return null;
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xF86108", Offset = "0xF86108", VA = "0xF86108")]
		private void UpdateBulletCountUi()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xF86184", Offset = "0xF86184", VA = "0xF86184")]
		private void UpdateNormaInfoListUi()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xF861DC", Offset = "0xF861DC", VA = "0xF861DC")]
		private void UpdateStageResultUi()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xF861F8", Offset = "0xF861F8", VA = "0xF861F8", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xF86440", Offset = "0xF86440", VA = "0xF86440", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xF8646C", Offset = "0xF8646C", VA = "0xF8646C")]
		public void UpdateFunc()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xF86500", Offset = "0xF86500", VA = "0xF86500")]
		public void ReduceBulletCount()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xF865D4", Offset = "0xF865D4", VA = "0xF865D4")]
		public void NotifyEraseTile(EnumToyBlastPuzzleTileType tileType)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xF86724", Offset = "0xF86724", VA = "0xF86724")]
		public void NotifyErasePanel(EnumToyBlastPuzzleErasePanelReasonType erasePanelReasonType, EnumToyBlastPuzzlePanelType panelType, EnumToyBlastPuzzlePanelColor panelColor)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xF86894", Offset = "0xF86894", VA = "0xF86894")]
		public void NotifyEraseOrnament(EnumToyBlastPuzzleOrnamentType ornamentType)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xF865D8", Offset = "0xF865D8", VA = "0xF865D8")]
		private void CheckTileNorma(EnumToyBlastPuzzleTileType tileType)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xF86730", Offset = "0xF86730", VA = "0xF86730")]
		private void CheckPanelNorma(EnumToyBlastPuzzlePanelType panelType, EnumToyBlastPuzzlePanelColor panelColor)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xF86898", Offset = "0xF86898", VA = "0xF86898")]
		private void CheckOrnamentNorma(EnumToyBlastPuzzleOrnamentType ornamentType)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xF869E4", Offset = "0xF869E4", VA = "0xF869E4")]
		private void CheckNormaCore(ToyBlastPuzzleNormaUiInfo targetNormaInfo)
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xF86B50", Offset = "0xF86B50", VA = "0xF86B50")]
		public ToyBlastPuzzleFuncStageInfoUpdate()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public class ToyBlastPuzzleFuncStageInfoUpdatePartsBulletCount
	{
		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DB30", Offset = "0x88DB30")]
		private int <CurrentBulletCount>k__BackingField;

		[Token(Token = "0x17000224")]
		public int CurrentBulletCount
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0xF86CA8", Offset = "0xF86CA8", VA = "0xF86CA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896678", Offset = "0x896678")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0xF86CB0", Offset = "0xF86CB0", VA = "0xF86CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896688", Offset = "0x896688")]
			private set
			{
			}
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xF86424", Offset = "0xF86424", VA = "0xF86424")]
		public void Init(ToyBlastPuzzleStageInfo stageInfo)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xF86464", Offset = "0xF86464", VA = "0xF86464")]
		public void Reset()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xF86554", Offset = "0xF86554", VA = "0xF86554")]
		public bool ReduceBulletCount()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xF86CA0", Offset = "0xF86CA0", VA = "0xF86CA0")]
		public ToyBlastPuzzleFuncStageInfoUpdatePartsBulletCount()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class ToyBlastPuzzleFuncTileCreate : ToyBlastPuzzleFuncBase
	{
		[Serializable]
		[Token(Token = "0x20004E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881DEC", Offset = "0x881DEC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ToyBlastPuzzleStageInfo, int> <>9__3_0;

			[Token(Token = "0x4001832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<ToyBlastPuzzleTile> <>9__4_0;

			[Token(Token = "0x4001833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ToyBlastPuzzleTile, bool> <>9__6_0;

			[Token(Token = "0x60017EB")]
			[Address(RVA = "0xF96A70", Offset = "0xF96A70", VA = "0xF96A70")]
			public <>c()
			{
			}

			[Token(Token = "0x60017EC")]
			[Address(RVA = "0xF96A78", Offset = "0xF96A78", VA = "0xF96A78")]
			internal int <CreatePrefabCash>b__3_0(ToyBlastPuzzleStageInfo x)
			{
				return default(int);
			}

			[Token(Token = "0x60017ED")]
			[Address(RVA = "0xF96A94", Offset = "0xF96A94", VA = "0xF96A94")]
			internal void <Init>b__4_0(ToyBlastPuzzleTile x)
			{
			}

			[Token(Token = "0x60017EE")]
			[Address(RVA = "0xF96AC4", Offset = "0xF96AC4", VA = "0xF96AC4")]
			internal bool <CreateInitTile>b__6_0(ToyBlastPuzzleTile x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public new List<ToyBlastPuzzleTileInfo> TileInfoList;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new Dictionary<ToyBlastPuzzleTileInfo, ToyBlastPuzzleTile> TileScriptDictionary;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<ToyBlastPuzzleTile> _prefabCashList;

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xF86CB8", Offset = "0xF86CB8", VA = "0xF86CB8")]
		public void CreatePrefabCash(List<ToyBlastPuzzleStageInfo> stageInfoList)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xF86ECC", Offset = "0xF86ECC", VA = "0xF86ECC", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xF87394", Offset = "0xF87394", VA = "0xF87394", Slot = "5")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xF870A4", Offset = "0xF870A4", VA = "0xF870A4")]
		private void CreateInitTile()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xF8740C", Offset = "0xF8740C", VA = "0xF8740C")]
		public ToyBlastPuzzleFuncTileCreate()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class ToyBlastPuzzleFuncTileFrameCreate : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x20004E9")]
		private enum EnumTileFrameDirection
		{
			[Token(Token = "0x4001838")]
			TopLeft,
			[Token(Token = "0x4001839")]
			TopRight,
			[Token(Token = "0x400183A")]
			DownLeft,
			[Token(Token = "0x400183B")]
			DownRight
		}

		[Token(Token = "0x20004EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881DFC", Offset = "0x881DFC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400183C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isEnable;

			[Token(Token = "0x60017FA")]
			[Address(RVA = "0xF96BF0", Offset = "0xF96BF0", VA = "0xF96BF0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60017FB")]
			[Address(RVA = "0xF96BF8", Offset = "0xF96BF8", VA = "0xF96BF8")]
			internal void <ChangeTileFrameEnable>b__0(ToyBlastPuzzleTileFrame x)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881E0C", Offset = "0x881E0C")]
		private sealed class <>c
		{
			[Token(Token = "0x400183D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400183E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ToyBlastPuzzleStageInfo, int> <>9__10_0;

			[Token(Token = "0x400183F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<ToyBlastPuzzleTileFrame> <>9__12_0;

			[Token(Token = "0x4001840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ToyBlastPuzzleTileFrame, bool> <>9__13_0;

			[Token(Token = "0x60017FD")]
			[Address(RVA = "0xF96B5C", Offset = "0xF96B5C", VA = "0xF96B5C")]
			public <>c()
			{
			}

			[Token(Token = "0x60017FE")]
			[Address(RVA = "0xF96B64", Offset = "0xF96B64", VA = "0xF96B64")]
			internal int <CreatePrefabCash>b__10_0(ToyBlastPuzzleStageInfo x)
			{
				return default(int);
			}

			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xF96B88", Offset = "0xF96B88", VA = "0xF96B88")]
			internal void <Init>b__12_0(ToyBlastPuzzleTileFrame x)
			{
			}

			[Token(Token = "0x6001800")]
			[Address(RVA = "0xF96BB8", Offset = "0xF96BB8", VA = "0xF96BB8")]
			internal bool <CreateTileFrame>b__13_0(ToyBlastPuzzleTileFrame x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881E1C", Offset = "0x881E1C")]
		private struct <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<EnumTileFrameDirection> resultList;
		}

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Vector3 _tileFrameOffsetVec;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ToyBlastPuzzleTileFrame> _blastPuzzleTileFrameList;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<ToyBlastPuzzleTileFrame> _prefabCashList;

		[Token(Token = "0x17000225")]
		private static int TileFrameMaxRaw
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0xF87484", Offset = "0xF87484", VA = "0xF87484")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000226")]
		private static int TileFrameMaxLine
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0xF8749C", Offset = "0xF8749C", VA = "0xF8749C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000227")]
		private static int TileFrameMaxCount
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xF874B4", Offset = "0xF874B4", VA = "0xF874B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xF874E0", Offset = "0xF874E0", VA = "0xF874E0")]
		public void ChangeTileFrameEnable(bool isEnable)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xF875D4", Offset = "0xF875D4", VA = "0xF875D4")]
		public void CreatePrefabCash(List<ToyBlastPuzzleStageInfo> stageInfoList)
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xF877F0", Offset = "0xF877F0", VA = "0xF877F0", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xF87964", Offset = "0xF87964", VA = "0xF87964")]
		private void CreateTileFrame()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xF87CD8", Offset = "0xF87CD8", VA = "0xF87CD8")]
		private EnumToyBlastPuzzleTileFrameType CalcTileFrameType(int tileFrameIndex)
		{
			return default(EnumToyBlastPuzzleTileFrameType);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xF87F80", Offset = "0xF87F80", VA = "0xF87F80")]
		private List<EnumTileFrameDirection> CalcExistTileDirectionList(int tileFrameIndex)
		{
			return null;
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xF88168", Offset = "0xF88168", VA = "0xF88168")]
		public ToyBlastPuzzleFuncTileFrameCreate()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xF88078", Offset = "0xF88078", VA = "0xF88078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896698", Offset = "0x896698")]
		internal static void <CalcExistTileDirectionList>g__CheckExistTileAndAddResultList|15_0(int checkTileRaw, int checkTileLine, EnumTileFrameDirection tileFrameDirection, ref <>c__DisplayClass15_0 P_3)
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class ToyBlastPuzzleFuncTileUpdate : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x6001801")]
		[Address(RVA = "0xF881F0", Offset = "0xF881F0", VA = "0xF881F0")]
		public void UpdateDraw()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xF88328", Offset = "0xF88328", VA = "0xF88328")]
		public new void NotifyLaserPointerFocus(List<int> focusIndexList, HandLR handLr)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xF884B8", Offset = "0xF884B8", VA = "0xF884B8")]
		public void ApplyArcPositionSetting()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xF88738", Offset = "0xF88738", VA = "0xF88738")]
		public ToyBlastPuzzleFuncTileUpdate()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class ToyBlastPuzzleFuncTouchErasePanel : ToyBlastPuzzleFuncBase
	{
		[Token(Token = "0x6001805")]
		[Address(RVA = "0xF88740", Offset = "0xF88740", VA = "0xF88740")]
		public bool TouchErasePanel(ToyBlastPuzzleSelectPanelInfo selectPanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xF88978", Offset = "0xF88978", VA = "0xF88978")]
		private List<int> TouchErasePanelForMatchingPanel(int touchPanelIndex, List<int> matchingGroupIndexList)
		{
			return null;
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xF88C54", Offset = "0xF88C54", VA = "0xF88C54")]
		public ToyBlastPuzzleFuncTouchErasePanel()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Panel
{
	[Token(Token = "0x20004EF")]
	public enum EnumToyBlastPuzzleChangePanelReasonType
	{
		[Token(Token = "0x4001843")]
		None,
		[Token(Token = "0x4001844")]
		Touch,
		[Token(Token = "0x4001845")]
		PuzzleCube,
		[Token(Token = "0x4001846")]
		EraseChangePanel
	}
	[Token(Token = "0x20004F0")]
	public static class EnumToyBlastPuzzleChangePanelReasonTypeExtension
	{
		[Token(Token = "0x6001808")]
		[Address(RVA = "0x123132C", Offset = "0x123132C", VA = "0x123132C")]
		public static bool IsCheckNotifyErasePanelCore(this EnumToyBlastPuzzleChangePanelReasonType type)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004F1")]
	public enum EnumToyBlastPuzzleErasePanelReasonType
	{
		[Token(Token = "0x4001848")]
		None,
		[Token(Token = "0x4001849")]
		Touch,
		[Token(Token = "0x400184A")]
		Chain,
		[Token(Token = "0x400184B")]
		FallObjectPocket,
		[Token(Token = "0x400184C")]
		Rotor,
		[Token(Token = "0x400184D")]
		Tnt,
		[Token(Token = "0x400184E")]
		PuzzleCubeSingle,
		[Token(Token = "0x400184F")]
		PuzzleCubeDouble,
		[Token(Token = "0x4001850")]
		BombActivate,
		[Token(Token = "0x4001851")]
		BombIgnition,
		[Token(Token = "0x4001852")]
		MoveOrnament
	}
	[Token(Token = "0x20004F2")]
	public static class EnumToyBlastPuzzleErasePanelReasonTypeExtension
	{
		[Token(Token = "0x6001809")]
		[Address(RVA = "0x123134C", Offset = "0x123134C", VA = "0x123134C")]
		public static bool IsExplodeBombEnable(this EnumToyBlastPuzzleErasePanelReasonType type)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004F3")]
	public enum EnumToyBlastPuzzlePanelAddTextureType
	{
		[Token(Token = "0x4001854")]
		None,
		[Token(Token = "0x4001855")]
		Rotor,
		[Token(Token = "0x4001856")]
		Tnt,
		[Token(Token = "0x4001857")]
		PuzzleCube
	}
	[Token(Token = "0x20004F4")]
	public enum EnumToyBlastPuzzlePanelColor
	{
		[Token(Token = "0x4001859")]
		None = 0,
		[Token(Token = "0x400185A")]
		Red = 1,
		[Token(Token = "0x400185B")]
		Yellow = 2,
		[Token(Token = "0x400185C")]
		Green = 3,
		[Token(Token = "0x400185D")]
		Blue = 4,
		[Token(Token = "0x400185E")]
		Purple = 5,
		[Token(Token = "0x400185F")]
		Orange = 6,
		[Token(Token = "0x4001860")]
		Random = 99
	}
	[Token(Token = "0x20004F5")]
	public enum EnumToyBlastPuzzlePanelMoveReason
	{
		[Token(Token = "0x4001862")]
		None,
		[Token(Token = "0x4001863")]
		Fall,
		[Token(Token = "0x4001864")]
		NewPanelFall,
		[Token(Token = "0x4001865")]
		Shuffle
	}
	[Token(Token = "0x20004F6")]
	public enum EnumToyBlastPuzzlePanelState
	{
		[Token(Token = "0x4001867")]
		Normal,
		[Token(Token = "0x4001868")]
		Move,
		[Token(Token = "0x4001869")]
		EraseStart,
		[Token(Token = "0x400186A")]
		EraseFinish
	}
	[Token(Token = "0x20004F7")]
	public static class EnumToyBlastPuzzlePanelStateExtension
	{
		[Token(Token = "0x600180A")]
		[Address(RVA = "0x12316C0", Offset = "0x12316C0", VA = "0x12316C0")]
		public static bool IsMatchingEnable(this EnumToyBlastPuzzlePanelState type)
		{
			return default(bool);
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x12316CC", Offset = "0x12316CC", VA = "0x12316CC")]
		public static bool IsFallEnable(this EnumToyBlastPuzzlePanelState type)
		{
			return default(bool);
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x12316D8", Offset = "0x12316D8", VA = "0x12316D8")]
		public static bool IsVisible(this EnumToyBlastPuzzlePanelState type)
		{
			return default(bool);
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x12316E4", Offset = "0x12316E4", VA = "0x12316E4")]
		public static bool IsDeleted(this EnumToyBlastPuzzlePanelState type)
		{
			return default(bool);
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x12316F4", Offset = "0x12316F4", VA = "0x12316F4")]
		public static bool IsEraseEnable(this EnumToyBlastPuzzlePanelState type, EnumToyBlastPuzzleErasePanelReasonType erasePanelReasonType)
		{
			return default(bool);
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x1231700", Offset = "0x1231700", VA = "0x1231700")]
		public static bool IsChangeEnable(this EnumToyBlastPuzzlePanelState type, EnumToyBlastPuzzleChangePanelReasonType changePanelReasonType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x123170C", Offset = "0x123170C", VA = "0x123170C")]
		public static bool IsMoveEnable(this EnumToyBlastPuzzlePanelState type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x1231718", Offset = "0x1231718", VA = "0x1231718")]
		public static bool IsSelectEnable(this EnumToyBlastPuzzlePanelState type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x1231724", Offset = "0x1231724", VA = "0x1231724")]
		public static bool IsShuffleEnable(this EnumToyBlastPuzzlePanelState type)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004F8")]
	public enum EnumToyBlastPuzzlePanelType
	{
		[Token(Token = "0x400186C")]
		None = 0,
		[Token(Token = "0x400186D")]
		Normal = 1,
		[Token(Token = "0x400186E")]
		RotorHorizontal = 100,
		[Token(Token = "0x400186F")]
		RotorVertical = 101,
		[Token(Token = "0x4001870")]
		Tnt = 102,
		[Token(Token = "0x4001871")]
		PuzzleCube = 103,
		[Token(Token = "0x4001872")]
		FallToy1 = 1000,
		[Token(Token = "0x4001873")]
		FallToy2 = 1001,
		[Token(Token = "0x4001874")]
		FallToy3 = 1002,
		[Token(Token = "0x4001875")]
		FallToy4 = 1003,
		[Token(Token = "0x4001876")]
		FallToy5 = 1004,
		[Token(Token = "0x4001877")]
		FallToy6 = 1005,
		[Token(Token = "0x4001878")]
		FallToy7 = 1006,
		[Token(Token = "0x4001879")]
		FallToy8 = 1007,
		[Token(Token = "0x400187A")]
		Acorn = 1100,
		[Token(Token = "0x400187B")]
		ObstacleBlockLv1 = 1200,
		[Token(Token = "0x400187C")]
		ObstacleBlockLv2 = 1201,
		[Token(Token = "0x400187D")]
		ObstacleBlockLv3 = 1202,
		[Token(Token = "0x400187E")]
		ObstacleColorBlockLv1 = 1300,
		[Token(Token = "0x400187F")]
		ObstacleColorBlockLv2 = 1301,
		[Token(Token = "0x4001880")]
		ObstacleColorBlockLv3 = 1302,
		[Token(Token = "0x4001881")]
		MetalBlock = 1400,
		[Token(Token = "0x4001882")]
		RocketStopperLv1 = 1500,
		[Token(Token = "0x4001883")]
		RocketStopperLv2 = 1501,
		[Token(Token = "0x4001884")]
		RocketStopperLv3 = 1502
	}
	[Token(Token = "0x20004F9")]
	public static class ToyBlastPuzzlePanelTypeExtension
	{
		[Token(Token = "0x6001813")]
		[Address(RVA = "0xE66910", Offset = "0xE66910", VA = "0xE66910")]
		public static bool IsMatchingEnable(this EnumToyBlastPuzzlePanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xE6691C", Offset = "0xE6691C", VA = "0xE6691C")]
		public static bool IsFallEnable(this EnumToyBlastPuzzlePanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xE658F4", Offset = "0xE658F4", VA = "0xE658F4")]
		public static bool IsVisible(this EnumToyBlastPuzzlePanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xE6696C", Offset = "0xE6696C", VA = "0xE6696C")]
		public static bool IsEraseEnable(this EnumToyBlastPuzzlePanelType type, EnumToyBlastPuzzleErasePanelReasonType erasePanelReasonType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xE66AA0", Offset = "0xE66AA0", VA = "0xE66AA0")]
		public static bool IsChangeEnable(this EnumToyBlastPuzzlePanelType type, EnumToyBlastPuzzleChangePanelReasonType changePanelReasonType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xE66ACC", Offset = "0xE66ACC", VA = "0xE66ACC")]
		public static bool IsShuffleEnable(this EnumToyBlastPuzzlePanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xE6534C", Offset = "0xE6534C", VA = "0xE6534C")]
		public static bool IsBombPanel(this EnumToyBlastPuzzlePanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xE66AD8", Offset = "0xE66AD8", VA = "0xE66AD8")]
		public static bool IsColorBombPanel(this EnumToyBlastPuzzlePanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xE66A90", Offset = "0xE66A90", VA = "0xE66A90")]
		public static bool IsFallToyPanel(this EnumToyBlastPuzzlePanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xE66A64", Offset = "0xE66A64", VA = "0xE66A64")]
		public static bool IsChainEraseTarget(this EnumToyBlastPuzzlePanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xE66AE4", Offset = "0xE66AE4", VA = "0xE66AE4")]
		public static bool IsRocketStopperPanel(this EnumToyBlastPuzzlePanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xE66AF4", Offset = "0xE66AF4", VA = "0xE66AF4")]
		public static EnumToyBlastPuzzleExplodeBombType ToEnumToyBlastPuzzleExplodeBombType(this EnumToyBlastPuzzlePanelType type)
		{
			return default(EnumToyBlastPuzzleExplodeBombType);
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xE66B10", Offset = "0xE66B10", VA = "0xE66B10")]
		public static EnumToyBlastPuzzlePanelAddTextureType ToEnumToyBlastPuzzlePanelAddTextureType(this EnumToyBlastPuzzlePanelType type)
		{
			return default(EnumToyBlastPuzzlePanelAddTextureType);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xE66B34", Offset = "0xE66B34", VA = "0xE66B34")]
		public static EnumToyBlastPuzzlePanelType ToEraseChangePanelType(this EnumToyBlastPuzzlePanelType type)
		{
			return default(EnumToyBlastPuzzlePanelType);
		}
	}
	[Token(Token = "0x20004FA")]
	public enum EnumToyBlastPuzzlePrioritySelectPanelType
	{
		[Token(Token = "0x4001886")]
		CreateRocket,
		[Token(Token = "0x4001887")]
		CreateTnt,
		[Token(Token = "0x4001888")]
		CreatePuzzleCube,
		[Token(Token = "0x4001889")]
		CreateRandomBomb,
		[Token(Token = "0x400188A")]
		BombMix,
		[Token(Token = "0x400188B")]
		NormaTargetPanel,
		[Token(Token = "0x400188C")]
		NormaTargetOrnament,
		[Token(Token = "0x400188D")]
		NormaTargetOrnamentExplodeBomb,
		[Token(Token = "0x400188E")]
		FallToyDown
	}
	[Token(Token = "0x20004FB")]
	public static class EnumToyBlastPuzzlePrioritySelectPanelTypeExtension
	{
		[Token(Token = "0x6001821")]
		[Address(RVA = "0x1231730", Offset = "0x1231730", VA = "0x1231730")]
		public static int ToPriorityValue(this EnumToyBlastPuzzlePrioritySelectPanelType type)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004FC")]
	public class ToyBlastPuzzlePanel : MonoBehaviour, IPointerSelectReciever, IEventSystemHandler
	{
		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToyBlastPuzzlePanelDraw _drawScript;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Subject<ToyBlastPuzzleSelectPanelInfo> _selectPanelSubject;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Subject<(ToyBlastPuzzlePanel, HandLR, bool)> _laserPointerFocusSubject;

		[Token(Token = "0x17000228")]
		public IObservable<ToyBlastPuzzleSelectPanelInfo> OnSelectPanel
		{
			[Token(Token = "0x6001824")]
			[Address(RVA = "0xE64BD8", Offset = "0xE64BD8", VA = "0xE64BD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public IObservable<(ToyBlastPuzzlePanel, HandLR, bool)> OnLaserPointerFocusSubject
		{
			[Token(Token = "0x6001825")]
			[Address(RVA = "0xE64BE0", Offset = "0xE64BE0", VA = "0xE64BE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xE64A30", Offset = "0xE64A30", VA = "0xE64A30")]
		public void UpdateDraw(ToyBlastPuzzlePanelInfo puzzlePanelInfo)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xE64AFC", Offset = "0xE64AFC", VA = "0xE64AFC")]
		public void UpdateSelectFocus(bool isSelectFocus)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xE64BE8", Offset = "0xE64BE8", VA = "0xE64BE8")]
		public void SelectPanel(ToyBlastPuzzleSelectPanelInfo selectPanelInfo)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xE64C54", Offset = "0xE64C54", VA = "0xE64C54", Slot = "4")]
		public void OnPointerEnter(HandLR handLr)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xE64CF8", Offset = "0xE64CF8", VA = "0xE64CF8", Slot = "5")]
		public void OnPointerExit(HandLR handLr)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xE64D9C", Offset = "0xE64D9C", VA = "0xE64D9C")]
		public ToyBlastPuzzlePanel()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class ToyBlastPuzzlePanelDraw : MonoBehaviour
	{
		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ToyBlastPuzzlePanelDrawModel _toyBlastPuzzlePanelDrawModel;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ToyBlastPuzzlePanelDrawNormalPanelTexture _toyBlastPuzzlePanelDrawNormalPanelTexture;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ToyBlastPuzzlePanelDrawBomMixPossibleParticle _toyBlastPuzzlePanelDrawBomMixPossibleParticle;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ToyBlastPuzzlePanelPrefabNormal _toyBlastPuzzlePanelPrefabNormalCash;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ToyBlastPuzzlePanelDrawDamageAreaEffect _toyBlastPuzzlePanelDrawDamageAreaEffect;

		[Token(Token = "0x1700022A")]
		private bool CurrentVisible
		{
			[Token(Token = "0x600182A")]
			[Address(RVA = "0xE64E54", Offset = "0xE64E54", VA = "0xE64E54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022B")]
		private GameObject CurrentModel
		{
			[Token(Token = "0x600182B")]
			[Address(RVA = "0xE64E70", Offset = "0xE64E70", VA = "0xE64E70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xE64F1C", Offset = "0xE64F1C", VA = "0xE64F1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xE64A48", Offset = "0xE64A48", VA = "0xE64A48")]
		public void UpdateDraw(ToyBlastPuzzlePanelInfo panelInfo)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xE6529C", Offset = "0xE6529C", VA = "0xE6529C")]
		public ToyBlastPuzzlePanelDraw()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class ToyBlastPuzzlePanelDrawBomMixPossibleParticle : MonoBehaviour
	{
		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _particleGameObject;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isInitComplete;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _isBomMixPossible;

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xE65098", Offset = "0xE65098", VA = "0xE65098")]
		public void Init(ToyBlastPuzzlePanelInfo panelInfo, bool isVisible)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xE651FC", Offset = "0xE651FC", VA = "0xE651FC")]
		public void UpdateDraw(ToyBlastPuzzlePanelInfo panelInfo)
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xE6535C", Offset = "0xE6535C", VA = "0xE6535C")]
		public ToyBlastPuzzlePanelDrawBomMixPossibleParticle()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class ToyBlastPuzzlePanelDrawDamageAreaEffect : MonoBehaviour
	{
		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _particleGameObject;

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xE65274", Offset = "0xE65274", VA = "0xE65274")]
		public void UpdateDraw(ToyBlastPuzzlePanelInfo panelInfo)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xE65364", Offset = "0xE65364", VA = "0xE65364")]
		public ToyBlastPuzzlePanelDrawDamageAreaEffect()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class ToyBlastPuzzlePanelDrawModel
	{
		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DBA0", Offset = "0x88DBA0")]
		private EnumToyBlastPuzzlePanelType <CurrentPanelType>k__BackingField;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DBB0", Offset = "0x88DBB0")]
		private EnumToyBlastPuzzlePanelColor <CurrentPanelColor>k__BackingField;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DBC0", Offset = "0x88DBC0")]
		private bool <CurrentVisible>k__BackingField;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject _parentGameObject;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ToyBlastPuzzlePanelPrefabNormal _normalPanelCash;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _instantiateModelGameObject;

		[Token(Token = "0x1700022C")]
		public EnumToyBlastPuzzlePanelType CurrentPanelType
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0xE6536C", Offset = "0xE6536C", VA = "0xE6536C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896848", Offset = "0x896848")]
			get
			{
				return default(EnumToyBlastPuzzlePanelType);
			}
			[Token(Token = "0x6001835")]
			[Address(RVA = "0xE65374", Offset = "0xE65374", VA = "0xE65374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896858", Offset = "0x896858")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public EnumToyBlastPuzzlePanelColor CurrentPanelColor
		{
			[Token(Token = "0x6001836")]
			[Address(RVA = "0xE6537C", Offset = "0xE6537C", VA = "0xE6537C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896868", Offset = "0x896868")]
			get
			{
				return default(EnumToyBlastPuzzlePanelColor);
			}
			[Token(Token = "0x6001837")]
			[Address(RVA = "0xE65384", Offset = "0xE65384", VA = "0xE65384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896878", Offset = "0x896878")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public bool CurrentVisible
		{
			[Token(Token = "0x6001838")]
			[Address(RVA = "0xE6538C", Offset = "0xE6538C", VA = "0xE6538C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896888", Offset = "0x896888")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001839")]
			[Address(RVA = "0xE65394", Offset = "0xE65394", VA = "0xE65394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896898", Offset = "0x896898")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public GameObject CurrentModel
		{
			[Token(Token = "0x600183A")]
			[Address(RVA = "0xE64E88", Offset = "0xE64E88", VA = "0xE64E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xE64F54", Offset = "0xE64F54", VA = "0xE64F54")]
		public void Init(GameObject parent, ToyBlastPuzzlePanelPrefabNormal normalPanel)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xE64F5C", Offset = "0xE64F5C", VA = "0xE64F5C")]
		public bool UpdateDraw(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xE653BC", Offset = "0xE653BC", VA = "0xE653BC")]
		private void UpdateModel()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xE65334", Offset = "0xE65334", VA = "0xE65334")]
		public ToyBlastPuzzlePanelDrawModel()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class ToyBlastPuzzlePanelDrawNormalPanelTexture
	{
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isInitComplete;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private EnumToyBlastPuzzlePanelAddTextureType _currentAddTextureType;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IToyBlastPuzzlePanelPrefabChangeTexture _iToyBlastPuzzlePanelPrefabChangeTexture;

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xE64FFC", Offset = "0xE64FFC", VA = "0xE64FFC")]
		public void Init(ToyBlastPuzzlePanelInfo panelInfo, GameObject modelGameObject, bool isVisible)
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xE65110", Offset = "0xE65110", VA = "0xE65110")]
		public void UpdateDraw(ToyBlastPuzzlePanelInfo panelInfo)
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xE65344", Offset = "0xE65344", VA = "0xE65344")]
		public ToyBlastPuzzlePanelDrawNormalPanelTexture()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class ToyBlastPuzzlePanelInfo
	{
		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int UniqueIdValue;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int CurrentIndex;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnumToyBlastPuzzlePanelState EnumToyBlastPuzzlePanelState;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EnumToyBlastPuzzlePanelType EnumToyBlastPuzzlePanelType;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnumToyBlastPuzzlePanelColor EnumToyBlastPuzzlePanelColor;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 CurrentLocalPos;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DBD0", Offset = "0x88DBD0")]
		private Vector3 <MoveTargetLocalPos>k__BackingField;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DBE0", Offset = "0x88DBE0")]
		private EnumToyBlastPuzzlePanelMoveReason <MoveReason>k__BackingField;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MoveSpeed;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MoveAccel;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool IsBomMixEnable;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool IsDamageArea;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public EnumToyBlastPuzzlePanelAddTextureType EnumToyBlastPuzzlePanelAddTextureType;

		[Token(Token = "0x17000230")]
		public Vector3 MoveTargetLocalPos
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0xE658B4", Offset = "0xE658B4", VA = "0xE658B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8968A8", Offset = "0x8968A8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001843")]
			[Address(RVA = "0xE658C0", Offset = "0xE658C0", VA = "0xE658C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8968B8", Offset = "0x8968B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public EnumToyBlastPuzzlePanelMoveReason MoveReason
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0xE658CC", Offset = "0xE658CC", VA = "0xE658CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8968C8", Offset = "0x8968C8")]
			get
			{
				return default(EnumToyBlastPuzzlePanelMoveReason);
			}
			[Token(Token = "0x6001845")]
			[Address(RVA = "0xE658D4", Offset = "0xE658D4", VA = "0xE658D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8968D8", Offset = "0x8968D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xE658DC", Offset = "0xE658DC", VA = "0xE658DC")]
		public void SetMoveTargetPos(Vector3 localPos, EnumToyBlastPuzzlePanelMoveReason reason)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xE653A0", Offset = "0xE653A0", VA = "0xE653A0")]
		public bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xE65900", Offset = "0xE65900", VA = "0xE65900")]
		public ToyBlastPuzzlePanelInfo()
		{
		}
	}
	[Token(Token = "0x2000503")]
	public class ToyBlastPuzzlePanelSound : MonoBehaviour
	{
		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _landSe;

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xE668EC", Offset = "0xE668EC", VA = "0xE668EC")]
		public void PlayLandSe()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xE66908", Offset = "0xE66908", VA = "0xE66908")]
		public ToyBlastPuzzlePanelSound()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Panel.Model
{
	[Token(Token = "0x2000504")]
	public interface IToyBlastPuzzlePanelPrefabChangeTexture
	{
		[Token(Token = "0x600184B")]
		void ChangeTexture(EnumToyBlastPuzzlePanelAddTextureType textureType);
	}
	[Token(Token = "0x2000505")]
	public interface IToyBlastPuzzlePanelPrefabInit
	{
		[Token(Token = "0x600184C")]
		void Init(EnumToyBlastPuzzlePanelType type, EnumToyBlastPuzzlePanelColor color);
	}
	[Token(Token = "0x2000506")]
	public class ToyBlastPuzzlePanelPrefabBombStar : MonoBehaviour, IToyBlastPuzzlePanelPrefabInit
	{
		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> _prefabList;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EnumToyBlastPuzzlePanelType _panelType;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private EnumToyBlastPuzzlePanelColor _panelColor;

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xE65908", Offset = "0xE65908", VA = "0xE65908", Slot = "4")]
		public void Init(EnumToyBlastPuzzlePanelType type, EnumToyBlastPuzzlePanelColor color)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xE65910", Offset = "0xE65910", VA = "0xE65910")]
		private void CreatePrefab()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xE659F4", Offset = "0xE659F4", VA = "0xE659F4")]
		private GameObject GetPrefab()
		{
			return null;
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xE65B7C", Offset = "0xE65B7C", VA = "0xE65B7C")]
		public ToyBlastPuzzlePanelPrefabBombStar()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class ToyBlastPuzzlePanelPrefabGimmickFallToy : MonoBehaviour, IToyBlastPuzzlePanelPrefabInit
	{
		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> _prefabList;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EnumToyBlastPuzzlePanelType _panelType;

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xE65BF4", Offset = "0xE65BF4", VA = "0xE65BF4", Slot = "4")]
		public void Init(EnumToyBlastPuzzlePanelType type, EnumToyBlastPuzzlePanelColor color)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xE65BFC", Offset = "0xE65BFC", VA = "0xE65BFC")]
		private void CreatePrefab()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xE65CE0", Offset = "0xE65CE0", VA = "0xE65CE0")]
		private GameObject GetPrefab()
		{
			return null;
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xE65E88", Offset = "0xE65E88", VA = "0xE65E88")]
		public ToyBlastPuzzlePanelPrefabGimmickFallToy()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public class ToyBlastPuzzlePanelPrefabGimmickObstacleColorBlock : MonoBehaviour, IToyBlastPuzzlePanelPrefabInit
	{
		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> _prefabList;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EnumToyBlastPuzzlePanelType _panelType;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private EnumToyBlastPuzzlePanelColor _panelColor;

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xE65F00", Offset = "0xE65F00", VA = "0xE65F00", Slot = "4")]
		public void Init(EnumToyBlastPuzzlePanelType type, EnumToyBlastPuzzlePanelColor color)
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xE65F08", Offset = "0xE65F08", VA = "0xE65F08")]
		private void CreatePrefab()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xE65FEC", Offset = "0xE65FEC", VA = "0xE65FEC")]
		private GameObject GetPrefab()
		{
			return null;
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xE66420", Offset = "0xE66420", VA = "0xE66420")]
		public ToyBlastPuzzlePanelPrefabGimmickObstacleColorBlock()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class ToyBlastPuzzlePanelPrefabGimmickRocketStopper : MonoBehaviour, IToyBlastPuzzlePanelPrefabInit
	{
		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> _prefabList;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EnumToyBlastPuzzlePanelType _panelType;

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xE66498", Offset = "0xE66498", VA = "0xE66498", Slot = "4")]
		public void Init(EnumToyBlastPuzzlePanelType type, EnumToyBlastPuzzlePanelColor color)
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xE664A0", Offset = "0xE664A0", VA = "0xE664A0")]
		private void CreatePrefab()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xE66584", Offset = "0xE66584", VA = "0xE66584")]
		private GameObject GetPrefab()
		{
			return null;
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xE6665C", Offset = "0xE6665C", VA = "0xE6665C")]
		public ToyBlastPuzzlePanelPrefabGimmickRocketStopper()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class ToyBlastPuzzlePanelPrefabNormal : MonoBehaviour, IToyBlastPuzzlePanelPrefabInit, IToyBlastPuzzlePanelPrefabChangeTexture
	{
		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Material> _bluePanelMaterialList;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Material> _greenPanelMaterialList;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<Material> _orangePanelMaterialList;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<Material> _purplePanelMaterialList;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Material> _redPanelMaterialList;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<Material> _yellowPanelMaterialList;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<Material> _randomPanelMaterialList;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Material> _targetMaterialList;

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xE666D4", Offset = "0xE666D4", VA = "0xE666D4", Slot = "5")]
		public void ChangeTexture(EnumToyBlastPuzzlePanelAddTextureType textureType)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xE655EC", Offset = "0xE655EC", VA = "0xE655EC", Slot = "4")]
		public void Init(EnumToyBlastPuzzlePanelType type, EnumToyBlastPuzzlePanelColor color)
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xE66758", Offset = "0xE66758", VA = "0xE66758")]
		private List<Material> GetTargetMaterialList(EnumToyBlastPuzzlePanelColor panelColor)
		{
			return null;
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xE667C4", Offset = "0xE667C4", VA = "0xE667C4")]
		public ToyBlastPuzzlePanelPrefabNormal()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Other
{
	[Token(Token = "0x200050B")]
	public class ToyBlastPuzzleAnimal : MonoBehaviour
	{
		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshAnimator _meshAnimator;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ZVRDistanceGrabbable _zvrDistanceGrabbable;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _idleMeshAnimationIndex;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _grabbedMeshAnimationIndex;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _currentAnimationIndex;

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xFA9394", Offset = "0xFA9394", VA = "0xFA9394")]
		private void PlayIdleAnimation()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xFA93D0", Offset = "0xFA93D0", VA = "0xFA93D0")]
		private void PlayGrabbedAnimation()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xFA939C", Offset = "0xFA939C", VA = "0xFA939C")]
		private void PlayAnimationForIndex(int index)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xFA93D8", Offset = "0xFA93D8", VA = "0xFA93D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xFA93E0", Offset = "0xFA93E0", VA = "0xFA93E0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xFA9478", Offset = "0xFA9478", VA = "0xFA9478")]
		public ToyBlastPuzzleAnimal()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public static class ToyBlastPuzzleCalcPrefabFileName
	{
		[Token(Token = "0x6001867")]
		[Address(RVA = "0xFA9488", Offset = "0xFA9488", VA = "0xFA9488")]
		public static string CalcPanelPrefabFileName(EnumToyBlastPuzzlePanelType panelType)
		{
			return null;
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xFA96AC", Offset = "0xFA96AC", VA = "0xFA96AC")]
		public static string CalcTilePrefabFileName(EnumToyBlastPuzzleTileType type)
		{
			return null;
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xFA97A0", Offset = "0xFA97A0", VA = "0xFA97A0")]
		public static string CalcTileFramePrefabFileName(EnumToyBlastPuzzleTileFrameType type)
		{
			return null;
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xFA98C0", Offset = "0xFA98C0", VA = "0xFA98C0")]
		public static string CalcEffectPrefabFileName(EnumToyBlastPuzzleEffectType type)
		{
			return null;
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xFA9974", Offset = "0xFA9974", VA = "0xFA9974")]
		public static string CalcOrnamentPrefabFileName(EnumToyBlastPuzzleOrnamentType type)
		{
			return null;
		}
	}
	[Token(Token = "0x200050D")]
	public class ToyBlastPuzzlePlayLogCountManager : Singleton<ToyBlastPuzzlePlayLogCountManager>
	{
		[Token(Token = "0x200050E")]
		public enum PlayLogCountType
		{
			[Token(Token = "0x40018CC")]
			CreateRocketHorizontal,
			[Token(Token = "0x40018CD")]
			CreateRocketVertical,
			[Token(Token = "0x40018CE")]
			CreateTnt,
			[Token(Token = "0x40018CF")]
			CreatePuzzleCube
		}

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<PlayLogCountType, int> _playLogCountDictionary;

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xE66BA4", Offset = "0xE66BA4", VA = "0xE66BA4")]
		public int GetPlayLogCount(PlayLogCountType type)
		{
			return default(int);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xE66C48", Offset = "0xE66C48", VA = "0xE66C48")]
		public void ResetPlayLogCount()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xE66C9C", Offset = "0xE66C9C", VA = "0xE66C9C")]
		public void AddPlayLogCount(PlayLogCountType type)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xE66D84", Offset = "0xE66D84", VA = "0xE66D84")]
		public void NotifyChangePanel(ToyBlastPuzzleChangePanelInfo changePanelInfo)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xE66EFC", Offset = "0xE66EFC", VA = "0xE66EFC")]
		public ToyBlastPuzzlePlayLogCountManager()
		{
		}
	}
	[Token(Token = "0x200050F")]
	public class ToyBlastPuzzlePrefabManager : OnlyOneBehavior<ToyBlastPuzzlePrefabManager>
	{
		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881E7C", Offset = "0x881E7C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40018D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int effectLayerValue;

			[Token(Token = "0x40018D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int tileLayerValue;

			[Token(Token = "0x40018D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int panelLayerValue;

			[Token(Token = "0x40018DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int ornamentLayerValue;

			[Token(Token = "0x40018DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<GameObject> <>9__7;

			[Token(Token = "0x40018DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<GameObject> <>9__8;

			[Token(Token = "0x40018DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<GameObject> <>9__9;

			[Token(Token = "0x40018DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<GameObject> <>9__10;

			[Token(Token = "0x40018DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<GameObject> <>9__11;

			[Token(Token = "0x40018E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action<GameObject> <>9__12;

			[Token(Token = "0x6001879")]
			[Address(RVA = "0xF96EA8", Offset = "0xF96EA8", VA = "0xF96EA8")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600187A")]
			[Address(RVA = "0xF96EB0", Offset = "0xF96EB0", VA = "0xF96EB0")]
			internal void <InitPrefabLayer>b__0(GameObject x)
			{
			}

			[Token(Token = "0x600187B")]
			[Address(RVA = "0xF96F94", Offset = "0xF96F94", VA = "0xF96F94")]
			internal void <InitPrefabLayer>b__7(GameObject x)
			{
			}

			[Token(Token = "0x600187C")]
			[Address(RVA = "0xF96FB8", Offset = "0xF96FB8", VA = "0xF96FB8")]
			internal void <InitPrefabLayer>b__1(GameObject x)
			{
			}

			[Token(Token = "0x600187D")]
			[Address(RVA = "0xF9709C", Offset = "0xF9709C", VA = "0xF9709C")]
			internal void <InitPrefabLayer>b__8(GameObject x)
			{
			}

			[Token(Token = "0x600187E")]
			[Address(RVA = "0xF970C0", Offset = "0xF970C0", VA = "0xF970C0")]
			internal void <InitPrefabLayer>b__2(GameObject x)
			{
			}

			[Token(Token = "0x600187F")]
			[Address(RVA = "0xF971A4", Offset = "0xF971A4", VA = "0xF971A4")]
			internal void <InitPrefabLayer>b__9(GameObject x)
			{
			}

			[Token(Token = "0x6001880")]
			[Address(RVA = "0xF971C8", Offset = "0xF971C8", VA = "0xF971C8")]
			internal void <InitPrefabLayer>b__3(GameObject x)
			{
			}

			[Token(Token = "0x6001881")]
			[Address(RVA = "0xF971EC", Offset = "0xF971EC", VA = "0xF971EC")]
			internal void <InitPrefabLayer>b__4(GameObject x)
			{
			}

			[Token(Token = "0x6001882")]
			[Address(RVA = "0xF972D0", Offset = "0xF972D0", VA = "0xF972D0")]
			internal void <InitPrefabLayer>b__10(GameObject x)
			{
			}

			[Token(Token = "0x6001883")]
			[Address(RVA = "0xF972F4", Offset = "0xF972F4", VA = "0xF972F4")]
			internal void <InitPrefabLayer>b__5(GameObject x)
			{
			}

			[Token(Token = "0x6001884")]
			[Address(RVA = "0xF973D8", Offset = "0xF973D8", VA = "0xF973D8")]
			internal void <InitPrefabLayer>b__11(GameObject x)
			{
			}

			[Token(Token = "0x6001885")]
			[Address(RVA = "0xF973FC", Offset = "0xF973FC", VA = "0xF973FC")]
			internal void <InitPrefabLayer>b__6(GameObject x)
			{
			}

			[Token(Token = "0x6001886")]
			[Address(RVA = "0xF974E0", Offset = "0xF974E0", VA = "0xF974E0")]
			internal void <InitPrefabLayer>b__12(GameObject x)
			{
			}
		}

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88DD00", Offset = "0x88DD00")]
		private List<GameObject> _effectPrefabGameObjectList;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88DD4C", Offset = "0x88DD4C")]
		private List<GameObject> _ornamentPrefabGameObjectList;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88DD98", Offset = "0x88DD98")]
		[SerializeField]
		private List<GameObject> _tilePrefabGameObjectList;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<GameObject> _tileFramePrefabGameObjectList;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88DDF4", Offset = "0x88DDF4")]
		[SerializeField]
		private GameObject _normalPanelPrefabGameObject;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<GameObject> _bombPanelPrefabGameObjectList;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<GameObject> _gimmickPanelPrefabGameObjectList;

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xE66FB4", Offset = "0xE66FB4", VA = "0xE66FB4")]
		public void InitPrefabLayer()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xE6730C", Offset = "0xE6730C", VA = "0xE6730C")]
		private GameObject CalcTargetGameObject(List<GameObject> objList, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xE67468", Offset = "0xE67468", VA = "0xE67468")]
		public GameObject InstantiateEffectGameObject(EnumToyBlastPuzzleEffectType effectType, Transform parenTransform)
		{
			return null;
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xE617C8", Offset = "0xE617C8", VA = "0xE617C8")]
		public GameObject InstantiateOrnamentGameObject(EnumToyBlastPuzzleOrnamentType ornamentType, Transform parenTransform)
		{
			return null;
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xE675A4", Offset = "0xE675A4", VA = "0xE675A4")]
		public GameObject InstantiateTileGameObject(EnumToyBlastPuzzleTileType tileType, Transform parenTransform)
		{
			return null;
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xE676E0", Offset = "0xE676E0", VA = "0xE676E0")]
		public GameObject InstantiateTileFrameGameObject(EnumToyBlastPuzzleTileFrameType tileFrameType, Transform parenTransform)
		{
			return null;
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xE6561C", Offset = "0xE6561C", VA = "0xE6561C")]
		public GameObject InstantiatePanelGameObject(EnumToyBlastPuzzlePanelType panelType, EnumToyBlastPuzzlePanelColor panelColor, Transform parenTransform)
		{
			return null;
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xE6781C", Offset = "0xE6781C", VA = "0xE6781C")]
		public ToyBlastPuzzlePrefabManager()
		{
		}
	}
	[Token(Token = "0x2000511")]
	public class ToyBlastPuzzleRequestChecker
	{
		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DE60", Offset = "0x88DE60")]
		private bool <IsRequestFlag>k__BackingField;

		[Token(Token = "0x17000232")]
		public bool IsRequestFlag
		{
			[Token(Token = "0x6001887")]
			[Address(RVA = "0xE67928", Offset = "0xE67928", VA = "0xE67928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8968E8", Offset = "0x8968E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001888")]
			[Address(RVA = "0xE67930", Offset = "0xE67930", VA = "0xE67930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8968F8", Offset = "0x8968F8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xE6793C", Offset = "0xE6793C", VA = "0xE6793C")]
		public void RequestCheck()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xE67948", Offset = "0xE67948", VA = "0xE67948")]
		public void RequestComplete()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xE67950", Offset = "0xE67950", VA = "0xE67950")]
		public ToyBlastPuzzleRequestChecker()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Ornament
{
	[Token(Token = "0x2000512")]
	public enum EnumToyBlastPuzzleOrnamentAnimalType
	{
		[Token(Token = "0x40018E3")]
		None,
		[Token(Token = "0x40018E4")]
		Kaba,
		[Token(Token = "0x40018E5")]
		Kirin,
		[Token(Token = "0x40018E6")]
		Lion,
		[Token(Token = "0x40018E7")]
		Saru,
		[Token(Token = "0x40018E8")]
		Wani,
		[Token(Token = "0x40018E9")]
		Zou,
		[Token(Token = "0x40018EA")]
		Usagi,
		[Token(Token = "0x40018EB")]
		Panda
	}
	[Token(Token = "0x2000513")]
	public enum EnumToyBlastPuzzleOrnamentCheckType
	{
		[Token(Token = "0x40018ED")]
		None = 0,
		[Token(Token = "0x40018EE")]
		TouchErase = 1,
		[Token(Token = "0x40018EF")]
		Rocket = 2,
		[Token(Token = "0x40018F0")]
		Tnt = 3,
		[Token(Token = "0x40018F1")]
		PuzzleCubeSingle = 4,
		[Token(Token = "0x40018F2")]
		PuzzleCubeDouble = 5,
		[Token(Token = "0x40018F3")]
		Debug = 9999
	}
	[Token(Token = "0x2000514")]
	public static class EnumToyBlastPuzzleOrnamentCheckTypeExtension
	{
		[Token(Token = "0x600188C")]
		[Address(RVA = "0x12313D4", Offset = "0x12313D4", VA = "0x12313D4")]
		public static EnumToyBlastPuzzleOrnamentRequestAnimationType ToDamageEnumToyBlastPuzzleOrnamentRequestAnimationType(this EnumToyBlastPuzzleOrnamentCheckType type)
		{
			return default(EnumToyBlastPuzzleOrnamentRequestAnimationType);
		}
	}
	[Token(Token = "0x2000515")]
	public enum EnumToyBlastPuzzleOrnamentRequestAnimationType
	{
		[Token(Token = "0x40018F5")]
		None,
		[Token(Token = "0x40018F6")]
		Tired,
		[Token(Token = "0x40018F7")]
		MoveStart,
		[Token(Token = "0x40018F8")]
		Moving,
		[Token(Token = "0x40018F9")]
		MoveEnd,
		[Token(Token = "0x40018FA")]
		ShortDamage,
		[Token(Token = "0x40018FB")]
		LongDamage
	}
	[Token(Token = "0x2000516")]
	public enum EnumToyBlastPuzzleOrnamentState
	{
		[Token(Token = "0x40018FD")]
		Normal,
		[Token(Token = "0x40018FE")]
		EraseStart,
		[Token(Token = "0x40018FF")]
		EraseComplete,
		[Token(Token = "0x4001900")]
		Move
	}
	[Token(Token = "0x2000517")]
	public static class EnumToyBlastPuzzleOrnamentStateExtension
	{
		[Token(Token = "0x600188D")]
		[Address(RVA = "0x12313E8", Offset = "0x12313E8", VA = "0x12313E8")]
		public static bool IsCheckEraseCount(this EnumToyBlastPuzzleOrnamentState type)
		{
			return default(bool);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x12313F8", Offset = "0x12313F8", VA = "0x12313F8")]
		public static bool IsCheckDestroyVanish(this EnumToyBlastPuzzleOrnamentState type)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000518")]
	public enum EnumToyBlastPuzzleOrnamentType
	{
		[Token(Token = "0x4001902")]
		None = 0,
		[Token(Token = "0x4001903")]
		ColorCageBlue2X2Saru = 100,
		[Token(Token = "0x4001904")]
		ColorCageGreen2X2Saru = 101,
		[Token(Token = "0x4001905")]
		ColorCagePurple2X2Saru = 102,
		[Token(Token = "0x4001906")]
		ColorCageRed2X2Saru = 103,
		[Token(Token = "0x4001907")]
		ColorCageYellow2X2Saru = 104,
		[Token(Token = "0x4001908")]
		ColorCageOrange2X2Saru = 105,
		[Token(Token = "0x4001909")]
		ColorCageBlue2X2Kaba = 106,
		[Token(Token = "0x400190A")]
		ColorCageGreen2X2Kaba = 107,
		[Token(Token = "0x400190B")]
		ColorCagePurple2X2Kaba = 108,
		[Token(Token = "0x400190C")]
		ColorCageRed2X2Kaba = 109,
		[Token(Token = "0x400190D")]
		ColorCageYellow2X2Kaba = 110,
		[Token(Token = "0x400190E")]
		ColorCageOrange2X2Kaba = 111,
		[Token(Token = "0x400190F")]
		ColorCageBlue2X2Kirin = 112,
		[Token(Token = "0x4001910")]
		ColorCageGreen2X2Kirin = 113,
		[Token(Token = "0x4001911")]
		ColorCagePurple2X2Kirin = 114,
		[Token(Token = "0x4001912")]
		ColorCageRed2X2Kirin = 115,
		[Token(Token = "0x4001913")]
		ColorCageYellow2X2Kirin = 116,
		[Token(Token = "0x4001914")]
		ColorCageOrange2X2Kirin = 117,
		[Token(Token = "0x4001915")]
		ColorCageBlue2X2Lion = 118,
		[Token(Token = "0x4001916")]
		ColorCageGreen2X2Lion = 119,
		[Token(Token = "0x4001917")]
		ColorCagePurple2X2Lion = 120,
		[Token(Token = "0x4001918")]
		ColorCageRed2X2Lion = 121,
		[Token(Token = "0x4001919")]
		ColorCageYellow2X2Lion = 122,
		[Token(Token = "0x400191A")]
		ColorCageOrange2X2Lion = 123,
		[Token(Token = "0x400191B")]
		ColorCageBlue2X2Wani = 124,
		[Token(Token = "0x400191C")]
		ColorCageGreen2X2Wani = 125,
		[Token(Token = "0x400191D")]
		ColorCagePurple2X2Wani = 126,
		[Token(Token = "0x400191E")]
		ColorCageRed2X2Wani = 127,
		[Token(Token = "0x400191F")]
		ColorCageYellow2X2Wani = 128,
		[Token(Token = "0x4001920")]
		ColorCageOrange2X2Wani = 129,
		[Token(Token = "0x4001921")]
		ColorCageBlue2X2Zou = 130,
		[Token(Token = "0x4001922")]
		ColorCageGreen2X2Zou = 131,
		[Token(Token = "0x4001923")]
		ColorCagePurple2X2Zou = 132,
		[Token(Token = "0x4001924")]
		ColorCageRed2X2Zou = 133,
		[Token(Token = "0x4001925")]
		ColorCageYellow2X2Zou = 134,
		[Token(Token = "0x4001926")]
		ColorCageOrange2X2Zou = 135,
		[Token(Token = "0x4001927")]
		ColorCageBlue2X2Usagi = 136,
		[Token(Token = "0x4001928")]
		ColorCageGreen2X2Usagi = 137,
		[Token(Token = "0x4001929")]
		ColorCagePurple2X2Usagi = 138,
		[Token(Token = "0x400192A")]
		ColorCageRed2X2Usagi = 139,
		[Token(Token = "0x400192B")]
		ColorCageYellow2X2Usagi = 140,
		[Token(Token = "0x400192C")]
		ColorCageOrange2X2Usagi = 141,
		[Token(Token = "0x400192D")]
		ColorCageBlue2X2Panda = 142,
		[Token(Token = "0x400192E")]
		ColorCageGreen2X2Panda = 143,
		[Token(Token = "0x400192F")]
		ColorCagePurple2X2Panda = 144,
		[Token(Token = "0x4001930")]
		ColorCageRed2X2Panda = 145,
		[Token(Token = "0x4001931")]
		ColorCageYellow2X2Panda = 146,
		[Token(Token = "0x4001932")]
		ColorCageOrange2X2Panda = 147,
		[Token(Token = "0x4001933")]
		ChainEraseBlock2X2 = 200,
		[Token(Token = "0x4001934")]
		PrincipalRobotBlock2X2 = 300,
		[Token(Token = "0x4001935")]
		ColorCageBlue3X3Saru = 1100,
		[Token(Token = "0x4001936")]
		ColorCageGreen3X3Saru = 1101,
		[Token(Token = "0x4001937")]
		ColorCagePurple3X3Saru = 1102,
		[Token(Token = "0x4001938")]
		ColorCageRed3X3Saru = 1103,
		[Token(Token = "0x4001939")]
		ColorCageYellow3X3Saru = 1104,
		[Token(Token = "0x400193A")]
		ColorCageOrange3X3Saru = 1105,
		[Token(Token = "0x400193B")]
		ColorCageBlue3X3Kaba = 1106,
		[Token(Token = "0x400193C")]
		ColorCageGreen3X3Kaba = 1107,
		[Token(Token = "0x400193D")]
		ColorCagePurple3X3Kaba = 1108,
		[Token(Token = "0x400193E")]
		ColorCageRed3X3Kaba = 1109,
		[Token(Token = "0x400193F")]
		ColorCageYellow3X3Kaba = 1110,
		[Token(Token = "0x4001940")]
		ColorCageOrange3X3Kaba = 1111,
		[Token(Token = "0x4001941")]
		ColorCageBlue3X3Kirin = 1112,
		[Token(Token = "0x4001942")]
		ColorCageGreen3X3Kirin = 1113,
		[Token(Token = "0x4001943")]
		ColorCagePurple3X3Kirin = 1114,
		[Token(Token = "0x4001944")]
		ColorCageRed3X3Kirin = 1115,
		[Token(Token = "0x4001945")]
		ColorCageYellow3X3Kirin = 1116,
		[Token(Token = "0x4001946")]
		ColorCageOrange3X3Kirin = 1117,
		[Token(Token = "0x4001947")]
		ColorCageBlue3X3Lion = 1118,
		[Token(Token = "0x4001948")]
		ColorCageGreen3X3Lion = 1119,
		[Token(Token = "0x4001949")]
		ColorCagePurple3X3Lion = 1120,
		[Token(Token = "0x400194A")]
		ColorCageRed3X3Lion = 1121,
		[Token(Token = "0x400194B")]
		ColorCageYellow3X3Lion = 1122,
		[Token(Token = "0x400194C")]
		ColorCageOrange3X3Lion = 1123,
		[Token(Token = "0x400194D")]
		ColorCageBlue3X3Wani = 1124,
		[Token(Token = "0x400194E")]
		ColorCageGreen3X3Wani = 1125,
		[Token(Token = "0x400194F")]
		ColorCagePurple3X3Wani = 1126,
		[Token(Token = "0x4001950")]
		ColorCageRed3X3Wani = 1127,
		[Token(Token = "0x4001951")]
		ColorCageYellow3X3Wani = 1128,
		[Token(Token = "0x4001952")]
		ColorCageOrange3X3Wani = 1129,
		[Token(Token = "0x4001953")]
		ColorCageBlue3X3Zou = 1130,
		[Token(Token = "0x4001954")]
		ColorCageGreen3X3Zou = 1131,
		[Token(Token = "0x4001955")]
		ColorCagePurple3X3Zou = 1132,
		[Token(Token = "0x4001956")]
		ColorCageRed3X3Zou = 1133,
		[Token(Token = "0x4001957")]
		ColorCageYellow3X3Zou = 1134,
		[Token(Token = "0x4001958")]
		ColorCageOrange3X3Zou = 1135,
		[Token(Token = "0x4001959")]
		ColorCageBlue3X3Usagi = 1136,
		[Token(Token = "0x400195A")]
		ColorCageGreen3X3Usagi = 1137,
		[Token(Token = "0x400195B")]
		ColorCagePurple3X3Usagi = 1138,
		[Token(Token = "0x400195C")]
		ColorCageRed3X3Usagi = 1139,
		[Token(Token = "0x400195D")]
		ColorCageYellow3X3Usagi = 1140,
		[Token(Token = "0x400195E")]
		ColorCageOrange3X3Usagi = 1141,
		[Token(Token = "0x400195F")]
		ColorCageBlue3X3Panda = 1142,
		[Token(Token = "0x4001960")]
		ColorCageGreen3X3Panda = 1143,
		[Token(Token = "0x4001961")]
		ColorCagePurple3X3Panda = 1144,
		[Token(Token = "0x4001962")]
		ColorCageRed3X3Panda = 1145,
		[Token(Token = "0x4001963")]
		ColorCageYellow3X3Panda = 1146,
		[Token(Token = "0x4001964")]
		ColorCageOrange3X3Panda = 1147,
		[Token(Token = "0x4001965")]
		ChainEraseBlock3X3 = 1200,
		[Token(Token = "0x4001966")]
		PrincipalRobotBlock3X3 = 1300
	}
	[Token(Token = "0x2000519")]
	public static class EnumToyBlastPuzzleOrnamentTypeExtension
	{
		[Token(Token = "0x600188F")]
		[Address(RVA = "0x1231404", Offset = "0x1231404", VA = "0x1231404")]
		public static float ToScaleRate(this EnumToyBlastPuzzleOrnamentType type)
		{
			return default(float);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x1231458", Offset = "0x1231458", VA = "0x1231458")]
		public static bool IsDestroyVanish(this EnumToyBlastPuzzleOrnamentType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x1231474", Offset = "0x1231474", VA = "0x1231474")]
		public static bool IsCheckNotifyChainEraseGroup(this EnumToyBlastPuzzleOrnamentType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x12314B8", Offset = "0x12314B8", VA = "0x12314B8")]
		public static bool IsCheckMove(this EnumToyBlastPuzzleOrnamentType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x12314D4", Offset = "0x12314D4", VA = "0x12314D4")]
		public static bool IsCheckDamageAnimation(this EnumToyBlastPuzzleOrnamentType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x1231518", Offset = "0x1231518", VA = "0x1231518")]
		public static bool IsCheckDamageEffect(this EnumToyBlastPuzzleOrnamentType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x1231534", Offset = "0x1231534", VA = "0x1231534")]
		public static bool IsCountGauge(this EnumToyBlastPuzzleOrnamentType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x1231578", Offset = "0x1231578", VA = "0x1231578")]
		public static bool IsColorCage(this EnumToyBlastPuzzleOrnamentType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x123159C", Offset = "0x123159C", VA = "0x123159C")]
		public static bool IsPrincipalRobot(this EnumToyBlastPuzzleOrnamentType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x1231430", Offset = "0x1231430", VA = "0x1231430")]
		public static bool Is3X3Ornament(this EnumToyBlastPuzzleOrnamentType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x12315B8", Offset = "0x12315B8", VA = "0x12315B8")]
		public static EnumToyBlastPuzzlePanelColor ToPanelColor(this EnumToyBlastPuzzleOrnamentType type)
		{
			return default(EnumToyBlastPuzzlePanelColor);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x1231634", Offset = "0x1231634", VA = "0x1231634")]
		public static EnumToyBlastPuzzleOrnamentAnimalType ToAnimalType(this EnumToyBlastPuzzleOrnamentType type)
		{
			return default(EnumToyBlastPuzzleOrnamentAnimalType);
		}
	}
	[Token(Token = "0x200051A")]
	public class ToyBlastPuzzleOrnament : MonoBehaviour
	{
		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToyBlastPuzzleOrnamentDraw _drawScript;

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xE60350", Offset = "0xE60350", VA = "0xE60350")]
		public void Init(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xE603A0", Offset = "0xE603A0", VA = "0xE603A0")]
		public void UpdateDraw(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xE6047C", Offset = "0xE6047C", VA = "0xE6047C")]
		public void PlayEraseAction()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xE604B8", Offset = "0xE604B8", VA = "0xE604B8")]
		public bool IsFinishEraseAction()
		{
			return default(bool);
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xE604F4", Offset = "0xE604F4", VA = "0xE604F4")]
		public bool IsIdleAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xE60530", Offset = "0xE60530", VA = "0xE60530")]
		public ToyBlastPuzzleOrnament()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class ToyBlastPuzzleOrnamentDraw : MonoBehaviour
	{
		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88DE80", Offset = "0x88DE80")]
		[SerializeField]
		private GameObject _modelParentGameObject;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ToyBlastPuzzleOrnamentDrawModel _toyBlastPuzzleOrnamentDrawModel;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ToyBlastPuzzleOrnamentDrawCountTextMeshPro _toyBlastPuzzleOrnamentDrawCountTextMeshPro;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ToyBlastPuzzleOrnamentDrawAnimation _toyBlastPuzzleOrnamentDrawAnimation;

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xE60368", Offset = "0xE60368", VA = "0xE60368")]
		public void Init(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xE603B8", Offset = "0xE603B8", VA = "0xE603B8")]
		public void UpdateDraw(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xE60518", Offset = "0xE60518", VA = "0xE60518")]
		public bool IsIdleAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xE604DC", Offset = "0xE604DC", VA = "0xE604DC")]
		public bool IsFinishEraseAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xE604A0", Offset = "0xE604A0", VA = "0xE604A0")]
		public void PlayEraseAction()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xE60D48", Offset = "0xE60D48", VA = "0xE60D48")]
		public ToyBlastPuzzleOrnamentDraw()
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class ToyBlastPuzzleOrnamentDrawAnimation
	{
		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IToyBlastPuzzleOrnamentPrefabAnimation _iToyBlastPuzzleOrnamentPrefabAnimation;

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xE607F4", Offset = "0xE607F4", VA = "0xE607F4")]
		public void OnUpdateModel(GameObject model)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xE60B18", Offset = "0xE60B18", VA = "0xE60B18")]
		public bool IsIdleAnimation()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xE60BD4", Offset = "0xE60BD4", VA = "0xE60BD4")]
		public bool IsFinishEraseAnimation()
		{
			return default(bool);
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xE60C90", Offset = "0xE60C90", VA = "0xE60C90")]
		public void PlayEraseAction()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xE60658", Offset = "0xE60658", VA = "0xE60658")]
		public void Init()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xE609EC", Offset = "0xE609EC", VA = "0xE609EC")]
		public void UpdateDraw(ToyBlastPuzzleOrnamentInfo ornamentInfo, bool isVisible)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xE60E34", Offset = "0xE60E34", VA = "0xE60E34")]
		private void UpdateAnimation(EnumToyBlastPuzzleOrnamentRequestAnimationType requestAnimationType)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xE60E14", Offset = "0xE60E14", VA = "0xE60E14")]
		public ToyBlastPuzzleOrnamentDrawAnimation()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class ToyBlastPuzzleOrnamentDrawCountTextMeshPro
	{
		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextMeshPro _textMeshPro;

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xE60780", Offset = "0xE60780", VA = "0xE60780")]
		public void OnUpdateModel(GameObject model)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xE609BC", Offset = "0xE609BC", VA = "0xE609BC")]
		public void UpdateDraw(ToyBlastPuzzleOrnamentInfo ornamentInfo, bool isVisible)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xE610DC", Offset = "0xE610DC", VA = "0xE610DC")]
		private void UpdateCountTextMeshPro(int count)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xE61198", Offset = "0xE61198", VA = "0xE61198")]
		private string ConvertTextMeshProString(int count)
		{
			return null;
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xE61418", Offset = "0xE61418", VA = "0xE61418")]
		private string ConvertSpriteAssetName(int value)
		{
			return null;
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xE60E0C", Offset = "0xE60E0C", VA = "0xE60E0C")]
		public ToyBlastPuzzleOrnamentDrawCountTextMeshPro()
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class ToyBlastPuzzleOrnamentDrawModel
	{
		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DECC", Offset = "0x88DECC")]
		private GameObject <CurrentModel>k__BackingField;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject _parentGameObject;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EnumToyBlastPuzzleOrnamentType _currentOrnamentType;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _currentVisible;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IToyBlastPuzzleOrnamentPrefabHpGauge _iToyBlastPuzzleOrnamentPrefabHpGauge;

		[Token(Token = "0x17000233")]
		public GameObject CurrentModel
		{
			[Token(Token = "0x60018B5")]
			[Address(RVA = "0xE614B4", Offset = "0xE614B4", VA = "0xE614B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8969F8", Offset = "0x8969F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018B6")]
			[Address(RVA = "0xE614BC", Offset = "0xE614BC", VA = "0xE614BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896A08", Offset = "0x896A08")]
			private set
			{
			}
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xE608E8", Offset = "0xE608E8", VA = "0xE608E8")]
		public void UpdateHpGauge(ToyBlastPuzzleOrnamentInfo ornamentInfo, bool isVisible)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xE60538", Offset = "0xE60538", VA = "0xE60538")]
		public void Init(ToyBlastPuzzleOrnamentInfo ornamentInfo, GameObject parentGameObject)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xE60724", Offset = "0xE60724", VA = "0xE60724")]
		public bool UpdateDraw(ToyBlastPuzzleOrnamentInfo ornamentInfo, bool isVisible)
		{
			return default(bool);
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xE614E0", Offset = "0xE614E0", VA = "0xE614E0")]
		private bool UpdateDrawModel()
		{
			return default(bool);
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xE60E04", Offset = "0xE60E04", VA = "0xE60E04")]
		public ToyBlastPuzzleOrnamentDrawModel()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class ToyBlastPuzzleOrnamentInfo
	{
		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ToyBlastPuzzleOrnamentInfoCommon _infoCommon;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ToyBlastPuzzleOrnamentInfoChainErase _infoChainErase;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ToyBlastPuzzleOrnamentInfoMove _infoMove;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ToyBlastPuzzleOrnamentInfoAnimation _infoAnimation;

		[Token(Token = "0x17000234")]
		public List<int> CurrentIndexList
		{
			[Token(Token = "0x60018BE")]
			[Address(RVA = "0xE61D58", Offset = "0xE61D58", VA = "0xE61D58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		public EnumToyBlastPuzzleOrnamentState EnumToyBlastPuzzleOrnamentState
		{
			[Token(Token = "0x60018BF")]
			[Address(RVA = "0xE61D74", Offset = "0xE61D74", VA = "0xE61D74")]
			get
			{
				return default(EnumToyBlastPuzzleOrnamentState);
			}
		}

		[Token(Token = "0x17000236")]
		public EnumToyBlastPuzzleOrnamentType EnumToyBlastPuzzleOrnamentType
		{
			[Token(Token = "0x60018C0")]
			[Address(RVA = "0xE614C4", Offset = "0xE614C4", VA = "0xE614C4")]
			get
			{
				return default(EnumToyBlastPuzzleOrnamentType);
			}
		}

		[Token(Token = "0x17000237")]
		public Vector3 CurrentLocalPos
		{
			[Token(Token = "0x60018C1")]
			[Address(RVA = "0xE61D90", Offset = "0xE61D90", VA = "0xE61D90")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000238")]
		public int CurrentEraseCount
		{
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xE610C0", Offset = "0xE610C0", VA = "0xE610C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000239")]
		public int MaxEraseCount
		{
			[Token(Token = "0x60018C3")]
			[Address(RVA = "0xE61DB0", Offset = "0xE61DB0", VA = "0xE61DB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023A")]
		public List<int> ChainTargetIndexList
		{
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0xE621DC", Offset = "0xE621DC", VA = "0xE621DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		public List<EnumToyBlastPuzzleOrnamentRequestAnimationType> CurrentRequestAnimationList
		{
			[Token(Token = "0x60018CE")]
			[Address(RVA = "0xE60E1C", Offset = "0xE60E1C", VA = "0xE60E1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		public bool IsTired
		{
			[Token(Token = "0x60018CF")]
			[Address(RVA = "0xE629C0", Offset = "0xE629C0", VA = "0xE629C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xE619BC", Offset = "0xE619BC", VA = "0xE619BC")]
		public ToyBlastPuzzleOrnamentInfo(List<int> indexList, EnumToyBlastPuzzleOrnamentType type, int eraseCount)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xE61D50", Offset = "0xE61D50", VA = "0xE61D50")]
		public ToyBlastPuzzleOrnamentInfoMove GetToyBlastPuzzleOrnamentInfoMove()
		{
			return null;
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xE6070C", Offset = "0xE6070C", VA = "0xE6070C")]
		public bool IsVisibleOrnament()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xE61E18", Offset = "0xE61E18", VA = "0xE61E18")]
		public bool IsOrnamentAreaIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xE61E94", Offset = "0xE61E94", VA = "0xE61E94")]
		public bool AddEraseCount(int count)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xE61EFC", Offset = "0xE61EFC", VA = "0xE61EFC")]
		public void SetCurrentLocalPos(Vector3 pos)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xE61F1C", Offset = "0xE61F1C", VA = "0xE61F1C")]
		public void SetEraseCompleteState()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xE61F3C", Offset = "0xE61F3C", VA = "0xE61F3C")]
		public List<int> CalcChainDamageIndexList(List<int> indexList)
		{
			return null;
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xE621F4", Offset = "0xE621F4", VA = "0xE621F4")]
		public bool IsCheckMoveEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xE6227C", Offset = "0xE6227C", VA = "0xE6227C")]
		public void SetMoveIndex(int index)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xE62980", Offset = "0xE62980", VA = "0xE62980")]
		public void MoveComplete()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xE629E0", Offset = "0xE629E0", VA = "0xE629E0")]
		public void AddRequestAnimationType(EnumToyBlastPuzzleOrnamentRequestAnimationType type)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xE62A54", Offset = "0xE62A54", VA = "0xE62A54")]
		public void ClearRequestAnimationTypeList()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xE62AB8", Offset = "0xE62AB8", VA = "0xE62AB8")]
		public void EnableTired()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class ToyBlastPuzzleOrnamentInfoAnimation
	{
		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DEDC", Offset = "0x88DEDC")]
		private readonly List<EnumToyBlastPuzzleOrnamentRequestAnimationType> <RequestAnimationTypeList>k__BackingField;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DEEC", Offset = "0x88DEEC")]
		private bool <IsTired>k__BackingField;

		[Token(Token = "0x1700023D")]
		public List<EnumToyBlastPuzzleOrnamentRequestAnimationType> RequestAnimationTypeList
		{
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xE62AD8", Offset = "0xE62AD8", VA = "0xE62AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896A18", Offset = "0x896A18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		public bool IsTired
		{
			[Token(Token = "0x60018D6")]
			[Address(RVA = "0xE62AE0", Offset = "0xE62AE0", VA = "0xE62AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896A28", Offset = "0x896A28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0xE62AE8", Offset = "0xE62AE8", VA = "0xE62AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896A38", Offset = "0x896A38")]
			private set
			{
			}
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xE629F0", Offset = "0xE629F0", VA = "0xE629F0")]
		public void AddRequestAnimationType(EnumToyBlastPuzzleOrnamentRequestAnimationType type)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xE62A64", Offset = "0xE62A64", VA = "0xE62A64")]
		public void ClearRequestAnimationTypeList()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xE62ACC", Offset = "0xE62ACC", VA = "0xE62ACC")]
		public void EnableTired()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xE61CD8", Offset = "0xE61CD8", VA = "0xE61CD8")]
		public ToyBlastPuzzleOrnamentInfoAnimation()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public class ToyBlastPuzzleOrnamentInfoChainErase
	{
		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881EBC", Offset = "0x881EBC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400197B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> indexList;

			[Token(Token = "0x60018DE")]
			[Address(RVA = "0xF96D1C", Offset = "0xF96D1C", VA = "0xF96D1C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60018DF")]
			[Address(RVA = "0xF96D24", Offset = "0xF96D24", VA = "0xF96D24")]
			internal bool <CalcChainDamageIndexList>b__0(KeyValuePair<int, List<int>> x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881ECC", Offset = "0x881ECC")]
		private sealed class <>c
		{
			[Token(Token = "0x400197C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400197D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<int, List<int>>, int> <>9__3_1;

			[Token(Token = "0x400197E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<int, List<int>>, IEnumerable<int>> <>9__4_0;

			[Token(Token = "0x60018E1")]
			[Address(RVA = "0xF96C94", Offset = "0xF96C94", VA = "0xF96C94")]
			public <>c()
			{
			}

			[Token(Token = "0x60018E2")]
			[Address(RVA = "0xF96C9C", Offset = "0xF96C9C", VA = "0xF96C9C")]
			internal int <CalcChainDamageIndexList>b__3_1(KeyValuePair<int, List<int>> x)
			{
				return default(int);
			}

			[Token(Token = "0x60018E3")]
			[Address(RVA = "0xF96CDC", Offset = "0xF96CDC", VA = "0xF96CDC")]
			internal IEnumerable<int> <UpdateChainTargetIndex>b__4_0(KeyValuePair<int, List<int>> x)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881EDC", Offset = "0x881EDC")]
		private struct <>c__DisplayClass4_0
		{
			[Token(Token = "0x400197F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<int> indexList;
		}

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> ChainTargetIndexList;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<int, List<int>> _chainBaseTargetIndexListDictionary;

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xE61BC0", Offset = "0xE61BC0", VA = "0xE61BC0")]
		public ToyBlastPuzzleOrnamentInfoChainErase(List<int> indexList)
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xE61F4C", Offset = "0xE61F4C", VA = "0xE61F4C")]
		public List<int> CalcChainDamageIndexList(List<int> indexList)
		{
			return null;
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xE62518", Offset = "0xE62518", VA = "0xE62518")]
		public void UpdateChainTargetIndex(List<int> indexList)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xE62AF4", Offset = "0xE62AF4", VA = "0xE62AF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896A48", Offset = "0x896A48")]
		internal static void <UpdateChainTargetIndex>g__AddChainTargetIndex|4_1(int index, ref List<int> chainTargetIndexListRef, ref <>c__DisplayClass4_0 P_2)
		{
		}
	}
	[Token(Token = "0x2000525")]
	public class ToyBlastPuzzleOrnamentInfoCommon
	{
		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> CurrentIndexList;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnumToyBlastPuzzleOrnamentState EnumToyBlastPuzzleOrnamentState;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DEFC", Offset = "0x88DEFC")]
		private readonly EnumToyBlastPuzzleOrnamentType <EnumToyBlastPuzzleOrnamentType>k__BackingField;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 CurrentLocalPos;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int CurrentEraseCount;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DF0C", Offset = "0x88DF0C")]
		private readonly int <MaxEraseCount>k__BackingField;

		[Token(Token = "0x1700023F")]
		public EnumToyBlastPuzzleOrnamentType EnumToyBlastPuzzleOrnamentType
		{
			[Token(Token = "0x60018E6")]
			[Address(RVA = "0xE62BB8", Offset = "0xE62BB8", VA = "0xE62BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896A58", Offset = "0x896A58")]
			get
			{
				return default(EnumToyBlastPuzzleOrnamentType);
			}
		}

		[Token(Token = "0x17000240")]
		public int MaxEraseCount
		{
			[Token(Token = "0x60018E7")]
			[Address(RVA = "0xE62BC0", Offset = "0xE62BC0", VA = "0xE62BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896A68", Offset = "0x896A68")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xE61B2C", Offset = "0xE61B2C", VA = "0xE61B2C")]
		public ToyBlastPuzzleOrnamentInfoCommon(List<int> indexList, EnumToyBlastPuzzleOrnamentType type, int eraseCount)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xE61E30", Offset = "0xE61E30", VA = "0xE61E30")]
		public bool IsOrnamentAreaIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xE61ED0", Offset = "0xE61ED0", VA = "0xE61ED0")]
		public bool AddEraseCount(int count)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xE61DCC", Offset = "0xE61DCC", VA = "0xE61DCC")]
		public bool IsVisibleOrnament()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000526")]
	public class ToyBlastPuzzleOrnamentInfoMove
	{
		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 MoveStartLocalPos;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 MoveTargetLocalPos;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MoveStateValue;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MoveDeltaTime;

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xE61C90", Offset = "0xE61C90", VA = "0xE61C90")]
		public ToyBlastPuzzleOrnamentInfoMove(Vector3 currentLocalPos)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xE623E0", Offset = "0xE623E0", VA = "0xE623E0")]
		public List<int> CalcMoveIndexList(int index, int sizeValue)
		{
			return null;
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xE62240", Offset = "0xE62240", VA = "0xE62240")]
		public bool IsCheckMoveEnable(EnumToyBlastPuzzleOrnamentType type, EnumToyBlastPuzzleOrnamentState state)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000527")]
	public class ToyBlastPuzzleOrnamentNotifyCheckInfo
	{
		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<int> _targetIndexList;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88DF1C", Offset = "0x88DF1C")]
		private readonly EnumToyBlastPuzzleOrnamentCheckType <EnumToyBlastPuzzleOrnamentCheckType>k__BackingField;

		[Token(Token = "0x17000241")]
		public List<int> TargetIndexList
		{
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0xE62C04", Offset = "0xE62C04", VA = "0xE62C04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		public EnumToyBlastPuzzleOrnamentCheckType EnumToyBlastPuzzleOrnamentCheckType
		{
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0xE62C0C", Offset = "0xE62C0C", VA = "0xE62C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896A78", Offset = "0x896A78")]
			get
			{
				return default(EnumToyBlastPuzzleOrnamentCheckType);
			}
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xE62BC8", Offset = "0xE62BC8", VA = "0xE62BC8")]
		public ToyBlastPuzzleOrnamentNotifyCheckInfo(EnumToyBlastPuzzleOrnamentCheckType type, List<int> indexList)
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Ornament.Model
{
	[Token(Token = "0x2000528")]
	public interface IToyBlastPuzzleOrnamentPrefabAnimation
	{
		[Token(Token = "0x60018F0")]
		void InitPrefabAnimation();

		[Token(Token = "0x60018F1")]
		bool IsIdle();

		[Token(Token = "0x60018F2")]
		bool IsFinish();

		[Token(Token = "0x60018F3")]
		void PlayEraseAction();

		[Token(Token = "0x60018F4")]
		void PlayTiredAction();

		[Token(Token = "0x60018F5")]
		void PlayMoveStartAction();

		[Token(Token = "0x60018F6")]
		void PlayMovingAction();

		[Token(Token = "0x60018F7")]
		void PlayMoveEndAction();

		[Token(Token = "0x60018F8")]
		void PlayShortDamageAction();

		[Token(Token = "0x60018F9")]
		void PlayLongDamageAction();
	}
	[Token(Token = "0x2000529")]
	public interface IToyBlastPuzzleOrnamentPrefabHpGauge
	{
		[Token(Token = "0x60018FA")]
		void InitHpGauge();

		[Token(Token = "0x60018FB")]
		void UpdateHpGauge(ToyBlastPuzzleOrnamentInfo ornamentInfo);

		[Token(Token = "0x60018FC")]
		void HideHpGauge();
	}
	[Token(Token = "0x200052A")]
	public interface IToyBlastPuzzleOrnamentPrefabInit
	{
		[Token(Token = "0x60018FD")]
		void Init(EnumToyBlastPuzzleOrnamentType type);
	}
	[Token(Token = "0x200052B")]
	public class ToyBlastPuzzleOrnamentPrefabColorCageAnimal : MonoBehaviour, IToyBlastPuzzleOrnamentPrefabInit, IToyBlastPuzzleOrnamentPrefabAnimation
	{
		[Serializable]
		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881EEC", Offset = "0x881EEC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GameObject, bool> <>9__21_0;

			[Token(Token = "0x6001912")]
			[Address(RVA = "0xF96E40", Offset = "0xF96E40", VA = "0xF96E40")]
			public <>c()
			{
			}

			[Token(Token = "0x6001913")]
			[Address(RVA = "0xF96E48", Offset = "0xF96E48", VA = "0xF96E48")]
			internal bool <CreateColorCagePrefab>b__21_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isEraseActionComplete;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _cageParentGameObject;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _emptyCageParentGameObject;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _animalParentGameObject;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<GameObject> _cagePrefabList;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<GameObject> _emptyCagePrefabList;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<GameObject> _animalPrefabList;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EnumToyBlastPuzzleOrnamentType ornamentType;

		[Token(Token = "0x17000243")]
		private Vector3 EffectPos
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0xE62C3C", Offset = "0xE62C3C", VA = "0xE62C3C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xE62C14", Offset = "0xE62C14", VA = "0xE62C14", Slot = "6")]
		public bool IsIdle()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xE62C1C", Offset = "0xE62C1C", VA = "0xE62C1C", Slot = "9")]
		public void PlayTiredAction()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xE62C20", Offset = "0xE62C20", VA = "0xE62C20", Slot = "10")]
		public void PlayMoveStartAction()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xE62C24", Offset = "0xE62C24", VA = "0xE62C24", Slot = "11")]
		public void PlayMovingAction()
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xE62C28", Offset = "0xE62C28", VA = "0xE62C28", Slot = "12")]
		public void PlayMoveEndAction()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xE62C2C", Offset = "0xE62C2C", VA = "0xE62C2C", Slot = "13")]
		public void PlayShortDamageAction()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xE62C30", Offset = "0xE62C30", VA = "0xE62C30", Slot = "14")]
		public void PlayLongDamageAction()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xE62C34", Offset = "0xE62C34", VA = "0xE62C34", Slot = "7")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xE62D00", Offset = "0xE62D00", VA = "0xE62D00", Slot = "8")]
		public void PlayEraseAction()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xE62E78", Offset = "0xE62E78", VA = "0xE62E78", Slot = "4")]
		public void Init(EnumToyBlastPuzzleOrnamentType type)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xE63334", Offset = "0xE63334", VA = "0xE63334", Slot = "5")]
		public void InitPrefabAnimation()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xE62EA8", Offset = "0xE62EA8", VA = "0xE62EA8")]
		private void CreateColorCagePrefab()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xE630DC", Offset = "0xE630DC", VA = "0xE630DC")]
		private void CreateEmptyColorCagePrefab()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xE631C8", Offset = "0xE631C8", VA = "0xE631C8")]
		private void CreateAnimalPrefab()
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xE638B0", Offset = "0xE638B0", VA = "0xE638B0")]
		public ToyBlastPuzzleOrnamentPrefabColorCageAnimal()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xE63394", Offset = "0xE63394", VA = "0xE63394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896A88", Offset = "0x896A88")]
		private GameObject <CreateColorCagePrefab>g__GetColorCagePrefab|21_1()
		{
			return null;
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xE634F4", Offset = "0xE634F4", VA = "0xE634F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896A98", Offset = "0x896A98")]
		private GameObject <CreateEmptyColorCagePrefab>g__GetEmptyColorCagePrefab|22_0()
		{
			return null;
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xE63654", Offset = "0xE63654", VA = "0xE63654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896AA8", Offset = "0x896AA8")]
		private (GameObject, float) <CreateAnimalPrefab>g__GetAnimalPrefabAndScale|23_0()
		{
			return default((GameObject, float));
		}
	}
	[Token(Token = "0x200052D")]
	public class ToyBlastPuzzleOrnamentPrefabCuckoo : MonoBehaviour, IToyBlastPuzzleOrnamentPrefabAnimation, IToyBlastPuzzleOrnamentPrefabHpGauge
	{
		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _openCuckooEffectPrefabGameObject;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ToyBlastPuzzleOrnamentPrefabPartsHpGauge _hpGauge;

		[Token(Token = "0x17000244")]
		private Vector3 EffectPos
		{
			[Token(Token = "0x600191B")]
			[Address(RVA = "0xE63CB8", Offset = "0xE63CB8", VA = "0xE63CB8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xE63960", Offset = "0xE63960", VA = "0xE63960", Slot = "5")]
		public bool IsIdle()
		{
			return default(bool);
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xE639FC", Offset = "0xE639FC", VA = "0xE639FC", Slot = "6")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xE63A98", Offset = "0xE63A98", VA = "0xE63A98", Slot = "15")]
		public void UpdateHpGauge(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xE63B9C", Offset = "0xE63B9C", VA = "0xE63B9C", Slot = "16")]
		public void HideHpGauge()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xE63BCC", Offset = "0xE63BCC", VA = "0xE63BCC")]
		private void ShowHpGauge()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xE63BFC", Offset = "0xE63BFC", VA = "0xE63BFC", Slot = "4")]
		public void InitPrefabAnimation()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xE63C2C", Offset = "0xE63C2C", VA = "0xE63C2C", Slot = "14")]
		public void InitHpGauge()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xE63D7C", Offset = "0xE63D7C", VA = "0xE63D7C", Slot = "7")]
		public void PlayEraseAction()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xE63EB8", Offset = "0xE63EB8", VA = "0xE63EB8", Slot = "8")]
		public void PlayTiredAction()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xE63EBC", Offset = "0xE63EBC", VA = "0xE63EBC", Slot = "9")]
		public void PlayMoveStartAction()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xE63EC0", Offset = "0xE63EC0", VA = "0xE63EC0", Slot = "10")]
		public void PlayMovingAction()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xE63EC4", Offset = "0xE63EC4", VA = "0xE63EC4", Slot = "11")]
		public void PlayMoveEndAction()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xE63EC8", Offset = "0xE63EC8", VA = "0xE63EC8", Slot = "12")]
		public void PlayShortDamageAction()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xE63FA0", Offset = "0xE63FA0", VA = "0xE63FA0", Slot = "13")]
		public void PlayLongDamageAction()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xE64060", Offset = "0xE64060", VA = "0xE64060")]
		public ToyBlastPuzzleOrnamentPrefabCuckoo()
		{
		}
	}
	[Token(Token = "0x200052E")]
	public class ToyBlastPuzzleOrnamentPrefabPrincipalRobot : MonoBehaviour, IToyBlastPuzzleOrnamentPrefabAnimation, IToyBlastPuzzleOrnamentPrefabHpGauge
	{
		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToyBlastPuzzleOrnamentPrefabPartsHpGauge _hpGauge;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88DFDC", Offset = "0x88DFDC")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _moveStartAudioClip;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _movingAudioClip;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _moveEndAudioClip;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _damageAudioClip;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _explodeAudioClip;

		[Token(Token = "0x17000245")]
		private Vector3 EffectPos
		{
			[Token(Token = "0x600192D")]
			[Address(RVA = "0xE646C4", Offset = "0xE646C4", VA = "0xE646C4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xE64444", Offset = "0xE64444", VA = "0xE64444", Slot = "5")]
		public bool IsIdle()
		{
			return default(bool);
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xE644E0", Offset = "0xE644E0", VA = "0xE644E0", Slot = "6")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xE645C0", Offset = "0xE645C0", VA = "0xE645C0", Slot = "15")]
		public void UpdateHpGauge(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xE645D0", Offset = "0xE645D0", VA = "0xE645D0", Slot = "16")]
		public void HideHpGauge()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xE64600", Offset = "0xE64600", VA = "0xE64600")]
		private void ShowHpGauge()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xE64630", Offset = "0xE64630", VA = "0xE64630")]
		public void PlayExplodeSe()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xE6463C", Offset = "0xE6463C", VA = "0xE6463C")]
		private void PlayAudioClip(AudioClip audioClip, bool isLoop)
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xE64690", Offset = "0xE64690", VA = "0xE64690", Slot = "4")]
		public void InitPrefabAnimation()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xE64694", Offset = "0xE64694", VA = "0xE64694", Slot = "14")]
		public void InitHpGauge()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xE64788", Offset = "0xE64788", VA = "0xE64788", Slot = "7")]
		public void PlayEraseAction()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xE64834", Offset = "0xE64834", VA = "0xE64834", Slot = "8")]
		public void PlayTiredAction()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xE64890", Offset = "0xE64890", VA = "0xE64890", Slot = "9")]
		public void PlayMoveStartAction()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xE648F8", Offset = "0xE648F8", VA = "0xE648F8", Slot = "10")]
		public void PlayMovingAction()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xE64904", Offset = "0xE64904", VA = "0xE64904", Slot = "11")]
		public void PlayMoveEndAction()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xE64910", Offset = "0xE64910", VA = "0xE64910", Slot = "12")]
		public void PlayShortDamageAction()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xE6498C", Offset = "0xE6498C", VA = "0xE6498C", Slot = "13")]
		public void PlayLongDamageAction()
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xE64A08", Offset = "0xE64A08", VA = "0xE64A08")]
		public ToyBlastPuzzleOrnamentPrefabPrincipalRobot()
		{
		}
	}
	[Token(Token = "0x200052F")]
	public class ToyBlastPuzzleOrnamentPrefabPrincipalRobotAnimationEvent : MonoBehaviour
	{
		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToyBlastPuzzleOrnamentPrefabPrincipalRobot _toyBlastPuzzleOrnamentPrefabPrincipalRobot;

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xE64A10", Offset = "0xE64A10", VA = "0xE64A10")]
		public void PlayExplodeSe()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xE64A28", Offset = "0xE64A28", VA = "0xE64A28")]
		public ToyBlastPuzzleOrnamentPrefabPrincipalRobotAnimationEvent()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Ornament.Model.HpGauge
{
	[Token(Token = "0x2000530")]
	public class ToyBlastPuzzleOrnamentPrefabPartsHpGauge : MonoBehaviour
	{
		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88E088", Offset = "0x88E088")]
		[SerializeField]
		private CanvasGroup _barFrontCanvasGroup;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _barFrontFlashActionTime;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88E0E4", Offset = "0x88E0E4")]
		[SerializeField]
		private RectTransform _barRectTransform;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _barChangeRatePerFlame;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88E140", Offset = "0x88E140")]
		private RectTransform _barBackRectTransform;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _backBarChangeRatePerFlame;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ToyBlastPuzzleOrnamentPrefabPartsHpGaugeFlashAction _flashActionScript;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ToyBlastPuzzleOrnamentPrefabPartsHpGaugeUpdateChange _frontGaugeScript;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ToyBlastPuzzleOrnamentPrefabPartsHpGaugeUpdateChange _backGaugeScript;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _currentCount;

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xE63C5C", Offset = "0xE63C5C", VA = "0xE63C5C")]
		public void Init()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xE63F88", Offset = "0xE63F88", VA = "0xE63F88")]
		public void DamageAction()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xE63AA8", Offset = "0xE63AA8", VA = "0xE63AA8")]
		public void UpdateHpGauge(ToyBlastPuzzleOrnamentInfo ornamentInfo)
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xE64348", Offset = "0xE64348", VA = "0xE64348")]
		public ToyBlastPuzzleOrnamentPrefabPartsHpGauge()
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class ToyBlastPuzzleOrnamentPrefabPartsHpGaugeFlashAction
	{
		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _alphaMin;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _alphaMax;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _actionTime;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Sequence _seq;

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xE64068", Offset = "0xE64068", VA = "0xE64068")]
		public void Init(CanvasGroup canvasGroup, float time)
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xE64284", Offset = "0xE64284", VA = "0xE64284")]
		public bool IsPlayAction()
		{
			return default(bool);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xE6418C", Offset = "0xE6418C", VA = "0xE6418C")]
		public void PlayAction()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xE64428", Offset = "0xE64428", VA = "0xE64428")]
		public ToyBlastPuzzleOrnamentPrefabPartsHpGaugeFlashAction()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public class ToyBlastPuzzleOrnamentPrefabPartsHpGaugeUpdateChange
	{
		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RectTransform _gaugeRectTransform;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _changeRatePerFlame;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector2 _defaultSizeDelta;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _defaultGaugeWidth;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _currentGaugeRate;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _targetGaugeRate;

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xE64090", Offset = "0xE64090", VA = "0xE64090")]
		public void Init(RectTransform rectTransform, float rate)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xE64298", Offset = "0xE64298", VA = "0xE64298")]
		public void SetTargetGaugeRate(float rate)
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xE642C4", Offset = "0xE642C4", VA = "0xE642C4")]
		public void UpdateGauge()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xE6443C", Offset = "0xE6443C", VA = "0xE6443C")]
		public ToyBlastPuzzleOrnamentPrefabPartsHpGaugeUpdateChange()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Info
{
	[Token(Token = "0x2000533")]
	public enum EnumToyBlastPuzzleMainState
	{
		[Token(Token = "0x40019B8")]
		None,
		[Token(Token = "0x40019B9")]
		Init,
		[Token(Token = "0x40019BA")]
		PlayStartProduction,
		[Token(Token = "0x40019BB")]
		WaitStartProduction,
		[Token(Token = "0x40019BC")]
		PlayPuzzle,
		[Token(Token = "0x40019BD")]
		PrepareEndProduction,
		[Token(Token = "0x40019BE")]
		PlayEndProduction,
		[Token(Token = "0x40019BF")]
		WaitEndProduction,
		[Token(Token = "0x40019C0")]
		CompleteEndProduction,
		[Token(Token = "0x40019C1")]
		Finish
	}
	[Token(Token = "0x2000534")]
	public static class EnumToyBlastPuzzleStateTypeExtension
	{
		[Token(Token = "0x6001944")]
		[Address(RVA = "0x1231750", Offset = "0x1231750", VA = "0x1231750")]
		public static bool IsOperatePuzzleEnable(this EnumToyBlastPuzzleMainState type)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000535")]
	public class ToyBlastPuzzleChangePanelInfo
	{
		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E19C", Offset = "0x88E19C")]
		private readonly ToyBlastPuzzlePanelInfo <PuzzlePanelInfo>k__BackingField;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E1AC", Offset = "0x88E1AC")]
		private readonly EnumToyBlastPuzzleChangePanelReasonType <ChangePanelReasonType>k__BackingField;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E1BC", Offset = "0x88E1BC")]
		private readonly EnumToyBlastPuzzlePanelType <ChangePanelType>k__BackingField;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E1CC", Offset = "0x88E1CC")]
		private readonly EnumToyBlastPuzzlePanelColor <ChangePanelColor>k__BackingField;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E1DC", Offset = "0x88E1DC")]
		private readonly bool <IsPlayEffect>k__BackingField;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnumToyBlastPuzzlePanelType PreChangePanelType;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public EnumToyBlastPuzzlePanelColor PreChangePanelColor;

		[Token(Token = "0x17000246")]
		public ToyBlastPuzzlePanelInfo PuzzlePanelInfo
		{
			[Token(Token = "0x6001946")]
			[Address(RVA = "0xFA9AF0", Offset = "0xFA9AF0", VA = "0xFA9AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896AC8", Offset = "0x896AC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		public EnumToyBlastPuzzleChangePanelReasonType ChangePanelReasonType
		{
			[Token(Token = "0x6001947")]
			[Address(RVA = "0xFA9AF8", Offset = "0xFA9AF8", VA = "0xFA9AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896AD8", Offset = "0x896AD8")]
			get
			{
				return default(EnumToyBlastPuzzleChangePanelReasonType);
			}
		}

		[Token(Token = "0x17000248")]
		public EnumToyBlastPuzzlePanelType ChangePanelType
		{
			[Token(Token = "0x6001948")]
			[Address(RVA = "0xFA9B00", Offset = "0xFA9B00", VA = "0xFA9B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896AE8", Offset = "0x896AE8")]
			get
			{
				return default(EnumToyBlastPuzzlePanelType);
			}
		}

		[Token(Token = "0x17000249")]
		public EnumToyBlastPuzzlePanelColor ChangePanelColor
		{
			[Token(Token = "0x6001949")]
			[Address(RVA = "0xFA9B08", Offset = "0xFA9B08", VA = "0xFA9B08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896AF8", Offset = "0x896AF8")]
			get
			{
				return default(EnumToyBlastPuzzlePanelColor);
			}
		}

		[Token(Token = "0x1700024A")]
		public bool IsPlayEffect
		{
			[Token(Token = "0x600194A")]
			[Address(RVA = "0xFA9B10", Offset = "0xFA9B10", VA = "0xFA9B10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896B08", Offset = "0x896B08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xFA9A94", Offset = "0xFA9A94", VA = "0xFA9A94")]
		public ToyBlastPuzzleChangePanelInfo(ToyBlastPuzzlePanelInfo puzzlePanelInfo, EnumToyBlastPuzzleChangePanelReasonType changePanelReasonType, EnumToyBlastPuzzlePanelType changePanelType, EnumToyBlastPuzzlePanelColor changePanelColor, bool isPlayEffect = true)
		{
		}
	}
	[Token(Token = "0x2000536")]
	public static class ToyBlastPuzzleConstants
	{
		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _effectLayerValue;

		[Token(Token = "0x40019CA")]
		public const int InvalidIndex = -1;

		[Token(Token = "0x40019CB")]
		public const int BoardMaxRawDefault = 11;

		[Token(Token = "0x40019CC")]
		public const int BoardMaxLineDefault = 8;

		[Token(Token = "0x40019CD")]
		public const int EraseMatchingPanelMinCount = 2;

		[Token(Token = "0x40019CE")]
		public const int StageNormaInfoMax = 4;

		[Token(Token = "0x40019CF")]
		public const float PanelMoveAddAccel = 3f;

		[Token(Token = "0x40019D0")]
		public const float PanelMoveMaxSpeed = 15f;

		[Token(Token = "0x40019D1")]
		public const float CreateNewPanelPositionOffsetY = 3f;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float SelectScaleRate;

		[Token(Token = "0x1700024B")]
		public static int EffectLayerValue
		{
			[Token(Token = "0x600194B")]
			[Address(RVA = "0xFA9B18", Offset = "0xFA9B18", VA = "0xFA9B18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700024C")]
		public static float ToyBlastBoardYPositionOffset
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0xFA9BF0", Offset = "0xFA9BF0", VA = "0xFA9BF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024D")]
		public static float ToyBlastPuzzleTilePanelScaleRate
		{
			[Token(Token = "0x600194D")]
			[Address(RVA = "0xFA9BF8", Offset = "0xFA9BF8", VA = "0xFA9BF8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024E")]
		public static float ToyBlastBoardPanelAddAccelOffset
		{
			[Token(Token = "0x600194E")]
			[Address(RVA = "0xFA9C00", Offset = "0xFA9C00", VA = "0xFA9C00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024F")]
		public static float ToyBlastBoardPanelMaxSpeedOffset
		{
			[Token(Token = "0x600194F")]
			[Address(RVA = "0xFA9C08", Offset = "0xFA9C08", VA = "0xFA9C08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000250")]
		public static int ToyBlastPuzzleOrnamentRocketDamage
		{
			[Token(Token = "0x6001950")]
			[Address(RVA = "0xFA9C10", Offset = "0xFA9C10", VA = "0xFA9C10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000251")]
		public static int ToyBlastPuzzleOrnamentTntDamage
		{
			[Token(Token = "0x6001951")]
			[Address(RVA = "0xFA9C18", Offset = "0xFA9C18", VA = "0xFA9C18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000252")]
		public static int ToyBlastPuzzleOrnamentPuzzleCubeDamage
		{
			[Token(Token = "0x6001952")]
			[Address(RVA = "0xFA9C20", Offset = "0xFA9C20", VA = "0xFA9C20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000253")]
		public static int ToyBlastPuzzleOrnamentDebugDamage
		{
			[Token(Token = "0x6001953")]
			[Address(RVA = "0xFA9C28", Offset = "0xFA9C28", VA = "0xFA9C28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000254")]
		public static int ToyBlastTargetBlastCountMax
		{
			[Token(Token = "0x6001954")]
			[Address(RVA = "0xFA9C30", Offset = "0xFA9C30", VA = "0xFA9C30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000255")]
		public static int ToyBlastPrincipalRobotTiredHpPercent
		{
			[Token(Token = "0x6001955")]
			[Address(RVA = "0xFA9C38", Offset = "0xFA9C38", VA = "0xFA9C38")]
			get
			{
				return default(int);
			}
		}
	}
	[Token(Token = "0x2000537")]
	public readonly struct ToyBlastPuzzleErasePanelInfo
	{
		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E1EC", Offset = "0x88E1EC")]
		private readonly ToyBlastPuzzlePanelInfo <PuzzlePanelInfo>k__BackingField;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E1FC", Offset = "0x88E1FC")]
		private readonly EnumToyBlastPuzzleErasePanelReasonType <ErasePanelReasonType>k__BackingField;

		[Token(Token = "0x17000256")]
		public ToyBlastPuzzlePanelInfo PuzzlePanelInfo
		{
			[Token(Token = "0x6001958")]
			[Address(RVA = "0xF780F4", Offset = "0xF780F4", VA = "0xF780F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896B18", Offset = "0x896B18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public EnumToyBlastPuzzleErasePanelReasonType ErasePanelReasonType
		{
			[Token(Token = "0x6001959")]
			[Address(RVA = "0xF780FC", Offset = "0xF780FC", VA = "0xF780FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896B28", Offset = "0x896B28")]
			get
			{
				return default(EnumToyBlastPuzzleErasePanelReasonType);
			}
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xF780E8", Offset = "0xF780E8", VA = "0xF780E8")]
		public ToyBlastPuzzleErasePanelInfo(ToyBlastPuzzlePanelInfo puzzlePanelInfo, EnumToyBlastPuzzleErasePanelReasonType erasePanelReasonType)
		{
		}
	}
	[Token(Token = "0x2000538")]
	public readonly struct ToyBlastPuzzleEraseTileInfo
	{
		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E20C", Offset = "0x88E20C")]
		private readonly ToyBlastPuzzleTileInfo <PuzzleTileInfo>k__BackingField;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E21C", Offset = "0x88E21C")]
		private readonly EnumToyBlastPuzzleErasePanelReasonType <ErasePanelReasonType>k__BackingField;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E22C", Offset = "0x88E22C")]
		private readonly bool <IsEraseTileOnly>k__BackingField;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E23C", Offset = "0x88E23C")]
		private readonly bool <IsPlayEffect>k__BackingField;

		[Token(Token = "0x17000258")]
		public ToyBlastPuzzleTileInfo PuzzleTileInfo
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0xF78120", Offset = "0xF78120", VA = "0xF78120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896B38", Offset = "0x896B38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		public EnumToyBlastPuzzleErasePanelReasonType ErasePanelReasonType
		{
			[Token(Token = "0x600195C")]
			[Address(RVA = "0xF78128", Offset = "0xF78128", VA = "0xF78128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896B48", Offset = "0x896B48")]
			get
			{
				return default(EnumToyBlastPuzzleErasePanelReasonType);
			}
		}

		[Token(Token = "0x1700025A")]
		public bool IsEraseTileOnly
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0xF78130", Offset = "0xF78130", VA = "0xF78130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896B58", Offset = "0x896B58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025B")]
		public bool IsPlayEffect
		{
			[Token(Token = "0x600195E")]
			[Address(RVA = "0xF78138", Offset = "0xF78138", VA = "0xF78138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896B68", Offset = "0x896B68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xF78104", Offset = "0xF78104", VA = "0xF78104")]
		public ToyBlastPuzzleEraseTileInfo(ToyBlastPuzzleTileInfo puzzleTileInfo, EnumToyBlastPuzzleErasePanelReasonType erasePanelReasonType, bool isEraseTileOnly, bool isPlayEffect = true)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000539")]
	public class ToyBlastPuzzleNormaInfo
	{
		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnumToyBlastPuzzlePanelType EnumToyBlastPuzzlePanelType;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public EnumToyBlastPuzzlePanelColor EnumToyBlastPuzzlePanelColor;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnumToyBlastPuzzleTileType EnumToyBlastPuzzleTileType;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EnumToyBlastPuzzleOrnamentType EnumToyBlastPuzzleOrnamentType;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxCount;

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xE60278", Offset = "0xE60278", VA = "0xE60278")]
		public ToyBlastPuzzleNormaInfo()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xE60280", Offset = "0xE60280", VA = "0xE60280")]
		public ToyBlastPuzzleNormaInfo(EnumToyBlastPuzzlePanelType panelType, EnumToyBlastPuzzlePanelColor panelColor, EnumToyBlastPuzzleTileType tileType, EnumToyBlastPuzzleOrnamentType ornamentType, int maxCount)
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xE602D4", Offset = "0xE602D4", VA = "0xE602D4")]
		public bool IsErrorData()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200053A")]
	public class ToyBlastPuzzleNormaUiInfo
	{
		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E24C", Offset = "0x88E24C")]
		private ToyBlastPuzzleNormaInfo <NormaInfo>k__BackingField;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int CurrentCount;

		[Token(Token = "0x1700025C")]
		public ToyBlastPuzzleNormaInfo NormaInfo
		{
			[Token(Token = "0x6001963")]
			[Address(RVA = "0xE60340", Offset = "0xE60340", VA = "0xE60340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896B78", Offset = "0x896B78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001964")]
			[Address(RVA = "0xE60348", Offset = "0xE60348", VA = "0xE60348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896B88", Offset = "0x896B88")]
			private set
			{
			}
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xE60304", Offset = "0xE60304", VA = "0xE60304")]
		public ToyBlastPuzzleNormaUiInfo(ToyBlastPuzzleNormaInfo normaInfo)
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class ToyBlastPuzzleSelectPanelInfo
	{
		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PanelIndex;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ToyBlastPuzzlePanel PanelScript;

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xE67A48", Offset = "0xE67A48", VA = "0xE67A48")]
		public ToyBlastPuzzleSelectPanelInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053C")]
	public class ToyBlastPuzzleStageCellInfo
	{
		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnumToyBlastPuzzleTileType EnumToyBlastPuzzleTileType;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public EnumToyBlastPuzzlePanelType EnumToyBlastPuzzlePanelType;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnumToyBlastPuzzlePanelColor EnumToyBlastPuzzlePanelColor;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool IsFallToyPoint;

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xE695E4", Offset = "0xE695E4", VA = "0xE695E4")]
		public ToyBlastPuzzleStageCellInfo()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xE695EC", Offset = "0xE695EC", VA = "0xE695EC")]
		public ToyBlastPuzzleStageCellInfo(ToyBlastPuzzleStageCellInfo info)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xE6963C", Offset = "0xE6963C", VA = "0xE6963C")]
		public static ToyBlastPuzzleStageCellInfo CreateDummyInfo()
		{
			return null;
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xE696B0", Offset = "0xE696B0", VA = "0xE696B0")]
		public bool IsSameData(ToyBlastPuzzleStageCellInfo info)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200053D")]
	public class ToyBlastPuzzleStageCellOrnamentInfo
	{
		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnumToyBlastPuzzleOrnamentType EnumToyBlastPuzzleOrnamentType;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> IndexList;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int EraseCount;

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xE69718", Offset = "0xE69718", VA = "0xE69718")]
		public ToyBlastPuzzleStageCellOrnamentInfo(EnumToyBlastPuzzleOrnamentType ornamentType, List<int> indexList, int eraseCount)
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xE6975C", Offset = "0xE6975C", VA = "0xE6975C")]
		public void AddEraseCount(int addValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053E")]
	public class ToyBlastPuzzleStageInfo
	{
		[Serializable]
		[Token(Token = "0x200053F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881F2C", Offset = "0x881F2C")]
		private sealed class <>c
		{
			[Token(Token = "0x40019F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40019FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<ToyBlastPuzzleStageCellInfo> <>9__37_0;

			[Token(Token = "0x6001982")]
			[Address(RVA = "0xF976DC", Offset = "0xF976DC", VA = "0xF976DC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001983")]
			[Address(RVA = "0xF976E4", Offset = "0xF976E4", VA = "0xF976E4")]
			internal void <CheckStageCellTileFallToyPoint>b__37_0(ToyBlastPuzzleStageCellInfo x)
			{
			}
		}

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int DataVersion;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int StageId;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BulletCount;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<EnumToyBlastPuzzlePanelColor> RandomPanelColorList;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int AppearVerticalRocketPercent;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _stageCellMaxRaw;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _stageCellMaxLine;

		[Token(Token = "0x40019F0")]
		public const int StageCellOutOfRangeLine = 30;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<ToyBlastPuzzleStageCellInfo> ToyBlastPuzzleStageCellInfoList;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<ToyBlastPuzzleStageCellInfo> ToyBlastPuzzleStageCellDataBaseList;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> ToyBlastPuzzleStageCellDataIndexList;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IsOrnamentRandomMove;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int OrnamentMoveTurnCount;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<ToyBlastPuzzleStageCellOrnamentInfo> ToyBlastPuzzleStageCellOrnamentInfoList;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<int> OrnamentMoveTargetIndexList;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<ToyBlastPuzzleNormaInfo> ToyBlastPuzzleNormaInfoList;

		[Token(Token = "0x1700025D")]
		public float StarTripleBulletCountRate
		{
			[Token(Token = "0x600196C")]
			[Address(RVA = "0xE6A4A4", Offset = "0xE6A4A4", VA = "0xE6A4A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700025E")]
		public float StarDoubleBulletCountRate
		{
			[Token(Token = "0x600196D")]
			[Address(RVA = "0xE6A4AC", Offset = "0xE6A4AC", VA = "0xE6A4AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700025F")]
		public float StarSingleBulletCountRate
		{
			[Token(Token = "0x600196E")]
			[Address(RVA = "0xE6A4B8", Offset = "0xE6A4B8", VA = "0xE6A4B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000260")]
		public int StarTripleBulletCount
		{
			[Token(Token = "0x600196F")]
			[Address(RVA = "0xE6A4C0", Offset = "0xE6A4C0", VA = "0xE6A4C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000261")]
		public int StarDoubleBulletCount
		{
			[Token(Token = "0x6001970")]
			[Address(RVA = "0xE6A4D8", Offset = "0xE6A4D8", VA = "0xE6A4D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000262")]
		public int StarSingleBulletCount
		{
			[Token(Token = "0x6001971")]
			[Address(RVA = "0xE6A4F4", Offset = "0xE6A4F4", VA = "0xE6A4F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000263")]
		public int StageCellMaxRaw
		{
			[Token(Token = "0x6001973")]
			[Address(RVA = "0xE6A558", Offset = "0xE6A558", VA = "0xE6A558")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000264")]
		public int StageCellMaxLine
		{
			[Token(Token = "0x6001974")]
			[Address(RVA = "0xE6A560", Offset = "0xE6A560", VA = "0xE6A560")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000265")]
		public int StageCellMaxCount
		{
			[Token(Token = "0x6001975")]
			[Address(RVA = "0xE6A568", Offset = "0xE6A568", VA = "0xE6A568")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xE6A50C", Offset = "0xE6A50C", VA = "0xE6A50C")]
		public EnumToyBlastPuzzlePanelColor GetRandomPanelColor()
		{
			return default(EnumToyBlastPuzzlePanelColor);
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xE6A574", Offset = "0xE6A574", VA = "0xE6A574")]
		public int CalcStageCellMaxCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xE6A120", Offset = "0xE6A120", VA = "0xE6A120")]
		public void SetNormaInfo(int index, ToyBlastPuzzleNormaInfo normaInfo)
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xE698D0", Offset = "0xE698D0", VA = "0xE698D0")]
		public void CheckStageCellTileFallToyPoint()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xE69AD4", Offset = "0xE69AD4", VA = "0xE69AD4")]
		public void ConvertChipData(bool isSave)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xE6A584", Offset = "0xE6A584", VA = "0xE6A584")]
		private void ConvertToDataBase()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xE6A814", Offset = "0xE6A814", VA = "0xE6A814")]
		private void ConvertToMainData()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xE69AA0", Offset = "0xE69AA0", VA = "0xE69AA0")]
		public void CheckStageCellMaxRawLine(int targetRaw, int targetLine)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xE6AA34", Offset = "0xE6AA34", VA = "0xE6AA34")]
		private void CheckStageCellMaxRaw(int targetRaw)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xE6AC1C", Offset = "0xE6AC1C", VA = "0xE6AC1C")]
		private void CheckStageCellMaxLine(int targetLine)
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xE6AE24", Offset = "0xE6AE24", VA = "0xE6AE24")]
		private void CheckStageCellMaxCount()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xE69E9C", Offset = "0xE69E9C", VA = "0xE69E9C")]
		public ToyBlastPuzzleStageInfo()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.ExplodeBomb
{
	[Token(Token = "0x2000540")]
	public enum EnumToyBlastPuzzleExplodeBombType
	{
		[Token(Token = "0x40019FC")]
		None,
		[Token(Token = "0x40019FD")]
		RotorUp,
		[Token(Token = "0x40019FE")]
		RotorDown,
		[Token(Token = "0x40019FF")]
		RotorLeft,
		[Token(Token = "0x4001A00")]
		RotorRight,
		[Token(Token = "0x4001A01")]
		RotorHorizontal,
		[Token(Token = "0x4001A02")]
		RotorVertical,
		[Token(Token = "0x4001A03")]
		Tnt,
		[Token(Token = "0x4001A04")]
		PuzzleCube,
		[Token(Token = "0x4001A05")]
		RotorAndRotor,
		[Token(Token = "0x4001A06")]
		TntAndRotorHorizontal,
		[Token(Token = "0x4001A07")]
		TntAndRotorVertical,
		[Token(Token = "0x4001A08")]
		TntAndTnt,
		[Token(Token = "0x4001A09")]
		PuzzleCubeAndRotorHorizontal,
		[Token(Token = "0x4001A0A")]
		PuzzleCubeAndRotorVertical,
		[Token(Token = "0x4001A0B")]
		PuzzleCubeAndTnt,
		[Token(Token = "0x4001A0C")]
		PuzzleCubeAndPuzzleCube
	}
	[Token(Token = "0x2000541")]
	public static class EnumToyBlastPuzzleExplodeBombTypeExtension
	{
		[Token(Token = "0x6001984")]
		[Address(RVA = "0x1231368", Offset = "0x1231368", VA = "0x1231368")]
		public static EnumToyBlastPuzzleErasePanelReasonType ToEnumToyBlastPuzzleErasePanelReasonType(this EnumToyBlastPuzzleExplodeBombType type)
		{
			return default(EnumToyBlastPuzzleErasePanelReasonType);
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x123138C", Offset = "0x123138C", VA = "0x123138C")]
		public static EnumToyBlastPuzzleSeType ToEnumToyBlastPuzzleAudioClipType(this EnumToyBlastPuzzleExplodeBombType type)
		{
			return default(EnumToyBlastPuzzleSeType);
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x12313B0", Offset = "0x12313B0", VA = "0x12313B0")]
		public static EnumToyBlastPuzzleOrnamentCheckType ToEnumToyBlastPuzzleOrnamentCheckType(this EnumToyBlastPuzzleExplodeBombType type)
		{
			return default(EnumToyBlastPuzzleOrnamentCheckType);
		}
	}
	[Token(Token = "0x2000542")]
	public interface IToyBlastPuzzleUpdateExplodeBomb
	{
		[Token(Token = "0x6001987")]
		void Init(ToyBlastPuzzleExplodeBombUpdateInfo info);

		[Token(Token = "0x6001988")]
		void UpdateExplodeBomb();

		[Token(Token = "0x6001989")]
		bool IsFinish();

		[Token(Token = "0x600198A")]
		bool IsPauseUpdateBoard();

		[Token(Token = "0x600198B")]
		bool IsSelectPanelUnEnable();

		[Token(Token = "0x600198C")]
		bool IsExplodeBombTarget(ToyBlastPuzzlePanelInfo panelInfo);

		[Token(Token = "0x600198D")]
		ToyBlastPuzzleExplodeBombUpdateInfo GetExplodeBombInfoBase();
	}
	[Token(Token = "0x2000543")]
	public class ToyBlastPuzzleExplodeBombRequestInfo
	{
		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ExplodeBombIndex;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int ExplodeBombRaw;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ExplodeBombLine;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EnumToyBlastPuzzleExplodeBombType ExplodeBombType;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> MatchingGroupIndexList;

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xF78140", Offset = "0xF78140", VA = "0xF78140")]
		public ToyBlastPuzzleExplodeBombRequestInfo(int explodeBombIndex, EnumToyBlastPuzzleExplodeBombType explodeBombType, [Optional] List<int> matchingGroupIndexList)
		{
		}
	}
	[Token(Token = "0x2000544")]
	public class ToyBlastPuzzleExplodeBombUpdateInfo
	{
		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ToyBlastPuzzleExplodeBombRequestInfo _explodeBombRequestInfo;

		[Token(Token = "0x17000266")]
		public int BaseIndex
		{
			[Token(Token = "0x6001990")]
			[Address(RVA = "0xF782C0", Offset = "0xF782C0", VA = "0xF782C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000267")]
		public int BaseRaw
		{
			[Token(Token = "0x6001991")]
			[Address(RVA = "0xF782DC", Offset = "0xF782DC", VA = "0xF782DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000268")]
		public int BaseLine
		{
			[Token(Token = "0x6001992")]
			[Address(RVA = "0xF782F8", Offset = "0xF782F8", VA = "0xF782F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000269")]
		public EnumToyBlastPuzzleExplodeBombType ExplodeBombType
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0xF78314", Offset = "0xF78314", VA = "0xF78314")]
			get
			{
				return default(EnumToyBlastPuzzleExplodeBombType);
			}
		}

		[Token(Token = "0x1700026A")]
		public List<int> MatchingGroupIndexList
		{
			[Token(Token = "0x6001994")]
			[Address(RVA = "0xF78330", Offset = "0xF78330", VA = "0xF78330")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xF78294", Offset = "0xF78294", VA = "0xF78294")]
		public ToyBlastPuzzleExplodeBombUpdateInfo(ToyBlastPuzzleExplodeBombRequestInfo explodeBombRequestInfo)
		{
		}
	}
	[Token(Token = "0x2000545")]
	public abstract class ToyBlastPuzzleUpdateExplodeBombBase : IToyBlastPuzzleUpdateExplodeBomb
	{
		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected ToyBlastPuzzleExplodeBombUpdateInfo ExplodeBombUpdateInfo;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float DeltaTime;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _isFinish;

		[Token(Token = "0x1700026B")]
		protected static List<ToyBlastPuzzlePanelInfo> PanelInfoList
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0xE706C0", Offset = "0xE706C0", VA = "0xE706C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		protected static int InvalidIndex
		{
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0xE709B4", Offset = "0xE709B4", VA = "0xE709B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700026D")]
		protected static int BoardMaxRaw
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0xE709BC", Offset = "0xE709BC", VA = "0xE709BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700026E")]
		protected static int BoardMaxLine
		{
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0xE70A14", Offset = "0xE70A14", VA = "0xE70A14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xE70254", Offset = "0xE70254", VA = "0xE70254", Slot = "4")]
		public void Init(ToyBlastPuzzleExplodeBombUpdateInfo info)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xE70264", Offset = "0xE70264", VA = "0xE70264", Slot = "5")]
		public void UpdateExplodeBomb()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xE702B8", Offset = "0xE702B8", VA = "0xE702B8", Slot = "9")]
		public bool IsExplodeBombTarget(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001998")]
		protected abstract void InitCore();

		[Token(Token = "0x6001999")]
		protected abstract bool UpdateExplodeBombCore();

		[Token(Token = "0x600199A")]
		protected abstract bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo);

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xE703B0", Offset = "0xE703B0", VA = "0xE703B0", Slot = "6")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xE703B8", Offset = "0xE703B8", VA = "0xE703B8", Slot = "14")]
		public virtual bool IsPauseUpdateBoard()
		{
			return default(bool);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xE703C0", Offset = "0xE703C0", VA = "0xE703C0", Slot = "15")]
		public virtual bool IsSelectPanelUnEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xE703C8", Offset = "0xE703C8", VA = "0xE703C8", Slot = "10")]
		public ToyBlastPuzzleExplodeBombUpdateInfo GetExplodeBombInfoBase()
		{
			return null;
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xE703D0", Offset = "0xE703D0", VA = "0xE703D0")]
		protected Vector3 CalcExplodePos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xE70454", Offset = "0xE70454", VA = "0xE70454")]
		protected void NotifyCheckOrnament(List<int> eraseIndexList)
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xE70528", Offset = "0xE70528", VA = "0xE70528")]
		protected void IgnitionBomb()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xE70788", Offset = "0xE70788", VA = "0xE70788")]
		protected void PlayExplodeSeEffect()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xE70824", Offset = "0xE70824", VA = "0xE70824")]
		protected static int ConvertIndexFromRawLine(int raw, int line)
		{
			return default(int);
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xE70894", Offset = "0xE70894", VA = "0xE70894")]
		protected static int CreatePuzzleEffectAccessor(ToyBlastPuzzleEffectInfoBase infoBase)
		{
			return default(int);
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xE703F4", Offset = "0xE703F4", VA = "0xE703F4")]
		protected static Vector3 CalcToyBlastPuzzlePos(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xE70718", Offset = "0xE70718", VA = "0xE70718")]
		protected static bool ErasePanelAccessor(ToyBlastPuzzleErasePanelInfo erasePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xE708F4", Offset = "0xE708F4", VA = "0xE708F4")]
		protected static bool ChangePanelAccessor(ToyBlastPuzzleChangePanelInfo changePanelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xE70954", Offset = "0xE70954", VA = "0xE70954")]
		protected static void ForceSkipEffectAccessor(int uniqueId)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xE70A6C", Offset = "0xE70A6C", VA = "0xE70A6C")]
		protected ToyBlastPuzzleUpdateExplodeBombBase()
		{
		}
	}
	[Token(Token = "0x2000546")]
	public class ToyBlastPuzzleUpdateExplodeBombMix : ToyBlastPuzzleUpdateExplodeBombBase
	{
		[Token(Token = "0x1700026F")]
		private float IntervalTime
		{
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xE70ADC", Offset = "0xE70ADC", VA = "0xE70ADC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xE70AE8", Offset = "0xE70AE8", VA = "0xE70AE8", Slot = "13")]
		protected override bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xE70AF0", Offset = "0xE70AF0", VA = "0xE70AF0", Slot = "11")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xE70B84", Offset = "0xE70B84", VA = "0xE70B84", Slot = "12")]
		protected override bool UpdateExplodeBombCore()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xE70B9C", Offset = "0xE70B9C", VA = "0xE70B9C")]
		public ToyBlastPuzzleUpdateExplodeBombMix()
		{
		}
	}
	[Token(Token = "0x2000547")]
	public class ToyBlastPuzzleUpdateExplodeBombPuzzleCube : ToyBlastPuzzleUpdateExplodeBombBase
	{
		[Serializable]
		[Token(Token = "0x2000548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881F4C", Offset = "0x881F4C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ToyBlastPuzzlePanelInfo, bool> <>9__7_1;

			[Token(Token = "0x4001A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ToyBlastPuzzlePanelInfo, int> <>9__7_2;

			[Token(Token = "0x4001A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<int, bool> <>9__7_3;

			[Token(Token = "0x4001A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<int, Guid> <>9__7_4;

			[Token(Token = "0x60019BC")]
			[Address(RVA = "0xF97CF4", Offset = "0xF97CF4", VA = "0xF97CF4")]
			public <>c()
			{
			}

			[Token(Token = "0x60019BD")]
			[Address(RVA = "0xF97CFC", Offset = "0xF97CFC", VA = "0xF97CFC")]
			internal bool <CalcEraseIndexList>b__7_1(ToyBlastPuzzlePanelInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x60019BE")]
			[Address(RVA = "0xF97D60", Offset = "0xF97D60", VA = "0xF97D60")]
			internal int <CalcEraseIndexList>b__7_2(ToyBlastPuzzlePanelInfo x)
			{
				return default(int);
			}

			[Token(Token = "0x60019BF")]
			[Address(RVA = "0xF97D78", Offset = "0xF97D78", VA = "0xF97D78")]
			internal bool <CalcEraseIndexList>b__7_3(int x)
			{
				return default(bool);
			}

			[Token(Token = "0x60019C0")]
			[Address(RVA = "0xF97DA4", Offset = "0xF97DA4", VA = "0xF97DA4")]
			internal Guid <CalcEraseIndexList>b__7_4(int i)
			{
				return default(Guid);
			}
		}

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EnumToyBlastPuzzlePanelColor _targetPanelColor;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<int> _eraseIndexList;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isEffectComplete;

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xE70BA4", Offset = "0xE70BA4", VA = "0xE70BA4", Slot = "14")]
		public override bool IsPauseUpdateBoard()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xE70BAC", Offset = "0xE70BAC", VA = "0xE70BAC", Slot = "13")]
		protected override bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xE70C60", Offset = "0xE70C60", VA = "0xE70C60")]
		private void NotifyStateComplete()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xE70C6C", Offset = "0xE70C6C", VA = "0xE70C6C", Slot = "11")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xE70D68", Offset = "0xE70D68", VA = "0xE70D68")]
		private void CalcEraseIndexList()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xE712D8", Offset = "0xE712D8", VA = "0xE712D8", Slot = "12")]
		protected override bool UpdateExplodeBombCore()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xE714CC", Offset = "0xE714CC", VA = "0xE714CC")]
		public ToyBlastPuzzleUpdateExplodeBombPuzzleCube()
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xE714D4", Offset = "0xE714D4", VA = "0xE714D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896BC8", Offset = "0x896BC8")]
		private bool <CalcEraseIndexList>b__7_0(ToyBlastPuzzlePanelInfo x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000549")]
	public class ToyBlastPuzzleUpdateExplodeBombPuzzleCubeAndPuzzleCube : ToyBlastPuzzleUpdateExplodeBombBase
	{
		[Token(Token = "0x200054A")]
		private class ToyBlastPuzzleUpdateExplodeBombPuzzleCubeAndPuzzleCubeCore : ToyBlastPuzzleUpdateExplodeBombBase
		{
			[Serializable]
			[Token(Token = "0x200054B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881F5C", Offset = "0x881F5C")]
			private sealed class <>c
			{
				[Token(Token = "0x4001A25")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4001A26")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<ToyBlastPuzzlePanelInfo, bool> <>9__8_0;

				[Token(Token = "0x4001A27")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static Func<ToyBlastPuzzlePanelInfo, int> <>9__8_1;

				[Token(Token = "0x4001A28")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public static Func<int, bool> <>9__8_2;

				[Token(Token = "0x60019CF")]
				[Address(RVA = "0xF9D6C0", Offset = "0xF9D6C0", VA = "0xF9D6C0")]
				public <>c()
				{
				}

				[Token(Token = "0x60019D0")]
				[Address(RVA = "0xF9D6C8", Offset = "0xF9D6C8", VA = "0xF9D6C8")]
				internal bool <CalcEraseIndexList>b__8_0(ToyBlastPuzzlePanelInfo x)
				{
					return default(bool);
				}

				[Token(Token = "0x60019D1")]
				[Address(RVA = "0xF9D72C", Offset = "0xF9D72C", VA = "0xF9D72C")]
				internal int <CalcEraseIndexList>b__8_1(ToyBlastPuzzlePanelInfo x)
				{
					return default(int);
				}

				[Token(Token = "0x60019D2")]
				[Address(RVA = "0xF9D744", Offset = "0xF9D744", VA = "0xF9D744")]
				internal bool <CalcEraseIndexList>b__8_2(int x)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x4001A21")]
			private const float IntervalTime = 0.2f;

			[Token(Token = "0x4001A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private List<int> _eraseIndexList;

			[Token(Token = "0x4001A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<int> _copyEraseIndexList;

			[Token(Token = "0x4001A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool _isEffectComplete;

			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xF97E00", Offset = "0xF97E00", VA = "0xF97E00", Slot = "14")]
			public override bool IsPauseUpdateBoard()
			{
				return default(bool);
			}

			[Token(Token = "0x60019C8")]
			[Address(RVA = "0xF97E08", Offset = "0xF97E08", VA = "0xF97E08", Slot = "13")]
			protected override bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo)
			{
				return default(bool);
			}

			[Token(Token = "0x60019C9")]
			[Address(RVA = "0xF97EBC", Offset = "0xF97EBC", VA = "0xF97EBC")]
			private void NotifyStateComplete()
			{
			}

			[Token(Token = "0x60019CA")]
			[Address(RVA = "0xF97EC8", Offset = "0xF97EC8", VA = "0xF97EC8", Slot = "11")]
			protected override void InitCore()
			{
			}

			[Token(Token = "0x60019CB")]
			[Address(RVA = "0xF97FCC", Offset = "0xF97FCC", VA = "0xF97FCC")]
			private void CalcEraseIndexList()
			{
			}

			[Token(Token = "0x60019CC")]
			[Address(RVA = "0xF982F0", Offset = "0xF982F0", VA = "0xF982F0", Slot = "12")]
			protected override bool UpdateExplodeBombCore()
			{
				return default(bool);
			}

			[Token(Token = "0x60019CD")]
			[Address(RVA = "0xF985D4", Offset = "0xF985D4", VA = "0xF985D4")]
			public ToyBlastPuzzleUpdateExplodeBombPuzzleCubeAndPuzzleCubeCore()
			{
			}
		}

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _stateCount;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ToyBlastPuzzleUpdateExplodeBombMix _bombMix;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ToyBlastPuzzleUpdateExplodeBombPuzzleCubeAndPuzzleCubeCore _cubeAndCube;

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xE714F8", Offset = "0xE714F8", VA = "0xE714F8", Slot = "14")]
		public override bool IsPauseUpdateBoard()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xE7151C", Offset = "0xE7151C", VA = "0xE7151C", Slot = "15")]
		public override bool IsSelectPanelUnEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xE71540", Offset = "0xE71540", VA = "0xE71540", Slot = "13")]
		protected override bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xE71590", Offset = "0xE71590", VA = "0xE71590", Slot = "11")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xE715BC", Offset = "0xE715BC", VA = "0xE715BC", Slot = "12")]
		protected override bool UpdateExplodeBombCore()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xE71660", Offset = "0xE71660", VA = "0xE71660")]
		public ToyBlastPuzzleUpdateExplodeBombPuzzleCubeAndPuzzleCube()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public class ToyBlastPuzzleUpdateExplodeBombPuzzleCubeAndRocket : ToyBlastPuzzleUpdateExplodeBombPuzzleCubeAndTnt
	{
		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xE716F0", Offset = "0xE716F0", VA = "0xE716F0", Slot = "16")]
		protected override void ChangeBombPanel(int index)
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xE71808", Offset = "0xE71808", VA = "0xE71808")]
		public ToyBlastPuzzleUpdateExplodeBombPuzzleCubeAndRocket()
		{
		}
	}
	[Token(Token = "0x200054D")]
	public class ToyBlastPuzzleUpdateExplodeBombPuzzleCubeAndTnt : ToyBlastPuzzleUpdateExplodeBombBase
	{
		[Token(Token = "0x200054E")]
		private sealed class ToyBlastPuzzleUpdateExplodeBombPuzzleCubeAndTntCore : ToyBlastPuzzleUpdateExplodeBombBase
		{
			[Token(Token = "0x200054F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881F6C", Offset = "0x881F6C")]
			private sealed class <>c__DisplayClass12_0
			{
				[Token(Token = "0x4001A30")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public EnumToyBlastPuzzlePanelColor targetPanelColor;

				[Token(Token = "0x60019E6")]
				[Address(RVA = "0xF98F9C", Offset = "0xF98F9C", VA = "0xF98F9C")]
				public <>c__DisplayClass12_0()
				{
				}

				[Token(Token = "0x60019E7")]
				[Address(RVA = "0xF9D968", Offset = "0xF9D968", VA = "0xF9D968")]
				internal bool <CalcEraseIndexList>b__2(ToyBlastPuzzlePanelInfo x)
				{
					return default(bool);
				}
			}

			[Serializable]
			[Token(Token = "0x2000550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881F7C", Offset = "0x881F7C")]
			private sealed class <>c
			{
				[Token(Token = "0x4001A31")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4001A32")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<int, ToyBlastPuzzlePanelInfo> <>9__12_0;

				[Token(Token = "0x4001A33")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static Func<ToyBlastPuzzlePanelInfo, bool> <>9__12_1;

				[Token(Token = "0x4001A34")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public static Func<ToyBlastPuzzlePanelInfo, bool> <>9__12_3;

				[Token(Token = "0x4001A35")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public static Func<ToyBlastPuzzlePanelInfo, int> <>9__12_4;

				[Token(Token = "0x4001A36")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public static Func<int, bool> <>9__12_5;

				[Token(Token = "0x4001A37")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public static Func<int, Guid> <>9__12_6;

				[Token(Token = "0x60019E9")]
				[Address(RVA = "0xF9D7D0", Offset = "0xF9D7D0", VA = "0xF9D7D0")]
				public <>c()
				{
				}

				[Token(Token = "0x60019EA")]
				[Address(RVA = "0xF9D7D8", Offset = "0xF9D7D8", VA = "0xF9D7D8")]
				internal ToyBlastPuzzlePanelInfo <CalcEraseIndexList>b__12_0(int x)
				{
					return null;
				}

				[Token(Token = "0x60019EB")]
				[Address(RVA = "0xF9D848", Offset = "0xF9D848", VA = "0xF9D848")]
				internal bool <CalcEraseIndexList>b__12_1(ToyBlastPuzzlePanelInfo x)
				{
					return default(bool);
				}

				[Token(Token = "0x60019EC")]
				[Address(RVA = "0xF9D864", Offset = "0xF9D864", VA = "0xF9D864")]
				internal bool <CalcEraseIndexList>b__12_3(ToyBlastPuzzlePanelInfo x)
				{
					return default(bool);
				}

				[Token(Token = "0x60019ED")]
				[Address(RVA = "0xF9D8C8", Offset = "0xF9D8C8", VA = "0xF9D8C8")]
				internal int <CalcEraseIndexList>b__12_4(ToyBlastPuzzlePanelInfo x)
				{
					return default(int);
				}

				[Token(Token = "0x60019EE")]
				[Address(RVA = "0xF9D8E0", Offset = "0xF9D8E0", VA = "0xF9D8E0")]
				internal bool <CalcEraseIndexList>b__12_5(int x)
				{
					return default(bool);
				}

				[Token(Token = "0x60019EF")]
				[Address(RVA = "0xF9D90C", Offset = "0xF9D90C", VA = "0xF9D90C")]
				internal Guid <CalcEraseIndexList>b__12_6(int i)
				{
					return default(Guid);
				}
			}

			[Token(Token = "0x4001A2C")]
			private const float IntervalTime = 0.55f;

			[Token(Token = "0x4001A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private List<int> _eraseIndexList;

			[Token(Token = "0x4001A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool _isEffectComplete;

			[Token(Token = "0x4001A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private readonly Subject<int> _changeBombActionSubject;

			[Token(Token = "0x17000270")]
			public IObservable<int> OnChangeBombActionSubject
			{
				[Token(Token = "0x60019E0")]
				[Address(RVA = "0xF986B4", Offset = "0xF986B4", VA = "0xF986B4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019DC")]
			[Address(RVA = "0xF985DC", Offset = "0xF985DC", VA = "0xF985DC", Slot = "14")]
			public override bool IsPauseUpdateBoard()
			{
				return default(bool);
			}

			[Token(Token = "0x60019DD")]
			[Address(RVA = "0xF985EC", Offset = "0xF985EC", VA = "0xF985EC", Slot = "15")]
			public override bool IsSelectPanelUnEnable()
			{
				return default(bool);
			}

			[Token(Token = "0x60019DE")]
			[Address(RVA = "0xF985F4", Offset = "0xF985F4", VA = "0xF985F4", Slot = "13")]
			protected override bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo)
			{
				return default(bool);
			}

			[Token(Token = "0x60019DF")]
			[Address(RVA = "0xF986A8", Offset = "0xF986A8", VA = "0xF986A8")]
			private void NotifyStateComplete()
			{
			}

			[Token(Token = "0x60019E1")]
			[Address(RVA = "0xF986BC", Offset = "0xF986BC", VA = "0xF986BC")]
			private void PlayChangeBombAction(int index)
			{
			}

			[Token(Token = "0x60019E2")]
			[Address(RVA = "0xF98720", Offset = "0xF98720", VA = "0xF98720", Slot = "11")]
			protected override void InitCore()
			{
			}

			[Token(Token = "0x60019E3")]
			[Address(RVA = "0xF98890", Offset = "0xF98890", VA = "0xF98890")]
			private void CalcEraseIndexList()
			{
			}

			[Token(Token = "0x60019E4")]
			[Address(RVA = "0xF98FA4", Offset = "0xF98FA4", VA = "0xF98FA4", Slot = "12")]
			protected override bool UpdateExplodeBombCore()
			{
				return default(bool);
			}

			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xF990C4", Offset = "0xF990C4", VA = "0xF990C4")]
			public ToyBlastPuzzleUpdateExplodeBombPuzzleCubeAndTntCore()
			{
			}
		}

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _stateCount;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ToyBlastPuzzleUpdateExplodeBombMix _bombMix;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ToyBlastPuzzleUpdateExplodeBombPuzzleCubeAndTntCore _cubeAndTnt;

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xE7189C", Offset = "0xE7189C", VA = "0xE7189C", Slot = "14")]
		public override bool IsPauseUpdateBoard()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xE718C0", Offset = "0xE718C0", VA = "0xE718C0", Slot = "15")]
		public override bool IsSelectPanelUnEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xE718E4", Offset = "0xE718E4", VA = "0xE718E4", Slot = "13")]
		protected override bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xE71934", Offset = "0xE71934", VA = "0xE71934", Slot = "11")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xE71A00", Offset = "0xE71A00", VA = "0xE71A00", Slot = "12")]
		protected override bool UpdateExplodeBombCore()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xE71AA4", Offset = "0xE71AA4", VA = "0xE71AA4", Slot = "16")]
		protected virtual void ChangeBombPanel(int index)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xE7180C", Offset = "0xE7180C", VA = "0xE7180C")]
		public ToyBlastPuzzleUpdateExplodeBombPuzzleCubeAndTnt()
		{
		}
	}
	[Token(Token = "0x2000551")]
	public class ToyBlastPuzzleUpdateExplodeBombRocketUp : ToyBlastPuzzleUpdateExplodeBombRocket
	{
		[Token(Token = "0x17000271")]
		protected override EnumToyBlastPuzzleEffectExplodeRocketDirType EnumToyBlastPuzzleEffectExplodeRocketDirType
		{
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0xE73178", Offset = "0xE73178", VA = "0xE73178", Slot = "16")]
			get
			{
				return default(EnumToyBlastPuzzleEffectExplodeRocketDirType);
			}
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xE72FA0", Offset = "0xE72FA0", VA = "0xE72FA0")]
		public ToyBlastPuzzleUpdateExplodeBombRocketUp()
		{
		}
	}
	[Token(Token = "0x2000552")]
	public class ToyBlastPuzzleUpdateExplodeBombRocketDown : ToyBlastPuzzleUpdateExplodeBombRocket
	{
		[Token(Token = "0x17000272")]
		protected override EnumToyBlastPuzzleEffectExplodeRocketDirType EnumToyBlastPuzzleEffectExplodeRocketDirType
		{
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0xE72FC0", Offset = "0xE72FC0", VA = "0xE72FC0", Slot = "16")]
			get
			{
				return default(EnumToyBlastPuzzleEffectExplodeRocketDirType);
			}
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xE72FA8", Offset = "0xE72FA8", VA = "0xE72FA8")]
		public ToyBlastPuzzleUpdateExplodeBombRocketDown()
		{
		}
	}
	[Token(Token = "0x2000553")]
	public class ToyBlastPuzzleUpdateExplodeBombRocketLeft : ToyBlastPuzzleUpdateExplodeBombRocket
	{
		[Token(Token = "0x17000273")]
		protected override EnumToyBlastPuzzleEffectExplodeRocketDirType EnumToyBlastPuzzleEffectExplodeRocketDirType
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0xE73168", Offset = "0xE73168", VA = "0xE73168", Slot = "16")]
			get
			{
				return default(EnumToyBlastPuzzleEffectExplodeRocketDirType);
			}
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xE72FB0", Offset = "0xE72FB0", VA = "0xE72FB0")]
		public ToyBlastPuzzleUpdateExplodeBombRocketLeft()
		{
		}
	}
	[Token(Token = "0x2000554")]
	public class ToyBlastPuzzleUpdateExplodeBombRocketRight : ToyBlastPuzzleUpdateExplodeBombRocket
	{
		[Token(Token = "0x17000274")]
		protected override EnumToyBlastPuzzleEffectExplodeRocketDirType EnumToyBlastPuzzleEffectExplodeRocketDirType
		{
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0xE73170", Offset = "0xE73170", VA = "0xE73170", Slot = "16")]
			get
			{
				return default(EnumToyBlastPuzzleEffectExplodeRocketDirType);
			}
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xE72FB8", Offset = "0xE72FB8", VA = "0xE72FB8")]
		public ToyBlastPuzzleUpdateExplodeBombRocketRight()
		{
		}
	}
	[Token(Token = "0x2000555")]
	public class ToyBlastPuzzleUpdateExplodeBombBigRocketUp : ToyBlastPuzzleUpdateExplodeBombRocket
	{
		[Token(Token = "0x17000275")]
		protected override EnumToyBlastPuzzleEffectExplodeRocketDirType EnumToyBlastPuzzleEffectExplodeRocketDirType
		{
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0xE70AC4", Offset = "0xE70AC4", VA = "0xE70AC4", Slot = "16")]
			get
			{
				return default(EnumToyBlastPuzzleEffectExplodeRocketDirType);
			}
		}

		[Token(Token = "0x17000276")]
		protected override bool IsBigRocketFlag
		{
			[Token(Token = "0x60019F9")]
			[Address(RVA = "0xE70ACC", Offset = "0xE70ACC", VA = "0xE70ACC", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xE70AD4", Offset = "0xE70AD4", VA = "0xE70AD4")]
		public ToyBlastPuzzleUpdateExplodeBombBigRocketUp()
		{
		}
	}
	[Token(Token = "0x2000556")]
	public class ToyBlastPuzzleUpdateExplodeBombBigRocketDown : ToyBlastPuzzleUpdateExplodeBombRocket
	{
		[Token(Token = "0x17000277")]
		protected override EnumToyBlastPuzzleEffectExplodeRocketDirType EnumToyBlastPuzzleEffectExplodeRocketDirType
		{
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0xE70A74", Offset = "0xE70A74", VA = "0xE70A74", Slot = "16")]
			get
			{
				return default(EnumToyBlastPuzzleEffectExplodeRocketDirType);
			}
		}

		[Token(Token = "0x17000278")]
		protected override bool IsBigRocketFlag
		{
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0xE70A7C", Offset = "0xE70A7C", VA = "0xE70A7C", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xE70A84", Offset = "0xE70A84", VA = "0xE70A84")]
		public ToyBlastPuzzleUpdateExplodeBombBigRocketDown()
		{
		}
	}
	[Token(Token = "0x2000557")]
	public class ToyBlastPuzzleUpdateExplodeBombBigRocketLeft : ToyBlastPuzzleUpdateExplodeBombRocket
	{
		[Token(Token = "0x17000279")]
		protected override EnumToyBlastPuzzleEffectExplodeRocketDirType EnumToyBlastPuzzleEffectExplodeRocketDirType
		{
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0xE70A94", Offset = "0xE70A94", VA = "0xE70A94", Slot = "16")]
			get
			{
				return default(EnumToyBlastPuzzleEffectExplodeRocketDirType);
			}
		}

		[Token(Token = "0x1700027A")]
		protected override bool IsBigRocketFlag
		{
			[Token(Token = "0x60019FF")]
			[Address(RVA = "0xE70A9C", Offset = "0xE70A9C", VA = "0xE70A9C", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xE70AA4", Offset = "0xE70AA4", VA = "0xE70AA4")]
		public ToyBlastPuzzleUpdateExplodeBombBigRocketLeft()
		{
		}
	}
	[Token(Token = "0x2000558")]
	public class ToyBlastPuzzleUpdateExplodeBombBigRocketRight : ToyBlastPuzzleUpdateExplodeBombRocket
	{
		[Token(Token = "0x1700027B")]
		protected override EnumToyBlastPuzzleEffectExplodeRocketDirType EnumToyBlastPuzzleEffectExplodeRocketDirType
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xE70AAC", Offset = "0xE70AAC", VA = "0xE70AAC", Slot = "16")]
			get
			{
				return default(EnumToyBlastPuzzleEffectExplodeRocketDirType);
			}
		}

		[Token(Token = "0x1700027C")]
		protected override bool IsBigRocketFlag
		{
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0xE70AB4", Offset = "0xE70AB4", VA = "0xE70AB4", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xE70ABC", Offset = "0xE70ABC", VA = "0xE70ABC")]
		public ToyBlastPuzzleUpdateExplodeBombBigRocketRight()
		{
		}
	}
	[Token(Token = "0x2000559")]
	public abstract class ToyBlastPuzzleUpdateExplodeBombRocket : ToyBlastPuzzleUpdateExplodeBombBase
	{
		[Token(Token = "0x200055A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881F8C", Offset = "0x881F8C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int eraseTargetIndex;

			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0xF9913C", Offset = "0xF9913C", VA = "0xF9913C")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0xF99144", Offset = "0xF99144", VA = "0xF99144")]
			internal bool <UpdateExplodeBombCore>b__0([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x897A58", Offset = "0x897A58")] (int, bool) x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _effectUniqueId;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<int> _eraseIndexList;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<int> _copyEraseIndexList;

		[Token(Token = "0x1700027D")]
		private float IntervalTime
		{
			[Token(Token = "0x6001A04")]
			[Address(RVA = "0xE71B64", Offset = "0xE71B64", VA = "0xE71B64")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700027E")]
		protected virtual EnumToyBlastPuzzleEffectExplodeRocketDirType EnumToyBlastPuzzleEffectExplodeRocketDirType
		{
			[Token(Token = "0x6001A05")]
			[Address(RVA = "0xE71B9C", Offset = "0xE71B9C", VA = "0xE71B9C", Slot = "16")]
			get
			{
				return default(EnumToyBlastPuzzleEffectExplodeRocketDirType);
			}
		}

		[Token(Token = "0x1700027F")]
		protected virtual bool IsBigRocketFlag
		{
			[Token(Token = "0x6001A06")]
			[Address(RVA = "0xE71BA4", Offset = "0xE71BA4", VA = "0xE71BA4", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xE71BAC", Offset = "0xE71BAC", VA = "0xE71BAC", Slot = "13")]
		protected override bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xE71C60", Offset = "0xE71C60", VA = "0xE71C60", Slot = "11")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xE71D44", Offset = "0xE71D44", VA = "0xE71D44")]
		private void CalcEraseIndexList()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xE72370", Offset = "0xE72370", VA = "0xE72370", Slot = "12")]
		protected override bool UpdateExplodeBombCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xE70A8C", Offset = "0xE70A8C", VA = "0xE70A8C")]
		protected ToyBlastPuzzleUpdateExplodeBombRocket()
		{
		}
	}
	[Token(Token = "0x200055B")]
	public class ToyBlastPuzzleUpdateExplodeBombRocketAndRocket : ToyBlastPuzzleUpdateExplodeBombBase
	{
		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _stateCount;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ToyBlastPuzzleUpdateExplodeBombMix _bombMix;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ToyBlastPuzzleUpdateExplodeBombRocketUp _upRocket;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ToyBlastPuzzleUpdateExplodeBombRocketDown _downRocket;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ToyBlastPuzzleUpdateExplodeBombRocketLeft _leftRocket;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ToyBlastPuzzleUpdateExplodeBombRocketRight _rightRocket;

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xE72C84", Offset = "0xE72C84", VA = "0xE72C84", Slot = "13")]
		protected override bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xE72D10", Offset = "0xE72D10", VA = "0xE72D10", Slot = "11")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xE72D3C", Offset = "0xE72D3C", VA = "0xE72D3C", Slot = "12")]
		protected override bool UpdateExplodeBombCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xE72E8C", Offset = "0xE72E8C", VA = "0xE72E8C")]
		public ToyBlastPuzzleUpdateExplodeBombRocketAndRocket()
		{
		}
	}
	[Token(Token = "0x200055C")]
	public class ToyBlastPuzzleUpdateExplodeBombRocketHorizontal : ToyBlastPuzzleUpdateExplodeBombBase
	{
		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ToyBlastPuzzleUpdateExplodeBombRocketLeft _leftRocket;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ToyBlastPuzzleUpdateExplodeBombRocketRight _rightRocket;

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xE72FC8", Offset = "0xE72FC8", VA = "0xE72FC8", Slot = "13")]
		protected override bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xE73018", Offset = "0xE73018", VA = "0xE73018", Slot = "11")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xE73074", Offset = "0xE73074", VA = "0xE73074", Slot = "12")]
		protected override bool UpdateExplodeBombCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xE730D8", Offset = "0xE730D8", VA = "0xE730D8")]
		public ToyBlastPuzzleUpdateExplodeBombRocketHorizontal()
		{
		}
	}
	[Token(Token = "0x200055D")]
	public class ToyBlastPuzzleUpdateExplodeBombRocketVertical : ToyBlastPuzzleUpdateExplodeBombBase
	{
		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ToyBlastPuzzleUpdateExplodeBombRocketUp _upRocket;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ToyBlastPuzzleUpdateExplodeBombRocketDown _downRocket;

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xE73180", Offset = "0xE73180", VA = "0xE73180", Slot = "13")]
		protected override bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xE731D0", Offset = "0xE731D0", VA = "0xE731D0", Slot = "11")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xE7322C", Offset = "0xE7322C", VA = "0xE7322C", Slot = "12")]
		protected override bool UpdateExplodeBombCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xE73290", Offset = "0xE73290", VA = "0xE73290")]
		public ToyBlastPuzzleUpdateExplodeBombRocketVertical()
		{
		}
	}
	[Token(Token = "0x200055E")]
	public class ToyBlastPuzzleUpdateExplodeBombTnt : ToyBlastPuzzleUpdateExplodeBombBase
	{
		[Serializable]
		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881F9C", Offset = "0x881F9C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, bool> <>9__9_0;

			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xF991B4", Offset = "0xF991B4", VA = "0xF991B4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A24")]
			[Address(RVA = "0xF991BC", Offset = "0xF991BC", VA = "0xF991BC")]
			internal bool <CalcEraseIndexList>b__9_0(int x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<int> _eraseIndexList;

		[Token(Token = "0x17000280")]
		protected virtual int MaxRange
		{
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0xE73320", Offset = "0xE73320", VA = "0xE73320", Slot = "16")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000281")]
		protected virtual float IntervalTime
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xE73328", Offset = "0xE73328", VA = "0xE73328", Slot = "17")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000282")]
		protected virtual float ScaleRate
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xE73334", Offset = "0xE73334", VA = "0xE73334", Slot = "18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xE7333C", Offset = "0xE7333C", VA = "0xE7333C", Slot = "13")]
		protected override bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xE733F0", Offset = "0xE733F0", VA = "0xE733F0", Slot = "11")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xE734B0", Offset = "0xE734B0", VA = "0xE734B0")]
		private void CalcEraseIndexList()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xE7376C", Offset = "0xE7376C", VA = "0xE7376C", Slot = "12")]
		protected override bool UpdateExplodeBombCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xE7393C", Offset = "0xE7393C", VA = "0xE7393C")]
		public ToyBlastPuzzleUpdateExplodeBombTnt()
		{
		}
	}
	[Token(Token = "0x2000560")]
	public class ToyBlastPuzzleUpdateExplodeBombTntAndRocket : ToyBlastPuzzleUpdateExplodeBombBase
	{
		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _stateCount;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ToyBlastPuzzleUpdateExplodeBombMix _bombMix;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ToyBlastPuzzleUpdateExplodeBombBigRocketUp _upRocket;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ToyBlastPuzzleUpdateExplodeBombBigRocketDown _downRocket;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ToyBlastPuzzleUpdateExplodeBombBigRocketLeft _leftRocket;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ToyBlastPuzzleUpdateExplodeBombBigRocketRight _rightRocket;

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xE73944", Offset = "0xE73944", VA = "0xE73944", Slot = "13")]
		protected override bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xE739D0", Offset = "0xE739D0", VA = "0xE739D0", Slot = "11")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xE739FC", Offset = "0xE739FC", VA = "0xE739FC", Slot = "12")]
		protected override bool UpdateExplodeBombCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xE73B58", Offset = "0xE73B58", VA = "0xE73B58")]
		public ToyBlastPuzzleUpdateExplodeBombTntAndRocket()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class ToyBlastPuzzleUpdateExplodeBombTntAndTnt : ToyBlastPuzzleUpdateExplodeBombBase
	{
		[Token(Token = "0x2000562")]
		private class ToyBlastPuzzleUpdateExplodeBombTntLarge : ToyBlastPuzzleUpdateExplodeBombTnt
		{
			[Token(Token = "0x17000283")]
			protected override int MaxRange
			{
				[Token(Token = "0x6001A2D")]
				[Address(RVA = "0xF991E8", Offset = "0xF991E8", VA = "0xF991E8", Slot = "16")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000284")]
			protected override float IntervalTime
			{
				[Token(Token = "0x6001A2E")]
				[Address(RVA = "0xF991F0", Offset = "0xF991F0", VA = "0xF991F0", Slot = "17")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000285")]
			protected override float ScaleRate
			{
				[Token(Token = "0x6001A2F")]
				[Address(RVA = "0xF991FC", Offset = "0xF991FC", VA = "0xF991FC", Slot = "18")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001A30")]
			[Address(RVA = "0xF99204", Offset = "0xF99204", VA = "0xF99204")]
			public ToyBlastPuzzleUpdateExplodeBombTntLarge()
			{
			}
		}

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _stateCount;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ToyBlastPuzzleUpdateExplodeBombMix _bombMix;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ToyBlastPuzzleUpdateExplodeBombTntLarge _tntLarge;

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xE73C6C", Offset = "0xE73C6C", VA = "0xE73C6C", Slot = "13")]
		protected override bool IsExplodeBombTargetCore(ToyBlastPuzzlePanelInfo panelInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xE73CBC", Offset = "0xE73CBC", VA = "0xE73CBC", Slot = "11")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xE73CE8", Offset = "0xE73CE8", VA = "0xE73CE8", Slot = "12")]
		protected override bool UpdateExplodeBombCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xE73D8C", Offset = "0xE73D8C", VA = "0xE73D8C")]
		public ToyBlastPuzzleUpdateExplodeBombTntAndTnt()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Effect
{
	[Token(Token = "0x2000563")]
	public enum EnumToyBlastPuzzleEffectType
	{
		[Token(Token = "0x4001A53")]
		None,
		[Token(Token = "0x4001A54")]
		BulletHitBlockEffect,
		[Token(Token = "0x4001A55")]
		BreakBlockEffect,
		[Token(Token = "0x4001A56")]
		BreakAcornEffect,
		[Token(Token = "0x4001A57")]
		BreakCageEffect,
		[Token(Token = "0x4001A58")]
		BreakColorObstacleBlockEffect,
		[Token(Token = "0x4001A59")]
		BreakShieldBlockEffect,
		[Token(Token = "0x4001A5A")]
		BreakBubbleBlockEffect,
		[Token(Token = "0x4001A5B")]
		BreakColorCageAnimalEffect,
		[Token(Token = "0x4001A5C")]
		FallModelEffect,
		[Token(Token = "0x4001A5D")]
		ExplodeBombRotorEffect,
		[Token(Token = "0x4001A5E")]
		ExplodeBombTntEffect,
		[Token(Token = "0x4001A5F")]
		ExplodeBombPuzzleCubeEffect,
		[Token(Token = "0x4001A60")]
		ExplodeBombPuzzleCubeAndRotorTntEffect,
		[Token(Token = "0x4001A61")]
		ExplodeBombPuzzleCubeAndPuzzleCubeEffect,
		[Token(Token = "0x4001A62")]
		StartBombMixEffect,
		[Token(Token = "0x4001A63")]
		PrincipalRobotDamageEffect
	}
	[Token(Token = "0x2000564")]
	public interface IToyBlastPuzzleEffect
	{
		[Token(Token = "0x6001A31")]
		void Init(ToyBlastPuzzleEffectInfoBase infoBase, int uniqueId);

		[Token(Token = "0x6001A32")]
		void UpdateEffect();

		[Token(Token = "0x6001A33")]
		bool IsFinish();

		[Token(Token = "0x6001A34")]
		void ForceFinish();

		[Token(Token = "0x6001A35")]
		int GetUniqueId();
	}
	[Token(Token = "0x2000565")]
	public abstract class ToyBlastPuzzleEffectBase<T> : MonoBehaviour, IToyBlastPuzzleEffect where T : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T Info;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E27C", Offset = "0x88E27C")]
		private float <DeltaTime>k__BackingField;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int StateCount;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isFinish;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _uniqueId;

		[Token(Token = "0x17000286")]
		protected float DeltaTime
		{
			[Token(Token = "0x6001A36")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896BD8", Offset = "0x896BD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A37")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896BE8", Offset = "0x896BE8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A38")]
		protected void ClearDeltaTime()
		{
		}

		[Token(Token = "0x6001A39")]
		public bool IsFinish()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3A")]
		public int GetUniqueId()
		{
			return default(int);
		}

		[Token(Token = "0x6001A3B")]
		public void Init(ToyBlastPuzzleEffectInfoBase infoBase, int uniqueId)
		{
		}

		[Token(Token = "0x6001A3C")]
		public void UpdateEffect()
		{
		}

		[Token(Token = "0x6001A3D")]
		public virtual void ForceFinish()
		{
		}

		[Token(Token = "0x6001A3E")]
		protected abstract void InitCore();

		[Token(Token = "0x6001A3F")]
		public abstract bool UpdateEffectCore();

		[Token(Token = "0x6001A40")]
		protected static Vector3 CalcToyBlastPuzzlePos(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A41")]
		protected ToyBlastPuzzleEffectBase()
		{
		}
	}
	[Token(Token = "0x2000566")]
	public abstract class ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 CreateLocalPos;

		[Token(Token = "0x17000287")]
		public virtual EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0xFB18EC", Offset = "0xFB18EC", VA = "0xFB18EC", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xFAD1C8", Offset = "0xFAD1C8", VA = "0xFAD1C8")]
		protected ToyBlastPuzzleEffectInfoBase(Vector3 createLocalPos)
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xFB18F4", Offset = "0xFB18F4", VA = "0xFB18F4", Slot = "5")]
		public virtual void ForceSkip()
		{
		}
	}
	[Token(Token = "0x2000567")]
	public class ToyBlastPuzzleEffectManager : MonoBehaviour
	{
		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToyBlastPuzzleEffectManagerPartsCreate _effectCreate;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ToyBlastPuzzleEffectManagerPartsUpdate _effectUpdate;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ToyBlastPuzzleEffectManagerPartsReserve _effectReserve;

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xFB18F8", Offset = "0xFB18F8", VA = "0xFB18F8")]
		public void ForceSkipEffect(int uniqueId)
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xFB1B20", Offset = "0xFB1B20", VA = "0xFB1B20")]
		public void UpdateEffectList()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xFB1DC4", Offset = "0xFB1DC4", VA = "0xFB1DC4")]
		public void InitOnce(List<ToyBlastPuzzleStageInfo> stageInfoList)
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xFB214C", Offset = "0xFB214C", VA = "0xFB214C")]
		public void ResetEffect()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xFB22B4", Offset = "0xFB22B4", VA = "0xFB22B4")]
		public int CreatePuzzleEffect(ToyBlastPuzzleEffectInfoBase infoBase)
		{
			return default(int);
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xFB2504", Offset = "0xFB2504", VA = "0xFB2504")]
		public void UpdateReserveEffect()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xFB26C4", Offset = "0xFB26C4", VA = "0xFB26C4")]
		public ToyBlastPuzzleEffectManager()
		{
		}
	}
	[Token(Token = "0x2000568")]
	public class ToyBlastPuzzleEffectManagerPartsCreate : MonoBehaviour
	{
		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<EnumToyBlastPuzzleEffectType, List<IToyBlastPuzzleEffect>> _cashEffectListDictionary;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<EnumToyBlastPuzzleEffectType, GameObject> _effectParentGameObjectDictionary;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _effectUniqueIdValue;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ToyBlastPuzzleEffectManagerPartsCreateLimitMaxCount _createLimitMaxCount;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EnumToyBlastPuzzleQualitySettingType _enumToyBlastPuzzleQualitySetting;

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xFB283C", Offset = "0xFB283C", VA = "0xFB283C")]
		private int GetEffectUniqueId()
		{
			return default(int);
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xFB1E10", Offset = "0xFB1E10", VA = "0xFB1E10")]
		public void InitOnce()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xFB23A4", Offset = "0xFB23A4", VA = "0xFB23A4")]
		public IToyBlastPuzzleEffect CreatePuzzleEffect(ToyBlastPuzzleEffectInfoBase infoBase, bool isCreateReserve)
		{
			return null;
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xFB2850", Offset = "0xFB2850", VA = "0xFB2850")]
		private IToyBlastPuzzleEffect InstantiateEffect(EnumToyBlastPuzzleEffectType effectType, bool isCreateReserve)
		{
			return null;
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xFB3084", Offset = "0xFB3084", VA = "0xFB3084")]
		public ToyBlastPuzzleEffectManagerPartsCreate()
		{
		}
	}
	[Token(Token = "0x2000569")]
	public class ToyBlastPuzzleEffectManagerPartsCreateLimitMaxCount : MonoBehaviour
	{
		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<IToyBlastPuzzleEffect> _effectList;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _currentIndex;

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xFB2E20", Offset = "0xFB2E20", VA = "0xFB2E20")]
		public IToyBlastPuzzleEffect InstantiateBreakNormalPanelEffectGameObject(EnumToyBlastPuzzleEffectType effectType, bool isCreateReserve, EnumToyBlastPuzzleQualitySettingType qualitySettingType)
		{
			return null;
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xFB313C", Offset = "0xFB313C", VA = "0xFB313C")]
		public ToyBlastPuzzleEffectManagerPartsCreateLimitMaxCount()
		{
		}
	}
	[Token(Token = "0x200056A")]
	public class ToyBlastPuzzleEffectManagerPartsReserve
	{
		[Token(Token = "0x200056B")]
		private class ReserveEffectInfo
		{
			[Token(Token = "0x4001A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly ToyBlastPuzzleEffectInfoBase EffectInfo;

			[Token(Token = "0x4001A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int ReserveCount;

			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0xF959E8", Offset = "0xF959E8", VA = "0xF959E8")]
			public ReserveEffectInfo(ToyBlastPuzzleEffectInfoBase info, int count = 1)
			{
			}
		}

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<ReserveEffectInfo> _reserveEffectInfoList;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<EnumToyBlastPuzzleEffectType, int> _reserveEffectTypeCountDictionary;

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xFB1E38", Offset = "0xFB1E38", VA = "0xFB1E38")]
		public void InitOnce(List<ToyBlastPuzzleStageInfo> stageInfoList)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xFB37F0", Offset = "0xFB37F0", VA = "0xFB37F0")]
		private void InitStageInfo(ToyBlastPuzzleStageInfo stageInfo)
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xFB32F4", Offset = "0xFB32F4", VA = "0xFB32F4")]
		private ToyBlastPuzzleEffectInfoBase CreateToyBlastPuzzleEffectInfoBase(EnumToyBlastPuzzleEffectType type)
		{
			return null;
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xFB31B4", Offset = "0xFB31B4", VA = "0xFB31B4")]
		private Dictionary<EnumToyBlastPuzzleEffectType, int> CreateCommonReserveEffectDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xFB3C7C", Offset = "0xFB3C7C", VA = "0xFB3C7C")]
		private Dictionary<EnumToyBlastPuzzleEffectType, int> CreateStageReserveEffectDictionary(ToyBlastPuzzleStageInfo stageInfo)
		{
			return null;
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xFB25F4", Offset = "0xFB25F4", VA = "0xFB25F4")]
		public ToyBlastPuzzleEffectInfoBase GetReserveEffectInfo()
		{
			return null;
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xFB27C4", Offset = "0xFB27C4", VA = "0xFB27C4")]
		public ToyBlastPuzzleEffectManagerPartsReserve()
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xFB4050", Offset = "0xFB4050", VA = "0xFB4050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896BF8", Offset = "0x896BF8")]
		internal static void <CreateStageReserveEffectDictionary>g__AddOrAdditionDic|7_0(ref Dictionary<EnumToyBlastPuzzleEffectType, int> dic, EnumToyBlastPuzzleEffectType effectType)
		{
		}
	}
	[Token(Token = "0x200056C")]
	public class ToyBlastPuzzleEffectManagerPartsUpdate
	{
		[Serializable]
		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881FAC", Offset = "0x881FAC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<IToyBlastPuzzleEffect> <>9__2_0;

			[Token(Token = "0x4001A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<IToyBlastPuzzleEffect> <>9__4_0;

			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xF95A84", Offset = "0xF95A84", VA = "0xF95A84")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xF95A8C", Offset = "0xF95A8C", VA = "0xF95A8C")]
			internal void <Reset>b__2_0(IToyBlastPuzzleEffect x)
			{
			}

			[Token(Token = "0x6001A64")]
			[Address(RVA = "0xF95B38", Offset = "0xF95B38", VA = "0xF95B38")]
			internal bool <UpdateEffectList>b__4_0(IToyBlastPuzzleEffect x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<IToyBlastPuzzleEffect> _updateEffectInterfaceList;

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xFB24A0", Offset = "0xFB24A0", VA = "0xFB24A0")]
		public void AddEffect(IToyBlastPuzzleEffect iScript)
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xFB2164", Offset = "0xFB2164", VA = "0xFB2164")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xFB1910", Offset = "0xFB1910", VA = "0xFB1910")]
		public void ForceSkipEffect(int uniqueId)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xFB1B38", Offset = "0xFB1B38", VA = "0xFB1B38")]
		public void UpdateEffectList()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xFB274C", Offset = "0xFB274C", VA = "0xFB274C")]
		public ToyBlastPuzzleEffectManagerPartsUpdate()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Effect.QualitySetting
{
	[Token(Token = "0x200056E")]
	public enum EnumToyBlastPuzzleQualitySettingType
	{
		[Token(Token = "0x4001A7D")]
		None,
		[Token(Token = "0x4001A7E")]
		Low,
		[Token(Token = "0x4001A7F")]
		Middle,
		[Token(Token = "0x4001A80")]
		High
	}
	[Token(Token = "0x200056F")]
	public class ToyBlastPuzzleEffectQualitySetting : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000570")]
		public class EffectQualitySettingInfo
		{
			[Token(Token = "0x4001A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ParticleSystem ParticleSystem;

			[Token(Token = "0x4001A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int HighQuality;

			[Token(Token = "0x4001A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int MiddleQuality;

			[Token(Token = "0x4001A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int LowQuality;

			[Token(Token = "0x6001A69")]
			[Address(RVA = "0xF95BE4", Offset = "0xF95BE4", VA = "0xF95BE4")]
			public EffectQualitySettingInfo()
			{
			}
		}

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<EffectQualitySettingInfo> _effectQualitySettingInfoList;

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xF768C0", Offset = "0xF768C0", VA = "0xF768C0")]
		public void UpdateEffectQualitySetting(EnumToyBlastPuzzleQualitySettingType enumToyBlastPuzzleQualitySettingType)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xF76AB0", Offset = "0xF76AB0", VA = "0xF76AB0")]
		private EnumToyBlastPuzzleQualitySettingType CheckForceSetting(EnumToyBlastPuzzleQualitySettingType enumToyBlastPuzzleQualitySettingType)
		{
			return default(EnumToyBlastPuzzleQualitySettingType);
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xF76AB8", Offset = "0xF76AB8", VA = "0xF76AB8")]
		public static EnumToyBlastPuzzleQualitySettingType CalcToyBlastPuzzleQualitySettingType()
		{
			return default(EnumToyBlastPuzzleQualitySettingType);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xF76B24", Offset = "0xF76B24", VA = "0xF76B24")]
		public ToyBlastPuzzleEffectQualitySetting()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Effect.Ornament
{
	[Token(Token = "0x2000571")]
	public class ToyBlastPuzzleEffectBreakColorCageAnimalInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EnumToyBlastPuzzleOrnamentType OrnamentType;

		[Token(Token = "0x17000288")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0xFADE34", Offset = "0xFADE34", VA = "0xFADE34", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xFADDE4", Offset = "0xFADDE4", VA = "0xFADDE4")]
		public ToyBlastPuzzleEffectBreakColorCageAnimalInfo(Vector3 localPos, EnumToyBlastPuzzleOrnamentType ornamentType)
		{
		}
	}
	[Token(Token = "0x2000572")]
	public class ToyBlastPuzzleEffectBreakColorCageAnimal : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectBreakColorCageAnimalInfo>
	{
		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _blueColorCageAnimalPrefabGameObject;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _greenColorCageAnimalPrefabGameObject;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _orangeColorCageAnimalPrefabGameObject;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _purpleColorCageAnimalPrefabGameObject;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _redColorCageAnimalPrefabGameObject;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _yellowColorCageAnimalPrefabGameObject;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Dictionary<EnumToyBlastPuzzlePanelColor, GameObject> _prefabGameObjectDictionary;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly Dictionary<GameObject, ParticleSystem[]> _prefabParticleSystemListDictionary;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly ToyBlastPuzzleEffectPartsPlayParticle _toyBlastPuzzleEffectPartsPlayParticle;

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xFAD89C", Offset = "0xFAD89C", VA = "0xFAD89C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xFADAC8", Offset = "0xFADAC8", VA = "0xFADAC8", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xFADCD4", Offset = "0xFADCD4", VA = "0xFADCD4", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xFADCEC", Offset = "0xFADCEC", VA = "0xFADCEC")]
		public ToyBlastPuzzleEffectBreakColorCageAnimal()
		{
		}
	}
	[Token(Token = "0x2000573")]
	public class ToyBlastPuzzleEffectPrincipalRobotDamageInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x17000289")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001A71")]
			[Address(RVA = "0xF768B8", Offset = "0xF768B8", VA = "0xF768B8", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xF768B0", Offset = "0xF768B0", VA = "0xF768B0")]
		public ToyBlastPuzzleEffectPrincipalRobotDamageInfo(Vector3 localPos)
		{
		}
	}
	[Token(Token = "0x2000574")]
	public class ToyBlastPuzzleEffectPrincipalRobotDamage : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectPrincipalRobotDamageInfo>
	{
		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ToyBlastPuzzleEffectPartsPlayParticle _toyBlastPuzzleEffectPartsPlayParticle;

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xFB4148", Offset = "0xFB4148", VA = "0xFB4148")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xFB41B4", Offset = "0xFB41B4", VA = "0xFB41B4", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xFB41CC", Offset = "0xFB41CC", VA = "0xFB41CC", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xFB41E4", Offset = "0xFB41E4", VA = "0xFB41E4")]
		public ToyBlastPuzzleEffectPrincipalRobotDamage()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Effect.Gimmick
{
	[Token(Token = "0x2000575")]
	public class ToyBlastPuzzleEffectBreakAcornInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x1700028A")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001A77")]
			[Address(RVA = "0xFAD210", Offset = "0xFAD210", VA = "0xFAD210", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xFAD180", Offset = "0xFAD180", VA = "0xFAD180")]
		public ToyBlastPuzzleEffectBreakAcornInfo(Vector3 localPos)
		{
		}
	}
	[Token(Token = "0x2000576")]
	public class ToyBlastPuzzleEffectBreakAcorn : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectBreakAcornInfo>
	{
		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ToyBlastPuzzleEffectPartsPlayParticle _toyBlastPuzzleEffectPartsPlayParticle;

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xFACEEC", Offset = "0xFACEEC", VA = "0xFACEEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xFACF58", Offset = "0xFACF58", VA = "0xFACF58", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xFAD020", Offset = "0xFAD020", VA = "0xFAD020", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xFAD100", Offset = "0xFAD100", VA = "0xFAD100")]
		public ToyBlastPuzzleEffectBreakAcorn()
		{
		}
	}
	[Token(Token = "0x2000577")]
	public class ToyBlastPuzzleEffectBreakBubbleBlockInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x1700028B")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0xFAD730", Offset = "0xFAD730", VA = "0xFAD730", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xFAD6E8", Offset = "0xFAD6E8", VA = "0xFAD6E8")]
		public ToyBlastPuzzleEffectBreakBubbleBlockInfo(Vector3 localPos)
		{
		}
	}
	[Token(Token = "0x2000578")]
	public class ToyBlastPuzzleEffectBreakBubbleBlock : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectBreakBubbleBlockInfo>
	{
		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ToyBlastPuzzleEffectPartsPlayParticle _toyBlastPuzzleEffectPartsPlayParticle;

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xFAD5D4", Offset = "0xFAD5D4", VA = "0xFAD5D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xFAD640", Offset = "0xFAD640", VA = "0xFAD640", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xFAD658", Offset = "0xFAD658", VA = "0xFAD658", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xFAD670", Offset = "0xFAD670", VA = "0xFAD670")]
		public ToyBlastPuzzleEffectBreakBubbleBlock()
		{
		}
	}
	[Token(Token = "0x2000579")]
	public class ToyBlastPuzzleEffectBreakCageInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x1700028C")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001A83")]
			[Address(RVA = "0xFAD894", Offset = "0xFAD894", VA = "0xFAD894", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xFAD84C", Offset = "0xFAD84C", VA = "0xFAD84C")]
		public ToyBlastPuzzleEffectBreakCageInfo(Vector3 localPos)
		{
		}
	}
	[Token(Token = "0x200057A")]
	public class ToyBlastPuzzleEffectBreakCage : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectBreakCageInfo>
	{
		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ToyBlastPuzzleEffectPartsPlayParticle _toyBlastPuzzleEffectPartsPlayParticle;

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xFAD738", Offset = "0xFAD738", VA = "0xFAD738")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xFAD7A4", Offset = "0xFAD7A4", VA = "0xFAD7A4", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xFAD7BC", Offset = "0xFAD7BC", VA = "0xFAD7BC", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xFAD7D4", Offset = "0xFAD7D4", VA = "0xFAD7D4")]
		public ToyBlastPuzzleEffectBreakCage()
		{
		}
	}
	[Token(Token = "0x200057B")]
	public class ToyBlastPuzzleEffectBreakColorObstacleBlockInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EnumToyBlastPuzzlePanelType PanelType;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnumToyBlastPuzzlePanelColor PanelColor;

		[Token(Token = "0x1700028D")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001A89")]
			[Address(RVA = "0xFAE4E0", Offset = "0xFAE4E0", VA = "0xFAE4E0", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xFAE484", Offset = "0xFAE484", VA = "0xFAE484")]
		public ToyBlastPuzzleEffectBreakColorObstacleBlockInfo(Vector3 localPos, EnumToyBlastPuzzlePanelType panelType, EnumToyBlastPuzzlePanelColor panelColor)
		{
		}
	}
	[Token(Token = "0x200057C")]
	public class ToyBlastPuzzleEffectBreakColorObstacleBlock : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectBreakColorObstacleBlockInfo>
	{
		[Serializable]
		[Token(Token = "0x200057D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881FBC", Offset = "0x881FBC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject> <>9__4_0;

			[Token(Token = "0x6001A90")]
			[Address(RVA = "0xF95464", Offset = "0xF95464", VA = "0xF95464")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A91")]
			[Address(RVA = "0xF9546C", Offset = "0xF9546C", VA = "0xF9546C")]
			internal void <InitCore>b__4_0(GameObject x)
			{
			}
		}

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<GameObject> _targetGameObjectList;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<GameObject, ParticleSystem[]> _prefabParticleSystemListDictionary;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ToyBlastPuzzleEffectPartsPlayParticle _toyBlastPuzzleEffectPartsPlayParticle;

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xFADE3C", Offset = "0xFADE3C", VA = "0xFADE3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xFADFB4", Offset = "0xFADFB4", VA = "0xFADFB4", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xFAE3B4", Offset = "0xFAE3B4", VA = "0xFAE3B4", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xFAE3CC", Offset = "0xFAE3CC", VA = "0xFAE3CC")]
		public ToyBlastPuzzleEffectBreakColorObstacleBlock()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xFAE210", Offset = "0xFAE210", VA = "0xFAE210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896C08", Offset = "0x896C08")]
		private GameObject <InitCore>g__GetTargetGameObject|4_1()
		{
			return null;
		}
	}
	[Token(Token = "0x200057E")]
	public class ToyBlastPuzzleEffectBreakColorObstacleBlockPartsColorMaterial : MonoBehaviour
	{
		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer _targetRenderer;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material _blueMaterial;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material _grayMaterial;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material _greenMaterial;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material _orangeMaterial;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material _purpleMaterial;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material _redMaterial;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Material _yellowMaterial;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Dictionary<EnumToyBlastPuzzlePanelColor, Material> _materialDictionary;

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xFAE4E8", Offset = "0xFAE4E8", VA = "0xFAE4E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xFAE310", Offset = "0xFAE310", VA = "0xFAE310")]
		public void UpdateColorMaterial(EnumToyBlastPuzzlePanelColor panelColor)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xFAE5D4", Offset = "0xFAE5D4", VA = "0xFAE5D4")]
		public ToyBlastPuzzleEffectBreakColorObstacleBlockPartsColorMaterial()
		{
		}
	}
	[Token(Token = "0x200057F")]
	public class ToyBlastPuzzleEffectBreakShieldBlockInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EnumToyBlastPuzzlePanelType PanelType;

		[Token(Token = "0x1700028E")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001A96")]
			[Address(RVA = "0xFAEBA8", Offset = "0xFAEBA8", VA = "0xFAEBA8", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xFAEB58", Offset = "0xFAEB58", VA = "0xFAEB58")]
		public ToyBlastPuzzleEffectBreakShieldBlockInfo(Vector3 localPos, EnumToyBlastPuzzlePanelType panelType)
		{
		}
	}
	[Token(Token = "0x2000580")]
	public class ToyBlastPuzzleEffectBreakShieldBlock : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectBreakShieldBlockInfo>
	{
		[Serializable]
		[Token(Token = "0x2000581")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881FCC", Offset = "0x881FCC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject> <>9__4_0;

			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0xF954EC", Offset = "0xF954EC", VA = "0xF954EC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0xF954F4", Offset = "0xF954F4", VA = "0xF954F4")]
			internal void <InitCore>b__4_0(GameObject x)
			{
			}
		}

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<GameObject> _targetGameObjectList;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<GameObject, ParticleSystem[]> _prefabParticleSystemListDictionary;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ToyBlastPuzzleEffectPartsPlayParticle _toyBlastPuzzleEffectPartsPlayParticle;

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xFAE64C", Offset = "0xFAE64C", VA = "0xFAE64C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xFAE7C4", Offset = "0xFAE7C4", VA = "0xFAE7C4", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xFAEA88", Offset = "0xFAEA88", VA = "0xFAEA88", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xFAEAA0", Offset = "0xFAEAA0", VA = "0xFAEAA0")]
		public ToyBlastPuzzleEffectBreakShieldBlock()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xFAE9A8", Offset = "0xFAE9A8", VA = "0xFAE9A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896C18", Offset = "0x896C18")]
		private GameObject <InitCore>g__GetTargetGameObject|4_1()
		{
			return null;
		}
	}
	[Token(Token = "0x2000582")]
	public class ToyBlastPuzzleEffectFallModelInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EnumToyBlastPuzzlePanelType PanelType;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnumToyBlastPuzzlePanelColor PanelColor;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public EnumToyBlastPuzzleTileType TileType;

		[Token(Token = "0x1700028F")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0xFB18E4", Offset = "0xFB18E4", VA = "0xFB18E4", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xFB1838", Offset = "0xFB1838", VA = "0xFB1838")]
		public ToyBlastPuzzleEffectFallModelInfo(Vector3 localPos, EnumToyBlastPuzzlePanelType panelType, EnumToyBlastPuzzlePanelColor panelColor)
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xFB1894", Offset = "0xFB1894", VA = "0xFB1894")]
		public ToyBlastPuzzleEffectFallModelInfo(Vector3 localPos, EnumToyBlastPuzzleTileType tileType)
		{
		}
	}
	[Token(Token = "0x2000583")]
	public class ToyBlastPuzzleEffectFallModel : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectFallModelInfo>
	{
		[Serializable]
		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881FDC", Offset = "0x881FDC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject> <>9__4_0;

			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0xF95968", Offset = "0xF95968", VA = "0xF95968")]
			public <>c()
			{
			}

			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0xF95970", Offset = "0xF95970", VA = "0xF95970")]
			internal void <InitCore>b__4_0(GameObject x)
			{
			}
		}

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _smokeEffectPrefabGameObject;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _model;

		[Token(Token = "0x4001AB0")]
		private const float IntervalTime = 5f;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88E3DC", Offset = "0x88E3DC")]
		private string _animationName;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _rotateSpeed;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float _moveSpeed;

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xFB1298", Offset = "0xFB1298", VA = "0xFB1298", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xFB1544", Offset = "0xFB1544", VA = "0xFB1544", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xFB1590", Offset = "0xFB1590", VA = "0xFB1590")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xFB15E8", Offset = "0xFB15E8", VA = "0xFB15E8")]
		private void PlayRunAwayAction()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xFB1720", Offset = "0xFB1720", VA = "0xFB1720")]
		public ToyBlastPuzzleEffectFallModel()
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xFB1794", Offset = "0xFB1794", VA = "0xFB1794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896C28", Offset = "0x896C28")]
		private void <PlayRunAwayAction>b__10_0()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Effect.ExplodeBomb
{
	[Token(Token = "0x2000585")]
	public enum EnumToyBlastPuzzleEffectExplodeRocketDirType
	{
		[Token(Token = "0x4001AB7")]
		None,
		[Token(Token = "0x4001AB8")]
		Up,
		[Token(Token = "0x4001AB9")]
		Down,
		[Token(Token = "0x4001ABA")]
		Left,
		[Token(Token = "0x4001ABB")]
		Right
	}
	[Token(Token = "0x2000586")]
	public static class EnumToyBlastPuzzleEffectExplodeRocketDirTypeExtension
	{
		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x123133C", Offset = "0x123133C", VA = "0x123133C")]
		public static EnumToyBlastPuzzleExplodeBombType ToEnumToyBlastPuzzleExplodeBombType(this EnumToyBlastPuzzleEffectExplodeRocketDirType type)
		{
			return default(EnumToyBlastPuzzleExplodeBombType);
		}
	}
	[Token(Token = "0x2000587")]
	public class ToyBlastPuzzleEffectExplodeBombPuzzleCubeInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> TargetPanelIndexList;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action ExplodeCallback;

		[Token(Token = "0x17000290")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0xFB0808", Offset = "0xFB0808", VA = "0xFB0808", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xFB0798", Offset = "0xFB0798", VA = "0xFB0798")]
		public ToyBlastPuzzleEffectExplodeBombPuzzleCubeInfo(Vector3 localPos, List<int> targetPanelIndexList, Action explodeCallback)
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xFB07F4", Offset = "0xFB07F4", VA = "0xFB07F4", Slot = "5")]
		public override void ForceSkip()
		{
		}
	}
	[Token(Token = "0x2000588")]
	public class ToyBlastPuzzleEffectExplodeBombPuzzleCube : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectExplodeBombPuzzleCubeInfo>
	{
		[Serializable]
		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881FFC", Offset = "0x881FFC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<ParticleSystem> <>9__9_0;

			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ParticleSystem, bool> <>9__11_0;

			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<ParticleSystem> <>9__12_0;

			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0xF95574", Offset = "0xF95574", VA = "0xF95574")]
			public <>c()
			{
			}

			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0xF9557C", Offset = "0xF9557C", VA = "0xF9557C")]
			internal void <InitCore>b__9_0(ParticleSystem x)
			{
			}

			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0xF95608", Offset = "0xF95608", VA = "0xF95608")]
			internal bool <PlayThunderLineEffect>b__11_0(ParticleSystem x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0xF95640", Offset = "0xF95640", VA = "0xF95640")]
			internal void <PlayExplodeEffect>b__12_0(ParticleSystem x)
			{
			}
		}

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem _mainStarParticleSystem;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<ParticleSystem> _thunderLineParticleSystemList;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem _finishParticleSystem;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _thunderLineMoveTime;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _thunderLineWaitTime;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _thunderLineIntervalTime;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float _explodeEffectWaitTime;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<int> _tempTargetPanelIndexList;

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xFAED14", Offset = "0xFAED14", VA = "0xFAED14", Slot = "9")]
		public override void ForceFinish()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xFAEDA8", Offset = "0xFAEDA8", VA = "0xFAEDA8", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xFAEFB8", Offset = "0xFAEFB8", VA = "0xFAEFB8", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xFAF10C", Offset = "0xFAF10C", VA = "0xFAF10C")]
		private void PlayThunderLineEffect(int targetIndex)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xFAF4C0", Offset = "0xFAF4C0", VA = "0xFAF4C0")]
		private void PlayExplodeEffect()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xFAF6AC", Offset = "0xFAF6AC", VA = "0xFAF6AC")]
		public ToyBlastPuzzleEffectExplodeBombPuzzleCube()
		{
		}
	}
	[Token(Token = "0x200058A")]
	public class ToyBlastPuzzleEffectExplodeBombPuzzleCubeAndPuzzleCubeInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action ExplodeCallback;

		[Token(Token = "0x17000291")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0xFAF980", Offset = "0xFAF980", VA = "0xFAF980", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xFAF91C", Offset = "0xFAF91C", VA = "0xFAF91C")]
		public ToyBlastPuzzleEffectExplodeBombPuzzleCubeAndPuzzleCubeInfo(Vector3 localPos, Action explodeCallback)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xFAF96C", Offset = "0xFAF96C", VA = "0xFAF96C", Slot = "5")]
		public override void ForceSkip()
		{
		}
	}
	[Token(Token = "0x200058B")]
	public class ToyBlastPuzzleEffectExplodeBombPuzzleCubeAndPuzzleCube : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectExplodeBombPuzzleCubeAndPuzzleCubeInfo>
	{
		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem _mainStarParticleSystem;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem _finishParticleSystem;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float DelayTime;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float ExplodeEffectWaitTime;

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xFAF704", Offset = "0xFAF704", VA = "0xFAF704", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xFAF770", Offset = "0xFAF770", VA = "0xFAF770", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xFAF838", Offset = "0xFAF838", VA = "0xFAF838")]
		private void PlayExplodeEffect()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xFAF8C8", Offset = "0xFAF8C8", VA = "0xFAF8C8")]
		public ToyBlastPuzzleEffectExplodeBombPuzzleCubeAndPuzzleCube()
		{
		}
	}
	[Token(Token = "0x200058C")]
	public class ToyBlastPuzzleEffectExplodeBombPuzzleCubeAndRotorTntInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> TargetPanelIndexList;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<int> ChangePanelCallback;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action ExplodeCallback;

		[Token(Token = "0x17000292")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0xFB0790", Offset = "0xFB0790", VA = "0xFB0790", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xFB05DC", Offset = "0xFB05DC", VA = "0xFB05DC")]
		public ToyBlastPuzzleEffectExplodeBombPuzzleCubeAndRotorTntInfo(Vector3 localPos, List<int> targetPanelIndexList, Action<int> changePanelCallback, Action explodeCallback)
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xFB0640", Offset = "0xFB0640", VA = "0xFB0640", Slot = "5")]
		public override void ForceSkip()
		{
		}
	}
	[Token(Token = "0x200058D")]
	public class ToyBlastPuzzleEffectExplodeBombPuzzleCubeAndRotorTnt : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectExplodeBombPuzzleCubeAndRotorTntInfo>
	{
		[Serializable]
		[Token(Token = "0x200058E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88200C", Offset = "0x88200C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Tween> <>9__9_0;

			[Token(Token = "0x4001ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<ParticleSystem> <>9__10_0;

			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ParticleSystem, bool> <>9__12_0;

			[Token(Token = "0x4001ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<ParticleSystem> <>9__13_0;

			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0xF956D0", Offset = "0xF956D0", VA = "0xF956D0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0xF956D8", Offset = "0xF956D8", VA = "0xF956D8")]
			internal void <ForceFinish>b__9_0(Tween x)
			{
			}

			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0xF956E8", Offset = "0xF956E8", VA = "0xF956E8")]
			internal void <InitCore>b__10_0(ParticleSystem x)
			{
			}

			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0xF95774", Offset = "0xF95774", VA = "0xF95774")]
			internal bool <PlayThunderLineEffect>b__12_0(ParticleSystem x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xF957AC", Offset = "0xF957AC", VA = "0xF957AC")]
			internal void <PlayExplodeEffect>b__13_0(ParticleSystem x)
			{
			}
		}

		[Token(Token = "0x200058F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88201C", Offset = "0x88201C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ToyBlastPuzzleEffectExplodeBombPuzzleCubeAndRotorTnt <>4__this;

			[Token(Token = "0x4001AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int targetIndex;

			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0xF957DC", Offset = "0xF957DC", VA = "0xF957DC")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0xF957E4", Offset = "0xF957E4", VA = "0xF957E4")]
			internal void <PlayThunderLineEffect>b__1()
			{
			}
		}

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem _mainStarParticleSystem;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<ParticleSystem> _thunderLineParticleSystemList;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem _finishParticleSystem;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _thunderLineMoveTime;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _thunderLineWaitTime;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _thunderLineIntervalTime;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float _explodeEffectWaitTime;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<Tween> _thunderLineTweenList;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<int> _tempTargetPanelIndexList;

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xFAF988", Offset = "0xFAF988", VA = "0xFAF988", Slot = "9")]
		public override void ForceFinish()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xFAFB10", Offset = "0xFAFB10", VA = "0xFAFB10", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xFAFD44", Offset = "0xFAFD44", VA = "0xFAFD44", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xFAFE98", Offset = "0xFAFE98", VA = "0xFAFE98")]
		private void PlayThunderLineEffect(int targetIndex)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xFB0334", Offset = "0xFB0334", VA = "0xFB0334")]
		private void PlayExplodeEffect()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xFB0544", Offset = "0xFB0544", VA = "0xFB0544")]
		public ToyBlastPuzzleEffectExplodeBombPuzzleCubeAndRotorTnt()
		{
		}
	}
	[Token(Token = "0x2000590")]
	public class ToyBlastPuzzleEffectExplodeBombRotorInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EnumToyBlastPuzzleEffectExplodeRocketDirType RotorDirType;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsTntRocket;

		[Token(Token = "0x17000293")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001AD3")]
			[Address(RVA = "0xFB0E90", Offset = "0xFB0E90", VA = "0xFB0E90", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xFB0E2C", Offset = "0xFB0E2C", VA = "0xFB0E2C")]
		public ToyBlastPuzzleEffectExplodeBombRotorInfo(Vector3 localPos, EnumToyBlastPuzzleEffectExplodeRocketDirType rotorDirType, bool isTntRocket)
		{
		}
	}
	[Token(Token = "0x2000591")]
	public class ToyBlastPuzzleEffectExplodeBombRotor : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectExplodeBombRotorInfo>
	{
		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _rotorGameObject;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 StartScaleVec;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly Vector3 TargetScaleVec;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _moveDirVec;

		[Token(Token = "0x17000294")]
		private float ScaleRate
		{
			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0xFB0810", Offset = "0xFB0810", VA = "0xFB0810")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000295")]
		private float MoveDistance
		{
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0xFB083C", Offset = "0xFB083C", VA = "0xFB083C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000296")]
		private float MoveTime
		{
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0xFB0858", Offset = "0xFB0858", VA = "0xFB0858")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000297")]
		private float MoveInterval
		{
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0xFB0884", Offset = "0xFB0884", VA = "0xFB0884")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xFB08B4", Offset = "0xFB08B4", VA = "0xFB08B4", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xFB0B2C", Offset = "0xFB0B2C", VA = "0xFB0B2C", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xFB0D5C", Offset = "0xFB0D5C", VA = "0xFB0D5C")]
		public ToyBlastPuzzleEffectExplodeBombRotor()
		{
		}
	}
	[Token(Token = "0x2000592")]
	public class ToyBlastPuzzleEffectExplodeBombTntInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float ScaleRate;

		[Token(Token = "0x17000298")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0xFB1290", Offset = "0xFB1290", VA = "0xFB1290", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xFB1244", Offset = "0xFB1244", VA = "0xFB1244")]
		public ToyBlastPuzzleEffectExplodeBombTntInfo(Vector3 localPos, float scaleRate)
		{
		}
	}
	[Token(Token = "0x2000593")]
	public class ToyBlastPuzzleEffectExplodeBombTnt : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectExplodeBombTntInfo>
	{
		[Serializable]
		[Token(Token = "0x2000594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88202C", Offset = "0x88202C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<ParticleSystem> <>9__1_0;

			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0xF958B8", Offset = "0xF958B8", VA = "0xF958B8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0xF958C0", Offset = "0xF958C0", VA = "0xF958C0")]
			internal void <InitCore>b__1_0(ParticleSystem x)
			{
			}
		}

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ParticleSystem> _particleSystemList;

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xFB0E98", Offset = "0xFB0E98", VA = "0xFB0E98", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xFB10C4", Offset = "0xFB10C4", VA = "0xFB10C4", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xFB11F8", Offset = "0xFB11F8", VA = "0xFB11F8")]
		public ToyBlastPuzzleEffectExplodeBombTnt()
		{
		}
	}
	[Token(Token = "0x2000595")]
	public class ToyBlastPuzzleEffectStartBombMixInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x17000299")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xF76C50", Offset = "0xF76C50", VA = "0xF76C50", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xF76C48", Offset = "0xF76C48", VA = "0xF76C48")]
		public ToyBlastPuzzleEffectStartBombMixInfo(Vector3 localPos)
		{
		}
	}
	[Token(Token = "0x2000596")]
	public class ToyBlastPuzzleEffectStartBombMix : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectStartBombMixInfo>
	{
		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ToyBlastPuzzleEffectPartsPlayParticle _toyBlastPuzzleEffectPartsPlayParticle;

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xF76B2C", Offset = "0xF76B2C", VA = "0xF76B2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xF76B98", Offset = "0xF76B98", VA = "0xF76B98", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xF76BB4", Offset = "0xF76BB4", VA = "0xF76BB4", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xF76BD0", Offset = "0xF76BD0", VA = "0xF76BD0")]
		public ToyBlastPuzzleEffectStartBombMix()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Effect.Common
{
	[Token(Token = "0x2000597")]
	public class ToyBlastPuzzleEffectBreakBlockInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EnumToyBlastPuzzlePanelColor PanelColor;

		[Token(Token = "0x1700029A")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xFAD5CC", Offset = "0xFAD5CC", VA = "0xFAD5CC", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xFAD57C", Offset = "0xFAD57C", VA = "0xFAD57C")]
		public ToyBlastPuzzleEffectBreakBlockInfo(Vector3 localPos, EnumToyBlastPuzzlePanelColor panelColor)
		{
		}
	}
	[Token(Token = "0x2000598")]
	public class ToyBlastPuzzleEffectBreakBlock : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectBreakBlockInfo>
	{
		[Serializable]
		[Token(Token = "0x2000599")]
		public class ToyBlastPuzzleBreakBlockInfo
		{
			[Token(Token = "0x4001AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color MainColor;

			[Token(Token = "0x4001AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color GlowColor;

			[Token(Token = "0x4001AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Material PanelMaterial;

			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xF953FC", Offset = "0xF953FC", VA = "0xF953FC")]
			public ToyBlastPuzzleBreakBlockInfo()
			{
			}
		}

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<ToyBlastPuzzleBreakBlockInfo> _toyBlastPuzzleBreakBlockInfoList;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem _mainParticleSystem;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem _glowParticleSystem;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ParticleSystemRenderer _panelParticleSystemRenderer;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ToyBlastPuzzleEffectPartsPlayParticle _toyBlastPuzzleEffectPartsPlayParticle;

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xFAD218", Offset = "0xFAD218", VA = "0xFAD218")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xFAD278", Offset = "0xFAD278", VA = "0xFAD278", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xFAD4AC", Offset = "0xFAD4AC", VA = "0xFAD4AC", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xFAD4C4", Offset = "0xFAD4C4", VA = "0xFAD4C4")]
		public ToyBlastPuzzleEffectBreakBlock()
		{
		}
	}
	[Token(Token = "0x200059A")]
	public class ToyBlastPuzzleEffectBulletHitBlockInfo : ToyBlastPuzzleEffectInfoBase
	{
		[Token(Token = "0x1700029B")]
		public override EnumToyBlastPuzzleEffectType EffectType
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0xFAED0C", Offset = "0xFAED0C", VA = "0xFAED0C", Slot = "4")]
			get
			{
				return default(EnumToyBlastPuzzleEffectType);
			}
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xFAECC4", Offset = "0xFAECC4", VA = "0xFAECC4")]
		public ToyBlastPuzzleEffectBulletHitBlockInfo(Vector3 localPos)
		{
		}
	}
	[Token(Token = "0x200059B")]
	public class ToyBlastPuzzleEffectBulletHitBlock : ToyBlastPuzzleEffectBase<ToyBlastPuzzleEffectBulletHitBlockInfo>
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ToyBlastPuzzleEffectPartsPlayParticle _toyBlastPuzzleEffectPartsPlayParticle;

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xFAEBB0", Offset = "0xFAEBB0", VA = "0xFAEBB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xFAEC1C", Offset = "0xFAEC1C", VA = "0xFAEC1C", Slot = "10")]
		protected override void InitCore()
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xFAEC34", Offset = "0xFAEC34", VA = "0xFAEC34", Slot = "11")]
		public override bool UpdateEffectCore()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xFAEC4C", Offset = "0xFAEC4C", VA = "0xFAEC4C")]
		public ToyBlastPuzzleEffectBulletHitBlock()
		{
		}
	}
	[Token(Token = "0x200059C")]
	public class ToyBlastPuzzleEffectPartsPlayParticle
	{
		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ParticleSystem[] _particleSystemList;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isCallParticleSystemPlay;

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xFB4140", Offset = "0xFB4140", VA = "0xFB4140")]
		public void SetParticleList(ParticleSystem[] list)
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xFACF70", Offset = "0xFACF70", VA = "0xFACF70")]
		public void PlayParticleList()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xFAD038", Offset = "0xFAD038", VA = "0xFAD038")]
		public bool UpdateParticleList()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xFAD178", Offset = "0xFAD178", VA = "0xFAD178")]
		public ToyBlastPuzzleEffectPartsPlayParticle()
		{
		}
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.Debug
{
	[Token(Token = "0x200059D")]
	public enum DebugEnumToyBlastPuzzleItemTypeDummy
	{
		[Token(Token = "0x4001AFA")]
		None,
		[Token(Token = "0x4001AFB")]
		TapPanelBreak,
		[Token(Token = "0x4001AFC")]
		Deprecated_LinePanelBreak,
		[Token(Token = "0x4001AFD")]
		SquarePanelBreak,
		[Token(Token = "0x4001AFE")]
		Deprecated_ShufflePanel,
		[Token(Token = "0x4001AFF")]
		EnchoBomb,
		[Token(Token = "0x4001B00")]
		WaterGun,
		[Token(Token = "0x4001B01")]
		StartBoostBombPanel,
		[Token(Token = "0x4001B02")]
		StartBoostBlastPanel,
		[Token(Token = "0x4001B03")]
		StartBoostAngryEncho,
		[Token(Token = "0x4001B04")]
		RainbowCandy,
		[Token(Token = "0x4001B05")]
		ShowOneMoveAnswer,
		[Token(Token = "0x4001B06")]
		SilverPocketWatch,
		[Token(Token = "0x4001B07")]
		GoldPocketWatch,
		[Token(Token = "0x4001B08")]
		Hammer,
		[Token(Token = "0x4001B09")]
		PaperFan,
		[Token(Token = "0x4001B0A")]
		VacuumCleaner,
		[Token(Token = "0x4001B0B")]
		Max
	}
}
namespace Assets.Scripts.ToyBlastPuzzle.DataManager
{
	[Token(Token = "0x200059E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x88203C", Offset = "0x88203C")]
	public class DescriptionGimmickData : ScriptableObject
	{
		[Token(Token = "0x200059F")]
		public enum EnumDescriptionGimmickDataTargetType
		{
			[Token(Token = "0x4001B14")]
			Panel,
			[Token(Token = "0x4001B15")]
			Tile,
			[Token(Token = "0x4001B16")]
			Ornament,
			[Token(Token = "0x4001B17")]
			OrnamentColorCage,
			[Token(Token = "0x4001B18")]
			AppearBomb,
			[Token(Token = "0x4001B19")]
			BombMix
		}

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Id;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip VoiceAudioClipJapanese;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip VoiceAudioClipEnglish;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EnumDescriptionGimmickDataTargetType TargetType;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<EnumToyBlastPuzzlePanelType> PanelTypeList;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<EnumToyBlastPuzzleTileType> TileTypeList;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<EnumToyBlastPuzzleOrnamentType> OrnamentTypeList;

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x122D9F4", Offset = "0x122D9F4", VA = "0x122D9F4")]
		public AudioClip GetVoice(ConfigLanguage language)
		{
			return null;
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x122DA0C", Offset = "0x122DA0C", VA = "0x122DA0C")]
		public DescriptionGimmickData()
		{
		}
	}
	[Token(Token = "0x20005A0")]
	public class DescriptionGimmickDataManager : MonoBehaviour
	{
		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88204C", Offset = "0x88204C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EnumToyBlastPuzzlePanelType panelType;

			[Token(Token = "0x6001B08")]
			[Address(RVA = "0xC06AA0", Offset = "0xC06AA0", VA = "0xC06AA0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001B09")]
			[Address(RVA = "0xC06AA8", Offset = "0xC06AA8", VA = "0xC06AA8")]
			internal bool <GetDescriptionGimmickData>b__0(DescriptionGimmickData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88205C", Offset = "0x88205C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EnumToyBlastPuzzleTileType tileType;

			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0xC06B10", Offset = "0xC06B10", VA = "0xC06B10")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0xC06B18", Offset = "0xC06B18", VA = "0xC06B18")]
			internal bool <GetDescriptionGimmickData>b__0(DescriptionGimmickData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88206C", Offset = "0x88206C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EnumToyBlastPuzzleOrnamentType ornamentType;

			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0xC06B80", Offset = "0xC06B80", VA = "0xC06B80")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0xC06B88", Offset = "0xC06B88", VA = "0xC06B88")]
			internal bool <GetDescriptionGimmickData>b__0(DescriptionGimmickData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<DescriptionGimmickData> _descriptionGimmickDataList;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<DescriptionGimmickData> _descriptionPanelList;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<DescriptionGimmickData> _descriptionTileList;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<DescriptionGimmickData> _descriptionOrnamentList;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E5C8", Offset = "0x88E5C8")]
		private DescriptionGimmickData <DescriptionOrnamentColorCageData>k__BackingField;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E5D8", Offset = "0x88E5D8")]
		private DescriptionGimmickData <DescriptionAppearBombData>k__BackingField;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E5E8", Offset = "0x88E5E8")]
		private DescriptionGimmickData <DescriptionBombMixData>k__BackingField;

		[Token(Token = "0x1700029C")]
		public DescriptionGimmickData DescriptionOrnamentColorCageData
		{
			[Token(Token = "0x6001B00")]
			[Address(RVA = "0x122DDC8", Offset = "0x122DDC8", VA = "0x122DDC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896C48", Offset = "0x896C48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B01")]
			[Address(RVA = "0x122DDD0", Offset = "0x122DDD0", VA = "0x122DDD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896C58", Offset = "0x896C58")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public DescriptionGimmickData DescriptionAppearBombData
		{
			[Token(Token = "0x6001B02")]
			[Address(RVA = "0x122DDD8", Offset = "0x122DDD8", VA = "0x122DDD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896C68", Offset = "0x896C68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B03")]
			[Address(RVA = "0x122DDE0", Offset = "0x122DDE0", VA = "0x122DDE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896C78", Offset = "0x896C78")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public DescriptionGimmickData DescriptionBombMixData
		{
			[Token(Token = "0x6001B04")]
			[Address(RVA = "0x122DDE8", Offset = "0x122DDE8", VA = "0x122DDE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896C88", Offset = "0x896C88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B05")]
			[Address(RVA = "0x122DDF0", Offset = "0x122DDF0", VA = "0x122DDF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896C98", Offset = "0x896C98")]
			private set
			{
			}
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x122DB04", Offset = "0x122DB04", VA = "0x122DB04")]
		public DescriptionGimmickData GetDescriptionGimmickData(EnumToyBlastPuzzlePanelType panelType)
		{
			return null;
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x122DBF0", Offset = "0x122DBF0", VA = "0x122DBF0")]
		public DescriptionGimmickData GetDescriptionGimmickData(EnumToyBlastPuzzleTileType tileType)
		{
			return null;
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x122DCDC", Offset = "0x122DCDC", VA = "0x122DCDC")]
		public DescriptionGimmickData GetDescriptionGimmickData(EnumToyBlastPuzzleOrnamentType ornamentType)
		{
			return null;
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x122DDF8", Offset = "0x122DDF8", VA = "0x122DDF8")]
		public void Init()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x122E084", Offset = "0x122E084", VA = "0x122E084")]
		public DescriptionGimmickDataManager()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x88207C", Offset = "0x88207C")]
	public class PuzzleTutorialVoiceData : ScriptableObject
	{
		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Id;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool IsLoop;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip VoiceAudioClipJapanese;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip VoiceAudioClipEnglish;

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x101E42C", Offset = "0x101E42C", VA = "0x101E42C")]
		public AudioClip GetVoice(ConfigLanguage language)
		{
			return null;
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x101E444", Offset = "0x101E444", VA = "0x101E444")]
		public PuzzleTutorialVoiceData()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class PuzzleTutorialVoiceDataManager : MonoBehaviour
	{
		[Token(Token = "0x20005A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88208C", Offset = "0x88208C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x6001B12")]
			[Address(RVA = "0xF8D234", Offset = "0xF8D234", VA = "0xF8D234")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001B13")]
			[Address(RVA = "0xF8D23C", Offset = "0xF8D23C", VA = "0xF8D23C")]
			internal bool <GetTutorialVoiceData>b__0(PuzzleTutorialVoiceData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<PuzzleTutorialVoiceData> _tutorialVoiceDataList;

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x101E44C", Offset = "0x101E44C", VA = "0x101E44C")]
		public PuzzleTutorialVoiceData GetTutorialVoiceData(int id)
		{
			return null;
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x101E538", Offset = "0x101E538", VA = "0x101E538")]
		public PuzzleTutorialVoiceDataManager()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x88209C", Offset = "0x88209C")]
	public class PuzzleVoiceData : ScriptableObject
	{
		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int EpisodeAreaId;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int EpisodeId;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip VoiceAudioClipJapanese;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip VoiceAudioClipEnglish;

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x101E5B0", Offset = "0x101E5B0", VA = "0x101E5B0")]
		public AudioClip GetVoice(ConfigLanguage language)
		{
			return null;
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x101E5C8", Offset = "0x101E5C8", VA = "0x101E5C8")]
		public PuzzleVoiceData()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class PuzzleVoiceDataManager : OnlyOneBehavior<PuzzleVoiceDataManager>
	{
		[Token(Token = "0x20005A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8820AC", Offset = "0x8820AC")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int targetEpisodeAreaId;

			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int targetEpisodeId;

			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0xF8D260", Offset = "0xF8D260", VA = "0xF8D260")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0xF8D268", Offset = "0xF8D268", VA = "0xF8D268")]
			internal bool <CreatePuzzleStartVoiceData>b__0(PuzzleVoiceData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<PuzzleVoiceData> _puzzleVoiceDataList;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<PuzzleVoiceData> _nextNormaVoiceDataList;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<PuzzleVoiceData> _stageClearStarCountVoiceDataList;

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x101E5D0", Offset = "0x101E5D0", VA = "0x101E5D0")]
		public void PlayVoiceData(PuzzleVoiceData startVoiceData)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x101E6F0", Offset = "0x101E6F0", VA = "0x101E6F0")]
		public PuzzleVoiceData CreatePuzzleStartVoiceData(ToyBlastPuzzleStageInfo stageInfo)
		{
			return null;
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x101E924", Offset = "0x101E924", VA = "0x101E924")]
		public PuzzleVoiceData CreatePuzzleNextNormaVoiceData()
		{
			return null;
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x101E970", Offset = "0x101E970", VA = "0x101E970")]
		public PuzzleVoiceData CreatePuzzleStageClearStarCountVoiceData(int starCount)
		{
			return null;
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x101E9E8", Offset = "0x101E9E8", VA = "0x101E9E8")]
		public PuzzleVoiceDataManager()
		{
		}
	}
}
namespace Assets.OutLineTest
{
	[Token(Token = "0x20005AA")]
	public class OutLineTestCharacter : MonoBehaviour
	{
		[Token(Token = "0x20005AB")]
		public enum EnumOutLineTestCharacterType
		{
			[Token(Token = "0x4001B36")]
			Default,
			[Token(Token = "0x4001B37")]
			OutLineOff,
			[Token(Token = "0x4001B38")]
			OutLineOn_Stencil,
			[Token(Token = "0x4001B39")]
			OutLineOn_GrabPass
		}

		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8820BC", Offset = "0x8820BC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isBanzai;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Animator> <>9__0;

			[Token(Token = "0x6001B20")]
			[Address(RVA = "0xC1349C", Offset = "0xC1349C", VA = "0xC1349C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001B21")]
			[Address(RVA = "0xC134A4", Offset = "0xC134A4", VA = "0xC134A4")]
			internal void <SetIsBanzaiAnimationFlag>b__0(Animator x)
			{
			}
		}

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> _objList;

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xF706FC", Offset = "0xF706FC", VA = "0xF706FC")]
		public void SetIsBanzaiAnimationFlag(bool isBanzai)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xF70BA0", Offset = "0xF70BA0", VA = "0xF70BA0")]
		public void SetOutLineTestCharacterType(EnumOutLineTestCharacterType type)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xF70C58", Offset = "0xF70C58", VA = "0xF70C58")]
		public OutLineTestCharacter()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	public class OutLineTestRotation : MonoBehaviour
	{
		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xF71690", Offset = "0xF71690", VA = "0xF71690")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xF71694", Offset = "0xF71694", VA = "0xF71694")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xF716E8", Offset = "0xF716E8", VA = "0xF716E8")]
		public OutLineTestRotation()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	public class OutLineTestManager : OnlyOneBehavior<OutLineTestManager>
	{
		[Token(Token = "0x20005AF")]
		public enum EnumOutLineTestType
		{
			[Token(Token = "0x4001B43")]
			One,
			[Token(Token = "0x4001B44")]
			OverlapHorizontal,
			[Token(Token = "0x4001B45")]
			OverlapVertical,
			[Token(Token = "0x4001B46")]
			OverlapTree,
			[Token(Token = "0x4001B47")]
			PerformanceTest,
			[Token(Token = "0x4001B48")]
			Compare
		}

		[Serializable]
		[Token(Token = "0x20005B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8820CC", Offset = "0x8820CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<List<OutLineTestCharacter>, IEnumerable<OutLineTestCharacter>> <>9__8_0;

			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0xC1356C", Offset = "0xC1356C", VA = "0xC1356C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0xC13574", Offset = "0xC13574", VA = "0xC13574")]
			internal IEnumerable<OutLineTestCharacter> <SetEnumOutLineTestCharacterType>b__8_0(List<OutLineTestCharacter> x)
			{
				return null;
			}
		}

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EnumOutLineTestType _defaultEnumOutLineTestType;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private OutLineTestCharacter.EnumOutLineTestCharacterType _defaultEnumOutLineTestCharacterType;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<GameObject> _objList;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<EnumOutLineTestType, List<OutLineTestCharacter>> _outLineCharacterListDictionary;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EnumOutLineTestType _currentEnumOutLineTestType;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private OutLineTestCharacter.EnumOutLineTestCharacterType _currentEnumOutLineTestCharacterType;

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xF70CD0", Offset = "0xF70CD0", VA = "0xF70CD0")]
		public void SetEnumOutLineTestType(EnumOutLineTestType type)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xF70D84", Offset = "0xF70D84", VA = "0xF70D84")]
		public void SetEnumOutLineTestCharacterType(OutLineTestCharacter.EnumOutLineTestCharacterType type)
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xF70F84", Offset = "0xF70F84", VA = "0xF70F84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xF715A4", Offset = "0xF715A4", VA = "0xF715A4")]
		public OutLineTestManager()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xF71670", Offset = "0xF71670", VA = "0xF71670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896CA8", Offset = "0x896CA8")]
		private void <SetEnumOutLineTestCharacterType>b__8_1(OutLineTestCharacter x)
		{
		}
	}
}
namespace OutLineTest
{
	[Token(Token = "0x20005B1")]
	public class AnisotropicTestManager : OnlyOneBehavior<AnisotropicTestManager>
	{
		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject cube;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject cubeLevel1;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject cubeLevel2;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject cubeLevel6;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject cubeLevel10;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject cubeLevel16;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject[] _cubeLevels;

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xE248E0", Offset = "0xE248E0", VA = "0xE248E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xE249F4", Offset = "0xE249F4", VA = "0xE249F4")]
		public void SetEnableCubeLevel(int target)
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xE24AAC", Offset = "0xE24AAC", VA = "0xE24AAC")]
		public AnisotropicTestManager()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20005B2")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700029F")]
		public bool Highlight
		{
			[Token(Token = "0x6001B30")]
			[Address(RVA = "0x127A0BC", Offset = "0x127A0BC", VA = "0x127A0BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B31")]
			[Address(RVA = "0x127A0C4", Offset = "0x127A0C4", VA = "0x127A0C4")]
			set
			{
			}
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x127A0D0", Offset = "0x127A0D0", VA = "0x127A0D0")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x127A298", Offset = "0x127A298", VA = "0x127A298", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x127A2C0", Offset = "0x127A2C0", VA = "0x127A2C0", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x127A2E8", Offset = "0x127A2E8", VA = "0x127A2E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x127A198", Offset = "0x127A198", VA = "0x127A198")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x127A580", Offset = "0x127A580", VA = "0x127A580")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20005B3")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170002A0")]
		public bool InRange
		{
			[Token(Token = "0x6001B39")]
			[Address(RVA = "0x122E240", Offset = "0x122E240", VA = "0x122E240")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0x122E248", Offset = "0x122E248", VA = "0x122E248")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public bool Targeted
		{
			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0x122E3C4", Offset = "0x122E3C4", VA = "0x122E3C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0x122E3CC", Offset = "0x122E3CC", VA = "0x122E3CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x122E3D8", Offset = "0x122E3D8", VA = "0x122E3D8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x122E254", Offset = "0x122E254", VA = "0x122E254")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x122E508", Offset = "0x122E508", VA = "0x122E508")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20005B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8820DC", Offset = "0x8820DC")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170002A2")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001B40")]
			[Address(RVA = "0x122E510", Offset = "0x122E510", VA = "0x122E510")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B41")]
			[Address(RVA = "0x122E518", Offset = "0x122E518", VA = "0x122E518")]
			set
			{
			}
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x122E534", Offset = "0x122E534", VA = "0x122E534", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x122E764", Offset = "0x122E764", VA = "0x122E764", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x122F024", Offset = "0x122F024", VA = "0x122F024", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x122F49C", Offset = "0x122F49C", VA = "0x122F49C", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x122F75C", Offset = "0x122F75C", VA = "0x122F75C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x122E9B8", Offset = "0x122E9B8", VA = "0x122E9B8")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x122F84C", Offset = "0x122F84C", VA = "0x122F84C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x122FC48", Offset = "0x122FC48", VA = "0x122FC48", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x122FC60", Offset = "0x122FC60", VA = "0x122FC60", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x122FC68", Offset = "0x122FC68", VA = "0x122FC68")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20005B5")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x12B53A8", Offset = "0x12B53A8", VA = "0x12B53A8")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x12B5460", Offset = "0x12B5460", VA = "0x12B5460")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x12B5518", Offset = "0x12B5518", VA = "0x12B5518")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20005B7")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001B74")]
			Disabled,
			[Token(Token = "0x4001B75")]
			Enabled,
			[Token(Token = "0x4001B76")]
			Targeted
		}

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x12B5520", Offset = "0x12B5520", VA = "0x12B5520")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x12B5584", Offset = "0x12B5584", VA = "0x12B5584")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x12B5620", Offset = "0x12B5620", VA = "0x12B5620")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x12B5668", Offset = "0x12B5668", VA = "0x12B5668")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x11139F4", Offset = "0x11139F4", VA = "0x11139F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x1113AE0", Offset = "0x1113AE0", VA = "0x1113AE0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x1113AEC", Offset = "0x1113AEC", VA = "0x1113AEC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x1113AF8", Offset = "0x1113AF8", VA = "0x1113AF8")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xE324A4", Offset = "0xE324A4", VA = "0xE324A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xE324F8", Offset = "0xE324F8", VA = "0xE324F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xE32864", Offset = "0xE32864", VA = "0xE32864")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xE32968", Offset = "0xE32968", VA = "0xE32968")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xE324FC", Offset = "0xE324FC", VA = "0xE324FC")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xE32A6C", Offset = "0xE32A6C", VA = "0xE32A6C")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20005BB")]
		public enum ContactTest
		{
			[Token(Token = "0x4001B88")]
			PerpenTest,
			[Token(Token = "0x4001B89")]
			BackwardsPress
		}

		[Token(Token = "0x4001B7A")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001B7B")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170002A3")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0xE32D70", Offset = "0xE32D70", VA = "0xE32D70", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A4")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0xE32D78", Offset = "0xE32D78", VA = "0xE32D78")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xE32D84", Offset = "0xE32D84", VA = "0xE32D84", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xE32E70", Offset = "0xE32E70", VA = "0xE32E70")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xE32FDC", Offset = "0xE32FDC", VA = "0xE32FDC", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xE33580", Offset = "0xE33580", VA = "0xE33580")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xE33498", Offset = "0xE33498", VA = "0xE33498")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xE3362C", Offset = "0xE3362C", VA = "0xE3362C")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xE336B0", Offset = "0xE336B0", VA = "0xE336B0")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xE3373C", Offset = "0xE3373C", VA = "0xE3373C")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20005BC")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E818", Offset = "0x88E818")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E828", Offset = "0x88E828")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170002A5")]
		public Collider Collider
		{
			[Token(Token = "0x6001B67")]
			[Address(RVA = "0xE33970", Offset = "0xE33970", VA = "0xE33970", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896CB8", Offset = "0x896CB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B68")]
			[Address(RVA = "0xE33978", Offset = "0xE33978", VA = "0xE33978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896CC8", Offset = "0x896CC8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001B69")]
			[Address(RVA = "0xE33980", Offset = "0xE33980", VA = "0xE33980", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896CD8", Offset = "0x896CD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0xE33988", Offset = "0xE33988", VA = "0xE33988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896CE8", Offset = "0x896CE8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0xE33990", Offset = "0xE33990", VA = "0xE33990", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xE339E0", Offset = "0xE339E0", VA = "0xE339E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xE33A64", Offset = "0xE33A64", VA = "0xE33A64")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public interface ColliderZone
	{
		[Token(Token = "0x170002A8")]
		Collider Collider
		{
			[Token(Token = "0x6001B6E")]
			get;
		}

		[Token(Token = "0x170002A9")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001B6F")]
			get;
		}

		[Token(Token = "0x170002AA")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001B70")]
			get;
		}
	}
	[Token(Token = "0x20005BE")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x127A01C", Offset = "0x127A01C", VA = "0x127A01C")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public enum InteractionType
	{
		[Token(Token = "0x4001B92")]
		Enter,
		[Token(Token = "0x4001B93")]
		Stay,
		[Token(Token = "0x4001B94")]
		Exit
	}
	[Token(Token = "0x20005C0")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20005C1")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001BA6")]
			Mesh,
			[Token(Token = "0x4001BA7")]
			Skeleton,
			[Token(Token = "0x4001BA8")]
			Both
		}

		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88213C", Offset = "0x88213C")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170002B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B93")]
				[Address(RVA = "0xC0AB00", Offset = "0xC0AB00", VA = "0xC0AB00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B95")]
				[Address(RVA = "0xC0AB48", Offset = "0xC0AB48", VA = "0xC0AB48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B90")]
			[Address(RVA = "0xC0A8A0", Offset = "0xC0A8A0", VA = "0xC0A8A0")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001B91")]
			[Address(RVA = "0xC0A8CC", Offset = "0xC0A8CC", VA = "0xC0A8CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B92")]
			[Address(RVA = "0xC0A8D0", Offset = "0xC0A8D0", VA = "0xC0A8D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B94")]
			[Address(RVA = "0xC0AB08", Offset = "0xC0AB08", VA = "0xC0AB08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B95")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E858", Offset = "0x88E858")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170002AB")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001B72")]
			[Address(RVA = "0x12AD22C", Offset = "0x12AD22C", VA = "0x12AD22C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B73")]
			[Address(RVA = "0x12B8400", Offset = "0x12B8400", VA = "0x12B8400")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001B74")]
			[Address(RVA = "0x12B8468", Offset = "0x12B8468", VA = "0x12B8468")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0x12B84A0", Offset = "0x12B84A0", VA = "0x12B84A0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0x12B8508", Offset = "0x12B8508", VA = "0x12B8508")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B77")]
			[Address(RVA = "0x12B8540", Offset = "0x12B8540", VA = "0x12B8540")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001B78")]
			[Address(RVA = "0x12B85A8", Offset = "0x12B85A8", VA = "0x12B85A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B79")]
			[Address(RVA = "0x12B85E0", Offset = "0x12B85E0", VA = "0x12B85E0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0x12B8648", Offset = "0x12B8648", VA = "0x12B8648")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0x12B8680", Offset = "0x12B8680", VA = "0x12B8680")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0x12AD1F8", Offset = "0x12AD1F8", VA = "0x12AD1F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0x12B86E8", Offset = "0x12B86E8", VA = "0x12B86E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0x12B874C", Offset = "0x12B874C", VA = "0x12B874C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0x12B8780", Offset = "0x12B8780", VA = "0x12B8780")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001B80")]
			[Address(RVA = "0x12B87E4", Offset = "0x12B87E4", VA = "0x12B87E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B81")]
			[Address(RVA = "0x12B8818", Offset = "0x12B8818", VA = "0x12B8818")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001B82")]
			[Address(RVA = "0x12B887C", Offset = "0x12B887C", VA = "0x12B887C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B83")]
			[Address(RVA = "0x12B88B0", Offset = "0x12B88B0", VA = "0x12B88B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0x12B8914", Offset = "0x12B8914", VA = "0x12B8914")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B85")]
			[Address(RVA = "0x12B8948", Offset = "0x12B8948", VA = "0x12B8948")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001B86")]
			[Address(RVA = "0x12B89AC", Offset = "0x12B89AC", VA = "0x12B89AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896CF8", Offset = "0x896CF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B87")]
			[Address(RVA = "0x12B89F8", Offset = "0x12B89F8", VA = "0x12B89F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896D08", Offset = "0x896D08")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x12B8A48", Offset = "0x12B8A48", VA = "0x12B8A48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x12B8DF0", Offset = "0x12B8DF0", VA = "0x12B8DF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x12B8D84", Offset = "0x12B8D84", VA = "0x12B8D84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x896D18", Offset = "0x896D18")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x12B8E78", Offset = "0x12B8E78", VA = "0x12B8E78")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x12B8F5C", Offset = "0x12B8F5C", VA = "0x12B8F5C")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x12B913C", Offset = "0x12B913C", VA = "0x12B913C")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x12AD06C", Offset = "0x12AD06C", VA = "0x12AD06C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x12B9378", Offset = "0x12B9378", VA = "0x12B9378")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005C4")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xC0B738", Offset = "0xC0B738", VA = "0xC0B738")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170002B8")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0x1790044", Offset = "0x1790044", VA = "0x1790044")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B9")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x179004C", Offset = "0x179004C", VA = "0x179004C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0x1790054", Offset = "0x1790054", VA = "0x1790054")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BB")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001B99")]
			[Address(RVA = "0x179005C", Offset = "0x179005C", VA = "0x179005C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000027")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0x1790064", Offset = "0x1790064", VA = "0x1790064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896DC8", Offset = "0x896DC8")]
			add
			{
			}
			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0x1790104", Offset = "0x1790104", VA = "0x1790104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896DD8", Offset = "0x896DD8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0x1790214", Offset = "0x1790214", VA = "0x1790214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896DE8", Offset = "0x896DE8")]
			add
			{
			}
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0x17902B4", Offset = "0x17902B4", VA = "0x17902B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896DF8", Offset = "0x896DF8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0x17903C4", Offset = "0x17903C4", VA = "0x17903C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896E08", Offset = "0x896E08")]
			add
			{
			}
			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0x1790464", Offset = "0x1790464", VA = "0x1790464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896E18", Offset = "0x896E18")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x17901A4", Offset = "0x17901A4", VA = "0x17901A4", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x1790354", Offset = "0x1790354", VA = "0x1790354", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x1790504", Offset = "0x1790504", VA = "0x1790504", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001BA3")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x1790574", Offset = "0x1790574", VA = "0x1790574", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x17906A0", Offset = "0x17906A0", VA = "0x17906A0", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x17907CC", Offset = "0x17907CC", VA = "0x17907CC")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4001BB4")]
		None,
		[Token(Token = "0x4001BB5")]
		Proximity,
		[Token(Token = "0x4001BB6")]
		Contact,
		[Token(Token = "0x4001BB7")]
		Action
	}
	[Token(Token = "0x20005C6")]
	public enum InteractableState
	{
		[Token(Token = "0x4001BB9")]
		Default,
		[Token(Token = "0x4001BBA")]
		ProximityState,
		[Token(Token = "0x4001BBB")]
		ContactState,
		[Token(Token = "0x4001BBC")]
		ActionState
	}
	[Token(Token = "0x20005C7")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x179090C", Offset = "0x179090C", VA = "0x179090C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20005C8")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170002BC")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0x1790818", Offset = "0x1790818", VA = "0x1790818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x17905D4", Offset = "0x17905D4", VA = "0x17905D4")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x1790700", Offset = "0x1790700", VA = "0x1790700")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x179087C", Offset = "0x179087C", VA = "0x179087C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88214C", Offset = "0x88214C")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170002BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BB6")]
				[Address(RVA = "0xC0BC20", Offset = "0xC0BC20", VA = "0xC0BC20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BB8")]
				[Address(RVA = "0xC0BC68", Offset = "0xC0BC68", VA = "0xC0BC68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0xC0B784", Offset = "0xC0B784", VA = "0xC0B784")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001BB3")]
			[Address(RVA = "0xC0B7B0", Offset = "0xC0B7B0", VA = "0xC0B7B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BB4")]
			[Address(RVA = "0xC0B820", Offset = "0xC0B820", VA = "0xC0B820", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0xC0B7CC", Offset = "0xC0B7CC", VA = "0xC0B7CC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0xC0BC28", Offset = "0xC0BC28", VA = "0xC0BC28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x17915F8", Offset = "0x17915F8", VA = "0x17915F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x1791674", Offset = "0x1791674", VA = "0x1791674")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x896E28", Offset = "0x896E28")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x17916FC", Offset = "0x17916FC", VA = "0x17916FC")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x17917E4", Offset = "0x17917E4", VA = "0x17917E4")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20005CB")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170002BF")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0x17917EC", Offset = "0x17917EC", VA = "0x17917EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x1791968", Offset = "0x1791968", VA = "0x1791968")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x1791A10", Offset = "0x1791A10", VA = "0x1791A10")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x1791AB8", Offset = "0x1791AB8", VA = "0x1791AB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x1791D80", Offset = "0x1791D80", VA = "0x1791D80")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x1791DC8", Offset = "0x1791DC8", VA = "0x1791DC8")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x179205C", Offset = "0x179205C", VA = "0x179205C")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x17921A8", Offset = "0x17921A8", VA = "0x17921A8")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20005CC")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88215C", Offset = "0x88215C")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170002C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BD2")]
				[Address(RVA = "0xC08CD4", Offset = "0xC08CD4", VA = "0xC08CD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BD4")]
				[Address(RVA = "0xC08D1C", Offset = "0xC08D1C", VA = "0xC08D1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0xC088C0", Offset = "0xC088C0", VA = "0xC088C0")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0xC088EC", Offset = "0xC088EC", VA = "0xC088EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0xC088F0", Offset = "0xC088F0", VA = "0xC088F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0xC08CDC", Offset = "0xC08CDC", VA = "0xC08CDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BD5")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170002C0")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0x12ACC48", Offset = "0x12ACC48", VA = "0x12ACC48", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002C1")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0x12ACC50", Offset = "0x12ACC50", VA = "0x12ACC50", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002C2")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001BC3")]
			[Address(RVA = "0x12ACC58", Offset = "0x12ACC58", VA = "0x12ACC58", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C3")]
		public override bool EnableState
		{
			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0x12ACC60", Offset = "0x12ACC60", VA = "0x12ACC60", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BC5")]
			[Address(RVA = "0x12ACC8C", Offset = "0x12ACC8C", VA = "0x12ACC8C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x12ACCC8", Offset = "0x12ACCC8", VA = "0x12ACCC8", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x12ACD68", Offset = "0x12ACD68", VA = "0x12ACD68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x896ED8", Offset = "0x896ED8")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x12ACDD4", Offset = "0x12ACDD4", VA = "0x12ACDD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x12AD264", Offset = "0x12AD264", VA = "0x12AD264")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x12AD3F0", Offset = "0x12AD3F0", VA = "0x12AD3F0")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x12AD4E4", Offset = "0x12AD4E4", VA = "0x12AD4E4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x12AD7DC", Offset = "0x12AD7DC", VA = "0x12AD7DC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x12AD7E0", Offset = "0x12AD7E0", VA = "0x12AD7E0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x12AD7E4", Offset = "0x12AD7E4", VA = "0x12AD7E4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20005CE")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E8E8", Offset = "0x88E8E8")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E8F8", Offset = "0x88E8F8")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E908", Offset = "0x88E908")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170002C6")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0x12AD7FC", Offset = "0x12AD7FC", VA = "0x12AD7FC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896F88", Offset = "0x896F88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0x12AD804", Offset = "0x12AD804", VA = "0x12AD804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896F98", Offset = "0x896F98")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public bool EnableState
		{
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0x12AD80C", Offset = "0x12AD80C", VA = "0x12AD80C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0x12AD828", Offset = "0x12AD828", VA = "0x12AD828", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0x12AD848", Offset = "0x12AD848", VA = "0x12AD848", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896FA8", Offset = "0x896FA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0x12AD850", Offset = "0x12AD850", VA = "0x12AD850", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896FB8", Offset = "0x896FB8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public float SphereRadius
		{
			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0x12AD85C", Offset = "0x12AD85C", VA = "0x12AD85C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896FC8", Offset = "0x896FC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BDC")]
			[Address(RVA = "0x12AD864", Offset = "0x12AD864", VA = "0x12AD864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896FD8", Offset = "0x896FD8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x12AD86C", Offset = "0x12AD86C", VA = "0x12AD86C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x12AD8B4", Offset = "0x12AD8B4", VA = "0x12AD8B4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x12AD8B8", Offset = "0x12AD8B8", VA = "0x12AD8B8")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20005CF")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001BE8")]
		None = 0,
		[Token(Token = "0x4001BE9")]
		Ray = 1,
		[Token(Token = "0x4001BEA")]
		Poke = 4,
		[Token(Token = "0x4001BEB")]
		All = -1
	}
	[Token(Token = "0x20005D0")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001BED")]
		Inactive,
		[Token(Token = "0x4001BEE")]
		PrimaryInputDown,
		[Token(Token = "0x4001BEF")]
		PrimaryInputDownStay,
		[Token(Token = "0x4001BF0")]
		PrimaryInputUp
	}
	[Token(Token = "0x20005D1")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x17907D4", Offset = "0x17907D4", VA = "0x17907D4")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20005D2")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E918", Offset = "0x88E918")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E928", Offset = "0x88E928")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E938", Offset = "0x88E938")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170002CA")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0x17909AC", Offset = "0x17909AC", VA = "0x17909AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CB")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0x17909B4", Offset = "0x17909B4", VA = "0x17909B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896FE8", Offset = "0x896FE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0x17909BC", Offset = "0x17909BC", VA = "0x17909BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896FF8", Offset = "0x896FF8")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001BE4")]
			get;
		}

		[Token(Token = "0x170002CD")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001BE5")]
			get;
		}

		[Token(Token = "0x170002CE")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001BE6")]
			get;
		}

		[Token(Token = "0x170002CF")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0x17909C8", Offset = "0x17909C8", VA = "0x17909C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x897008", Offset = "0x897008")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0x17909D4", Offset = "0x17909D4", VA = "0x17909D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x897018", Offset = "0x897018")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0x17909E0", Offset = "0x17909E0", VA = "0x17909E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x897028", Offset = "0x897028")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0x17909EC", Offset = "0x17909EC", VA = "0x17909EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x897038", Offset = "0x897038")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001BEF")]
			get;
			[Token(Token = "0x6001BF0")]
			set;
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x17909F8", Offset = "0x17909F8", VA = "0x17909F8")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001BEC")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001BED")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001BEE")]
		public abstract void DeFocus();

		[Token(Token = "0x6001BF1")]
		public abstract void Initialize();

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x1790A00", Offset = "0x1790A00", VA = "0x1790A00")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x1790A4C", Offset = "0x1790A4C", VA = "0x1790A4C")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x1790AA0", Offset = "0x1790AA0", VA = "0x1790AA0", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x1790D34", Offset = "0x1790D34", VA = "0x1790D34", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x17914B0", Offset = "0x17914B0", VA = "0x17914B0")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20005D3")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170002D2")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001BF7")]
			get;
		}

		[Token(Token = "0x170002D3")]
		bool EnableState
		{
			[Token(Token = "0x6001BF9")]
			get;
			[Token(Token = "0x6001BFA")]
			set;
		}

		[Token(Token = "0x170002D4")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001BFB")]
			get;
			[Token(Token = "0x6001BFC")]
			set;
		}

		[Token(Token = "0x6001BF8")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20005D4")]
	public class PinchStateModule
	{
		[Token(Token = "0x20005D5")]
		private enum PinchState
		{
			[Token(Token = "0x4001C01")]
			None,
			[Token(Token = "0x4001C02")]
			PinchDown,
			[Token(Token = "0x4001C03")]
			PinchStay,
			[Token(Token = "0x4001C04")]
			PinchUp
		}

		[Token(Token = "0x4001BFD")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170002D5")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0x1114E20", Offset = "0x1114E20", VA = "0x1114E20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D6")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0x1114EA8", Offset = "0x1114EA8", VA = "0x1114EA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D7")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0x1114F30", Offset = "0x1114F30", VA = "0x1114F30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x1114FB8", Offset = "0x1114FB8", VA = "0x1114FB8")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x1114FE4", Offset = "0x1114FE4", VA = "0x1114FE4")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20005D6")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001C05")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001C06")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001C07")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001C08")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001C09")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88E958", Offset = "0x88E958")]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170002D8")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001C02")]
			[Address(RVA = "0x101F874", Offset = "0x101F874", VA = "0x101F874", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002D9")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001C03")]
			[Address(RVA = "0x101F87C", Offset = "0x101F87C", VA = "0x101F87C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002DA")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001C04")]
			[Address(RVA = "0x101F8F0", Offset = "0x101F8F0", VA = "0x101F8F0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DB")]
		public override bool EnableState
		{
			[Token(Token = "0x6001C05")]
			[Address(RVA = "0x101F8F8", Offset = "0x101F8F8", VA = "0x101F8F8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C06")]
			[Address(RVA = "0x101F93C", Offset = "0x101F93C", VA = "0x101F93C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x101F9B0", Offset = "0x101F9B0", VA = "0x101F9B0", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x101FA10", Offset = "0x101FA10", VA = "0x101FA10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x101FAB4", Offset = "0x101FAB4", VA = "0x101FAB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x101FD78", Offset = "0x101FD78", VA = "0x101FD78")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x101FE00", Offset = "0x101FE00", VA = "0x101FE00", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x10201A8", Offset = "0x10201A8", VA = "0x10201A8")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x10202B8", Offset = "0x10202B8", VA = "0x10202B8")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x10203DC", Offset = "0x10203DC", VA = "0x10203DC")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x10206E0", Offset = "0x10206E0", VA = "0x10206E0")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x1020A74", Offset = "0x1020A74", VA = "0x1020A74", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x1020B44", Offset = "0x1020B44", VA = "0x1020B44", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x1020B78", Offset = "0x1020B78", VA = "0x1020B78")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001C15")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001C16")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88E9CC", Offset = "0x88E9CC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170002DC")]
		public bool EnableState
		{
			[Token(Token = "0x6001C13")]
			[Address(RVA = "0x101F920", Offset = "0x101F920", VA = "0x101F920", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C14")]
			[Address(RVA = "0x101F958", Offset = "0x101F958", VA = "0x101F958", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001C15")]
			[Address(RVA = "0x1020C40", Offset = "0x1020C40", VA = "0x1020C40", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C16")]
			[Address(RVA = "0x101FD3C", Offset = "0x101FD3C", VA = "0x101FD3C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001C18")]
			[Address(RVA = "0x1020E84", Offset = "0x1020E84", VA = "0x1020E84", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x897048", Offset = "0x897048")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C19")]
			[Address(RVA = "0x1020E8C", Offset = "0x1020E8C", VA = "0x1020E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x897058", Offset = "0x897058")]
			set
			{
			}
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x1020C48", Offset = "0x1020C48", VA = "0x1020C48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x1020AA8", Offset = "0x1020AA8", VA = "0x1020AA8", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x1020E94", Offset = "0x1020E94", VA = "0x1020E94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x1021108", Offset = "0x1021108", VA = "0x1021108")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x10211F8", Offset = "0x10211F8", VA = "0x10211F8")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170002DF")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0x122FC88", Offset = "0x122FC88", VA = "0x122FC88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0x122FC90", Offset = "0x122FC90", VA = "0x122FC90")]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x122FD18", Offset = "0x122FD18", VA = "0x122FD18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0x122FD20", Offset = "0x122FD20", VA = "0x122FD20")]
			set
			{
			}
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x122FD8C", Offset = "0x122FD8C", VA = "0x122FD8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x1230040", Offset = "0x1230040", VA = "0x1230040")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x1230050", Offset = "0x1230050", VA = "0x1230050")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x1230060", Offset = "0x1230060", VA = "0x1230060")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20005D9")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x127C0A4", Offset = "0x127C0A4", VA = "0x127C0A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x127C0A8", Offset = "0x127C0A8", VA = "0x127C0A8")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x127C0E0", Offset = "0x127C0E0", VA = "0x127C0E0")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x127C118", Offset = "0x127C118", VA = "0x127C118")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x127C150", Offset = "0x127C150", VA = "0x127C150")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x127C188", Offset = "0x127C188", VA = "0x127C188")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x127C1C0", Offset = "0x127C1C0", VA = "0x127C1C0")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x127C1F8", Offset = "0x127C1F8", VA = "0x127C1F8")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x127C26C", Offset = "0x127C26C", VA = "0x127C26C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x127C2DC", Offset = "0x127C2DC", VA = "0x127C2DC")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20005DA")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x127D8B8", Offset = "0x127D8B8", VA = "0x127D8B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x127D8BC", Offset = "0x127D8BC", VA = "0x127D8BC")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x127C2A0", Offset = "0x127C2A0", VA = "0x127C2A0")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x127D8FC", Offset = "0x127D8FC", VA = "0x127D8FC")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20005DB")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88217C", Offset = "0x88217C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170002E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C3C")]
				[Address(RVA = "0xC14B84", Offset = "0xC14B84", VA = "0xC14B84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C3E")]
				[Address(RVA = "0xC14BCC", Offset = "0xC14BCC", VA = "0xC14BCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C39")]
			[Address(RVA = "0xC149A8", Offset = "0xC149A8", VA = "0xC149A8")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0xC149D4", Offset = "0xC149D4", VA = "0xC149D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0xC149D8", Offset = "0xC149D8", VA = "0xC149D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0xC14B8C", Offset = "0xC14B8C", VA = "0xC14B8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C26")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001C27")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x1112B24", Offset = "0x1112B24", VA = "0x1112B24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x1112BC4", Offset = "0x1112BC4", VA = "0x1112BC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x1112DF8", Offset = "0x1112DF8", VA = "0x1112DF8")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x1112D8C", Offset = "0x1112D8C", VA = "0x1112D8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x897068", Offset = "0x897068")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x1112E44", Offset = "0x1112E44", VA = "0x1112E44")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20005DE")]
		public enum SelectionState
		{
			[Token(Token = "0x4001C3D")]
			Off,
			[Token(Token = "0x4001C3E")]
			Selected,
			[Token(Token = "0x4001C3F")]
			Highlighted
		}

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170002E3")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0xE08954", Offset = "0xE08954", VA = "0xE08954")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001C40")]
			[Address(RVA = "0xE0895C", Offset = "0xE0895C", VA = "0xE0895C")]
			set
			{
			}
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xE08AE0", Offset = "0xE08AE0", VA = "0xE08AE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xE08CA8", Offset = "0xE08CA8", VA = "0xE08CA8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xE089E4", Offset = "0xE089E4", VA = "0xE089E4")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xE08D94", Offset = "0xE08D94", VA = "0xE08D94")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20005DF")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20005E0")]
		public enum SegmentType
		{
			[Token(Token = "0x4001C4E")]
			Straight,
			[Token(Token = "0x4001C4F")]
			LeftTurn,
			[Token(Token = "0x4001C50")]
			RightTurn,
			[Token(Token = "0x4001C51")]
			Switch
		}

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001C46")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001C47")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88EAAC", Offset = "0x88EAAC")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170002E4")]
		public float StartDistance
		{
			[Token(Token = "0x6001C46")]
			[Address(RVA = "0xE74AE8", Offset = "0xE74AE8", VA = "0xE74AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x897118", Offset = "0x897118")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C47")]
			[Address(RVA = "0xE74AF0", Offset = "0xE74AF0", VA = "0xE74AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x897128", Offset = "0x897128")]
			set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public float GridSize
		{
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0xE74AF8", Offset = "0xE74AF8", VA = "0xE74AF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C49")]
			[Address(RVA = "0xE74B00", Offset = "0xE74B00", VA = "0xE74B00")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public int SubDivCount
		{
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0xE74B08", Offset = "0xE74B08", VA = "0xE74B08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0xE74B10", Offset = "0xE74B10", VA = "0xE74B10")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public SegmentType Type
		{
			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0xE74B18", Offset = "0xE74B18", VA = "0xE74B18")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170002E8")]
		public Pose EndPose
		{
			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xE74B20", Offset = "0xE74B20", VA = "0xE74B20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E9")]
		public float Radius
		{
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xE74E7C", Offset = "0xE74E7C", VA = "0xE74E7C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002EA")]
		public float SegmentLength
		{
			[Token(Token = "0x6001C50")]
			[Address(RVA = "0xE74B88", Offset = "0xE74B88", VA = "0xE74B88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xE74E8C", Offset = "0xE74E8C", VA = "0xE74E8C")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xE74EA4", Offset = "0xE74EA4", VA = "0xE74EA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xE74BC8", Offset = "0xE74BC8", VA = "0xE74BC8")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xE74EA8", Offset = "0xE74EA8", VA = "0xE74EA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xE74EAC", Offset = "0xE74EAC", VA = "0xE74EAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xE74F14", Offset = "0xE74F14", VA = "0xE74F14")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xE757DC", Offset = "0xE757DC", VA = "0xE757DC")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xE75A68", Offset = "0xE75A68", VA = "0xE75A68")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20005E1")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88218C", Offset = "0x88218C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170002EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C66")]
				[Address(RVA = "0xF995DC", Offset = "0xF995DC", VA = "0xF995DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C68")]
				[Address(RVA = "0xF99624", Offset = "0xF99624", VA = "0xF99624", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C63")]
			[Address(RVA = "0xF99448", Offset = "0xF99448", VA = "0xF99448")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001C64")]
			[Address(RVA = "0xF99474", Offset = "0xF99474", VA = "0xF99474", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xF99478", Offset = "0xF99478", VA = "0xF99478", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C67")]
			[Address(RVA = "0xF995E4", Offset = "0xF995E4", VA = "0xF995E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C52")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4001C53")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x1872230", Offset = "0x1872230", VA = "0x1872230")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x18722D8", Offset = "0x18722D8", VA = "0x18722D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x1872388", Offset = "0x1872388", VA = "0x1872388")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x1872500", Offset = "0x1872500", VA = "0x1872500")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x18726C8", Offset = "0x18726C8", VA = "0x18726C8")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x18727B0", Offset = "0x18727B0", VA = "0x18727B0")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x18729B4", Offset = "0x18729B4", VA = "0x18729B4")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x18728C4", Offset = "0x18728C4", VA = "0x18728C4")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x18728D8", Offset = "0x18728D8", VA = "0x18728D8")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x1872A0C", Offset = "0x1872A0C", VA = "0x1872A0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x897138", Offset = "0x897138")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x1872A78", Offset = "0x1872A78", VA = "0x1872A78")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20005E3")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170002ED")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0x1872B28", Offset = "0x1872B28", VA = "0x1872B28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x1872B38", Offset = "0x1872B38", VA = "0x1872B38", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x1872B40", Offset = "0x1872B40", VA = "0x1872B40", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x1872E84", Offset = "0x1872E84", VA = "0x1872E84")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20005E4")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001C6B")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001C6C")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88EBAC", Offset = "0x88EBAC")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170002EE")]
		public float Distance
		{
			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0x1872F7C", Offset = "0x1872F7C", VA = "0x1872F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8971E8", Offset = "0x8971E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0x1872F84", Offset = "0x1872F84", VA = "0x1872F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8971F8", Offset = "0x8971F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public float Scale
		{
			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0x1872F8C", Offset = "0x1872F8C", VA = "0x1872F8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C70")]
			[Address(RVA = "0x1872F94", Offset = "0x1872F94", VA = "0x1872F94")]
			set
			{
			}
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x1872B3C", Offset = "0x1872B3C", VA = "0x1872B3C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x1872F9C", Offset = "0x1872F9C", VA = "0x1872F9C")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x1872B88", Offset = "0x1872B88", VA = "0x1872B88")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x1872DAC", Offset = "0x1872DAC", VA = "0x1872DAC")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001C75")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x1872EF0", Offset = "0x1872EF0", VA = "0x1872EF0")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20005E5")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88219C", Offset = "0x88219C")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170002F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C84")]
				[Address(RVA = "0xF99884", Offset = "0xF99884", VA = "0xF99884", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C86")]
				[Address(RVA = "0xF998CC", Offset = "0xF998CC", VA = "0xF998CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C81")]
			[Address(RVA = "0xF9962C", Offset = "0xF9962C", VA = "0xF9962C")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001C82")]
			[Address(RVA = "0xF99658", Offset = "0xF99658", VA = "0xF99658", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C83")]
			[Address(RVA = "0xF9965C", Offset = "0xF9965C", VA = "0xF9965C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C85")]
			[Address(RVA = "0xF9988C", Offset = "0xF9988C", VA = "0xF9988C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x1873140", Offset = "0x1873140", VA = "0x1873140")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x187318C", Offset = "0x187318C", VA = "0x187318C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x1873294", Offset = "0x1873294", VA = "0x1873294")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x18733DC", Offset = "0x18733DC", VA = "0x18733DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x18732F0", Offset = "0x18732F0", VA = "0x18732F0")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x18734B8", Offset = "0x18734B8", VA = "0x18734B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x897208", Offset = "0x897208")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x1873534", Offset = "0x1873534", VA = "0x1873534")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x18735E0", Offset = "0x18735E0", VA = "0x18735E0")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x1873640", Offset = "0x1873640", VA = "0x1873640")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20005E8")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001CA9")]
			Start,
			[Token(Token = "0x4001CAA")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001CAB")]
			Stop
		}

		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8821AC", Offset = "0x8821AC")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170002F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C99")]
				[Address(RVA = "0xF99B2C", Offset = "0xF99B2C", VA = "0xF99B2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C9B")]
				[Address(RVA = "0xF99B74", Offset = "0xF99B74", VA = "0xF99B74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C96")]
			[Address(RVA = "0xF998D4", Offset = "0xF998D4", VA = "0xF998D4")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001C97")]
			[Address(RVA = "0xF99900", Offset = "0xF99900", VA = "0xF99900", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C98")]
			[Address(RVA = "0xF99904", Offset = "0xF99904", VA = "0xF99904", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0xF99B34", Offset = "0xF99B34", VA = "0xF99B34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C8B")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001C8C")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001C8D")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001C8E")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88EC0C", Offset = "0x88EC0C")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x187369C", Offset = "0x187369C", VA = "0x187369C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x18737F0", Offset = "0x18737F0", VA = "0x18737F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x18737FC", Offset = "0x18737FC", VA = "0x18737FC", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x187394C", Offset = "0x187394C", VA = "0x187394C")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x1873770", Offset = "0x1873770", VA = "0x1873770")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8972B8", Offset = "0x8972B8")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x1873998", Offset = "0x1873998", VA = "0x1873998")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x18738E8", Offset = "0x18738E8", VA = "0x18738E8")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x1873B9C", Offset = "0x1873B9C", VA = "0x1873B9C")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x1873CC0", Offset = "0x1873CC0", VA = "0x1873CC0")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x1873C08", Offset = "0x1873C08", VA = "0x1873C08")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x1873D2C", Offset = "0x1873D2C", VA = "0x1873D2C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x1873D4C", Offset = "0x1873D4C", VA = "0x1873D4C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x1873DD8", Offset = "0x1873DD8", VA = "0x1873DD8")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x1873E90", Offset = "0x1873E90", VA = "0x1873E90")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x1873EA0", Offset = "0x1873EA0", VA = "0x1873EA0")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20005EA")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170002F4")]
		public float TrackLength
		{
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x1873F08", Offset = "0x1873F08", VA = "0x1873F08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x1873F10", Offset = "0x1873F10", VA = "0x1873F10")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x1873F18", Offset = "0x1873F18", VA = "0x1873F18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x1873020", Offset = "0x1873020", VA = "0x1873020")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x1873F1C", Offset = "0x1873F1C", VA = "0x1873F1C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x18740F0", Offset = "0x18740F0", VA = "0x18740F0")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x18741EC", Offset = "0x18741EC", VA = "0x18741EC")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20005EB")]
	public class Pose
	{
		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x1017A7C", Offset = "0x1017A7C", VA = "0x1017A7C")]
		public Pose()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x1017AC0", Offset = "0x1017AC0", VA = "0x1017AC0")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20005EC")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8821BC", Offset = "0x8821BC")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170002F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CB1")]
				[Address(RVA = "0xF9B4E8", Offset = "0xF9B4E8", VA = "0xF9B4E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CB3")]
				[Address(RVA = "0xF9B530", Offset = "0xF9B530", VA = "0xF9B530", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0xF9B340", Offset = "0xF9B340", VA = "0xF9B340")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0xF9B36C", Offset = "0xF9B36C", VA = "0xF9B36C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0xF9B370", Offset = "0xF9B370", VA = "0xF9B370", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0xF9B4F0", Offset = "0xF9B4F0", VA = "0xF9B4F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8821CC", Offset = "0x8821CC")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170002F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CB7")]
				[Address(RVA = "0xF9B634", Offset = "0xF9B634", VA = "0xF9B634", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CB9")]
				[Address(RVA = "0xF9B67C", Offset = "0xF9B67C", VA = "0xF9B67C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0xF9B538", Offset = "0xF9B538", VA = "0xF9B538")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0xF9B564", Offset = "0xF9B564", VA = "0xF9B564", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0xF9B568", Offset = "0xF9B568", VA = "0xF9B568", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xF9B63C", Offset = "0xF9B63C", VA = "0xF9B63C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CBE")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88EDF4", Offset = "0x88EDF4")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170002F5")]
		public bool IsMoving
		{
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0x116867C", Offset = "0x116867C", VA = "0x116867C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x897368", Offset = "0x897368")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x1168684", Offset = "0x1168684", VA = "0x1168684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x897378", Offset = "0x897378")]
			private set
			{
			}
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x1168690", Offset = "0x1168690", VA = "0x1168690")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x11686CC", Offset = "0x11686CC", VA = "0x11686CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x11687B0", Offset = "0x11687B0", VA = "0x11687B0")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x1168818", Offset = "0x1168818", VA = "0x1168818")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x897388", Offset = "0x897388")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x1168894", Offset = "0x1168894", VA = "0x1168894")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8973E8", Offset = "0x8973E8")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x1168924", Offset = "0x1168924", VA = "0x1168924")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x1168990", Offset = "0x1168990", VA = "0x1168990")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20005EF")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x1168998", Offset = "0x1168998", VA = "0x1168998")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x11689FC", Offset = "0x11689FC", VA = "0x11689FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x1168AE0", Offset = "0x1168AE0", VA = "0x1168AE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x1168C18", Offset = "0x1168C18", VA = "0x1168C18")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x1168C94", Offset = "0x1168C94", VA = "0x1168C94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x1168D70", Offset = "0x1168D70", VA = "0x1168D70")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20005F0")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001CDB")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001CDC")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001CDD")]
		EUDT_None,
		[Token(Token = "0x4001CDE")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20005F1")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8821DC", Offset = "0x8821DC")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170002FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CD3")]
				[Address(RVA = "0xC128E8", Offset = "0xC128E8", VA = "0xC128E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CD5")]
				[Address(RVA = "0xC12930", Offset = "0xC12930", VA = "0xC12930", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0xC126D4", Offset = "0xC126D4", VA = "0xC126D4")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0xC12700", Offset = "0xC12700", VA = "0xC12700", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0xC12704", Offset = "0xC12704", VA = "0xC12704", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0xC128F0", Offset = "0xC128F0", VA = "0xC128F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001CE0")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001CE1")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001CE2")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88EE34", Offset = "0x88EE34")]
		public GameObject mainCamera;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88EE6C", Offset = "0x88EE6C")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xF6A168", Offset = "0xF6A168", VA = "0xF6A168")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xF6A968", Offset = "0xF6A968", VA = "0xF6A968")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xF6AAB0", Offset = "0xF6AAB0", VA = "0xF6AAB0")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xF6ABE0", Offset = "0xF6ABE0", VA = "0xF6ABE0")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xF6AD10", Offset = "0xF6AD10", VA = "0xF6AD10")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xF6AA84", Offset = "0xF6AA84", VA = "0xF6AA84")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xF6ADF0", Offset = "0xF6ADF0", VA = "0xF6ADF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8974E8", Offset = "0x8974E8")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xF6AE5C", Offset = "0xF6AE5C", VA = "0xF6AE5C")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xF6A5A8", Offset = "0xF6A5A8", VA = "0xF6A5A8")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xF6AFB0", Offset = "0xF6AFB0", VA = "0xF6AFB0")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xF6AE90", Offset = "0xF6AE90", VA = "0xF6AE90")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xF6B2C8", Offset = "0xF6B2C8", VA = "0xF6B2C8")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xF6B3B8", Offset = "0xF6B3B8", VA = "0xF6B3B8")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xF6B43C", Offset = "0xF6B43C", VA = "0xF6B43C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x897548", Offset = "0x897548")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xF6B494", Offset = "0xF6B494", VA = "0xF6B494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x897558", Offset = "0x897558")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xF6B4EC", Offset = "0xF6B4EC", VA = "0xF6B4EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x897568", Offset = "0x897568")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20005F3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8821EC", Offset = "0x8821EC")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88224C", Offset = "0x88224C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0xC0A6CC", Offset = "0xC0A6CC", VA = "0xC0A6CC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0xC0A6D4", Offset = "0xC0A6D4", VA = "0xC0A6D4")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001CFA")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001CFB")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001CFC")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001CFD")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001CFE")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001CFF")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001D00")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001D01")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001D02")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001D03")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001D04")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x12B686C", Offset = "0x12B686C", VA = "0x12B686C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x12B68C0", Offset = "0x12B68C0", VA = "0x12B68C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x12B6D34", Offset = "0x12B6D34", VA = "0x12B6D34")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x12B6E20", Offset = "0x12B6E20", VA = "0x12B6E20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x12B6F84", Offset = "0x12B6F84", VA = "0x12B6F84")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x12B728C", Offset = "0x12B728C", VA = "0x12B728C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x12B7384", Offset = "0x12B7384", VA = "0x12B7384")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x12B74E4", Offset = "0x12B74E4", VA = "0x12B74E4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x12B701C", Offset = "0x12B701C", VA = "0x12B701C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x12B7070", Offset = "0x12B7070", VA = "0x12B7070")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x12B6BD8", Offset = "0x12B6BD8", VA = "0x12B6BD8")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x12B7620", Offset = "0x12B7620", VA = "0x12B7620")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20005F5")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001D19")]
		Default,
		[Token(Token = "0x4001D1A")]
		Generic,
		[Token(Token = "0x4001D1B")]
		PingPongBall,
		[Token(Token = "0x4001D1C")]
		Controller
	}
	[Token(Token = "0x20005F6")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170002FC")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0x12B7808", Offset = "0x12B7808", VA = "0x12B7808")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FD")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0x12B7810", Offset = "0x12B7810", VA = "0x12B7810")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FE")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0x12B7818", Offset = "0x12B7818", VA = "0x12B7818")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x12B7820", Offset = "0x12B7820", VA = "0x12B7820")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20005F7")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xFA5738", Offset = "0xFA5738", VA = "0xFA5738")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xFA5A20", Offset = "0xFA5A20", VA = "0xFA5A20")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xFA5A7C", Offset = "0xFA5A7C", VA = "0xFA5A7C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xFA5AC0", Offset = "0xFA5AC0", VA = "0xFA5AC0")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20005F8")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001D24")]
		TRIANGLES,
		[Token(Token = "0x4001D25")]
		QUADS
	}
	[Token(Token = "0x20005F9")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001D27")]
		ABSORPTION,
		[Token(Token = "0x4001D28")]
		TRANSMISSION,
		[Token(Token = "0x4001D29")]
		SCATTERING
	}
	[Token(Token = "0x20005FA")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20005FB")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001D2E")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001D2F")]
		public const string Tab = "    ";

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xE2FD50", Offset = "0xE2FD50", VA = "0xE2FD50")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8975C8", Offset = "0x8975C8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8975C8", Offset = "0x8975C8")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xE2FDE0", Offset = "0xE2FDE0", VA = "0xE2FDE0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x897628", Offset = "0x897628")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x897628", Offset = "0x897628")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xE2FE80", Offset = "0xE2FE80", VA = "0xE2FE80")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x897688", Offset = "0x897688")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x897688", Offset = "0x897688")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xE2FF10", Offset = "0xE2FF10", VA = "0xE2FF10")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8976E8", Offset = "0x8976E8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8976E8", Offset = "0x8976E8")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xE2FFA0", Offset = "0xE2FFA0", VA = "0xE2FFA0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x897748", Offset = "0x897748")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x897748", Offset = "0x897748")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20005FC")]
	public class CAPI
	{
		[Token(Token = "0x20005FD")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20005FE")]
		public enum Result
		{
			[Token(Token = "0x4001D3B")]
			Success = 0,
			[Token(Token = "0x4001D3C")]
			Failure = -1000,
			[Token(Token = "0x4001D3D")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001D3E")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001D3F")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001D40")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001D41")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001D42")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001D43")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20005FF")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0xC044A4", Offset = "0xC044A4", VA = "0xC044A4")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001D30")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001D38")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xE33AD0", Offset = "0xE33AD0", VA = "0xE33AD0")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xE33B60", Offset = "0xE33B60", VA = "0xE33B60")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xE33D78", Offset = "0xE33D78", VA = "0xE33D78")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xE33E60", Offset = "0xE33E60", VA = "0xE33E60")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xE33ED0", Offset = "0xE33ED0", VA = "0xE33ED0")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xE33F44", Offset = "0xE33F44", VA = "0xE33F44")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xE33FC4", Offset = "0xE33FC4", VA = "0xE33FC4")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xE34108", Offset = "0xE34108", VA = "0xE34108")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xE34188", Offset = "0xE34188", VA = "0xE34188")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xE342CC", Offset = "0xE342CC", VA = "0xE342CC")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xE3434C", Offset = "0xE3434C", VA = "0xE3434C")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xE343CC", Offset = "0xE343CC", VA = "0xE343CC")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xE3444C", Offset = "0xE3444C", VA = "0xE3444C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xE344CC", Offset = "0xE344CC", VA = "0xE344CC")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xE3455C", Offset = "0xE3455C", VA = "0xE3455C")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xE345EC", Offset = "0xE345EC", VA = "0xE345EC")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xE3467C", Offset = "0xE3467C", VA = "0xE3467C")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xE346FC", Offset = "0xE346FC", VA = "0xE346FC")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xE3477C", Offset = "0xE3477C", VA = "0xE3477C")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xE3480C", Offset = "0xE3480C", VA = "0xE3480C")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xE3489C", Offset = "0xE3489C", VA = "0xE3489C")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xE3492C", Offset = "0xE3492C", VA = "0xE3492C")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xE349AC", Offset = "0xE349AC", VA = "0xE349AC")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xE34A4C", Offset = "0xE34A4C", VA = "0xE34A4C")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xE34AC8", Offset = "0xE34AC8", VA = "0xE34AC8")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xE34B68", Offset = "0xE34B68", VA = "0xE34B68")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xE34C28", Offset = "0xE34C28", VA = "0xE34C28")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xE34CF8", Offset = "0xE34CF8", VA = "0xE34CF8")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xE34D88", Offset = "0xE34D88", VA = "0xE34D88")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xE34E18", Offset = "0xE34E18", VA = "0xE34E18")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xE34EA8", Offset = "0xE34EA8", VA = "0xE34EA8")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xE34F38", Offset = "0xE34F38", VA = "0xE34F38")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xE34FC8", Offset = "0xE34FC8", VA = "0xE34FC8")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xE35048", Offset = "0xE35048", VA = "0xE35048")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xE35164", Offset = "0xE35164", VA = "0xE35164")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xE350D4", Offset = "0xE350D4", VA = "0xE350D4")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xE35378", Offset = "0xE35378", VA = "0xE35378")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xE354E8", Offset = "0xE354E8", VA = "0xE354E8")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001D18")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xE35568", Offset = "0xE35568", VA = "0xE35568")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xE35810", Offset = "0xE35810", VA = "0xE35810")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xE35890", Offset = "0xE35890", VA = "0xE35890")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xE35A00", Offset = "0xE35A00", VA = "0xE35A00")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xE35A80", Offset = "0xE35A80", VA = "0xE35A80")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xE35BF0", Offset = "0xE35BF0", VA = "0xE35BF0")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xE35C70", Offset = "0xE35C70", VA = "0xE35C70")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xE35DE0", Offset = "0xE35DE0", VA = "0xE35DE0")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xE35E60", Offset = "0xE35E60", VA = "0xE35E60")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xE35FD0", Offset = "0xE35FD0", VA = "0xE35FD0")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xE36050", Offset = "0xE36050", VA = "0xE36050")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xE360D0", Offset = "0xE360D0", VA = "0xE360D0")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xE36168", Offset = "0xE36168", VA = "0xE36168")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xE361E8", Offset = "0xE361E8", VA = "0xE361E8")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xE363C0", Offset = "0xE363C0", VA = "0xE363C0")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xE36518", Offset = "0xE36518", VA = "0xE36518")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xE36340", Offset = "0xE36340", VA = "0xE36340")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xE36598", Offset = "0xE36598", VA = "0xE36598")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xE36618", Offset = "0xE36618", VA = "0xE36618")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xE366A8", Offset = "0xE366A8", VA = "0xE366A8")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xE36728", Offset = "0xE36728", VA = "0xE36728")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xE367B8", Offset = "0xE367B8", VA = "0xE367B8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xE36838", Offset = "0xE36838", VA = "0xE36838")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xE368B8", Offset = "0xE368B8", VA = "0xE368B8")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xE36B44", Offset = "0xE36B44", VA = "0xE36B44")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xE36BD4", Offset = "0xE36BD4", VA = "0xE36BD4")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xE36E04", Offset = "0xE36E04", VA = "0xE36E04")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xE36E9C", Offset = "0xE36E9C", VA = "0xE36E9C")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xE36FEC", Offset = "0xE36FEC", VA = "0xE36FEC")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xE3706C", Offset = "0xE3706C", VA = "0xE3706C")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xE370EC", Offset = "0xE370EC", VA = "0xE370EC")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xE37240", Offset = "0xE37240", VA = "0xE37240")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xE372C0", Offset = "0xE372C0", VA = "0xE372C0")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xE37414", Offset = "0xE37414", VA = "0xE37414")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xE37494", Offset = "0xE37494", VA = "0xE37494")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xE37524", Offset = "0xE37524", VA = "0xE37524")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xE375B4", Offset = "0xE375B4", VA = "0xE375B4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xE37644", Offset = "0xE37644", VA = "0xE37644")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xE376C4", Offset = "0xE376C4", VA = "0xE376C4")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xE3774C", Offset = "0xE3774C", VA = "0xE3774C")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xE377D4", Offset = "0xE377D4", VA = "0xE377D4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xE37854", Offset = "0xE37854", VA = "0xE37854")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xE378D4", Offset = "0xE378D4", VA = "0xE378D4")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xE37988", Offset = "0xE37988", VA = "0xE37988")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xE37A18", Offset = "0xE37A18", VA = "0xE37A18")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xE37AA8", Offset = "0xE37AA8", VA = "0xE37AA8")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xE37B28", Offset = "0xE37B28", VA = "0xE37B28")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xE37BA8", Offset = "0xE37BA8", VA = "0xE37BA8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xE37C28", Offset = "0xE37C28", VA = "0xE37C28")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xE37CC0", Offset = "0xE37CC0", VA = "0xE37CC0")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xE37D50", Offset = "0xE37D50", VA = "0xE37D50")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xE37DE0", Offset = "0xE37DE0", VA = "0xE37DE0")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xE37E70", Offset = "0xE37E70", VA = "0xE37E70")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xE37F08", Offset = "0xE37F08", VA = "0xE37F08")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xE37FA0", Offset = "0xE37FA0", VA = "0xE37FA0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xE38020", Offset = "0xE38020", VA = "0xE38020")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xE380A0", Offset = "0xE380A0", VA = "0xE380A0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xE381F4", Offset = "0xE381F4", VA = "0xE381F4")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xE38274", Offset = "0xE38274", VA = "0xE38274")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xE383C8", Offset = "0xE383C8", VA = "0xE383C8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xE38448", Offset = "0xE38448", VA = "0xE38448")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xE38584", Offset = "0xE38584", VA = "0xE38584")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xE38604", Offset = "0xE38604", VA = "0xE38604")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xE387D8", Offset = "0xE387D8", VA = "0xE387D8")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xE38AB8", Offset = "0xE38AB8", VA = "0xE38AB8")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xE38758", Offset = "0xE38758", VA = "0xE38758")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xE38B48", Offset = "0xE38B48", VA = "0xE38B48")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xE38BC8", Offset = "0xE38BC8", VA = "0xE38BC8")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xE38C58", Offset = "0xE38C58", VA = "0xE38C58")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xE38CE8", Offset = "0xE38CE8", VA = "0xE38CE8")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xE38D78", Offset = "0xE38D78", VA = "0xE38D78")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xE38E18", Offset = "0xE38E18", VA = "0xE38E18")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xE38EB8", Offset = "0xE38EB8", VA = "0xE38EB8")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xE38F58", Offset = "0xE38F58", VA = "0xE38F58")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xE38FD8", Offset = "0xE38FD8", VA = "0xE38FD8")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xE39058", Offset = "0xE39058", VA = "0xE39058")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xE390D8", Offset = "0xE390D8", VA = "0xE390D8")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xE39158", Offset = "0xE39158", VA = "0xE39158")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xE391D8", Offset = "0xE391D8", VA = "0xE391D8")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xE39300", Offset = "0xE39300", VA = "0xE39300")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xE39398", Offset = "0xE39398", VA = "0xE39398")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xE39418", Offset = "0xE39418", VA = "0xE39418")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xE39478", Offset = "0xE39478", VA = "0xE39478")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xE395C0", Offset = "0xE395C0", VA = "0xE395C0")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xE39650", Offset = "0xE39650", VA = "0xE39650")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xE397A8", Offset = "0xE397A8", VA = "0xE397A8")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xE39838", Offset = "0xE39838", VA = "0xE39838")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xE398D8", Offset = "0xE398D8", VA = "0xE398D8")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xE39CA8", Offset = "0xE39CA8", VA = "0xE39CA8")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xE39D28", Offset = "0xE39D28", VA = "0xE39D28")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xE39DC0", Offset = "0xE39DC0", VA = "0xE39DC0")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xE3A620", Offset = "0xE3A620", VA = "0xE3A620")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xE3A6A0", Offset = "0xE3A6A0", VA = "0xE3A6A0")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xE33A6C", Offset = "0xE33A6C", VA = "0xE33A6C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8977A8", Offset = "0x8977A8")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xE3A738", Offset = "0xE3A738", VA = "0xE3A738")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xE3A7BC", Offset = "0xE3A7BC", VA = "0xE3A7BC")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xE3A83C", Offset = "0xE3A83C", VA = "0xE3A83C")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xE3A8BC", Offset = "0xE3A8BC", VA = "0xE3A8BC")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xE3A93C", Offset = "0xE3A93C", VA = "0xE3A93C")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xE3B300", Offset = "0xE3B300", VA = "0xE3B300")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xE3B380", Offset = "0xE3B380", VA = "0xE3B380")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xE3B7A0", Offset = "0xE3B7A0", VA = "0xE3B7A0")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xE3B708", Offset = "0xE3B708", VA = "0xE3B708")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xE3B814", Offset = "0xE3B814", VA = "0xE3B814")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000600")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x88EF24", Offset = "0x88EF24")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xFA12A0", Offset = "0xFA12A0", VA = "0xFA12A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xFA12A4", Offset = "0xFA12A4", VA = "0xFA12A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xFA134C", Offset = "0xFA134C", VA = "0xFA134C")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000601")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88EF70", Offset = "0x88EF70")]
		public bool autoRetrigger;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x88EFA8", Offset = "0x88EFA8")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88EFCC", Offset = "0x88EFCC")]
		public Transform[] playPositions;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xE1E8E8", Offset = "0xE1E8E8", VA = "0xE1E8E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xE1EA8C", Offset = "0xE1EA8C", VA = "0xE1EA8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xE1EC68", Offset = "0xE1EC68", VA = "0xE1EC68")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xE1EAEC", Offset = "0xE1EAEC", VA = "0xE1EAEC")]
		public void Play()
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xE1ED28", Offset = "0xE1ED28", VA = "0xE1ED28")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xE1EE98", Offset = "0xE1EE98", VA = "0xE1EE98")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000602")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001D52")]
		Default,
		[Token(Token = "0x4001D53")]
		Preload,
		[Token(Token = "0x4001D54")]
		ManualPreload
	}
	[Token(Token = "0x2000603")]
	public enum Fade
	{
		[Token(Token = "0x4001D56")]
		In,
		[Token(Token = "0x4001D57")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000604")]
	public class SoundGroup
	{
		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88F004", Offset = "0x88F004")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88F020", Offset = "0x88F020")]
		public int playingSoundCount;

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xE12E98", Offset = "0xE12E98", VA = "0xE12E98")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xE12F34", Offset = "0xE12F34", VA = "0xE12F34")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xE11204", Offset = "0xE11204", VA = "0xE11204")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xE1150C", Offset = "0xE1150C", VA = "0xE1150C")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xE12370", Offset = "0xE12370", VA = "0xE12370")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000605")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000606")]
		public enum Fade
		{
			[Token(Token = "0x4001D7F")]
			In,
			[Token(Token = "0x4001D80")]
			Out
		}

		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88225C", Offset = "0x88225C")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x4001D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0xC03DB0", Offset = "0xC03DB0", VA = "0xC03DB0")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0xC03DB8", Offset = "0xC03DB8", VA = "0xC03DB8")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88226C", Offset = "0x88226C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0xC03D1C", Offset = "0xC03D1C", VA = "0xC03D1C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0xC03D24", Offset = "0xC03D24", VA = "0xC03D24")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F030", Offset = "0x88F030")]
		public bool makePersistent;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F068", Offset = "0x88F068")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F0A0", Offset = "0x88F0A0")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F0D8", Offset = "0x88F0D8")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F110", Offset = "0x88F110")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F148", Offset = "0x88F148")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F180", Offset = "0x88F180")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F1B8", Offset = "0x88F1B8")]
		public bool verboseLogging;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F1F0", Offset = "0x88F1F0")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F228", Offset = "0x88F228")]
		public float volumeSoundFX;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F260", Offset = "0x88F260")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170002FF")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001D96")]
			[Address(RVA = "0xE29E30", Offset = "0xE29E30", VA = "0xE29E30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000300")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0xE29F18", Offset = "0xE29F18", VA = "0xE29F18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000301")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0xE29F7C", Offset = "0xE29F7C", VA = "0xE29F7C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000302")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0xE29FEC", Offset = "0xE29FEC", VA = "0xE29FEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000303")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0xE2A05C", Offset = "0xE2A05C", VA = "0xE2A05C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0xE2A0CC", Offset = "0xE2A0CC", VA = "0xE2A0CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0xE2A13C", Offset = "0xE2A13C", VA = "0xE2A13C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0xE2BFE4", Offset = "0xE2BFE4", VA = "0xE2BFE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xE2A1AC", Offset = "0xE2A1AC", VA = "0xE2A1AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xE2A3E8", Offset = "0xE2A3E8", VA = "0xE2A3E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xE2A1B0", Offset = "0xE2A1B0", VA = "0xE2A1B0")]
		private void Init()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xE2B040", Offset = "0xE2B040", VA = "0xE2B040")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xE2A548", Offset = "0xE2A548", VA = "0xE2A548")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xE2B6EC", Offset = "0xE2B6EC", VA = "0xE2B6EC")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xE2B880", Offset = "0xE2B880", VA = "0xE2B880")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xE2BA54", Offset = "0xE2BA54", VA = "0xE2BA54")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xE2BB5C", Offset = "0xE2BB5C", VA = "0xE2BB5C")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xE2BBE8", Offset = "0xE2BBE8", VA = "0xE2BBE8")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xE2C048", Offset = "0xE2C048", VA = "0xE2C048")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xE2C0BC", Offset = "0xE2C0BC", VA = "0xE2C0BC")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xE2A9FC", Offset = "0xE2A9FC", VA = "0xE2A9FC")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xE2B044", Offset = "0xE2B044", VA = "0xE2B044")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xE2C204", Offset = "0xE2C204", VA = "0xE2C204")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xE2C334", Offset = "0xE2C334", VA = "0xE2C334")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xE2C468", Offset = "0xE2C468", VA = "0xE2C468")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xE2C130", Offset = "0xE2C130", VA = "0xE2C130")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xE2C5B0", Offset = "0xE2C5B0", VA = "0xE2C5B0")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xE2C668", Offset = "0xE2C668", VA = "0xE2C668")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xE2C784", Offset = "0xE2C784", VA = "0xE2C784")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xE1EC78", Offset = "0xE1EC78", VA = "0xE1EC78")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xE1EDE8", Offset = "0xE1EDE8", VA = "0xE1EDE8")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xE2C83C", Offset = "0xE2C83C", VA = "0xE2C83C")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xE2C904", Offset = "0xE2C904", VA = "0xE2C904")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xE2C998", Offset = "0xE2C998", VA = "0xE2C998")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xE2CA5C", Offset = "0xE2CA5C", VA = "0xE2CA5C")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xE2CAFC", Offset = "0xE2CAFC", VA = "0xE2CAFC")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xE2CBB4", Offset = "0xE2CBB4", VA = "0xE2CBB4")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xE2D644", Offset = "0xE2D644", VA = "0xE2D644")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xE2DD3C", Offset = "0xE2DD3C", VA = "0xE2DD3C")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xE2DF00", Offset = "0xE2DF00", VA = "0xE2DF00")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xE2EA24", Offset = "0xE2EA24", VA = "0xE2EA24")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xE2CDA0", Offset = "0xE2CDA0", VA = "0xE2CDA0")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xE2EB40", Offset = "0xE2EB40", VA = "0xE2EB40")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xE2EC10", Offset = "0xE2EC10", VA = "0xE2EC10")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xE2ECFC", Offset = "0xE2ECFC", VA = "0xE2ECFC")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xE2EF24", Offset = "0xE2EF24", VA = "0xE2EF24")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xE2F078", Offset = "0xE2F078", VA = "0xE2F078")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xE2F19C", Offset = "0xE2F19C", VA = "0xE2F19C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xE2F2C8", Offset = "0xE2F2C8", VA = "0xE2F2C8")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xE2F3A8", Offset = "0xE2F3A8", VA = "0xE2F3A8")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xE2F4E4", Offset = "0xE2F4E4", VA = "0xE2F4E4")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xE2F8E8", Offset = "0xE2F8E8", VA = "0xE2F8E8")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000609")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001D85")]
		None = -1,
		[Token(Token = "0x4001D86")]
		Reserved,
		[Token(Token = "0x4001D87")]
		Any
	}
	[Serializable]
	[Token(Token = "0x200060A")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x13A47B4", Offset = "0x13A47B4", VA = "0x13A47B4")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x200060B")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x13A4104", Offset = "0x13A4104", VA = "0x13A4104")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200060C")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200060D")]
		public enum FadeState
		{
			[Token(Token = "0x4001D9E")]
			Null,
			[Token(Token = "0x4001D9F")]
			FadingIn,
			[Token(Token = "0x4001DA0")]
			FadingOut,
			[Token(Token = "0x4001DA1")]
			Ducking
		}

		[Token(Token = "0x200060E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88227C", Offset = "0x88227C")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000310")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DFE")]
				[Address(RVA = "0xF90744", Offset = "0xF90744", VA = "0xF90744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000311")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E00")]
				[Address(RVA = "0xF9078C", Offset = "0xF9078C", VA = "0xF9078C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xF90630", Offset = "0xF90630", VA = "0xF90630")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0xF9065C", Offset = "0xF9065C", VA = "0xF9065C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xF90660", Offset = "0xF90660", VA = "0xF90660", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0xF9074C", Offset = "0xF9074C", VA = "0xF9074C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88228C", Offset = "0x88228C")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000312")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E04")]
				[Address(RVA = "0xF90BB0", Offset = "0xF90BB0", VA = "0xF90BB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000313")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E06")]
				[Address(RVA = "0xF90BF8", Offset = "0xF90BF8", VA = "0xF90BF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E01")]
			[Address(RVA = "0xF90A50", Offset = "0xF90A50", VA = "0xF90A50")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001E02")]
			[Address(RVA = "0xF90A7C", Offset = "0xF90A7C", VA = "0xF90A7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E03")]
			[Address(RVA = "0xF90A80", Offset = "0xF90A80", VA = "0xF90A80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xF90BB8", Offset = "0xF90BB8", VA = "0xF90BB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88229C", Offset = "0x88229C")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000314")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E0A")]
				[Address(RVA = "0xF90A00", Offset = "0xF90A00", VA = "0xF90A00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000315")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E0C")]
				[Address(RVA = "0xF90A48", Offset = "0xF90A48", VA = "0xF90A48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xF90794", Offset = "0xF90794", VA = "0xF90794")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xF907C0", Offset = "0xF907C0", VA = "0xF907C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xF907C4", Offset = "0xF907C4", VA = "0xF907C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xF90A08", Offset = "0xF90A08", VA = "0xF90A08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88F298", Offset = "0x88F298")]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88F2A8", Offset = "0x88F2A8")]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88F2B8", Offset = "0x88F2B8")]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88F2C8", Offset = "0x88F2C8")]
		public float endPlayTime;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88F2D8", Offset = "0x88F2D8")]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88F2E8", Offset = "0x88F2E8")]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88F2F8", Offset = "0x88F2F8")]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88F308", Offset = "0x88F308")]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88F318", Offset = "0x88F318")]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88F328", Offset = "0x88F328")]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x88F338", Offset = "0x88F338")]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000307")]
		public float volume
		{
			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0xE10DA8", Offset = "0xE10DA8", VA = "0xE10DA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0xE10DC4", Offset = "0xE10DC4", VA = "0xE10DC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public float pitch
		{
			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0xE10DE0", Offset = "0xE10DE0", VA = "0xE10DE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0xE10DFC", Offset = "0xE10DFC", VA = "0xE10DFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public AudioClip clip
		{
			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0xE10E18", Offset = "0xE10E18", VA = "0xE10E18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0xE10E34", Offset = "0xE10E34", VA = "0xE10E34")]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public float time
		{
			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0xE10E50", Offset = "0xE10E50", VA = "0xE10E50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0xE10E6C", Offset = "0xE10E6C", VA = "0xE10E6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public float length
		{
			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0xE10E88", Offset = "0xE10E88", VA = "0xE10E88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030C")]
		public bool loop
		{
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0xE10F3C", Offset = "0xE10F3C", VA = "0xE10F3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0xE10F58", Offset = "0xE10F58", VA = "0xE10F58")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public bool mute
		{
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0xE10F78", Offset = "0xE10F78", VA = "0xE10F78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0xE10F94", Offset = "0xE10F94", VA = "0xE10F94")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0xE10FB4", Offset = "0xE10FB4", VA = "0xE10FB4")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0xE10FD0", Offset = "0xE10FD0", VA = "0xE10FD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public bool isPlaying
		{
			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0xE10FEC", Offset = "0xE10FEC", VA = "0xE10FEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xE11008", Offset = "0xE11008", VA = "0xE11008")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xE111C0", Offset = "0xE111C0", VA = "0xE111C0")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xE11240", Offset = "0xE11240", VA = "0xE11240")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xE11248", Offset = "0xE11248", VA = "0xE11248")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xE11250", Offset = "0xE11250", VA = "0xE11250")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xE11258", Offset = "0xE11258", VA = "0xE11258")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xE11260", Offset = "0xE11260", VA = "0xE11260")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xE11304", Offset = "0xE11304", VA = "0xE11304")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xE11370", Offset = "0xE11370", VA = "0xE11370")]
		public void Play()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xE113D0", Offset = "0xE113D0", VA = "0xE113D0")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xE11408", Offset = "0xE11408", VA = "0xE11408")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xE11548", Offset = "0xE11548", VA = "0xE11548")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xE115A0", Offset = "0xE115A0", VA = "0xE115A0")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xE116B0", Offset = "0xE116B0", VA = "0xE116B0")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xE11764", Offset = "0xE11764", VA = "0xE11764")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xE117A4", Offset = "0xE117A4", VA = "0xE117A4")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xE117D0", Offset = "0xE117D0", VA = "0xE117D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x897808", Offset = "0x897808")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xE1185C", Offset = "0xE1185C", VA = "0xE1185C")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xE11944", Offset = "0xE11944", VA = "0xE11944")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xE11A64", Offset = "0xE11A64", VA = "0xE11A64")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xE11ADC", Offset = "0xE11ADC", VA = "0xE11ADC")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xE11B74", Offset = "0xE11B74", VA = "0xE11B74")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xE118C4", Offset = "0xE118C4", VA = "0xE118C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x897868", Offset = "0x897868")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xE119C0", Offset = "0xE119C0", VA = "0xE119C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8978C8", Offset = "0x8978C8")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xE11C10", Offset = "0xE11C10", VA = "0xE11C10")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000611")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4001DBE")]
		Random,
		[Token(Token = "0x4001DBF")]
		Sequential
	}
	[Token(Token = "0x2000612")]
	public enum FreqHint
	{
		[Token(Token = "0x4001DC1")]
		None,
		[Token(Token = "0x4001DC2")]
		Wide,
		[Token(Token = "0x4001DC3")]
		Narrow
	}
	[Token(Token = "0x2000613")]
	public enum SoundPriority
	{
		[Token(Token = "0x4001DC5")]
		VeryLow = -2,
		[Token(Token = "0x4001DC6")]
		Low,
		[Token(Token = "0x4001DC7")]
		Default,
		[Token(Token = "0x4001DC8")]
		High,
		[Token(Token = "0x4001DC9")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000614")]
	public class OSPProps
	{
		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F348", Offset = "0x88F348")]
		public bool enableSpatialization;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F380", Offset = "0x88F380")]
		public bool useFastOverride;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88F3B8", Offset = "0x88F3B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F3B8", Offset = "0x88F3B8")]
		public float gain;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F40C", Offset = "0x88F40C")]
		public bool enableInvSquare;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F444", Offset = "0x88F444")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88F444", Offset = "0x88F444")]
		public float volumetric;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x88F49C", Offset = "0x88F49C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F49C", Offset = "0x88F49C")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xF5E6B4", Offset = "0xF5E6B4", VA = "0xF5E6B4")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000615")]
	public class SoundFX
	{
		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F4FC", Offset = "0x88F4FC")]
		public string name;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F534", Offset = "0x88F534")]
		public SoundFXNext playback;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F56C", Offset = "0x88F56C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88F56C", Offset = "0x88F56C")]
		public float volume;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x88F5C0", Offset = "0x88F5C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F5C0", Offset = "0x88F5C0")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x88F61C", Offset = "0x88F61C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F61C", Offset = "0x88F61C")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F67C", Offset = "0x88F67C")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F6B4", Offset = "0x88F6B4")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F6EC", Offset = "0x88F6EC")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88F724", Offset = "0x88F724")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F724", Offset = "0x88F724")]
		public float spread;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88F77C", Offset = "0x88F77C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F77C", Offset = "0x88F77C")]
		public float pctChanceToPlay;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F7D0", Offset = "0x88F7D0")]
		public SoundPriority priority;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x88F808", Offset = "0x88F808")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F808", Offset = "0x88F808")]
		public Vector2 delay;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F864", Offset = "0x88F864")]
		public bool looping;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88F89C", Offset = "0x88F89C")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000316")]
		public int Length
		{
			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xE120EC", Offset = "0xE120EC", VA = "0xE120EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000317")]
		public bool IsValid
		{
			[Token(Token = "0x6001E10")]
			[Address(RVA = "0xE12108", Offset = "0xE12108", VA = "0xE12108")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000318")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xE121A8", Offset = "0xE121A8", VA = "0xE121A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E12")]
			[Address(RVA = "0xE121B0", Offset = "0xE121B0", VA = "0xE121B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001E13")]
			[Address(RVA = "0xE121B8", Offset = "0xE121B8", VA = "0xE121B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700031A")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001E14")]
			[Address(RVA = "0xE121C4", Offset = "0xE121C4", VA = "0xE121C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xE11C28", Offset = "0xE11C28", VA = "0xE11C28")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xE121DC", Offset = "0xE121DC", VA = "0xE121DC")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xE122AC", Offset = "0xE122AC", VA = "0xE122AC")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xE12348", Offset = "0xE12348", VA = "0xE12348")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xE12390", Offset = "0xE12390", VA = "0xE12390")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xE12488", Offset = "0xE12488", VA = "0xE12488")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xE12494", Offset = "0xE12494", VA = "0xE12494")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xE12570", Offset = "0xE12570", VA = "0xE12570")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xE12684", Offset = "0xE12684", VA = "0xE12684")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xE12710", Offset = "0xE12710", VA = "0xE12710")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xE127A4", Offset = "0xE127A4", VA = "0xE127A4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xE12830", Offset = "0xE12830", VA = "0xE12830")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xE128BC", Offset = "0xE128BC", VA = "0xE128BC")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000616")]
	public class SoundFXRef
	{
		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x1700031B")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001E21")]
			[Address(RVA = "0xE12934", Offset = "0xE12934", VA = "0xE12934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		public string name
		{
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0xE12A38", Offset = "0xE12A38", VA = "0xE12A38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E23")]
			[Address(RVA = "0xE12A40", Offset = "0xE12A40", VA = "0xE12A40")]
			set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public int Length
		{
			[Token(Token = "0x6001E25")]
			[Address(RVA = "0xE12A48", Offset = "0xE12A48", VA = "0xE12A48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031E")]
		public bool IsValid
		{
			[Token(Token = "0x6001E26")]
			[Address(RVA = "0xE12A8C", Offset = "0xE12A8C", VA = "0xE12A8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xE12964", Offset = "0xE12964", VA = "0xE12964")]
		private void Init()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xE12AC4", Offset = "0xE12AC4", VA = "0xE12AC4")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xE12AFC", Offset = "0xE12AFC", VA = "0xE12AFC")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xE12B3C", Offset = "0xE12B3C", VA = "0xE12B3C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xE12B84", Offset = "0xE12B84", VA = "0xE12B84")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xE12C04", Offset = "0xE12C04", VA = "0xE12C04")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xE12C44", Offset = "0xE12C44", VA = "0xE12C44")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xE12C94", Offset = "0xE12C94", VA = "0xE12C94")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xE12CCC", Offset = "0xE12CCC", VA = "0xE12CCC")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xE12D0C", Offset = "0xE12D0C", VA = "0xE12D0C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xE12D44", Offset = "0xE12D44", VA = "0xE12D44")]
		public SoundFXRef()
		{
		}
	}
}
